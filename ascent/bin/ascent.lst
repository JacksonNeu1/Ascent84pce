    1 00:0000 -  -  -  -  
    2 00:0000 -  -  -  -  #include "includes\ti84pce.inc"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\includes\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "ascent.asm"
    3 00:0000 -  -  -  -  
    4 00:0000 -  -  -  -   .assume ADL=1
    5 00:0000 -  -  -  -   .org userMem-2
    6 D1:A87F EF 7B -  -   .db tExtTok,tAsm84CeCmp
    7 D1:A881 -  -  -  -  
    8 D1:A881 -  -  -  -  
    9 D1:A881 -  -  -  -  
   10 D1:A881 -  -  -  -  ;0E30000h + 0200h
   11 D1:A881 -  -  -  -  
   12 D1:A881 CD 28 08 02 	call _homeup
   13 D1:A885 CD 10 08 02 	call _ClrScrnFull
   14 D1:A889 -  -  -  -  
   15 D1:A889 CD 48 08 02 	call _RunIndicOff		; turn off run indicator
   16 D1:A88D F3 -  -  -  	di			
   17 D1:A88E -  -  -  -  	
   18 D1:A88E -  -  -  -  	
   19 D1:A88E CD 38 DB D1 	call setup_palette_1
   20 D1:A892 -  -  -  -  
   21 D1:A892 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255
   22 D1:A896 3E 25 -  -  	ld	a,lcdBpp4
   23 D1:A898 32 18 00 E3 	ld (mpLcdCtrl),a	
   24 D1:A89C -  -  -  -  
   25 D1:A89C -  -  -  -  
   26 D1:A89C -  -  -  -  
   27 D1:A89C -  -  -  -  
   28 D1:A89C -  -  -  -  	;call sdcomp_set_fast
   29 D1:A89C -  -  -  -  	;call sdcomp_set_flip
   30 D1:A89C -  -  -  -  	;call sdcomp_reset_offset
   31 D1:A89C -  -  -  -  	;ld hl, Tree_5 
   32 D1:A89C -  -  -  -  	;ld de, Tree_5_Fast_F_0
   33 D1:A89C -  -  -  -  	;call sdcomp_set_2bpc
   34 D1:A89C -  -  -  -  	;call sprite_decompress
   35 D1:A89C -  -  -  -  	
   36 D1:A89C -  -  -  -  	;call sdcomp_set_fast
   37 D1:A89C -  -  -  -  	;call sdcomp_reset_flip
   38 D1:A89C -  -  -  -  	;call sdcomp_reset_offset
   39 D1:A89C -  -  -  -  	;ld hl, Moss_0 
   40 D1:A89C -  -  -  -  	;ld de, Moss_0_Fast_0
   41 D1:A89C -  -  -  -  	;call sprite_decompress
   42 D1:A89C -  -  -  -  	
   43 D1:A89C -  -  -  -  	;call prgmpause
   44 D1:A89C -  -  -  -  	;call prgmpause
   45 D1:A89C -  -  -  -  
   46 D1:A89C -  -  -  -  
   47 D1:A89C 21 00 23 00 	ld hl,$002300
   48 D1:A8A0 22 F3 BF D1 	ld (player_x_pos),hl 
   49 D1:A8A4 21 00 0E 01 	ld hl,$010E00
   50 D1:A8A8 22 F6 BF D1 	ld (player_y_pos),hl 
   51 D1:A8AC 22 02 C0 D1 	ld (player_y_pos_prev),hl
   52 D1:A8B0 -  -  -  -  	
   53 D1:A8B0 CD E7 C4 D1 	call player_to_cam_coords
   54 D1:A8B4 11 50 00 00 	ld de,80
   55 D1:A8B8 ED 52 -  -  	sbc hl,de 
   56 D1:A8BA D2 C2 A8 D1 	jp nc, set_cam_0_pos_skip_start
   57 D1:A8BE 21 00 00 00 	ld hl,0
   58 D1:A8C2 -  -  -  -  set_cam_0_pos_skip_start:
   59 D1:A8C2 22 EE AB D1 	ld (cam_pos),hl
   60 D1:A8C6 -  -  -  -  	;ld (bg_cam_pos),hl
   61 D1:A8C6 -  -  -  -  	
   62 D1:A8C6 -  -  -  -  	
   63 D1:A8C6 3E 02 -  -  	ld a,%00000010;disable, 32768hz
   64 D1:A8C8 32 30 00 F2 	ld ($F20030),a	
   65 D1:A8CC -  -  -  -  	
   66 D1:A8CC CD B1 B8 D1 	call setup_decompress_queue
   67 D1:A8D0 -  -  -  -  	
   68 D1:A8D0 -  -  -  -  	;Decompress sprites in preframes for setup
   69 D1:A8D0 21 EC D1 D1 	ld hl,decompress_frame_up_pre2 
   70 D1:A8D4 CD B7 B9 D1 	call cfdc_direct_add_decompress_frame
   71 D1:A8D8 CD FE B8 D1 	call continue_decompressions ;Run decompression (Will finish as timer has not started)
   72 D1:A8DC 21 80 D2 D1 	ld hl,decompress_frame_up_pre1
   73 D1:A8E0 CD B7 B9 D1 	call cfdc_direct_add_decompress_frame
   74 D1:A8E4 CD FE B8 D1 	call continue_decompressions ;Run decompression (Will finish as timer has not started)
   75 D1:A8E8 -  -  -  -  	
   76 D1:A8E8 -  -  -  -  	;call draw_fg
   77 D1:A8E8 -  -  -  -  	
   78 D1:A8E8 3E 00 -  -  	ld a,0
   79 D1:A8EA CD A9 B9 D1 	call cfdc_cam_move_up ;need to skip here for frame 0
   80 D1:A8EE -  -  -  -  	
   81 D1:A8EE -  -  -  -  	;call prgmpause
   82 D1:A8EE -  -  -  -  
   83 D1:A8EE CD FE B8 D1 	call continue_decompressions
   84 D1:A8F2 -  -  -  -  	
   85 D1:A8F2 -  -  -  -  	;call prgmpause
   86 D1:A8F2 00 -  -  -  	nop ;This needs to be here for some reason
   87 D1:A8F3 -  -  -  -  ;	call decompress_calls
   88 D1:A8F3 -  -  -  -  	
   89 D1:A8F3 -  -  -  -  
   90 D1:A8F3 -  -  -  -  	
   91 D1:A8F3 -  -  -  -  	;gen purp timers
   92 D1:A8F3 -  -  -  -  		; 76543210	
   93 D1:A8F3 3E 03 -  -  	ld a,%00000011;enable, 32768hz
   94 D1:A8F5 32 30 00 F2 	ld ($F20030),a
   95 D1:A8F9 -  -  -  -  	;	  fedcba98
   96 D1:A8F9 3E 02 -  -  	ld a,%00000010;count up
   97 D1:A8FB 32 31 00 F2 	ld ($F20031),a
   98 D1:A8FF -  -  -  -  	
   99 D1:A8FF 21 00 2C D5 	ld hl,vRam + (160*240*2)
  100 D1:A903 22 F4 AB D1 	ld (draw_buffer),hl
  101 D1:A907 21 00 C2 D5 	ld hl,vRam + (160*240*3)
  102 D1:A90B 22 10 00 E3 	ld (mpLcdBase),hl
  103 D1:A90F -  -  -  -  	
  104 D1:A90F -  -  -  -  	
  105 D1:A90F -  -  -  -  
  106 D1:A90F -  -  -  -  	;ld hl,BG_buffer+(160*5)
  107 D1:A90F -  -  -  -  	;ld (dbgl_vram_line_start),hl
  108 D1:A90F -  -  -  -  
  109 D1:A90F -  -  -  -  	;ld hl,BG_Data_1
  110 D1:A90F -  -  -  -  	;ld a,10
  111 D1:A90F -  -  -  -  	;call draw_bg_line
  112 D1:A90F -  -  -  -  	
  113 D1:A90F -  -  -  -  	
  114 D1:A90F -  -  -  -  	;call prgmpause
  115 D1:A90F -  -  -  -  
  116 D1:A90F -  -  -  -  	;call draw_mg
  117 D1:A90F -  -  -  -  
  118 D1:A90F CD 47 AD D1 	call setup_bg ;after initial decompressions and cam setup
  119 D1:A913 -  -  -  -  	;call prgmpause
  120 D1:A913 -  -  -  -  	;call prgmpause
  121 D1:A913 -  -  -  -  main_loop:
  122 D1:A913 -  -  -  -  
  123 D1:A913 -  -  -  -  	
  124 D1:A913 -  -  -  -  
  125 D1:A913 -  -  -  -  	;clear timer
  126 D1:A913 3E 00 -  -  	ld a,0
  127 D1:A915 32 00 00 F2 	ld ($F20000),a;32768hz
  128 D1:A919 32 01 00 F2 	ld ($F20001),a;128hz
  129 D1:A91D 32 02 00 F2 	ld ($F20002),a;0.5hz
  130 D1:A921 32 03 00 F2 	ld ($F20003),a
  131 D1:A925 -  -  -  -  	
  132 D1:A925 -  -  -  -  	;Instructions here 
  133 D1:A925 -  -  -  -  	
  134 D1:A925 -  -  -  -  	
  135 D1:A925 -  -  -  -  	;call input_cam_up
  136 D1:A925 C3 D7 B9 D1 	jp get_inputs ;use jp so can jump to prgmexit to not have pushed PC pointer
  137 D1:A929 -  -  -  -  get_inputs_return:
  138 D1:A929 -  -  -  -  	;call move_bg Draw BG calls MoveBg
  139 D1:A929 -  -  -  -  	;call player_move_debug
  140 D1:A929 CD 1E BB D1 	call player_update
  141 D1:A92D CD 26 BD D1 	call check_collisions
  142 D1:A931 -  -  -  -  	
  143 D1:A931 CD C6 C6 D1 	call update_sine_vals
  144 D1:A935 -  -  -  -  	;ld a,(lin_4_7_1)
  145 D1:A935 -  -  -  -  	;call write_a_to_ram
  146 D1:A935 -  -  -  -  	
  147 D1:A935 CD 23 CA D1 	call update_animations
  148 D1:A939 -  -  -  -  	
  149 D1:A939 CD 13 C0 D1 	call breakaway_timer_update
  150 D1:A93D -  -  -  -  	
  151 D1:A93D CD 67 C1 D1 	call player_move_cam
  152 D1:A941 -  -  -  -  	
  153 D1:A941 CD 57 AC D1 	call draw_bg
  154 D1:A945 -  -  -  -  
  155 D1:A945 -  -  -  -  	
  156 D1:A945 -  -  -  -  	
  157 D1:A945 -  -  -  -  	;TEsting
  158 D1:A945 21 00 00 00 	ld hl,0
  159 D1:A949 3A 00 00 F2 	ld a,($F20000);32768hz
  160 D1:A94D 6F -  -  -  	ld l,a
  161 D1:A94E 3A 01 00 F2 	ld a,($F20001);128hz 
  162 D1:A952 67 -  -  -  	ld h,a
  163 D1:A953 CB 3C -  -  	srl h ;div by 8
  164 D1:A955 CB 1D -  -  	rr l 
  165 D1:A957 CB 3C -  -  	srl h
  166 D1:A959 CB 1D -  -  	rr l 
  167 D1:A95B CB 3C -  -  	srl h
  168 D1:A95D CB 1D -  -  	rr l 
  169 D1:A95F 7D -  -  -  	ld a,l
  170 D1:A960 32 FB AB D1 	ld (draw_bg_time),a
  171 D1:A964 -  -  -  -  	
  172 D1:A964 -  -  -  -  	;TEST CLEAR BUFFER
  173 D1:A964 -  -  -  -  	;ld hl,BG_buffer
  174 D1:A964 -  -  -  -  	;ld de,(draw_buffer)
  175 D1:A964 -  -  -  -  	;ld bc, 160*240
  176 D1:A964 -  -  -  -  	;ldir
  177 D1:A964 -  -  -  -  	
  178 D1:A964 CD 63 B5 D1 	call draw_mg
  179 D1:A968 -  -  -  -  	
  180 D1:A968 CD 81 B5 D1 	call draw_mg2
  181 D1:A96C -  -  -  -  	
  182 D1:A96C -  -  -  -  	
  183 D1:A96C CD DF C2 D1 	call player_draw 
  184 D1:A970 3A 0C C0 D1 	ld a,(player_flags)
  185 D1:A974 CB BF -  -  	res 7,a ;Reset jump hold flag
  186 D1:A976 32 0C C0 D1 	ld (player_flags),a 
  187 D1:A97A -  -  -  -  	
  188 D1:A97A -  -  -  -  	
  189 D1:A97A -  -  -  -  	;ld hl,121
  190 D1:A97A -  -  -  -  	;ld (tongue_ring_y_pos),hl 
  191 D1:A97A -  -  -  -  	;ld a, 50
  192 D1:A97A -  -  -  -  	;ld (tongue_ring_x_pos),a 
  193 D1:A97A -  -  -  -  	
  194 D1:A97A -  -  -  -  	;ld c,20 
  195 D1:A97A -  -  -  -  	;call draw_tongue
  196 D1:A97A -  -  -  -  	
  197 D1:A97A -  -  -  -  	
  198 D1:A97A -  -  -  -  	
  199 D1:A97A -  -  -  -  	;TEsting
  200 D1:A97A 21 00 00 00 	ld hl,0
  201 D1:A97E 3A 00 00 F2 	ld a,($F20000);32768hz
  202 D1:A982 6F -  -  -  	ld l,a
  203 D1:A983 3A 01 00 F2 	ld a,($F20001);128hz 
  204 D1:A987 67 -  -  -  	ld h,a
  205 D1:A988 CB 3C -  -  	srl h ;div by 8
  206 D1:A98A CB 1D -  -  	rr l 
  207 D1:A98C CB 3C -  -  	srl h
  208 D1:A98E CB 1D -  -  	rr l 
  209 D1:A990 CB 3C -  -  	srl h
  210 D1:A992 CB 1D -  -  	rr l 
  211 D1:A994 7D -  -  -  	ld a,l
  212 D1:A995 32 FC AB D1 	ld (draw_mg_time),a
  213 D1:A999 -  -  -  -  	
  214 D1:A999 CD 9F B5 D1 	call draw_fg
  215 D1:A99D -  -  -  -  	
  216 D1:A99D -  -  -  -  	
  217 D1:A99D -  -  -  -  	;call dl_set_negative
  218 D1:A99D -  -  -  -  	;Line draw test 
  219 D1:A99D -  -  -  -  	;ld hl, (draw_buffer)
  220 D1:A99D -  -  -  -  	;ld de, 160*96  + 25
  221 D1:A99D -  -  -  -  	;add hl,de 
  222 D1:A99D -  -  -  -  	;ld a, 35; x dist 
  223 D1:A99D -  -  -  -  	;ld (dl_x_dist),a 
  224 D1:A99D -  -  -  -  	;ld a, 22; y dist 
  225 D1:A99D -  -  -  -  	;ld c,a 
  226 D1:A99D -  -  -  -  	;ld (dl_y_dist_1),a 
  227 D1:A99D -  -  -  -  	;ld (dl_y_dist_2),a 
  228 D1:A99D -  -  -  -  	;ld de,0
  229 D1:A99D -  -  -  -  	;ld a,0 
  230 D1:A99D -  -  -  -  	;ld b,0
  231 D1:A99D -  -  -  -  	;call draw_line_loop
  232 D1:A99D -  -  -  -  	
  233 D1:A99D -  -  -  -  	
  234 D1:A99D -  -  -  -  	
  235 D1:A99D -  -  -  -  	;Leaves_4_Slow_1 has issue
  236 D1:A99D -  -  -  -  	;Need to fix indexing of decompress segments
  237 D1:A99D -  -  -  -  	
  238 D1:A99D -  -  -  -  	;Sprite groups must all use the same load index of a given sprite, as they pull from same data
  239 D1:A99D -  -  -  -  	
  240 D1:A99D -  -  -  -  	
  241 D1:A99D -  -  -  -  	
  242 D1:A99D -  -  -  -  	;TEsting
  243 D1:A99D 21 00 00 00 	ld hl,0
  244 D1:A9A1 3A 00 00 F2 	ld a,($F20000);32768hz
  245 D1:A9A5 6F -  -  -  	ld l,a
  246 D1:A9A6 3A 01 00 F2 	ld a,($F20001);128hz 
  247 D1:A9AA 67 -  -  -  	ld h,a
  248 D1:A9AB CB 3C -  -  	srl h ;div by 8
  249 D1:A9AD CB 1D -  -  	rr l 
  250 D1:A9AF CB 3C -  -  	srl h
  251 D1:A9B1 CB 1D -  -  	rr l 
  252 D1:A9B3 CB 3C -  -  	srl h
  253 D1:A9B5 CB 1D -  -  	rr l 
  254 D1:A9B7 7D -  -  -  	ld a,l
  255 D1:A9B8 32 FD AB D1 	ld (draw_fg_time),a
  256 D1:A9BC -  -  -  -  	
  257 D1:A9BC 21 00 00 00 	ld hl,0
  258 D1:A9C0 -  -  -  -  	
  259 D1:A9C0 -  -  -  -  	; for debug longest frame draw time
  260 D1:A9C0 3A 00 00 F2 	ld a,($F20000)
  261 D1:A9C4 6F -  -  -  	ld l,a
  262 D1:A9C5 3A 01 00 F2 	ld a,($F20001);128hz 
  263 D1:A9C9 67 -  -  -  	ld h,a
  264 D1:A9CA E5 -  -  -  	push hl
  265 D1:A9CB ED 4B FF AB 
              D1 -  -  -  	ld bc,(longestFrame)
  266 D1:A9D0 ED 42 -  -  	sbc hl,bc 
  267 D1:A9D2 DA E4 A9 D1 	jp c,longest_frame_skip
  268 D1:A9D6 -  -  -  -  	
  269 D1:A9D6 E1 -  -  -  	pop hl 
  270 D1:A9D7 E5 -  -  -  	push hl 
  271 D1:A9D8 22 FF AB D1 	ld (longestFrame),hl 
  272 D1:A9DC 2A EE AB D1 	ld hl,(cam_pos)
  273 D1:A9E0 22 02 AC D1 	ld (longestFramePos),hl
  274 D1:A9E4 -  -  -  -  longest_frame_skip:
  275 D1:A9E4 E1 -  -  -  	pop hl 
  276 D1:A9E5 -  -  -  -  	
  277 D1:A9E5 -  -  -  -  	;Add to frame counter
  278 D1:A9E5 2A 08 AC D1 	ld hl,(frameCount)
  279 D1:A9E9 23 -  -  -  	inc hl
  280 D1:A9EA 22 08 AC D1 	ld (frameCount),hl
  281 D1:A9EE -  -  -  -  	
  282 D1:A9EE -  -  -  -  
  283 D1:A9EE -  -  -  -  	
  284 D1:A9EE -  -  -  -  	;check if lcd has drawn first frame
  285 D1:A9EE -  -  -  -  
  286 D1:A9EE CD 8E B9 D1 	call check_for_decompress_calls
  287 D1:A9F2 -  -  -  -  	;Sprite decompression will occur here
  288 D1:A9F2 CD FE B8 D1 	call continue_decompressions
  289 D1:A9F6 -  -  -  -  	
  290 D1:A9F6 -  -  -  -  	;TEsting
  291 D1:A9F6 21 00 00 00 	ld hl,0
  292 D1:A9FA 3A 00 00 F2 	ld a,($F20000);32768hz
  293 D1:A9FE 6F -  -  -  	ld l,a
  294 D1:A9FF 3A 01 00 F2 	ld a,($F20001);128hz 
  295 D1:AA03 67 -  -  -  	ld h,a
  296 D1:AA04 CB 3C -  -  	srl h ;div by 8
  297 D1:AA06 CB 1D -  -  	rr l 
  298 D1:AA08 CB 3C -  -  	srl h
  299 D1:AA0A CB 1D -  -  	rr l 
  300 D1:AA0C CB 3C -  -  	srl h
  301 D1:AA0E CB 1D -  -  	rr l 
  302 D1:AA10 7D -  -  -  	ld a,l
  303 D1:AA11 32 FE AB D1 	ld (decompress_time),a
  304 D1:AA15 -  -  -  -  
  305 D1:AA15 -  -  -  -  
  306 D1:AA15 -  -  -  -  	
  307 D1:AA15 -  -  -  -  
  308 D1:AA15 -  -  -  -  	;Draw time bar at top of screen 
  309 D1:AA15 2A F4 AB D1 	ld hl, (draw_buffer)
  310 D1:AA19 01 00 00 00 	ld bc,0 
  311 D1:AA1D 3A FE AB D1 	ld a,(decompress_time)
  312 D1:AA21 4F -  -  -  	ld c,a 
  313 D1:AA22 3E 55 -  -  	ld a, $55
  314 D1:AA24 CD E0 10 02 	call _MemSet
  315 D1:AA28 -  -  -  -  	
  316 D1:AA28 2A F4 AB D1 	ld hl, (draw_buffer)
  317 D1:AA2C 01 00 00 00 	ld bc,0 
  318 D1:AA30 3A FD AB D1 	ld a,(draw_fg_time)
  319 D1:AA34 4F -  -  -  	ld c,a 
  320 D1:AA35 3E 44 -  -  	ld a, $44
  321 D1:AA37 CD E0 10 02 	call _MemSet
  322 D1:AA3B -  -  -  -  	
  323 D1:AA3B 2A F4 AB D1 	ld hl, (draw_buffer)
  324 D1:AA3F 01 00 00 00 	ld bc,0 
  325 D1:AA43 3A FC AB D1 	ld a,(draw_mg_time)
  326 D1:AA47 4F -  -  -  	ld c,a 
  327 D1:AA48 3E 33 -  -  	ld a, $33
  328 D1:AA4A CD E0 10 02 	call _MemSet
  329 D1:AA4E -  -  -  -  
  330 D1:AA4E 2A F4 AB D1 	ld hl, (draw_buffer)
  331 D1:AA52 01 00 00 00 	ld bc,0 
  332 D1:AA56 3A FB AB D1 	ld a,(draw_bg_time)
  333 D1:AA5A 4F -  -  -  	ld c,a 
  334 D1:AA5B 3E 22 -  -  	ld a, $22
  335 D1:AA5D CD E0 10 02 	call _MemSet
  336 D1:AA61 -  -  -  -  	
  337 D1:AA61 -  -  -  -  
  338 D1:AA61 2A F4 AB D1 	ld hl, (draw_buffer)
  339 D1:AA65 -  -  -  -  	;max time = 00000011 11100010
  340 D1:AA65 -  -  -  -  	;after 3x shift, a = 01111100 = 120
  341 D1:AA65 01 78 00 00 	ld bc, 120  ; =1000/4 /2 for 2pix/bit 
  342 D1:AA69 09 -  -  -  	add hl,bc 
  343 D1:AA6A 3E 55 -  -  	ld a,$55
  344 D1:AA6C 77 -  -  -  	ld (hl),a 
  345 D1:AA6D -  -  -  -  	
  346 D1:AA6D -  -  -  -  	
  347 D1:AA6D -  -  -  -  	;Again for thick line
  348 D1:AA6D -  -  -  -  	
  349 D1:AA6D 2A F4 AB D1 	ld hl, (draw_buffer)
  350 D1:AA71 01 A0 00 00 	ld bc,160
  351 D1:AA75 09 -  -  -  	add hl,bc 
  352 D1:AA76 3A FE AB D1 	ld a,(decompress_time)
  353 D1:AA7A 4F -  -  -  	ld c,a 
  354 D1:AA7B 3E 55 -  -  	ld a, $55
  355 D1:AA7D CD E0 10 02 	call _MemSet
  356 D1:AA81 -  -  -  -  	
  357 D1:AA81 2A F4 AB D1 	ld hl, (draw_buffer)
  358 D1:AA85 01 A0 00 00 	ld bc,160
  359 D1:AA89 09 -  -  -  	add hl,bc 
  360 D1:AA8A 3A FD AB D1 	ld a,(draw_fg_time)
  361 D1:AA8E 4F -  -  -  	ld c,a 
  362 D1:AA8F 3E 44 -  -  	ld a, $44
  363 D1:AA91 CD E0 10 02 	call _MemSet
  364 D1:AA95 -  -  -  -  	
  365 D1:AA95 2A F4 AB D1 	ld hl, (draw_buffer)
  366 D1:AA99 01 A0 00 00 	ld bc,160
  367 D1:AA9D 09 -  -  -  	add hl,bc
  368 D1:AA9E 3A FC AB D1 	ld a,(draw_mg_time)
  369 D1:AAA2 4F -  -  -  	ld c,a 
  370 D1:AAA3 3E 33 -  -  	ld a, $33
  371 D1:AAA5 CD E0 10 02 	call _MemSet
  372 D1:AAA9 -  -  -  -  
  373 D1:AAA9 2A F4 AB D1 	ld hl, (draw_buffer)
  374 D1:AAAD 01 A0 00 00 	ld bc,160
  375 D1:AAB1 09 -  -  -  	add hl,bc
  376 D1:AAB2 3A FB AB D1 	ld a,(draw_bg_time)
  377 D1:AAB6 4F -  -  -  	ld c,a 
  378 D1:AAB7 3E 22 -  -  	ld a, $22
  379 D1:AAB9 CD E0 10 02 	call _MemSet
  380 D1:AABD -  -  -  -  	
  381 D1:AABD 2A F4 AB D1 	ld hl, (draw_buffer)
  382 D1:AAC1 01 18 01 00 	ld bc,280
  383 D1:AAC5 09 -  -  -  	add hl,bc 
  384 D1:AAC6 3E 55 -  -  	ld a,$55
  385 D1:AAC8 77 -  -  -  	ld (hl),a 
  386 D1:AAC9 -  -  -  -  	
  387 D1:AAC9 -  -  -  -  	
  388 D1:AAC9 -  -  -  -  
  389 D1:AAC9 -  -  -  -  
  390 D1:AAC9 -  -  -  -  	
  391 D1:AAC9 -  -  -  -  
  392 D1:AAC9 -  -  -  -  	;swap draw buffers
  393 D1:AAC9 2A 10 00 E3 	ld hl,(mpLcdBase)
  394 D1:AACD ED 5B F4 AB 
              D1 -  -  -  	ld de,(draw_buffer)
  395 D1:AAD2 ED 53 10 00 
              E3 -  -  -  	ld (mpLcdBase),de
  396 D1:AAD7 22 F4 AB D1 	ld (draw_buffer),hl
  397 D1:AADB -  -  -  -  
  398 D1:AADB -  -  -  -  
  399 D1:AADB -  -  -  -  	;wait until finished drawing second frame
  400 D1:AADB -  -  -  -  	;Need to check clock here, there wont always be decompression to wait for
  401 D1:AADB -  -  -  -  	;Max time = 00000011 11000000
  402 D1:AADB -  -  -  -  main_clock_check_loop:
  403 D1:AADB 3A 01 00 F2 	ld a,($F20001);128hz clock
  404 D1:AADF FE 03 -  -  	cp %00000011 ;check if reached 4 
  405 D1:AAE1 DA DB AA D1 	jp c,main_clock_check_loop ;msb <= 2, can continue  
  406 D1:AAE5 3A 00 00 F2 	ld a,($F20000);32768hz clock
  407 D1:AAE9 FE E0 -  -  	cp %11100000;check if reached value 
  408 D1:AAEB DA DB AA D1 	jp c,main_clock_check_loop ;msb = 3 and lsb < value, can continue
  409 D1:AAEF -  -  -  -  	
  410 D1:AAEF -  -  -  -  
  411 D1:AAEF -  -  -  -  
  412 D1:AAEF -  -  -  -  clear_int:      
  413 D1:AAEF 21 28 00 E3     ld hl, mpLcdIcr
  414 D1:AAF3 CB D6 -  -      set 2, (hl)            ; clear interrupt
  415 D1:AAF5 21 20 00 E3     ld hl, mpLcdRis
  416 D1:AAF9 -  -  -  -  wait_int:
  417 D1:AAF9 CB 56 -  -      bit 2, (hl)
  418 D1:AAFB 28 FC -  -      jr z, wait_int  
  419 D1:AAFD -  -  -  -  
  420 D1:AAFD -  -  -  -  
  421 D1:AAFD 21 00 00 00 	ld hl,0
  422 D1:AB01 -  -  -  -  	
  423 D1:AB01 3A 02 00 F2 	ld a,($F20002)
  424 D1:AB05 67 -  -  -  	ld h,a
  425 D1:AB06 3A 01 00 F2 	ld a,($F20001)
  426 D1:AB0A 6F -  -  -  	ld l,a
  427 D1:AB0B ED 4B 05 AC 
              D1 -  -  -  	ld bc,(totalTime)
  428 D1:AB10 09 -  -  -  	add hl,bc 
  429 D1:AB11 22 05 AC D1 	ld (totalTime),hl 
  430 D1:AB15 -  -  -  -  	
  431 D1:AB15 -  -  -  -  	
  432 D1:AB15 -  -  -  -  	
  433 D1:AB15 -  -  -  -  	
  434 D1:AB15 -  -  -  -  
  435 D1:AB15 -  -  -  -  	
  436 D1:AB15 -  -  -  -  
  437 D1:AB15 C2 13 A9 D1 	jp nz,main_loop
  438 D1:AB19 -  -  -  -  		
  439 D1:AB19 -  -  -  -  	;print debug times 
  440 D1:AB19 21 00 00 D4 	ld hl,vRam
  441 D1:AB1D 22 10 00 E3 	ld (mpLcdBase),hl
  442 D1:AB21 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  443 D1:AB25 3E 2D -  -  	ld	a,lcdBpp16
  444 D1:AB27 32 18 00 E3 	ld (mpLcdCtrl),a
  445 D1:AB2B -  -  -  -  	
  446 D1:AB2B 3E 00 -  -  	ld a,0
  447 D1:AB2D 32 95 05 D0 	ld (curRow),a
  448 D1:AB31 32 96 05 D0 	ld (curCol),a
  449 D1:AB35 2A FF AB D1 	ld hl,(longestFrame)
  450 D1:AB39 CD E0 1E 02 	call _DispHL
  451 D1:AB3D 3E 01 -  -  	ld a,1
  452 D1:AB3F 32 95 05 D0 	ld (curRow),a
  453 D1:AB43 3E 00 -  -  	ld a,0
  454 D1:AB45 32 96 05 D0 	ld (curCol),a
  455 D1:AB49 2A 02 AC D1 	ld hl,(longestFramePos)
  456 D1:AB4D CD E0 1E 02 	call _DispHL
  457 D1:AB51 3E 02 -  -  	ld a,2
  458 D1:AB53 32 95 05 D0 	ld (curRow),a
  459 D1:AB57 3E 00 -  -  	ld a,0
  460 D1:AB59 32 96 05 D0 	ld (curCol),a
  461 D1:AB5D 2A 05 AC D1 	ld hl,(totalTime)
  462 D1:AB61 CD E0 1E 02 	call _DispHL
  463 D1:AB65 3E 03 -  -  	ld a,3
  464 D1:AB67 32 95 05 D0 	ld (curRow),a
  465 D1:AB6B 3E 00 -  -  	ld a,0
  466 D1:AB6D 32 96 05 D0 	ld (curCol),a
  467 D1:AB71 2A 08 AC D1 	ld hl,(frameCount)
  468 D1:AB75 CD E0 1E 02 	call _DispHL
  469 D1:AB79 -  -  -  -  	
  470 D1:AB79 CD DD AB D1 	call prgmpause
  471 D1:AB7D CD DD AB D1 	call prgmpause
  472 D1:AB81 -  -  -  -  	
  473 D1:AB81 -  -  -  -  	
  474 D1:AB81 -  -  -  -  exit_prgm:
  475 D1:AB81 21 00 00 D4 	ld hl,vRam
  476 D1:AB85 22 10 00 E3 	ld (mpLcdBase),hl
  477 D1:AB89 CD 10 08 02 	call _ClrScrnFull
  478 D1:AB8D 3E 2D -  -  	ld	a,lcdBpp16
  479 D1:AB8F 32 18 00 E3 	ld	(mpLcdCtrl),a
  480 D1:AB93 CD 3C 1A 02 	call _DrawStatusBar
  481 D1:AB97 -  -  -  -  	
  482 D1:AB97 FB -  -  -  	ei				; reset screen back to normal
  483 D1:AB98 C9 -  -  -  	ret			; return to os
  484 D1:AB99 -  -  -  -  
  485 D1:AB99 -  -  -  -  
  486 D1:AB99 -  -  -  -  printHL:;=================REMOVE
  487 D1:AB99 E5 -  -  -  	push hl
  488 D1:AB9A 21 00 00 D4 	ld hl,vRam
  489 D1:AB9E 22 10 00 E3 	ld (mpLcdBase),hl
  490 D1:ABA2 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  491 D1:ABA6 3E 2D -  -  	ld	a,lcdBpp16
  492 D1:ABA8 32 18 00 E3 	ld (mpLcdCtrl),a
  493 D1:ABAC E1 -  -  -  	pop hl
  494 D1:ABAD CD E0 1E 02 	call _DispHL
  495 D1:ABB1 FB -  -  -  	ei
  496 D1:ABB2 CD 8C 0D 02 	call _GetKey
  497 D1:ABB6 F3 -  -  -  	di
  498 D1:ABB7 C3 81 AB D1 	jp exit_prgm
  499 D1:ABBB -  -  -  -  
  500 D1:ABBB -  -  -  -  
  501 D1:ABBB -  -  -  -  write_a_to_ram:
  502 D1:ABBB F5 -  -  -  	push af 
  503 D1:ABBC E5 -  -  -  	push hl 
  504 D1:ABBD -  -  -  -  write_a_to_ram_addr .equ $ + 1 
  505 D1:ABBD 21 00 80 D4 	ld hl, $d48000
  506 D1:ABC1 77 -  -  -  	ld (hl),a 
  507 D1:ABC2 23 -  -  -  	inc hl 
  508 D1:ABC3 22 BE AB D1 	ld (write_a_to_ram_addr),hl 
  509 D1:ABC7 E1 -  -  -  	pop hl 
  510 D1:ABC8 F1 -  -  -  	pop af 
  511 D1:ABC9 C9 -  -  -  	ret 
  512 D1:ABCA -  -  -  -  	
  513 D1:ABCA -  -  -  -  write_hl_to_ram:
  514 D1:ABCA E5 -  -  -  	push hl 
  515 D1:ABCB D5 -  -  -  	push de 
  516 D1:ABCC EB -  -  -  	ex de,hl
  517 D1:ABCD 2A BE AB D1 	ld hl,(write_a_to_ram_addr)
  518 D1:ABD1 ED 1F -  -  	ld (hl),de 
  519 D1:ABD3 23 -  -  -  	inc hl
  520 D1:ABD4 23 -  -  -  	inc hl
  521 D1:ABD5 23 -  -  -  	inc hl
  522 D1:ABD6 22 BE AB D1 	ld (write_a_to_ram_addr),hl
  523 D1:ABDA D1 -  -  -  	pop de 
  524 D1:ABDB E1 -  -  -  	pop hl
  525 D1:ABDC C9 -  -  -  	ret 
  526 D1:ABDD -  -  -  -  
  527 D1:ABDD -  -  -  -  prgmpause: ;for testing, interrupts code until key pressed. will destroy af register
  528 D1:ABDD F5 -  -  -  	push af
  529 D1:ABDE D5 -  -  -  	push de 
  530 D1:ABDF E5 -  -  -  	push hl 
  531 D1:ABE0 08 -  -  -  	ex af,af';'
  532 D1:ABE1 F5 -  -  -  	push af 
  533 D1:ABE2 FB -  -  -  	ei
  534 D1:ABE3 CD 8C 0D 02 	call _GetKey
  535 D1:ABE7 F3 -  -  -  	di
  536 D1:ABE8 F1 -  -  -  	pop af 
  537 D1:ABE9 08 -  -  -  	ex af,af';'
  538 D1:ABEA E1 -  -  -  	pop hl 
  539 D1:ABEB D1 -  -  -  	pop de 
  540 D1:ABEC F1 -  -  -  	pop af
  541 D1:ABED C9 -  -  -  	ret
  542 D1:ABEE -  -  -  -  
  543 D1:ABEE -  -  -  -  cam_pos:;y position of lowest visible line in fg layer
  544 D1:ABEE 00 00 00 -  	.dl 0
  545 D1:ABF1 -  -  -  -  bg_cam_pos: ;y position of lowest visible line in bg layer (= cam pos / 8)
  546 D1:ABF1 00 00 00 -  	.dl 0
  547 D1:ABF4 -  -  -  -  
  548 D1:ABF4 -  -  -  -  
  549 D1:ABF4 -  -  -  -  draw_buffer:;where new frame is drawn before lcd pointer is swapped 
  550 D1:ABF4 00 2C D5 -  	.dl $d52c00
  551 D1:ABF7 -  -  -  -  	
  552 D1:ABF7 -  -  -  -  BG_draw_buffer: ;Address of the uppermost line of the background buffer. This is where new lines of bg are drawn to 
  553 D1:ABF7 00 00 00 -  	.dl 0
  554 D1:ABFA -  -  -  -  BG_buffer .equ vram + (160*240) ;Start of BG buffer 
  555 D1:ABFA -  -  -  -  
  556 D1:ABFA -  -  -  -  
  557 D1:ABFA -  -  -  -  ;d40000 = Decompressed sprite data
  558 D1:ABFA -  -  -  -  ;d49600 = BG buffer
  559 D1:ABFA -  -  -  -  ;d52c00 = Frame draw buffer 1 
  560 D1:ABFA -  -  -  -  ;d5c200 = frame draw buffer 2
  561 D1:ABFA -  -  -  -  
  562 D1:ABFA -  -  -  -  ;pixelShadow .equ $D031F6 
  563 D1:ABFA -  -  -  -  
  564 D1:ABFA -  -  -  -  move_bg_time:
  565 D1:ABFA 00 -  -  -  	.db 0
  566 D1:ABFB -  -  -  -  draw_bg_time:
  567 D1:ABFB 00 -  -  -  	.db 0
  568 D1:ABFC -  -  -  -  draw_mg_time:
  569 D1:ABFC 00 -  -  -  	.db 0
  570 D1:ABFD -  -  -  -  draw_fg_time:
  571 D1:ABFD 00 -  -  -  	.db 0
  572 D1:ABFE -  -  -  -  decompress_time:
  573 D1:ABFE 00 -  -  -  	.db 0
  574 D1:ABFF -  -  -  -  
  575 D1:ABFF -  -  -  -  
  576 D1:ABFF -  -  -  -  longestFrame:
  577 D1:ABFF 00 00 00 -  	.dl 0
  578 D1:AC02 -  -  -  -  longestFramePos:
  579 D1:AC02 00 00 00 -  	.dl 0
  580 D1:AC05 -  -  -  -  totalTime:
  581 D1:AC05 00 00 00 -  	.dl 0
  582 D1:AC08 -  -  -  -  frameCount:
  583 D1:AC08 00 00 00 -  	.dl 0
  584 D1:AC0B -  -  -  -  hasLagged:
  585 D1:AC0B 00 00 00 -  	.dl 0
  586 D1:AC0E -  -  -  -  
  587 D1:AC0E -  -  -  -  sd_test_a:
  588 D1:AC0E 00 00 00 -  	.dl 0 
  589 D1:AC11 -  -  -  -  
  590 D1:AC11 -  -  -  -  
  591 D1:AC11 -  -  -  -  
  592 D1:AC11 -  -  -  -  
  593 D1:AC11 -  -  -  -  
  594 D1:AC11 -  -  -  -  
  595 D1:AC11 -  -  -  -  #include "timeTesting.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\timeTesting.txt"
    1 D1:AC11 -  -  -  -  
    2 D1:AC11 -  -  -  -  
    3 D1:AC11 -  -  -  -  
    4 D1:AC11 -  -  -  -  time_test_start:
    5 D1:AC11 -  -  -  -  
    6 D1:AC11 -  -  -  -  		; 76543210	
    7 D1:AC11 3E 03 -  -  	ld a,%00000011;enable, 32768hz
    8 D1:AC13 32 30 00 F2 	ld ($F20030),a
    9 D1:AC17 -  -  -  -  	;	  fedcba98
   10 D1:AC17 3E 02 -  -  	ld a,%00000010;count up
   11 D1:AC19 32 31 00 F2 	ld ($F20031),a
   12 D1:AC1D 3E 00 -  -  	ld a,0
   13 D1:AC1F 32 00 00 F2 	ld ($F20000),a
   14 D1:AC23 32 01 00 F2 	ld ($F20001),a
   15 D1:AC27 32 02 00 F2 	ld ($F20002),a
   16 D1:AC2B 32 03 00 F2 	ld ($F20003),a
   17 D1:AC2F -  -  -  -  	
   18 D1:AC2F 21 2C 01 00 	ld hl,300
   19 D1:AC33 -  -  -  -  	
   20 D1:AC33 -  -  -  -  time_testing_loop:
   21 D1:AC33 E5 -  -  -  	push hl
   22 D1:AC34 01 E8 03 00 	ld bc,1000
   23 D1:AC38 -  -  -  -  time_testing_loop_2:
   24 D1:AC38 C5 -  -  -  	push bc
   25 D1:AC39 -  -  -  -  	;instruction here
   26 D1:AC39 -  -  -  -  	
   27 D1:AC39 -  -  -  -  	
   28 D1:AC39 -  -  -  -  	;Instruction end
   29 D1:AC39 C1 -  -  -  	pop bc
   30 D1:AC3A 0B -  -  -  	dec bc
   31 D1:AC3B 79 -  -  -  	ld a,c
   32 D1:AC3C B0 -  -  -  	or b
   33 D1:AC3D C2 38 AC D1 	jp nz,time_testing_loop_2
   34 D1:AC41 E1 -  -  -  	pop hl
   35 D1:AC42 2B -  -  -  	dec hl
   36 D1:AC43 7D -  -  -  	ld a,l
   37 D1:AC44 B4 -  -  -  	or h
   38 D1:AC45 C2 33 AC D1 	jp nz,time_testing_loop
   39 D1:AC49 -  -  -  -  	
   40 D1:AC49 3A 01 00 F2 	ld a,($F20001);128hz
   41 D1:AC4D 6F -  -  -  	ld l,a
   42 D1:AC4E 3A 02 00 F2 	ld a,($F20002);0.5hz
   43 D1:AC52 67 -  -  -  	ld h,a
   44 D1:AC53 C3 99 AB D1 	jp printHL;div by 128 for time
   45 D1:AC57 -  -  -  -  	
   46 D1:AC57 -  -  -  -  
   47 D1:AC57 -  -  -  -  ;60fps = .0166sec/f	
   48 D1:AC57 -  -  -  -  
   49 D1:AC57 -  -  -  -  ;1000 ldir in vram of 160*240 bytes
   50 D1:AC57 -  -  -  -  ;6.8sec, .0068 sec/instruction   0.4 of a frame
   51 D1:AC57 -  -  -  -  
   52 D1:AC57 -  -  -  -  
   53 D1:AC57 -  -  -  -  ;10,000 draw 1 bg line very complex 
   54 D1:AC57 -  -  -  -  ;9 sec  .07 of frame/instruction
   55 D1:AC57 -  -  -  -  
   56 D1:AC57 -  -  -  -  ;300k draw slow sprite 12*5 px complex
   57 D1:AC57 -  -  -  -  ;16.4RT, 14.8CLK
   58 D1:AC57 -  -  -  -  ;.00328 frames/sprite, 4.19 frames / screen
   59 D1:AC57 -  -  -  -  ;.24 screens/frame
   60 D1:AC57 -  -  -  -  
   61 D1:AC57 -  -  -  -  
   62 D1:AC57 -  -  -  -  ;300k slow sprite best case 12*5px
   63 D1:AC57 -  -  -  -  ;8.75RT 7.6clk
   64 D1:AC57 -  -  -  -  ;.00175 frames/spr 2.24 frames/screen
   65 D1:AC57 -  -  -  -  ;.446 screens/frame
   66 D1:AC57 -  -  -  -  
   67 D1:AC57 -  -  -  -  
   68 D1:AC57 -  -  -  -  
   69 D1:AC57 -  -  -  -  ;1,000,000 fast fg sprite 20*4 px
   70 D1:AC57 -  -  -  -  ;22.15RT,20.35clk
   71 D1:AC57 -  -  -  -  ;.00133 frames/spr 1.275 frames/screen
   72 D1:AC57 -  -  -  -  ;.78 screens/frame
   73 D1:AC57 -  -  -  -  
   74 D1:AC57 -  -  -  -  
   75 D1:AC57 -  -  -  -  ;for 60% of screen with fg sprites in 1 frame
   76 D1:AC57 -  -  -  -  ;.6 = .78*fast + .44*(1-fast)
   77 D1:AC57 -  -  -  -  ;.47 = FAST
   78 D1:AC57 -  -  -  -  
   79 D1:AC57 -  -  -  -  ;50% fast sprites, 50% slow sprites
   80 D1:AC57 -  -  -  -  
   81 D1:AC57 -  -  -  -  
   82 D1:AC57 -  -  -  -  
   83 D1:AC57 -  -  -  -  
   84 D1:AC57 -  -  -  -  
   85 D1:AC57 -  -  -  -  
   86 D1:AC57 -  -  -  -  
   87 D1:AC57 -  -  -  -  
   88 D1:AC57 -  -  -  -  
Listing for file "ascent.asm"
  596 D1:AC57 -  -  -  -  #include "drawBGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawBGSprite.txt"
    1 D1:AC57 -  -  -  -  
    2 D1:AC57 -  -  -  -  
    3 D1:AC57 -  -  -  -  BGMaxSpriteHeight .equ 120
    4 D1:AC57 -  -  -  -  
    5 D1:AC57 -  -  -  -  
    6 D1:AC57 -  -  -  -  draw_bg:; function for drawing background buffer to the draw buffer, clearing the frame for fg sprites to be drawn over 
    7 D1:AC57 CD 8B AC D1 	call move_bg
    8 D1:AC5B 21 00 2C D5 	ld hl,$d52c00;BG_buffer_end
    9 D1:AC5F ED 4B F7 AB 
              D1 -  -  -  	ld bc,(BG_draw_buffer)
   10 D1:AC64 37 -  -  -  	scf 
   11 D1:AC65 3F -  -  -  	ccf 
   12 D1:AC66 ED 42 -  -  	sbc hl,bc ;get number of bytes from the loop point in the buffer to end of the buffer 
   13 D1:AC68 E5 -  -  -  	push hl 
   14 D1:AC69 C1 -  -  -  	pop bc	;put into bc for ldir 
   15 D1:AC6A 2A F7 AB D1 	ld hl,(BG_draw_buffer)
   16 D1:AC6E ED 5B F4 AB 
              D1 -  -  -  	ld de,(draw_buffer)
   17 D1:AC73 ED B0 -  -  	ldir
   18 D1:AC75 2A F7 AB D1 	ld hl,(BG_draw_buffer) ;loop point in buffer
   19 D1:AC79 01 00 96 D4 	ld bc,BG_buffer ;start of buffer
   20 D1:AC7D 37 -  -  -  	scf 
   21 D1:AC7E 3F -  -  -  	ccf 
   22 D1:AC7F ED 42 -  -  	sbc hl,bc ;number of bytes from start to loop point 
   23 D1:AC81 C8 -  -  -  	ret z ;if bg buffer line is at top of buffer, no second ldir
   24 D1:AC82 E5 -  -  -  	push hl 
   25 D1:AC83 C1 -  -  -  	pop bc
   26 D1:AC84 21 00 96 D4 	ld hl,BG_buffer 
   27 D1:AC88 ED B0 -  -  	ldir 
   28 D1:AC8A C9 -  -  -  	ret 
   29 D1:AC8B -  -  -  -  	
   30 D1:AC8B -  -  -  -  	
   31 D1:AC8B -  -  -  -  ;function for moving the backgrond buffer. checks if camera has moved since the buffer was last updated.
   32 D1:AC8B -  -  -  -  ;if so will draw new lines of the bg buffer to move it up or down until it is in the correct position
   33 D1:AC8B -  -  -  -  move_bg:
   34 D1:AC8B 2A EE AB D1 	ld hl,(cam_pos);load cam pos 
   35 D1:AC8F -  -  -  -  	;call write_hl_to_ram
   36 D1:AC8F CB 3C -  -  	srl h
   37 D1:AC91 CB 1D -  -  	rr l
   38 D1:AC93 CB 3C -  -  	srl h
   39 D1:AC95 CB 1D -  -  	rr l
   40 D1:AC97 CB 3C -  -  	srl h
   41 D1:AC99 CB 1D -  -  	rr l	;div by 8 to get location of BG layer
   42 D1:AC9B -  -  -  -  	;hl holds bg cam pos, lowest visible line of bg layer 
   43 D1:AC9B ED 4B F1 AB 
              D1 -  -  -  	ld bc,(bg_cam_pos);previous BG cam location 
   44 D1:ACA0 37 -  -  -  	scf
   45 D1:ACA1 3F -  -  -  	ccf
   46 D1:ACA2 ED 42 -  -  	sbc hl,bc ;compare to the updated location
   47 D1:ACA4 C8 -  -  -  	ret z ;if 0, the bg buffer does not need to be moved 
   48 D1:ACA5 DA B1 AC D1 	jp c,move_bg_down ;if previous cam pos id above current pos, screen has moved down, go to move bg down 1 line
   49 D1:ACA9 CD 00 AD D1 	call inc_bg ;otherwise, screen has moved up, need to move bg up 1 line
   50 D1:ACAD C3 8B AC D1 	jp move_bg ;repeat until bg is in correct pos
   51 D1:ACB1 -  -  -  -  move_bg_down:
   52 D1:ACB1 CD B9 AC D1 	call dec_bg
   53 D1:ACB5 C3 8B AC D1 	jp move_bg ;repeat until bg is in correct pos
   54 D1:ACB9 -  -  -  -  
   55 D1:ACB9 -  -  -  -  
   56 D1:ACB9 -  -  -  -  dec_bg:;move bg cam down 1px 
   57 D1:ACB9 -  -  -  -  
   58 D1:ACB9 -  -  -  -  	
   59 D1:ACB9 -  -  -  -  	;Testibng
   60 D1:ACB9 -  -  -  -  	;ld a,$AD
   61 D1:ACB9 -  -  -  -  	;call write_a_to_ram
   62 D1:ACB9 -  -  -  -  	
   63 D1:ACB9 -  -  -  -  
   64 D1:ACB9 -  -  -  -  	;write on draw buffer line 
   65 D1:ACB9 2A F7 AB D1 	ld hl,(BG_draw_buffer) ;topmost line of bg buffer will be overwritten with new bottom line 
   66 D1:ACBD 22 10 AE D1 	ld (dbgl_vram_line_start),hl 
   67 D1:ACC1 -  -  -  -  	
   68 D1:ACC1 2A F1 AB D1 	ld hl,(bg_cam_pos)
   69 D1:ACC5 2B -  -  -  	dec hl ;dec bg cam pos by 1 
   70 D1:ACC6 22 F1 AB D1 	ld (bg_cam_pos),hl 
   71 D1:ACCA -  -  -  -  	
   72 D1:ACCA 01 00 00 00 	ld bc,0 ;clear bc reg
   73 D1:ACCE 4C -  -  -  	ld c,h;bottom y value msb 
   74 D1:ACCF 7D -  -  -  	ld a,l ;bottom y value lsb 
   75 D1:ACD0 21 68 CA D1 	ld hl,BG_Data_frame_table
   76 D1:ACD4 0C -  -  -  	inc c 
   77 D1:ACD5 09 -  -  -  	add hl,bc 
   78 D1:ACD6 09 -  -  -  	add hl,bc 
   79 D1:ACD7 09 -  -  -  	add hl,bc ;add 3*frame number to get to correct frame pointer
   80 D1:ACD8 ED 27 -  -  	ld hl,(hl) ;hl now points to bg frame data 
   81 D1:ACDA CD A2 AD D1 	call draw_bg_line
   82 D1:ACDE -  -  -  -  	
   83 D1:ACDE -  -  -  -  
   84 D1:ACDE -  -  -  -  	;move buffer pos
   85 D1:ACDE 2A F7 AB D1 	ld hl,(BG_draw_buffer)
   86 D1:ACE2 01 60 2B D5 	ld bc,$d52b60;BG_buffer_end, start of last line of vram buffer 
   87 D1:ACE6 37 -  -  -  	scf 
   88 D1:ACE7 3F -  -  -  	ccf 
   89 D1:ACE8 ED 42 -  -  	sbc hl,bc ;compare to current line 
   90 D1:ACEA 2A F7 AB D1 	ld hl,(BG_draw_buffer)
   91 D1:ACEE C2 F6 AC D1 	jp nz,dec_bg_bottom_skip
   92 D1:ACF2 21 60 95 D4 	ld hl,$d49560;1 row above top of bg buffer 
   93 D1:ACF6 -  -  -  -  dec_bg_bottom_skip:
   94 D1:ACF6 01 A0 00 00 	ld bc,160 
   95 D1:ACFA 09 -  -  -  	add hl,bc
   96 D1:ACFB 22 F7 AB D1 	ld (BG_draw_buffer),hl 
   97 D1:ACFF C9 -  -  -  	ret
   98 D1:AD00 -  -  -  -  
   99 D1:AD00 -  -  -  -  
  100 D1:AD00 -  -  -  -  inc_bg:;move cam up 
  101 D1:AD00 -  -  -  -  
  102 D1:AD00 -  -  -  -  	
  103 D1:AD00 -  -  -  -  	;Testibng
  104 D1:AD00 -  -  -  -  	;ld a,$00
  105 D1:AD00 -  -  -  -  	;call write_a_to_ram
  106 D1:AD00 -  -  -  -  	;call prgmpause
  107 D1:AD00 -  -  -  -  
  108 D1:AD00 2A F7 AB D1 	ld hl,(BG_draw_buffer)
  109 D1:AD04 01 00 96 D4 	ld bc,BG_buffer
  110 D1:AD08 37 -  -  -  	scf 
  111 D1:AD09 3F -  -  -  	ccf 
  112 D1:AD0A ED 42 -  -  	sbc hl,bc ;compare current drawing line to top of bg buffer 
  113 D1:AD0C 2A F7 AB D1 	ld hl,(BG_draw_buffer)
  114 D1:AD10 C2 18 AD D1 	jp nz,inc_bg_top_skip ;if they are not equal, continue
  115 D1:AD14 21 00 2C D5 	ld hl,$d52c00;otherwise need to wrap back to bottom of buffer, set hl to 1 below bottom of bg buffer 
  116 D1:AD18 -  -  -  -  inc_bg_top_skip:
  117 D1:AD18 01 A0 00 00 	ld bc,160 
  118 D1:AD1C 37 -  -  -  	scf
  119 D1:AD1D 3F -  -  -  	ccf 
  120 D1:AD1E ED 42 -  -  	sbc hl,bc ;move up line, hl now points to line drawing location in vram 
  121 D1:AD20 22 F7 AB D1 	ld (BG_draw_buffer),hl 
  122 D1:AD24 22 10 AE D1 	ld (dbgl_vram_line_start),hl 
  123 D1:AD28 2A F1 AB D1 	ld hl,(bg_cam_pos)
  124 D1:AD2C 23 -  -  -  	inc hl 
  125 D1:AD2D 22 F1 AB D1 	ld (bg_cam_pos),hl ;incremnet cam pos 
  126 D1:AD31 -  -  -  -  	;call write_hl_to_ram
  127 D1:AD31 01 EF 00 00 	ld bc,239
  128 D1:AD35 09 -  -  -  	add hl,bc ;gets uppermost visible line y value in bg layer
  129 D1:AD36 4C -  -  -  	ld c,h;cam pos msb 
  130 D1:AD37 7D -  -  -  	ld a,l ;a holds line number in target frame 
  131 D1:AD38 21 68 CA D1 	ld hl,BG_Data_frame_table
  132 D1:AD3C 0C -  -  -  	inc c ;inc to get to upper frame 
  133 D1:AD3D 09 -  -  -  	add hl,bc 
  134 D1:AD3E 09 -  -  -  	add hl,bc 
  135 D1:AD3F 09 -  -  -  	add hl,bc 
  136 D1:AD40 ED 27 -  -  	ld hl,(hl)
  137 D1:AD42 CD A2 AD D1 	call draw_bg_line
  138 D1:AD46 C9 -  -  -  	ret
  139 D1:AD47 -  -  -  -  	
  140 D1:AD47 -  -  -  -  
  141 D1:AD47 -  -  -  -  
  142 D1:AD47 -  -  -  -  
  143 D1:AD47 -  -  -  -  
  144 D1:AD47 -  -  -  -  setup_bg: ;Draws entire BG buffer when loading game 
  145 D1:AD47 2A EE AB D1 	ld hl,(cam_pos)
  146 D1:AD4B CB 3C -  -  	srl h
  147 D1:AD4D CB 1D -  -  	rr l
  148 D1:AD4F CB 3C -  -  	srl h
  149 D1:AD51 CB 1D -  -  	rr l
  150 D1:AD53 CB 3C -  -  	srl h
  151 D1:AD55 CB 1D -  -  	rr l ;div by 8
  152 D1:AD57 -  -  -  -  	;hl holds bg cam pos 
  153 D1:AD57 22 F1 AB D1 	ld (bg_cam_pos),hl
  154 D1:AD5B -  -  -  -  	
  155 D1:AD5B 01 EF 00 00 	ld bc,239
  156 D1:AD5F 09 -  -  -  	add hl,bc;hl holds y position of uppermost visible line in bg layer 
  157 D1:AD60 -  -  -  -  	
  158 D1:AD60 23 -  -  -  	inc hl;to be dec in loop
  159 D1:AD61 E5 -  -  -  	push hl ;save uppermost line y val
  160 D1:AD62 21 00 96 D4 	ld hl,BG_buffer ;start of bg drawing buffer 
  161 D1:AD66 22 F7 AB D1 	ld (BG_draw_buffer),hl ;set current bg line drawing location 
  162 D1:AD6A E5 -  -  -  	push hl 
  163 D1:AD6B -  -  -  -  	
  164 D1:AD6B 3E F0 -  -  	ld a,240 ;num loops
  165 D1:AD6D 32 95 AD D1 	ld (setup_bg_loop_count),a
  166 D1:AD71 -  -  -  -  setup_bg_loop:
  167 D1:AD71 -  -  -  -  
  168 D1:AD71 E1 -  -  -  	pop hl;vram draw pos, next line of bg drawn here 
  169 D1:AD72 22 10 AE D1 	ld (dbgl_vram_line_start),hl ;set drawing pos 
  170 D1:AD76 01 A0 00 00 	ld bc,160
  171 D1:AD7A 09 -  -  -  	add hl,bc 
  172 D1:AD7B EB -  -  -  	ex de,hl ;put next vram pos in de 
  173 D1:AD7C E1 -  -  -  	pop hl;uppermost line y val
  174 D1:AD7D 2B -  -  -  	dec hl ;dec line y value (move to next lowest line)
  175 D1:AD7E E5 -  -  -  	push hl;push uppermost line y val
  176 D1:AD7F D5 -  -  -  	push de ;push vram pos 
  177 D1:AD80 01 00 00 00 	ld bc,0
  178 D1:AD84 4C -  -  -  	ld c,h;cam pos msb 
  179 D1:AD85 7D -  -  -  	ld a,l ;a holds line number in current frame 
  180 D1:AD86 21 68 CA D1 	ld hl,BG_Data_frame_table
  181 D1:AD8A 0C -  -  -  	inc c ;add 1 to get to upper frame
  182 D1:AD8B 09 -  -  -  	add hl,bc 
  183 D1:AD8C 09 -  -  -  	add hl,bc 
  184 D1:AD8D 09 -  -  -  	add hl,bc 
  185 D1:AD8E ED 27 -  -  	ld hl,(hl) ;hl now points to upper frame data 
  186 D1:AD90 CD A2 AD D1 	call draw_bg_line ;hl pts to upper frame data, a = line num in target frame
  187 D1:AD94 -  -  -  -  	
  188 D1:AD94 -  -  -  -  setup_bg_loop_count .equ $ + 1
  189 D1:AD94 3E 00 -  -  	ld a,0
  190 D1:AD96 3D -  -  -  	dec a ;dec loop counter
  191 D1:AD97 32 95 AD D1 	ld (setup_bg_loop_count),a
  192 D1:AD9B C2 71 AD D1 	jp nz,setup_bg_loop 
  193 D1:AD9F E1 -  -  -  	pop hl ;pop vram pos 
  194 D1:ADA0 E1 -  -  -  	pop hl ;pop current line number 
  195 D1:ADA1 C9 -  -  -  	ret 
  196 D1:ADA2 -  -  -  -  
  197 D1:ADA2 -  -  -  -  
  198 D1:ADA2 -  -  -  -  
  199 D1:ADA2 -  -  -  -  
  200 D1:ADA2 -  -  -  -  
  201 D1:ADA2 -  -  -  -  
  202 D1:ADA2 -  -  -  -  ;hl = upper data frame, a = line number in target frame
  203 D1:ADA2 -  -  -  -  ;for drawing BG, only 1 line is drawn at a time.
  204 D1:ADA2 -  -  -  -  ;therefore only check sprites in the above frame that may extend downwards, 
  205 D1:ADA2 -  -  -  -  ;and the sprites in the target frame which contains the y position of the line being drawn
  206 D1:ADA2 -  -  -  -  ;set dbgl_vram_line_start before calling 
  207 D1:ADA2 -  -  -  -  draw_bg_line:
  208 D1:ADA2 -  -  -  -  	
  209 D1:ADA2 -  -  -  -  	
  210 D1:ADA2 32 EE AD D1 	ld (dbgl_line_num),a ;write line num to required positions 
  211 D1:ADA6 32 D2 B5 D1 	ld (dfgs_cam_height_1), a ;Used to check if upper frame should be considered
  212 D1:ADAA ED 44 -  -  	neg 
  213 D1:ADAC 32 DA AD D1 	ld (dbgl_lines_to_top_of_target_frame),a 
  214 D1:ADB0 -  -  -  -  	
  215 D1:ADB0 E5 -  -  -  	push hl ;upper frame sprite table pointer 
  216 D1:ADB1 3E FF -  -  	ld a,$FF ;Set all of line to FF to clear it with color 16
  217 D1:ADB3 01 A0 00 00 	ld bc,160
  218 D1:ADB7 2A 10 AE D1 	ld hl,(dbgl_vram_line_start) ;Drawing address of line 
  219 D1:ADBB CD E0 10 02 	call _MemSet ;Clear all of line 
  220 D1:ADBF E1 -  -  -  	pop hl ;return upper frame ptr 
  221 D1:ADC0 -  -  -  -  
  222 D1:ADC0 -  -  -  -  	
  223 D1:ADC0 3E DA -  -  	ld a,%11011010;jp c
  224 D1:ADC2 32 04 B6 D1 	ld (dfgs_bg_mode_1),a 
  225 D1:ADC6 32 68 B6 D1 	ld (dfgs_bg_mode_2),a 
  226 D1:ADCA -  -  -  -  	
  227 D1:ADCA 3E FF -  -  	ld a,255;
  228 D1:ADCC 32 01 B7 D1 	ld (dfgs_cam_height_3),a ;Will skip drawing of lower frame
  229 D1:ADD0 32 1B B7 D1 	ld (dfgs_cam_height_4),a
  230 D1:ADD4 -  -  -  -  	
  231 D1:ADD4 -  -  -  -  
  232 D1:ADD4 -  -  -  -  	
  233 D1:ADD4 CD B9 B5 D1 	call draw_fg_sprites
  234 D1:ADD8 -  -  -  -  	
  235 D1:ADD8 C9 -  -  -  	ret
  236 D1:ADD9 -  -  -  -  	
  237 D1:ADD9 -  -  -  -  
  238 D1:ADD9 -  -  -  -  
  239 D1:ADD9 -  -  -  -  	;a = y value of sprite in upper frame, hl pts to height
  240 D1:ADD9 -  -  -  -  dbgl_draw_upper_sprite:	
  241 D1:ADD9 -  -  -  -  
  242 D1:ADD9 -  -  -  -  	;push af 
  243 D1:ADD9 -  -  -  -  	;call write_a_to_ram
  244 D1:ADD9 -  -  -  -  	;ld a,(hl)
  245 D1:ADD9 -  -  -  -  	;call write_a_to_ram
  246 D1:ADD9 -  -  -  -  	;ld a,$BC
  247 D1:ADD9 -  -  -  -  	;call write_a_to_ram
  248 D1:ADD9 -  -  -  -  	;pop af
  249 D1:ADD9 -  -  -  -  	
  250 D1:ADD9 -  -  -  -  	;call write_hl_to_ram
  251 D1:ADD9 -  -  -  -  	
  252 D1:ADD9 -  -  -  -  	;call prgmpause
  253 D1:ADD9 -  -  -  -  
  254 D1:ADD9 -  -  -  -  dbgl_lines_to_top_of_target_frame .equ $ + 1
  255 D1:ADD9 C6 00 -  -  	add a,0 ;a holds line number in sprite to draw (0 indexed)
  256 D1:ADDB -  -  -  -  	;call write_a_to_ram
  257 D1:ADDB DA E9 AD D1 	jp c,dbgl_upper_skip_sprite ; if line to draw >255, skip (happens if sprite has large y val)
  258 D1:ADDF BE -  -  -  	cp (hl) ;compare to sprite height 
  259 D1:ADE0 D2 E9 AD D1 	jp nc, dbgl_upper_skip_sprite; Skip drawing, sprite does not extend to target line 
  260 D1:ADE4 -  -  -  -  	;Sprite is to be drawn, a holds line number 
  261 D1:ADE4 CD 01 AE D1 	call dbgl_setup_and_draw ;draw sprite line 
  262 D1:ADE8 -  -  -  -  	;hl pts to next sprite y
  263 D1:ADE8 C9 -  -  -  	ret
  264 D1:ADE9 -  -  -  -  	
  265 D1:ADE9 -  -  -  -  dbgl_upper_skip_sprite:
  266 D1:ADE9 23 -  -  -  	inc hl ;to x 
  267 D1:ADEA 23 -  -  -  	inc hl ;to index 
  268 D1:ADEB 23 -  -  -  	inc hl ;to next y
  269 D1:ADEC C9 -  -  -  	ret
  270 D1:ADED -  -  -  -  	
  271 D1:ADED -  -  -  -  
  272 D1:ADED -  -  -  -  	;a holds y in frame, (hl) = height
  273 D1:ADED -  -  -  -  dbgl_draw_lower_sprite:
  274 D1:ADED -  -  -  -  	
  275 D1:ADED -  -  -  -  	;call write_a_to_ram
  276 D1:ADED -  -  -  -  	;call prgmpause
  277 D1:ADED -  -  -  -  	;call write_hl_to_ram
  278 D1:ADED -  -  -  -  	
  279 D1:ADED -  -  -  -  	;call prgmpause
  280 D1:ADED -  -  -  -  	
  281 D1:ADED -  -  -  -  dbgl_line_num .equ $ + 1
  282 D1:ADED D6 00 -  -  	sub 0;subtract line num 
  283 D1:ADEF DA FD AD D1 	jp c, dbgl_lower_skip_sprite ;if carry, line number was above sprite y pos 
  284 D1:ADF3 -  -  -  -  	;if a is 0, we draw first line of sprite, if a is 1, draw second... a holds line num of sprite to draw (0 indexed) 
  285 D1:ADF3 BE -  -  -  	cp (hl) ;compare to sprite height
  286 D1:ADF4 D2 FD AD D1 	jp nc, dbgl_lower_skip_sprite; Skip drawing, sprite does not extend to target line 
  287 D1:ADF8 -  -  -  -  	
  288 D1:ADF8 -  -  -  -  	;Sprite is to be drawn, a holds line number 
  289 D1:ADF8 CD 01 AE D1 	call dbgl_setup_and_draw ;draw sprite line 
  290 D1:ADFC -  -  -  -  	;hl pts to next y
  291 D1:ADFC C9 -  -  -  	ret
  292 D1:ADFD -  -  -  -  	
  293 D1:ADFD -  -  -  -  dbgl_lower_skip_sprite:
  294 D1:ADFD -  -  -  -  
  295 D1:ADFD -  -  -  -  	;ld a,$AA 
  296 D1:ADFD -  -  -  -  	;call write_a_to_ram
  297 D1:ADFD -  -  -  -  	;call prgmpause
  298 D1:ADFD -  -  -  -  	
  299 D1:ADFD 23 -  -  -  	inc hl ;to x 
  300 D1:ADFE 23 -  -  -  	inc hl ;to index 
  301 D1:ADFF 23 -  -  -  	inc hl ;to y
  302 D1:AE00 C9 -  -  -  	ret
  303 D1:AE01 -  -  -  -  
  304 D1:AE01 -  -  -  -  
  305 D1:AE01 -  -  -  -  
  306 D1:AE01 -  -  -  -  
  307 D1:AE01 -  -  -  -  ;a holds 0 indexed line num of sprite, (hl) = height ,bc,de = 0
  308 D1:AE01 -  -  -  -  ;returns hl holds next y val
  309 D1:AE01 -  -  -  -  dbgl_setup_and_draw:
  310 D1:AE01 -  -  -  -  
  311 D1:AE01 -  -  -  -  	;push af 
  312 D1:AE01 -  -  -  -  	;ld a,$AB 
  313 D1:AE01 -  -  -  -  	;call write_a_to_ram
  314 D1:AE01 -  -  -  -  	;call write_hl_to_ram
  315 D1:AE01 -  -  -  -  	;pop af 
  316 D1:AE01 -  -  -  -  	;call write_a_to_ram
  317 D1:AE01 -  -  -  -  	
  318 D1:AE01 -  -  -  -  	;call prgmpause
  319 D1:AE01 -  -  -  -  
  320 D1:AE01 01 00 00 00 	ld bc,0
  321 D1:AE05 11 00 00 00 	ld de,0
  322 D1:AE09 -  -  -  -  	
  323 D1:AE09 23 -  -  -  	inc hl;to x pos
  324 D1:AE0A 5E -  -  -  	ld e,(hl);e holds x pos 
  325 D1:AE0B 23 -  -  -  	inc hl 
  326 D1:AE0C 4E -  -  -  	ld c,(hl);sprite index 
  327 D1:AE0D 23 -  -  -  	inc hl ;next y
  328 D1:AE0E E5 -  -  -  	push hl ;save location in data 
  329 D1:AE0F -  -  -  -  dbgl_vram_line_start .equ $ + 1	
  330 D1:AE0F 21 00 00 00 	ld hl,0
  331 D1:AE13 19 -  -  -  	add hl,de;add x pos
  332 D1:AE14 -  -  -  -  dbgl_sg_x_origin .equ $ + 1
  333 D1:AE14 1E 00 -  -  	ld e,0 
  334 D1:AE16 19 -  -  -  	add hl,de;add x pos
  335 D1:AE17 -  -  -  -  	
  336 D1:AE17 EB -  -  -  	ex de,hl;put vram pos into de 
  337 D1:AE18 -  -  -  -  	
  338 D1:AE18 26 A0 -  -  	ld h,160
  339 D1:AE1A 6F -  -  -  	ld l,a ;number of lines to subtract 
  340 D1:AE1B ED 6C -  -  	mlt hl;bytes to subtract from vram
  341 D1:AE1D 37 -  -  -  	scf 
  342 D1:AE1E 3F -  -  -  	ccf
  343 D1:AE1F EB -  -  -  	ex de,hl;hl holds initial vram pos, de is lines to subtract  
  344 D1:AE20 ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  345 D1:AE22 EB -  -  -  	ex de,hl;put in de
  346 D1:AE23 -  -  -  -  	
  347 D1:AE23 -  -  -  -  dbgl_sprite_pointers .equ $ + 1
  348 D1:AE23 21 00 00 00 	ld hl,0
  349 D1:AE27 09 -  -  -  	add hl,bc
  350 D1:AE28 09 -  -  -  	add hl,bc 
  351 D1:AE29 09 -  -  -  	add hl,bc ;hl points to sprite data pointer 
  352 D1:AE2A ED 27 -  -  	ld hl,(hl);hl holds sprite data
  353 D1:AE2C -  -  -  -  
  354 D1:AE2C -  -  -  -  
  355 D1:AE2C CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  356 D1:AE2E CA 3A AE D1 	jp z,dbgl_fast_sprite ;if even address, fast sprite 
  357 D1:AE32 CD 0C AF D1 	call draw_slow_sprite_single_line
  358 D1:AE36 C3 3E AE D1 	jp dbgl_slow_sprite
  359 D1:AE3A -  -  -  -  dbgl_fast_sprite:
  360 D1:AE3A CD 8E AE D1 	call draw_fast_sprite_single_line
  361 D1:AE3E -  -  -  -  dbgl_slow_sprite:
  362 D1:AE3E -  -  -  -  	
  363 D1:AE3E 11 00 00 00 	ld de,0;clear de 
  364 D1:AE42 01 00 00 00 	ld bc,0
  365 D1:AE46 E1 -  -  -  	pop hl;back to data
  366 D1:AE47 C9 -  -  -  	ret
  367 D1:AE48 -  -  -  -  	
  368 D1:AE48 -  -  -  -  
  369 D1:AE48 -  -  -  -  
  370 D1:AE48 -  -  -  -  
  371 D1:AE48 -  -  -  -  
  372 D1:AE48 -  -  -  -  
  373 D1:AE48 -  -  -  -  
  374 D1:AE48 -  -  -  -  
  375 D1:AE48 -  -  -  -  
  376 D1:AE48 -  -  -  -  
  377 D1:AE48 -  -  -  -  
  378 D1:AE48 -  -  -  -  
  379 D1:AE48 -  -  -  -  
  380 D1:AE48 -  -  -  -  
  381 D1:AE48 -  -  -  -  
  382 D1:AE48 -  -  -  -  
  383 D1:AE48 -  -  -  -  
  384 D1:AE48 -  -  -  -  
  385 D1:AE48 -  -  -  -  
Listing for file "ascent.asm"
  597 D1:AE48 -  -  -  -  #include "drawFGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFGSprite.txt"
    1 D1:AE48 -  -  -  -  
    2 D1:AE48 -  -  -  -  ;hl = data, a = lines to draw. returns a = num loops to draw, hl = 1 before first gap length
    3 D1:AE48 -  -  -  -  setup_sprite_bottom_cut:
    4 D1:AE48 1B -  -  -  	dec de
    5 D1:AE49 01 00 00 00 	ld bc,0 ;clear bc
    6 D1:AE4D 4F -  -  -  	ld c,a;c = lines to draw
    7 D1:AE4E E5 -  -  -  	push hl ;save data 
    8 D1:AE4F 09 -  -  -  	add hl,bc
    9 D1:AE50 7E -  -  -  	ld a,(hl);num loops to draw
   10 D1:AE51 E1 -  -  -  	pop hl ;return to start of data
   11 D1:AE52 4E -  -  -  	ld c,(hl) ;height
   12 D1:AE53 09 -  -  -  	add hl,bc ;hl now points to 1 before first gap length
   13 D1:AE54 C9 -  -  -  	ret 
   14 D1:AE55 -  -  -  -  
   15 D1:AE55 -  -  -  -  setup_sprite_top_cut:
   16 D1:AE55 1B -  -  -  	dec de ;move to correct vram pos 
   17 D1:AE56 01 00 00 00 	ld bc,0
   18 D1:AE5A 4F -  -  -  	ld c,a ;lines to skip (1 indexed)
   19 D1:AE5B D5 -  -  -  	push de
   20 D1:AE5C 11 00 00 00 	ld de,0
   21 D1:AE60 E5 -  -  -  	push hl
   22 D1:AE61 5E -  -  -  	ld e,(hl);height
   23 D1:AE62 09 -  -  -  	add hl,bc;hl points to num skip loops 
   24 D1:AE63 4E -  -  -  	ld c,(hl);c holds num skip loops
   25 D1:AE64 E1 -  -  -  	pop hl;start of data
   26 D1:AE65 19 -  -  -  	add hl,de
   27 D1:AE66 46 -  -  -  	ld b,(hl);total number of loops
   28 D1:AE67 23 -  -  -  	inc hl;hl is pixel data
   29 D1:AE68 D1 -  -  -  	pop de;back to vram
   30 D1:AE69 79 -  -  -  	ld a,c;loops to skip
   31 D1:AE6A C9 -  -  -  	ret 
   32 D1:AE6B -  -  -  -  
   33 D1:AE6B -  -  -  -  ;hl = data, a = line number to draw. returns a = c = number of loops to skip, b = loops to skip + loops to draw. HL = gap length  
   34 D1:AE6B -  -  -  -  setup_sprite_single_line: ;sets up for single line drawing mode 
   35 D1:AE6B 1B -  -  -  	dec de
   36 D1:AE6C 01 00 00 00 	ld bc,0
   37 D1:AE70 4F -  -  -  	ld c,a ;line to draw
   38 D1:AE71 D5 -  -  -  	push de ;save vram 
   39 D1:AE72 11 00 00 00 	ld de,0
   40 D1:AE76 E5 -  -  -  	push hl
   41 D1:AE77 5E -  -  -  	ld e,(hl);height
   42 D1:AE78 09 -  -  -  	add hl,bc;hl points to num skip loops 
   43 D1:AE79 4E -  -  -  	ld c,(hl);c holds num skip loops
   44 D1:AE7A 23 -  -  -  	inc hl 
   45 D1:AE7B 46 -  -  -  	ld b,(hl);b holds num loops after drawn line 
   46 D1:AE7C E1 -  -  -  	pop hl;start of data
   47 D1:AE7D 19 -  -  -  	add hl,de
   48 D1:AE7E 23 -  -  -  	inc hl;hl is pixel data points to gap length 
   49 D1:AE7F D1 -  -  -  	pop de;back to vram
   50 D1:AE80 79 -  -  -  	ld a,c;loops to skip
   51 D1:AE81 C9 -  -  -  	ret 
   52 D1:AE82 -  -  -  -  
   53 D1:AE82 -  -  -  -  
   54 D1:AE82 -  -  -  -  
   55 D1:AE82 -  -  -  -  draw_fast_sprite_bottom_cut_from_line:
   56 D1:AE82 3C -  -  -  	inc a 
   57 D1:AE83 -  -  -  -  ;de = vram , hl = data, a = number lines to draw
   58 D1:AE83 -  -  -  -  draw_fast_sprite_bottom_cut:
   59 D1:AE83 CD 48 AE D1 	call setup_sprite_bottom_cut
   60 D1:AE87 23 -  -  -  	inc hl ;hl points to gap length 
   61 D1:AE88 4E -  -  -  	ld c,(hl);load alpha length
   62 D1:AE89 EB -  -  -  	ex de,hl;hl is vram, de is data
   63 D1:AE8A C3 D1 AE D1 	jp dfgs_loop
   64 D1:AE8E -  -  -  -  
   65 D1:AE8E -  -  -  -  
   66 D1:AE8E -  -  -  -  ;de = vram , hl = data, a = line to draw (starting from 0)
   67 D1:AE8E -  -  -  -  draw_fast_sprite_single_line:
   68 D1:AE8E B7 -  -  -  	or a 
   69 D1:AE8F CA 82 AE D1 	jp z,draw_fast_sprite_bottom_cut_from_line ; if a is 0, same as drawing bottom cut
   70 D1:AE93 -  -  -  -  	;we know a is not 0 here 
   71 D1:AE93 CD 6B AE D1 	call setup_sprite_single_line
   72 D1:AE97 -  -  -  -  	
   73 D1:AE97 C5 -  -  -  	push bc;save total and skipped loops
   74 D1:AE98 01 00 00 00 	ld bc,0
   75 D1:AE9C -  -  -  -  	
   76 D1:AE9C C3 A9 AE D1 	jp draw_fast_sprite_top_loop 
   77 D1:AEA0 -  -  -  -  
   78 D1:AEA0 -  -  -  -  
   79 D1:AEA0 -  -  -  -  
   80 D1:AEA0 -  -  -  -  ;de = vram , hl = data, a = top lines to skip (1 indexed)
   81 D1:AEA0 -  -  -  -  draw_fast_sprite_top_cut:
   82 D1:AEA0 CD 55 AE D1 	call setup_sprite_top_cut
   83 D1:AEA4 C5 -  -  -  	push bc ;save total and skipped loops 
   84 D1:AEA5 01 00 00 00 	ld bc,0 
   85 D1:AEA9 -  -  -  -  	
   86 D1:AEA9 -  -  -  -  draw_fast_sprite_top_loop:; need to follow through gap and drawn lengths to find start of drawing
   87 D1:AEA9 4E -  -  -  	ld c,(hl);load with first gap length	
   88 D1:AEAA EB -  -  -  	ex de,hl;hl is vram
   89 D1:AEAB 09 -  -  -  	add hl,bc
   90 D1:AEAC EB -  -  -  	ex de,hl;hl is data
   91 D1:AEAD 23 -  -  -  	inc hl
   92 D1:AEAE 4E -  -  -  	ld c,(hl);ldir length
   93 D1:AEAF 09 -  -  -  	add hl,bc;add ldir length
   94 D1:AEB0 EB -  -  -  	ex de,hl;hl is vram
   95 D1:AEB1 09 -  -  -  	add hl,bc;add ldir length
   96 D1:AEB2 13 -  -  -  	inc de
   97 D1:AEB3 EB -  -  -  	ex de,hl;hl is data
   98 D1:AEB4 3D -  -  -  	dec a
   99 D1:AEB5 C2 A9 AE D1 	jp nz,draw_fast_sprite_top_loop
  100 D1:AEB9 -  -  -  -  	
  101 D1:AEB9 -  -  -  -  	
  102 D1:AEB9 C1 -  -  -  	pop bc ;b is total loops, c is skipped loops 
  103 D1:AEBA 78 -  -  -  	ld a,b
  104 D1:AEBB 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
  105 D1:AEBC -  -  -  -  		
  106 D1:AEBC 01 00 00 00 	ld bc,0
  107 D1:AEC0 4E -  -  -  	ld c,(hl);load c with gap length
  108 D1:AEC1 EB -  -  -  	ex de,hl ;setup for loop 
  109 D1:AEC2 C3 D1 AE D1 	jp dfgs_loop
  110 D1:AEC6 -  -  -  -  
  111 D1:AEC6 -  -  -  -  
  112 D1:AEC6 -  -  -  -  ;de = vram , hl = data
  113 D1:AEC6 -  -  -  -  draw_fast_sprite_full:
  114 D1:AEC6 1B -  -  -  	dec de
  115 D1:AEC7 01 00 00 00 	ld bc,0
  116 D1:AECB 4E -  -  -  	ld c,(hl);height
  117 D1:AECC 09 -  -  -  	add hl,bc
  118 D1:AECD 7E -  -  -  	ld a,(hl);total loops
  119 D1:AECE 23 -  -  -  	inc hl
  120 D1:AECF 4E -  -  -  	ld c,(hl);first gap length
  121 D1:AED0 EB -  -  -  	ex de,hl
  122 D1:AED1 -  -  -  -  ;a = num loops, c = alphaLength,hl = vram
  123 D1:AED1 -  -  -  -  dfgs_loop:;gap, colors
  124 D1:AED1 09 -  -  -  	add hl,bc;add alpha length
  125 D1:AED2 EB -  -  -  	ex de,hl;swap, hl is data, de is vram
  126 D1:AED3 23 -  -  -  	inc hl
  127 D1:AED4 4E -  -  -  	ld c,(hl);get ldir length
  128 D1:AED5 23 -  -  -  	inc hl
  129 D1:AED6 ED B0 -  -  	ldir
  130 D1:AED8 4E -  -  -  	ld c,(hl);load c with next alpha length
  131 D1:AED9 EB -  -  -  	ex de,hl;swap, hl is vram
  132 D1:AEDA 3D -  -  -  	dec a
  133 D1:AEDB C2 D1 AE D1 	jp nz,dfgs_loop
  134 D1:AEDF C9 -  -  -  	ret
  135 D1:AEE0 -  -  -  -  	
  136 D1:AEE0 -  -  -  -  	
  137 D1:AEE0 -  -  -  -  	
  138 D1:AEE0 -  -  -  -  	
  139 D1:AEE0 -  -  -  -  
  140 D1:AEE0 -  -  -  -  
  141 D1:AEE0 -  -  -  -  ;hl = data, de = vram
  142 D1:AEE0 -  -  -  -  draw_slow_sprite_full:
  143 D1:AEE0 01 00 00 00 	ld bc,0
  144 D1:AEE4 4E -  -  -  	ld c,(hl);height
  145 D1:AEE5 09 -  -  -  	add hl,bc
  146 D1:AEE6 7E -  -  -  	ld a,(hl);num loops
  147 D1:AEE7 1B -  -  -  	dec de ;correct vram pos 
  148 D1:AEE8 D9 -  -  -  	exx;into shadow 
  149 D1:AEE9 47 -  -  -  	ld b,a ;number of loops
  150 D1:AEEA -  -  -  -  	;hl = (gap length) -1 de = vram-1 b' = loops
  151 D1:AEEA -  -  -  -  dsfgs_line_loop:
  152 D1:AEEA D9 -  -  -  	exx;out of shadow
  153 D1:AEEB 23 -  -  -  	inc hl;gap length
  154 D1:AEEC 4E -  -  -  	ld c,(hl);gap length
  155 D1:AEED EB -  -  -  	ex de,hl;hl is vram
  156 D1:AEEE 09 -  -  -  	add hl,bc;add aplha gap
  157 D1:AEEF EB -  -  -  	ex de,hl;hl is data
  158 D1:AEF0 23 -  -  -  	inc hl;hl points to single pix mask
  159 D1:AEF1 1A -  -  -  	ld a,(de);vram data
  160 D1:AEF2 A6 -  -  -  	and (hl)
  161 D1:AEF3 23 -  -  -  	inc hl;pixel data
  162 D1:AEF4 B6 -  -  -  	or (hl)
  163 D1:AEF5 12 -  -  -  	ld (de),a
  164 D1:AEF6 23 -  -  -  	inc hl;ldir length
  165 D1:AEF7 -  -  -  -  	
  166 D1:AEF7 13 -  -  -  	inc de;move to next pixel
  167 D1:AEF8 -  -  -  -  	
  168 D1:AEF8 7E -  -  -  	ld a,(hl);ldir length
  169 D1:AEF9 23 -  -  -  	inc hl;data
  170 D1:AEFA 4F -  -  -  	ld c,a
  171 D1:AEFB B7 -  -  -  	or a
  172 D1:AEFC CA 02 AF D1 	jp z,dsfgs_ldir_skip
  173 D1:AF00 ED B0 -  -  	ldir
  174 D1:AF02 -  -  -  -  dsfgs_ldir_skip:
  175 D1:AF02 1A -  -  -  	ld a,(de);vram data
  176 D1:AF03 A6 -  -  -  	and (hl)
  177 D1:AF04 23 -  -  -  	inc hl;pixel data
  178 D1:AF05 B6 -  -  -  	or (hl)
  179 D1:AF06 12 -  -  -  	ld (de),a
  180 D1:AF07 -  -  -  -  	
  181 D1:AF07 D9 -  -  -  	exx ;into shadow
  182 D1:AF08 10 E0 -  -  	djnz dsfgs_line_loop
  183 D1:AF0A D9 -  -  -  	exx ;out 
  184 D1:AF0B C9 -  -  -  	ret
  185 D1:AF0C -  -  -  -  
  186 D1:AF0C -  -  -  -  
  187 D1:AF0C -  -  -  -  
  188 D1:AF0C -  -  -  -  ;de = vram , hl = data, a = line to draw (from 0)
  189 D1:AF0C -  -  -  -  draw_slow_sprite_single_line:
  190 D1:AF0C -  -  -  -  
  191 D1:AF0C B7 -  -  -  	or a 
  192 D1:AF0D CA 4A AF D1 	jp z,draw_slow_sprite_bottom_cut_from_line ; if a is 0, same as drawing bottom cut
  193 D1:AF11 -  -  -  -  	;we know a is not 0 here
  194 D1:AF11 CD 6B AE D1 	call setup_sprite_single_line
  195 D1:AF15 C5 -  -  -  	push bc;save total and skipped loops
  196 D1:AF16 01 00 00 00 	ld bc,0
  197 D1:AF1A -  -  -  -  	
  198 D1:AF1A C3 27 AF D1 	jp slow_sprite_data_traverse 
  199 D1:AF1E -  -  -  -  	
  200 D1:AF1E -  -  -  -  
  201 D1:AF1E -  -  -  -  ;de = vram , hl = data, a = top lines to skip (from 1)
  202 D1:AF1E -  -  -  -  draw_slow_sprite_top_cut:
  203 D1:AF1E CD 55 AE D1 	call setup_sprite_top_cut
  204 D1:AF22 C5 -  -  -  	push bc;save total and skipped loops
  205 D1:AF23 01 00 00 00 	ld bc,0
  206 D1:AF27 -  -  -  -  ;hl = data start, a = num loops to skip, bc = 0
  207 D1:AF27 -  -  -  -  slow_sprite_data_traverse:
  208 D1:AF27 4E -  -  -  	ld c,(hl);gap length
  209 D1:AF28 EB -  -  -  	ex de,hl;hl is vram
  210 D1:AF29 09 -  -  -  	add hl,bc
  211 D1:AF2A EB -  -  -  	ex de,hl
  212 D1:AF2B -  -  -  -  	
  213 D1:AF2B 23 -  -  -  	inc hl ;inc past leading pixels
  214 D1:AF2C 23 -  -  -  	inc hl
  215 D1:AF2D 23 -  -  -  	inc hl;ldir length
  216 D1:AF2E 4E -  -  -  	ld c,(hl)
  217 D1:AF2F 09 -  -  -  	add hl,bc
  218 D1:AF30 EB -  -  -  	ex de,hl
  219 D1:AF31 09 -  -  -  	add hl,bc
  220 D1:AF32 EB -  -  -  	ex de,hl
  221 D1:AF33 13 -  -  -  	inc de;inc for leading pix 
  222 D1:AF34 23 -  -  -  	inc hl;inc past ending pixels
  223 D1:AF35 23 -  -  -  	inc hl
  224 D1:AF36 23 -  -  -  	inc hl;gap length
  225 D1:AF37 -  -  -  -  	
  226 D1:AF37 3D -  -  -  	dec a 
  227 D1:AF38 C2 27 AF D1 	jp nz,slow_sprite_data_traverse
  228 D1:AF3C -  -  -  -  
  229 D1:AF3C -  -  -  -  
  230 D1:AF3C C1 -  -  -  	pop bc ;b is total loops, c is skipped loops 
  231 D1:AF3D 78 -  -  -  	ld a,b
  232 D1:AF3E 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
  233 D1:AF3F 01 00 00 00 	ld bc,0;clear bc 
  234 D1:AF43 2B -  -  -  	dec hl	;hl points to 1 before gaplength
  235 D1:AF44 D9 -  -  -  	exx ;toshadow
  236 D1:AF45 47 -  -  -  	ld b,a 
  237 D1:AF46 C3 EA AE D1 	jp dsfgs_line_loop
  238 D1:AF4A -  -  -  -  	
  239 D1:AF4A -  -  -  -  	
  240 D1:AF4A -  -  -  -  	
  241 D1:AF4A -  -  -  -  draw_slow_sprite_bottom_cut_from_line:
  242 D1:AF4A 3C -  -  -  	inc a 
  243 D1:AF4B -  -  -  -  ;de = vram , hl = data, a = number lines to draw
  244 D1:AF4B -  -  -  -  draw_slow_sprite_bottom_cut:
  245 D1:AF4B -  -  -  -  
  246 D1:AF4B CD 48 AE D1 	call setup_sprite_bottom_cut
  247 D1:AF4F -  -  -  -  	;a = loops to draw, hl = 1 before gap length 
  248 D1:AF4F D9 -  -  -  	exx ;toshadow
  249 D1:AF50 47 -  -  -  	ld b,a
  250 D1:AF51 C3 EA AE D1 	jp dsfgs_line_loop
  251 D1:AF55 -  -  -  -  
  252 D1:AF55 -  -  -  -  
  253 D1:AF55 -  -  -  -  
  254 D1:AF55 -  -  -  -  
  255 D1:AF55 -  -  -  -  
  256 D1:AF55 -  -  -  -  
  257 D1:AF55 -  -  -  -  
  258 D1:AF55 -  -  -  -  
  259 D1:AF55 -  -  -  -  
  260 D1:AF55 -  -  -  -  
  261 D1:AF55 -  -  -  -  
  262 D1:AF55 -  -  -  -  
  263 D1:AF55 -  -  -  -  
  264 D1:AF55 -  -  -  -  
  265 D1:AF55 -  -  -  -  
  266 D1:AF55 -  -  -  -  
  267 D1:AF55 -  -  -  -  
  268 D1:AF55 -  -  -  -  
  269 D1:AF55 -  -  -  -  
  270 D1:AF55 -  -  -  -  
  271 D1:AF55 -  -  -  -  
  272 D1:AF55 -  -  -  -  
  273 D1:AF55 -  -  -  -  
  274 D1:AF55 -  -  -  -  
  275 D1:AF55 -  -  -  -  
  276 D1:AF55 -  -  -  -  
  277 D1:AF55 -  -  -  -  
  278 D1:AF55 -  -  -  -  
  279 D1:AF55 -  -  -  -  
  280 D1:AF55 -  -  -  -  
  281 D1:AF55 -  -  -  -  
  282 D1:AF55 -  -  -  -  
  283 D1:AF55 -  -  -  -  
  284 D1:AF55 -  -  -  -  
  285 D1:AF55 -  -  -  -  
  286 D1:AF55 -  -  -  -  
  287 D1:AF55 -  -  -  -   
  288 D1:AF55 -  -  -  -  
  289 D1:AF55 -  -  -  -  
  290 D1:AF55 -  -  -  -  
  291 D1:AF55 -  -  -  -  
  292 D1:AF55 -  -  -  -  
  293 D1:AF55 -  -  -  -  
  294 D1:AF55 -  -  -  -  
  295 D1:AF55 -  -  -  -  
  296 D1:AF55 -  -  -  -  
  297 D1:AF55 -  -  -  -  
  298 D1:AF55 -  -  -  -  
  299 D1:AF55 -  -  -  -  
  300 D1:AF55 -  -  -  -  
  301 D1:AF55 -  -  -  -  
  302 D1:AF55 -  -  -  -  
  303 D1:AF55 -  -  -  -  
  304 D1:AF55 -  -  -  -  
  305 D1:AF55 -  -  -  -  
  306 D1:AF55 -  -  -  -  
  307 D1:AF55 -  -  -  -  
  308 D1:AF55 -  -  -  -  
  309 D1:AF55 -  -  -  -  
  310 D1:AF55 -  -  -  -  
  311 D1:AF55 -  -  -  -  
  312 D1:AF55 -  -  -  -  
  313 D1:AF55 -  -  -  -  
  314 D1:AF55 -  -  -  -  
  315 D1:AF55 -  -  -  -  
  316 D1:AF55 -  -  -  -  
  317 D1:AF55 -  -  -  -  
  318 D1:AF55 -  -  -  -  
  319 D1:AF55 -  -  -  -  
  320 D1:AF55 -  -  -  -  
  321 D1:AF55 -  -  -  -  
  322 D1:AF55 -  -  -  -  
  323 D1:AF55 -  -  -  -  
  324 D1:AF55 -  -  -  -  
  325 D1:AF55 -  -  -  -  
  326 D1:AF55 -  -  -  -  
  327 D1:AF55 -  -  -  -  
  328 D1:AF55 -  -  -  -  
  329 D1:AF55 -  -  -  -  
  330 D1:AF55 -  -  -  -  
  331 D1:AF55 -  -  -  -  
  332 D1:AF55 -  -  -  -  
  333 D1:AF55 -  -  -  -  
  334 D1:AF55 -  -  -  -  
  335 D1:AF55 -  -  -  -  
  336 D1:AF55 -  -  -  -  
  337 D1:AF55 -  -  -  -  
  338 D1:AF55 -  -  -  -  
  339 D1:AF55 -  -  -  -  
  340 D1:AF55 -  -  -  -  
  341 D1:AF55 -  -  -  -  
  342 D1:AF55 -  -  -  -  
  343 D1:AF55 -  -  -  -  	
  344 D1:AF55 -  -  -  -  	
Listing for file "ascent.asm"
  598 D1:AF55 -  -  -  -  #include "BetterSpriteDecompress.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\BetterSpriteDecompress.txt"
    1 D1:AF55 -  -  -  -  
    2 D1:AF55 -  -  -  -  
    3 D1:AF55 -  -  -  -  
    4 D1:AF55 -  -  -  -  
    5 D1:AF55 -  -  -  -  
    6 D1:AF55 -  -  -  -  
    7 D1:AF55 -  -  -  -  
    8 D1:AF55 -  -  -  -  
    9 D1:AF55 -  -  -  -  ;REGISTER USEAGE
   10 D1:AF55 -  -  -  -  ;HL = sprite color data byte
   11 D1:AF55 -  -  -  -  ;C = bit selector for color data 
   12 D1:AF55 -  -  -  -  ;HL' = alpha data byte
   13 D1:AF55 -  -  -  -  ;C' = bit selector for alpha data
   14 D1:AF55 -  -  -  -  ;DE = output sprite data location
   15 D1:AF55 -  -  -  -  ;DE' = loops/line write location 
   16 D1:AF55 -  -  -  -  ;A' = alpha bits remaining to read in row
   17 D1:AF55 -  -  -  -  
   18 D1:AF55 -  -  -  -  ;SETUP ----------------
   19 D1:AF55 -  -  -  -  ;SET UP BPC MODE AND ALPHA/NOALPHA
   20 D1:AF55 -  -  -  -  ;write height or width(BG) data to decompressed sprite 
   21 D1:AF55 -  -  -  -  ;GET PER SPRITE PALETTE DATA
   22 D1:AF55 -  -  -  -  ;set registers to point to correct locations for decompression
   23 D1:AF55 -  -  -  -  ;------------
   24 D1:AF55 -  -  -  -  
   25 D1:AF55 -  -  -  -  ;GO TO EITHER FAST, SLOW, or BG SPRITE ALGORITHMS
   26 D1:AF55 -  -  -  -  
   27 D1:AF55 -  -  -  -  
   28 D1:AF55 -  -  -  -  ;FAST / SLOW ROUTINE ---------------------------
   29 D1:AF55 -  -  -  -  ;Parse through alpha data, count number of 00 pairs (gap length)
   30 D1:AF55 -  -  -  -  ;IF FAST, GOTO LDIR ROUTINE
   31 D1:AF55 -  -  -  -  ;leading pixel(s), either 11, 01, 10 in alpha data. 
   32 D1:AF55 -  -  -  -  ;write pixel mask and color data
   33 D1:AF55 -  -  -  -  
   34 D1:AF55 -  -  -  -  ;LDIR ROUTINE
   35 D1:AF55 -  -  -  -  ;Count number of 11 pairs in alpha data (LDIR length)
   36 D1:AF55 -  -  -  -  ;if slow and alpha data ends with 00, the last 11 pair becomes trailing pixels
   37 D1:AF55 -  -  -  -  ;Write LDIR length to sprite data 
   38 D1:AF55 -  -  -  -  ;Write LDIR pixel data (if nonzero)
   39 D1:AF55 -  -  -  -  ;IF FAST, GOTO END
   40 D1:AF55 -  -  -  -  
   41 D1:AF55 -  -  -  -  ;trailing pixels
   42 D1:AF55 -  -  -  -  ;11,10,01 in alpha data 
   43 D1:AF55 -  -  -  -  
   44 D1:AF55 -  -  -  -  ;END AND RESTART
   45 D1:AF55 -  -  -  -  ;Increment loops/line counter
   46 D1:AF55 -  -  -  -  ;check if end of line and write loops/line
   47 D1:AF55 -  -  -  -  
   48 D1:AF55 -  -  -  -  ;store registers and check if interrupt is required
   49 D1:AF55 -  -  -  -  ;if interruption required, return to main loop to draw next frame
   50 D1:AF55 -  -  -  -  ;otherwise return to start of loop
   51 D1:AF55 -  -  -  -  
   52 D1:AF55 -  -  -  -  ;
   53 D1:AF55 -  -  -  -  
   54 D1:AF55 -  -  -  -  
   55 D1:AF55 -  -  -  -  
   56 D1:AF55 -  -  -  -  
   57 D1:AF55 -  -  -  -  
   58 D1:AF55 -  -  -  -  
   59 D1:AF55 -  -  -  -  ;rotates c and incs hl if needed to point to next bit. can be flipped to dec bit 
   60 D1:AF55 -  -  -  -  sdcomp_next_in_bitstream:
   61 D1:AF55 -  -  -  -  sdcomp_flip_bitstream .equ $ + 1
   62 D1:AF55 CB 09 -  -  	rrc c;rlc flip
   63 D1:AF57 D0 -  -  -  	ret nc
   64 D1:AF58 -  -  -  -  sdcomp_flip_bitstream_2 .equ $
   65 D1:AF58 23 -  -  -  	inc hl;dec hl flip
   66 D1:AF59 C9 -  -  -  	ret
   67 D1:AF5A -  -  -  -  
   68 D1:AF5A -  -  -  -  ;ALPHA HELPER FUNCS ================================================================================================	
   69 D1:AF5A -  -  -  -  
   70 D1:AF5A -  -  -  -  ;IN SHADOW
   71 D1:AF5A -  -  -  -  ;HL POINTS TO PIXEL ALPHA DATA
   72 D1:AF5A -  -  -  -  ;C IS BITMASK
   73 D1:AF5A -  -  -  -  ;RETURNS 0 OR nonzero IN A 
   74 D1:AF5A -  -  -  -  ;If final alpha bit in line is read, writes loop/line data, ...
   75 D1:AF5A -  -  -  -  ; sets some flags, decrements remaining lines, traverses sprite data if flip, returns the read data 
   76 D1:AF5A -  -  -  -  ; next call returns first bit in next row  
   77 D1:AF5A -  -  -  -  sdcomp_get_next_alpha:
   78 D1:AF5A -  -  -  -  	;ld a,$A2;test 
   79 D1:AF5A -  -  -  -  	;call write_a_to_ram
   80 D1:AF5A 79 -  -  -  	ld a,c 
   81 D1:AF5B -  -  -  -  	;call write_a_to_ram 
   82 D1:AF5B 7E -  -  -  	ld a,(hl)
   83 D1:AF5C -  -  -  -  	;call write_a_to_ram
   84 D1:AF5C -  -  -  -  	
   85 D1:AF5C 37 -  -  -  	scf 
   86 D1:AF5D -  -  -  -  sdcomp_end_of_line_alp .equ $
   87 D1:AF5D DA 6A AF D1 	jp c, sdcomp_end_of_line_alp_skip
   88 D1:AF61 -  -  -  -  
   89 D1:AF61 -  -  -  -  	;ld a,$A3
   90 D1:AF61 -  -  -  -  	;call write_a_to_ram 
   91 D1:AF61 -  -  -  -  	
   92 D1:AF61 3E D2 -  -  	ld a, %11010010 ;jp nc 
   93 D1:AF63 32 CD AF D1 	ld (sdcomp_end_vitrual_zero_read),a 
   94 D1:AF67 -  -  -  -  	
   95 D1:AF67 3E 00 -  -  	ld a,0
   96 D1:AF69 C9 -  -  -  	ret ;returns virtual 0, outside of data range 
   97 D1:AF6A -  -  -  -  
   98 D1:AF6A -  -  -  -  sdcomp_end_of_line_alp_skip:
   99 D1:AF6A -  -  -  -  	
  100 D1:AF6A -  -  -  -  	
  101 D1:AF6A -  -  -  -  	
  102 D1:AF6A -  -  -  -  ;MUST BE RESET EVERY ROW
  103 D1:AF6A 37 -  -  -  	scf
  104 D1:AF6B -  -  -  -  sdcomp_bit_offset .equ $ ;jp nc for offset
  105 D1:AF6B DA 78 AF D1 	jp c,sdcomp_bit_offset_skip
  106 D1:AF6F 3E DA -  -  	ld a,%11011010;jp c 
  107 D1:AF71 32 6B AF D1 	ld (sdcomp_bit_offset),a
  108 D1:AF75 -  -  -  -  	;ld a,$A9
  109 D1:AF75 -  -  -  -  	;call write_a_to_ram
  110 D1:AF75 3E 00 -  -  	ld a,0
  111 D1:AF77 C9 -  -  -  	ret ;return 0 first bit
  112 D1:AF78 -  -  -  -  sdcomp_bit_offset_skip:;skip bit offset
  113 D1:AF78 -  -  -  -  		
  114 D1:AF78 -  -  -  -  	;ld a,$EF
  115 D1:AF78 -  -  -  -  	;call write_a_to_ram
  116 D1:AF78 7E -  -  -  	ld a,(hl)
  117 D1:AF79 -  -  -  -  	;push af 
  118 D1:AF79 -  -  -  -  	;call write_a_to_ram
  119 D1:AF79 -  -  -  -  	;ld a,c
  120 D1:AF79 -  -  -  -  	;call write_a_to_ram
  121 D1:AF79 -  -  -  -  	;pop af 
  122 D1:AF79 -  -  -  -  	
  123 D1:AF79 -  -  -  -  	
  124 D1:AF79 A1 -  -  -  	and c 
  125 D1:AF7A CD 55 AF D1 	call sdcomp_next_in_bitstream;incs bitstream
  126 D1:AF7E -  -  -  -  	;a holds data to return
  127 D1:AF7E -  -  -  -  	;call write_a_to_ram
  128 D1:AF7E 37 -  -  -  	scf 
  129 D1:AF7F -  -  -  -  sdcomp_no_alpha_1 .equ $;Load a with 1 if no alpha
  130 D1:AF7F DA 85 AF D1 	jp c,sdcomp_no_alpha_1_skip
  131 D1:AF83 3E 01 -  -  	ld a,1
  132 D1:AF85 -  -  -  -  sdcomp_no_alpha_1_skip:
  133 D1:AF85 -  -  -  -  	
  134 D1:AF85 -  -  -  -  	
  135 D1:AF85 08 -  -  -  	ex af,af' ;';into shadow
  136 D1:AF86 3D -  -  -  	dec a 
  137 D1:AF87 -  -  -  -  	;call write_a_to_ram
  138 D1:AF87 C2 B3 AF D1 	jp nz, sdcomp_end_of_line_skip
  139 D1:AF8B -  -  -  -  	
  140 D1:AF8B -  -  -  -  	;HAve read last bit in line  
  141 D1:AF8B -  -  -  -  	
  142 D1:AF8B -  -  -  -  	;ld a,$AC;Test
  143 D1:AF8B -  -  -  -  	;call write_a_to_ram;Test
  144 D1:AF8B -  -  -  -  	;Decrement lines remaining in sprite
  145 D1:AF8B -  -  -  -  sdcomp_lines_remaining .equ $ + 1
  146 D1:AF8B 3E 00 -  -  	ld a,0
  147 D1:AF8D 3D -  -  -  	dec a 
  148 D1:AF8E 32 8C AF D1 	ld (sdcomp_lines_remaining),a
  149 D1:AF92 -  -  -  -  	;call write_a_to_ram
  150 D1:AF92 C2 9C AF D1 	jp nz,sdcomp_set_end_flag_skip
  151 D1:AF96 -  -  -  -  	;end of last line reached 
  152 D1:AF96 3E DA -  -  	ld a,%11011010;jp c
  153 D1:AF98 32 12 B2 D1 	ld (sdcomp_end_reached_flag) , a ;set end reached flag to indicate sprite is done decompressing TODO 
  154 D1:AF9C -  -  -  -  	;ld a,$E9
  155 D1:AF9C -  -  -  -  	;call write_a_to_ram;TEST 
  156 D1:AF9C -  -  -  -  sdcomp_set_end_flag_skip:
  157 D1:AF9C -  -  -  -  	
  158 D1:AF9C -  -  -  -  
  159 D1:AF9C -  -  -  -  	
  160 D1:AF9C 3E D2 -  -  	ld a, %11010010 ;jp nc 
  161 D1:AF9E 32 ED B1 D1 	ld (sdcomp_end_of_line_gaplength),a
  162 D1:AFA2 32 5D AF D1 	ld (sdcomp_end_of_line_alp),a
  163 D1:AFA6 -  -  -  -  	;ld (sdcomp_write_loops_per_line_flag),a 
  164 D1:AFA6 37 -  -  -  	scf ;Set offset bit for next line
  165 D1:AFA7 -  -  -  -  sdcomp_offset_1 .equ $
  166 D1:AFA7 DA B1 AF D1 	jp c,sdcomp_offset_1_skip
  167 D1:AFAB 3E D2 -  -  	ld a, %11010010 ;jp nc 
  168 D1:AFAD 32 6B AF D1 	ld (sdcomp_bit_offset),a
  169 D1:AFB1 -  -  -  -  sdcomp_offset_1_skip:
  170 D1:AFB1 -  -  -  -  	
  171 D1:AFB1 -  -  -  -  sdcomp_sprite_width_2 .equ $+1
  172 D1:AFB1 3E 00 -  -  	ld a,0 ;Return sprite width to a'
  173 D1:AFB3 -  -  -  -  	
  174 D1:AFB3 -  -  -  -  	;call write_a_to_ram
  175 D1:AFB3 -  -  -  -  	
  176 D1:AFB3 -  -  -  -  sdcomp_end_of_line_skip:
  177 D1:AFB3 08 -  -  -  	ex af,af' ;' ;out
  178 D1:AFB4 -  -  -  -  	
  179 D1:AFB4 -  -  -  -  	;push af ;testing
  180 D1:AFB4 -  -  -  -  	;ld a,$A0
  181 D1:AFB4 -  -  -  -  	;call write_a_to_ram
  182 D1:AFB4 -  -  -  -  	;pop af 
  183 D1:AFB4 -  -  -  -  	;call write_a_to_ram
  184 D1:AFB4 -  -  -  -  	
  185 D1:AFB4 C9 -  -  -  	ret 
  186 D1:AFB5 -  -  -  -  	
  187 D1:AFB5 -  -  -  -  
  188 D1:AFB5 -  -  -  -  
  189 D1:AFB5 -  -  -  -  ;in shadow,returns a $FF,$0F,$F0,$00
  190 D1:AFB5 -  -  -  -  sdcomp_get_next_alpha_pair:
  191 D1:AFB5 -  -  -  -  	;ld a,$A1
  192 D1:AFB5 -  -  -  -  	;call write_a_to_ram
  193 D1:AFB5 -  -  -  -  	
  194 D1:AFB5 -  -  -  -  	;ld a,c ;test
  195 D1:AFB5 -  -  -  -  	;call write_a_to_ram 
  196 D1:AFB5 -  -  -  -  	;ld a,(hl) ;test
  197 D1:AFB5 -  -  -  -  	;call write_a_to_ram
  198 D1:AFB5 -  -  -  -  	
  199 D1:AFB5 3E DA -  -  	ld a,%11011010;jp c 
  200 D1:AFB7 32 CD AF D1 	ld(sdcomp_end_vitrual_zero_read),a ;reset vitrual zero read flag
  201 D1:AFBB -  -  -  -  	
  202 D1:AFBB CD 5A AF D1 	call sdcomp_get_next_alpha
  203 D1:AFBF B7 -  -  -  	or a 
  204 D1:AFC0 CA CA AF D1 	jp z,sdcomp_get_next_alpha_pair0
  205 D1:AFC4 3E F0 -  -  	ld a,$F0;FIRST BIT WAS 1
  206 D1:AFC6 -  -  -  -  	;call write_a_to_ram
  207 D1:AFC6 C3 D9 AF D1 	jp sdcomp_get_next_alpha_pair1
  208 D1:AFCA -  -  -  -  sdcomp_get_next_alpha_pair0:
  209 D1:AFCA 3E 00 -  -  	ld a,0
  210 D1:AFCC -  -  -  -  	
  211 D1:AFCC 37 -  -  -  	scf 
  212 D1:AFCD -  -  -  -  sdcomp_end_vitrual_zero_read .equ $
  213 D1:AFCD DA D9 AF D1 	jp c,sdcomp_get_next_alpha_pair1
  214 D1:AFD1 F5 -  -  -  	push af 
  215 D1:AFD2 -  -  -  -  	;This gets triggered when we have read a vitrual 0 (outside of line) as the first bit in an alpha pair 
  216 D1:AFD2 -  -  -  -  	
  217 D1:AFD2 3E 3D -  -  	ld a,%00111101 ;dec a 
  218 D1:AFD4 32 F4 B1 D1 	ld (sdcomp_dec_gap_btwn_rows),a 
  219 D1:AFD8 -  -  -  -  	;We should subtract 1 from the next interline gap length whenever a virtual 00 is read.
  220 D1:AFD8 -  -  -  -  	;ld a,$A4
  221 D1:AFD8 -  -  -  -  	;call write_a_to_ram
  222 D1:AFD8 F1 -  -  -  	pop af 
  223 D1:AFD9 -  -  -  -  	
  224 D1:AFD9 -  -  -  -  sdcomp_get_next_alpha_pair1:
  225 D1:AFD9 -  -  -  -  
  226 D1:AFD9 -  -  -  -  	
  227 D1:AFD9 32 EF AF D1 	ld (sdcomp_get_next_alpha_pair_or),a 
  228 D1:AFDD -  -  -  -  	
  229 D1:AFDD CD 5A AF D1 	call sdcomp_get_next_alpha
  230 D1:AFE1 B7 -  -  -  	or a 
  231 D1:AFE2 CA EC AF D1 	jp z,sdcomp_get_next_alpha_pair2
  232 D1:AFE6 3E 0F -  -  	ld a,$0F;SECOND BIT WAS 1
  233 D1:AFE8 C3 EE AF D1 	jp sdcomp_get_next_alpha_pair3
  234 D1:AFEC -  -  -  -  sdcomp_get_next_alpha_pair2:
  235 D1:AFEC 3E 00 -  -  	ld a,0;SECOND BIT WAS 0
  236 D1:AFEE -  -  -  -  sdcomp_get_next_alpha_pair3:	
  237 D1:AFEE -  -  -  -  sdcomp_get_next_alpha_pair_or .equ $ + 1
  238 D1:AFEE F6 00 -  -  	or 0;OR WITH FIRST BIT 
  239 D1:AFF0 -  -  -  -  	
  240 D1:AFF0 C9 -  -  -  	ret 
  241 D1:AFF1 -  -  -  -  	
  242 D1:AFF1 -  -  -  -  ;COLOR HELPER FUNCS =================================================================================================
  243 D1:AFF1 -  -  -  -  
  244 D1:AFF1 -  -  -  -  ;not in shadow, returns a = color0000
  245 D1:AFF1 -  -  -  -  sdcomp_get_next_color_leading_nibble:
  246 D1:AFF1 CD FA AF D1 	call sdcomp_get_next_color
  247 D1:AFF5 0F -  -  -  	rrca 
  248 D1:AFF6 0F -  -  -  	rrca 
  249 D1:AFF7 0F -  -  -  	rrca 
  250 D1:AFF8 0F -  -  -  	rrca
  251 D1:AFF9 C9 -  -  -  	ret 
  252 D1:AFFA -  -  -  -  
  253 D1:AFFA -  -  -  -  
  254 D1:AFFA -  -  -  -  
  255 D1:AFFA -  -  -  -  ;bit orders
  256 D1:AFFA -  -  -  -  ;	noflip   flip 
  257 D1:AFFA -  -  -  -  ;4bpp 3210 	 0123
  258 D1:AFFA -  -  -  -  ;3bpp 210	 012
  259 D1:AFFA -  -  -  -  ;2bpp 10	 01
  260 D1:AFFA -  -  -  -  ;1bpp 0		 0
  261 D1:AFFA -  -  -  -  
  262 D1:AFFA -  -  -  -  ;not in shadow, returns a = 0000color
  263 D1:AFFA -  -  -  -  sdcomp_get_next_color:
  264 D1:AFFA D5 -  -  -  	push de ;save data write location
  265 D1:AFFB 1E 00 -  -  	ld e,0;E will store the final color data
  266 D1:AFFD -  -  -  -  	
  267 D1:AFFD 37 -  -  -  	scf
  268 D1:AFFE -  -  -  -  sdcomp_0bpc .equ $ ;if sprite is 0bpc, skip reading bitstream, set to jp c 
  269 D1:AFFE D2 48 B0 D1 	jp nc,sdcomp_get_color_from_index
  270 D1:B002 -  -  -  -  	
  271 D1:B002 -  -  -  -  	;ld a,$C1
  272 D1:B002 -  -  -  -  	;call write_a_to_ram
  273 D1:B002 -  -  -  -  	
  274 D1:B002 7E -  -  -  	ld a,(hl) ;read next bit 
  275 D1:B003 -  -  -  -  	;call write_a_to_ram ;TEST
  276 D1:B003 A1 -  -  -  	and c
  277 D1:B004 -  -  -  -  	;call write_a_to_ram ;TEST
  278 D1:B004 CD 55 AF D1 	call sdcomp_next_in_bitstream  ;inc bitstream 
  279 D1:B008 B7 -  -  -  	or a
  280 D1:B009 CA 0F B0 D1 	jp z,sdcomp_get_color_data_set_skip_1
  281 D1:B00D -  -  -  -  sdcomp_color_bit_0 .equ $ + 1 
  282 D1:B00D CB CB -  -  	set 1,e  ;set bit of e reg to color, 0 for flip, else depends on bpc 
  283 D1:B00F -  -  -  -  sdcomp_get_color_data_set_skip_1:
  284 D1:B00F -  -  -  -  	
  285 D1:B00F 37 -  -  -  	scf
  286 D1:B010 -  -  -  -  sdcomp_1bpc .equ $
  287 D1:B010 D2 48 B0 D1 	jp nc,sdcomp_get_color_from_index ;if 1bpc jump to end 
  288 D1:B014 -  -  -  -  
  289 D1:B014 -  -  -  -  	;ld a,$C2
  290 D1:B014 -  -  -  -  	;call write_a_to_ram
  291 D1:B014 -  -  -  -  	
  292 D1:B014 7E -  -  -  	ld a,(hl)
  293 D1:B015 -  -  -  -  	;call write_a_to_ram ;TEST
  294 D1:B015 A1 -  -  -  	and c 
  295 D1:B016 -  -  -  -  	;call write_a_to_ram ;TEST
  296 D1:B016 CD 55 AF D1 	call sdcomp_next_in_bitstream
  297 D1:B01A B7 -  -  -  	or a
  298 D1:B01B CA 21 B0 D1 	jp z,sdcomp_get_color_data_set_skip_2
  299 D1:B01F -  -  -  -  sdcomp_color_bit_1 .equ $ + 1 	
  300 D1:B01F CB C3 -  -  	set 0,e ;store next bit of color data in e  
  301 D1:B021 -  -  -  -  sdcomp_get_color_data_set_skip_2:
  302 D1:B021 -  -  -  -  	
  303 D1:B021 37 -  -  -  	scf
  304 D1:B022 -  -  -  -  sdcomp_2bpc .equ $ ;if 2bpc jump to end
  305 D1:B022 D2 48 B0 D1 	jp nc,sdcomp_get_color_from_index
  306 D1:B026 -  -  -  -  	
  307 D1:B026 7E -  -  -  	ld a,(hl)
  308 D1:B027 A1 -  -  -  	and c 
  309 D1:B028 CD 55 AF D1 	call sdcomp_next_in_bitstream
  310 D1:B02C B7 -  -  -  	or a
  311 D1:B02D CA 33 B0 D1 	jp z,sdcomp_get_color_data_set_skip_3
  312 D1:B031 -  -  -  -  sdcomp_color_bit_2 .equ $ + 1 
  313 D1:B031 CB D3 -  -  	set 2,e 
  314 D1:B033 -  -  -  -  sdcomp_get_color_data_set_skip_3:
  315 D1:B033 -  -  -  -  	
  316 D1:B033 37 -  -  -  	scf
  317 D1:B034 -  -  -  -  sdcomp_3bpc .equ $
  318 D1:B034 D2 48 B0 D1 	jp nc,sdcomp_get_color_from_index	
  319 D1:B038 -  -  -  -  
  320 D1:B038 -  -  -  -  ;4bpp, interpret as color data, not indexed	
  321 D1:B038 7E -  -  -  	ld a,(hl)
  322 D1:B039 A1 -  -  -  	and c 
  323 D1:B03A CD 55 AF D1 	call sdcomp_next_in_bitstream
  324 D1:B03E B7 -  -  -  	or a
  325 D1:B03F CA 45 B0 D1 	jp z,sdcomp_get_color_data_set_skip_4
  326 D1:B043 -  -  -  -  sdcomp_color_bit_3 .equ $ + 1 
  327 D1:B043 CB DB -  -  	set 3,e 
  328 D1:B045 -  -  -  -  sdcomp_get_color_data_set_skip_4:
  329 D1:B045 -  -  -  -  ;4bpp, interpret as color data, not indexed
  330 D1:B045 7B -  -  -  	ld a,e 
  331 D1:B046 D1 -  -  -  	pop de 
  332 D1:B047 C9 -  -  -  	ret 
  333 D1:B048 -  -  -  -  
  334 D1:B048 -  -  -  -  sdcomp_get_color_from_index: ; e holds index of color data, 1-8
  335 D1:B048 -  -  -  -  	
  336 D1:B048 -  -  -  -  	;ld a,$DD
  337 D1:B048 -  -  -  -  	;call write_a_to_ram
  338 D1:B048 -  -  -  -  	;ld a,e 
  339 D1:B048 -  -  -  -  	;call write_a_to_ram
  340 D1:B048 -  -  -  -  	
  341 D1:B048 -  -  -  -  	
  342 D1:B048 CB 53 -  -  	bit 2,e 
  343 D1:B04A CA 6C B0 D1 	jp z, sdcomp_get_color_from_index_2l
  344 D1:B04E -  -  -  -  	
  345 D1:B04E -  -  -  -  	;Bit 2 = 1 
  346 D1:B04E CB 4B -  -  	bit 1,e 
  347 D1:B050 CA 60 B0 D1 	jp z,sdcomp_get_color_from_index_2h1l
  348 D1:B054 -  -  -  -  
  349 D1:B054 -  -  -  -  	;bit 2 = 1 1 = 1
  350 D1:B054 -  -  -  -  sdcomp_indexed_color_data_4 .equ $ + 1	
  351 D1:B054 3E 00 -  -  	ld a,0
  352 D1:B056 CB 43 -  -  	bit 0,e 
  353 D1:B058 CA 8E B0 D1 	jp z,sdcomp_get_color_from_index_msn
  354 D1:B05C C3 8A B0 D1 	jp sdcomp_get_color_from_index_lsn
  355 D1:B060 -  -  -  -  
  356 D1:B060 -  -  -  -  sdcomp_get_color_from_index_2h1l:
  357 D1:B060 -  -  -  -  	;2 = 1 1 = 0 
  358 D1:B060 -  -  -  -  sdcomp_indexed_color_data_3 .equ $ + 1	
  359 D1:B060 3E 00 -  -  	ld a,0
  360 D1:B062 CB 43 -  -  	bit 0,e 
  361 D1:B064 CA 8E B0 D1 	jp z,sdcomp_get_color_from_index_msn
  362 D1:B068 C3 8A B0 D1 	jp sdcomp_get_color_from_index_lsn
  363 D1:B06C -  -  -  -  	
  364 D1:B06C -  -  -  -  sdcomp_get_color_from_index_2l:
  365 D1:B06C -  -  -  -  	;bit 2 was 0 
  366 D1:B06C CB 4B -  -  	bit 1,e 
  367 D1:B06E CA 7E B0 D1 	jp z,sdcomp_get_color_from_index_2l1l
  368 D1:B072 -  -  -  -  	
  369 D1:B072 -  -  -  -  	;bit 2 = 0 1 = 1
  370 D1:B072 -  -  -  -  sdcomp_indexed_color_data_2 .equ $ + 1	
  371 D1:B072 3E 00 -  -  	ld a,0
  372 D1:B074 CB 43 -  -  	bit 0,e 
  373 D1:B076 CA 8E B0 D1 	jp z,sdcomp_get_color_from_index_msn
  374 D1:B07A C3 8A B0 D1 	jp sdcomp_get_color_from_index_lsn
  375 D1:B07E -  -  -  -  	
  376 D1:B07E -  -  -  -  sdcomp_get_color_from_index_2l1l:
  377 D1:B07E -  -  -  -  	;bit 2 =0  1 = 0
  378 D1:B07E -  -  -  -  sdcomp_indexed_color_data_1 .equ $ + 1	
  379 D1:B07E 3E 00 -  -  	ld a,0
  380 D1:B080 -  -  -  -  	
  381 D1:B080 CB 43 -  -  	bit 0,e 
  382 D1:B082 CA 8E B0 D1 	jp z,sdcomp_get_color_from_index_msn
  383 D1:B086 C3 8A B0 D1 	jp sdcomp_get_color_from_index_lsn
  384 D1:B08A -  -  -  -  sdcomp_get_color_from_index_lsn:
  385 D1:B08A E6 0F -  -  	and %00001111;and with least significant nibble 
  386 D1:B08C D1 -  -  -  	pop de 
  387 D1:B08D -  -  -  -  	
  388 D1:B08D -  -  -  -  	;push af 
  389 D1:B08D -  -  -  -  	;ld a,$C0
  390 D1:B08D -  -  -  -  	;call write_a_to_ram
  391 D1:B08D -  -  -  -  	;pop af 
  392 D1:B08D -  -  -  -  	;call write_a_to_ram
  393 D1:B08D -  -  -  -  	
  394 D1:B08D C9 -  -  -  	ret 
  395 D1:B08E -  -  -  -  	
  396 D1:B08E -  -  -  -  sdcomp_get_color_from_index_msn:
  397 D1:B08E E6 F0 -  -  	and %11110000;and with most significant nibble 
  398 D1:B090 0F -  -  -  	rrca 
  399 D1:B091 0F -  -  -  	rrca 
  400 D1:B092 0F -  -  -  	rrca 
  401 D1:B093 0F -  -  -  	rrca 
  402 D1:B094 D1 -  -  -  	pop de 
  403 D1:B095 -  -  -  -  	
  404 D1:B095 -  -  -  -  	;push af 
  405 D1:B095 -  -  -  -  	;ld a,$C0
  406 D1:B095 -  -  -  -  	;call write_a_to_ram
  407 D1:B095 -  -  -  -  	;pop af 
  408 D1:B095 -  -  -  -  	;call write_a_to_ram
  409 D1:B095 -  -  -  -  	
  410 D1:B095 C9 -  -  -  	ret 
  411 D1:B096 -  -  -  -  
  412 D1:B096 -  -  -  -  
  413 D1:B096 -  -  -  -  
  414 D1:B096 -  -  -  -  ;function for traversing sprite data for reversed sprites.
  415 D1:B096 -  -  -  -  ;Reads forward through alpha and color data to end of line, so that it can then be read backwards 
  416 D1:B096 -  -  -  -  ;in shadow ,destroys a
  417 D1:B096 -  -  -  -  sdcomp_traverse_line_data:
  418 D1:B096 D9 -  -  -  	exx ;OUT 
  419 D1:B097 -  -  -  -  sdcomp_color_data_line_end_byte .equ $ + 1
  420 D1:B097 21 00 00 00 	ld hl,0 ;load end of previous color data line 
  421 D1:B09B -  -  -  -  sdcomp_color_data_line_end_mask .equ $ + 1
  422 D1:B09B 0E 00 -  -  	ld c,0 ;load end of previous color data line
  423 D1:B09D D9 -  -  -  	exx;toshadow 
  424 D1:B09E -  -  -  -  	
  425 D1:B09E -  -  -  -  	;load end of previous alpha data line 
  426 D1:B09E -  -  -  -  sdcomp_alpha_data_line_end_byte .equ $ + 1
  427 D1:B09E 21 00 00 00 	ld hl,0
  428 D1:B0A2 -  -  -  -  sdcomp_alpha_data_line_end_mask .equ $ + 1
  429 D1:B0A2 0E 00 -  -  	ld c,0
  430 D1:B0A4 -  -  -  -  sdcomp_traverse_initial:
  431 D1:B0A4 D5 -  -  -  	push de
  432 D1:B0A5 -  -  -  -  sdcomp_sprite_width .equ $ + 1
  433 D1:B0A5 1E 00 -  -  	ld e, 0
  434 D1:B0A7 -  -  -  -  	;e holds sprite width 
  435 D1:B0A7 -  -  -  -  	
  436 D1:B0A7 -  -  -  -  	;Read forward through alpha data and inc color pointer if alpha is 1 
  437 D1:B0A7 -  -  -  -  sdcomp_traverse_line_data_loop:
  438 D1:B0A7 CB 09 -  -  	rrc c 
  439 D1:B0A9 D2 AE B0 D1 	jp nc,sdcomp_traverse_line_data_alpha_inc_skip ;if not reached end of byte, skip
  440 D1:B0AD 23 -  -  -  	inc hl ;have reached end of alpha byte, inc hl 
  441 D1:B0AE -  -  -  -  sdcomp_traverse_line_data_alpha_inc_skip:
  442 D1:B0AE 7E -  -  -  	ld a,(hl)
  443 D1:B0AF A1 -  -  -  	and c ;read alpha data 
  444 D1:B0B0 -  -  -  -  sdcomp_no_alpha_3 .equ $ ;jp c for no alpha sprites to always inc color 
  445 D1:B0B0 CA C6 B0 D1 	jp z,sdcomp_traverse_line_data_color_skip;if no alpha skip incrementing color. 
  446 D1:B0B4 D9 -  -  -  	exx;out of shadow 
  447 D1:B0B5 -  -  -  -  
  448 D1:B0B5 CB 09 -  -  	rrc c ;rotate mask
  449 D1:B0B7 -  -  -  -  sdcomp_traverse_2bpp .equ $ + 1
  450 D1:B0B7 CB 0F -  -  	rrc a ;replace with rrc c for 2bpc (not nop because rrc c is 2 byte operation)
  451 D1:B0B9 -  -  -  -  sdcomp_traverse_3bpp .equ $ + 1
  452 D1:B0B9 CB 0F -  -  	rrc a;rrc c for 3bpc
  453 D1:B0BB -  -  -  -  sdcomp_traverse_4bpp .equ $ + 1
  454 D1:B0BB CB 0F -  -  	rrc a;rrc c for 4 bpc 
  455 D1:B0BD -  -  -  -  	
  456 D1:B0BD -  -  -  -  	;check if end of byte was reached during rotations
  457 D1:B0BD 79 -  -  -  	ld a,c
  458 D1:B0BE -  -  -  -  sdcomp_traverse_bit_check .equ $ + 1
  459 D1:B0BE E6 F0 -  -  	and %11110000 ; 4bpc = 11110000 3bpc = 11100000, 2bpc 11000000 1bpc 10000000 TODO 
  460 D1:B0C0 CA C5 B0 D1 	jp z,sdcomp_traverse_line_data_color_inc_skip
  461 D1:B0C4 23 -  -  -  	inc hl ;inc hl if end of byte was reached 
  462 D1:B0C5 -  -  -  -  sdcomp_traverse_line_data_color_inc_skip:
  463 D1:B0C5 D9 -  -  -  	exx ;toshadow
  464 D1:B0C6 -  -  -  -  sdcomp_traverse_line_data_color_skip:
  465 D1:B0C6 1D -  -  -  	dec e ;e holds sprite width 
  466 D1:B0C7 C2 A7 B0 D1 	jp nz,sdcomp_traverse_line_data_loop ;loop until end of line reached 
  467 D1:B0CB D1 -  -  -  	pop de  ;back to write location 
  468 D1:B0CC -  -  -  -  	;set new end of line pointers 
  469 D1:B0CC -  -  -  -  	
  470 D1:B0CC -  -  -  -  	;ld a,$BB 
  471 D1:B0CC -  -  -  -  	;call write_a_to_ram 
  472 D1:B0CC -  -  -  -  	;ld a,(hl) 
  473 D1:B0CC -  -  -  -  	;call write_a_to_ram 
  474 D1:B0CC -  -  -  -  	;ld a,c 
  475 D1:B0CC -  -  -  -  	;call write_a_to_ram 
  476 D1:B0CC -  -  -  -  	
  477 D1:B0CC -  -  -  -  	
  478 D1:B0CC 22 9F B0 D1 	ld (sdcomp_alpha_data_line_end_byte),hl
  479 D1:B0D0 79 -  -  -  	ld a,c
  480 D1:B0D1 32 A3 B0 D1 	ld (sdcomp_alpha_data_line_end_mask),a
  481 D1:B0D5 D9 -  -  -  	exx ;out
  482 D1:B0D6 22 98 B0 D1 	ld (sdcomp_color_data_line_end_byte),hl
  483 D1:B0DA 79 -  -  -  	ld a,c 
  484 D1:B0DB 32 9C B0 D1 	ld (sdcomp_color_data_line_end_mask),a
  485 D1:B0DF -  -  -  -  	
  486 D1:B0DF -  -  -  -  	;ld a,(hl) 
  487 D1:B0DF -  -  -  -  	;call write_a_to_ram 
  488 D1:B0DF -  -  -  -  	;ld a,c 
  489 D1:B0DF -  -  -  -  	;call write_a_to_ram 
  490 D1:B0DF -  -  -  -  	
  491 D1:B0DF D9 -  -  -  	exx;to shadow 
  492 D1:B0E0 C9 -  -  -  	ret
  493 D1:B0E1 -  -  -  -  
  494 D1:B0E1 -  -  -  -  
  495 D1:B0E1 -  -  -  -  
  496 D1:B0E1 -  -  -  -  
  497 D1:B0E1 -  -  -  -  
  498 D1:B0E1 -  -  -  -  ;hl/c is color data, de is ldir write pos, b' is ldir length, not in shadow 
  499 D1:B0E1 -  -  -  -  sdcomp_write_ldir_data_loop:
  500 D1:B0E1 CD FA AF D1 	call sdcomp_get_next_color
  501 D1:B0E5 47 -  -  -  	ld b,a;first pixel
  502 D1:B0E6 CD F1 AF D1 	call sdcomp_get_next_color_leading_nibble
  503 D1:B0EA B0 -  -  -  	or b
  504 D1:B0EB -  -  -  -  	
  505 D1:B0EB -  -  -  -  	
  506 D1:B0EB 12 -  -  -  	ld (de),a;write color data
  507 D1:B0EC 13 -  -  -  	inc de
  508 D1:B0ED D9 -  -  -  	exx;to shadow
  509 D1:B0EE 05 -  -  -  	dec b;ldir length counter
  510 D1:B0EF D9 -  -  -  	exx
  511 D1:B0F0 C2 E1 B0 D1 	jp nz,sdcomp_write_ldir_data_loop
  512 D1:B0F4 C9 -  -  -  	ret
  513 D1:B0F5 -  -  -  -  	
  514 D1:B0F5 -  -  -  -  
  515 D1:B0F5 -  -  -  -  ;Not in shadow, a holds alpha data pair, writes color and mask data to output 
  516 D1:B0F5 -  -  -  -  sdcomp_write_leading_or_end_pixels:
  517 D1:B0F5 D5 -  -  -  	push de ;output location	
  518 D1:B0F6 47 -  -  -  	ld b,a;save for later
  519 D1:B0F7 CB 67 -  -  	bit 4,a ;check if first pixel has color 
  520 D1:B0F9 3E 00 -  -  	ld a,0
  521 D1:B0FB 16 FF -  -  	ld d,%11111111;pixel data mask assuming no colors 
  522 D1:B0FD CA 07 B1 D1 	jp z,sdcomp_leading_pixel_first_skip
  523 D1:B101 -  -  -  -  	;has first color
  524 D1:B101 16 F0 -  -  	ld d,%11110000;save second pixel of bg 
  525 D1:B103 CD FA AF D1 	call sdcomp_get_next_color
  526 D1:B107 -  -  -  -  sdcomp_leading_pixel_first_skip:
  527 D1:B107 -  -  -  -  	;a is either $00 or $0color1
  528 D1:B107 -  -  -  -  	
  529 D1:B107 1E FF -  -  	ld e,%11111111;assuming no colors
  530 D1:B109 -  -  -  -  	
  531 D1:B109 CB 40 -  -  	bit 0,b;check second pixel alpha
  532 D1:B10B 47 -  -  -  	ld b,a;save for later 
  533 D1:B10C 3E 00 -  -  	ld a,0
  534 D1:B10E CA 18 B1 D1 	jp z,sdcomp_leading_pixel_second_skip;
  535 D1:B112 -  -  -  -  	;has second color 
  536 D1:B112 CD F1 AF D1 	call sdcomp_get_next_color_leading_nibble
  537 D1:B116 -  -  -  -  	;a = color2 0 
  538 D1:B116 1E 0F -  -  	ld e,%00001111;save first pixel of bg
  539 D1:B118 -  -  -  -  	
  540 D1:B118 -  -  -  -  sdcomp_leading_pixel_second_skip:
  541 D1:B118 -  -  -  -  	;a is either 00 or c2 0 
  542 D1:B118 -  -  -  -  	;b is either 00 or 0 c1 
  543 D1:B118 B0 -  -  -  	or b 
  544 D1:B119 47 -  -  -  	ld b,a;final color data
  545 D1:B11A 7A -  -  -  	ld a,d 
  546 D1:B11B A3 -  -  -  	and e ;final mask data 
  547 D1:B11C -  -  -  -  	
  548 D1:B11C D1 -  -  -  	pop de;return to pointer 
  549 D1:B11D -  -  -  -  	
  550 D1:B11D 12 -  -  -  	ld (de),a;write mask data 
  551 D1:B11E 13 -  -  -  	inc de 
  552 D1:B11F 78 -  -  -  	ld a,b;color data 
  553 D1:B120 12 -  -  -  	ld (de),a;write color data 
  554 D1:B121 -  -  -  -  	
  555 D1:B121 -  -  -  -  	
  556 D1:B121 -  -  -  -  	
  557 D1:B121 -  -  -  -  	;call write_a_to_ram
  558 D1:B121 -  -  -  -  	
  559 D1:B121 13 -  -  -  	inc de 
  560 D1:B122 C9 -  -  -  	ret 
  561 D1:B123 -  -  -  -  
  562 D1:B123 -  -  -  -  
  563 D1:B123 -  -  -  -  
  564 D1:B123 -  -  -  -  ;ENTRY POINT 
  565 D1:B123 -  -  -  -  
  566 D1:B123 -  -  -  -  
  567 D1:B123 -  -  -  -  ;hl = sprite data start, de = main data decompress location
  568 D1:B123 -  -  -  -  sprite_decompress:
  569 D1:B123 -  -  -  -  
  570 D1:B123 -  -  -  -  
  571 D1:B123 -  -  -  -  	;SETUP ===========================================================================================================
  572 D1:B123 -  -  -  -  
  573 D1:B123 -  -  -  -  	;SET UP BPC MODE AND ALPHA/NOALPHA
  574 D1:B123 -  -  -  -  
  575 D1:B123 -  -  -  -  	;HL pointing to flags registers
  576 D1:B123 -  -  -  -  	;TODO set up bpc and alpha modes, Sprite type and offset. Write conditional jumps where needed
  577 D1:B123 -  -  -  -  	;set bpc mode 
  578 D1:B123 CB 7E -  -  	bit 7,(hl)
  579 D1:B125 C4 F3 B3 D1 	call nz,sdcomp_set_4bpc
  580 D1:B129 CB 76 -  -  	bit 6,(hl)
  581 D1:B12B C4 90 B3 D1 	call nz,sdcomp_set_3bpc 
  582 D1:B12F CB 6E -  -  	bit 5,(hl)
  583 D1:B131 C4 3D B3 D1 	call nz,sdcomp_set_2bpc 
  584 D1:B135 CB 66 -  -  	bit 4,(hl)
  585 D1:B137 C4 08 B3 D1 	call nz,sdcomp_set_1bpc 
  586 D1:B13B CB 5E -  -  	bit 3,(hl)
  587 D1:B13D C4 ED B2 D1 	call nz,sdcomp_set_0bpc 
  588 D1:B141 CB 56 -  -  	bit 2,(hl)
  589 D1:B143 C4 5A B4 D1 	call nz,sdcomp_set_noalpha
  590 D1:B147 CB 56 -  -  	bit 2,(hl)
  591 D1:B149 CC 6B B4 D1 	call z,sdcomp_reset_noalpha
  592 D1:B14D -  -  -  -  	
  593 D1:B14D -  -  -  -  	
  594 D1:B14D 3E 00 -  -  	ld a,0
  595 D1:B14F 32 7B B2 D1 	ld (sdcomp_loops_per_line_counter),a ;reset loops counter
  596 D1:B153 3E DA -  -  	ld a,%11011010;jp c 
  597 D1:B155 32 CD AF D1 	ld(sdcomp_end_vitrual_zero_read),a ;reset vitrual zero read flag
  598 D1:B159 -  -  -  -  	;write height or width(BG) data to decompressed sprite 
  599 D1:B159 -  -  -  -  	
  600 D1:B159 23 -  -  -  	inc hl ;hl points to width in px 
  601 D1:B15A -  -  -  -  	
  602 D1:B15A -  -  -  -  	
  603 D1:B15A 7E -  -  -  	ld a,(hl) 
  604 D1:B15B 32 A6 B0 D1 	ld (sdcomp_sprite_width),a ;TODO set width in required locations
  605 D1:B15F 32 B2 AF D1 	ld (sdcomp_sprite_width_2),a
  606 D1:B163 47 -  -  -  	ld b,a;width
  607 D1:B164 08 -  -  -  	ex af,af' ;'
  608 D1:B165 78 -  -  -  	ld a,b;Number of alpha bits remaining in row
  609 D1:B166 08 -  -  -  	ex af,af' ;' 
  610 D1:B167 -  -  -  -  
  611 D1:B167 -  -  -  -  
  612 D1:B167 -  -  -  -  sdcomp_offset_2 .equ $ 
  613 D1:B167 00 -  -  -  	nop ;replace with inc b for offset 
  614 D1:B168 -  -  -  -  
  615 D1:B168 -  -  -  -  	;Calculate number of bytes to skip between rows for gap length  
  616 D1:B168 04 -  -  -  	inc b ;round up on odd sprites
  617 D1:B169 CB 38 -  -  	srl b;divide by 2
  618 D1:B16B -  -  -  -  	
  619 D1:B16B -  -  -  -  	
  620 D1:B16B 3E A0 -  -  	ld a,160
  621 D1:B16D 90 -  -  -  	sub b ;a holds 160 - (width in pairs)
  622 D1:B16E 32 F2 B1 D1 	ld (sdcomp_gap_btwn_rows),a 
  623 D1:B172 -  -  -  -  	
  624 D1:B172 -  -  -  -  	;call write_a_to_ram
  625 D1:B172 -  -  -  -  	;ld a,$BE
  626 D1:B172 -  -  -  -  	;call write_a_to_ram
  627 D1:B172 -  -  -  -  	;ld a,b 
  628 D1:B172 -  -  -  -  	;call write_a_to_ram
  629 D1:B172 -  -  -  -  	
  630 D1:B172 -  -  -  -  	
  631 D1:B172 7E -  -  -  	ld a,(hl);load width again
  632 D1:B173 -  -  -  -  	
  633 D1:B173 47 -  -  -  	ld b,a 
  634 D1:B174 -  -  -  -  	
  635 D1:B174 -  -  -  -  
  636 D1:B174 23 -  -  -  	inc hl ;hl points to height 
  637 D1:B175 7E -  -  -  	ld a,(hl);height
  638 D1:B176 32 8C AF D1 	ld (sdcomp_lines_remaining),a ;write height to lines remaining counter
  639 D1:B17A -  -  -  -  	
  640 D1:B17A -  -  -  -  	
  641 D1:B17A -  -  -  -  
  642 D1:B17A 12 -  -  -  	ld (de), a ;write height to first byte of sprite data 
  643 D1:B17B 13 -  -  -  	inc de 
  644 D1:B17C -  -  -  -  	
  645 D1:B17C 23 -  -  -  	inc hl ;HL points to start of alpha data 
  646 D1:B17D -  -  -  -  
  647 D1:B17D E5 -  -  -  	push hl ;Save alpha data 
  648 D1:B17E -  -  -  -  	
  649 D1:B17E -  -  -  -  	
  650 D1:B17E -  -  -  -  	;Need to find start of color data
  651 D1:B17E -  -  -  -  	;at this point a = height, b = width 
  652 D1:B17E -  -  -  -  	
  653 D1:B17E 37 -  -  -  	scf
  654 D1:B17F -  -  -  -  	
  655 D1:B17F -  -  -  -  sdcomp_no_alpha_2 .equ $
  656 D1:B17F D2 98 B1 D1 	jp nc,sdcomp_no_alpha_2_skip ; if no alpha skip this part
  657 D1:B183 -  -  -  -  	
  658 D1:B183 -  -  -  -  	;need to find number of pixels, div by 8 and skip that many bytes
  659 D1:B183 -  -  -  -  	
  660 D1:B183 E5 -  -  -  	push hl
  661 D1:B184 67 -  -  -  	ld h,a;height
  662 D1:B185 68 -  -  -  	ld l,b;width
  663 D1:B186 ED 6C -  -  	mlt hl;number of pixels
  664 D1:B188 -  -  -  -  	;rounds up to nearest multiple of 8
  665 D1:B188 2B -  -  -  	dec hl
  666 D1:B189 CB 3C -  -  	srl h
  667 D1:B18B CB 1D -  -  	rr l
  668 D1:B18D CB 3C -  -  	srl h
  669 D1:B18F CB 1D -  -  	rr l 
  670 D1:B191 CB 3C -  -  	srl h 
  671 D1:B193 CB 1D -  -  	rr l 
  672 D1:B195 23 -  -  -  	inc hl 
  673 D1:B196 C1 -  -  -  	pop bc ;initial hl location
  674 D1:B197 -  -  -  -  	;add number of bytes to skip 
  675 D1:B197 09 -  -  -  	add hl,bc ;HL points to start of color data 
  676 D1:B198 -  -  -  -  	
  677 D1:B198 -  -  -  -  	
  678 D1:B198 -  -  -  -  	
  679 D1:B198 -  -  -  -  sdcomp_no_alpha_2_skip:
  680 D1:B198 -  -  -  -  
  681 D1:B198 -  -  -  -  	
  682 D1:B198 -  -  -  -  	;HL POINTING TO COLOR PALETTE DATA
  683 D1:B198 -  -  -  -  
  684 D1:B198 -  -  -  -  	
  685 D1:B198 47 -  -  -  	ld b,a ;save for after
  686 D1:B199 -  -  -  -  	;GET LOCAL PALETTE DATA
  687 D1:B199 -  -  -  -  	
  688 D1:B199 37 -  -  -  	scf 
  689 D1:B19A -  -  -  -  sdcomp_1bpc_1 .equ $ 
  690 D1:B19A D2 A4 B1 D1 	jp nc,sdcomp_1bpc_1_skip ;skip if not 1bpc or 2bpc or 3bpc
  691 D1:B19E -  -  -  -  	
  692 D1:B19E 7E -  -  -  	ld a,(hl);color data 	
  693 D1:B19F 32 7F B0 D1 	ld (sdcomp_indexed_color_data_1),a 
  694 D1:B1A3 23 -  -  -  	inc hl 
  695 D1:B1A4 -  -  -  -  	
  696 D1:B1A4 -  -  -  -  sdcomp_1bpc_1_skip:	
  697 D1:B1A4 -  -  -  -  
  698 D1:B1A4 -  -  -  -  
  699 D1:B1A4 37 -  -  -  	scf 
  700 D1:B1A5 -  -  -  -  sdcomp_2bpc_1 .equ $ 
  701 D1:B1A5 D2 AF B1 D1 	jp nc,sdcomp_2bpc_1_skip ;skip if not 2bpc or 3bpc
  702 D1:B1A9 -  -  -  -  	
  703 D1:B1A9 7E -  -  -  	ld a,(hl);color data 
  704 D1:B1AA 32 73 B0 D1 	ld (sdcomp_indexed_color_data_2),a 
  705 D1:B1AE 23 -  -  -  	inc hl 
  706 D1:B1AF -  -  -  -  	
  707 D1:B1AF -  -  -  -  sdcomp_2bpc_1_skip:	
  708 D1:B1AF -  -  -  -  
  709 D1:B1AF -  -  -  -  
  710 D1:B1AF 37 -  -  -  	scf 
  711 D1:B1B0 -  -  -  -  sdcomp_3bpc_1 .equ $ 
  712 D1:B1B0 DA C0 B1 D1 	jp c,sdcomp_3bpc_1_skip ;skip if not 3bpc
  713 D1:B1B4 -  -  -  -  	
  714 D1:B1B4 7E -  -  -  	ld a,(hl);color data 
  715 D1:B1B5 32 61 B0 D1 	ld (sdcomp_indexed_color_data_3),a 
  716 D1:B1B9 23 -  -  -  	inc hl 
  717 D1:B1BA 7E -  -  -  	ld a,(hl);color data 
  718 D1:B1BB 32 55 B0 D1 	ld (sdcomp_indexed_color_data_4),a 
  719 D1:B1BF 23 -  -  -  	inc hl 
  720 D1:B1C0 -  -  -  -  	
  721 D1:B1C0 -  -  -  -  sdcomp_3bpc_1_skip:	
  722 D1:B1C0 -  -  -  -  
  723 D1:B1C0 -  -  -  -  	
  724 D1:B1C0 D5 -  -  -  	push de ;loops/line data location
  725 D1:B1C1 EB -  -  -  	ex de,hl
  726 D1:B1C2 78 -  -  -  	ld a,b
  727 D1:B1C3 01 00 00 00 	ld bc,0
  728 D1:B1C7 4F -  -  -  	ld c,a;height 
  729 D1:B1C8 09 -  -  -  	add hl,bc
  730 D1:B1C9 EB -  -  -  	ex de,hl;de points to data write location
  731 D1:B1CA -  -  -  -  	
  732 D1:B1CA -  -  -  -  	
  733 D1:B1CA D9 -  -  -  	exx;in to shadow
  734 D1:B1CB D1 -  -  -  	pop de 
  735 D1:B1CC E1 -  -  -  	pop hl ;alpha data stored from earlier
  736 D1:B1CD 0E 80 -  -  	ld c,%10000000;alpha mask
  737 D1:B1CF D9 -  -  -  	exx;out 
  738 D1:B1D0 0E 80 -  -  	ld c,%10000000;color mask
  739 D1:B1D2 -  -  -  -  	
  740 D1:B1D2 -  -  -  -  	;HL now points to pixel color data 
  741 D1:B1D2 -  -  -  -  	;HL' points to pixel alpha data 
  742 D1:B1D2 -  -  -  -  	;C holds color mask
  743 D1:B1D2 -  -  -  -  	;C' holds alpha mask
  744 D1:B1D2 -  -  -  -  	;DE' holds loops/line output data location
  745 D1:B1D2 -  -  -  -  	;DE holds main data output location
  746 D1:B1D2 -  -  -  -  	;A holds height
  747 D1:B1D2 -  -  -  -  	;A' holds bits remaining in row
  748 D1:B1D2 -  -  -  -  
  749 D1:B1D2 -  -  -  -  
  750 D1:B1D2 37 -  -  -  	scf 
  751 D1:B1D3 -  -  -  -  sdcomp_flip_setup .equ $
  752 D1:B1D3 DA E3 B1 D1 	jp c,sdcomp_find_gap_length;continue if no flip
  753 D1:B1D7 -  -  -  -  
  754 D1:B1D7 -  -  -  -  	
  755 D1:B1D7 2B -  -  -  	dec hl;dec color pointer
  756 D1:B1D8 0E 01 -  -  	ld c, %00000001
  757 D1:B1DA D9 -  -  -  	exx;to shadow 
  758 D1:B1DB 2B -  -  -  	dec hl;dec alpha pointer
  759 D1:B1DC 0E 01 -  -  	ld c, %00000001;alpha mask
  760 D1:B1DE CD A4 B0 D1 	call sdcomp_traverse_initial
  761 D1:B1E2 D9 -  -  -  	exx ;out of shadow 
  762 D1:B1E3 -  -  -  -  	
  763 D1:B1E3 -  -  -  -  	
  764 D1:B1E3 -  -  -  -  
  765 D1:B1E3 -  -  -  -  	;TODO jump to BG routine here
  766 D1:B1E3 -  -  -  -  	;END SETUP ======================================================================================================
  767 D1:B1E3 -  -  -  -  	
  768 D1:B1E3 -  -  -  -  	
  769 D1:B1E3 -  -  -  -  sdcomp_find_gap_length:
  770 D1:B1E3 -  -  -  -  	
  771 D1:B1E3 -  -  -  -  	
  772 D1:B1E3 -  -  -  -  	
  773 D1:B1E3 -  -  -  -  ;If virtual 0 was read as the start of an alpha pair, remove 1 from next gap length 
  774 D1:B1E3 -  -  -  -  ;this will occur if:
  775 D1:B1E3 -  -  -  -  ;Starting pixels are at the end of line, eg :00000001. ldir length = 0 as virtual 0s are read. interline length should be reduced by 1 
  776 D1:B1E3 -  -  -  -  ;
  777 D1:B1E3 -  -  -  -  ;if during ldir search, line data ends in 11, followed by virtual 00. In this case the 11 is the ending pixels if slow sprite, so gap length should not be reduced
  778 D1:B1E3 -  -  -  -  ; This is done from the addition of 1 gap length whenever the 11->00 case occurs, canceling the interline reduction due to reading vitrual 00. 
  779 D1:B1E3 -  -  -  -  	
  780 D1:B1E3 D9 -  -  -  	exx ;to shadow
  781 D1:B1E4 -  -  -  -  	
  782 D1:B1E4 -  -  -  -  sdcomp_add_1_gap_length .equ $ + 1
  783 D1:B1E4 06 00 -  -  	ld b,0;00 pairs found 
  784 D1:B1E6 3E 00 -  -  	ld a,0 ;reset
  785 D1:B1E8 32 E5 B1 D1 	ld (sdcomp_add_1_gap_length),a 
  786 D1:B1EC -  -  -  -  
  787 D1:B1EC -  -  -  -  sdcomp_find_gap_length_loop:
  788 D1:B1EC -  -  -  -  
  789 D1:B1EC 37 -  -  -  	scf 
  790 D1:B1ED -  -  -  -  sdcomp_end_of_line_gaplength .equ $ 
  791 D1:B1ED DA 16 B2 D1 	jp c, sdcomp_end_of_line_gaplength_skip
  792 D1:B1F1 -  -  -  -  	
  793 D1:B1F1 -  -  -  -  	;We have reached the end of the alpha data, add between line gap length 
  794 D1:B1F1 -  -  -  -  sdcomp_gap_btwn_rows .equ $ + 1
  795 D1:B1F1 3E 00 -  -  	ld a,0
  796 D1:B1F3 80 -  -  -  	add a,b 
  797 D1:B1F4 -  -  -  -  sdcomp_dec_gap_btwn_rows .equ $ 	
  798 D1:B1F4 00 -  -  -  	nop ;replace with dec a to decrease gap length 
  799 D1:B1F5 47 -  -  -  	ld b,a 
  800 D1:B1F6 3E 00 -  -  	ld a,%00000000 ;nop 
  801 D1:B1F8 32 F4 B1 D1 	ld (sdcomp_dec_gap_btwn_rows),a ;reset dec gap
  802 D1:B1FC 3E DA -  -  	ld a,%11011010;jp c
  803 D1:B1FE 32 5D AF D1 	ld (sdcomp_end_of_line_alp),a ;Reset virtual zero flag, reading alpha data will now be the next line 
  804 D1:B202 32 ED B1 D1 	ld (sdcomp_end_of_line_gaplength),a ;Reset flag for adding interline gaplength 
  805 D1:B206 -  -  -  -  	
  806 D1:B206 37 -  -  -  	scf
  807 D1:B207 -  -  -  -  sdcomp_flip_traverse .equ $
  808 D1:B207 D4 96 B0 D1 	call nc,sdcomp_traverse_line_data ;call line data traverse if flip
  809 D1:B20B -  -  -  -  		
  810 D1:B20B -  -  -  -  	;Write loops/line data as we have reached a gap btwn lines 
  811 D1:B20B 3A 7B B2 D1 	ld a,(sdcomp_loops_per_line_counter)
  812 D1:B20F 12 -  -  -  	ld (de),a ;write loops/line data 
  813 D1:B210 13 -  -  -  	inc de
  814 D1:B211 -  -  -  -  	
  815 D1:B211 -  -  -  -  	
  816 D1:B211 37 -  -  -  	scf 
  817 D1:B212 -  -  -  -  sdcomp_end_reached_flag .equ $;check if end of sprite reached
  818 D1:B212 D2 E4 B2 D1 	jp nc,sdcomp_end
  819 D1:B216 -  -  -  -  
  820 D1:B216 -  -  -  -  	
  821 D1:B216 -  -  -  -  sdcomp_end_of_line_gaplength_skip:
  822 D1:B216 CD B5 AF D1 	call sdcomp_get_next_alpha_pair
  823 D1:B21A -  -  -  -  	;call write_a_to_ram
  824 D1:B21A 04 -  -  -  	inc b 
  825 D1:B21B -  -  -  -  
  826 D1:B21B -  -  -  -  	;push af ;TEST
  827 D1:B21B -  -  -  -  	;ld a,$AB;TEST
  828 D1:B21B -  -  -  -  	;call write_a_to_ram
  829 D1:B21B -  -  -  -  	
  830 D1:B21B -  -  -  -  	;call write_a_to_ram
  831 D1:B21B -  -  -  -  	;pop af ;TEST
  832 D1:B21B -  -  -  -  	
  833 D1:B21B B7 -  -  -  	or a
  834 D1:B21C CA EC B1 D1 	jp z,sdcomp_find_gap_length_loop
  835 D1:B220 -  -  -  -  	
  836 D1:B220 -  -  -  -  ;END OF GAP LENGTH LOOP =====================	
  837 D1:B220 -  -  -  -  	
  838 D1:B220 F5 -  -  -  	push af; save leading pixel alpha data 
  839 D1:B221 -  -  -  -  	;B holds number of 00 pairs + 1
  840 D1:B221 -  -  -  -  	
  841 D1:B221 -  -  -  -  	;ld a,$AA ;test
  842 D1:B221 -  -  -  -  	;call write_a_to_ram
  843 D1:B221 -  -  -  -  	;ld a,b ;test
  844 D1:B221 -  -  -  -  	;call write_a_to_ram
  845 D1:B221 -  -  -  -  	
  846 D1:B221 -  -  -  -  	
  847 D1:B221 -  -  -  -  	
  848 D1:B221 -  -  -  -  	;Write gap length data to output
  849 D1:B221 78 -  -  -  	ld a,b 
  850 D1:B222 D9 -  -  -  	exx;out of shadow 
  851 D1:B223 12 -  -  -  	ld (de),a;GAP LENGTH 
  852 D1:B224 13 -  -  -  	inc de 
  853 D1:B225 D9 -  -  -  	exx;into shadow 	
  854 D1:B226 -  -  -  -  	
  855 D1:B226 -  -  -  -  	
  856 D1:B226 -  -  -  -  ;LEADING PIXELS ===================================================================================================
  857 D1:B226 F1 -  -  -  	pop af ;a holds leading pixel pair alpha data (FF,0F,F0)
  858 D1:B227 -  -  -  -  	
  859 D1:B227 37 -  -  -  	scf 
  860 D1:B228 -  -  -  -  sdcomp_fast_1 .equ $ 
  861 D1:B228 D2 32 B2 D1 	jp nc, sdcomp_ldir_start 
  862 D1:B22C -  -  -  -  	
  863 D1:B22C D9 -  -  -  	exx;out of shadow
  864 D1:B22D CD F5 B0 D1 	call sdcomp_write_leading_or_end_pixels
  865 D1:B231 D9 -  -  -  	exx;into shadow 
  866 D1:B232 -  -  -  -  	
  867 D1:B232 -  -  -  -  
  868 D1:B232 -  -  -  -  	
  869 D1:B232 -  -  -  -  ;LDIR ==============================================================================================================	
  870 D1:B232 -  -  -  -  	;Count number of 11 pairs for LDIR section
  871 D1:B232 -  -  -  -  	;If end of line reached we know last pixels must be the ending pair
  872 D1:B232 -  -  -  -  	;
  873 D1:B232 -  -  -  -  	
  874 D1:B232 -  -  -  -  	;If ending is 11 -> 00 
  875 D1:B232 -  -  -  -  	;11 pair will need to become ending pixels if slow sprite
  876 D1:B232 -  -  -  -  	;Will need to reduce b by 1 
  877 D1:B232 -  -  -  -  	
  878 D1:B232 -  -  -  -  	;If ending is 11 ->01/10
  879 D1:B232 -  -  -  -  	;last pair wil become ending pixels, dont reduce b 
  880 D1:B232 -  -  -  -  	
  881 D1:B232 -  -  -  -  sdcomp_ldir_start:
  882 D1:B232 -  -  -  -  
  883 D1:B232 -  -  -  -  ;	ld a, %11010010 ;jp nc 
  884 D1:B232 -  -  -  -  ;	ld (sdcomp_end_of_line_2) , a ;reset end of line flag 
  885 D1:B232 -  -  -  -  
  886 D1:B232 06 00 -  -  	ld b,0; will hold number of 11 pairs found
  887 D1:B234 -  -  -  -  sdcomp_ldir_loop:
  888 D1:B234 CD B5 AF D1 	call sdcomp_get_next_alpha_pair ;get alpha data
  889 D1:B238 04 -  -  -  	inc b 
  890 D1:B239 -  -  -  -  	
  891 D1:B239 -  -  -  -  	;push af 
  892 D1:B239 -  -  -  -  	;ld a,$DE 
  893 D1:B239 -  -  -  -  	;call write_a_to_ram
  894 D1:B239 -  -  -  -  	;pop af
  895 D1:B239 -  -  -  -  	;call write_a_to_ram
  896 D1:B239 -  -  -  -  	
  897 D1:B239 -  -  -  -  ;	scf 
  898 D1:B239 -  -  -  -  ;sdcomp_end_of_line_2 .equ $ ;set when end of line reached 
  899 D1:B239 -  -  -  -  ;	jp nc, sdcomp_ldir_loop_end;If read last in line
  900 D1:B239 -  -  -  -  	
  901 D1:B239 EE FF -  -  	xor %11111111 ;flip all bits  (CPL does not set flags :(  )
  902 D1:B23B CA 34 B2 D1 	jp z, sdcomp_ldir_loop; if a is 0 means a was $FF 
  903 D1:B23F 2F -  -  -  	cpl ; flip back 
  904 D1:B240 -  -  -  -  sdcomp_ldir_loop_end:
  905 D1:B240 -  -  -  -  
  906 D1:B240 -  -  -  -  	
  907 D1:B240 -  -  -  -  	;at this point b holds # 11 pairs +1 
  908 D1:B240 37 -  -  -  	scf 
  909 D1:B241 -  -  -  -  sdcomp_fast_2 .equ $ 
  910 D1:B241 D2 5C B2 D1 	jp nc,sdcomp_ldir_write ;jump before dec b because we have read first 11 pair in searching for gaplength 
  911 D1:B245 -  -  -  -  
  912 D1:B245 -  -  -  -  	
  913 D1:B245 -  -  -  -  	
  914 D1:B245 05 -  -  -  	dec b ;b holds # 11 pairs 
  915 D1:B246 CA 6F B2 D1 	jp z,sdcomp_no_ldir;no pairs found,no ldir length
  916 D1:B24A B7 -  -  -  	or a
  917 D1:B24B C2 5C B2 D1 	jp nz,sdcomp_ldir_write;ends not in 00, has single ending pixel
  918 D1:B24F -  -  -  -  	
  919 D1:B24F -  -  -  -  	;ends in 11 -> 00,ending pixels will be 11 if slow sprite. If fast, jump to ldir write here 
  920 D1:B24F -  -  -  -  	
  921 D1:B24F -  -  -  -  	;ld a,$DF
  922 D1:B24F -  -  -  -  	;call write_a_to_ram
  923 D1:B24F -  -  -  -  	
  924 D1:B24F -  -  -  -  	;must add 1 to next gap length, have already read first 00
  925 D1:B24F -  -  -  -  	;for the case with virtual 00, this cancels the decrease in gap length 
  926 D1:B24F 3E 01 -  -  	ld a,1;start w 1 gap len
  927 D1:B251 32 E5 B1 D1 	ld (sdcomp_add_1_gap_length),a 
  928 D1:B255 3E FF -  -  	ld a,$ff;ending pixels 11
  929 D1:B257 -  -  -  -  	
  930 D1:B257 05 -  -  -  	dec b;reduce length by 1, final pair is end pixels
  931 D1:B258 CA 6F B2 D1 	jp z,sdcomp_no_ldir;no ldir length,ending pixels is 11 
  932 D1:B25C -  -  -  -  	;b holds ldir length 
  933 D1:B25C -  -  -  -  	
  934 D1:B25C -  -  -  -  
  935 D1:B25C -  -  -  -  ;b holds ldir length, a holds ending pixels
  936 D1:B25C -  -  -  -  sdcomp_ldir_write:
  937 D1:B25C -  -  -  -  
  938 D1:B25C -  -  -  -  	;b holds 11 pairs found 
  939 D1:B25C -  -  -  -  	
  940 D1:B25C -  -  -  -  	;push af;TEST
  941 D1:B25C -  -  -  -  	;ld a,$DA 
  942 D1:B25C -  -  -  -  	;call write_a_to_ram
  943 D1:B25C -  -  -  -  	;ld a,b 
  944 D1:B25C -  -  -  -  	;call write_a_to_ram
  945 D1:B25C -  -  -  -  	;pop af ;TEST
  946 D1:B25C -  -  -  -  
  947 D1:B25C F5 -  -  -  	push af;save ending pixels
  948 D1:B25D 78 -  -  -  	ld a,b
  949 D1:B25E D9 -  -  -  	exx ;out 
  950 D1:B25F 12 -  -  -  	ld (de),a;write ldir length
  951 D1:B260 13 -  -  -  	inc de 
  952 D1:B261 CD E1 B0 D1 	call sdcomp_write_ldir_data_loop
  953 D1:B265 -  -  -  -  
  954 D1:B265 F1 -  -  -  	pop af;return ending pixels
  955 D1:B266 -  -  -  -  	
  956 D1:B266 37 -  -  -  	scf
  957 D1:B267 -  -  -  -  sdcomp_fast_3 .equ $ 
  958 D1:B267 D2 7A B2 D1 	jp nc,sdcomp_inc_loops_per_line ;skip ending pixels
  959 D1:B26B -  -  -  -  	
  960 D1:B26B C3 76 B2 D1 	jp sdcomp_write_end_pixels
  961 D1:B26F -  -  -  -  sdcomp_no_ldir:;no ldir length, a holds ending pixels,00,10,01,11
  962 D1:B26F -  -  -  -  
  963 D1:B26F -  -  -  -  
  964 D1:B26F -  -  -  -  	;push af ;TEST
  965 D1:B26F -  -  -  -  	;ld a,$DB
  966 D1:B26F -  -  -  -  	;call write_a_to_ram
  967 D1:B26F -  -  -  -  	;pop af ;TEST
  968 D1:B26F -  -  -  -  	;call write_a_to_ram
  969 D1:B26F -  -  -  -  
  970 D1:B26F F5 -  -  -  	push af;save end pixels
  971 D1:B270 -  -  -  -  	
  972 D1:B270 D9 -  -  -  	exx;out of shadow
  973 D1:B271 3E 00 -  -  	ld a,0
  974 D1:B273 12 -  -  -  	ld (de),a ;write 0 as ldir length
  975 D1:B274 13 -  -  -  	inc de 
  976 D1:B275 F1 -  -  -  	pop af;return ending pixels
  977 D1:B276 -  -  -  -  
  978 D1:B276 -  -  -  -  ;WRITE ENDING PIXELS ======================================================================================
  979 D1:B276 -  -  -  -  
  980 D1:B276 -  -  -  -  sdcomp_write_end_pixels:
  981 D1:B276 -  -  -  -  ;not in shadow
  982 D1:B276 -  -  -  -  	
  983 D1:B276 -  -  -  -  	;test
  984 D1:B276 -  -  -  -  	;push af 
  985 D1:B276 -  -  -  -  	;ld a,$E0
  986 D1:B276 -  -  -  -  	;call write_a_to_ram
  987 D1:B276 -  -  -  -  	;pop af 
  988 D1:B276 -  -  -  -  	
  989 D1:B276 -  -  -  -  
  990 D1:B276 CD F5 B0 D1 	call sdcomp_write_leading_or_end_pixels
  991 D1:B27A -  -  -  -  	
  992 D1:B27A -  -  -  -  	
  993 D1:B27A -  -  -  -  ;sdcomp_test_lines_stop .equ $ + 1 
  994 D1:B27A -  -  -  -  	;ld a,2
  995 D1:B27A -  -  -  -  	;dec a 
  996 D1:B27A -  -  -  -  	;jp z,sdcomp_end
  997 D1:B27A -  -  -  -  	;ld (sdcomp_test_lines_stop),a 
  998 D1:B27A -  -  -  -  
  999 D1:B27A -  -  -  -  sdcomp_inc_loops_per_line:	
 1000 D1:B27A -  -  -  -  	;INC LOOP/LINE count
 1001 D1:B27A -  -  -  -  sdcomp_loops_per_line_counter .equ $ + 1
 1002 D1:B27A 3E 00 -  -  	ld a,0;inc number of loops
 1003 D1:B27C 3C -  -  -  	inc a 
 1004 D1:B27D 32 7B B2 D1 	ld (sdcomp_loops_per_line_counter),a
 1005 D1:B281 -  -  -  -  
 1006 D1:B281 -  -  -  -  
 1007 D1:B281 -  -  -  -  	;jp sdcomp_find_gap_length ;TESTING REMOVE
 1008 D1:B281 -  -  -  -  	
 1009 D1:B281 -  -  -  -  	;Check the timer to see if we need to begin rendering next frame 
 1010 D1:B281 -  -  -  -  	;1090 cycles @ 32768hz ~= 1 frame (1/30s)
 1011 D1:B281 -  -  -  -  	;Should stop decompressions at 1000 cycles?
 1012 D1:B281 -  -  -  -  	; = %00000011, 11100000
 1013 D1:B281 -  -  -  -  sdcomp_clock_check_loop:
 1014 D1:B281 3A 01 00 F2 	ld a,($F20001);128hz clock
 1015 D1:B285 FE 03 -  -  	cp %00000011 ;check if reached 3 
 1016 D1:B287 DA E3 B1 D1 	jp c,sdcomp_find_gap_length ;msb <= 2, can continue  
 1017 D1:B28B 3A 00 00 F2 	ld a,($F20000);32768hz clock
 1018 D1:B28F FE E0 -  -  	cp %11100000;check if reached value 
 1019 D1:B291 DA E3 B1 D1 	jp c,sdcomp_find_gap_length ;msb = 3 and lsb < value, can continue
 1020 D1:B295 -  -  -  -  	
 1021 D1:B295 -  -  -  -  	;Past clock threshold, need to stop decompressions
 1022 D1:B295 -  -  -  -  
 1023 D1:B295 -  -  -  -  
 1024 D1:B295 -  -  -  -  	;TODO can prob not need to save (a) register
 1025 D1:B295 -  -  -  -  sdcomp_interrupt:
 1026 D1:B295 -  -  -  -  
 1027 D1:B295 -  -  -  -  
 1028 D1:B295 -  -  -  -  	;not in shadow 
 1029 D1:B295 22 C1 B2 D1 	ld (sdcomp_cont_hl),hl 
 1030 D1:B299 EB -  -  -  	ex de,hl
 1031 D1:B29A 22 C5 B2 D1 	ld (sdcomp_cont_de),hl 
 1032 D1:B29E C5 -  -  -  	push bc
 1033 D1:B29F E1 -  -  -  	pop hl
 1034 D1:B2A0 22 C9 B2 D1 	ld (sdcomp_cont_bc),hl
 1035 D1:B2A4 32 CD B2 D1 	ld (sdcomp_cont_a),a 
 1036 D1:B2A8 D9 -  -  -  	exx 
 1037 D1:B2A9 08 -  -  -  	ex af,af' ;'
 1038 D1:B2AA 22 D1 B2 D1 	ld (sdcomp_cont_hlP),hl 
 1039 D1:B2AE EB -  -  -  	ex de,hl
 1040 D1:B2AF 22 D5 B2 D1 	ld (sdcomp_cont_deP),hl 
 1041 D1:B2B3 C5 -  -  -  	push bc 
 1042 D1:B2B4 E1 -  -  -  	pop hl
 1043 D1:B2B5 22 D9 B2 D1 	ld (sdcomp_cont_bcP),hl
 1044 D1:B2B9 32 DD B2 D1 	ld (sdcomp_cont_aP),a 
 1045 D1:B2BD -  -  -  -  	
 1046 D1:B2BD -  -  -  -  	
 1047 D1:B2BD -  -  -  -  	;ld a, $AA
 1048 D1:B2BD -  -  -  -  	;call write_a_to_ram
 1049 D1:B2BD -  -  -  -  	
 1050 D1:B2BD 3E 01 -  -  	ld a,1 ;Return 1 if interrupted
 1051 D1:B2BF C9 -  -  -  	ret 
 1052 D1:B2C0 -  -  -  -  	
 1053 D1:B2C0 -  -  -  -  sdcomp_continue:
 1054 D1:B2C0 -  -  -  -  	;not in shadow 
 1055 D1:B2C0 -  -  -  -  sdcomp_cont_hl .equ $ + 1
 1056 D1:B2C0 21 00 00 00 	ld hl,0
 1057 D1:B2C4 -  -  -  -  sdcomp_cont_de .equ $ + 1
 1058 D1:B2C4 11 00 00 00 	ld de,0
 1059 D1:B2C8 -  -  -  -  sdcomp_cont_bc .equ $ + 1
 1060 D1:B2C8 01 00 00 00 	ld bc,0
 1061 D1:B2CC -  -  -  -  sdcomp_cont_a .equ $ + 1
 1062 D1:B2CC 3E 00 -  -  	ld a,0
 1063 D1:B2CE D9 -  -  -  	exx 
 1064 D1:B2CF 08 -  -  -  	ex af,af' ;'
 1065 D1:B2D0 -  -  -  -  sdcomp_cont_hlP .equ $ + 1
 1066 D1:B2D0 21 00 00 00 	ld hl,0
 1067 D1:B2D4 -  -  -  -  sdcomp_cont_deP .equ $ + 1
 1068 D1:B2D4 11 00 00 00 	ld de,0
 1069 D1:B2D8 -  -  -  -  sdcomp_cont_bcP .equ $ + 1
 1070 D1:B2D8 01 00 00 00 	ld bc,0
 1071 D1:B2DC -  -  -  -  sdcomp_cont_aP .equ $ + 1
 1072 D1:B2DC 3E 00 -  -  	ld a,0	
 1073 D1:B2DE -  -  -  -  	
 1074 D1:B2DE D9 -  -  -  	exx ;out of shadow 
 1075 D1:B2DF 08 -  -  -  	ex af,af' ;'
 1076 D1:B2E0 -  -  -  -  
 1077 D1:B2E0 C3 E3 B1 D1 	jp sdcomp_find_gap_length
 1078 D1:B2E4 -  -  -  -  
 1079 D1:B2E4 -  -  -  -  	
 1080 D1:B2E4 -  -  -  -  
 1081 D1:B2E4 -  -  -  -  sdcomp_end:
 1082 D1:B2E4 -  -  -  -  	
 1083 D1:B2E4 -  -  -  -  	;ld a,$69
 1084 D1:B2E4 -  -  -  -  	;call write_a_to_ram
 1085 D1:B2E4 -  -  -  -  	
 1086 D1:B2E4 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1087 D1:B2E6 32 12 B2 D1 	ld (sdcomp_end_reached_flag),a 
 1088 D1:B2EA -  -  -  -  	
 1089 D1:B2EA 3E 00 -  -  	ld a,0 ;return 0 if finished decompressing 
 1090 D1:B2EC C9 -  -  -  	ret 
 1091 D1:B2ED -  -  -  -  
 1092 D1:B2ED -  -  -  -  
 1093 D1:B2ED -  -  -  -  ;bit orders
 1094 D1:B2ED -  -  -  -  ;	noflip   flip 
 1095 D1:B2ED -  -  -  -  ;4bpp 3210 	 0123
 1096 D1:B2ED -  -  -  -  ;3bpp 210	 012
 1097 D1:B2ED -  -  -  -  ;2bpp 10	 01
 1098 D1:B2ED -  -  -  -  ;1bpp 0		 0
 1099 D1:B2ED -  -  -  -  
 1100 D1:B2ED -  -  -  -  
 1101 D1:B2ED -  -  -  -  sdcomp_set_0bpc:
 1102 D1:B2ED 3E DA -  -  	ld a,%11011010;jp c
 1103 D1:B2EF 32 FE AF D1 	ld (sdcomp_0bpc),a
 1104 D1:B2F3 -  -  -  -  	
 1105 D1:B2F3 32 A5 B1 D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
 1106 D1:B2F7 32 B0 B1 D1 	ld (sdcomp_3bpc_1),a 
 1107 D1:B2FB -  -  -  -  	
 1108 D1:B2FB 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1109 D1:B2FD 32 9A B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1110 D1:B301 3E 00 -  -  	ld a,%00000000
 1111 D1:B303 32 BF B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1112 D1:B307 C9 -  -  -  	ret 
 1113 D1:B308 -  -  -  -  	
 1114 D1:B308 -  -  -  -  sdcomp_set_1bpc:
 1115 D1:B308 3E D2 -  -  	ld a,%11010010;jp nc
 1116 D1:B30A 32 FE AF D1 	ld (sdcomp_0bpc),a
 1117 D1:B30E 3E DA -  -  	ld a,%11011010;jp c
 1118 D1:B310 32 10 B0 D1 	ld (sdcomp_1bpc),a
 1119 D1:B314 -  -  -  -  	
 1120 D1:B314 32 A5 B1 D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
 1121 D1:B318 32 B0 B1 D1 	ld (sdcomp_3bpc_1),a 
 1122 D1:B31C -  -  -  -  	
 1123 D1:B31C 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1124 D1:B31E 32 9A B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1125 D1:B322 -  -  -  -  	
 1126 D1:B322 -  -  -  -  	
 1127 D1:B322 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1128 D1:B324 32 0E B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1129 D1:B328 -  -  -  -  	
 1130 D1:B328 3E 80 -  -  	ld a,%10000000
 1131 D1:B32A 32 BF B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1132 D1:B32E -  -  -  -  	
 1133 D1:B32E 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1134 D1:B330 32 B8 B0 D1 	ld (sdcomp_traverse_2bpp),a
 1135 D1:B334 32 BA B0 D1 	ld (sdcomp_traverse_3bpp),a
 1136 D1:B338 32 BC B0 D1 	ld (sdcomp_traverse_4bpp),a
 1137 D1:B33C C9 -  -  -  	ret 
 1138 D1:B33D -  -  -  -  
 1139 D1:B33D -  -  -  -  sdcomp_set_2bpc:
 1140 D1:B33D 3E D2 -  -  	ld a,%11010010;jp nc
 1141 D1:B33F 32 FE AF D1 	ld (sdcomp_0bpc),a
 1142 D1:B343 32 10 B0 D1 	ld (sdcomp_1bpc),a
 1143 D1:B347 -  -  -  -  	
 1144 D1:B347 3E DA -  -  	ld a,%11011010;jp c
 1145 D1:B349 32 22 B0 D1 	ld (sdcomp_2bpc),a
 1146 D1:B34D -  -  -  -  	
 1147 D1:B34D 32 B0 B1 D1 	ld (sdcomp_3bpc_1),a ;for setting local pallete data
 1148 D1:B351 -  -  -  -  	
 1149 D1:B351 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1150 D1:B353 32 9A B1 D1 	ld (sdcomp_1bpc_1),a;for setting local pallete data
 1151 D1:B357 32 A5 B1 D1 	ld (sdcomp_2bpc_1),a 
 1152 D1:B35B -  -  -  -  	
 1153 D1:B35B 37 -  -  -  	scf 
 1154 D1:B35C -  -  -  -  sdcomp_flip_2bpc .equ $ 
 1155 D1:B35C D2 6D B3 D1 	jp nc, sdcomp_2bpc_flip
 1156 D1:B360 -  -  -  -  	
 1157 D1:B360 3E CB -  -  	ld a,%11001011 ;set 1,e
 1158 D1:B362 32 0E B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1159 D1:B366 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1160 D1:B368 32 20 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1161 D1:B36C -  -  -  -  	
 1162 D1:B36C C9 -  -  -  	ret 
 1163 D1:B36D -  -  -  -  	
 1164 D1:B36D -  -  -  -  sdcomp_2bpc_flip:
 1165 D1:B36D 3E CB -  -  	ld a,%11001011 ;set 1,e
 1166 D1:B36F 32 20 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1167 D1:B373 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1168 D1:B375 32 0E B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1169 D1:B379 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1170 D1:B37B 32 B8 B0 D1 	ld (sdcomp_traverse_2bpp),a
 1171 D1:B37F -  -  -  -  
 1172 D1:B37F 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1173 D1:B381 32 BA B0 D1 	ld (sdcomp_traverse_3bpp),a
 1174 D1:B385 32 BC B0 D1 	ld (sdcomp_traverse_4bpp),a
 1175 D1:B389 -  -  -  -  	
 1176 D1:B389 3E C0 -  -  	ld a,%11000000
 1177 D1:B38B 32 BF B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1178 D1:B38F C9 -  -  -  	ret 
 1179 D1:B390 -  -  -  -  
 1180 D1:B390 -  -  -  -  
 1181 D1:B390 -  -  -  -  sdcomp_set_3bpc:
 1182 D1:B390 -  -  -  -  	
 1183 D1:B390 3E D2 -  -  	ld a,%11010010;jp nc
 1184 D1:B392 32 FE AF D1 	ld (sdcomp_0bpc),a
 1185 D1:B396 32 10 B0 D1 	ld (sdcomp_1bpc),a
 1186 D1:B39A 32 22 B0 D1 	ld (sdcomp_2bpc),a
 1187 D1:B39E -  -  -  -  	
 1188 D1:B39E 3E DA -  -  	ld a,%11011010;jp c
 1189 D1:B3A0 32 34 B0 D1 	ld (sdcomp_3bpc),a
 1190 D1:B3A4 -  -  -  -  	
 1191 D1:B3A4 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1192 D1:B3A6 32 9A B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1193 D1:B3AA 32 A5 B1 D1 	ld (sdcomp_2bpc_1),a 
 1194 D1:B3AE 32 B0 B1 D1 	ld (sdcomp_3bpc_1),a 
 1195 D1:B3B2 -  -  -  -  	
 1196 D1:B3B2 37 -  -  -  	scf 
 1197 D1:B3B3 -  -  -  -  sdcomp_flip_3bpc .equ $ 
 1198 D1:B3B3 D2 CA B3 D1 	jp nc, sdcomp_3bpc_flip	
 1199 D1:B3B7 -  -  -  -  	
 1200 D1:B3B7 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1201 D1:B3B9 32 0E B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1202 D1:B3BD 3E CB -  -  	ld a,%11001011 ;set 1,e
 1203 D1:B3BF 32 20 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1204 D1:B3C3 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1205 D1:B3C5 32 32 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1206 D1:B3C9 -  -  -  -  	
 1207 D1:B3C9 C9 -  -  -  	ret 
 1208 D1:B3CA -  -  -  -  	
 1209 D1:B3CA -  -  -  -  sdcomp_3bpc_flip:
 1210 D1:B3CA 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1211 D1:B3CC 32 32 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1212 D1:B3D0 3E CB -  -  	ld a,%11001011 ;set 1,e
 1213 D1:B3D2 32 20 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1214 D1:B3D6 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1215 D1:B3D8 32 0E B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1216 D1:B3DC -  -  -  -  	
 1217 D1:B3DC 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1218 D1:B3DE 32 B8 B0 D1 	ld (sdcomp_traverse_2bpp),a 
 1219 D1:B3E2 32 BA B0 D1 	ld (sdcomp_traverse_3bpp),a 
 1220 D1:B3E6 -  -  -  -  	
 1221 D1:B3E6 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1222 D1:B3E8 32 BC B0 D1 	ld (sdcomp_traverse_4bpp),a
 1223 D1:B3EC -  -  -  -  	
 1224 D1:B3EC 3E E0 -  -  	ld a,%11100000
 1225 D1:B3EE 32 BF B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1226 D1:B3F2 -  -  -  -  	
 1227 D1:B3F2 C9 -  -  -  	ret 
 1228 D1:B3F3 -  -  -  -  
 1229 D1:B3F3 -  -  -  -  sdcomp_set_4bpc:
 1230 D1:B3F3 -  -  -  -  
 1231 D1:B3F3 3E D2 -  -  	ld a,%11010010;jp nc
 1232 D1:B3F5 32 FE AF D1 	ld (sdcomp_0bpc),a
 1233 D1:B3F9 32 10 B0 D1 	ld (sdcomp_1bpc),a
 1234 D1:B3FD 32 22 B0 D1 	ld (sdcomp_2bpc),a
 1235 D1:B401 -  -  -  -  
 1236 D1:B401 3E DA -  -  	ld a,%11011010;jp c
 1237 D1:B403 -  -  -  -  
 1238 D1:B403 32 9A B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1239 D1:B407 32 A5 B1 D1 	ld (sdcomp_2bpc_1),a 
 1240 D1:B40B 32 B0 B1 D1 	ld (sdcomp_3bpc_1),a 
 1241 D1:B40F -  -  -  -  	
 1242 D1:B40F 37 -  -  -  	scf 
 1243 D1:B410 -  -  -  -  sdcomp_flip_4bpc .equ $ 
 1244 D1:B410 D2 2D B4 D1 	jp nc, sdcomp_4bpc_flip	
 1245 D1:B414 3E DB -  -  	ld a,%11011011 ;set 3,e
 1246 D1:B416 32 0E B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1247 D1:B41A 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1248 D1:B41C 32 20 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1249 D1:B420 3E CB -  -  	ld a,%11001011 ;set 1,e
 1250 D1:B422 32 32 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1251 D1:B426 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1252 D1:B428 32 44 B0 D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
 1253 D1:B42C C9 -  -  -  	ret 
 1254 D1:B42D -  -  -  -  sdcomp_4bpc_flip:
 1255 D1:B42D 3E DB -  -  	ld a,%11011011 ;set 3,e
 1256 D1:B42F 32 44 B0 D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
 1257 D1:B433 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1258 D1:B435 32 32 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1259 D1:B439 3E CB -  -  	ld a,%11001011 ;set 1,e
 1260 D1:B43B 32 20 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1261 D1:B43F 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1262 D1:B441 32 0E B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1263 D1:B445 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1264 D1:B447 32 B8 B0 D1 	ld (sdcomp_traverse_2bpp),a 
 1265 D1:B44B 32 BA B0 D1 	ld (sdcomp_traverse_3bpp),a 
 1266 D1:B44F 32 BC B0 D1 	ld (sdcomp_traverse_4bpp),a 
 1267 D1:B453 -  -  -  -  	
 1268 D1:B453 3E F0 -  -  	ld a,%11110000
 1269 D1:B455 32 BF B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1270 D1:B459 -  -  -  -  	
 1271 D1:B459 C9 -  -  -  	ret 
 1272 D1:B45A -  -  -  -  	
 1273 D1:B45A -  -  -  -  	
 1274 D1:B45A -  -  -  -  sdcomp_set_noalpha:
 1275 D1:B45A 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1276 D1:B45C 32 7F AF D1 	ld (sdcomp_no_alpha_1),a 
 1277 D1:B460 3E DA -  -  	ld a,%11011010;jp c
 1278 D1:B462 32 7F B1 D1 	ld (sdcomp_no_alpha_2),a 
 1279 D1:B466 32 B0 B0 D1 	ld (sdcomp_no_alpha_3),a 
 1280 D1:B46A C9 -  -  -  	ret
 1281 D1:B46B -  -  -  -  	
 1282 D1:B46B -  -  -  -  sdcomp_reset_noalpha:
 1283 D1:B46B -  -  -  -  
 1284 D1:B46B 3E DA -  -  	ld a,%11011010;jp c
 1285 D1:B46D 32 7F AF D1 	ld (sdcomp_no_alpha_1),a 
 1286 D1:B471 3E D2 -  -  	ld a, %11010010 ;jp nc
 1287 D1:B473 32 7F B1 D1 	ld (sdcomp_no_alpha_2),a 
 1288 D1:B477 3E CA -  -  	ld a, %11001010 ;jp z
 1289 D1:B479 32 B0 B0 D1 	ld (sdcomp_no_alpha_3),a 
 1290 D1:B47D C9 -  -  -  	ret
 1291 D1:B47E -  -  -  -  
 1292 D1:B47E -  -  -  -  
 1293 D1:B47E -  -  -  -  sdcomp_set_offset:
 1294 D1:B47E 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1295 D1:B480 32 A7 AF D1 	ld (sdcomp_offset_1),a 
 1296 D1:B484 32 6B AF D1 	ld (sdcomp_bit_offset),a 
 1297 D1:B488 3E 04 -  -  	ld a,%00000100 ;inc b 
 1298 D1:B48A 32 67 B1 D1 	ld (sdcomp_offset_2),a 
 1299 D1:B48E -  -  -  -  	
 1300 D1:B48E C9 -  -  -  	ret 
 1301 D1:B48F -  -  -  -  
 1302 D1:B48F -  -  -  -  sdcomp_reset_offset:
 1303 D1:B48F 3E DA -  -  	ld a,%11011010;jp c
 1304 D1:B491 32 A7 AF D1 	ld (sdcomp_offset_1),a 
 1305 D1:B495 32 6B AF D1 	ld (sdcomp_bit_offset),a 
 1306 D1:B499 3E 00 -  -  	ld a,%00000000 ;nop
 1307 D1:B49B 32 67 B1 D1 	ld (sdcomp_offset_2),a 
 1308 D1:B49F C9 -  -  -  	ret 
 1309 D1:B4A0 -  -  -  -  	
 1310 D1:B4A0 -  -  -  -  sdcomp_set_flip:
 1311 D1:B4A0 3E 01 -  -  	ld a, %00000001 ;rlc c 
 1312 D1:B4A2 32 56 AF D1 	ld (sdcomp_flip_bitstream),a
 1313 D1:B4A6 3E 2B -  -  	ld a, %00101011 ;dec hl 
 1314 D1:B4A8 32 58 AF D1 	ld (sdcomp_flip_bitstream_2),a 
 1315 D1:B4AC 3E DC -  -  	ld a, %11011100 ;call c 
 1316 D1:B4AE 32 07 B2 D1 	ld (sdcomp_flip_traverse),a 
 1317 D1:B4B2 -  -  -  -  	
 1318 D1:B4B2 3E DA -  -  	ld a,%11011010;jp c
 1319 D1:B4B4 32 5C B3 D1 	ld (sdcomp_flip_2bpc),a
 1320 D1:B4B8 32 B3 B3 D1 	ld (sdcomp_flip_3bpc),a
 1321 D1:B4BC 32 10 B4 D1 	ld (sdcomp_flip_4bpc),a
 1322 D1:B4C0 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1323 D1:B4C2 32 D3 B1 D1 	ld (sdcomp_flip_setup),a 
 1324 D1:B4C6 -  -  -  -  	
 1325 D1:B4C6 C9 -  -  -  	ret 
 1326 D1:B4C7 -  -  -  -  
 1327 D1:B4C7 -  -  -  -  sdcomp_reset_flip:
 1328 D1:B4C7 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1329 D1:B4C9 32 56 AF D1 	ld (sdcomp_flip_bitstream),a
 1330 D1:B4CD 3E 23 -  -  	ld a, %00100011 ;inc hl 
 1331 D1:B4CF 32 58 AF D1 	ld (sdcomp_flip_bitstream_2),a 
 1332 D1:B4D3 3E D4 -  -  	ld a, %11010100 ;call nc 
 1333 D1:B4D5 32 07 B2 D1 	ld (sdcomp_flip_traverse),a 
 1334 D1:B4D9 -  -  -  -  	
 1335 D1:B4D9 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1336 D1:B4DB 32 5C B3 D1 	ld (sdcomp_flip_2bpc),a
 1337 D1:B4DF 32 B3 B3 D1 	ld (sdcomp_flip_3bpc),a
 1338 D1:B4E3 32 10 B4 D1 	ld (sdcomp_flip_4bpc),a
 1339 D1:B4E7 3E DA -  -  	ld a,%11011010;jp c
 1340 D1:B4E9 32 D3 B1 D1 	ld (sdcomp_flip_setup),a 
 1341 D1:B4ED C9 -  -  -  	ret 
 1342 D1:B4EE -  -  -  -  
 1343 D1:B4EE -  -  -  -  
 1344 D1:B4EE -  -  -  -  sdcomp_set_fast:
 1345 D1:B4EE 3E DA -  -  	ld a,%11011010;jp c
 1346 D1:B4F0 32 28 B2 D1 	ld(sdcomp_fast_1),a 
 1347 D1:B4F4 32 41 B2 D1 	ld(sdcomp_fast_2),a 
 1348 D1:B4F8 32 67 B2 D1 	ld(sdcomp_fast_3),a 
 1349 D1:B4FC -  -  -  -  	
 1350 D1:B4FC C9 -  -  -  	ret 
 1351 D1:B4FD -  -  -  -  
 1352 D1:B4FD -  -  -  -  sdcomp_reset_fast:
 1353 D1:B4FD 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1354 D1:B4FF 32 28 B2 D1 	ld(sdcomp_fast_1),a 
 1355 D1:B503 32 41 B2 D1 	ld(sdcomp_fast_2),a 
 1356 D1:B507 32 67 B2 D1 	ld(sdcomp_fast_3),a 
 1357 D1:B50B -  -  -  -  	
 1358 D1:B50B C9 -  -  -  	ret 
 1359 D1:B50C -  -  -  -  
 1360 D1:B50C -  -  -  -  
 1361 D1:B50C -  -  -  -  
 1362 D1:B50C -  -  -  -  
 1363 D1:B50C -  -  -  -  
 1364 D1:B50C -  -  -  -  
Listing for file "ascent.asm"
  599 D1:B50C -  -  -  -  #include "drawFG.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFG.txt"
    1 D1:B50C -  -  -  -  
    2 D1:B50C -  -  -  -  FGMaxSpriteHeight .equ 120
    3 D1:B50C -  -  -  -  
    4 D1:B50C -  -  -  -  draw_fg_setup:
    5 D1:B50C 3E D2 -  -  	ld a, %11010010 ;jp nc
    6 D1:B50E 32 04 B6 D1 	ld (dfgs_bg_mode_1),a 
    7 D1:B512 32 68 B6 D1 	ld (dfgs_bg_mode_2),a 
    8 D1:B516 -  -  -  -  
    9 D1:B516 2A F4 AB D1 	ld hl,(draw_buffer)
   10 D1:B51A 22 14 B6 D1 	ld (dfgs_vram_top_1),hl
   11 D1:B51E 22 C9 B6 D1 	ld (dfgs_vram_top_2),hl
   12 D1:B522 01 00 96 00 	ld bc,160*240
   13 D1:B526 09 -  -  -  	add hl,bc
   14 D1:B527 22 84 B6 D1 	ld (dfgs_vram_bottom_1),hl 
   15 D1:B52B 22 A4 B6 D1 	ld (dfgs_vram_bottom_2),hl 
   16 D1:B52F 22 30 B7 D1 	ld (dfgs_vram_bottom_3),hl 
   17 D1:B533 22 50 B7 D1 	ld (dfgs_vram_bottom_4),hl 
   18 D1:B537 C9 -  -  -  	ret 
   19 D1:B538 -  -  -  -  
   20 D1:B538 -  -  -  -  
   21 D1:B538 -  -  -  -  draw_fg_setup_2:
   22 D1:B538 01 EF 00 00 	ld bc,239
   23 D1:B53C 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of fg layer
   24 D1:B53D 7D -  -  -  	ld a,l ;lsb cam pos, = line number in middle frame
   25 D1:B53E 32 D2 B5 D1 	ld (dfgs_cam_height_1),a
   26 D1:B542 32 6D B6 D1 	ld (dfgs_cam_height_2),a ;y value in dataframe of uppermost line of viewport
   27 D1:B546 32 01 B7 D1 	ld (dfgs_cam_height_3),a
   28 D1:B54A 32 1B B7 D1 	ld (dfgs_cam_height_4),a	
   29 D1:B54E ED 44 -  -  	neg 
   30 D1:B550 32 09 B6 D1 	ld (dfgs_viewport_to_upper_frame),a ;1 = top line of VP is top line of middle frame
   31 D1:B554 ED 44 -  -  	neg 
   32 D1:B556 D6 EF -  -  	sub 239
   33 D1:B558 32 24 B7 D1 	ld (dfgs_viewport_bottom_y),a
   34 D1:B55C -  -  -  -  	
   35 D1:B55C 01 00 00 00 	ld bc,0
   36 D1:B560 4C -  -  -  	ld c,h;msb ccam pos 
   37 D1:B561 0C -  -  -  	inc c 
   38 D1:B562 -  -  -  -  	
   39 D1:B562 C9 -  -  -  	ret 
   40 D1:B563 -  -  -  -  
   41 D1:B563 -  -  -  -  draw_mg:
   42 D1:B563 -  -  -  -  
   43 D1:B563 CD 0C B5 D1 	call draw_fg_setup
   44 D1:B567 -  -  -  -  	
   45 D1:B567 2A EE AB D1 	ld hl,(cam_pos)
   46 D1:B56B CB 3C -  -  	srl h ;div by 2
   47 D1:B56D CB 1D -  -  	rr l 
   48 D1:B56F -  -  -  -  	
   49 D1:B56F CD 38 B5 D1 	call draw_fg_setup_2
   50 D1:B573 -  -  -  -  
   51 D1:B573 21 66 CB D1 	ld hl,MG_Data_frame_table
   52 D1:B577 09 -  -  -  	add hl,bc
   53 D1:B578 09 -  -  -  	add hl,bc 
   54 D1:B579 09 -  -  -  	add hl,bc 	
   55 D1:B57A ED 27 -  -  	ld hl,(hl);upper frame 
   56 D1:B57C -  -  -  -  	
   57 D1:B57C CD B9 B5 D1 	call draw_fg_sprites
   58 D1:B580 C9 -  -  -  	ret
   59 D1:B581 -  -  -  -  
   60 D1:B581 -  -  -  -  draw_mg2:
   61 D1:B581 -  -  -  -  
   62 D1:B581 CD 0C B5 D1 	call draw_fg_setup
   63 D1:B585 -  -  -  -  	
   64 D1:B585 2A EE AB D1 	ld hl,(cam_pos)
   65 D1:B589 CB 3C -  -  	srl h ;div by 2
   66 D1:B58B CB 1D -  -  	rr l 
   67 D1:B58D -  -  -  -  	
   68 D1:B58D CD 38 B5 D1 	call draw_fg_setup_2
   69 D1:B591 -  -  -  -  
   70 D1:B591 21 F8 CD D1 	ld hl,MG2_Data_frame_table
   71 D1:B595 09 -  -  -  	add hl,bc
   72 D1:B596 09 -  -  -  	add hl,bc 
   73 D1:B597 09 -  -  -  	add hl,bc 	
   74 D1:B598 ED 27 -  -  	ld hl,(hl);upper frame 
   75 D1:B59A -  -  -  -  
   76 D1:B59A CD B9 B5 D1 	call draw_fg_sprites
   77 D1:B59E C9 -  -  -  	ret
   78 D1:B59F -  -  -  -  	
   79 D1:B59F -  -  -  -  
   80 D1:B59F -  -  -  -  draw_fg:
   81 D1:B59F -  -  -  -  
   82 D1:B59F CD 0C B5 D1 	call draw_fg_setup
   83 D1:B5A3 -  -  -  -  	
   84 D1:B5A3 2A EE AB D1 	ld hl,(cam_pos)
   85 D1:B5A7 -  -  -  -  	
   86 D1:B5A7 CD 38 B5 D1 	call draw_fg_setup_2
   87 D1:B5AB -  -  -  -  	
   88 D1:B5AB 21 CE CE D1 	ld hl,FG_Data_frame_table
   89 D1:B5AF 09 -  -  -  	add hl,bc
   90 D1:B5B0 09 -  -  -  	add hl,bc 
   91 D1:B5B1 09 -  -  -  	add hl,bc 	
   92 D1:B5B2 ED 27 -  -  	ld hl,(hl);upper frame 
   93 D1:B5B4 -  -  -  -  
   94 D1:B5B4 CD B9 B5 D1 	call draw_fg_sprites
   95 D1:B5B8 C9 -  -  -  	ret
   96 D1:B5B9 -  -  -  -  
   97 D1:B5B9 -  -  -  -  
   98 D1:B5B9 -  -  -  -  ; Upper Frame =======================================================================================================
   99 D1:B5B9 -  -  -  -  ; Upper Frame =======================================================================================================
  100 D1:B5B9 -  -  -  -  ;hl = upper frame data
  101 D1:B5B9 -  -  -  -   
  102 D1:B5B9 -  -  -  -  ;load cam height 123,vram top 12 vram bottom 1234
  103 D1:B5B9 -  -  -  -  draw_fg_sprites:
  104 D1:B5B9 -  -  -  -  	;UPPER FRAME, bottom of upper frame is not on screen, bottom of mid frame is on screen bottom of lower is not on screen
  105 D1:B5B9 CD 9A B8 D1 	call sprite_table_from_index
  106 D1:B5BD ED 53 91 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de ;write sprite table ptr to required locations 
  107 D1:B5C2 ED 53 D3 B7 
              D1 -  -  -  	ld (dfgs_sprite_pointers_2),de 
  108 D1:B5C7 ED 53 24 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  109 D1:B5CC -  -  -  -  	
  110 D1:B5CC 11 00 00 00 	ld de,0
  111 D1:B5D0 23 -  -  -  	inc hl;past data table 
  112 D1:B5D1 -  -  -  -  	;hl is number of elements
  113 D1:B5D1 -  -  -  -  	
  114 D1:B5D1 -  -  -  -  	
  115 D1:B5D1 -  -  -  -  	;if cam is far below upper frame, can skip upper frame 
  116 D1:B5D1 -  -  -  -  dfgs_cam_height_1 .equ $ + 1
  117 D1:B5D1 3E 00 -  -  	ld a,0 
  118 D1:B5D3 FE 78 -  -  	cp FGMaxSpriteHeight
  119 D1:B5D5 D2 E7 B5 D1 	jp nc, dfgs_do_upper_loop
  120 D1:B5D9 -  -  -  -  	;cam too low for upper frame sprites to be drawn
  121 D1:B5D9 01 00 00 00 	ld bc,0
  122 D1:B5DD 4E -  -  -  	ld c,(hl) ;bc holds number of elements
  123 D1:B5DE 09 -  -  -  	add hl,bc 
  124 D1:B5DF 09 -  -  -  	add hl,bc 
  125 D1:B5E0 09 -  -  -  	add hl,bc 
  126 D1:B5E1 09 -  -  -  	add hl,bc;hl points to end of current frame data 
  127 D1:B5E2 23 -  -  -  	inc hl;start of next frame
  128 D1:B5E3 C3 33 B6 D1 	jp dfgs_mid_start ;skip upper loop
  129 D1:B5E7 -  -  -  -  	
  130 D1:B5E7 -  -  -  -  	
  131 D1:B5E7 -  -  -  -  dfgs_do_upper_loop:	
  132 D1:B5E7 08 -  -  -  	ex af,af' ;'
  133 D1:B5E8 -  -  -  -  	
  134 D1:B5E8 7E -  -  -  	ld a,(hl);number of elements
  135 D1:B5E9 -  -  -  -  	;TESTING
  136 D1:B5E9 -  -  -  -  	;call write_a_to_ram
  137 D1:B5E9 -  -  -  -  	;call prgmpause
  138 D1:B5E9 -  -  -  -  	;TESTING
  139 D1:B5E9 -  -  -  -  	
  140 D1:B5E9 3C -  -  -  	inc a ;to be decd later
  141 D1:B5EA 08 -  -  -  	ex af,af' ;'
  142 D1:B5EB 23 -  -  -  	inc hl;hl points to first sprite in upper frame  
  143 D1:B5EC -  -  -  -  
  144 D1:B5EC -  -  -  -  dfgs_upper_loop:;Want to check for sprites in upper frame that extend to lower frame 
  145 D1:B5EC -  -  -  -  
  146 D1:B5EC 08 -  -  -  	ex af,af';'
  147 D1:B5ED 3D -  -  -  	dec a ;dec number of elements
  148 D1:B5EE -  -  -  -  	;call write_a_to_ram
  149 D1:B5EE CA 33 B6 D1 	jp z,dfgs_mid_start 
  150 D1:B5F2 08 -  -  -  	ex af,af';'
  151 D1:B5F3 -  -  -  -  
  152 D1:B5F3 7E -  -  -  	ld a,(hl);sprite y value 
  153 D1:B5F4 23 -  -  -  	inc hl ;to height
  154 D1:B5F5 -  -  -  -  	
  155 D1:B5F5 -  -  -  -  	;call write_a_to_ram
  156 D1:B5F5 -  -  -  -  	;call prgmpause
  157 D1:B5F5 CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  158 D1:B5F7 C2 9A B7 D1 	jp nz, dfgs_sg_upper ;goto group loop 
  159 D1:B5FB -  -  -  -  	
  160 D1:B5FB -  -  -  -  	;otherwise single sprite, call draw routine 
  161 D1:B5FB CD 03 B6 D1 	call dfgs_draw_upper_sprite
  162 D1:B5FF -  -  -  -  	
  163 D1:B5FF C3 EC B5 D1 	jp dfgs_upper_loop
  164 D1:B603 -  -  -  -  	
  165 D1:B603 -  -  -  -  
  166 D1:B603 -  -  -  -  ;Can be used for normal sprites and in sprite groups 
  167 D1:B603 -  -  -  -  ;a holds y pos in upper frame, hl pts to sprite height 
  168 D1:B603 -  -  -  -  dfgs_draw_upper_sprite:
  169 D1:B603 -  -  -  -  
  170 D1:B603 37 -  -  -  	scf 
  171 D1:B604 -  -  -  -  dfgs_bg_mode_1 .equ $ 
  172 D1:B604 D2 D9 AD D1 	jp nc, dbgl_draw_upper_sprite ;if bg mode go to bg draw routine
  173 D1:B608 -  -  -  -  
  174 D1:B608 -  -  -  -  
  175 D1:B608 -  -  -  -  dfgs_viewport_to_upper_frame .equ $ + 1
  176 D1:B608 C6 00 -  -  	add a,0 ;a now holds number of lines to skip in current sprite (1 indexed)
  177 D1:B60A -  -  -  -  	;call write_a_to_ram
  178 D1:B60A DA 2F B6 D1 	jp c, dfgs_upper_skip ;if sprite has large y pos, can carry over
  179 D1:B60E BE -  -  -  	cp (hl) ;compare to sprite height 
  180 D1:B60F D2 2F B6 D1 	jp nc, dfgs_upper_skip ;skips drawing too many lines, sprite is not on screen
  181 D1:B613 -  -  -  -  	;a holds number of lines to skip drawing
  182 D1:B613 -  -  -  -  
  183 D1:B613 -  -  -  -  dfgs_vram_top_1 .equ $ + 1 
  184 D1:B613 11 00 00 00 	ld de,0;load top of vram 
  185 D1:B617 E5 -  -  -  	push hl ;save height ptr
  186 D1:B618 CD 77 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  187 D1:B61C -  -  -  -  	
  188 D1:B61C CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  189 D1:B61E CA 2A B6 D1 	jp z,dfgs_upper_fast
  190 D1:B622 CD 1E AF D1 	call draw_slow_sprite_top_cut
  191 D1:B626 C3 2E B6 D1 	jp dfgs_upper_skip_2
  192 D1:B62A -  -  -  -  dfgs_upper_fast:
  193 D1:B62A CD A0 AE D1 	call draw_fast_sprite_top_cut
  194 D1:B62E -  -  -  -  dfgs_upper_skip_2:
  195 D1:B62E E1 -  -  -  	pop hl ;hl holds (height)
  196 D1:B62F -  -  -  -  	
  197 D1:B62F -  -  -  -  
  198 D1:B62F -  -  -  -  dfgs_upper_skip:
  199 D1:B62F -  -  -  -  
  200 D1:B62F 23 -  -  -  	inc hl ;to x
  201 D1:B630 23 -  -  -  	inc hl ;to index 
  202 D1:B631 23 -  -  -  	inc hl;to y 
  203 D1:B632 -  -  -  -  	
  204 D1:B632 C9 -  -  -  	ret ;end of dfgs_draw_upper_sprite
  205 D1:B633 -  -  -  -  	
  206 D1:B633 -  -  -  -  	;ld a,$AA
  207 D1:B633 -  -  -  -  	;call write_a_to_ram
  208 D1:B633 -  -  -  -  	;call prgmpause
  209 D1:B633 -  -  -  -  	
  210 D1:B633 -  -  -  -  
  211 D1:B633 -  -  -  -  ;MIDDLE FRAME ====================================================================================================
  212 D1:B633 -  -  -  -  	
  213 D1:B633 -  -  -  -  dfgs_mid_start:;MIDDLE FRAME, can be top cut, no cut, or bottom cut ===============================================
  214 D1:B633 -  -  -  -  	
  215 D1:B633 -  -  -  -  	;call prgmpause
  216 D1:B633 -  -  -  -  	
  217 D1:B633 CD 9A B8 D1 	call sprite_table_from_index
  218 D1:B637 ED 53 91 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  219 D1:B63C ED 53 1D B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_3),de 
  220 D1:B641 ED 53 24 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  221 D1:B646 11 00 00 00 	ld de,0
  222 D1:B64A 23 -  -  -  	inc hl;past sprite table ptr
  223 D1:B64B 08 -  -  -  	ex af,af' ;'
  224 D1:B64C 7E -  -  -  	ld a,(hl);number of elements
  225 D1:B64D 3C -  -  -  	inc a 
  226 D1:B64E 08 -  -  -  	ex af,af' ;'
  227 D1:B64F -  -  -  -  	
  228 D1:B64F 23 -  -  -  	inc hl ;to first y val 
  229 D1:B650 -  -  -  -  dfgs_mid_loop:
  230 D1:B650 -  -  -  -  	
  231 D1:B650 08 -  -  -  	ex af,af';'
  232 D1:B651 3D -  -  -  	dec a 
  233 D1:B652 CA E8 B6 D1 	jp z,dfgs_lower_start ;check for end of data
  234 D1:B656 -  -  -  -  	
  235 D1:B656 08 -  -  -  	ex af,af';'
  236 D1:B657 -  -  -  -  
  237 D1:B657 -  -  -  -  	;ld a, $AB
  238 D1:B657 -  -  -  -  	;call write_a_to_ram
  239 D1:B657 -  -  -  -  
  240 D1:B657 7E -  -  -  	ld a,(hl);y val of sprite in dataframe
  241 D1:B658 -  -  -  -  	;call write_a_to_ram
  242 D1:B658 23 -  -  -  	inc hl ;to height
  243 D1:B659 -  -  -  -  	
  244 D1:B659 CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  245 D1:B65B C2 E4 B7 D1 	jp nz, dfgs_sg_mid ;goto group loop 
  246 D1:B65F -  -  -  -  	
  247 D1:B65F -  -  -  -  	;otherwise, draw single sprite 
  248 D1:B65F CD 67 B6 D1 	call dfgs_draw_mid_sprite
  249 D1:B663 -  -  -  -  
  250 D1:B663 -  -  -  -  	
  251 D1:B663 C3 50 B6 D1 	jp dfgs_mid_loop
  252 D1:B667 -  -  -  -  	
  253 D1:B667 -  -  -  -  	
  254 D1:B667 -  -  -  -  	
  255 D1:B667 -  -  -  -  	;a = ypos in mid frame, hl pts to height
  256 D1:B667 -  -  -  -  dfgs_draw_mid_sprite:	
  257 D1:B667 -  -  -  -  	
  258 D1:B667 37 -  -  -  	scf 
  259 D1:B668 -  -  -  -  dfgs_bg_mode_2 .equ $ 
  260 D1:B668 D2 ED AD D1 	jp nc, dbgl_draw_lower_sprite ;if bg mode go to bg draw routine
  261 D1:B66C -  -  -  -  
  262 D1:B66C -  -  -  -  	;call write_a_to_ram
  263 D1:B66C -  -  -  -  	
  264 D1:B66C -  -  -  -  dfgs_cam_height_2 .equ $ + 1 ;y value in dataframe of uppermost line of viewport
  265 D1:B66C D6 00 -  -  	sub 0;subtract cam pos
  266 D1:B66E -  -  -  -  	;call write_a_to_ram
  267 D1:B66E -  -  -  -  
  268 D1:B66E CA 76 B6 D1 	jp z, dfgs_mid_sprite_topline ;check case where sprite is on top line of viewport
  269 D1:B672 D2 C3 B6 D1 	jp nc, dfgs_mid_sprite_above ; carried, sprite is above viewport boundary, a holds num lines to skip
  270 D1:B676 -  -  -  -  dfgs_mid_sprite_topline:
  271 D1:B676 -  -  -  -  
  272 D1:B676 -  -  -  -  	;Sprite is below viewport bound, either full or bottom cut 
  273 D1:B676 -  -  -  -  	
  274 D1:B676 -  -  -  -  	;a = sprite y - cam pos 
  275 D1:B676 3D -  -  -  	dec a ;for case where sprite pos = cam pos
  276 D1:B677 C6 F0 -  -  	add a,240 
  277 D1:B679 -  -  -  -  
  278 D1:B679 D2 9F B6 D1 	jp nc, dfgs_mid_skip
  279 D1:B67D -  -  -  -  	;a holds y pos above bottom of vp (0 indexed )
  280 D1:B67D 3C -  -  -  	inc a 
  281 D1:B67E -  -  -  -  	
  282 D1:B67E -  -  -  -  	
  283 D1:B67E -  -  -  -  	
  284 D1:B67E BE -  -  -  	cp (hl) ;compare to sprite height 
  285 D1:B67F DA A3 B6 D1 	jp c, dfgs_mid_bottom_cut ;height > lines to draw, bottom is cut off 
  286 D1:B683 -  -  -  -  	;otherwise, draw full sprite 
  287 D1:B683 -  -  -  -  	
  288 D1:B683 -  -  -  -  dfgs_vram_bottom_1 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  289 D1:B683 11 00 00 00 	ld de,0;load bottom of vram 
  290 D1:B687 E5 -  -  -  	push hl ;save height ptr
  291 D1:B688 CD 77 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  292 D1:B68C -  -  -  -  	
  293 D1:B68C CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  294 D1:B68E CA 9A B6 D1 	jp z,dfgs_mid_full_fast
  295 D1:B692 CD E0 AE D1 	call draw_slow_sprite_full
  296 D1:B696 C3 9E B6 D1 	jp dfgs_mid_skip_1
  297 D1:B69A -  -  -  -  dfgs_mid_full_fast:
  298 D1:B69A CD C6 AE D1 	call draw_fast_sprite_full
  299 D1:B69E -  -  -  -  dfgs_mid_skip_1:
  300 D1:B69E E1 -  -  -  	pop hl ;hl holds (height)
  301 D1:B69F -  -  -  -  	
  302 D1:B69F -  -  -  -  	
  303 D1:B69F -  -  -  -  dfgs_mid_skip:;sprite is entirely above or below cam pos 
  304 D1:B69F 23 -  -  -  	inc hl ;x
  305 D1:B6A0 23 -  -  -  	inc hl ;index 
  306 D1:B6A1 23 -  -  -  	inc hl;to y 
  307 D1:B6A2 -  -  -  -  	
  308 D1:B6A2 -  -  -  -  	
  309 D1:B6A2 -  -  -  -  	
  310 D1:B6A2 C9 -  -  -  	ret
  311 D1:B6A3 -  -  -  -  	
  312 D1:B6A3 -  -  -  -  
  313 D1:B6A3 -  -  -  -  dfgs_mid_bottom_cut:
  314 D1:B6A3 -  -  -  -  dfgs_vram_bottom_2 .equ $ + 1  ;Bottom Cut SPRITE, a = lines above bottom of viewport
  315 D1:B6A3 11 00 00 00 	ld de,0;load bottom of vram 
  316 D1:B6A7 E5 -  -  -  	push hl ;save height ptr
  317 D1:B6A8 CD 77 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  318 D1:B6AC -  -  -  -  	
  319 D1:B6AC CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  320 D1:B6AE CA BA B6 D1 	jp z,dfgs_mid_bcut_fast
  321 D1:B6B2 CD 4B AF D1 	call draw_slow_sprite_bottom_cut
  322 D1:B6B6 C3 BE B6 D1 	jp dfgs_mid_skip_2
  323 D1:B6BA -  -  -  -  dfgs_mid_bcut_fast:
  324 D1:B6BA CD 83 AE D1 	call draw_fast_sprite_bottom_cut
  325 D1:B6BE -  -  -  -  dfgs_mid_skip_2:
  326 D1:B6BE E1 -  -  -  	pop hl ;hl holds (height)
  327 D1:B6BF C3 9F B6 D1 	jp dfgs_mid_skip
  328 D1:B6C3 -  -  -  -  
  329 D1:B6C3 -  -  -  -  dfgs_mid_sprite_above:
  330 D1:B6C3 -  -  -  -  	
  331 D1:B6C3 -  -  -  -  	;a holds lines to skip 
  332 D1:B6C3 BE -  -  -  	cp (hl) ;compare to height
  333 D1:B6C4 D2 9F B6 D1 	jp nc, dfgs_mid_skip ;skip sprite, entirely above viewport
  334 D1:B6C8 -  -  -  -  
  335 D1:B6C8 -  -  -  -  dfgs_vram_top_2 .equ $ + 1
  336 D1:B6C8 11 00 00 00 	ld de,0;top of vram 
  337 D1:B6CC E5 -  -  -  	push hl ;save height ptr
  338 D1:B6CD CD 77 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  339 D1:B6D1 -  -  -  -  	
  340 D1:B6D1 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  341 D1:B6D3 CA DF B6 D1 	jp z,dfgs_mid_tcut_fast
  342 D1:B6D7 CD 1E AF D1 	call draw_slow_sprite_top_cut
  343 D1:B6DB C3 E3 B6 D1 	jp dfgs_mid_skip_3
  344 D1:B6DF -  -  -  -  dfgs_mid_tcut_fast:
  345 D1:B6DF CD A0 AE D1 	call draw_fast_sprite_top_cut
  346 D1:B6E3 -  -  -  -  dfgs_mid_skip_3:
  347 D1:B6E3 E1 -  -  -  	pop hl ;hl holds (height)
  348 D1:B6E4 C3 9F B6 D1 	jp dfgs_mid_skip
  349 D1:B6E8 -  -  -  -  	
  350 D1:B6E8 -  -  -  -  	
  351 D1:B6E8 -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================		
  352 D1:B6E8 -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================	
  353 D1:B6E8 -  -  -  -  dfgs_lower_start:
  354 D1:B6E8 -  -  -  -  	
  355 D1:B6E8 CD 9A B8 D1 	call sprite_table_from_index
  356 D1:B6EC ED 53 91 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  357 D1:B6F1 ED 53 66 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_4),de
  358 D1:B6F6 11 00 00 00 	ld de,0
  359 D1:B6FA 23 -  -  -  	inc hl;past data table 
  360 D1:B6FB -  -  -  -  	
  361 D1:B6FB 08 -  -  -  	ex af,af' ;'
  362 D1:B6FC 7E -  -  -  	ld a,(hl);number of elements
  363 D1:B6FD 3C -  -  -  	inc a 
  364 D1:B6FE 08 -  -  -  	ex af,af' ;'
  365 D1:B6FF 23 -  -  -  	inc hl
  366 D1:B700 -  -  -  -  	
  367 D1:B700 -  -  -  -  
  368 D1:B700 -  -  -  -  dfgs_cam_height_3 .equ $ + 1 
  369 D1:B700 3E 00 -  -  	ld a, 0
  370 D1:B702 D6 EF -  -  	sub 239
  371 D1:B704 D0 -  -  -  	ret nc;if bottom frame is offscreen 
  372 D1:B705 -  -  -  -  
  373 D1:B705 -  -  -  -  	;a holds y value of viewport bottom line in lower frame 
  374 D1:B705 -  -  -  -  	
  375 D1:B705 -  -  -  -  
  376 D1:B705 -  -  -  -  dfgs_lower_loop:
  377 D1:B705 -  -  -  -  
  378 D1:B705 08 -  -  -  	ex af,af';'
  379 D1:B706 3D -  -  -  	dec a 
  380 D1:B707 C8 -  -  -  	ret z
  381 D1:B708 08 -  -  -  	ex af,af';'
  382 D1:B709 -  -  -  -  	
  383 D1:B709 7E -  -  -  	ld a,(hl);y
  384 D1:B70A -  -  -  -  	;call write_a_to_ram
  385 D1:B70A 23 -  -  -  	inc hl ;inc to height
  386 D1:B70B -  -  -  -  	
  387 D1:B70B CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  388 D1:B70D C2 2E B8 D1 	jp nz, dfgs_sg_lower ;goto group loop 
  389 D1:B711 -  -  -  -  	
  390 D1:B711 -  -  -  -  	;otherwise, draw single sprite 
  391 D1:B711 CD 19 B7 D1 	call dfgs_draw_lower_sprite
  392 D1:B715 -  -  -  -  	
  393 D1:B715 C3 05 B7 D1 	jp dfgs_lower_loop
  394 D1:B719 -  -  -  -  
  395 D1:B719 -  -  -  -  	
  396 D1:B719 -  -  -  -  dfgs_draw_lower_sprite: ;a = ypos, hl pts to height
  397 D1:B719 -  -  -  -  	
  398 D1:B719 -  -  -  -  
  399 D1:B719 -  -  -  -  	;call write_a_to_ram
  400 D1:B719 47 -  -  -  	ld b,a ;save
  401 D1:B71A -  -  -  -  dfgs_cam_height_4 .equ $ + 1 
  402 D1:B71A 3E 00 -  -  	ld a, 0 ;check if bottom frame is in VP at all
  403 D1:B71C D6 EF -  -  	sub 239
  404 D1:B71E D2 4B B7 D1 	jp nc,dfgs_lower_skip
  405 D1:B722 78 -  -  -  	ld a,b
  406 D1:B723 -  -  -  -  dfgs_viewport_bottom_y .equ $ + 1
  407 D1:B723 D6 00 -  -  	sub 0;subtract y val of viewport bottom
  408 D1:B725 -  -  -  -  
  409 D1:B725 DA 4B B7 D1 	jp c,dfgs_lower_skip;sprite below screen
  410 D1:B729 -  -  -  -  	
  411 D1:B729 -  -  -  -  	;push af 
  412 D1:B729 -  -  -  -  	;ld a,$A0
  413 D1:B729 -  -  -  -  	;call write_a_to_ram
  414 D1:B729 -  -  -  -  	;pop af
  415 D1:B729 -  -  -  -  	
  416 D1:B729 -  -  -  -  	
  417 D1:B729 3C -  -  -  	inc a
  418 D1:B72A -  -  -  -  	;a holds number of lines to draw 
  419 D1:B72A BE -  -  -  	cp (hl) ;compare to sprite height 
  420 D1:B72B DA 4F B7 D1 	jp c, dfgs_lower_bottom_cut ;bottom is below viewport 
  421 D1:B72F -  -  -  -  	
  422 D1:B72F -  -  -  -  	;draw full sprite 
  423 D1:B72F -  -  -  -  dfgs_vram_bottom_3 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  424 D1:B72F 11 00 00 00 	ld de,0;load bottom of vram 
  425 D1:B733 E5 -  -  -  	push hl ;save height ptr
  426 D1:B734 CD 77 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  427 D1:B738 -  -  -  -  	
  428 D1:B738 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  429 D1:B73A CA 46 B7 D1 	jp z,dfgs_lower_full_fast
  430 D1:B73E CD E0 AE D1 	call draw_slow_sprite_full
  431 D1:B742 C3 4A B7 D1 	jp dfgs_lower_skip_1
  432 D1:B746 -  -  -  -  dfgs_lower_full_fast:
  433 D1:B746 CD C6 AE D1 	call draw_fast_sprite_full
  434 D1:B74A -  -  -  -  dfgs_lower_skip_1:
  435 D1:B74A E1 -  -  -  	pop hl ;hl holds (height)
  436 D1:B74B -  -  -  -  
  437 D1:B74B -  -  -  -  	
  438 D1:B74B -  -  -  -  dfgs_lower_skip:;sprite offscreen
  439 D1:B74B 23 -  -  -  	inc hl ;x 
  440 D1:B74C 23 -  -  -  	inc hl ;index 
  441 D1:B74D 23 -  -  -  	inc hl;to y 
  442 D1:B74E -  -  -  -  	;call write_a_to_ram
  443 D1:B74E -  -  -  -  	;ld a,$AD
  444 D1:B74E -  -  -  -  	;call write_a_to_ram
  445 D1:B74E C9 -  -  -  	ret
  446 D1:B74F -  -  -  -  	
  447 D1:B74F -  -  -  -  dfgs_lower_bottom_cut: 
  448 D1:B74F -  -  -  -  dfgs_vram_bottom_4 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  449 D1:B74F 11 00 00 00 	ld de,0;load bottom of vram 
  450 D1:B753 E5 -  -  -  	push hl ;save height ptr
  451 D1:B754 CD 77 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  452 D1:B758 -  -  -  -  	
  453 D1:B758 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  454 D1:B75A CA 66 B7 D1 	jp z,dfgs_lower_bcut_fast ;even= fast
  455 D1:B75E CD 4B AF D1 	call draw_slow_sprite_bottom_cut
  456 D1:B762 C3 6A B7 D1 	jp dfgs_lower_skip_2
  457 D1:B766 -  -  -  -  dfgs_lower_bcut_fast:
  458 D1:B766 CD 83 AE D1 	call draw_fast_sprite_bottom_cut
  459 D1:B76A -  -  -  -  dfgs_lower_skip_2:
  460 D1:B76A E1 -  -  -  	pop hl ;hl holds (height)
  461 D1:B76B C3 4B B7 D1 	jp dfgs_lower_skip
  462 D1:B76F -  -  -  -  	
  463 D1:B76F -  -  -  -  
  464 D1:B76F -  -  -  -  ;===================================================================================================================
  465 D1:B76F -  -  -  -  ;SPRITE GROUPS =====================================================================================================
  466 D1:B76F -  -  -  -  
  467 D1:B76F -  -  -  -  dfgs_sg_setup:
  468 D1:B76F 23 -  -  -  	inc hl ;hl points to xPos of sprite group 
  469 D1:B770 7E -  -  -  	ld a,(hl)
  470 D1:B771 32 8B B8 D1 	ld (dfgs_sg_x_origin),a 
  471 D1:B775 32 15 AE D1 	ld (dbgl_sg_x_origin),a
  472 D1:B779 -  -  -  -  	;call write_a_to_ram
  473 D1:B779 01 00 00 00 	ld bc,0
  474 D1:B77D 23 -  -  -  	inc hl ; index 
  475 D1:B77E 4E -  -  -  	ld c,(hl) ;sprite group index 
  476 D1:B77F -  -  -  -  
  477 D1:B77F 21 94 F5 D1 	ld hl, Sprite_Groups
  478 D1:B783 -  -  -  -  	;ld c,0 ;TESTING
  479 D1:B783 -  -  -  -  
  480 D1:B783 09 -  -  -  	add hl,bc 
  481 D1:B784 09 -  -  -  	add hl,bc 
  482 D1:B785 09 -  -  -  	add hl,bc 
  483 D1:B786 -  -  -  -  	
  484 D1:B786 -  -  -  -  	;hl now points to correct sprite group ptr 
  485 D1:B786 ED 27 -  -  	ld hl, (hl)	
  486 D1:B788 -  -  -  -  	;hl pts to sprite table for this group 
  487 D1:B788 -  -  -  -  
  488 D1:B788 CD 9A B8 D1 	call sprite_table_from_index
  489 D1:B78C ED 53 91 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1), de ;NEed to undo after loop is done 
  490 D1:B791 ED 53 24 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  491 D1:B796 23 -  -  -  	inc hl ;to num sprites 
  492 D1:B797 -  -  -  -  
  493 D1:B797 7E -  -  -  	ld a,(hl) ;num sprites in group
  494 D1:B798 23 -  -  -  	inc hl;first sprite y 
  495 D1:B799 C9 -  -  -  	ret
  496 D1:B79A -  -  -  -  	
  497 D1:B79A -  -  -  -  	;Sprite group in upper frame. a holds y pos of sprite group. HL points to height (unused)
  498 D1:B79A -  -  -  -  dfgs_sg_upper:	
  499 D1:B79A 32 A8 B7 D1 	ld (dfgs_sg_upper_y_origin),a
  500 D1:B79E E5 -  -  -  	push hl ;save frame data location (height ptr)
  501 D1:B79F CD 6F B7 D1 	call dfgs_sg_setup ;returns with a = num sprites
  502 D1:B7A3 -  -  -  -   
  503 D1:B7A3 32 BC B7 D1 	ld (dfgs_sg_upper_count),a 
  504 D1:B7A7 -  -  -  -  	
  505 D1:B7A7 -  -  -  -  dfgs_sg_upper_loop:
  506 D1:B7A7 -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  507 D1:B7A7 -  -  -  -  	;if no carry, sprite is still in upper frame, a holds pos in upper frame 
  508 D1:B7A7 -  -  -  -  	;if carry sprite is entirely in mid frame, a holds y pos in mid frame 
  509 D1:B7A7 -  -  -  -  dfgs_sg_upper_y_origin .equ $ + 1 
  510 D1:B7A7 3E 00 -  -  	ld a, 0
  511 D1:B7A9 96 -  -  -  	sub a,(hl)
  512 D1:B7AA -  -  -  -  	;call write_a_to_ram
  513 D1:B7AA 23 -  -  -  	inc hl ;to height
  514 D1:B7AB D2 B7 B7 D1 	jp nc, dfgs_sg_upper_draw_upper
  515 D1:B7AF -  -  -  -  	
  516 D1:B7AF CD 67 B6 D1 	call dfgs_draw_mid_sprite
  517 D1:B7B3 C3 BB B7 D1 	jp dfgs_sg_upper_continue
  518 D1:B7B7 -  -  -  -  	;otherwise, sprite is entirely in mid frame, a holds y pos in mid frame
  519 D1:B7B7 -  -  -  -  	
  520 D1:B7B7 -  -  -  -  	
  521 D1:B7B7 -  -  -  -  dfgs_sg_upper_draw_upper:
  522 D1:B7B7 CD 03 B6 D1 	call dfgs_draw_upper_sprite
  523 D1:B7BB -  -  -  -  dfgs_sg_upper_continue:
  524 D1:B7BB -  -  -  -  dfgs_sg_upper_count .equ $ + 1
  525 D1:B7BB 3E 00 -  -  	ld a, 0
  526 D1:B7BD 3D -  -  -  	dec a 
  527 D1:B7BE 32 BC B7 D1 	ld (dfgs_sg_upper_count),a 
  528 D1:B7C2 C2 A7 B7 D1 	jp nz, dfgs_sg_upper_loop 
  529 D1:B7C6 -  -  -  -  	;otherwise, end of sprite group 
  530 D1:B7C6 32 8B B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  531 D1:B7CA 32 15 AE D1 	ld (dbgl_sg_x_origin),a
  532 D1:B7CE E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  533 D1:B7CF 23 -  -  -  	inc hl
  534 D1:B7D0 23 -  -  -  	inc hl
  535 D1:B7D1 23 -  -  -  	inc hl ;to y pos of next sprite
  536 D1:B7D2 -  -  -  -  dfgs_sprite_pointers_2 .equ $ + 1
  537 D1:B7D2 11 00 00 00 	ld de, 0
  538 D1:B7D6 ED 53 91 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  539 D1:B7DB ED 53 24 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  540 D1:B7E0 C3 EC B5 D1 	jp dfgs_upper_loop
  541 D1:B7E4 -  -  -  -  	
  542 D1:B7E4 -  -  -  -  
  543 D1:B7E4 -  -  -  -  
  544 D1:B7E4 -  -  -  -  ;SG MID =========================================================================================================
  545 D1:B7E4 -  -  -  -  	;Sprite group in middle frame. a holds y pos of sprite group. HL points to height (unused)
  546 D1:B7E4 -  -  -  -  dfgs_sg_mid:	
  547 D1:B7E4 E5 -  -  -  	push hl
  548 D1:B7E5 32 F2 B7 D1 	ld (dfgs_sg_mid_y_origin),a
  549 D1:B7E9 CD 6F B7 D1 	call dfgs_sg_setup 
  550 D1:B7ED -  -  -  -  	
  551 D1:B7ED 32 06 B8 D1 	ld (dfgs_sg_mid_count),a
  552 D1:B7F1 -  -  -  -  	
  553 D1:B7F1 -  -  -  -  dfgs_sg_mid_loop:
  554 D1:B7F1 -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  555 D1:B7F1 -  -  -  -  	;if no carry, sprite is still in mid frame, a holds pos in mid frame 
  556 D1:B7F1 -  -  -  -  	;if carry sprite is entirely in lower frame, a holds y pos in lower frame 
  557 D1:B7F1 -  -  -  -  dfgs_sg_mid_y_origin .equ $ + 1 
  558 D1:B7F1 3E 00 -  -  	ld a, 0
  559 D1:B7F3 96 -  -  -  	sub a,(hl)
  560 D1:B7F4 23 -  -  -  	inc hl ;to height
  561 D1:B7F5 D2 01 B8 D1 	jp nc, dfgs_sg_mid_draw_mid
  562 D1:B7F9 -  -  -  -  	
  563 D1:B7F9 CD 19 B7 D1 	call dfgs_draw_lower_sprite
  564 D1:B7FD C3 05 B8 D1 	jp dfgs_sg_mid_continue
  565 D1:B801 -  -  -  -  
  566 D1:B801 -  -  -  -  		
  567 D1:B801 -  -  -  -  dfgs_sg_mid_draw_mid:
  568 D1:B801 CD 67 B6 D1 	call dfgs_draw_mid_sprite
  569 D1:B805 -  -  -  -  dfgs_sg_mid_continue:
  570 D1:B805 -  -  -  -  dfgs_sg_mid_count .equ $ + 1
  571 D1:B805 3E 00 -  -  	ld a, 0
  572 D1:B807 3D -  -  -  	dec a 
  573 D1:B808 32 06 B8 D1 	ld (dfgs_sg_mid_count),a 
  574 D1:B80C C2 F1 B7 D1 	jp nz, dfgs_sg_mid_loop 
  575 D1:B810 -  -  -  -  	;otherwise, end of sprite group 
  576 D1:B810 32 8B B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  577 D1:B814 32 15 AE D1 	ld (dbgl_sg_x_origin),a 
  578 D1:B818 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  579 D1:B819 23 -  -  -  	inc hl
  580 D1:B81A 23 -  -  -  	inc hl
  581 D1:B81B 23 -  -  -  	inc hl ;to y pos of next sprite
  582 D1:B81C -  -  -  -  dfgs_sprite_pointers_3 .equ $ + 1
  583 D1:B81C 11 00 00 00 	ld de, 0
  584 D1:B820 ED 53 91 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  585 D1:B825 ED 53 24 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  586 D1:B82A C3 50 B6 D1 	jp dfgs_mid_loop
  587 D1:B82E -  -  -  -  	
  588 D1:B82E -  -  -  -  	
  589 D1:B82E -  -  -  -  ;SG Lower =========================================================================================================
  590 D1:B82E -  -  -  -  	;Sprite group in lower frame. a holds y pos of sprite group. HL points to height (unused)
  591 D1:B82E -  -  -  -  dfgs_sg_lower:	
  592 D1:B82E 32 3C B8 D1 	ld (dfgs_sg_lower_y_origin),a
  593 D1:B832 E5 -  -  -  	push hl
  594 D1:B833 CD 6F B7 D1 	call dfgs_sg_setup 
  595 D1:B837 32 4F B8 D1 	ld (dfgs_sg_lower_count),a
  596 D1:B83B -  -  -  -  	;call write_a_to_ram
  597 D1:B83B -  -  -  -  dfgs_sg_lower_loop:
  598 D1:B83B -  -  -  -  
  599 D1:B83B -  -  -  -  	;call prgmpause
  600 D1:B83B -  -  -  -  
  601 D1:B83B -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  602 D1:B83B -  -  -  -  	;if no carry, sprite is still in lower frame, a holds pos in lower frame 
  603 D1:B83B -  -  -  -  	;if carry sprite is offscreen
  604 D1:B83B -  -  -  -  dfgs_sg_lower_y_origin .equ $ + 1 
  605 D1:B83B 3E 00 -  -  	ld a, 0
  606 D1:B83D 96 -  -  -  	sub a,(hl)
  607 D1:B83E -  -  -  -  	;call write_a_to_ram
  608 D1:B83E 23 -  -  -  	inc hl ;to height
  609 D1:B83F D2 4A B8 D1 	jp nc, dfgs_sg_lower_draw_lower
  610 D1:B843 -  -  -  -  	
  611 D1:B843 23 -  -  -  	inc hl 
  612 D1:B844 23 -  -  -  	inc hl
  613 D1:B845 23 -  -  -  	inc hl 
  614 D1:B846 C3 4E B8 D1 	jp dfgs_sg_lower_continue
  615 D1:B84A -  -  -  -  	;otherwise, sprite is entirely below lower frame, skip
  616 D1:B84A -  -  -  -  	
  617 D1:B84A -  -  -  -  	
  618 D1:B84A -  -  -  -  dfgs_sg_lower_draw_lower:
  619 D1:B84A CD 19 B7 D1 	call dfgs_draw_lower_sprite
  620 D1:B84E -  -  -  -  dfgs_sg_lower_continue:
  621 D1:B84E -  -  -  -  dfgs_sg_lower_count .equ $ + 1
  622 D1:B84E 3E 00 -  -  	ld a, 0
  623 D1:B850 -  -  -  -  	;call write_a_to_ram
  624 D1:B850 3D -  -  -  	dec a 
  625 D1:B851 32 4F B8 D1 	ld (dfgs_sg_lower_count),a 
  626 D1:B855 C2 3B B8 D1 	jp nz, dfgs_sg_lower_loop 
  627 D1:B859 -  -  -  -  	;otherwise, end of sprite group 
  628 D1:B859 32 8B B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  629 D1:B85D 32 15 AE D1 	ld (dbgl_sg_x_origin),a 
  630 D1:B861 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  631 D1:B862 23 -  -  -  	inc hl
  632 D1:B863 23 -  -  -  	inc hl
  633 D1:B864 23 -  -  -  	inc hl ;to y pos of next sprite
  634 D1:B865 -  -  -  -  dfgs_sprite_pointers_4 .equ $ + 1
  635 D1:B865 11 00 00 00 	ld de, 0
  636 D1:B869 ED 53 91 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  637 D1:B86E ED 53 24 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  638 D1:B873 C3 05 B7 D1 	jp dfgs_lower_loop
  639 D1:B877 -  -  -  -  	
  640 D1:B877 -  -  -  -  	
  641 D1:B877 -  -  -  -  	
  642 D1:B877 -  -  -  -  	
  643 D1:B877 -  -  -  -  ;a holds distance from bottom of screen, starting from 1, or for top cut dist above screen = num lines to skip 
  644 D1:B877 -  -  -  -  ;(hl) = height 	
  645 D1:B877 -  -  -  -  ;de = initial vram, top for top cut, otherwise bottom
  646 D1:B877 -  -  -  -  
  647 D1:B877 -  -  -  -  ;Subtracts a lines from de (initial vram pos),
  648 D1:B877 -  -  -  -  ;returns hl = sprite data, de = new vram position
  649 D1:B877 -  -  -  -  dfgs_setup_draw:
  650 D1:B877 23 -  -  -  	inc hl ;x pos 
  651 D1:B878 01 00 00 00 	ld bc,0
  652 D1:B87C 4E -  -  -  	ld c,(hl); x pos
  653 D1:B87D 23 -  -  -  	inc hl;to index
  654 D1:B87E E5 -  -  -  	push hl;save sprite index 
  655 D1:B87F 26 A0 -  -  	ld h,160
  656 D1:B881 6F -  -  -  	ld l,a ;number of lines to subtract 
  657 D1:B882 ED 6C -  -  	mlt hl;subtract from vram
  658 D1:B884 37 -  -  -  	scf 
  659 D1:B885 3F -  -  -  	ccf
  660 D1:B886 EB -  -  -  	ex de,hl;hl holds initial vram pos, de is lines to subtract  
  661 D1:B887 ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  662 D1:B889 09 -  -  -  	add hl,bc;add x pos ;hl now holds sprite draw start pos 
  663 D1:B88A -  -  -  -  dfgs_sg_x_origin .equ $ + 1 ;
  664 D1:B88A 0E 00 -  -  	ld c, 0
  665 D1:B88C 09 -  -  -  	add hl,bc;add sprite group x pos offset (if applicable)
  666 D1:B88D EB -  -  -  	ex de,hl;put in de
  667 D1:B88E E1 -  -  -  	pop hl;back to frame data 
  668 D1:B88F 4E -  -  -  	ld c,(hl);sprite index
  669 D1:B890 -  -  -  -  dfgs_sprite_pointers_1 .equ $ + 1	
  670 D1:B890 21 00 00 00 	ld hl,0 ;load sprite table 
  671 D1:B894 09 -  -  -  	add hl,bc
  672 D1:B895 09 -  -  -  	add hl,bc 
  673 D1:B896 09 -  -  -  	add hl,bc;move to sprite ptr
  674 D1:B897 -  -  -  -  	;call prgmpause
  675 D1:B897 ED 27 -  -  	ld hl,(hl);hl holds sprite data, if even = fast sprite 
  676 D1:B899 -  -  -  -  
  677 D1:B899 C9 -  -  -  	ret
  678 D1:B89A -  -  -  -  
  679 D1:B89A -  -  -  -  	;hl pts to sprite table index, returns de = sprite table ptr
  680 D1:B89A -  -  -  -  	
  681 D1:B89A -  -  -  -  sprite_table_from_index:
  682 D1:B89A E5 -  -  -  	push hl ;save 
  683 D1:B89B 11 00 00 00 	ld de,0
  684 D1:B89F 5E -  -  -  	ld e,(hl) ;e holds table index
  685 D1:B8A0 21 BD DB D1 	ld hl,Sprite_Table_Table
  686 D1:B8A4 19 -  -  -  	add hl,de 
  687 D1:B8A5 19 -  -  -  	add hl,de 
  688 D1:B8A6 19 -  -  -  	add hl,de ;inc to correct table
  689 D1:B8A7 ED 17 -  -  	ld de,(hl)
  690 D1:B8A9 -  -  -  -  	
  691 D1:B8A9 -  -  -  -  
  692 D1:B8A9 -  -  -  -  	
  693 D1:B8A9 -  -  -  -  	;call prgmpause Seems to work
  694 D1:B8A9 -  -  -  -  	
  695 D1:B8A9 E1 -  -  -  	pop hl 
  696 D1:B8AA C9 -  -  -  	ret 
  697 D1:B8AB -  -  -  -  	
  698 D1:B8AB -  -  -  -  
  699 D1:B8AB -  -  -  -  
  700 D1:B8AB -  -  -  -  	
  701 D1:B8AB -  -  -  -  	
  702 D1:B8AB -  -  -  -  	
  703 D1:B8AB -  -  -  -  	
  704 D1:B8AB -  -  -  -  	
  705 D1:B8AB -  -  -  -  	
  706 D1:B8AB -  -  -  -  	
  707 D1:B8AB -  -  -  -  	
  708 D1:B8AB -  -  -  -  	
  709 D1:B8AB -  -  -  -  	
Listing for file "ascent.asm"
  600 D1:B8AB -  -  -  -  #include "SpriteDecompressManager.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\SpriteDecompressManager.txt"
    1 D1:B8AB -  -  -  -  
    2 D1:B8AB -  -  -  -  
    3 D1:B8AB -  -  -  -  decompress_queue_start .equ vram
    4 D1:B8AB -  -  -  -  
    5 D1:B8AB -  -  -  -  decompress_queue_end .equ vram + (7*64) ;Max queue length of 64
    6 D1:B8AB -  -  -  -  
    7 D1:B8AB -  -  -  -  decompress_tail_ptr:
    8 D1:B8AB 06 00 D4 -  	.dl decompress_queue_start + 6  ;points to sprite being currently decompressed (parameters byte)
    9 D1:B8AE -  -  -  -  
   10 D1:B8AE -  -  -  -  decompress_head_ptr: ;points to where next element will be added to queue
   11 D1:B8AE 00 00 D4 -  	.dl decompress_queue_start
   12 D1:B8B1 -  -  -  -  
   13 D1:B8B1 -  -  -  -  ;Decompress queue format
   14 D1:B8B1 -  -  -  -  ; .dl Sprite data ptr, decompress location, parameters (7 = fast, 6 = offset, 5 = flip, 4 =started decompressing 3 = finished decompressing )
   15 D1:B8B1 -  -  -  -  
   16 D1:B8B1 -  -  -  -  setup_decompress_queue: ;clears memory in queue
   17 D1:B8B1 3E FF -  -  	ld a,$FF
   18 D1:B8B3 01 C0 01 00 	ld bc, 7*64
   19 D1:B8B7 21 00 00 D4 	ld hl, decompress_queue_start
   20 D1:B8BB 22 AE B8 D1 	ld (decompress_head_ptr),hl 
   21 D1:B8BF CD E0 10 02 	call _MemSet
   22 D1:B8C3 21 06 00 D4 	ld hl, decompress_queue_start + 6
   23 D1:B8C7 22 AB B8 D1 	ld (decompress_tail_ptr),hl 
   24 D1:B8CB 3E 00 -  -  	ld a,0 
   25 D1:B8CD 32 D6 B9 D1 	ld (last_decompressed_cam_pos),a
   26 D1:B8D1 C9 -  -  -  	ret 
   27 D1:B8D2 -  -  -  -  
   28 D1:B8D2 -  -  -  -  ;bc = sprite data ptr, de = decompress location, a = params
   29 D1:B8D2 -  -  -  -  ;adds sprite to queue
   30 D1:B8D2 -  -  -  -  add_to_decompress_queue:
   31 D1:B8D2 2A AE B8 D1 	ld hl, (decompress_head_ptr)
   32 D1:B8D6 ED 0F -  -  	ld (hl), bc 
   33 D1:B8D8 23 -  -  -  	inc hl
   34 D1:B8D9 23 -  -  -  	inc hl 
   35 D1:B8DA 23 -  -  -  	inc hl 
   36 D1:B8DB -  -  -  -  
   37 D1:B8DB ED 1F -  -  	ld (hl),de
   38 D1:B8DD -  -  -  -  	
   39 D1:B8DD 23 -  -  -  	inc hl 
   40 D1:B8DE 23 -  -  -  	inc hl 
   41 D1:B8DF 23 -  -  -  	inc hl 
   42 D1:B8E0 -  -  -  -  	
   43 D1:B8E0 77 -  -  -  	ld (hl), a 
   44 D1:B8E1 23 -  -  -  	inc hl ;start of next element 
   45 D1:B8E2 -  -  -  -  	
   46 D1:B8E2 E5 -  -  -  	push hl 
   47 D1:B8E3 11 C0 01 D4 	ld de, decompress_queue_end
   48 D1:B8E7 37 -  -  -  	scf
   49 D1:B8E8 3F -  -  -  	ccf
   50 D1:B8E9 ED 52 -  -  	sbc hl,de ;check if we have reached end of queue to wrap around
   51 D1:B8EB E1 -  -  -  	pop hl
   52 D1:B8EC CA F5 B8 D1 	jp z, a2dq_back_to_start
   53 D1:B8F0 -  -  -  -  	
   54 D1:B8F0 22 AE B8 D1 	ld (decompress_head_ptr),hl
   55 D1:B8F4 -  -  -  -  	;ld a,$AB ;testing
   56 D1:B8F4 -  -  -  -  	;call write_a_to_ram
   57 D1:B8F4 C9 -  -  -  	ret
   58 D1:B8F5 -  -  -  -  	
   59 D1:B8F5 -  -  -  -  a2dq_back_to_start:
   60 D1:B8F5 -  -  -  -  	;ld a,$AA ;testing
   61 D1:B8F5 -  -  -  -  	;call write_a_to_ram
   62 D1:B8F5 -  -  -  -  
   63 D1:B8F5 21 00 00 D4 	ld hl,decompress_queue_start
   64 D1:B8F9 22 AE B8 D1 	ld (decompress_head_ptr),hl
   65 D1:B8FD C9 -  -  -  	ret
   66 D1:B8FE -  -  -  -  	
   67 D1:B8FE -  -  -  -  	
   68 D1:B8FE -  -  -  -  
   69 D1:B8FE -  -  -  -  
   70 D1:B8FE -  -  -  -  ;Runs after frame has been rendered. Checks through decompress queue and continues sprite decompressions
   71 D1:B8FE -  -  -  -  	;if has ended, return. at end of queue
   72 D1:B8FE -  -  -  -  	;if not started, begin decompression and set start flag
   73 D1:B8FE -  -  -  -  	;if has started, but not ended, continue decompression 
   74 D1:B8FE -  -  -  -  	;if started and ended, move to next element 
   75 D1:B8FE -  -  -  -  continue_decompressions:
   76 D1:B8FE 2A AB B8 D1 	ld hl, (decompress_tail_ptr)
   77 D1:B902 7E -  -  -  	ld a,(hl) ;decompress params 
   78 D1:B903 CB 5F -  -  	bit 3,a 
   79 D1:B905 C0 -  -  -  	ret nz ;sprite is done decompressing, at end of queue 
   80 D1:B906 -  -  -  -  	
   81 D1:B906 -  -  -  -  	;testing
   82 D1:B906 -  -  -  -  	;push af
   83 D1:B906 -  -  -  -  	;ld a,$55
   84 D1:B906 -  -  -  -  	;call write_a_to_ram
   85 D1:B906 -  -  -  -  	;pop af
   86 D1:B906 -  -  -  -  	
   87 D1:B906 -  -  -  -  	
   88 D1:B906 -  -  -  -  	
   89 D1:B906 -  -  -  -  	
   90 D1:B906 CB 67 -  -  	bit 4,a
   91 D1:B908 CA 44 B9 D1 	jp z, cd_begin_decompression
   92 D1:B90C -  -  -  -  	
   93 D1:B90C -  -  -  -  	;has started,not ended 
   94 D1:B90C CD C0 B2 D1 	call sdcomp_continue 
   95 D1:B910 B7 -  -  -  	or a 
   96 D1:B911 C0 -  -  -  	ret nz ;sprite not yet done decompressing 
   97 D1:B912 -  -  -  -  
   98 D1:B912 -  -  -  -  cd_done_decompressing:
   99 D1:B912 -  -  -  -  	;sprite finished decompressing
  100 D1:B912 2A AB B8 D1 	ld hl, (decompress_tail_ptr)	
  101 D1:B916 CB DE -  -  	set 3,(hl) ;set finished flag
  102 D1:B918 11 07 00 00 	ld de,7 
  103 D1:B91C 19 -  -  -  	add hl,de ;points to next element in queue
  104 D1:B91D -  -  -  -  	
  105 D1:B91D E5 -  -  -  	push hl 
  106 D1:B91E 11 C0 01 D4 	ld de, decompress_queue_end
  107 D1:B922 37 -  -  -  	scf
  108 D1:B923 3F -  -  -  	ccf
  109 D1:B924 ED 52 -  -  	sbc hl,de ;check if need to wrap to start of queue
  110 D1:B926 E1 -  -  -  	pop hl
  111 D1:B927 D2 33 B9 D1 	jp nc, cd_back_to_start
  112 D1:B92B 22 AB B8 D1 	ld (decompress_tail_ptr),hl
  113 D1:B92F C3 FE B8 D1 	jp continue_decompressions ;Move on to next sprite 
  114 D1:B933 -  -  -  -  	
  115 D1:B933 -  -  -  -  cd_back_to_start:
  116 D1:B933 21 00 00 D4 	ld hl,decompress_queue_start
  117 D1:B937 11 06 00 00 	ld de,6 ;tail points to the parameters byte
  118 D1:B93B 19 -  -  -  	add hl,de
  119 D1:B93C 22 AB B8 D1 	ld (decompress_tail_ptr),hl
  120 D1:B940 C3 FE B8 D1 	jp continue_decompressions ;Move on to next sprite 
  121 D1:B944 -  -  -  -  
  122 D1:B944 -  -  -  -  cd_begin_decompression:
  123 D1:B944 -  -  -  -  
  124 D1:B944 -  -  -  -  	;testing
  125 D1:B944 -  -  -  -  	;push af 
  126 D1:B944 -  -  -  -  	;ld a,$AA
  127 D1:B944 -  -  -  -  	;call write_a_to_ram
  128 D1:B944 -  -  -  -  	;pop af
  129 D1:B944 -  -  -  -  	
  130 D1:B944 -  -  -  -  	;setup and begin decompressing
  131 D1:B944 CB E6 -  -  	set 4,(hl) ;set start flag
  132 D1:B946 F5 -  -  -  	push af 
  133 D1:B947 CB 7F -  -  	bit 7,a 
  134 D1:B949 C4 EE B4 D1 	call nz, sdcomp_set_fast
  135 D1:B94D F1 -  -  -  	pop af 
  136 D1:B94E -  -  -  -  	
  137 D1:B94E F5 -  -  -  	push af 
  138 D1:B94F CB 7F -  -  	bit 7,a 
  139 D1:B951 CC FD B4 D1 	call z, sdcomp_reset_fast
  140 D1:B955 F1 -  -  -  	pop af 
  141 D1:B956 -  -  -  -  	
  142 D1:B956 F5 -  -  -  	push af 
  143 D1:B957 CB 77 -  -  	bit 6,a 
  144 D1:B959 C4 7E B4 D1 	call nz, sdcomp_set_offset
  145 D1:B95D F1 -  -  -  	pop af 
  146 D1:B95E -  -  -  -  	
  147 D1:B95E F5 -  -  -  	push af 
  148 D1:B95F CB 77 -  -  	bit 6,a 
  149 D1:B961 CC 8F B4 D1 	call z, sdcomp_reset_offset
  150 D1:B965 F1 -  -  -  	pop af 
  151 D1:B966 -  -  -  -  	
  152 D1:B966 F5 -  -  -  	push af 
  153 D1:B967 CB 6F -  -  	bit 5,a 
  154 D1:B969 C4 A0 B4 D1 	call nz, sdcomp_set_flip
  155 D1:B96D F1 -  -  -  	pop af 
  156 D1:B96E -  -  -  -  	
  157 D1:B96E F5 -  -  -  	push af 
  158 D1:B96F CB 6F -  -  	bit 5,a 
  159 D1:B971 CC C7 B4 D1 	call z, sdcomp_reset_flip
  160 D1:B975 F1 -  -  -  	pop af 
  161 D1:B976 -  -  -  -  	
  162 D1:B976 2A AB B8 D1 	ld hl, (decompress_tail_ptr) ;may be unnessecary
  163 D1:B97A -  -  -  -  	
  164 D1:B97A 2B -  -  -  	dec hl 
  165 D1:B97B 2B -  -  -  	dec hl 
  166 D1:B97C 2B -  -  -  	dec hl 
  167 D1:B97D ED 17 -  -  	ld de,(hl) ;load decompress location
  168 D1:B97F -  -  -  -  
  169 D1:B97F 2B -  -  -  	dec hl 
  170 D1:B980 2B -  -  -  	dec hl 
  171 D1:B981 2B -  -  -  	dec hl 
  172 D1:B982 ED 27 -  -  	ld hl,(hl) ;load sprite data ptr
  173 D1:B984 -  -  -  -  
  174 D1:B984 CD 23 B1 D1 	call sprite_decompress
  175 D1:B988 B7 -  -  -  	or a 
  176 D1:B989 C0 -  -  -  	ret nz ;sprite not yet done decompressing 
  177 D1:B98A C3 12 B9 D1 	jp cd_done_decompressing
  178 D1:B98E -  -  -  -  
  179 D1:B98E -  -  -  -  
  180 D1:B98E -  -  -  -  ;Checks to see if cam has moved to a new frame and decompressions need to be added to queue
  181 D1:B98E -  -  -  -  check_for_decompress_calls:
  182 D1:B98E 3A D6 B9 D1 	ld a, (last_decompressed_cam_pos)
  183 D1:B992 47 -  -  -  	ld b,a ;put last decompressed pos in b
  184 D1:B993 3A EF AB D1 	ld a, (cam_pos + 1) ;Current frame cam is in
  185 D1:B997 32 D6 B9 D1 	ld (last_decompressed_cam_pos),a ;store this frame as the last decompressed frame 
  186 D1:B99B -  -  -  -  	;need to check if cam has moved up or down since last time
  187 D1:B99B B8 -  -  -  	cp a,b 
  188 D1:B99C -  -  -  -  	
  189 D1:B99C -  -  -  -  	
  190 D1:B99C C8 -  -  -  	ret z ;if same, no new things to add to queue 
  191 D1:B99D D2 A9 B9 D1 	jp nc, cfdc_cam_move_up ;camera has moved up since last time 
  192 D1:B9A1 -  -  -  -  	
  193 D1:B9A1 -  -  -  -  	;cam has moved down since last time 
  194 D1:B9A1 21 DE D0 D1 	ld hl, decompress_calls_table_down
  195 D1:B9A5 C3 AD B9 D1 	jp cfdc_add_calls_to_queue
  196 D1:B9A9 -  -  -  -  	
  197 D1:B9A9 -  -  -  -  	
  198 D1:B9A9 -  -  -  -  cfdc_cam_move_up:
  199 D1:B9A9 21 D0 CF D1 	ld hl, decompress_calls_table_up
  200 D1:B9AD -  -  -  -  
  201 D1:B9AD -  -  -  -  	;a = cam frame, hl = decompress call table (up or down)
  202 D1:B9AD -  -  -  -  cfdc_add_calls_to_queue:
  203 D1:B9AD -  -  -  -  
  204 D1:B9AD -  -  -  -  	;call write_a_to_ram
  205 D1:B9AD -  -  -  -  
  206 D1:B9AD 01 00 00 00 	ld bc,0
  207 D1:B9B1 4F -  -  -  	ld c,a
  208 D1:B9B2 09 -  -  -  	add hl,bc 
  209 D1:B9B3 09 -  -  -  	add hl,bc 
  210 D1:B9B4 09 -  -  -  	add hl,bc 
  211 D1:B9B5 ED 27 -  -  	ld hl,(hl) ;hl now points to correct decompress frame 
  212 D1:B9B7 -  -  -  -  cfdc_direct_add_decompress_frame:
  213 D1:B9B7 -  -  -  -  
  214 D1:B9B7 08 -  -  -  	ex af,af' ;'
  215 D1:B9B8 7E -  -  -  	ld a,(hl) ;a' holds num elements 
  216 D1:B9B9 -  -  -  -  	
  217 D1:B9B9 -  -  -  -  	;call write_a_to_ram
  218 D1:B9B9 -  -  -  -  	
  219 D1:B9B9 -  -  -  -  	;call prgmpause
  220 D1:B9B9 -  -  -  -  	
  221 D1:B9B9 3C -  -  -  	inc a ;to be decd later
  222 D1:B9BA 08 -  -  -  	ex af,af' ;'
  223 D1:B9BB -  -  -  -  	
  224 D1:B9BB 23 -  -  -  	inc hl ;points to first sprite data 
  225 D1:B9BC -  -  -  -  cfdc_add_to_queue_loop:
  226 D1:B9BC 08 -  -  -  	ex af,af' ;'
  227 D1:B9BD -  -  -  -  	;call write_a_to_ram
  228 D1:B9BD 3D -  -  -  	dec a ;account for cases where frame has 0 elements 
  229 D1:B9BE C8 -  -  -  	ret z
  230 D1:B9BF 08 -  -  -  	ex af,af' ;'
  231 D1:B9C0 ED 07 -  -  	ld bc ,(hl) ;load sprite data 
  232 D1:B9C2 23 -  -  -  	inc hl 
  233 D1:B9C3 23 -  -  -  	inc hl
  234 D1:B9C4 23 -  -  -  	inc hl 
  235 D1:B9C5 ED 17 -  -  	ld de,(hl) ;load decomp location 
  236 D1:B9C7 23 -  -  -  	inc hl 
  237 D1:B9C8 23 -  -  -  	inc hl
  238 D1:B9C9 23 -  -  -  	inc hl 
  239 D1:B9CA 7E -  -  -  	ld a,(hl) ;ld params
  240 D1:B9CB 23 -  -  -  	inc hl 
  241 D1:B9CC E5 -  -  -  	push hl
  242 D1:B9CD CD D2 B8 D1 	call add_to_decompress_queue
  243 D1:B9D1 E1 -  -  -  	pop hl
  244 D1:B9D2 C3 BC B9 D1 	jp cfdc_add_to_queue_loop
  245 D1:B9D6 -  -  -  -  	
  246 D1:B9D6 -  -  -  -  	
  247 D1:B9D6 -  -  -  -  
  248 D1:B9D6 -  -  -  -  
  249 D1:B9D6 -  -  -  -  last_decompressed_cam_pos:
  250 D1:B9D6 00 -  -  -  	.db 0 ;camera frame last time checking for decomp was called 
  251 D1:B9D7 -  -  -  -  	
  252 D1:B9D7 -  -  -  -  	
  253 D1:B9D7 -  -  -  -  
  254 D1:B9D7 -  -  -  -  
  255 D1:B9D7 -  -  -  -  
  256 D1:B9D7 -  -  -  -  
  257 D1:B9D7 -  -  -  -  
  258 D1:B9D7 -  -  -  -  
  259 D1:B9D7 -  -  -  -  
  260 D1:B9D7 -  -  -  -  
  261 D1:B9D7 -  -  -  -  
  262 D1:B9D7 -  -  -  -  
  263 D1:B9D7 -  -  -  -  
  264 D1:B9D7 -  -  -  -  
  265 D1:B9D7 -  -  -  -  
  266 D1:B9D7 -  -  -  -  
  267 D1:B9D7 -  -  -  -  
  268 D1:B9D7 -  -  -  -  
  269 D1:B9D7 -  -  -  -  
  270 D1:B9D7 -  -  -  -  
  271 D1:B9D7 -  -  -  -  
  272 D1:B9D7 -  -  -  -  
  273 D1:B9D7 -  -  -  -  
  274 D1:B9D7 -  -  -  -  
  275 D1:B9D7 -  -  -  -  
  276 D1:B9D7 -  -  -  -  
  277 D1:B9D7 -  -  -  -  
Listing for file "ascent.asm"
  601 D1:B9D7 -  -  -  -  #include "getInputs.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\getInputs.txt"
    1 D1:B9D7 -  -  -  -  
    2 D1:B9D7 -  -  -  -  
    3 D1:B9D7 -  -  -  -  
    4 D1:B9D7 -  -  -  -  get_inputs:
    5 D1:B9D7 21 00 00 F5 	ld	hl,DI_Mode		; register for keypad mode
    6 D1:B9DB 36 02 -  -  	ld	(hl),2			; set single scan mode
    7 D1:B9DD -  -  -  -  
    8 D1:B9DD AF -  -  -  	xor	a,a
    9 D1:B9DE -  -  -  -  scan_wait:
   10 D1:B9DE BE -  -  -  	cp	a,(hl)			; wait for keypad idle mode
   11 D1:B9DF 20 FD -  -  	jr	nz,scan_wait
   12 D1:B9E1 -  -  -  -  	
   13 D1:B9E1 -  -  -  -  	; https://wikiti.brandonw.net/index.php?title=84PCE:Ports:A000
   14 D1:B9E1 -  -  -  -  	
   15 D1:B9E1 3E 00 -  -  	ld a,0
   16 D1:B9E3 32 0D C0 D1 	ld (player_flags+1),a ;clear cam moove flags
   17 D1:B9E7 -  -  -  -  	
   18 D1:B9E7 3A 1E 00 F5 	ld	a,(kbdG7) ; $F5001E
   19 D1:B9EB CB 5F -  -   	bit	kbitUp,a
   20 D1:B9ED F5 -  -  -  	push af 
   21 D1:B9EE C4 25 BA D1 	call nz, input_cam_up
   22 D1:B9F2 F1 -  -  -  	pop af 
   23 D1:B9F3 -  -  -  -  	
   24 D1:B9F3 CB 47 -  -  	bit	kbitDown,a
   25 D1:B9F5 C4 30 BA D1 	call nz, input_cam_down
   26 D1:B9F9 -  -  -  -  
   27 D1:B9F9 -  -  -  -  
   28 D1:B9F9 3A 1C 00 F5 	ld a,(kbdG6)
   29 D1:B9FD CB 77 -  -  	bit kbitClear,a
   30 D1:B9FF C2 81 AB D1 	jp nz,exit_prgm
   31 D1:BA03 -  -  -  -  	
   32 D1:BA03 3A 18 00 F5 	ld a,(kbdG4)
   33 D1:BA07 CB 57 -  -  	bit kbit5,a 
   34 D1:BA09 C4 83 BA D1 	call nz, try_tongue
   35 D1:BA0D -  -  -  -  	
   36 D1:BA0D 3A 1A 00 F5 	ld a,(kbdG5)
   37 D1:BA11 CB 57 -  -  	bit kbit6,a 
   38 D1:BA13 C4 63 BA D1 	call nz, charge_jump_right
   39 D1:BA17 -  -  -  -  	
   40 D1:BA17 3A 16 00 F5 	ld a,(kbdG3)
   41 D1:BA1B CB 57 -  -  	bit kbit4,a 
   42 D1:BA1D C4 3B BA D1 	call nz, charge_jump_left
   43 D1:BA21 -  -  -  -  	
   44 D1:BA21 -  -  -  -  
   45 D1:BA21 C3 29 A9 D1 	jp get_inputs_return
   46 D1:BA25 -  -  -  -  	
   47 D1:BA25 -  -  -  -  	
   48 D1:BA25 -  -  -  -  input_cam_up:
   49 D1:BA25 -  -  -  -  	;set flag for cam move up 
   50 D1:BA25 3A 0D C0 D1 	ld a,(player_flags + 1)
   51 D1:BA29 CB FF -  -  	set 7,a 
   52 D1:BA2B 32 0D C0 D1 	ld (player_flags + 1),a 
   53 D1:BA2F C9 -  -  -  	ret
   54 D1:BA30 -  -  -  -  
   55 D1:BA30 -  -  -  -  input_cam_down:
   56 D1:BA30 -  -  -  -  	;set flag for cam move up 
   57 D1:BA30 3A 0D C0 D1 	ld a,(player_flags + 1)
   58 D1:BA34 CB F7 -  -  	set 6,a 
   59 D1:BA36 32 0D C0 D1 	ld (player_flags + 1),a 
   60 D1:BA3A C9 -  -  -  	ret
   61 D1:BA3B -  -  -  -  	
   62 D1:BA3B -  -  -  -  	
   63 D1:BA3B -  -  -  -  	
Listing for file "ascent.asm"
  602 D1:BA3B -  -  -  -  #include "PlayerController.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\PlayerController.txt"
    1 D1:BA3B -  -  -  -  
    2 D1:BA3B -  -  -  -  
    3 D1:BA3B -  -  -  -  
    4 D1:BA3B -  -  -  -  charge_jump_left:
    5 D1:BA3B -  -  -  -  	;Decrease jump right strength
    6 D1:BA3B -  -  -  -  	;Increase jump up strength 
    7 D1:BA3B -  -  -  -  	;Do nothing if jump left timer is above max value 
    8 D1:BA3B 3A 0C C0 D1 	ld a,(player_flags)
    9 D1:BA3F CB FF -  -  	set 7, a 
   10 D1:BA41 32 0C C0 D1 	ld (player_flags),a 
   11 D1:BA45 3A F2 BF D1 	ld a,(jump_charge_timer)
   12 D1:BA49 FE 20 -  -  	cp timer_max_val
   13 D1:BA4B D0 -  -  -  	ret nc
   14 D1:BA4C 3A F1 BF D1 	ld a,(jump_strength_left)
   15 D1:BA50 06 04 -  -  	ld b,4
   16 D1:BA52 80 -  -  -  	add a,b 
   17 D1:BA53 32 F1 BF D1 	ld (jump_strength_left),a
   18 D1:BA57 -  -  -  -  jump_add_up_strength:
   19 D1:BA57 3A EF BF D1 	ld a,(jump_strength_up)
   20 D1:BA5B 3C -  -  -  	inc a 
   21 D1:BA5C 3C -  -  -  	inc a 
   22 D1:BA5D 3C -  -  -  	inc a 
   23 D1:BA5E 32 EF BF D1 	ld (jump_strength_up),a
   24 D1:BA62 C9 -  -  -  	ret
   25 D1:BA63 -  -  -  -  
   26 D1:BA63 -  -  -  -  
   27 D1:BA63 -  -  -  -  charge_jump_right:
   28 D1:BA63 -  -  -  -  	;Increase jump right strength 
   29 D1:BA63 -  -  -  -  	;Increase jump up strength 
   30 D1:BA63 -  -  -  -  	;Do nothing if jump  timer is above max value 
   31 D1:BA63 3A 0C C0 D1 	ld a,(player_flags)
   32 D1:BA67 CB FF -  -  	set 7, a 
   33 D1:BA69 32 0C C0 D1 	ld (player_flags),a 
   34 D1:BA6D 3A F2 BF D1 	ld a,(jump_charge_timer)
   35 D1:BA71 FE 20 -  -  	cp timer_max_val
   36 D1:BA73 D0 -  -  -  	ret nc
   37 D1:BA74 3A F0 BF D1 	ld a,(jump_strength_right)
   38 D1:BA78 06 04 -  -  	ld b,4
   39 D1:BA7A 80 -  -  -  	add a,b 
   40 D1:BA7B 32 F0 BF D1 	ld (jump_strength_right),a
   41 D1:BA7F C3 57 BA D1 	jp jump_add_up_strength
   42 D1:BA83 -  -  -  -  
   43 D1:BA83 -  -  -  -  
   44 D1:BA83 -  -  -  -  try_tongue: ;called from getinput
   45 D1:BA83 -  -  -  -  
   46 D1:BA83 -  -  -  -  	;check if player in air 
   47 D1:BA83 3A 0C C0 D1 	ld a,(player_flags)
   48 D1:BA87 CB 77 -  -  	bit 6,a ;on ground flag 
   49 D1:BA89 C0 -  -  -  	ret nz 
   50 D1:BA8A CB 57 -  -  	bit 2,a 
   51 D1:BA8C C0 -  -  -  	ret nz ;already in tongue state
   52 D1:BA8D CB 5F -  -  	bit 3,a 
   53 D1:BA8F C0 -  -  -  	ret nz ;falling
   54 D1:BA90 -  -  -  -  	;ld a,$A0
   55 D1:BA90 -  -  -  -  	;call write_a_to_ram
   56 D1:BA90 -  -  -  -  
   57 D1:BA90 11 00 00 00 	ld de,0 
   58 D1:BA94 01 00 00 00 	ld bc,0
   59 D1:BA98 21 00 00 00 	ld hl,0
   60 D1:BA9C 3A F8 BF D1 	ld a, (player_y_pos + 2) ;player y frame 
   61 D1:BAA0 67 -  -  -  	ld h,a 
   62 D1:BAA1 3A F7 BF D1 	ld a, (player_y_pos + 1);player y pixel 
   63 D1:BAA5 6F -  -  -  	ld l,a
   64 D1:BAA6 2B -  -  -  	dec hl ;Offset y pos to mouth origin
   65 D1:BAA7 2B -  -  -  	dec hl 
   66 D1:BAA8 2B -  -  -  	dec hl 
   67 D1:BAA9 2B -  -  -  	dec hl 
   68 D1:BAAA 2B -  -  -  	dec hl 
   69 D1:BAAB 2B -  -  -  	dec hl 
   70 D1:BAAC 2B -  -  -  	dec hl ;hl holds y poos of mouth
   71 D1:BAAD -  -  -  -  	
   72 D1:BAAD 11 6B FC D1 	ld de, Tongue_Rings
   73 D1:BAB1 08 -  -  -  	ex af,af' ;'
   74 D1:BAB2 1A -  -  -  	ld a,(de) ; a' is counter 
   75 D1:BAB3 -  -  -  -  	;call write_a_to_ram
   76 D1:BAB3 13 -  -  -  	inc de ;to first element 
   77 D1:BAB4 -  -  -  -  try_tongue_loop:
   78 D1:BAB4 08 -  -  -  	ex af,af' ;' 
   79 D1:BAB5 -  -  -  -  	;hl holds player y ,de holds data
   80 D1:BAB5 1A -  -  -  	ld a ,(de)
   81 D1:BAB6 47 -  -  -  	ld b,a ;frame num 
   82 D1:BAB7 13 -  -  -  	inc de
   83 D1:BAB8 1A -  -  -  	ld a,(de)
   84 D1:BAB9 13 -  -  -  	inc de
   85 D1:BABA 4F -  -  -  	ld c,a ;pixel
   86 D1:BABB -  -  -  -  	;call write_a_to_ram
   87 D1:BABB E5 -  -  -  	push hl ;hl holds player y 
   88 D1:BABC -  -  -  -  	;call write_hl_to_ram
   89 D1:BABC C5 -  -  -  	push bc ;bc holds ring y 
   90 D1:BABD 37 -  -  -  	scf 
   91 D1:BABE 3F -  -  -  	ccf 
   92 D1:BABF ED 42 -  -  	sbc hl,bc ;compare to ring y 
   93 D1:BAC1 D2 14 BB D1 	jp nc, tongue_loop_continue ;ring below player 
   94 D1:BAC5 -  -  -  -  	;call write_hl_to_ram
   95 D1:BAC5 -  -  -  -  	;otherwise ring above player, hl holds -dist 
   96 D1:BAC5 01 0A 00 00 	ld bc,10 ; min dist threshold 
   97 D1:BAC9 09 -  -  -  	add hl,bc 
   98 D1:BACA DA 14 BB D1 	jp c, tongue_loop_continue ; ring less than min dist above player 
   99 D1:BACE 01 5A 00 00 	ld bc,tongue_max_length ;ring max dist threshold - min dist threshold
  100 D1:BAD2 09 -  -  -  	add hl,bc 
  101 D1:BAD3 D2 14 BB D1 	jp nc,tongue_loop_continue ;ring above max distance threshold
  102 D1:BAD7 -  -  -  -  	;jp nc,test_1	
  103 D1:BAD7 -  -  -  -  	
  104 D1:BAD7 -  -  -  -  	;Ring has valid y pos 
  105 D1:BAD7 E1 -  -  -  	pop hl ;ring y 
  106 D1:BAD8 22 08 C0 D1 	ld (tongue_ring_y_pos),hl
  107 D1:BADC C1 -  -  -  	pop bc ;player y  
  108 D1:BADD C5 -  -  -  	push bc
  109 D1:BADE 37 -  -  -  	scf 
  110 D1:BADF 3F -  -  -  	ccf 
  111 D1:BAE0 ED 42 -  -  	sbc hl,bc ;hl holds distance ring is above player  
  112 D1:BAE2 -  -  -  -  	;ld a,$AA
  113 D1:BAE2 -  -  -  -  	;call write_a_to_ram
  114 D1:BAE2 1A -  -  -  	ld a,(de) ;ring x pos 
  115 D1:BAE3 -  -  -  -  	;call write_a_to_ram
  116 D1:BAE3 4F -  -  -  	ld c,a 
  117 D1:BAE4 32 0B C0 D1 	ld (tongue_ring_x_pos),a 
  118 D1:BAE8 CD E1 BF D1 	call player_x_half ;a holds player x in pairs  (destroys b)
  119 D1:BAEC -  -  -  -  	;call write_a_to_ram
  120 D1:BAEC 06 03 -  -  	ld b,3;x offset from collider to center of player collider
  121 D1:BAEE 80 -  -  -  	add a,b 
  122 D1:BAEF 91 -  -  -  	sub a,c ;player x - ring x 
  123 D1:BAF0 -  -  -  -  	;call write_a_to_ram
  124 D1:BAF0 D2 F6 BA D1 	jp nc, tongue_ring_to_left
  125 D1:BAF4 ED 44 -  -  	neg 
  126 D1:BAF6 -  -  -  -  tongue_ring_to_left:
  127 D1:BAF6 -  -  -  -  	;player sprite will be flipped 
  128 D1:BAF6 -  -  -  -  	;a holds abs(xdistance) to ring in pair pixels 
  129 D1:BAF6 -  -  -  -  	; l holds y dist in single px
  130 D1:BAF6 FE 1E -  -  	cp 30
  131 D1:BAF8 D2 16 BB D1 	jp nc,tongue_loop_continue_2 ;x dist > 20
  132 D1:BAFC 2D -  -  -  	dec l ;safety factor
  133 D1:BAFD 95 -  -  -  	sub a,l
  134 D1:BAFE -  -  -  -  	;call write_a_to_ram
  135 D1:BAFE D2 16 BB D1 	jp nc, tongue_loop_continue_2 ;x dist > y dist 
  136 D1:BB02 -  -  -  -  	;jp nc, test_2
  137 D1:BB02 -  -  -  -  	;Valid ring found 
  138 D1:BB02 -  -  -  -  	
  139 D1:BB02 -  -  -  -  	;call prgmpause;
  140 D1:BB02 -  -  -  -  	
  141 D1:BB02 E1 -  -  -  	pop hl ;player y 
  142 D1:BB03 3A 0C C0 D1 	ld a,(player_flags)
  143 D1:BB07 CB D7 -  -  	set 2,a 
  144 D1:BB09 32 0C C0 D1 	ld (player_flags),a 
  145 D1:BB0D 3E 00 -  -  	ld a,0 
  146 D1:BB0F 32 12 C0 D1 	ld (tongue_extend_timer),a
  147 D1:BB13 -  -  -  -  	;call write_a_to_ram
  148 D1:BB13 -  -  -  -  	;ld a,$AA
  149 D1:BB13 -  -  -  -  	;call write_a_to_ram
  150 D1:BB13 C9 -  -  -  	ret 
  151 D1:BB14 -  -  -  -  
  152 D1:BB14 -  -  -  -  
  153 D1:BB14 -  -  -  -  tongue_loop_continue:
  154 D1:BB14 C1 -  -  -  	pop bc ;ring y 
  155 D1:BB15 13 -  -  -  	inc de ;to next
  156 D1:BB16 -  -  -  -  tongue_loop_continue_2:
  157 D1:BB16 E1 -  -  -  	pop hl ;player y
  158 D1:BB17 08 -  -  -  	ex af,af' ;' 
  159 D1:BB18 3D -  -  -  	dec a 
  160 D1:BB19 C2 B4 BA D1 	jp nz,try_tongue_loop
  161 D1:BB1D -  -  -  -  	
  162 D1:BB1D C9 -  -  -  	ret 
  163 D1:BB1E -  -  -  -  
  164 D1:BB1E -  -  -  -  
  165 D1:BB1E -  -  -  -  
  166 D1:BB1E -  -  -  -  
  167 D1:BB1E -  -  -  -  player_update: ;Should be called after inputs
  168 D1:BB1E -  -  -  -  
  169 D1:BB1E 3A 0C C0 D1 	ld a,(player_flags)
  170 D1:BB22 CB 57 -  -  	bit 2,a ;tongue flag 
  171 D1:BB24 C2 3B BB D1 	jp nz, pu_tongue_update	
  172 D1:BB28 CB 7F -  -  	bit 7,a ;jump key  flag 
  173 D1:BB2A CA DF BB D1 	jp z, pu_try_jump
  174 D1:BB2E -  -  -  -  	
  175 D1:BB2E -  -  -  -  	;Jump key is held, charge jump
  176 D1:BB2E 3A F2 BF D1 	ld a,(jump_charge_timer)
  177 D1:BB32 3C -  -  -  	inc a 
  178 D1:BB33 32 F2 BF D1 	ld (jump_charge_timer),a
  179 D1:BB37 -  -  -  -  	;Jumps can be charged in air, for immediate jump
  180 D1:BB37 -  -  -  -  	
  181 D1:BB37 C3 3C BC D1 	jp pu_physics
  182 D1:BB3B -  -  -  -  
  183 D1:BB3B -  -  -  -  pu_tongue_update:
  184 D1:BB3B -  -  -  -  	
  185 D1:BB3B -  -  -  -  	;ld a,$AB
  186 D1:BB3B -  -  -  -  	;call write_a_to_ram
  187 D1:BB3B -  -  -  -  	
  188 D1:BB3B -  -  -  -  	;compute y dist to ring, and angle to check cancel 
  189 D1:BB3B CD 08 C5 D1 	call y_length_to_tongue_ring
  190 D1:BB3F 7D -  -  -  	ld a,l
  191 D1:BB40 FE 5A -  -  	cp tongue_max_length
  192 D1:BB42 D2 D1 BB D1 	jp nc, pu_tongue_release 
  193 D1:BB46 -  -  -  -  	;call write_hl_to_ram
  194 D1:BB46 -  -  -  -  	;hl holds line y length 
  195 D1:BB46 -  -  -  -  	;ld a,l 
  196 D1:BB46 -  -  -  -  	;call write_a_to_ram
  197 D1:BB46 3A 12 C0 D1 	ld a,(tongue_extend_timer)
  198 D1:BB4A -  -  -  -  	;call write_a_to_ram
  199 D1:BB4A -  -  -  -  	;compare timer to y dist / 8 
  200 D1:BB4A CB 3D -  -  	srl l 
  201 D1:BB4C CB 3D -  -  	srl l 
  202 D1:BB4E CB 3D -  -  	srl l 
  203 D1:BB50 BD -  -  -  	cp l 
  204 D1:BB51 DA C7 BB D1 	jp c, pu_tongue_extend
  205 D1:BB55 -  -  -  -  	
  206 D1:BB55 FE 7F -  -  	cp 127 ;if > 127 go to contract
  207 D1:BB57 D2 6D BB D1 	jp nc, pu_tongue_contract
  208 D1:BB5B -  -  -  -  	;ld a,$AC
  209 D1:BB5B -  -  -  -  	;call write_a_to_ram
  210 D1:BB5B -  -  -  -  	;otherwise tongue is full length, set timer to 128 to start contract phase 
  211 D1:BB5B 3E 80 -  -  	ld a,128 
  212 D1:BB5D 32 12 C0 D1 	ld (tongue_extend_timer),a 
  213 D1:BB61 21 00 00 00 	ld hl,0 
  214 D1:BB65 22 FC BF D1 	ld (player_y_vel),hl 
  215 D1:BB69 22 F9 BF D1 	ld (player_x_vel),hl
  216 D1:BB6D -  -  -  -  
  217 D1:BB6D -  -  -  -  pu_tongue_contract:
  218 D1:BB6D -  -  -  -  
  219 D1:BB6D -  -  -  -  	;ld a,$AD 
  220 D1:BB6D -  -  -  -  	;call write_a_to_ram
  221 D1:BB6D -  -  -  -  	;Add distance to ring to player velocity until reach ring
  222 D1:BB6D CD 08 C5 D1 	call y_length_to_tongue_ring ;l holds y dist in px 
  223 D1:BB71 7D -  -  -  	ld a,l 
  224 D1:BB72 -  -  -  -  	;call write_a_to_ram
  225 D1:BB72 FE 03 -  -  	cp 3 
  226 D1:BB74 DA D1 BB D1 	jp c, pu_tongue_release
  227 D1:BB78 CB 7C -  -  	bit 7,h 
  228 D1:BB7A C2 D1 BB D1 	jp nz,pu_tongue_release
  229 D1:BB7E -  -  -  -  	;div by ~6
  230 D1:BB7E CB 3D -  -  	srl l
  231 D1:BB80 CB 3D -  -  	srl l
  232 D1:BB82 CB 3D -  -  	srl l
  233 D1:BB84 7D -  -  -  	ld a,l 
  234 D1:BB85 CB 3D -  -  	srl l 
  235 D1:BB87 85 -  -  -  	add a,l 
  236 D1:BB88 6F -  -  -    	ld l,a 
  237 D1:BB89 -  -  -  -  	;call write_a_to_ram
  238 D1:BB89 -  -  -  -  	;call prgmpause
  239 D1:BB89 -  -  -  -  	;call write_hl_to_ram
  240 D1:BB89 11 14 00 00 	ld de,20
  241 D1:BB8D 19 -  -  -  	add hl,de 
  242 D1:BB8E EB -  -  -  	ex de,hl 
  243 D1:BB8F 2A FC BF D1 	ld hl,(player_y_vel)
  244 D1:BB93 19 -  -  -  	add hl,de 
  245 D1:BB94 22 FC BF D1 	ld (player_y_vel),hl 
  246 D1:BB98 -  -  -  -  	;call write_hl_to_ram
  247 D1:BB98 -  -  -  -  	;call prgmpause
  248 D1:BB98 -  -  -  -  	
  249 D1:BB98 CD 25 C5 D1 	call x_length_to_tongue_ring
  250 D1:BB9C -  -  -  -  	;a holds x dist in pairs
  251 D1:BB9C CB 7F -  -  	bit 7,a ;check sign 
  252 D1:BB9E C2 B0 BB D1 	jp nz, pu_tongue_contract_left
  253 D1:BBA2 11 00 00 00 	ld de,0 
  254 D1:BBA6 1E 03 -  -  	ld e,3 
  255 D1:BBA8 83 -  -  -  	add a,e 
  256 D1:BBA9 5F -  -  -  	ld e,a
  257 D1:BBAA CB 3B -  -  	srl e ;div by 2
  258 D1:BBAC C3 BA BB D1 	jp pu_tongue_contract_right
  259 D1:BBB0 -  -  -  -  pu_tongue_contract_left:
  260 D1:BBB0 11 FF FF FF 	ld de, $ffffff
  261 D1:BBB4 1E FD -  -  	ld e,-3 
  262 D1:BBB6 83 -  -  -  	add a,e
  263 D1:BBB7 5F -  -  -  	ld e,a 
  264 D1:BBB8 CB 2B -  -  	sra e ;div 2
  265 D1:BBBA -  -  -  -  pu_tongue_contract_right:
  266 D1:BBBA -  -  -  -  	
  267 D1:BBBA 2A F9 BF D1 	ld hl,(player_x_vel)
  268 D1:BBBE 19 -  -  -  	add hl,de 
  269 D1:BBBF 22 F9 BF D1 	ld (player_x_vel),hl 
  270 D1:BBC3 -  -  -  -  	
  271 D1:BBC3 C3 3C BC D1 	jp pu_physics
  272 D1:BBC7 -  -  -  -  	
  273 D1:BBC7 -  -  -  -  	;tongue extends 8px per frame until max length 
  274 D1:BBC7 -  -  -  -  	;then set timer to 128 for contract phase 
  275 D1:BBC7 -  -  -  -  pu_tongue_extend:
  276 D1:BBC7 -  -  -  -  	;Extend tongue and do normal air physics
  277 D1:BBC7 3C -  -  -  	inc a 
  278 D1:BBC8 3C -  -  -  	inc a 
  279 D1:BBC9 -  -  -  -  	;call write_a_to_ram
  280 D1:BBC9 32 12 C0 D1 	ld (tongue_extend_timer),a 
  281 D1:BBCD C3 3C BC D1 	jp pu_physics
  282 D1:BBD1 -  -  -  -  
  283 D1:BBD1 -  -  -  -  
  284 D1:BBD1 -  -  -  -  pu_tongue_release:
  285 D1:BBD1 3A 0C C0 D1 	ld a,(player_flags)
  286 D1:BBD5 CB 97 -  -  	res 2,a 
  287 D1:BBD7 32 0C C0 D1 	ld (player_flags),a 
  288 D1:BBDB C3 3C BC D1 	jp pu_physics
  289 D1:BBDF -  -  -  -  
  290 D1:BBDF -  -  -  -  
  291 D1:BBDF -  -  -  -  pu_try_jump:
  292 D1:BBDF -  -  -  -  	;no jump keys held this frame. If jump timer > 0 and on ground, then jump 
  293 D1:BBDF -  -  -  -  	
  294 D1:BBDF CB 77 -  -  	bit 6,a ;ground check 
  295 D1:BBE1 CA 2A BC D1 	jp z, pu_no_jump ;if not on ground, cant jump
  296 D1:BBE5 3A F2 BF D1 	ld a,(jump_charge_timer)
  297 D1:BBE9 B7 -  -  -  	or a 
  298 D1:BBEA CA 2A BC D1 	jp z,pu_no_jump ;jump timers are 0 = no jump
  299 D1:BBEE -  -  -  -  	
  300 D1:BBEE FE 08 -  -  	cp 8;if timer < 8 no jump
  301 D1:BBF0 DA 2A BC D1 	jp c, pu_no_jump
  302 D1:BBF4 -  -  -  -  	
  303 D1:BBF4 -  -  -  -  	;This is the minimum jump player can do 
  304 D1:BBF4 -  -  -  -  	;ld a,(jump_strength_right)
  305 D1:BBF4 -  -  -  -  	;bit 7,a 
  306 D1:BBF4 -  -  -  -  	;;jp nz, pu_min_jump_left 
  307 D1:BBF4 -  -  -  -  	;or a 
  308 D1:BBF4 -  -  -  -  	;jp z, pu_min_jump_up 
  309 D1:BBF4 -  -  -  -  	;ld a,20 
  310 D1:BBF4 -  -  -  -  	;jp pu_min_jump_up
  311 D1:BBF4 -  -  -  -  ;pu_min_jump_left:
  312 D1:BBF4 -  -  -  -  	;ld a, -20
  313 D1:BBF4 -  -  -  -  ;pu_min_jump_up:
  314 D1:BBF4 -  -  -  -  	;ld (jump_strength_right),a 
  315 D1:BBF4 -  -  -  -  	
  316 D1:BBF4 -  -  -  -  	;ld a,15 
  317 D1:BBF4 -  -  -  -  	;ld (jump_strength_up),a 
  318 D1:BBF4 -  -  -  -  	
  319 D1:BBF4 -  -  -  -  	;ld a,$55
  320 D1:BBF4 -  -  -  -  	;call write_a_to_ram
  321 D1:BBF4 -  -  -  -  	
  322 D1:BBF4 -  -  -  -  	;Player is on ground and should execute a jump 
  323 D1:BBF4 -  -  -  -  pu_jump_notmin:
  324 D1:BBF4 -  -  -  -  	
  325 D1:BBF4 21 00 00 00 	ld hl,0 
  326 D1:BBF8 3A EF BF D1 	ld a,(jump_strength_up)
  327 D1:BBFC 6F -  -  -  	ld l,a
  328 D1:BBFD -  -  -  -  	;call write_a_to_ram
  329 D1:BBFD -  -  -  -  
  330 D1:BBFD 22 FC BF D1 	ld (player_y_vel),hl 
  331 D1:BC01 -  -  -  -  	;call write_hl_to_ram
  332 D1:BC01 -  -  -  -  	
  333 D1:BC01 3A F1 BF D1 	ld a,(jump_strength_left)
  334 D1:BC05 47 -  -  -  	ld b,a 
  335 D1:BC06 3A F0 BF D1 	ld a,(jump_strength_right)
  336 D1:BC0A 90 -  -  -  	sub a,b ;subtract left jump from right
  337 D1:BC0B DA 17 BC D1 	jp c, pu_left_jump 
  338 D1:BC0F -  -  -  -  	;right jump 
  339 D1:BC0F 21 00 00 00 	ld hl,0
  340 D1:BC13 C3 1B BC D1 	jp pu_jump_cont
  341 D1:BC17 -  -  -  -  pu_left_jump:	
  342 D1:BC17 21 FF FF FF 	ld hl, $ffffff ;makes x vel negative 
  343 D1:BC1B -  -  -  -  pu_jump_cont:
  344 D1:BC1B 6F -  -  -  	ld l,a 
  345 D1:BC1C -  -  -  -  	;call write_a_to_ram
  346 D1:BC1C 22 F9 BF D1 	ld (player_x_vel),hl 
  347 D1:BC20 -  -  -  -  	;call write_hl_to_ram
  348 D1:BC20 -  -  -  -  	;Clear ground flag 
  349 D1:BC20 3A 0C C0 D1 	ld a,(player_flags)
  350 D1:BC24 CB B7 -  -  	res 6, a 
  351 D1:BC26 32 0C C0 D1 	ld (player_flags),a 
  352 D1:BC2A -  -  -  -  	
  353 D1:BC2A -  -  -  -  pu_no_jump:	
  354 D1:BC2A -  -  -  -  	;reset jump timers 
  355 D1:BC2A 3E 00 -  -  	ld a,0 
  356 D1:BC2C 32 F2 BF D1 	ld (jump_charge_timer),a 
  357 D1:BC30 32 F0 BF D1 	ld (jump_strength_right),a 
  358 D1:BC34 32 F1 BF D1 	ld (jump_strength_left),a 
  359 D1:BC38 32 EF BF D1 	ld (jump_strength_up),a	
  360 D1:BC3C -  -  -  -  	
  361 D1:BC3C -  -  -  -  pu_physics:
  362 D1:BC3C -  -  -  -  
  363 D1:BC3C -  -  -  -  	;Execute player physics update and check for collisions 
  364 D1:BC3C -  -  -  -  	;Run multiple times, 16 steps per frame? 
  365 D1:BC3C -  -  -  -  	;Move up first, then check collision, then move side and check again 
  366 D1:BC3C 3A 0C C0 D1 	ld a,(player_flags)
  367 D1:BC40 CB 77 -  -  	bit 6,a 
  368 D1:BC42 C4 D9 BC D1 	call nz,pu_check_on_ground ;check if player still on ground 
  369 D1:BC46 -  -  -  -  
  370 D1:BC46 -  -  -  -  
  371 D1:BC46 3E 10 -  -  	ld a,16 ;num physics loops 
  372 D1:BC48 32 4D BC D1 	ld (pu_physics_count),a 
  373 D1:BC4C -  -  -  -  	
  374 D1:BC4C -  -  -  -  pu_physics_loop:
  375 D1:BC4C -  -  -  -  
  376 D1:BC4C -  -  -  -  pu_physics_count .equ $ + 1
  377 D1:BC4C 3E 00 -  -  	ld a,0
  378 D1:BC4E 3D -  -  -  	dec a 
  379 D1:BC4F CA FB BC D1 	jp z, pu_physics_end
  380 D1:BC53 32 4D BC D1 	ld (pu_physics_count),a
  381 D1:BC57 -  -  -  -  	
  382 D1:BC57 3A 0C C0 D1 	ld a,(player_flags)
  383 D1:BC5B -  -  -  -  	
  384 D1:BC5B CB AF -  -  	res 5,a ;reset in semisolid flag 
  385 D1:BC5D 32 0C C0 D1 	ld (player_flags),a 
  386 D1:BC61 CB 77 -  -  	bit 6,a 
  387 D1:BC63 C2 4C BC D1 	jp nz,pu_physics_loop ;If on ground, no need to do physics 
  388 D1:BC67 -  -  -  -  	
  389 D1:BC67 -  -  -  -  	
  390 D1:BC67 -  -  -  -  
  391 D1:BC67 -  -  -  -  ;Y POS UPDATE
  392 D1:BC67 -  -  -  -  
  393 D1:BC67 2A FC BF D1 	ld hl, (player_y_vel) 	
  394 D1:BC6B EB -  -  -  	ex de,hl 
  395 D1:BC6C 2A F6 BF D1 	ld hl, (player_y_pos) 
  396 D1:BC70 19 -  -  -  	add hl,de ;add y vel to y pos 
  397 D1:BC71 22 F6 BF D1 	ld (player_y_pos),hl 
  398 D1:BC75 -  -  -  -  	
  399 D1:BC75 -  -  -  -  	;check for vertical collisions here 
  400 D1:BC75 3E DA -  -  	ld a,%11011010;jp c
  401 D1:BC77 32 BD BD D1 	ld (collision_check_vertical),a
  402 D1:BC7B CD 26 BD D1 	call check_collisions
  403 D1:BC7F -  -  -  -  
  404 D1:BC7F -  -  -  -  pu_update_x_pos:
  405 D1:BC7F -  -  -  -  
  406 D1:BC7F -  -  -  -  ;X POS UPDATE
  407 D1:BC7F 2A F9 BF D1 	ld hl, (player_x_vel) 
  408 D1:BC83 EB -  -  -  	ex de,hl 
  409 D1:BC84 2A F3 BF D1 	ld hl, (player_x_pos) 
  410 D1:BC88 19 -  -  -  	add hl,de ;add x vel to x pos 
  411 D1:BC89 22 F3 BF D1 	ld (player_x_pos),hl 
  412 D1:BC8D -  -  -  -  	
  413 D1:BC8D 11 00 09 00 	ld de,$000900
  414 D1:BC91 ED 52 -  -  	sbc hl,de 
  415 D1:BC93 DC B5 BF D1 	call c, reverse_x_vel ;If xpos < 2px
  416 D1:BC97 2A F3 BF D1 	ld hl, (player_x_pos) 
  417 D1:BC9B 11 00 23 01 	ld de,$012300; if xpos > 300px
  418 D1:BC9F ED 52 -  -  	sbc hl,de 
  419 D1:BCA1 D4 B5 BF D1 	call nc,reverse_x_vel
  420 D1:BCA5 -  -  -  -  	
  421 D1:BCA5 -  -  -  -  	;TODO check horizontal collisoins 
  422 D1:BCA5 3E D2 -  -  	ld a, %11010010 ;jp nc 
  423 D1:BCA7 32 BD BD D1 	ld (collision_check_vertical),a
  424 D1:BCAB CD 26 BD D1 	call check_collisions
  425 D1:BCAF -  -  -  -  	
  426 D1:BCAF -  -  -  -  	;Set previous position 
  427 D1:BCAF 2A F6 BF D1 	ld hl, (player_y_pos)
  428 D1:BCB3 22 02 C0 D1 	ld (player_y_pos_prev), hl 
  429 D1:BCB7 -  -  -  -  	;call write_hl_to_ram
  430 D1:BCB7 2A F3 BF D1 	ld hl, (player_x_pos)
  431 D1:BCBB 22 FF BF D1 	ld (player_x_pos_prev), hl 
  432 D1:BCBF -  -  -  -  	
  433 D1:BCBF -  -  -  -  	;ld a,$CC
  434 D1:BCBF -  -  -  -  	;call write_a_to_ram
  435 D1:BCBF -  -  -  -  	
  436 D1:BCBF -  -  -  -  	
  437 D1:BCBF 3A 0C C0 D1 	ld a,(player_flags)
  438 D1:BCC3 CB 6F -  -  	bit 5,a ;in semisolid flag 
  439 D1:BCC5 CA CF BC D1 	jp z, pu_no_semisolid
  440 D1:BCC9 CB E7 -  -  	set 4,a	
  441 D1:BCCB C3 D1 BC D1 	jp pu_prev_semisolid
  442 D1:BCCF -  -  -  -  pu_no_semisolid:
  443 D1:BCCF CB A7 -  -  	res 4,a 
  444 D1:BCD1 -  -  -  -  pu_prev_semisolid:
  445 D1:BCD1 32 0C C0 D1 	ld (player_flags),a 
  446 D1:BCD5 -  -  -  -  	
  447 D1:BCD5 C3 4C BC D1 	jp pu_physics_loop
  448 D1:BCD9 -  -  -  -  	;Apply gravity and terminal v check after loop 
  449 D1:BCD9 -  -  -  -  
  450 D1:BCD9 -  -  -  -  pu_check_on_ground:
  451 D1:BCD9 -  -  -  -  	;checks if player is still on ground or platform has dissapeared 
  452 D1:BCD9 3A 0C C0 D1 	ld a,(player_flags)
  453 D1:BCDD CB B7 -  -  	res 6,a 
  454 D1:BCDF 32 0C C0 D1 	ld (player_flags),a 
  455 D1:BCE3 2A F6 BF D1 	ld hl, (player_y_pos)
  456 D1:BCE7 11 00 FF FF 	ld de,-256
  457 D1:BCEB 19 -  -  -  	add hl,de ;dec by 1 full pixel
  458 D1:BCEC 22 F6 BF D1 	ld (player_y_pos),hl 
  459 D1:BCF0 -  -  -  -  	;check for vertical collisions here 
  460 D1:BCF0 3E DA -  -  	ld a,%11011010;jp c
  461 D1:BCF2 32 BD BD D1 	ld (collision_check_vertical),a
  462 D1:BCF6 CD 26 BD D1 	call check_collisions	
  463 D1:BCFA C9 -  -  -  	ret 
  464 D1:BCFB -  -  -  -  
  465 D1:BCFB -  -  -  -  
  466 D1:BCFB -  -  -  -  pu_physics_end:
  467 D1:BCFB -  -  -  -  	;Apply gravity 
  468 D1:BCFB 2A FC BF D1 	ld hl,(player_y_vel)
  469 D1:BCFF CB 7C -  -  	bit 7,h  ;Check if vel is negative
  470 D1:BD01 CA 10 BD D1 	jp z,pu_apply_gravity ;if moving up apply gravity
  471 D1:BD05 -  -  -  -  	
  472 D1:BD05 E5 -  -  -  	push hl 
  473 D1:BD06 -  -  -  -  	;check foor terminal vel 
  474 D1:BD06 11 80 00 00 	ld de, $000080 ;8px per frame
  475 D1:BD0A 19 -  -  -  	add hl,de ;terminal V is negative
  476 D1:BD0B E1 -  -  -  	pop hl 
  477 D1:BD0C D2 1D BD D1 	jp nc, pu_terminal_vel
  478 D1:BD10 -  -  -  -  pu_apply_gravity:
  479 D1:BD10 11 0B 00 00 	ld de,11 ;GRAVITY CONSTANT
  480 D1:BD14 37 -  -  -  	scf 
  481 D1:BD15 3F -  -  -  	ccf ;reset carry flag 
  482 D1:BD16 ED 52 -  -  	sbc hl,de 
  483 D1:BD18 22 FC BF D1 	ld (player_y_vel),hl
  484 D1:BD1C -  -  -  -  
  485 D1:BD1C C9 -  -  -  	ret 
  486 D1:BD1D -  -  -  -  pu_terminal_vel:
  487 D1:BD1D 21 80 FF FF 	ld hl, $ffff80 ;-8 px per frame
  488 D1:BD21 22 FC BF D1 	ld (player_y_vel),hl
  489 D1:BD25 -  -  -  -  	;call write_hl_to_ram
  490 D1:BD25 C9 -  -  -  	ret 
  491 D1:BD26 -  -  -  -  
  492 D1:BD26 -  -  -  -  
  493 D1:BD26 -  -  -  -  
  494 D1:BD26 -  -  -  -  check_collisions:
  495 D1:BD26 3A F8 BF D1 	ld a,(player_y_pos+2) ;Frame Number
  496 D1:BD2A 01 00 00 00 	ld bc,0 
  497 D1:BD2E 21 8C FA D1 	ld hl, Collision_Data_frame_table
  498 D1:BD32 4F -  -  -  	ld c,a 
  499 D1:BD33 09 -  -  -  	add hl,bc ;add frame num 
  500 D1:BD34 09 -  -  -  	add hl,bc ;add frame num 
  501 D1:BD35 09 -  -  -  	add hl,bc ;add frame num 
  502 D1:BD36 ED 27 -  -  	ld hl,(hl)
  503 D1:BD38 -  -  -  -  	
  504 D1:BD38 -  -  -  -  	;call write_a_to_ram
  505 D1:BD38 -  -  -  -  	
  506 D1:BD38 -  -  -  -  	;ld a,$20 
  507 D1:BD38 -  -  -  -  	;call write_a_to_ram
  508 D1:BD38 -  -  -  -  	
  509 D1:BD38 3E DA -  -  	ld a,%11011010;jp c
  510 D1:BD3A 32 AD BF D1 	ld(check_col_lower_jump),a 
  511 D1:BD3E 32 D3 BE D1 	ld (colis_semisolid_down_lower_frame),a 
  512 D1:BD42 -  -  -  -  	
  513 D1:BD42 -  -  -  -  	;hl points to collision data for this frame 
  514 D1:BD42 08 -  -  -  	ex af,af' ;' 
  515 D1:BD43 7E -  -  -  	ld a,(hl) ;ld number of elements 
  516 D1:BD44 3C -  -  -  	inc a ;for 0 case
  517 D1:BD45 08 -  -  -  	ex af,af' ;' 
  518 D1:BD46 23 -  -  -  	inc hl ;to first element
  519 D1:BD47 -  -  -  -  
  520 D1:BD47 -  -  -  -  check_collisions_same_loop:
  521 D1:BD47 -  -  -  -  	;hl pts to ymin of collider 
  522 D1:BD47 08 -  -  -  	ex af,af' ;'
  523 D1:BD48 3D -  -  -  	dec a 
  524 D1:BD49 CA 68 BD D1 	jp z, check_collisions_lower
  525 D1:BD4D 08 -  -  -  	ex af,af';' 
  526 D1:BD4E -  -  -  -  	;Collider bottom is in same frame as player 
  527 D1:BD4E 3A F7 BF D1 	ld a,(player_y_pos + 1)
  528 D1:BD52 96 -  -  -  	sub a,(hl); sub y pos of collider 
  529 D1:BD53 -  -  -  -  	;call write_a_to_ram
  530 D1:BD53 DA A7 BF D1 	jp c, check_col_skip_4 
  531 D1:BD57 23 -  -  -  	inc hl; to height 
  532 D1:BD58 -  -  -  -  	;Player top is above bottom of collider 
  533 D1:BD58 -  -  -  -  	;a holds # pixels above bottom of collider (0 indexed)	
  534 D1:BD58 0E 12 -  -  	ld c,player_collider_height
  535 D1:BD5A -  -  -  -  	;call write_a_to_ram
  536 D1:BD5A 91 -  -  -  	sub a,c
  537 D1:BD5B DA 95 BD D1 	jp c, check_col_y_collision
  538 D1:BD5F 96 -  -  -  	sub (hl); cokmpare to collider height -1 
  539 D1:BD60 DA 95 BD D1 	jp c,check_col_y_collision
  540 D1:BD64 -  -  -  -  	;Otherwise no collision 	
  541 D1:BD64 C3 A8 BF D1 	jp check_col_skip_3
  542 D1:BD68 -  -  -  -  
  543 D1:BD68 -  -  -  -  check_collisions_lower:
  544 D1:BD68 -  -  -  -  	;hl pts to start of lower frame collisoin data 
  545 D1:BD68 08 -  -  -  	ex af,af' ;' 
  546 D1:BD69 7E -  -  -  	ld a,(hl) ;ld number of elements 
  547 D1:BD6A 3C -  -  -  	inc a ;for 0 case
  548 D1:BD6B -  -  -  -  	;call write_a_to_ram
  549 D1:BD6B 08 -  -  -  	ex af,af' ;'
  550 D1:BD6C -  -  -  -  
  551 D1:BD6C -  -  -  -  	;ld a,$21 
  552 D1:BD6C -  -  -  -  	;call write_a_to_ram
  553 D1:BD6C -  -  -  -  	
  554 D1:BD6C 23 -  -  -  	inc hl ;to first element
  555 D1:BD6D 3E D2 -  -  	ld a, %11010010 ;jp nc 
  556 D1:BD6F 32 AD BF D1 	ld (check_col_lower_jump),a 
  557 D1:BD73 32 D3 BE D1 	ld (colis_semisolid_down_lower_frame),a 
  558 D1:BD77 -  -  -  -  check_collisions_lower_loop:
  559 D1:BD77 -  -  -  -  ;hl pts to ymin of collider 
  560 D1:BD77 08 -  -  -  	ex af,af' ;'
  561 D1:BD78 3D -  -  -  	dec a 
  562 D1:BD79 C8 -  -  -  	ret z 
  563 D1:BD7A 08 -  -  -  	ex af,af';' 
  564 D1:BD7B -  -  -  -  	;collider y min is in frame below player
  565 D1:BD7B -  -  -  -  	;we already know player is above collider bottom 
  566 D1:BD7B 3A F7 BF D1 	ld a,(player_y_pos + 1)
  567 D1:BD7F 96 -  -  -  	sub a,(hl)
  568 D1:BD80 D2 A7 BF D1 	jp nc,check_col_skip_4
  569 D1:BD84 -  -  -  -  	;call write_a_to_ram
  570 D1:BD84 23 -  -  -  	inc hl ;to height 
  571 D1:BD85 -  -  -  -  	;a holds px from player top to collider bottom 
  572 D1:BD85 0E 12 -  -  	ld c,player_collider_height
  573 D1:BD87 -  -  -  -  	;call write_a_to_ram
  574 D1:BD87 91 -  -  -  	sub a,c
  575 D1:BD88 DA 95 BD D1 	jp c, check_col_y_collision
  576 D1:BD8C -  -  -  -  
  577 D1:BD8C -  -  -  -  	;call write_a_to_ram
  578 D1:BD8C 96 -  -  -  	sub (hl); cokmpare to collider height -1 
  579 D1:BD8D DA 95 BD D1 	jp c,check_col_y_collision
  580 D1:BD91 -  -  -  -  	;Otherwise no collision 	
  581 D1:BD91 C3 A8 BF D1 	jp check_col_skip_3
  582 D1:BD95 -  -  -  -  	
  583 D1:BD95 -  -  -  -  check_col_y_collision:
  584 D1:BD95 -  -  -  -  	;call write_a_to_ram
  585 D1:BD95 -  -  -  -  
  586 D1:BD95 -  -  -  -  	;Player is within Y range of collider 
  587 D1:BD95 -  -  -  -  	;ld a,$AA 
  588 D1:BD95 -  -  -  -  	;call write_a_to_ram;TESTIng
  589 D1:BD95 -  -  -  -  	
  590 D1:BD95 23 -  -  -  	inc hl ;to x max 
  591 D1:BD96 CD E1 BF D1 	call player_x_half
  592 D1:BD9A -  -  -  -  	;A holds x pos / 2 (paired pixels) 
  593 D1:BD9A -  -  -  -  	
  594 D1:BD9A BE -  -  -  	cp (hl) ;compare to x max 
  595 D1:BD9B -  -  -  -  	;zero or carry = collison 
  596 D1:BD9B CA A7 BD D1 	jp z, check_col_x_collision
  597 D1:BD9F DA A7 BD D1 	jp c, check_col_x_collision
  598 D1:BDA3 -  -  -  -  	
  599 D1:BDA3 C3 A9 BF D1 	jp check_col_skip_2
  600 D1:BDA7 -  -  -  -  	
  601 D1:BDA7 -  -  -  -  check_col_x_collision:
  602 D1:BDA7 -  -  -  -  
  603 D1:BDA7 -  -  -  -  	;ld a,$BB
  604 D1:BDA7 -  -  -  -  	;call write_a_to_ram
  605 D1:BDA7 -  -  -  -  	;Need to find x pos of right of player, then div by 2 
  606 D1:BDA7 3A F4 BF D1 	ld a,(player_x_pos+1);Fullpixels
  607 D1:BDAB C6 14 -  -  	add a, player_collider_width ;Will set carry flag if right side of player > 255 and left of player < 255 
  608 D1:BDAD 1F -  -  -  	rra ;div by 2 and move carry flag to bit 7. 
  609 D1:BDAE 47 -  -  -  	ld b,a 
  610 D1:BDAF 3A F5 BF D1 	ld a,(player_x_pos +2 ); MSB pixel 
  611 D1:BDB3 0F -  -  -  	rrca ;move bit 0 to bit 7
  612 D1:BDB4 B0 -  -  -  	or b ;a holds right pos of player / 2 
  613 D1:BDB5 23 -  -  -  	inc hl ;to x min 
  614 D1:BDB6 BE -  -  -  	cp (hl) 
  615 D1:BDB7 -  -  -  -   
  616 D1:BDB7 DA AA BF D1 	jp c, check_col_skip_1 
  617 D1:BDBB -  -  -  -  
  618 D1:BDBB -  -  -  -  
  619 D1:BDBB -  -  -  -  collision_found: ;A collision has been detected
  620 D1:BDBB -  -  -  -  	
  621 D1:BDBB -  -  -  -  	;TESTing 
  622 D1:BDBB -  -  -  -  	;ld a,$AB 
  623 D1:BDBB -  -  -  -  	;call write_a_to_ram
  624 D1:BDBB -  -  -  -  	
  625 D1:BDBB 23 -  -  -  	inc hl ;to flags 
  626 D1:BDBC -  -  -  -  	
  627 D1:BDBC -  -  -  -  	;ld a,(hl)
  628 D1:BDBC -  -  -  -  	;call write_a_to_ram
  629 D1:BDBC -  -  -  -  	
  630 D1:BDBC 37 -  -  -  	scf 
  631 D1:BDBD -  -  -  -  collision_check_vertical .equ $
  632 D1:BDBD DA EC BD D1 	jp c, collision_check_vert 
  633 D1:BDC1 -  -  -  -  	
  634 D1:BDC1 -  -  -  -  
  635 D1:BDC1 3A 0C C0 D1 	ld a,(player_flags)
  636 D1:BDC5 CB 5F -  -  	bit 3,a 
  637 D1:BDC7 CA D5 BD D1 	jp z,colis_horiz_not_fall
  638 D1:BDCB -  -  -  -  	;player is falling 
  639 D1:BDCB CB EF -  -  	set 5,a ;set semisolid flag 
  640 D1:BDCD 32 0C C0 D1 	ld (player_flags),a 
  641 D1:BDD1 C3 AB BF D1 	jp check_col_skip_0
  642 D1:BDD5 -  -  -  -  	
  643 D1:BDD5 -  -  -  -  colis_horiz_not_fall:
  644 D1:BDD5 -  -  -  -  	;Player is moving horizontal 
  645 D1:BDD5 7E -  -  -  	ld a,(hl) ;flags 
  646 D1:BDD6 CB 7F -  -  	bit 7,a ;semisolid 
  647 D1:BDD8 C2 2D BE D1 	jp nz,vert_col_up_semisolid ;skips semisolid 
  648 D1:BDDC -  -  -  -  
  649 D1:BDDC CB 77 -  -  	bit 6,a 
  650 D1:BDDE C2 3F BF D1 	jp nz, collision_spikes
  651 D1:BDE2 -  -  -  -  	
  652 D1:BDE2 -  -  -  -  	;TODO breakaway platforms 
  653 D1:BDE2 -  -  -  -  	
  654 D1:BDE2 -  -  -  -  	;player has moved horiz and hit a solid wall 
  655 D1:BDE2 -  -  -  -  	;Reverse x velocity 
  656 D1:BDE2 E5 -  -  -  	push hl 
  657 D1:BDE3 CD B5 BF D1 	call reverse_x_vel
  658 D1:BDE7 E1 -  -  -  	pop hl 
  659 D1:BDE8 -  -  -  -  	
  660 D1:BDE8 C3 AB BF D1 	jp check_col_skip_0
  661 D1:BDEC -  -  -  -  
  662 D1:BDEC -  -  -  -  collision_check_vert:
  663 D1:BDEC -  -  -  -  	;Player is moving in vertical direction 
  664 D1:BDEC -  -  -  -  
  665 D1:BDEC 3A FE BF D1 	ld a,(player_y_vel + 2) ;MSB of y vel 
  666 D1:BDF0 CB 7F -  -  	bit 7,a ;check if moving up or down 
  667 D1:BDF2 C2 3B BE D1 	jp nz, vert_col_down
  668 D1:BDF6 -  -  -  -  	
  669 D1:BDF6 -  -  -  -  	
  670 D1:BDF6 3A 0C C0 D1 	ld a,(player_flags)
  671 D1:BDFA CB 5F -  -  	bit 3,a 
  672 D1:BDFC CA 0A BE D1 	jp z,colis_vert_up_not_fall
  673 D1:BE00 CB EF -  -  	set 5,a ;set semisolid flag. All colliders act semisolid while in fall
  674 D1:BE02 32 0C C0 D1 	ld (player_flags),a 
  675 D1:BE06 C3 AB BF D1 	jp check_col_skip_0
  676 D1:BE0A -  -  -  -  	
  677 D1:BE0A -  -  -  -  	
  678 D1:BE0A -  -  -  -  colis_vert_up_not_fall:
  679 D1:BE0A -  -  -  -  	;player is moving up 
  680 D1:BE0A 7E -  -  -  	ld a,(hl) ;flags 
  681 D1:BE0B CB 7F -  -  	bit 7,a ;semisolid 
  682 D1:BE0D C2 2D BE D1 	jp nz,vert_col_up_semisolid ;semisolid and moving up
  683 D1:BE11 -  -  -  -  
  684 D1:BE11 CB 77 -  -  	bit 6,a 
  685 D1:BE13 C2 3F BF D1 	jp nz, collision_spikes
  686 D1:BE17 -  -  -  -  
  687 D1:BE17 -  -  -  -  	;TODO breakaway platforms 
  688 D1:BE17 -  -  -  -  	
  689 D1:BE17 -  -  -  -  	;Plyaer has moved up and hit non spike object 
  690 D1:BE17 -  -  -  -  	;Set velocity to 0 
  691 D1:BE17 E5 -  -  -  	push hl 
  692 D1:BE18 21 00 00 00 	ld hl,0
  693 D1:BE1C 22 FC BF D1 	ld (player_y_vel),hl 
  694 D1:BE20 2A 02 C0 D1 	ld hl, (player_y_pos_prev) ;revert to previous y pos 
  695 D1:BE24 22 F6 BF D1 	ld (player_y_pos),hl 
  696 D1:BE28 E1 -  -  -  	pop hl 
  697 D1:BE29 -  -  -  -  	
  698 D1:BE29 C3 AB BF D1 	jp check_col_skip_0
  699 D1:BE2D -  -  -  -  	
  700 D1:BE2D -  -  -  -  vert_col_up_semisolid:
  701 D1:BE2D 3A 0C C0 D1 	ld a,(player_flags)
  702 D1:BE31 CB EF -  -  	set 5,a ;set semisolid flag 
  703 D1:BE33 32 0C C0 D1 	ld (player_flags),a 
  704 D1:BE37 C3 AB BF D1 	jp check_col_skip_0
  705 D1:BE3B -  -  -  -  	
  706 D1:BE3B -  -  -  -  	
  707 D1:BE3B -  -  -  -  	
  708 D1:BE3B -  -  -  -  vert_col_down:
  709 D1:BE3B 3A 0C C0 D1 	ld a,(player_flags)
  710 D1:BE3F CB 5F -  -  	bit 3,a 
  711 D1:BE41 CA AF BE D1 	jp z,colis_vert_down_not_fall
  712 D1:BE45 CB EF -  -  	set 5,a ;set semisolid flag. All colliders act semisolid while in fall
  713 D1:BE47 32 0C C0 D1 	ld (player_flags),a 
  714 D1:BE4B E5 -  -  -  	push hl ;save collider flags 
  715 D1:BE4C -  -  -  -  	
  716 D1:BE4C -  -  -  -  	
  717 D1:BE4C F5 -  -  -  	push af 
  718 D1:BE4D 3E B0 -  -  	ld a,$B0
  719 D1:BE4F CD BB AB D1 	call write_a_to_ram
  720 D1:BE53 F1 -  -  -  	pop af
  721 D1:BE54 -  -  -  -  	
  722 D1:BE54 -  -  -  -  	;check if we are below spike hit height 
  723 D1:BE54 2A 0E C0 D1 	ld hl,(spike_hit_height)
  724 D1:BE58 EB -  -  -  	ex de,hl 
  725 D1:BE59 2A F6 BF D1 	ld hl,(player_y_pos) 
  726 D1:BE5D ED 52 -  -  	sbc hl,de 
  727 D1:BE5F DA 68 BE D1 	jp c,check_end_fall
  728 D1:BE63 -  -  -  -  	;Player is above threshold 
  729 D1:BE63 E1 -  -  -  	pop hl ;return collider flags 
  730 D1:BE64 C3 AB BF D1 	jp check_col_skip_0 ;continue 
  731 D1:BE68 -  -  -  -  	
  732 D1:BE68 -  -  -  -  
  733 D1:BE68 -  -  -  -  check_end_fall:
  734 D1:BE68 F5 -  -  -  	push af 
  735 D1:BE69 3E B1 -  -  	ld a,$B1
  736 D1:BE6B CD BB AB D1 	call write_a_to_ram
  737 D1:BE6F F1 -  -  -  	pop af
  738 D1:BE70 CD BB AB D1 	call write_a_to_ram
  739 D1:BE74 -  -  -  -  	
  740 D1:BE74 E1 -  -  -  	pop hl ;return collider flags 
  741 D1:BE75 -  -  -  -  	;Player has hit ground below fall threshold 
  742 D1:BE75 CB 67 -  -  	bit 4,a ;check we were not in semisolid last update 
  743 D1:BE77 C2 AB BF D1 	jp nz, check_col_skip_0; player not currently in collider 
  744 D1:BE7B -  -  -  -   
  745 D1:BE7B 3E B2 -  -  	ld a,$B2
  746 D1:BE7D CD BB AB D1 	call write_a_to_ram
  747 D1:BE81 -  -  -  -  	;player can land 
  748 D1:BE81 -  -  -  -  	;check for unlucky bounce 
  749 D1:BE81 CB 9F -  -  	res 3,a 
  750 D1:BE83 32 0C C0 D1 	ld (player_flags),a ;reset fall flag 
  751 D1:BE87 -  -  -  -  	;pop hl 
  752 D1:BE87 3A 11 C0 D1 	ld a, (fall_num_bounces)
  753 D1:BE8B 47 -  -  -  	ld b,a 
  754 D1:BE8C CD BB AB D1 	call write_a_to_ram
  755 D1:BE90 CD D6 BF D1 	call random_val
  756 D1:BE94 5F -  -  -  	ld e,a 
  757 D1:BE95 0E 01 -  -  	ld c,%00000001
  758 D1:BE97 -  -  -  -  unlucky_bounce_loop:
  759 D1:BE97 7B -  -  -  	ld a,e ;restore random val
  760 D1:BE98 A1 -  -  -  	and a,c 
  761 D1:BE99 CA AF BE D1 	jp z,colis_vert_down_not_fall
  762 D1:BE9D CB 01 -  -  	rlc c 
  763 D1:BE9F DA AF BE D1 	jp c,colis_vert_down_not_fall
  764 D1:BEA3 10 F2 -  -  	djnz unlucky_bounce_loop
  765 D1:BEA5 -  -  -  -  	
  766 D1:BEA5 -  -  -  -  ;Player has hit unlucky bounce 
  767 D1:BEA5 E5 -  -  -  	push hl 
  768 D1:BEA6 CD 4F BF D1 	call spike_hit_bounce
  769 D1:BEAA E1 -  -  -  	pop hl
  770 D1:BEAB C3 AB BF D1 	jp check_col_skip_0 ;continue 
  771 D1:BEAF -  -  -  -  	
  772 D1:BEAF -  -  -  -  	
  773 D1:BEAF -  -  -  -  colis_vert_down_not_fall:
  774 D1:BEAF -  -  -  -  	;player is moving down 
  775 D1:BEAF 7E -  -  -  	ld a,(hl) ;flags 
  776 D1:BEB0 CB 7F -  -  	bit 7,a ;semisolid 
  777 D1:BEB2 CA EA BE D1 	jp z,vert_col_down_solid 
  778 D1:BEB6 -  -  -  -  	
  779 D1:BEB6 -  -  -  -  	;semisolid and moving down
  780 D1:BEB6 -  -  -  -  	;ld a,(player_flags)
  781 D1:BEB6 -  -  -  -  	;set 5,a ;set semisolid flag 
  782 D1:BEB6 -  -  -  -  	;ld (player_flags),a 
  783 D1:BEB6 -  -  -  -  	
  784 D1:BEB6 -  -  -  -  	;ld a,$AC 
  785 D1:BEB6 -  -  -  -  	;call write_a_to_ram
  786 D1:BEB6 -  -  -  -  	;call write_hl_to_ram
  787 D1:BEB6 -  -  -  -  	
  788 D1:BEB6 -  -  -  -  	;check if previos y pos was in frame above, if so treat collider as in lower frame 
  789 D1:BEB6 3A F8 BF D1 	ld a,(player_y_pos+2);current pos frame 
  790 D1:BEBA 47 -  -  -  	ld b,a 
  791 D1:BEBB 3A 04 C0 D1 	ld a,(player_y_pos_prev + 2);last pos frame#
  792 D1:BEBF B8 -  -  -  	cp b 
  793 D1:BEC0 CA CA BE D1 	jp z,colis_semi_same_frame
  794 D1:BEC4 3E D2 -  -  	ld a,%11010010 ;jp nc 
  795 D1:BEC6 32 D3 BE D1 	ld (colis_semisolid_down_lower_frame),a 
  796 D1:BECA -  -  -  -  colis_semi_same_frame:
  797 D1:BECA -  -  -  -  	
  798 D1:BECA 3A 03 C0 D1 	ld a,(player_y_pos_prev + 1) ;last y pos in frame 
  799 D1:BECE -  -  -  -  	
  800 D1:BECE 2B -  -  -  	dec hl; to xmin 
  801 D1:BECF 2B -  -  -  	dec hl 
  802 D1:BED0 2B -  -  -  	dec hl ;height 
  803 D1:BED1 2B -  -  -  	dec hl ;ymin 
  804 D1:BED2 96 -  -  -  	sub a,(hl) ;player y - collider bottom 
  805 D1:BED3 -  -  -  -  colis_semisolid_down_lower_frame .equ $
  806 D1:BED3 D2 A7 BF D1 	jp nc,check_col_skip_4 ;nc for lower frame, c for same frame 
  807 D1:BED7 F5 -  -  -  	push af
  808 D1:BED8 -  -  -  -  	;ld a,$A0 
  809 D1:BED8 -  -  -  -  	;call write_a_to_ram
  810 D1:BED8 F1 -  -  -  	pop af
  811 D1:BED9 -  -  -  -  	;call write_a_to_ram
  812 D1:BED9 23 -  -  -  	inc hl ;height
  813 D1:BEDA 0E 12 -  -  	ld c, player_collider_height
  814 D1:BEDC 91 -  -  -  	sub a,c ;player bottom to collider bottom 
  815 D1:BEDD DA A8 BF D1 	jp c,check_col_skip_3
  816 D1:BEE1 -  -  -  -  	;ld a,$A1 
  817 D1:BEE1 -  -  -  -  	;call write_a_to_ram
  818 D1:BEE1 -  -  -  -  	;call write_a_to_ram
  819 D1:BEE1 96 -  -  -  	sub a,(hl) ;compare to height 
  820 D1:BEE2 DA A8 BF D1 	jp c,check_col_skip_3 ;we were already within semisolid collider 
  821 D1:BEE6 23 -  -  -  	inc hl
  822 D1:BEE7 23 -  -  -  	inc hl 
  823 D1:BEE8 23 -  -  -  	inc hl;flags 
  824 D1:BEE9 -  -  -  -  	;ld a,$A2
  825 D1:BEE9 -  -  -  -  	;call write_a_to_ram
  826 D1:BEE9 -  -  -  -  	;otherwise, hit the collider 
  827 D1:BEE9 7E -  -  -  	ld a,(hl)
  828 D1:BEEA -  -  -  -  
  829 D1:BEEA -  -  -  -  vert_col_down_solid:
  830 D1:BEEA CB 77 -  -  	bit 6,a 
  831 D1:BEEC C2 3F BF D1 	jp nz, collision_spikes
  832 D1:BEF0 -  -  -  -  
  833 D1:BEF0 E5 -  -  -  	push hl ;save flags
  834 D1:BEF1 -  -  -  -  	;TODO breakaway platforms 
  835 D1:BEF1 E6 0F -  -  	and a,%00001111 ;breakaway index 1-16
  836 D1:BEF3 CA 16 BF D1 	jp z, not_breakaway
  837 D1:BEF7 -  -  -  -  	
  838 D1:BEF7 -  -  -  -  	;Player has hit breakaway platform, check timer 
  839 D1:BEF7 21 AA C0 D1 	ld hl,breakaway_timers
  840 D1:BEFB 01 00 00 00 	ld bc,0 
  841 D1:BEFF 4F -  -  -  	ld c,a ;index 
  842 D1:BF00 09 -  -  -  	add hl,bc 
  843 D1:BF01 -  -  -  -  	;hl pts to correct timer
  844 D1:BF01 7E -  -  -  	ld a,(hl)
  845 D1:BF02 B7 -  -  -  	or a 
  846 D1:BF03 C2 0E BF D1 	jp nz, start_breakaway_skip
  847 D1:BF07 -  -  -  -  	;if timer is zero, set to 1 
  848 D1:BF07 3E 01 -  -  	ld a,1 
  849 D1:BF09 77 -  -  -  	ld (hl),a 
  850 D1:BF0A C3 16 BF D1 	jp not_breakaway ;platform is solid 
  851 D1:BF0E -  -  -  -  start_breakaway_skip:
  852 D1:BF0E E1 -  -  -  	pop hl 
  853 D1:BF0F E6 E0 -  -  	and %11100000 ;check if >32 
  854 D1:BF11 C2 AB BF D1 	jp nz, check_col_skip_0
  855 D1:BF15 -  -  -  -  	;otherwise platform still solid 
  856 D1:BF15 E5 -  -  -  	push hl 
  857 D1:BF16 -  -  -  -  not_breakaway:
  858 D1:BF16 -  -  -  -  
  859 D1:BF16 -  -  -  -  	;Plyaer has moved down and hit non spike object 
  860 D1:BF16 -  -  -  -  	;Set velocity to 0 
  861 D1:BF16 21 00 00 00 	ld hl,0
  862 D1:BF1A 22 F9 BF D1 	ld (player_x_vel),hl 
  863 D1:BF1E 22 FC BF D1 	ld (player_y_vel),hl 
  864 D1:BF22 2A 02 C0 D1 	ld hl, (player_y_pos_prev) ;revert to previous y pos 
  865 D1:BF26 22 F6 BF D1 	ld (player_y_pos),hl 
  866 D1:BF2A 22 05 C0 D1 	ld (player_last_ground_pos),hl
  867 D1:BF2E -  -  -  -  	;call write_hl_to_ram
  868 D1:BF2E E1 -  -  -  	pop hl 
  869 D1:BF2F -  -  -  -  	
  870 D1:BF2F 3A 0C C0 D1 	ld a,(player_flags)
  871 D1:BF33 CB F7 -  -  	set 6,a  ;set ground flag 
  872 D1:BF35 CB 97 -  -  	res 2,a ;reset tongue flag (cancel tongue if landed)
  873 D1:BF37 32 0C C0 D1 	ld (player_flags),a
  874 D1:BF3B C3 AB BF D1 	jp check_col_skip_0 ;continue 
  875 D1:BF3F -  -  -  -  
  876 D1:BF3F -  -  -  -  
  877 D1:BF3F -  -  -  -  
  878 D1:BF3F -  -  -  -  
  879 D1:BF3F -  -  -  -  
  880 D1:BF3F -  -  -  -  collision_spikes:
  881 D1:BF3F E5 -  -  -  	push hl
  882 D1:BF40 -  -  -  -  	;player has collided with spikes 
  883 D1:BF40 CD 4F BF D1 	call spike_hit_bounce
  884 D1:BF44 3E 01 -  -  	ld a,1
  885 D1:BF46 32 11 C0 D1 	ld (fall_num_bounces),a 
  886 D1:BF4A E1 -  -  -  	pop hl 
  887 D1:BF4B C3 AB BF D1 	jp check_col_skip_0
  888 D1:BF4F -  -  -  -  
  889 D1:BF4F -  -  -  -  
  890 D1:BF4F -  -  -  -  spike_hit_bounce:
  891 D1:BF4F 21 80 00 00 	ld hl,$000080
  892 D1:BF53 22 FC BF D1 	ld (player_y_vel),hl 
  893 D1:BF57 CD D6 BF D1 	call random_val
  894 D1:BF5B CB 47 -  -  	bit 0, a 
  895 D1:BF5D C2 72 BF D1 	jp nz, spike_negative_bounce
  896 D1:BF61 21 00 00 00 	ld hl,0
  897 D1:BF65 E6 C0 -  -  	and %11000000 ;pull 2 bits of a for velocity
  898 D1:BF67 F6 30 -  -  	or  %00110000
  899 D1:BF69 6F -  -  -  	ld l,a 
  900 D1:BF6A 22 F9 BF D1 	ld (player_x_vel),hl
  901 D1:BF6E C3 7F BF D1 	jp spike_pos_bounce
  902 D1:BF72 -  -  -  -  spike_negative_bounce:
  903 D1:BF72 21 FF FF FF 	ld hl,$ffffff
  904 D1:BF76 E6 C0 -  -  	and %11000000 ;pull 2 bits of a for velocity
  905 D1:BF78 F6 0F -  -  	or  %00001111
  906 D1:BF7A 6F -  -  -  	ld l,a 
  907 D1:BF7B 22 F9 BF D1 	ld (player_x_vel),hl
  908 D1:BF7F -  -  -  -  spike_pos_bounce:
  909 D1:BF7F 3A 0C C0 D1 	ld a,(player_flags)
  910 D1:BF83 CB DF -  -  	set 3,a  ;set fall flag 
  911 D1:BF85 CB 97 -  -  	res 2,a ;reset tongue flag
  912 D1:BF87 32 0C C0 D1 	ld (player_flags),a 
  913 D1:BF8B -  -  -  -  	;Set spike hit height 
  914 D1:BF8B 2A F6 BF D1 	ld hl, (player_y_pos)
  915 D1:BF8F 11 00 FF 00 	ld de, $00ff00 ;fall minimum of 256px 
  916 D1:BF93 ED 52 -  -  	sbc hl,de 
  917 D1:BF95 D2 9D BF D1 	jp nc, spike_bounce_min_height_threshold
  918 D1:BF99 21 00 00 00 	ld hl,0
  919 D1:BF9D -  -  -  -  spike_bounce_min_height_threshold:
  920 D1:BF9D 11 00 43 00 	ld de, $004300  ;minimum spike height threshold 
  921 D1:BFA1 19 -  -  -  	add hl,de 
  922 D1:BFA2 22 0E C0 D1 	ld (spike_hit_height),hl 
  923 D1:BFA6 -  -  -  -  	;call write_hl_to_ram
  924 D1:BFA6 C9 -  -  -  	ret 
  925 D1:BFA7 -  -  -  -  
  926 D1:BFA7 -  -  -  -  
  927 D1:BFA7 -  -  -  -  check_col_skip_4:
  928 D1:BFA7 23 -  -  -  	inc hl ;to height
  929 D1:BFA8 -  -  -  -  check_col_skip_3:
  930 D1:BFA8 23 -  -  -  	inc hl ;to xmax
  931 D1:BFA9 -  -  -  -  check_col_skip_2:	
  932 D1:BFA9 23 -  -  -  	inc hl ;to xmin
  933 D1:BFAA -  -  -  -  check_col_skip_1:	
  934 D1:BFAA 23 -  -  -  	inc hl ;to flags
  935 D1:BFAB -  -  -  -  check_col_skip_0:
  936 D1:BFAB 23 -  -  -  	inc hl ;to next element
  937 D1:BFAC -  -  -  -  	
  938 D1:BFAC 37 -  -  -  	scf 
  939 D1:BFAD -  -  -  -  check_col_lower_jump .equ $
  940 D1:BFAD DA 47 BD D1 	jp c, check_collisions_same_loop
  941 D1:BFB1 C3 77 BD D1 	jp check_collisions_lower_loop
  942 D1:BFB5 -  -  -  -  
  943 D1:BFB5 -  -  -  -  
  944 D1:BFB5 -  -  -  -  
  945 D1:BFB5 -  -  -  -  reverse_x_vel:;bounce player off wall
  946 D1:BFB5 2A F9 BF D1 	ld hl,(player_x_vel)
  947 D1:BFB9 EB -  -  -  	ex de,hl 
  948 D1:BFBA 21 00 00 00 	ld hl,0
  949 D1:BFBE ED 52 -  -  	sbc hl, de  
  950 D1:BFC0 -  -  -  -  	
  951 D1:BFC0 7C -  -  -  	ld a,h
  952 D1:BFC1 E6 80 -  -  	and %10000000
  953 D1:BFC3 CB 3C -  -  	srl h ;div by 2 
  954 D1:BFC5 CB 1D -  -  	rr l 
  955 D1:BFC7 B4 -  -  -  	or h ;keeps bit 7 the same 
  956 D1:BFC8 67 -  -  -  	ld h,a 
  957 D1:BFC9 -  -  -  -  
  958 D1:BFC9 22 F9 BF D1 	ld (player_x_vel),hl 
  959 D1:BFCD 2A FF BF D1 	ld hl, (player_x_pos_prev) ;revert to previous x pos 
  960 D1:BFD1 22 F3 BF D1 	ld (player_x_pos),hl 
  961 D1:BFD5 C9 -  -  -  	ret 
  962 D1:BFD6 -  -  -  -  
  963 D1:BFD6 -  -  -  -  
  964 D1:BFD6 -  -  -  -  
  965 D1:BFD6 -  -  -  -  random_val:
  966 D1:BFD6 3A F6 BF D1 	ld a, (player_y_pos)
  967 D1:BFDA 4F -  -  -  	ld c,a 
  968 D1:BFDB 3A 00 00 F2 	ld a,($F20000) ;fast timer 
  969 D1:BFDF A9 -  -  -  	xor c
  970 D1:BFE0 C9 -  -  -  	ret 
  971 D1:BFE1 -  -  -  -  
  972 D1:BFE1 -  -  -  -  player_x_half:
  973 D1:BFE1 3A F4 BF D1 	ld a,(player_x_pos+1);Fullpixels
  974 D1:BFE5 CB 3F -  -  	srl a ;div by 2 
  975 D1:BFE7 47 -  -  -  	ld b,a 
  976 D1:BFE8 3A F5 BF D1 	ld a,(player_x_pos+2);MSB fullpixel 
  977 D1:BFEC 0F -  -  -  	rrca ;Move bit 0 to bit 7
  978 D1:BFED B0 -  -  -  	or b 
  979 D1:BFEE C9 -  -  -  	ret 
  980 D1:BFEF -  -  -  -  
  981 D1:BFEF -  -  -  -  
  982 D1:BFEF -  -  -  -  jump_strength_up:
  983 D1:BFEF 00 -  -  -  	.db 0 
  984 D1:BFF0 -  -  -  -  jump_strength_right:
  985 D1:BFF0 00 -  -  -  	.db 0 
  986 D1:BFF1 -  -  -  -  jump_strength_left:
  987 D1:BFF1 00 -  -  -  	.db 0
  988 D1:BFF2 -  -  -  -  jump_charge_timer:
  989 D1:BFF2 00 -  -  -  	.db 0 
  990 D1:BFF3 -  -  -  -  
  991 D1:BFF3 -  -  -  -  	
  992 D1:BFF3 -  -  -  -  timer_max_val .equ 32
  993 D1:BFF3 -  -  -  -  
  994 D1:BFF3 -  -  -  -  player_collider_height .equ 18
  995 D1:BFF3 -  -  -  -  player_collider_width .equ 20 ;width -1 
  996 D1:BFF3 -  -  -  -  
  997 D1:BFF3 -  -  -  -  
  998 D1:BFF3 -  -  -  -  player_x_pos:
  999 D1:BFF3 00 00 00 -  	.dl 0 ; (MSB fullpixel, Fullpixels, subpixels)
 1000 D1:BFF6 -  -  -  -  	
 1001 D1:BFF6 -  -  -  -  player_y_pos:
 1002 D1:BFF6 00 00 00 -  	.dl 0 ; (Frame #, Fullpixels, subpixels)
 1003 D1:BFF9 -  -  -  -  
 1004 D1:BFF9 -  -  -  -  player_x_vel:
 1005 D1:BFF9 00 00 00 -  	.dl 0 ; (Unused, Fullpixels, subpixels)
 1006 D1:BFFC -  -  -  -  	
 1007 D1:BFFC -  -  -  -  player_y_vel:
 1008 D1:BFFC 00 00 00 -  	.dl 0 ; (Unused, Fullpixels, subpixels)
 1009 D1:BFFF -  -  -  -  
 1010 D1:BFFF -  -  -  -  
 1011 D1:BFFF -  -  -  -  player_x_pos_prev: ;x position before update, revert to this if collision 
 1012 D1:BFFF 00 00 00 -  	.dl 0 ; (MSB fullpixel, Fullpixels, subpixels)
 1013 D1:C002 -  -  -  -  	
 1014 D1:C002 -  -  -  -  player_y_pos_prev: ;y position before update, revert to this if collision :
 1015 D1:C002 00 00 00 -  	.dl 0 ; (Frame #, Fullpixels, subpixels)
 1016 D1:C005 -  -  -  -  
 1017 D1:C005 -  -  -  -  player_last_ground_pos:
 1018 D1:C005 00 00 00 -  	.dl 0
 1019 D1:C008 -  -  -  -  
 1020 D1:C008 -  -  -  -  tongue_ring_y_pos:
 1021 D1:C008 00 00 00 -  	.dl 0
 1022 D1:C00B -  -  -  -  tongue_ring_x_pos:
 1023 D1:C00B 00 -  -  -  	.db 0	
 1024 D1:C00C -  -  -  -  tongue_max_length .equ 90
 1025 D1:C00C -  -  -  -  
 1026 D1:C00C -  -  -  -  player_flags:
 1027 D1:C00C 00 -  -  -  	.db %00000000 ; (7 = Any jump button held, 6 = on ground,5 = within semisolid, 4 = in semisolid last update, 3= isfalling, 2 = tongueActive, 1 = lastDirection(1=right))
 1028 D1:C00D 00 -  -  -  	.db %00000000 ; 7= cam move up, 6 = cam move down
 1029 D1:C00E -  -  -  -  spike_hit_height:
 1030 D1:C00E 00 00 00 -  	.dl 0 ;Height where player can land after hitting spike
 1031 D1:C011 -  -  -  -  fall_num_bounces:
 1032 D1:C011 00 -  -  -  	.db 0 ;Number of times player has had unlucky bounce
 1033 D1:C012 -  -  -  -  tongue_extend_timer:
 1034 D1:C012 00 -  -  -  	.db 0 ;Timer for extend tongue anim
 1035 D1:C013 -  -  -  -  
 1036 D1:C013 -  -  -  -  
 1037 D1:C013 -  -  -  -  breakaway_timer_update:
 1038 D1:C013 21 AB C0 D1 	ld hl, breakaway_timers + 1
 1039 D1:C017 D9 -  -  -  	exx 
 1040 D1:C018 21 BA C0 D1 	ld hl, breakaway_sprite_data_table
 1041 D1:C01C D9 -  -  -  	exx 
 1042 D1:C01D 06 0F -  -  	ld b, 15 
 1043 D1:C01F -  -  -  -  breakaway_timer_update_loop:
 1044 D1:C01F 7E -  -  -  	ld a,(hl)
 1045 D1:C020 -  -  -  -  	;call write_a_to_ram
 1046 D1:C020 -  -  -  -  	;call prgmpause
 1047 D1:C020 B7 -  -  -  	or a 
 1048 D1:C021 CA 27 C0 D1 	jp z, breakaway_timer_update_loop_skip
 1049 D1:C025 3C -  -  -  	inc a 
 1050 D1:C026 77 -  -  -  	ld (hl),a 
 1051 D1:C027 -  -  -  -  breakaway_timer_update_loop_skip:
 1052 D1:C027 -  -  -  -  
 1053 D1:C027 -  -  -  -  	;a holds timer val 
 1054 D1:C027 FE 0A -  -  	cp 10 
 1055 D1:C029 DA 3F C0 D1 	jp c, breakaway_platform_set_sprite_0
 1056 D1:C02D FE 14 -  -  	cp 20 
 1057 D1:C02F DA 4F C0 D1 	jp c, breakaway_platform_set_sprite_1
 1058 D1:C033 FE 20 -  -  	cp 32
 1059 D1:C035 DA 5F C0 D1 	jp c, breakaway_platform_set_sprite_2
 1060 D1:C039 3C -  -  -  	inc a 
 1061 D1:C03A 77 -  -  -  	ld (hl),a 
 1062 D1:C03B C3 6F C0 D1 	jp breakaway_platform_set_sprite_3
 1063 D1:C03F -  -  -  -  
 1064 D1:C03F -  -  -  -  breakaway_platform_set_sprite_0:
 1065 D1:C03F 3E 03 -  -  	ld a,3 
 1066 D1:C041 32 91 C0 D1 	ld (breakaway_set_sprite_number),a 
 1067 D1:C045 3E 04 -  -  	ld a,4
 1068 D1:C047 32 95 C0 D1 	ld (breakaway_set_sprite_number_2),a 
 1069 D1:C04B C3 7F C0 D1 	jp breakaway_platform_set_sprites
 1070 D1:C04F -  -  -  -  
 1071 D1:C04F -  -  -  -  breakaway_platform_set_sprite_1:
 1072 D1:C04F 3E 04 -  -  	ld a,4 
 1073 D1:C051 32 91 C0 D1 	ld (breakaway_set_sprite_number),a 
 1074 D1:C055 3E 03 -  -  	ld a,3
 1075 D1:C057 32 95 C0 D1 	ld (breakaway_set_sprite_number_2),a 
 1076 D1:C05B C3 7F C0 D1 	jp breakaway_platform_set_sprites
 1077 D1:C05F -  -  -  -  
 1078 D1:C05F -  -  -  -  breakaway_platform_set_sprite_2:
 1079 D1:C05F 3E 05 -  -  	ld a,5 
 1080 D1:C061 32 91 C0 D1 	ld (breakaway_set_sprite_number),a 
 1081 D1:C065 3E 02 -  -  	ld a,2
 1082 D1:C067 32 95 C0 D1 	ld (breakaway_set_sprite_number_2),a 
 1083 D1:C06B C3 7F C0 D1 	jp breakaway_platform_set_sprites
 1084 D1:C06F -  -  -  -  
 1085 D1:C06F -  -  -  -  breakaway_platform_set_sprite_3:
 1086 D1:C06F 3E 06 -  -  	ld a,6 
 1087 D1:C071 32 91 C0 D1 	ld (breakaway_set_sprite_number),a 
 1088 D1:C075 3E 01 -  -  	ld a,1
 1089 D1:C077 32 95 C0 D1 	ld (breakaway_set_sprite_number_2),a 
 1090 D1:C07B C3 7F C0 D1 	jp breakaway_platform_set_sprites	
 1091 D1:C07F -  -  -  -  	
 1092 D1:C07F -  -  -  -  breakaway_platform_set_sprites:	
 1093 D1:C07F D9 -  -  -  	exx ;in shadow
 1094 D1:C080 E5 -  -  -  	push hl 
 1095 D1:C081 ED 27 -  -  	ld hl,(hl) ;hl pts to number of platforms with this index 
 1096 D1:C083 46 -  -  -  	ld b,(hl) ;num platforms
 1097 D1:C084 2B -  -  -  	dec hl 
 1098 D1:C085 2B -  -  -  	dec hl 
 1099 D1:C086 04 -  -  -  	inc b 
 1100 D1:C087 -  -  -  -  breakaway_platform_set_sprites_loop:
 1101 D1:C087 11 00 00 00 	ld de,0
 1102 D1:C08B 05 -  -  -  	dec b 
 1103 D1:C08C CA 9E C0 D1 	jp z,breakaway_platform_return_timer_loop
 1104 D1:C090 -  -  -  -  breakaway_set_sprite_number .equ $ + 1
 1105 D1:C090 1E 00 -  -  	ld e,0
 1106 D1:C092 19 -  -  -  	add hl,de 
 1107 D1:C093 7E -  -  -  	ld a,(hl) ; sprite index 
 1108 D1:C094 -  -  -  -  	;call write_a_to_ram
 1109 D1:C094 -  -  -  -  breakaway_set_sprite_number_2 .equ $ + 1
 1110 D1:C094 1E 00 -  -  	ld e,0
 1111 D1:C096 19 -  -  -  	add hl,de ;data location 
 1112 D1:C097 ED 17 -  -  	ld de,(hl)
 1113 D1:C099 12 -  -  -  	ld (de),a ;set sprite value in level data 
 1114 D1:C09A -  -  -  -  	;call prgmpause
 1115 D1:C09A C3 87 C0 D1 	jp breakaway_platform_set_sprites_loop
 1116 D1:C09E -  -  -  -  	
 1117 D1:C09E -  -  -  -  
 1118 D1:C09E -  -  -  -  breakaway_platform_return_timer_loop:
 1119 D1:C09E E1 -  -  -  	pop hl 
 1120 D1:C09F 23 -  -  -  	inc hl 
 1121 D1:C0A0 23 -  -  -  	inc hl 
 1122 D1:C0A1 23 -  -  -  	inc hl
 1123 D1:C0A2 D9 -  -  -  	exx ;out
 1124 D1:C0A3 23 -  -  -  	inc hl 
 1125 D1:C0A4 05 -  -  -  	dec b 
 1126 D1:C0A5 C2 1F C0 D1 	jp nz,breakaway_timer_update_loop
 1127 D1:C0A9 -  -  -  -  	
 1128 D1:C0A9 C9 -  -  -  	ret 
 1129 D1:C0AA -  -  -  -  
 1130 D1:C0AA -  -  -  -  	
 1131 D1:C0AA -  -  -  -  breakaway_timers: ;If not zero, count up by 1 every frame, solid when timer btwn 0-32
 1132 D1:C0AA 00 -  -  -  	.db 0 ;Unused
 1133 D1:C0AB 00 -  -  -  	.db 0
 1134 D1:C0AC 01 -  -  -  	.db 1
 1135 D1:C0AD 00 -  -  -  	.db 0
 1136 D1:C0AE 00 -  -  -  	.db 0
 1137 D1:C0AF 00 -  -  -  	.db 0
 1138 D1:C0B0 00 -  -  -  	.db 0
 1139 D1:C0B1 00 -  -  -  	.db 0
 1140 D1:C0B2 00 -  -  -  	.db 0
 1141 D1:C0B3 00 -  -  -  	.db 0
 1142 D1:C0B4 00 -  -  -  	.db 0
 1143 D1:C0B5 00 -  -  -  	.db 0
 1144 D1:C0B6 00 -  -  -  	.db 0
 1145 D1:C0B7 00 -  -  -  	.db 0
 1146 D1:C0B8 00 -  -  -  	.db 0
 1147 D1:C0B9 00 -  -  -  	.db 0
 1148 D1:C0BA -  -  -  -  
 1149 D1:C0BA -  -  -  -  breakaway_sprite_data_table:
 1150 D1:C0BA 5C FC D1 -  	.dl breakaway_platform_data_0
 1151 D1:C0BD 5D FC D1 -  	.dl breakaway_platform_data_1
 1152 D1:C0C0 5E FC D1 -  	.dl breakaway_platform_data_2
 1153 D1:C0C3 5F FC D1 -  	.dl breakaway_platform_data_3
 1154 D1:C0C6 60 FC D1 -  	.dl breakaway_platform_data_4
 1155 D1:C0C9 61 FC D1 -  	.dl breakaway_platform_data_5
 1156 D1:C0CC 62 FC D1 -  	.dl breakaway_platform_data_6
 1157 D1:C0CF 63 FC D1 -  	.dl breakaway_platform_data_7
 1158 D1:C0D2 64 FC D1 -  	.dl breakaway_platform_data_8
 1159 D1:C0D5 65 FC D1 -  	.dl breakaway_platform_data_9
 1160 D1:C0D8 66 FC D1 -  	.dl breakaway_platform_data_10
 1161 D1:C0DB 67 FC D1 -  	.dl breakaway_platform_data_11
 1162 D1:C0DE 68 FC D1 -  	.dl breakaway_platform_data_12
 1163 D1:C0E1 69 FC D1 -  	.dl breakaway_platform_data_13
 1164 D1:C0E4 6A FC D1 -  	.dl breakaway_platform_data_14
 1165 D1:C0E7 -  -  -  -  	
 1166 D1:C0E7 -  -  -  -  	
 1167 D1:C0E7 -  -  -  -  	
 1168 D1:C0E7 -  -  -  -  	
 1169 D1:C0E7 -  -  -  -  player_move_debug:
 1170 D1:C0E7 -  -  -  -  ;DEBUG MODE ============================================================================= 
 1171 D1:C0E7 21 00 00 F5 	ld	hl,DI_Mode		; register for keypad mode
 1172 D1:C0EB 36 02 -  -  	ld	(hl),2			; set single scan mode
 1173 D1:C0ED AF -  -  -  	xor	a,a
 1174 D1:C0EE -  -  -  -  dbg_scan_wait:
 1175 D1:C0EE BE -  -  -  	cp	a,(hl)			; wait for keypad idle mode
 1176 D1:C0EF 20 FD -  -  	jr	nz,dbg_scan_wait
 1177 D1:C0F1 -  -  -  -  	
 1178 D1:C0F1 3A 1A 00 F5 	ld a,(kbdG5)
 1179 D1:C0F5 CB 57 -  -  	bit kbit6,a 
 1180 D1:C0F7 C2 2D C1 D1 	jp nz, player_move_debug_right
 1181 D1:C0FB -  -  -  -  	
 1182 D1:C0FB 3A 16 00 F5 	ld a,(kbdG3)
 1183 D1:C0FF CB 57 -  -  	bit kbit4,a 
 1184 D1:C101 C2 1A C1 D1 	jp nz, player_move_debug_left
 1185 D1:C105 -  -  -  -  	
 1186 D1:C105 3A 18 00 F5 	ld a,(kbdG4)
 1187 D1:C109 CB 4F -  -  	bit kbit2,a 
 1188 D1:C10B C2 51 C1 D1 	jp nz, player_move_debug_down 
 1189 D1:C10F -  -  -  -  	
 1190 D1:C10F 3A 18 00 F5 	ld a,(kbdG4)
 1191 D1:C113 CB 5F -  -  	bit kbit8,a 
 1192 D1:C115 C2 3F C1 D1 	jp nz, player_move_debug_up
 1193 D1:C119 -  -  -  -  	
 1194 D1:C119 C9 -  -  -  	ret 
 1195 D1:C11A -  -  -  -  	
 1196 D1:C11A -  -  -  -  	
 1197 D1:C11A -  -  -  -  
 1198 D1:C11A -  -  -  -  
 1199 D1:C11A -  -  -  -  player_move_debug_left:
 1200 D1:C11A 2A F3 BF D1 	ld hl,(player_x_pos)
 1201 D1:C11E 01 80 00 00 	ld bc, 128
 1202 D1:C122 ED 42 -  -  	sbc hl,bc 
 1203 D1:C124 22 F3 BF D1 	ld (player_x_pos),hl 
 1204 D1:C128 CD 26 BD D1 	call check_collisions
 1205 D1:C12C C9 -  -  -  	ret 
 1206 D1:C12D -  -  -  -  
 1207 D1:C12D -  -  -  -  player_move_debug_right:
 1208 D1:C12D 2A F3 BF D1 	ld hl,(player_x_pos)
 1209 D1:C131 01 80 00 00 	ld bc, 128
 1210 D1:C135 09 -  -  -  	add hl,bc 
 1211 D1:C136 22 F3 BF D1 	ld (player_x_pos),hl 
 1212 D1:C13A CD 26 BD D1 	call check_collisions
 1213 D1:C13E C9 -  -  -  	ret 
 1214 D1:C13F -  -  -  -  
 1215 D1:C13F -  -  -  -  player_move_debug_up:
 1216 D1:C13F 2A F6 BF D1 	ld hl,(player_y_pos)
 1217 D1:C143 01 80 00 00 	ld bc, 128
 1218 D1:C147 09 -  -  -  	add hl,bc 
 1219 D1:C148 22 F6 BF D1 	ld (player_y_pos),hl 
 1220 D1:C14C CD 26 BD D1 	call check_collisions
 1221 D1:C150 C9 -  -  -  	ret 
 1222 D1:C151 -  -  -  -  
 1223 D1:C151 -  -  -  -  player_move_debug_down:
 1224 D1:C151 2A F6 BF D1 	ld hl,(player_y_pos)
 1225 D1:C155 01 80 00 00 	ld bc, 128
 1226 D1:C159 ED 42 -  -  	sbc hl,bc 
 1227 D1:C15B 22 F6 BF D1 	ld (player_y_pos),hl 
 1228 D1:C15F CD 26 BD D1 	call check_collisions
 1229 D1:C163 C9 -  -  -  	ret
Listing for file "ascent.asm"
  603 D1:C164 -  -  -  -  #include "PlayerDraw.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\PlayerDraw.txt"
    1 D1:C164 -  -  -  -  
    2 D1:C164 -  -  -  -  
    3 D1:C164 -  -  -  -  desired_cam_pos: ;Target position, can smoothly move cam to here 
    4 D1:C164 00 00 00 -  	.dl 0
    5 D1:C167 -  -  -  -  
    6 D1:C167 -  -  -  -  player_move_cam:
    7 D1:C167 -  -  -  -  	;cam follow player 
    8 D1:C167 -  -  -  -  	;if player on ground, scroll up to keep player near bottom of screen, 90px
    9 D1:C167 -  -  -  -  	;if player below last grounded pos, desired cam pos = 150px
   10 D1:C167 -  -  -  -  	;if player is near top of screen, scroll up 
   11 D1:C167 -  -  -  -  	
   12 D1:C167 -  -  -  -  	;if player using tounge scroll up
   13 D1:C167 -  -  -  -  	
   14 D1:C167 -  -  -  -  	
   15 D1:C167 3A 0C C0 D1 	ld a,(player_flags)
   16 D1:C16B CB 77 -  -  	bit 6,a ;ground flag 
   17 D1:C16D C2 AD C1 D1 	jp nz, pmc_grounded
   18 D1:C171 CB 5F -  -  	bit 3,a ;is falling 
   19 D1:C173 C2 D8 C1 D1 	jp nz, pmc_falling
   20 D1:C177 -  -  -  -  	;otherwise, check if player below last grounded pos 
   21 D1:C177 2A 05 C0 D1 	ld hl,(player_last_ground_pos)
   22 D1:C17B EB -  -  -  	ex de,hl 
   23 D1:C17C 2A F6 BF D1 	ld hl,(player_y_pos)
   24 D1:C180 ED 52 -  -  	sbc hl,de 
   25 D1:C182 DA 20 C2 D1 	jp c, pmc_below_last_ground
   26 D1:C186 -  -  -  -  	
   27 D1:C186 -  -  -  -  	
   28 D1:C186 -  -  -  -  	;Check if player is near top or bottom of screen
   29 D1:C186 2A EE AB D1 	ld hl, (cam_pos)
   30 D1:C18A E5 -  -  -  	push hl
   31 D1:C18B CD E7 C4 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
   32 D1:C18F D1 -  -  -  	pop de 	
   33 D1:C190 ED 52 -  -  	sbc hl,de ;max cam pos - current cam pos 
   34 D1:C192 -  -  -  -  	;hl holds how far up to move cam to have player at bottom = how far player is above bottom of screen
   35 D1:C192 E5 -  -  -  	push hl 
   36 D1:C193 DA 3B C2 D1 	jp c, pmc_player_near_bottom ;player is below screen, need to move cam down
   37 D1:C197 11 0A 00 00 	ld de,10
   38 D1:C19B ED 52 -  -  	sbc hl,de ;check if within 10px of screen bottom 
   39 D1:C19D DA 3B C2 D1 	jp c,pmc_player_near_bottom 
   40 D1:C1A1 -  -  -  -  	
   41 D1:C1A1 E1 -  -  -  	pop hl 
   42 D1:C1A2 11 F0 00 00 	ld de,240
   43 D1:C1A6 ED 52 -  -  	sbc hl,de 
   44 D1:C1A8 D2 53 C2 D1 	jp nc, pmc_player_near_top
   45 D1:C1AC -  -  -  -  	
   46 D1:C1AC -  -  -  -  	;no cam move needed 
   47 D1:C1AC C9 -  -  -  	ret 
   48 D1:C1AD -  -  -  -  	
   49 D1:C1AD -  -  -  -  	
   50 D1:C1AD -  -  -  -  pmc_grounded:
   51 D1:C1AD -  -  -  -  
   52 D1:C1AD 3A 0D C0 D1 	ld a,(player_flags+1);camera control flags 
   53 D1:C1B1 CB 7F -  -  	bit 7,a 
   54 D1:C1B3 C2 F3 C1 D1 	jp nz,pmc_camscroll_up
   55 D1:C1B7 CB 77 -  -  	bit 6,a 
   56 D1:C1B9 C2 05 C2 D1 	jp nz,pmc_camscroll_down
   57 D1:C1BD -  -  -  -  	;If player on ground, desired cam pos = 90px below player 
   58 D1:C1BD CD E7 C4 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
   59 D1:C1C1 11 5A 00 00 	ld de,90
   60 D1:C1C5 ED 52 -  -  	sbc hl,de
   61 D1:C1C7 D2 CF C1 D1 	jp nc, set_desired_pos_0_skip
   62 D1:C1CB 21 00 00 00 	ld hl,0
   63 D1:C1CF -  -  -  -  set_desired_pos_0_skip:
   64 D1:C1CF 22 64 C1 D1 	ld (desired_cam_pos),hl 
   65 D1:C1D3 CD 62 C2 D1 	call pmc_move_towards_desired_pos
   66 D1:C1D7 C9 -  -  -  	ret 
   67 D1:C1D8 -  -  -  -  
   68 D1:C1D8 -  -  -  -  
   69 D1:C1D8 -  -  -  -  pmc_falling:
   70 D1:C1D8 CD E7 C4 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
   71 D1:C1DC 11 DC 00 00 	ld de,220
   72 D1:C1E0 ED 52 -  -  	sbc hl,de
   73 D1:C1E2 D2 CF C1 D1 	jp nc, set_desired_pos_0_skip
   74 D1:C1E6 21 00 00 00 	ld hl,0
   75 D1:C1EA 22 64 C1 D1 	ld (desired_cam_pos),hl 
   76 D1:C1EE CD 62 C2 D1 	call pmc_move_towards_desired_pos
   77 D1:C1F2 C9 -  -  -  	ret 
   78 D1:C1F3 -  -  -  -  
   79 D1:C1F3 -  -  -  -  pmc_camscroll_up:
   80 D1:C1F3 CD E7 C4 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
   81 D1:C1F7 11 40 01 00 	ld de,320
   82 D1:C1FB 19 -  -  -  	add hl,de 
   83 D1:C1FC 22 64 C1 D1 	ld (desired_cam_pos),hl 
   84 D1:C200 CD 62 C2 D1 	call pmc_move_towards_desired_pos
   85 D1:C204 C9 -  -  -  	ret
   86 D1:C205 -  -  -  -  
   87 D1:C205 -  -  -  -  pmc_camscroll_down:
   88 D1:C205 CD E7 C4 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
   89 D1:C209 11 04 01 00 	ld de,260
   90 D1:C20D ED 52 -  -  	sbc hl,de 
   91 D1:C20F D2 CF C1 D1 	jp nc, set_desired_pos_0_skip
   92 D1:C213 21 00 00 00 	ld hl,0
   93 D1:C217 22 64 C1 D1 	ld (desired_cam_pos),hl 
   94 D1:C21B CD 62 C2 D1 	call pmc_move_towards_desired_pos
   95 D1:C21F C9 -  -  -  	ret
   96 D1:C220 -  -  -  -  
   97 D1:C220 -  -  -  -  pmc_below_last_ground:
   98 D1:C220 -  -  -  -  	;if below last ground pos, deired pos = 150px 
   99 D1:C220 CD E7 C4 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
  100 D1:C224 11 96 00 00 	ld de,150
  101 D1:C228 ED 52 -  -  	sbc hl,de 
  102 D1:C22A D2 CF C1 D1 	jp nc, set_desired_pos_0_skip
  103 D1:C22E 21 00 00 00 	ld hl,0
  104 D1:C232 22 64 C1 D1 	ld (desired_cam_pos),hl 
  105 D1:C236 CD 62 C2 D1 	call pmc_move_towards_desired_pos
  106 D1:C23A C9 -  -  -  	ret
  107 D1:C23B -  -  -  -  
  108 D1:C23B -  -  -  -  
  109 D1:C23B -  -  -  -  pmc_player_near_bottom: ;need to set cam to 10px from bottom
  110 D1:C23B E1 -  -  -  	pop hl
  111 D1:C23C CD E7 C4 D1 	call player_to_cam_coords
  112 D1:C240 11 0C 00 00 	ld de,12
  113 D1:C244 ED 52 -  -  	sbc hl,de 
  114 D1:C246 D2 8E C2 D1 	jp nc,set_cam_0_skip
  115 D1:C24A 21 00 00 00 	ld hl,0
  116 D1:C24E 22 EE AB D1 	ld (cam_pos),hl 
  117 D1:C252 C9 -  -  -  	ret 
  118 D1:C253 -  -  -  -  	
  119 D1:C253 -  -  -  -  pmc_player_near_top: ;need to set cam to 10px from top
  120 D1:C253 CD E7 C4 D1 	call player_to_cam_coords
  121 D1:C257 11 F0 00 00 	ld de,240
  122 D1:C25B ED 52 -  -  	sbc hl,de 
  123 D1:C25D 22 EE AB D1 	ld (cam_pos),hl 
  124 D1:C261 -  -  -  -  	
  125 D1:C261 C9 -  -  -  	ret 
  126 D1:C262 -  -  -  -  
  127 D1:C262 -  -  -  -  
  128 D1:C262 -  -  -  -  pmc_move_towards_desired_pos: 
  129 D1:C262 -  -  -  -  	;moves cam closer to desired cam pos. Speed proportinal to difference btwn current and desired 
  130 D1:C262 2A 64 C1 D1 	ld hl,(desired_cam_pos)
  131 D1:C266 -  -  -  -  	;call write_hl_to_ram
  132 D1:C266 EB -  -  -  	ex de,hl 
  133 D1:C267 2A EE AB D1 	ld hl,(cam_pos)
  134 D1:C26B ED 52 -  -  	sbc hl,de 
  135 D1:C26D DA 93 C2 D1 	jp c, pmc_move_towards_up
  136 D1:C271 -  -  -  -  	;else move cam down 
  137 D1:C271 7D -  -  -  	ld a,l 
  138 D1:C272 11 00 00 00 	ld de,0 
  139 D1:C276 CD AF C2 D1 	call pmc_set_speed
  140 D1:C27A 7C -  -  -  	ld a,h 
  141 D1:C27B B7 -  -  -  	or a 
  142 D1:C27C C4 DC C2 D1 	call nz,pmc_max_speed ;set max speed
  143 D1:C280 2A EE AB D1 	ld hl,(cam_pos)
  144 D1:C284 ED 52 -  -  	sbc hl,de ;add speed to cam pos 
  145 D1:C286 -  -  -  -  	
  146 D1:C286 D2 8E C2 D1 	jp nc,set_cam_0_skip
  147 D1:C28A 21 00 00 00 	ld hl,0
  148 D1:C28E -  -  -  -  set_cam_0_skip:
  149 D1:C28E 22 EE AB D1 	ld (cam_pos),hl 
  150 D1:C292 C9 -  -  -  	ret 
  151 D1:C293 -  -  -  -  	
  152 D1:C293 -  -  -  -  pmc_move_towards_up:
  153 D1:C293 -  -  -  -  	;hl holds difference btwn current and desired, is negative
  154 D1:C293 -  -  -  -  	;check bits of l to determine speed 
  155 D1:C293 7D -  -  -  	ld a,l 
  156 D1:C294 ED 44 -  -  	neg 
  157 D1:C296 11 00 00 00 	ld de,0
  158 D1:C29A CD AF C2 D1 	call pmc_set_speed ;de holds px to add 
  159 D1:C29E 7C -  -  -  	ld a,h 
  160 D1:C29F EE FF -  -  	xor %11111111 ;Check if h has zeros = >255 px difference 
  161 D1:C2A1 C4 DC C2 D1 	call nz,pmc_max_speed ;set max speed
  162 D1:C2A5 2A EE AB D1 	ld hl,(cam_pos)
  163 D1:C2A9 19 -  -  -  	add hl,de ;add speed to cam pos 
  164 D1:C2AA 22 EE AB D1 	ld (cam_pos),hl 
  165 D1:C2AE -  -  -  -  	;call write_hl_to_ram
  166 D1:C2AE C9 -  -  -  	ret 
  167 D1:C2AF -  -  -  -  	
  168 D1:C2AF -  -  -  -  
  169 D1:C2AF -  -  -  -  
  170 D1:C2AF -  -  -  -  
  171 D1:C2AF -  -  -  -  pmc_set_speed: ;a holds magnitude of difference btwn current and desired pos 
  172 D1:C2AF 1E 00 -  -  	ld e, 0
  173 D1:C2B1 FE 03 -  -  	cp 3
  174 D1:C2B3 D8 -  -  -  	ret c ;difference < 3px
  175 D1:C2B4 1E 01 -  -  	ld e, 1
  176 D1:C2B6 FE 0A -  -  	cp 10
  177 D1:C2B8 D8 -  -  -  	ret c ;difference < 8px
  178 D1:C2B9 1E 02 -  -  	ld e, 2
  179 D1:C2BB FE 14 -  -  	cp 20
  180 D1:C2BD D8 -  -  -  	ret c ;difference < 16px
  181 D1:C2BE 1E 03 -  -  	ld e, 3
  182 D1:C2C0 FE 1E -  -  	cp 30
  183 D1:C2C2 C8 -  -  -  	ret z ;difference < 24px
  184 D1:C2C3 1E 04 -  -  	ld e, 4
  185 D1:C2C5 FE 28 -  -  	cp 40
  186 D1:C2C7 D8 -  -  -  	ret c 
  187 D1:C2C8 1E 05 -  -  	ld e, 5
  188 D1:C2CA FE 37 -  -  	cp 55
  189 D1:C2CC D8 -  -  -  	ret c 
  190 D1:C2CD 1E 08 -  -  	ld e, 8
  191 D1:C2CF FE 5A -  -  	cp 90
  192 D1:C2D1 D8 -  -  -  	ret c 
  193 D1:C2D2 1E 0C -  -  	ld e, 12
  194 D1:C2D4 FE 8C -  -  	cp 140
  195 D1:C2D6 D8 -  -  -  	ret c
  196 D1:C2D7 1E 14 -  -  	ld e, 20
  197 D1:C2D9 FE FA -  -  	cp 250
  198 D1:C2DB D8 -  -  -  	ret c
  199 D1:C2DC -  -  -  -  pmc_max_speed:	
  200 D1:C2DC 1E 18 -  -  	ld e, 24 ;Max cam speed px/frame
  201 D1:C2DE C9 -  -  -  	ret
  202 D1:C2DF -  -  -  -  
  203 D1:C2DF -  -  -  -  player_draw:
  204 D1:C2DF -  -  -  -  ;Draw sprite and reset any flags 
  205 D1:C2DF -  -  -  -  
  206 D1:C2DF 01 00 00 00 	ld bc,0 ;clear 
  207 D1:C2E3 -  -  -  -  	;bc is sprite index counter 
  208 D1:C2E3 -  -  -  -  	;default, charge, chargelit, jump, jumpmouth, fall
  209 D1:C2E3 -  -  -  -  	;Add 4 for sprite, add 2 for flip, add 1 for offset
  210 D1:C2E3 -  -  -  -  	
  211 D1:C2E3 3A 0C C0 D1 	ld a,(player_flags)
  212 D1:C2E7 CB 5F -  -  	bit 3,a ;check fall flag 
  213 D1:C2E9 C2 27 C3 D1 	jp nz,pd_set_fall
  214 D1:C2ED -  -  -  -  	;TODO tounge flag
  215 D1:C2ED CB 57 -  -  	bit 2,a 
  216 D1:C2EF C2 49 C3 D1 	jp nz,pd_set_tongue
  217 D1:C2F3 CB 7F -  -  	bit 7,a ;Check jump held flag 
  218 D1:C2F5 C2 82 C3 D1 	jp nz,pd_set_charge
  219 D1:C2F9 -  -  -  -  	
  220 D1:C2F9 CB 77 -  -  	bit 6,a ;on ground flag
  221 D1:C2FB CA D8 C3 D1 	jp z, pd_set_jump
  222 D1:C2FF -  -  -  -  
  223 D1:C2FF -  -  -  -  	;On ground 
  224 D1:C2FF -  -  -  -  	;c=0
  225 D1:C2FF -  -  -  -  	;Set sprite heights and offsets
  226 D1:C2FF 3E 13 -  -  	ld a,19
  227 D1:C301 32 7C C4 D1 	ld (pd_sprite_height_1),a 
  228 D1:C305 32 AF C4 D1 	ld (pd_sprite_height_2),a 
  229 D1:C309 3E 02 -  -  	ld a,2
  230 D1:C30B 32 15 C4 D1 	ld (pd_x_offset_noflip),a 
  231 D1:C30F 32 0D C4 D1 	ld (pd_x_offset_flip),a 
  232 D1:C313 3E 01 -  -  	ld a,1 
  233 D1:C315 32 4D C4 D1 	ld (pd_y_offset),a
  234 D1:C319 3A 0C C0 D1 	ld a,(player_flags)
  235 D1:C31D CB 4F -  -  	bit 1,a 
  236 D1:C31F C2 14 C4 D1 	jp nz,pd_noflip
  237 D1:C323 C3 00 C4 D1 	jp pd_flip
  238 D1:C327 -  -  -  -  
  239 D1:C327 -  -  -  -  pd_set_fall:
  240 D1:C327 0E 14 -  -  	ld c,20
  241 D1:C329 3E 1A -  -  	ld a,26
  242 D1:C32B 32 7C C4 D1 	ld (pd_sprite_height_1),a 
  243 D1:C32F 32 AF C4 D1 	ld (pd_sprite_height_2),a 
  244 D1:C333 3E 01 -  -  	ld a,1
  245 D1:C335 32 15 C4 D1 	ld (pd_x_offset_noflip),a 
  246 D1:C339 3E 00 -  -  	ld a,0
  247 D1:C33B 32 0D C4 D1 	ld (pd_x_offset_flip),a 
  248 D1:C33F 3E 07 -  -  	ld a,7 
  249 D1:C341 32 4D C4 D1 	ld (pd_y_offset),a 
  250 D1:C345 C3 F6 C3 D1 	jp pd_check_flip
  251 D1:C349 -  -  -  -  
  252 D1:C349 -  -  -  -  pd_set_tongue:
  253 D1:C349 3E 1D -  -  	ld a,29
  254 D1:C34B 32 7C C4 D1 	ld (pd_sprite_height_1),a 
  255 D1:C34F 32 AF C4 D1 	ld (pd_sprite_height_2),a 
  256 D1:C353 3E 01 -  -  	ld a,1 
  257 D1:C355 32 4D C4 D1 	ld (pd_y_offset),a 
  258 D1:C359 -  -  -  -  	
  259 D1:C359 -  -  -  -  	;Need to check if player center is to the left or right of ring, will determine flip 
  260 D1:C359 CD E1 BF D1 	call player_x_half ;a holds x pos in px pairs
  261 D1:C35D 06 03 -  -  	ld b,3 ;center offset for jump sprite (in pairs) from collider 
  262 D1:C35F 80 -  -  -  	add a,b 
  263 D1:C360 -  -  -  -  	;compare to ring pos to determine sprite flip
  264 D1:C360 47 -  -  -  	ld b,a 
  265 D1:C361 3A 0B C0 D1 	ld a,(tongue_ring_x_pos)
  266 D1:C365 B8 -  -  -  	cp b 
  267 D1:C366 D2 76 C3 D1 	jp nc, pd_tongue_noflip
  268 D1:C36A -  -  -  -  	;ring to left of player, yes flip 
  269 D1:C36A 06 00 -  -  	ld b,0
  270 D1:C36C 0E 12 -  -  	ld c,18
  271 D1:C36E 11 02 00 00 	ld de,2 ;flip offset
  272 D1:C372 C3 22 C4 D1 	jp pd_check_offset
  273 D1:C376 -  -  -  -  pd_tongue_noflip:
  274 D1:C376 -  -  -  -  	;ring is to the right of player, no sprite flip
  275 D1:C376 06 00 -  -  	ld b,0
  276 D1:C378 0E 10 -  -  	ld c,16
  277 D1:C37A 11 07 00 00 	ld de,7
  278 D1:C37E C3 22 C4 D1 	jp pd_check_offset
  279 D1:C382 -  -  -  -  
  280 D1:C382 -  -  -  -  pd_set_charge:
  281 D1:C382 3E 12 -  -  	ld a,18
  282 D1:C384 32 7C C4 D1 	ld (pd_sprite_height_1),a 
  283 D1:C388 32 AF C4 D1 	ld (pd_sprite_height_2),a 
  284 D1:C38C 3E 02 -  -  	ld a,2
  285 D1:C38E 32 15 C4 D1 	ld (pd_x_offset_noflip),a 
  286 D1:C392 32 0D C4 D1 	ld (pd_x_offset_flip),a 
  287 D1:C396 3E 00 -  -  	ld a,0
  288 D1:C398 32 4D C4 D1 	ld (pd_y_offset),a 
  289 D1:C39C -  -  -  -  
  290 D1:C39C 3A F2 BF D1 	ld a,(jump_charge_timer)
  291 D1:C3A0 FE 20 -  -  	cp timer_max_val
  292 D1:C3A2 DA B0 C3 D1 	jp c,pd_set_charge_norm
  293 D1:C3A6 -  -  -  -  
  294 D1:C3A6 3A 08 AC D1 	ld a,(frameCount)
  295 D1:C3AA CB 57 -  -  	bit 2,a 
  296 D1:C3AC C2 C4 C3 D1 	jp nz,pd_set_charge_lit 
  297 D1:C3B0 -  -  -  -  pd_set_charge_norm:
  298 D1:C3B0 0E 04 -  -  	ld c,4
  299 D1:C3B2 3A F1 BF D1 	ld a,(jump_strength_left)
  300 D1:C3B6 47 -  -  -  	ld b,a 
  301 D1:C3B7 3A F0 BF D1 	ld a,(jump_strength_right)
  302 D1:C3BB 90 -  -  -  	sub a,b ;Check which direction jump is being charged 
  303 D1:C3BC D2 14 C4 D1 	jp nc,pd_noflip
  304 D1:C3C0 C3 00 C4 D1 	jp pd_flip
  305 D1:C3C4 -  -  -  -  	
  306 D1:C3C4 -  -  -  -  pd_set_charge_lit:
  307 D1:C3C4 0E 08 -  -  	ld c,8
  308 D1:C3C6 3A F1 BF D1 	ld a,(jump_strength_left)
  309 D1:C3CA 47 -  -  -  	ld b,a 
  310 D1:C3CB 3A F0 BF D1 	ld a,(jump_strength_right)
  311 D1:C3CF 90 -  -  -  	sub a,b ;Check which direction jump is being charged 
  312 D1:C3D0 D2 14 C4 D1 	jp nc,pd_noflip
  313 D1:C3D4 C3 00 C4 D1 	jp pd_flip
  314 D1:C3D8 -  -  -  -  	
  315 D1:C3D8 -  -  -  -  	
  316 D1:C3D8 -  -  -  -  pd_set_jump:
  317 D1:C3D8 0E 0C -  -  	ld c,12
  318 D1:C3DA 3E 1D -  -  	ld a,29
  319 D1:C3DC 32 7C C4 D1 	ld (pd_sprite_height_1),a 
  320 D1:C3E0 32 AF C4 D1 	ld (pd_sprite_height_2),a 
  321 D1:C3E4 3E 07 -  -  	ld a,7
  322 D1:C3E6 32 15 C4 D1 	ld (pd_x_offset_noflip),a 
  323 D1:C3EA 3E 02 -  -  	ld a,2
  324 D1:C3EC 32 0D C4 D1 	ld (pd_x_offset_flip),a 
  325 D1:C3F0 3E 01 -  -  	ld a,1 
  326 D1:C3F2 32 4D C4 D1 	ld (pd_y_offset),a 
  327 D1:C3F6 -  -  -  -  	
  328 D1:C3F6 -  -  -  -  
  329 D1:C3F6 -  -  -  -  pd_check_flip:
  330 D1:C3F6 3A FB BF D1 	ld a,(player_x_vel + 2);MSB velocity
  331 D1:C3FA CB 7F -  -  	bit 7,a 
  332 D1:C3FC CA 14 C4 D1 	jp z,pd_noflip
  333 D1:C400 -  -  -  -  pd_flip:
  334 D1:C400 0C -  -  -  	inc c 
  335 D1:C401 0C -  -  -  	inc c
  336 D1:C402 3A 0C C0 D1 	ld a,(player_flags)
  337 D1:C406 CB 8F -  -  	res 1,a 
  338 D1:C408 32 0C C0 D1 	ld (player_flags),a 
  339 D1:C40C -  -  -  -  pd_x_offset_flip .equ $+1
  340 D1:C40C 11 00 00 00 	ld de,0 
  341 D1:C410 C3 22 C4 D1 	jp pd_check_offset
  342 D1:C414 -  -  -  -  pd_noflip:
  343 D1:C414 -  -  -  -  pd_x_offset_noflip .equ $+1
  344 D1:C414 11 00 00 00 	ld de,0 
  345 D1:C418 3A 0C C0 D1 	ld a,(player_flags)
  346 D1:C41C CB CF -  -  	set 1,a 
  347 D1:C41E 32 0C C0 D1 	ld (player_flags),a 
  348 D1:C422 -  -  -  -  pd_check_offset:
  349 D1:C422 -  -  -  -  	;ld x pos
  350 D1:C422 2A F4 BF D1 	ld hl,(player_x_pos+1);fullpx
  351 D1:C426 ED 52 -  -  	sbc hl,de ;subtract x offset
  352 D1:C428 5D -  -  -  	ld e,l
  353 D1:C429 CB 3C -  -  	srl h ;div 2
  354 D1:C42B CB 1D -  -  	rr l 
  355 D1:C42D 7D -  -  -  	ld a,l
  356 D1:C42E 32 D8 C4 D1 	ld (pd_xpos_full),a 
  357 D1:C432 -  -  -  -  
  358 D1:C432 CB 43 -  -  	bit 0, e ;least fullpixel bit 
  359 D1:C434 CA 39 C4 D1 	jp z, pd_even_px 
  360 D1:C438 0C -  -  -  	inc c ;add 1 for offset 
  361 D1:C439 -  -  -  -  pd_even_px:
  362 D1:C439 79 -  -  -  	ld a,c
  363 D1:C43A 32 E0 C4 D1 	ld (player_sprite_index),a 
  364 D1:C43E -  -  -  -  
  365 D1:C43E -  -  -  -  	;call write_a_to_ram
  366 D1:C43E -  -  -  -  
  367 D1:C43E -  -  -  -  	;get y pos
  368 D1:C43E 21 00 00 00 	ld hl,0 
  369 D1:C442 3A F8 BF D1 	ld a,(player_y_pos + 2) ;MSB
  370 D1:C446 67 -  -  -  	ld h,a 
  371 D1:C447 3A F7 BF D1 	ld a, (player_y_pos + 1) ;middle bit (fullpixel LSB)
  372 D1:C44B 6F -  -  -  	ld l,a 
  373 D1:C44C -  -  -  -  	;hl holds y pos fullpixels
  374 D1:C44C -  -  -  -  	
  375 D1:C44C -  -  -  -  pd_y_offset .equ $+1
  376 D1:C44C 11 00 00 00 	ld de,0 
  377 D1:C450 19 -  -  -  	add hl,de ;add y offset
  378 D1:C451 -  -  -  -  
  379 D1:C451 EB -  -  -  	ex de,hl 
  380 D1:C452 2A EE AB D1 	ld hl,(cam_pos)
  381 D1:C456 CB 3C -  -  	srl h ;div by 2
  382 D1:C458 CB 1D -  -  	rr l 
  383 D1:C45A 01 EF 00 00 	ld bc,239
  384 D1:C45E 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of fg layer
  385 D1:C45F 37 -  -  -  	scf 
  386 D1:C460 3F -  -  -  	ccf 
  387 D1:C461 -  -  -  -  	;Uppermost vp line - player y  = lines below top to draw player 
  388 D1:C461 ED 52 -  -  	sbc hl,de 
  389 D1:C463 -  -  -  -  	;call write_hl_to_ram
  390 D1:C463 DA A7 C4 D1 	jp c, pd_top_cut
  391 D1:C467 -  -  -  -  	
  392 D1:C467 7C -  -  -  	ld a,h 
  393 D1:C468 -  -  -  -  	
  394 D1:C468 B7 -  -  -  	or a 
  395 D1:C469 C0 -  -  -  	ret nz ;player is > 256 px below cam 
  396 D1:C46A -  -  -  -  	
  397 D1:C46A 7D -  -  -  	ld a,l 
  398 D1:C46B -  -  -  -  	;a holds lines below vp top to draw player
  399 D1:C46B 47 -  -  -  	ld b,a 
  400 D1:C46C 3E F0 -  -  	ld a,240
  401 D1:C46E 90 -  -  -  	sub a,b ;lines above bottom of VP 
  402 D1:C46F D8 -  -  -  	ret c ;player below VP 
  403 D1:C470 -  -  -  -  
  404 D1:C470 -  -  -  -  	
  405 D1:C470 ED 5B F4 AB 
              D1 -  -  -  	ld de, (draw_buffer)
  406 D1:C475 21 00 96 00 	ld hl, 240*160
  407 D1:C479 19 -  -  -  	add hl,de 
  408 D1:C47A EB -  -  -  	ex de,hl ;DE hlds VP bottom 
  409 D1:C47B -  -  -  -  	
  410 D1:C47B -  -  -  -  pd_sprite_height_1 .equ $ + 1
  411 D1:C47B FE 00 -  -  	cp 0 
  412 D1:C47D DA 94 C4 D1 	jp c, pd_bottom_cut 
  413 D1:C481 -  -  -  -  
  414 D1:C481 -  -  -  -  	;Otherwise, no top or bottm cut
  415 D1:C481 -  -  -  -  	;a holds lines above bottom VP 
  416 D1:C481 CD C9 C4 D1 	call pd_setup_draw
  417 D1:C485 CD E0 AE D1 	call draw_slow_sprite_full
  418 D1:C489 3A 0C C0 D1 	ld a,(player_flags)
  419 D1:C48D CB 57 -  -  	bit 2,a 
  420 D1:C48F C4 33 C5 D1 	call nz, draw_tongue
  421 D1:C493 C9 -  -  -  	ret
  422 D1:C494 -  -  -  -  
  423 D1:C494 -  -  -  -  pd_bottom_cut:
  424 D1:C494 -  -  -  -  	;a holds lines to draw
  425 D1:C494 -  -  -  -  	;DE holds vram bottom 
  426 D1:C494 CD C9 C4 D1 	call pd_setup_draw
  427 D1:C498 CD 4B AF D1 	call draw_slow_sprite_bottom_cut
  428 D1:C49C 3A 0C C0 D1 	ld a,(player_flags)
  429 D1:C4A0 CB 57 -  -  	bit 2,a 
  430 D1:C4A2 C4 33 C5 D1 	call nz, draw_tongue
  431 D1:C4A6 C9 -  -  -  	ret 
  432 D1:C4A7 -  -  -  -  	
  433 D1:C4A7 -  -  -  -  
  434 D1:C4A7 -  -  -  -  pd_top_cut:
  435 D1:C4A7 -  -  -  -  	;call write_hl_to_ram
  436 D1:C4A7 -  -  -  -  	;push af 
  437 D1:C4A7 -  -  -  -  	;ld a,$44
  438 D1:C4A7 -  -  -  -  	;call write_a_to_ram 
  439 D1:C4A7 -  -  -  -  	;pop af 
  440 D1:C4A7 -  -  -  -  
  441 D1:C4A7 7C -  -  -  	ld a,h ;Upper byte after subtraction, check for chase where player > 256 px above cam to prevent overflow errors
  442 D1:C4A8 EE FF -  -  	xor %11111111 ;flip all bits 
  443 D1:C4AA C0 -  -  -  	ret nz ;player is > 256 px above cam 
  444 D1:C4AB -  -  -  -  
  445 D1:C4AB 7D -  -  -  	ld a,l ;lines below VP
  446 D1:C4AC ED 44 -  -  	neg 
  447 D1:C4AE -  -  -  -  
  448 D1:C4AE -  -  -  -  	;a holds lines above vp top = lines to cut 
  449 D1:C4AE -  -  -  -  pd_sprite_height_2 .equ $ + 1 
  450 D1:C4AE FE 00 -  -  	cp 0 ; compare to height 
  451 D1:C4B0 D0 -  -  -  	ret nc 
  452 D1:C4B1 -  -  -  -  
  453 D1:C4B1 ED 5B F4 AB 
              D1 -  -  -  	ld de,(draw_buffer)
  454 D1:C4B6 CD C9 C4 D1 	call pd_setup_draw ;Setup draw pos 
  455 D1:C4BA -  -  -  -  	
  456 D1:C4BA -  -  -  -  	;bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  457 D1:C4BA -  -  -  -  	;jp z,pd_top_cut_fast
  458 D1:C4BA CD 1E AF D1 	call draw_slow_sprite_top_cut ;for now assume all sprites are slow
  459 D1:C4BE -  -  -  -  	
  460 D1:C4BE 3A 0C C0 D1 	ld a,(player_flags)
  461 D1:C4C2 CB 57 -  -  	bit 2,a 
  462 D1:C4C4 C4 33 C5 D1 	call nz, draw_tongue
  463 D1:C4C8 C9 -  -  -  	ret 
  464 D1:C4C9 -  -  -  -  	
  465 D1:C4C9 -  -  -  -  
  466 D1:C4C9 -  -  -  -  
  467 D1:C4C9 -  -  -  -  
  468 D1:C4C9 -  -  -  -  pd_setup_draw:
  469 D1:C4C9 -  -  -  -  	;A holds lines above bottom (or top) line of VP 
  470 D1:C4C9 -  -  -  -  	;DE holds VP top or bottom
  471 D1:C4C9 26 A0 -  -  	ld h,160
  472 D1:C4CB 6F -  -  -  	ld l,a ;Num lines to subtract
  473 D1:C4CC ED 6C -  -  	mlt hl 
  474 D1:C4CE 37 -  -  -  	scf 
  475 D1:C4CF 3F -  -  -  	ccf 
  476 D1:C4D0 EB -  -  -  	ex de,hl ;De holds lines to subtract, hl holds vram pos 
  477 D1:C4D1 ED 52 -  -  	sbc hl,de 
  478 D1:C4D3 01 00 00 00 	ld bc,0 
  479 D1:C4D7 -  -  -  -  pd_xpos_full .equ $ + 1 
  480 D1:C4D7 0E 00 -  -  	ld c, 0 ;ld x pos 
  481 D1:C4D9 09 -  -  -  	add hl,bc 
  482 D1:C4DA EB -  -  -  	ex de,hl 
  483 D1:C4DB 21 7E C6 D1 	ld hl,player_sprite_table ;Load sprite table
  484 D1:C4DF -  -  -  -  
  485 D1:C4DF -  -  -  -  player_sprite_index .equ $ + 1 
  486 D1:C4DF 0E 00 -  -  	ld c,0 ;load sprite index 
  487 D1:C4E1 09 -  -  -  	add hl,bc 
  488 D1:C4E2 09 -  -  -  	add hl,bc 
  489 D1:C4E3 09 -  -  -  	add hl,bc 
  490 D1:C4E4 ED 27 -  -  	ld hl,(hl)
  491 D1:C4E6 -  -  -  -  	;HL holds sprite data, de holds draw pos 
  492 D1:C4E6 C9 -  -  -  	ret 
  493 D1:C4E7 -  -  -  -  
  494 D1:C4E7 -  -  -  -  
  495 D1:C4E7 -  -  -  -  
  496 D1:C4E7 -  -  -  -  player_to_cam_coords:
  497 D1:C4E7 21 00 00 00 	ld hl,0
  498 D1:C4EB 3A F8 BF D1 	ld a,(player_y_pos + 2) ;frame number
  499 D1:C4EF 67 -  -  -  	ld h,a 
  500 D1:C4F0 3A F7 BF D1 	ld a,(player_y_pos + 1) ;pixel number
  501 D1:C4F4 6F -  -  -  	ld l,a 
  502 D1:C4F5 -  -  -  -  	
  503 D1:C4F5 CB 25 -  -  	sla l ;mult by 2 to convert to FG space
  504 D1:C4F7 CB 14 -  -  	rl h 
  505 D1:C4F9 11 24 00 00 	ld de,36 ;add offset to put player at bottom of screen
  506 D1:C4FD ED 52 -  -  	sbc hl,de 
  507 D1:C4FF D2 07 C5 D1 	jp nc, set_cam_0_pos_skip
  508 D1:C503 21 00 00 00 	ld hl,0
  509 D1:C507 -  -  -  -  set_cam_0_pos_skip:
  510 D1:C507 C9 -  -  -  	ret
  511 D1:C508 -  -  -  -  	
  512 D1:C508 -  -  -  -  	
  513 D1:C508 -  -  -  -  	
  514 D1:C508 -  -  -  -  
  515 D1:C508 -  -  -  -  y_length_to_tongue_ring: ;returns hl = y dist
  516 D1:C508 21 00 00 00 	ld hl,0 
  517 D1:C50C 3A F8 BF D1 	ld a,(player_y_pos +2)
  518 D1:C510 67 -  -  -  	ld h,a 
  519 D1:C511 3A F7 BF D1 	ld a,(player_y_pos +1)
  520 D1:C515 6F -  -  -  	ld l,a 
  521 D1:C516 2B -  -  -  	dec hl ;mouth y offset
  522 D1:C517 2B -  -  -  	dec hl
  523 D1:C518 2B -  -  -  	dec hl 
  524 D1:C519 2B -  -  -  	dec hl
  525 D1:C51A 2B -  -  -  	dec hl
  526 D1:C51B 2B -  -  -  	dec hl
  527 D1:C51C 2B -  -  -  	dec hl
  528 D1:C51D -  -  -  -  	;call write_hl_to_ram
  529 D1:C51D -  -  -  -  	;hl holds player y fullpixels 
  530 D1:C51D EB -  -  -  	ex de,hl 
  531 D1:C51E 2A 08 C0 D1 	ld hl,(tongue_ring_y_pos)
  532 D1:C522 -  -  -  -  	;call write_hl_to_ram
  533 D1:C522 ED 52 -  -  	sbc hl,de 
  534 D1:C524 C9 -  -  -  	ret 
  535 D1:C525 -  -  -  -  
  536 D1:C525 -  -  -  -  x_length_to_tongue_ring: ;returns a = dist 
  537 D1:C525 CD E1 BF D1 	call player_x_half
  538 D1:C529 06 03 -  -  	ld b,3 ;offset to center of collider 
  539 D1:C52B 80 -  -  -  	add a,b 
  540 D1:C52C 47 -  -  -  	ld b,a
  541 D1:C52D 3A 0B C0 D1 	ld a,(tongue_ring_x_pos)
  542 D1:C531 90 -  -  -  	sub a,b 
  543 D1:C532 C9 -  -  -  	ret 
  544 D1:C533 -  -  -  -  
  545 D1:C533 -  -  -  -  
  546 D1:C533 -  -  -  -  draw_tongue:
  547 D1:C533 -  -  -  -  	;c holds max y dist to draw 
  548 D1:C533 -  -  -  -  	;ld a,$DD
  549 D1:C533 -  -  -  -  	;call write_a_to_ram
  550 D1:C533 -  -  -  -  	
  551 D1:C533 3A 12 C0 D1 	ld a, (tongue_extend_timer)
  552 D1:C537 -  -  -  -  	;call write_a_to_ram
  553 D1:C537 CB 7F -  -  	bit 7,a 
  554 D1:C539 C2 43 C5 D1 	jp nz,dt_full_extend ; a > 128 = full exted
  555 D1:C53D CB 27 -  -  	sla a ;otherwise mult by 8 to find limit 
  556 D1:C53F CB 27 -  -  	sla a 
  557 D1:C541 CB 27 -  -  	sla a 
  558 D1:C543 -  -  -  -  dt_full_extend:
  559 D1:C543 4F -  -  -  	ld c,a 
  560 D1:C544 -  -  -  -  	;call write_a_to_ram
  561 D1:C544 CD 08 C5 D1 	call y_length_to_tongue_ring ;hl holds y dist to ring
  562 D1:C548 D8 -  -  -  	ret c ;distance should not be negative 
  563 D1:C549 -  -  -  -  	
  564 D1:C549 -  -  -  -  	;hl holds line y length 
  565 D1:C549 7D -  -  -  	ld a,l ;a holds line length
  566 D1:C54A 32 D9 C5 D1 	ld (dl_cutoff_length),a
  567 D1:C54E -  -  -  -  	;call write_a_to_ram
  568 D1:C54E FE 05 -  -  	cp 5 
  569 D1:C550 D8 -  -  -  	ret c ;min line length
  570 D1:C551 B9 -  -  -  	cp c 
  571 D1:C552 DA 5C C5 D1 	jp c, dt_full_len
  572 D1:C556 -  -  -  -  	
  573 D1:C556 -  -  -  -  	;otherwise limit line length
  574 D1:C556 79 -  -  -  	ld a,c 
  575 D1:C557 32 D9 C5 D1 	ld (dl_cutoff_length),a
  576 D1:C55B -  -  -  -  	;ld a,$A1 
  577 D1:C55B -  -  -  -  	;call write_a_to_ram
  578 D1:C55B -  -  -  -  	;call write_a_to_ram
  579 D1:C55B 7D -  -  -  	ld a,l ;line length
  580 D1:C55C -  -  -  -  dt_full_len:
  581 D1:C55C 32 27 C6 D1 	ld (dl_y_dist_1),a
  582 D1:C560 32 51 C6 D1 	ld (dl_y_dist_2),a 
  583 D1:C564 -  -  -  -  	;call write_a_to_ram
  584 D1:C564 -  -  -  -  
  585 D1:C564 -  -  -  -  
  586 D1:C564 -  -  -  -  	;Find line start y in screen space 
  587 D1:C564 -  -  -  -  	;de still holds player y in fullpixels
  588 D1:C564 -  -  -  -  	
  589 D1:C564 2A EE AB D1 	ld hl,(cam_pos)
  590 D1:C568 CB 3C -  -  	srl h ;div by 2
  591 D1:C56A CB 1D -  -  	rr l 
  592 D1:C56C 01 EF 00 00 	ld bc,239 + 0 ;top of screen - mouth y offset 
  593 D1:C570 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of mg layer
  594 D1:C571 37 -  -  -  	scf 
  595 D1:C572 3F -  -  -  	ccf 
  596 D1:C573 -  -  -  -  	;Uppermost vp line - player y  = lines below top to draw player 
  597 D1:C573 ED 52 -  -  	sbc hl,de
  598 D1:C575 7D -  -  -  	ld a,l 
  599 D1:C576 26 A0 -  -  	ld h,160 
  600 D1:C578 ED 6C -  -  	mlt hl 
  601 D1:C57A EB -  -  -  	ex de,hl 
  602 D1:C57B 2A F4 AB D1 	ld hl, (draw_buffer)
  603 D1:C57F 19 -  -  -  	add hl,de 
  604 D1:C580 EB -  -  -  	ex de,hl ;de holds correct y pos in vram 
  605 D1:C581 -  -  -  -  	
  606 D1:C581 21 00 00 00 	ld hl,0 
  607 D1:C585 3A F5 BF D1 	ld a,(player_x_pos + 2);msb 
  608 D1:C589 67 -  -  -  	ld h,a 
  609 D1:C58A 3A F4 BF D1 	ld a,(player_x_pos + 1)
  610 D1:C58E 6F -  -  -  	ld l,a ;hl holds x pos in fullpixels
  611 D1:C58F -  -  -  -  	
  612 D1:C58F -  -  -  -  	;Need to find x and y pos of player mouth (world coords)
  613 D1:C58F -  -  -  -  	;Need to check if player center is to the left or right of ring, will determine flip 
  614 D1:C58F CD E1 BF D1 	call player_x_half ;a holds x pos in px pairs
  615 D1:C593 06 03 -  -  	ld b,3 ;center offset for jump sprite (in pairs) from collider 
  616 D1:C595 80 -  -  -  	add a,b 
  617 D1:C596 -  -  -  -  	;compare to ring pos to determine sprite flip
  618 D1:C596 47 -  -  -  	ld b,a 
  619 D1:C597 3A 0B C0 D1 	ld a,(tongue_ring_x_pos)
  620 D1:C59B B8 -  -  -  	cp b 
  621 D1:C59C D2 A8 C5 D1 	jp nc, dt_noflip
  622 D1:C5A0 -  -  -  -  	;ring to left of player 
  623 D1:C5A0 -  -  -  -  	
  624 D1:C5A0 01 01 00 00 	ld bc,1 
  625 D1:C5A4 C3 AC C5 D1 	jp dt_flip
  626 D1:C5A8 -  -  -  -  dt_noflip:
  627 D1:C5A8 -  -  -  -  	;ring is to the right of player, no sprite flip
  628 D1:C5A8 01 11 00 00 	ld bc,17 ;17px offset from collider x 
  629 D1:C5AC -  -  -  -  dt_flip:
  630 D1:C5AC 09 -  -  -  	add hl,bc ;hl holds x pos of line start (mouth pos) fullpixels 
  631 D1:C5AD -  -  -  -  	
  632 D1:C5AD E5 -  -  -  	push hl
  633 D1:C5AE 01 00 00 00 	ld bc,0
  634 D1:C5B2 4F -  -  -  	ld c,a ;a holds ring x pos (in pair pixels)
  635 D1:C5B3 CB 21 -  -  	sla c ;mult by 2  
  636 D1:C5B5 CB 10 -  -  	rl b 
  637 D1:C5B7 ED 42 -  -  	sbc hl,bc ;hl holds x delta in px (player - ring)
  638 D1:C5B9 D2 C8 C5 D1 	jp nc,dt_neg_delta_x
  639 D1:C5BD -  -  -  -  	;ring to the right
  640 D1:C5BD CD 64 C6 D1 	call dl_set_positive
  641 D1:C5C1 7D -  -  -  	ld a,l ;a holds x delta
  642 D1:C5C2 ED 44 -  -  	neg 
  643 D1:C5C4 C3 CD C5 D1 	jp dt_pos_delta_x
  644 D1:C5C8 -  -  -  -  dt_neg_delta_x:
  645 D1:C5C8 -  -  -  -  	;ring to the left 
  646 D1:C5C8 CD 71 C6 D1 	call dl_set_negative ;set neg slope
  647 D1:C5CC 7D -  -  -  	ld a,l ;a holds x delta
  648 D1:C5CD -  -  -  -  dt_pos_delta_x:
  649 D1:C5CD -  -  -  -  	
  650 D1:C5CD 32 23 C6 D1 	ld (dl_x_dist),a 
  651 D1:C5D1 -  -  -  -  	
  652 D1:C5D1 E1 -  -  -  	pop hl ;x pos of line start 
  653 D1:C5D2 45 -  -  -  	ld b,l ;offset counter
  654 D1:C5D3 -  -  -  -  	
  655 D1:C5D3 CB 3C -  -  	srl h ;div by 2
  656 D1:C5D5 CB 1D -  -  	rr l
  657 D1:C5D7 19 -  -  -  	add hl,de ;add to vram y pos 
  658 D1:C5D8 -  -  -  -  	;hl = line bottom pos in vram 
  659 D1:C5D8 -  -  -  -  	
  660 D1:C5D8 -  -  -  -  	
  661 D1:C5D8 -  -  -  -  	;set (dl_y_dist_1), (dl_y_dist_2), (dl_x_dist)
  662 D1:C5D8 -  -  -  -  	;a is byte counter, incs by xdist, if >ydist subtract ydist 
  663 D1:C5D8 -  -  -  -  dl_cutoff_length .equ $+1
  664 D1:C5D8 0E 00 -  -  	ld c,0 
  665 D1:C5DA -  -  -  -  	;ld a,c
  666 D1:C5DA -  -  -  -  	;call write_a_to_ram
  667 D1:C5DA 11 00 00 00 	ld de,0 ;amount to inc per line 
  668 D1:C5DE 3E 00 -  -  	ld a,0 
  669 D1:C5E0 -  -  -  -  draw_line_loop:
  670 D1:C5E0 08 -  -  -  	ex af,af';' ;a' used for writing to hl
  671 D1:C5E1 -  -  -  -  	
  672 D1:C5E1 CB 40 -  -  	bit 0,b 
  673 D1:C5E3 CA 06 C6 D1 	jp z,dl_no_offset
  674 D1:C5E7 -  -  -  -  	
  675 D1:C5E7 3E DA -  -  	ld a, %11011010 ;%JP c
  676 D1:C5E9 32 3A C6 D1 	ld (dl_end_sprite_offset) ,a 
  677 D1:C5ED -  -  -  -  	
  678 D1:C5ED 7E -  -  -  	ld a,(hl)
  679 D1:C5EE E6 0F -  -  	and %00001111 ;save left pixel 
  680 D1:C5F0 F6 A0 -  -  	or $A0 ;right pixel = 12 
  681 D1:C5F2 77 -  -  -  	ld (hl),a 
  682 D1:C5F3 23 -  -  -  	inc hl 
  683 D1:C5F4 3E AA -  -  	ld a,$AA
  684 D1:C5F6 77 -  -  -  	ld (hl),a 
  685 D1:C5F7 23 -  -  -  	inc hl 
  686 D1:C5F8 7E -  -  -  	ld a,(hl)
  687 D1:C5F9 E6 F0 -  -  	and %11110000 ;save right pixel 
  688 D1:C5FB F6 0A -  -  	or $0A ;right pixel = 12 
  689 D1:C5FD 77 -  -  -  	ld (hl),a 
  690 D1:C5FE 11 A2 00 00 	ld de,162 ;1 line up to left 
  691 D1:C602 C3 18 C6 D1 	jp dl_check_slope
  692 D1:C606 -  -  -  -  	
  693 D1:C606 -  -  -  -  dl_no_offset:
  694 D1:C606 -  -  -  -  	
  695 D1:C606 3E D2 -  -  	ld a, %11010010 ;%JP nc
  696 D1:C608 32 3A C6 D1 	ld (dl_end_sprite_offset) ,a 
  697 D1:C60C -  -  -  -  
  698 D1:C60C 3E CB -  -  	ld a,$CB ;left side colors 
  699 D1:C60E 77 -  -  -  	ld (hl),a 
  700 D1:C60F 23 -  -  -  	inc hl 
  701 D1:C610 3E BC -  -  	ld a,$BC ;Right side colors 
  702 D1:C612 77 -  -  -  	ld (hl),a 
  703 D1:C613 23 -  -  -  	inc hl 
  704 D1:C614 11 A2 00 00 	ld de,162 ;to move 1 line up to left side 
  705 D1:C618 -  -  -  -  	
  706 D1:C618 -  -  -  -  dl_check_slope:
  707 D1:C618 37 -  -  -  	scf 
  708 D1:C619 3F -  -  -  	ccf 
  709 D1:C61A ED 52 -  -  	sbc hl,de ;add default length
  710 D1:C61C 08 -  -  -  	ex af,af' ;' ; back to slope byte counter 
  711 D1:C61D -  -  -  -  
  712 D1:C61D 0D -  -  -  	dec c ;check here to avoid hl being changed in inc x to stop weird behavior in end sprite
  713 D1:C61E CA 30 C6 D1 	jp z, dl_loop_end
  714 D1:C622 -  -  -  -  
  715 D1:C622 -  -  -  -  dl_x_dist .equ $+1 
  716 D1:C622 1E 00 -  -  	ld e,0 
  717 D1:C624 83 -  -  -  	add a,e  ;add x dist 
  718 D1:C625 3C -  -  -  	inc a
  719 D1:C626 -  -  -  -  dl_compare_y:
  720 D1:C626 -  -  -  -  dl_y_dist_1 .equ $ + 1 
  721 D1:C626 FE 00 -  -  	cp 0 ;compare to y dist
  722 D1:C628 D2 50 C6 D1 	jp nc, dl_inc_x
  723 D1:C62C -  -  -  -  	
  724 D1:C62C C3 E0 C5 D1 	jp draw_line_loop
  725 D1:C630 -  -  -  -  	
  726 D1:C630 -  -  -  -  dl_loop_end:
  727 D1:C630 -  -  -  -  
  728 D1:C630 -  -  -  -  	;Draw tongue end sprite
  729 D1:C630 -  -  -  -  	;hl should be pointing to end of line vram already 
  730 D1:C630 11 E1 01 00 	ld de, 160*3 + 1
  731 D1:C634 37 -  -  -  	scf 
  732 D1:C635 3F -  -  -  	ccf 
  733 D1:C636 ED 52 -  -  	sbc hl,de  
  734 D1:C638 -  -  -  -  ;dl_negative_x_2 .equ $
  735 D1:C638 -  -  -  -  	;dec hl ;fixes weird offset issue
  736 D1:C638 EB -  -  -  	ex de,hl 
  737 D1:C639 37 -  -  -  	scf
  738 D1:C63A -  -  -  -  dl_end_sprite_offset .equ $
  739 D1:C63A DA 47 C6 D1 	jp c, dt_end_sprite_offset
  740 D1:C63E 21 75 1B D4 	ld hl, FrogTongue_Slow
  741 D1:C642 CD E0 AE D1 	call draw_slow_sprite_full
  742 D1:C646 C9 -  -  -  	ret 
  743 D1:C647 -  -  -  -  	
  744 D1:C647 -  -  -  -  dt_end_sprite_offset:
  745 D1:C647 -  -  -  -  	;dec de
  746 D1:C647 21 BB 1B D4 	ld hl, FrogTongue_Slow_O
  747 D1:C64B CD E0 AE D1 	call draw_slow_sprite_full 
  748 D1:C64F -  -  -  -  	;call write_a_to_ram
  749 D1:C64F C9 -  -  -  	ret 
  750 D1:C650 -  -  -  -  	
  751 D1:C650 -  -  -  -  	
  752 D1:C650 -  -  -  -  dl_inc_x:
  753 D1:C650 -  -  -  -  
  754 D1:C650 -  -  -  -  dl_y_dist_2 .equ $ + 1 
  755 D1:C650 1E 00 -  -  	ld e,0 ;ld with y dist
  756 D1:C652 93 -  -  -  	sub a,e ;subtract y dist 
  757 D1:C653 -  -  -  -  	
  758 D1:C653 04 -  -  -  	inc b 
  759 D1:C654 CB 40 -  -  	bit 0,b 
  760 D1:C656 C2 5F C6 D1 	jp nz,dl_inc_to_offset
  761 D1:C65A -  -  -  -  dl_negative_x .equ $ ;replace with nop for negative 
  762 D1:C65A 23 -  -  -  	inc hl ;add 1 to hl 	
  763 D1:C65B C3 26 C6 D1 	jp dl_compare_y
  764 D1:C65F -  -  -  -  	
  765 D1:C65F -  -  -  -  
  766 D1:C65F -  -  -  -  dl_inc_to_offset:
  767 D1:C65F -  -  -  -  
  768 D1:C65F -  -  -  -  dl_negative_x_1 .equ $ ;replace with dec for negative 
  769 D1:C65F 00 -  -  -  	nop
  770 D1:C660 C3 26 C6 D1 	jp dl_compare_y
  771 D1:C664 -  -  -  -  	
  772 D1:C664 -  -  -  -  
  773 D1:C664 -  -  -  -  dl_set_positive: ;line has pos slope
  774 D1:C664 3E 00 -  -  	ld a,%00000000 ;nop 
  775 D1:C666 32 5F C6 D1 	ld (dl_negative_x_1),a
  776 D1:C66A -  -  -  -  	
  777 D1:C66A -  -  -  -  	;ld a, %00100011 ;inc  hl 
  778 D1:C66A -  -  -  -  	;ld (dl_negative_x_2),a	
  779 D1:C66A 3E 23 -  -  	ld a, %00100011 ;inc  hl 
  780 D1:C66C 32 5A C6 D1 	ld (dl_negative_x),a 
  781 D1:C670 C9 -  -  -  	ret 
  782 D1:C671 -  -  -  -  	 
  783 D1:C671 -  -  -  -  
  784 D1:C671 -  -  -  -  dl_set_negative: ;line has neg slope 
  785 D1:C671 3E 00 -  -  	ld a,%00000000 ;nop 
  786 D1:C673 32 5A C6 D1 	ld (dl_negative_x),a 
  787 D1:C677 -  -  -  -  	;ld a, %00101011 ;dec hl
  788 D1:C677 -  -  -  -  	;ld (dl_negative_x_2),a
  789 D1:C677 3E 2B -  -  	ld a, %00101011 ;dec hl 
  790 D1:C679 32 5F C6 D1 	ld (dl_negative_x_1),a 
  791 D1:C67D -  -  -  -  	
  792 D1:C67D C9 -  -  -  	ret 
  793 D1:C67E -  -  -  -  	
  794 D1:C67E -  -  -  -  	
  795 D1:C67E -  -  -  -  	
  796 D1:C67E -  -  -  -  	
  797 D1:C67E -  -  -  -  	
  798 D1:C67E -  -  -  -  	
  799 D1:C67E -  -  -  -  	
  800 D1:C67E -  -  -  -  	
  801 D1:C67E -  -  -  -  	
  802 D1:C67E -  -  -  -  	
  803 D1:C67E -  -  -  -  	
  804 D1:C67E -  -  -  -  	
  805 D1:C67E -  -  -  -  player_sprite_table: ;Add 4 for sprite, add 2 for flip, add 1 for offset
  806 D1:C67E 7B 41 D4 -  	.dl FrogDefault_Slow
  807 D1:C681 AB 42 D4 -  	.dl FrogDefault_Slow_O
  808 D1:C684 DB 43 D4 -  	.dl FrogDefault_Slow_F
  809 D1:C687 0B 45 D4 -  	.dl FrogDefault_Slow_O_F
  810 D1:C68A 2D 05 D4 -  	.dl FrogCharge_Slow
  811 D1:C68D 4D 06 D4 -  	.dl FrogCharge_Slow_O
  812 D1:C690 73 07 D4 -  	.dl FrogCharge_Slow_F
  813 D1:C693 99 08 D4 -  	.dl FrogCharge_Slow_O_F
  814 D1:C696 3B 46 D4 -  	.dl FrogChargeLit_Slow
  815 D1:C699 C1 01 D4 -  	.dl FrogChargeLit_Slow_O
  816 D1:C69C E7 02 D4 -  	.dl FrogChargeLit_Slow_F
  817 D1:C69F 0D 04 D4 -  	.dl FrogChargeLit_Slow_O_F
  818 D1:C6A2 B9 09 D4 -  	.dl FrogJump_Slow
  819 D1:C6A5 31 0B D4 -  	.dl FrogJump_Slow_O
  820 D1:C6A8 B3 0C D4 -  	.dl FrogJump_Slow_F
  821 D1:C6AB 2B 0E D4 -  	.dl FrogJump_Slow_O_F
  822 D1:C6AE AD 0F D4 -  	.dl FrogJumpMouth_Slow
  823 D1:C6B1 25 11 D4 -  	.dl FrogJumpMouth_Slow_O
  824 D1:C6B4 A7 12 D4 -  	.dl FrogJumpMouth_Slow_F
  825 D1:C6B7 1F 14 D4 -  	.dl FrogJumpMouth_Slow_O_F
  826 D1:C6BA A1 15 D4 -  	.dl FrogFall_Slow
  827 D1:C6BD 11 17 D4 -  	.dl FrogFall_Slow_O
  828 D1:C6C0 8B 18 D4 -  	.dl FrogFall_Slow_F
  829 D1:C6C3 FB 19 D4 -  	.dl FrogFall_Slow_O_F
  830 D1:C6C6 -  -  -  -  	
  831 D1:C6C6 -  -  -  -  	
  832 D1:C6C6 -  -  -  -  	
  833 D1:C6C6 -  -  -  -  	
  834 D1:C6C6 -  -  -  -  	
  835 D1:C6C6 -  -  -  -  	
  836 D1:C6C6 -  -  -  -  	
  837 D1:C6C6 -  -  -  -  	
  838 D1:C6C6 -  -  -  -  	
  839 D1:C6C6 -  -  -  -  	
  840 D1:C6C6 -  -  -  -  	
  841 D1:C6C6 -  -  -  -  	
  842 D1:C6C6 -  -  -  -  	
  843 D1:C6C6 -  -  -  -  	
  844 D1:C6C6 -  -  -  -  	
  845 D1:C6C6 -  -  -  -  	
  846 D1:C6C6 -  -  -  -  	
  847 D1:C6C6 -  -  -  -  	
  848 D1:C6C6 -  -  -  -  	
  849 D1:C6C6 -  -  -  -  	
Listing for file "ascent.asm"
  604 D1:C6C6 -  -  -  -  #include "sineFunc.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\sineFunc.txt"
    1 D1:C6C6 -  -  -  -  
    2 D1:C6C6 -  -  -  -  update_sine_vals:
    3 D1:C6C6 01 00 00 00 	ld bc,0
    4 D1:C6CA -  -  -  -  	
    5 D1:C6CA 3A 09 AC D1 	ld a, (frameCount+1);middle byte 
    6 D1:C6CE CB 3F -  -  	srl a ;put bit 0 to carry flag 
    7 D1:C6D0 3A 08 AC D1 	ld a, (frameCount)
    8 D1:C6D4 1F -  -  -  	rra ;a holds frame counter/2, ~16 second timer
    9 D1:C6D5 21 43 C7 D1 	ld hl,sine_modes_table
   10 D1:C6D9 08 -  -  -  	ex af,af' ;' ;in
   11 D1:C6DA 3E 14 -  -  	ld a,20
   12 D1:C6DC -  -  -  -  	
   13 D1:C6DC -  -  -  -  update_sine_loop:
   14 D1:C6DC 08 -  -  -  	ex af,af' ;' ;out
   15 D1:C6DD F5 -  -  -  	push af ;frame count 
   16 D1:C6DE ED 17 -  -  	ld de, (hl) ;de holds correct sine value table 
   17 D1:C6E0 23 -  -  -  	inc hl 
   18 D1:C6E1 23 -  -  -  	inc hl 
   19 D1:C6E2 23 -  -  -  	inc hl 
   20 D1:C6E3 E5 -  -  -  	push hl 
   21 D1:C6E4 CD 23 C7 D1 	call sine_apply_amplitudes
   22 D1:C6E8 E1 -  -  -  	pop hl
   23 D1:C6E9 F1 -  -  -  	pop af 
   24 D1:C6EA -  -  -  -  	;a holds frame count 
   25 D1:C6EA ED 17 -  -  	ld de, (hl) ;de holds lin value table
   26 D1:C6EC 23 -  -  -  	inc hl 
   27 D1:C6ED 23 -  -  -  	inc hl 
   28 D1:C6EE 23 -  -  -  	inc hl 
   29 D1:C6EF E5 -  -  -  	push hl 
   30 D1:C6F0 F5 -  -  -  	push af
   31 D1:C6F1 -  -  -  -  	;A holds frame count for linear curve
   32 D1:C6F1 CD 2A C7 D1 	call lin_apply_amplitudes
   33 D1:C6F5 F1 -  -  -  	pop af 
   34 D1:C6F6 E1 -  -  -  	pop hl
   35 D1:C6F7 F5 -  -  -  	push af
   36 D1:C6F8 ED 17 -  -  	ld de, (hl) ;de holds linrep value table
   37 D1:C6FA 23 -  -  -  	inc hl 
   38 D1:C6FB 23 -  -  -  	inc hl 
   39 D1:C6FC 23 -  -  -  	inc hl 
   40 D1:C6FD CB 7F -  -  	bit 7,a 
   41 D1:C6FF CA 05 C7 D1 	jp z,update_sine_skip_rep
   42 D1:C703 EE FF -  -  	xor %11111111 ;if a >127, negate it to reverse the time 
   43 D1:C705 -  -  -  -  update_sine_skip_rep:
   44 D1:C705 E5 -  -  -  	push hl
   45 D1:C706 EB -  -  -  	ex de,hl 	
   46 D1:C707 CD 2D C7 D1 	call linrep_apply_amplitudes
   47 D1:C70B E1 -  -  -  	pop hl
   48 D1:C70C F1 -  -  -  	pop af 
   49 D1:C70D 0E 40 -  -  	ld c,64 ;add quarter phase offset 
   50 D1:C70F 81 -  -  -  	add a,c 
   51 D1:C710 08 -  -  -  	ex af,af' ;' ;in
   52 D1:C711 3D -  -  -  	dec a 
   53 D1:C712 C8 -  -  -  	ret z 
   54 D1:C713 4F -  -  -  	ld c,a
   55 D1:C714 E6 03 -  -  	and %00000011 ;check last 2 bits
   56 D1:C716 79 -  -  -  	ld a,c
   57 D1:C717 C2 DC C6 D1 	jp nz,update_sine_loop
   58 D1:C71B -  -  -  -  	;otherwise, a is multiple of 4, multiply clock speed 
   59 D1:C71B 08 -  -  -  	ex af, af' ;' ;out
   60 D1:C71C CB 27 -  -  	sla a ;mult by 2 
   61 D1:C71E 08 -  -  -  	ex af, af' ;' ;in
   62 D1:C71F C3 DC C6 D1 	jp update_sine_loop
   63 D1:C723 -  -  -  -  	
   64 D1:C723 -  -  -  -  	
   65 D1:C723 -  -  -  -  	
   66 D1:C723 -  -  -  -  	
   67 D1:C723 -  -  -  -  	
   68 D1:C723 -  -  -  -  	
   69 D1:C723 -  -  -  -  sine_apply_amplitudes: ;a holds scaled frame count,de holds ptr to correct sine value table
   70 D1:C723 21 23 C9 D1 	ld hl, sine
   71 D1:C727 4F -  -  -  	ld c,a 
   72 D1:C728 09 -  -  -  	add hl,bc 
   73 D1:C729 7E -  -  -  	ld a,(hl); a holds sine value 
   74 D1:C72A -  -  -  -  lin_apply_amplitudes:
   75 D1:C72A EB -  -  -  	ex de,hl 
   76 D1:C72B CB 3F -  -  	srl a ;div 2 
   77 D1:C72D -  -  -  -  linrep_apply_amplitudes:
   78 D1:C72D CB 3F -  -  	srl a 
   79 D1:C72F CB 3F -  -  	srl a ;amplitude of 31 
   80 D1:C731 77 -  -  -  	ld (hl),a 
   81 D1:C732 23 -  -  -  	inc hl 
   82 D1:C733 CB 3F -  -  	srl a ;amplitude of 15 
   83 D1:C735 77 -  -  -  	ld (hl),a 
   84 D1:C736 23 -  -  -  	inc hl
   85 D1:C737 CB 3F -  -  	srl a ;amplitude of 7 
   86 D1:C739 77 -  -  -  	ld (hl),a 
   87 D1:C73A 23 -  -  -  	inc hl
   88 D1:C73B CB 3F -  -  	srl a ;amplitude of 3 
   89 D1:C73D 77 -  -  -  	ld (hl),a 
   90 D1:C73E 23 -  -  -  	inc hl
   91 D1:C73F CB 3F -  -  	srl a ;amplitude of 1 
   92 D1:C741 77 -  -  -  	ld (hl),a
   93 D1:C742 C9 -  -  -  	ret 
   94 D1:C743 -  -  -  -  
   95 D1:C743 -  -  -  -  
   96 D1:C743 -  -  -  -  
   97 D1:C743 -  -  -  -  sine_modes_table:
   98 D1:C743 F7 C7 D1 -  	.dl sine_05_1
   99 D1:C746 5B C8 D1 -  	.dl lin_05_1
  100 D1:C749 BF C8 D1 -  	.dl linrep_05_1
  101 D1:C74C FC C7 D1 -  	.dl sine_05_2
  102 D1:C74F 60 C8 D1 -  	.dl lin_05_2
  103 D1:C752 C4 C8 D1 -  	.dl linrep_05_2
  104 D1:C755 01 C8 D1 -  	.dl sine_05_3
  105 D1:C758 65 C8 D1 -  	.dl lin_05_3
  106 D1:C75B C9 C8 D1 -  	.dl linrep_05_3
  107 D1:C75E 06 C8 D1 -  	.dl sine_05_4
  108 D1:C761 6A C8 D1 -  	.dl lin_05_4
  109 D1:C764 CE C8 D1 -  	.dl linrep_05_4
  110 D1:C767 -  -  -  -  	
  111 D1:C767 0B C8 D1 -  	.dl sine_1_1
  112 D1:C76A 6F C8 D1 -  	.dl lin_1_1
  113 D1:C76D D3 C8 D1 -  	.dl linrep_1_1
  114 D1:C770 10 C8 D1 -  	.dl sine_1_2
  115 D1:C773 74 C8 D1 -  	.dl lin_1_2
  116 D1:C776 D8 C8 D1 -  	.dl linrep_1_2
  117 D1:C779 15 C8 D1 -  	.dl sine_1_3
  118 D1:C77C 79 C8 D1 -  	.dl lin_1_3
  119 D1:C77F DD C8 D1 -  	.dl linrep_1_3
  120 D1:C782 1A C8 D1 -  	.dl sine_1_4
  121 D1:C785 7E C8 D1 -  	.dl lin_1_4
  122 D1:C788 E2 C8 D1 -  	.dl linrep_1_4
  123 D1:C78B -  -  -  -  	
  124 D1:C78B 1F C8 D1 -  	.dl sine_2_1
  125 D1:C78E 83 C8 D1 -  	.dl lin_2_1
  126 D1:C791 E7 C8 D1 -  	.dl linrep_2_1
  127 D1:C794 24 C8 D1 -  	.dl sine_2_2
  128 D1:C797 88 C8 D1 -  	.dl lin_2_2
  129 D1:C79A EC C8 D1 -  	.dl linrep_2_2
  130 D1:C79D 29 C8 D1 -  	.dl sine_2_3
  131 D1:C7A0 8D C8 D1 -  	.dl lin_2_3
  132 D1:C7A3 F1 C8 D1 -  	.dl linrep_2_3
  133 D1:C7A6 2E C8 D1 -  	.dl sine_2_4
  134 D1:C7A9 92 C8 D1 -  	.dl lin_2_4
  135 D1:C7AC F6 C8 D1 -  	.dl linrep_2_4
  136 D1:C7AF -  -  -  -  	
  137 D1:C7AF 33 C8 D1 -  	.dl sine_4_1
  138 D1:C7B2 97 C8 D1 -  	.dl lin_4_1
  139 D1:C7B5 FB C8 D1 -  	.dl linrep_4_1
  140 D1:C7B8 38 C8 D1 -  	.dl sine_4_2
  141 D1:C7BB 9C C8 D1 -  	.dl lin_4_2
  142 D1:C7BE 00 C9 D1 -  	.dl linrep_4_2
  143 D1:C7C1 3D C8 D1 -  	.dl sine_4_3
  144 D1:C7C4 A1 C8 D1 -  	.dl lin_4_3
  145 D1:C7C7 05 C9 D1 -  	.dl linrep_4_3
  146 D1:C7CA 42 C8 D1 -  	.dl sine_4_4
  147 D1:C7CD A6 C8 D1 -  	.dl lin_4_4
  148 D1:C7D0 0A C9 D1 -  	.dl linrep_4_4
  149 D1:C7D3 -  -  -  -  
  150 D1:C7D3 47 C8 D1 -  	.dl sine_8_1
  151 D1:C7D6 AB C8 D1 -  	.dl lin_8_1
  152 D1:C7D9 0F C9 D1 -  	.dl linrep_8_1
  153 D1:C7DC 4C C8 D1 -  	.dl sine_8_2
  154 D1:C7DF B0 C8 D1 -  	.dl lin_8_2
  155 D1:C7E2 14 C9 D1 -  	.dl linrep_8_2
  156 D1:C7E5 51 C8 D1 -  	.dl sine_8_3
  157 D1:C7E8 B5 C8 D1 -  	.dl lin_8_3
  158 D1:C7EB 19 C9 D1 -  	.dl linrep_8_3
  159 D1:C7EE 56 C8 D1 -  	.dl sine_8_4
  160 D1:C7F1 BA C8 D1 -  	.dl lin_8_4
  161 D1:C7F4 1E C9 D1 -  	.dl linrep_8_4
  162 D1:C7F7 -  -  -  -  
  163 D1:C7F7 -  -  -  -  
  164 D1:C7F7 -  -  -  -  
  165 D1:C7F7 -  -  -  -  
  166 D1:C7F7 -  -  -  -  sine_05_1: ;half frequency, no phase shift
  167 D1:C7F7 -  -  -  -  sine_05_31_1: ;freqMult, amplitude, phase 
  168 D1:C7F7 00 -  -  -  	.db 0  
  169 D1:C7F8 -  -  -  -  sine_05_15_1: ;freqMult, amplitude, phase 
  170 D1:C7F8 00 -  -  -  	.db 0 
  171 D1:C7F9 -  -  -  -  sine_05_7_1: ;freqMult, amplitude, phase 
  172 D1:C7F9 00 -  -  -  	.db 0 
  173 D1:C7FA -  -  -  -  sine_05_3_1: ;freqMult, amplitude, phase 
  174 D1:C7FA 00 -  -  -  	.db 0 
  175 D1:C7FB -  -  -  -  sine_05_1_1: ;freqMult, amplitude, phase 
  176 D1:C7FB 00 -  -  -  	.db 0 
  177 D1:C7FC -  -  -  -  
  178 D1:C7FC -  -  -  -  	
  179 D1:C7FC -  -  -  -  	
  180 D1:C7FC -  -  -  -  sine_05_2: ;half frequency, no phase shift 
  181 D1:C7FC -  -  -  -  sine_05_31_2: ;freqMult, amplitude, phase 
  182 D1:C7FC 00 -  -  -  	.db 0 
  183 D1:C7FD -  -  -  -  sine_05_15_2: ;freqMult, amplitude, phase 
  184 D1:C7FD 00 -  -  -  	.db 0 
  185 D1:C7FE -  -  -  -  sine_05_7_2: ;freqMult, amplitude, phase 
  186 D1:C7FE 00 -  -  -  	.db 0 
  187 D1:C7FF -  -  -  -  sine_05_3_2: ;freqMult, amplitude, phase 
  188 D1:C7FF 00 -  -  -  	.db 0 
  189 D1:C800 -  -  -  -  sine_05_1_2: ;freqMult, amplitude, phase 
  190 D1:C800 00 -  -  -  	.db 0 
  191 D1:C801 -  -  -  -  
  192 D1:C801 -  -  -  -  	
  193 D1:C801 -  -  -  -  sine_05_3: ;half frequency, no phase shift
  194 D1:C801 -  -  -  -  sine_05_31_3: ;freqMult, amplitude, phase 
  195 D1:C801 00 -  -  -  	.db 0  
  196 D1:C802 -  -  -  -  sine_05_15_3: ;freqMult, amplitude, phase 
  197 D1:C802 00 -  -  -  	.db 0 
  198 D1:C803 -  -  -  -  sine_05_7_3: ;freqMult, amplitude, phase 
  199 D1:C803 00 -  -  -  	.db 0 
  200 D1:C804 -  -  -  -  sine_05_3_3: ;freqMult, amplitude, phase 
  201 D1:C804 00 -  -  -  	.db 0 
  202 D1:C805 -  -  -  -  sine_05_1_3: ;freqMult, amplitude, phase 
  203 D1:C805 00 -  -  -  	.db 0 
  204 D1:C806 -  -  -  -  
  205 D1:C806 -  -  -  -  
  206 D1:C806 -  -  -  -  sine_05_4: ;half frequency, no phase shift 
  207 D1:C806 -  -  -  -  sine_05_31_4: ;freqMult, amplitude, phase 
  208 D1:C806 00 -  -  -  	.db 0
  209 D1:C807 -  -  -  -  sine_05_15_4: ;freqMult, amplitude, phase 
  210 D1:C807 00 -  -  -  	.db 0 
  211 D1:C808 -  -  -  -  sine_05_7_4: ;freqMult, amplitude, phase 
  212 D1:C808 00 -  -  -  	.db 0 
  213 D1:C809 -  -  -  -  sine_05_3_4: ;freqMult, amplitude, phase 
  214 D1:C809 00 -  -  -  	.db 0 
  215 D1:C80A -  -  -  -  sine_05_1_4: ;freqMult, amplitude, phase 
  216 D1:C80A 00 -  -  -  	.db 0 
  217 D1:C80B -  -  -  -  
  218 D1:C80B -  -  -  -  
  219 D1:C80B -  -  -  -  	
  220 D1:C80B -  -  -  -  sine_1_1: ;no freq mult, no phase shift
  221 D1:C80B -  -  -  -  sine_1_31_1: ;freqMult, amplitude, phase 
  222 D1:C80B 00 -  -  -  	.db 0  
  223 D1:C80C -  -  -  -  sine_1_15_1: ;freqMult, amplitude, phase 
  224 D1:C80C 00 -  -  -  	.db 0 
  225 D1:C80D -  -  -  -  sine_1_7_1: ;freqMult, amplitude, phase 
  226 D1:C80D 00 -  -  -  	.db 0 
  227 D1:C80E -  -  -  -  sine_1_3_1: ;freqMult, amplitude, phase 
  228 D1:C80E 00 -  -  -  	.db 0 
  229 D1:C80F -  -  -  -  sine_1_1_1: ;freqMult, amplitude, phase 
  230 D1:C80F 00 -  -  -  	.db 0 
  231 D1:C810 -  -  -  -  
  232 D1:C810 -  -  -  -  	
  233 D1:C810 -  -  -  -  sine_1_2: ;no freq mult, no phase shift 
  234 D1:C810 -  -  -  -  sine_1_31_2: ;freqMult, amplitude, phase 
  235 D1:C810 00 -  -  -  	.db 0 
  236 D1:C811 -  -  -  -  sine_1_15_2: ;freqMult, amplitude, phase 
  237 D1:C811 00 -  -  -  	.db 0 
  238 D1:C812 -  -  -  -  sine_1_7_2: ;freqMult, amplitude, phase 
  239 D1:C812 00 -  -  -  	.db 0 
  240 D1:C813 -  -  -  -  sine_1_3_2: ;freqMult, amplitude, phase 
  241 D1:C813 00 -  -  -  	.db 0 
  242 D1:C814 -  -  -  -  sine_1_1_2: ;freqMult, amplitude, phase 
  243 D1:C814 00 -  -  -  	.db 0 
  244 D1:C815 -  -  -  -  
  245 D1:C815 -  -  -  -  sine_1_3: ;no freq mult, no phase shift 
  246 D1:C815 -  -  -  -  sine_1_31_3: ;freqMult, amplitude, phase 
  247 D1:C815 00 -  -  -  	.db 0 
  248 D1:C816 -  -  -  -  sine_1_15_3: ;freqMult, amplitude, phase 
  249 D1:C816 00 -  -  -  	.db 0 
  250 D1:C817 -  -  -  -  sine_1_7_3: ;freqMult, amplitude, phase 
  251 D1:C817 00 -  -  -  	.db 0 
  252 D1:C818 -  -  -  -  sine_1_3_3: ;freqMult, amplitude, phase 
  253 D1:C818 00 -  -  -  	.db 0 
  254 D1:C819 -  -  -  -  sine_1_1_3: ;freqMult, amplitude, phase 
  255 D1:C819 00 -  -  -  	.db 0 
  256 D1:C81A -  -  -  -  
  257 D1:C81A -  -  -  -  	
  258 D1:C81A -  -  -  -  sine_1_4: ;no freq mult, no phase shift
  259 D1:C81A -  -  -  -  sine_1_31_4: ;freqMult, amplitude, phase 
  260 D1:C81A 00 -  -  -  	.db 0  
  261 D1:C81B -  -  -  -  sine_1_15_4: ;freqMult, amplitude, phase 
  262 D1:C81B 00 -  -  -  	.db 0 
  263 D1:C81C -  -  -  -  sine_1_7_4: ;freqMult, amplitude, phase 
  264 D1:C81C 00 -  -  -  	.db 0 
  265 D1:C81D -  -  -  -  sine_1_3_4: ;freqMult, amplitude, phase 
  266 D1:C81D 00 -  -  -  	.db 0 
  267 D1:C81E -  -  -  -  sine_1_1_4: ;freqMult, amplitude, phase 
  268 D1:C81E 00 -  -  -  	.db 0 
  269 D1:C81F -  -  -  -  
  270 D1:C81F -  -  -  -  
  271 D1:C81F -  -  -  -  
  272 D1:C81F -  -  -  -  
  273 D1:C81F -  -  -  -  sine_2_1: ;double freq mult
  274 D1:C81F -  -  -  -  sine_2_31_1: ;freqMult, amplitude, phase 
  275 D1:C81F 00 -  -  -  	.db 0 
  276 D1:C820 -  -  -  -  sine_2_15_1: ;freqMult, amplitude, phase 
  277 D1:C820 00 -  -  -  	.db 0 
  278 D1:C821 -  -  -  -  sine_2_7_1: ;freqMult, amplitude, phase 
  279 D1:C821 00 -  -  -  	.db 0 
  280 D1:C822 -  -  -  -  sine_2_3_1: ;freqMult, amplitude, phase 
  281 D1:C822 00 -  -  -  	.db 0 
  282 D1:C823 -  -  -  -  sine_2_1_1: ;freqMult, amplitude, phase 
  283 D1:C823 00 -  -  -  	.db 0 
  284 D1:C824 -  -  -  -  
  285 D1:C824 -  -  -  -  	
  286 D1:C824 -  -  -  -  sine_2_2: 
  287 D1:C824 -  -  -  -  sine_2_31_2: ;freqMult, amplitude, phase 
  288 D1:C824 00 -  -  -  	.db 0 
  289 D1:C825 -  -  -  -  sine_2_15_2: ;freqMult, amplitude, phase 
  290 D1:C825 00 -  -  -  	.db 0 
  291 D1:C826 -  -  -  -  sine_2_7_2: ;freqMult, amplitude, phase 
  292 D1:C826 00 -  -  -  	.db 0 
  293 D1:C827 -  -  -  -  sine_2_3_2: ;freqMult, amplitude, phase 
  294 D1:C827 00 -  -  -  	.db 0 
  295 D1:C828 -  -  -  -  sine_2_1_2: ;freqMult, amplitude, phase 
  296 D1:C828 00 -  -  -  	.db 0 
  297 D1:C829 -  -  -  -  
  298 D1:C829 -  -  -  -  	
  299 D1:C829 -  -  -  -  sine_2_3: 
  300 D1:C829 -  -  -  -  sine_2_31_3: ;freqMult, amplitude, phase 
  301 D1:C829 00 -  -  -  	.db 0 
  302 D1:C82A -  -  -  -  sine_2_15_3: ;freqMult, amplitude, phase 
  303 D1:C82A 00 -  -  -  	.db 0 
  304 D1:C82B -  -  -  -  sine_2_7_3: ;freqMult, amplitude, phase 
  305 D1:C82B 00 -  -  -  	.db 0 
  306 D1:C82C -  -  -  -  sine_2_3_3: ;freqMult, amplitude, phase 
  307 D1:C82C 00 -  -  -  	.db 0 
  308 D1:C82D -  -  -  -  sine_2_1_3: ;freqMult, amplitude, phase 
  309 D1:C82D 00 -  -  -  	.db 0 
  310 D1:C82E -  -  -  -  
  311 D1:C82E -  -  -  -  	
  312 D1:C82E -  -  -  -  sine_2_4: 
  313 D1:C82E -  -  -  -  sine_2_31_4: ;freqMult, amplitude, phase 
  314 D1:C82E 00 -  -  -  	.db 0	
  315 D1:C82F -  -  -  -  sine_2_15_4: ;freqMult, amplitude, phase 
  316 D1:C82F 00 -  -  -  	.db 0 
  317 D1:C830 -  -  -  -  sine_2_7_4: ;freqMult, amplitude, phase 
  318 D1:C830 00 -  -  -  	.db 0 
  319 D1:C831 -  -  -  -  sine_2_3_4: ;freqMult, amplitude, phase 
  320 D1:C831 00 -  -  -  	.db 0 
  321 D1:C832 -  -  -  -  sine_2_1_4: ;freqMult, amplitude, phase 
  322 D1:C832 00 -  -  -  	.db 0 
  323 D1:C833 -  -  -  -  
  324 D1:C833 -  -  -  -  
  325 D1:C833 -  -  -  -  
  326 D1:C833 -  -  -  -  
  327 D1:C833 -  -  -  -  sine_4_1: ;double freq mult
  328 D1:C833 -  -  -  -  sine_4_31_1: ;freqMult, amplitude, phase 
  329 D1:C833 00 -  -  -  	.db 0 
  330 D1:C834 -  -  -  -  sine_4_15_1: ;freqMult, amplitude, phase 
  331 D1:C834 00 -  -  -  	.db 0 
  332 D1:C835 -  -  -  -  sine_4_7_1: ;freqMult, amplitude, phase 
  333 D1:C835 00 -  -  -  	.db 0 
  334 D1:C836 -  -  -  -  sine_4_3_1: ;freqMult, amplitude, phase 
  335 D1:C836 00 -  -  -  	.db 0 
  336 D1:C837 -  -  -  -  sine_4_1_1: ;freqMult, amplitude, phase 
  337 D1:C837 00 -  -  -  	.db 0 
  338 D1:C838 -  -  -  -  
  339 D1:C838 -  -  -  -  	
  340 D1:C838 -  -  -  -  sine_4_2: 
  341 D1:C838 -  -  -  -  sine_4_31_2: ;freqMult, amplitude, phase 
  342 D1:C838 00 -  -  -  	.db 0
  343 D1:C839 -  -  -  -  sine_4_15_2: ;freqMult, amplitude, phase 
  344 D1:C839 00 -  -  -  	.db 0 
  345 D1:C83A -  -  -  -  sine_4_7_2: ;freqMult, amplitude, phase 
  346 D1:C83A 00 -  -  -  	.db 0 
  347 D1:C83B -  -  -  -  sine_4_3_2: ;freqMult, amplitude, phase 
  348 D1:C83B 00 -  -  -  	.db 0 
  349 D1:C83C -  -  -  -  sine_4_1_2: ;freqMult, amplitude, phase 
  350 D1:C83C 00 -  -  -  	.db 0 
  351 D1:C83D -  -  -  -  
  352 D1:C83D -  -  -  -  	
  353 D1:C83D -  -  -  -  sine_4_3: 
  354 D1:C83D -  -  -  -  sine_4_31_3: ;freqMult, amplitude, phase 
  355 D1:C83D 00 -  -  -  	.db 0 
  356 D1:C83E -  -  -  -  sine_4_15_3: ;freqMult, amplitude, phase 
  357 D1:C83E 00 -  -  -  	.db 0 
  358 D1:C83F -  -  -  -  sine_4_7_3: ;freqMult, amplitude, phase 
  359 D1:C83F 00 -  -  -  	.db 0 
  360 D1:C840 -  -  -  -  sine_4_3_3: ;freqMult, amplitude, phase 
  361 D1:C840 00 -  -  -  	.db 0 
  362 D1:C841 -  -  -  -  sine_4_1_3: ;freqMult, amplitude, phase 
  363 D1:C841 00 -  -  -  	.db 0 
  364 D1:C842 -  -  -  -  
  365 D1:C842 -  -  -  -  	
  366 D1:C842 -  -  -  -  sine_4_4: 
  367 D1:C842 -  -  -  -  sine_4_314: ;freqMult, amplitude, phase 
  368 D1:C842 00 -  -  -  	.db 0
  369 D1:C843 -  -  -  -  sine_4_15_4: ;freqMult, amplitude, phase 
  370 D1:C843 00 -  -  -  	.db 0 
  371 D1:C844 -  -  -  -  sine_4_7_4: ;freqMult, amplitude, phase 
  372 D1:C844 00 -  -  -  	.db 0 
  373 D1:C845 -  -  -  -  sine_4_3_4: ;freqMult, amplitude, phase 
  374 D1:C845 00 -  -  -  	.db 0 
  375 D1:C846 -  -  -  -  sine_4_1_4: ;freqMult, amplitude, phase 
  376 D1:C846 00 -  -  -  	.db 0 
  377 D1:C847 -  -  -  -  
  378 D1:C847 -  -  -  -  
  379 D1:C847 -  -  -  -  
  380 D1:C847 -  -  -  -  
  381 D1:C847 -  -  -  -  
  382 D1:C847 -  -  -  -  sine_8_1: ;double freq mult
  383 D1:C847 -  -  -  -  sine_8_31_1: ;freqMult, amplitude, phase 
  384 D1:C847 00 -  -  -  	.db 0 
  385 D1:C848 -  -  -  -  sine_8_15_1: ;freqMult, amplitude, phase 
  386 D1:C848 00 -  -  -  	.db 0 
  387 D1:C849 -  -  -  -  sine_8_7_1: ;freqMult, amplitude, phase 
  388 D1:C849 00 -  -  -  	.db 0 
  389 D1:C84A -  -  -  -  sine_8_3_1: ;freqMult, amplitude, phase 
  390 D1:C84A 00 -  -  -  	.db 0 
  391 D1:C84B -  -  -  -  sine_8_1_1: ;freqMult, amplitude, phase 
  392 D1:C84B 00 -  -  -  	.db 0 
  393 D1:C84C -  -  -  -  
  394 D1:C84C -  -  -  -  	
  395 D1:C84C -  -  -  -  sine_8_2: 
  396 D1:C84C -  -  -  -  sine_8_31_2: ;freqMult, amplitude, phase 
  397 D1:C84C 00 -  -  -  	.db 0 
  398 D1:C84D -  -  -  -  sine_8_15_2: ;freqMult, amplitude, phase 
  399 D1:C84D 00 -  -  -  	.db 0 
  400 D1:C84E -  -  -  -  sine_8_7_2: ;freqMult, amplitude, phase 
  401 D1:C84E 00 -  -  -  	.db 0 
  402 D1:C84F -  -  -  -  sine_8_3_2: ;freqMult, amplitude, phase 
  403 D1:C84F 00 -  -  -  	.db 0 
  404 D1:C850 -  -  -  -  sine_8_1_2: ;freqMult, amplitude, phase 
  405 D1:C850 00 -  -  -  	.db 0 
  406 D1:C851 -  -  -  -  
  407 D1:C851 -  -  -  -  	
  408 D1:C851 -  -  -  -  sine_8_3: 
  409 D1:C851 -  -  -  -  sine_8_313: ;freqMult, amplitude, phase 
  410 D1:C851 00 -  -  -  	.db 0 
  411 D1:C852 -  -  -  -  sine_8_15_3: ;freqMult, amplitude, phase 
  412 D1:C852 00 -  -  -  	.db 0 
  413 D1:C853 -  -  -  -  sine_8_7_3: ;freqMult, amplitude, phase 
  414 D1:C853 00 -  -  -  	.db 0 
  415 D1:C854 -  -  -  -  sine_8_3_3: ;freqMult, amplitude, phase 
  416 D1:C854 00 -  -  -  	.db 0 
  417 D1:C855 -  -  -  -  sine_8_1_3: ;freqMult, amplitude, phase 
  418 D1:C855 00 -  -  -  	.db 0 
  419 D1:C856 -  -  -  -  
  420 D1:C856 -  -  -  -  	
  421 D1:C856 -  -  -  -  sine_8_4: 
  422 D1:C856 -  -  -  -  sine_8_31_4: ;freqMult, amplitude, phase 
  423 D1:C856 00 -  -  -  	.db 0
  424 D1:C857 -  -  -  -  sine_8_15_4: ;freqMult, amplitude, phase 
  425 D1:C857 00 -  -  -  	.db 0 
  426 D1:C858 -  -  -  -  sine_8_7_4: ;freqMult, amplitude, phase 
  427 D1:C858 00 -  -  -  	.db 0 
  428 D1:C859 -  -  -  -  sine_8_3_4: ;freqMult, amplitude, phase 
  429 D1:C859 00 -  -  -  	.db 0 
  430 D1:C85A -  -  -  -  sine_8_1_4: ;freqMult, amplitude, phase 
  431 D1:C85A 00 -  -  -  	.db 0 
  432 D1:C85B -  -  -  -  
  433 D1:C85B -  -  -  -  
  434 D1:C85B -  -  -  -  
  435 D1:C85B -  -  -  -  
  436 D1:C85B -  -  -  -  lin_05_1:
  437 D1:C85B -  -  -  -  lin_05_31_1:
  438 D1:C85B 00 -  -  -  	.db 0 
  439 D1:C85C -  -  -  -  lin_05_15_1:
  440 D1:C85C 00 -  -  -  	.db 0 
  441 D1:C85D -  -  -  -  lin_05_7_1:
  442 D1:C85D 00 -  -  -  	.db 0 
  443 D1:C85E -  -  -  -  lin_05_3_1:
  444 D1:C85E 00 -  -  -  	.db 0 
  445 D1:C85F -  -  -  -  lin_05_1_1:
  446 D1:C85F 00 -  -  -  	.db 0 
  447 D1:C860 -  -  -  -  
  448 D1:C860 -  -  -  -  lin_05_2:
  449 D1:C860 -  -  -  -  lin_05_31_2:
  450 D1:C860 00 -  -  -  	.db 0 
  451 D1:C861 -  -  -  -  lin_05_15_2:
  452 D1:C861 00 -  -  -  	.db 0 
  453 D1:C862 -  -  -  -  lin_05_7_2:
  454 D1:C862 00 -  -  -  	.db 0 
  455 D1:C863 -  -  -  -  lin_05_3_2:
  456 D1:C863 00 -  -  -  	.db 0 
  457 D1:C864 -  -  -  -  lin_05_1_2:
  458 D1:C864 00 -  -  -  	.db 0 	
  459 D1:C865 -  -  -  -  	
  460 D1:C865 -  -  -  -  lin_05_3:
  461 D1:C865 -  -  -  -  lin_05_31_3:
  462 D1:C865 00 -  -  -  	.db 0 
  463 D1:C866 -  -  -  -  lin_05_15_3:
  464 D1:C866 00 -  -  -  	.db 0 
  465 D1:C867 -  -  -  -  lin_05_7_3:
  466 D1:C867 00 -  -  -  	.db 0 
  467 D1:C868 -  -  -  -  lin_05_3_3:
  468 D1:C868 00 -  -  -  	.db 0 
  469 D1:C869 -  -  -  -  lin_05_1_3:
  470 D1:C869 00 -  -  -  	.db 0 	
  471 D1:C86A -  -  -  -  	
  472 D1:C86A -  -  -  -  lin_05_4:
  473 D1:C86A -  -  -  -  lin_05_31_4:
  474 D1:C86A 00 -  -  -  	.db 0 
  475 D1:C86B -  -  -  -  lin_05_15_4:
  476 D1:C86B 00 -  -  -  	.db 0 
  477 D1:C86C -  -  -  -  lin_05_7_4:
  478 D1:C86C 00 -  -  -  	.db 0 
  479 D1:C86D -  -  -  -  lin_05_3_4:
  480 D1:C86D 00 -  -  -  	.db 0 
  481 D1:C86E -  -  -  -  lin_05_1_4:
  482 D1:C86E 00 -  -  -  	.db 0 
  483 D1:C86F -  -  -  -  
  484 D1:C86F -  -  -  -  lin_1_1:
  485 D1:C86F -  -  -  -  lin_1_31_1:
  486 D1:C86F 00 -  -  -  	.db 0 
  487 D1:C870 -  -  -  -  lin_1_15_1:
  488 D1:C870 00 -  -  -  	.db 0 
  489 D1:C871 -  -  -  -  lin_1_7_1:
  490 D1:C871 00 -  -  -  	.db 0 
  491 D1:C872 -  -  -  -  lin_1_3_1:
  492 D1:C872 00 -  -  -  	.db 0
  493 D1:C873 -  -  -  -  lin_1_1_1:
  494 D1:C873 00 -  -  -  	.db 0 	
  495 D1:C874 -  -  -  -  
  496 D1:C874 -  -  -  -  lin_1_2:
  497 D1:C874 -  -  -  -  lin_1_31_2:
  498 D1:C874 00 -  -  -  	.db 0 
  499 D1:C875 -  -  -  -  lin_1_15_2:
  500 D1:C875 00 -  -  -  	.db 0 
  501 D1:C876 -  -  -  -  lin_1_7_2:
  502 D1:C876 00 -  -  -  	.db 0 
  503 D1:C877 -  -  -  -  lin_1_3_2:
  504 D1:C877 00 -  -  -  	.db 0 
  505 D1:C878 -  -  -  -  lin_1_1_2:
  506 D1:C878 00 -  -  -  	.db 0 
  507 D1:C879 -  -  -  -  	
  508 D1:C879 -  -  -  -  lin_1_3:
  509 D1:C879 -  -  -  -  lin_1_31_3:
  510 D1:C879 00 -  -  -  	.db 0 
  511 D1:C87A -  -  -  -  lin_1_15_3:
  512 D1:C87A 00 -  -  -  	.db 0 
  513 D1:C87B -  -  -  -  lin_1_7_3:
  514 D1:C87B 00 -  -  -  	.db 0 
  515 D1:C87C -  -  -  -  lin_1_3_3:
  516 D1:C87C 00 -  -  -  	.db 0 
  517 D1:C87D -  -  -  -  lin_1_1_3:
  518 D1:C87D 00 -  -  -  	.db 0 
  519 D1:C87E -  -  -  -  	
  520 D1:C87E -  -  -  -  lin_1_4:
  521 D1:C87E -  -  -  -  lin_1_31_4:
  522 D1:C87E 00 -  -  -  	.db 0 
  523 D1:C87F -  -  -  -  lin_1_15_4:
  524 D1:C87F 00 -  -  -  	.db 0 
  525 D1:C880 -  -  -  -  lin_1_7_4:
  526 D1:C880 00 -  -  -  	.db 0 
  527 D1:C881 -  -  -  -  lin_1_3_4:
  528 D1:C881 00 -  -  -  	.db 0 
  529 D1:C882 -  -  -  -  lin_1_1_4:
  530 D1:C882 00 -  -  -  	.db 0 
  531 D1:C883 -  -  -  -  	
  532 D1:C883 -  -  -  -  lin_2_1:
  533 D1:C883 -  -  -  -  lin_2_31_1:
  534 D1:C883 00 -  -  -  	.db 0 
  535 D1:C884 -  -  -  -  lin_2_15_1:
  536 D1:C884 00 -  -  -  	.db 0 
  537 D1:C885 -  -  -  -  lin_2_7_1:
  538 D1:C885 00 -  -  -  	.db 0 
  539 D1:C886 -  -  -  -  lin_2_3_1:
  540 D1:C886 00 -  -  -  	.db 0 
  541 D1:C887 -  -  -  -  lin_2_1_1:
  542 D1:C887 00 -  -  -  	.db 0
  543 D1:C888 -  -  -  -  
  544 D1:C888 -  -  -  -  lin_2_2:
  545 D1:C888 -  -  -  -  lin_2_31_2:
  546 D1:C888 00 -  -  -  	.db 0 
  547 D1:C889 -  -  -  -  lin_2_15_2:
  548 D1:C889 00 -  -  -  	.db 0 
  549 D1:C88A -  -  -  -  lin_2_7_2:
  550 D1:C88A 00 -  -  -  	.db 0 
  551 D1:C88B -  -  -  -  lin_2_3_2:
  552 D1:C88B 00 -  -  -  	.db 0 
  553 D1:C88C -  -  -  -  lin_2_1_2:
  554 D1:C88C 00 -  -  -  	.db 0 
  555 D1:C88D -  -  -  -  	
  556 D1:C88D -  -  -  -  lin_2_3:
  557 D1:C88D -  -  -  -  lin_2_31_3:
  558 D1:C88D 00 -  -  -  	.db 0 
  559 D1:C88E -  -  -  -  lin_2_15_3:
  560 D1:C88E 00 -  -  -  	.db 0 
  561 D1:C88F -  -  -  -  lin_2_7_3:
  562 D1:C88F 00 -  -  -  	.db 0 
  563 D1:C890 -  -  -  -  lin_2_3_3:
  564 D1:C890 00 -  -  -  	.db 0 
  565 D1:C891 -  -  -  -  lin_2_1_3:
  566 D1:C891 00 -  -  -  	.db 0 
  567 D1:C892 -  -  -  -  	
  568 D1:C892 -  -  -  -  lin_2_4:
  569 D1:C892 -  -  -  -  lin_2_31_4:
  570 D1:C892 00 -  -  -  	.db 0 
  571 D1:C893 -  -  -  -  lin_2_15_4:
  572 D1:C893 00 -  -  -  	.db 0 
  573 D1:C894 -  -  -  -  lin_2_7_4:
  574 D1:C894 00 -  -  -  	.db 0 
  575 D1:C895 -  -  -  -  lin_2_3_4:
  576 D1:C895 00 -  -  -  	.db 0 
  577 D1:C896 -  -  -  -  lin_2_1_4:
  578 D1:C896 00 -  -  -  	.db 0 
  579 D1:C897 -  -  -  -  	
  580 D1:C897 -  -  -  -  lin_4_1:
  581 D1:C897 -  -  -  -  lin_4_31_1:
  582 D1:C897 00 -  -  -  	.db 0 
  583 D1:C898 -  -  -  -  lin_4_15_1:
  584 D1:C898 00 -  -  -  	.db 0 
  585 D1:C899 -  -  -  -  lin_4_7_1:
  586 D1:C899 00 -  -  -  	.db 0 
  587 D1:C89A -  -  -  -  lin_4_3_1:
  588 D1:C89A 00 -  -  -  	.db 0 
  589 D1:C89B -  -  -  -  lin_4_1_1:
  590 D1:C89B 00 -  -  -  	.db 0 
  591 D1:C89C -  -  -  -  
  592 D1:C89C -  -  -  -  
  593 D1:C89C -  -  -  -  lin_4_2:
  594 D1:C89C -  -  -  -  lin_4_31_2:
  595 D1:C89C 00 -  -  -  	.db 0 
  596 D1:C89D -  -  -  -  lin_4_15_2:
  597 D1:C89D 00 -  -  -  	.db 0 
  598 D1:C89E -  -  -  -  lin_4_7_2:
  599 D1:C89E 00 -  -  -  	.db 0 
  600 D1:C89F -  -  -  -  lin_4_3_2:
  601 D1:C89F 00 -  -  -  	.db 0 
  602 D1:C8A0 -  -  -  -  lin_4_1_2:
  603 D1:C8A0 00 -  -  -  	.db 0 
  604 D1:C8A1 -  -  -  -  	
  605 D1:C8A1 -  -  -  -  lin_4_3:
  606 D1:C8A1 -  -  -  -  lin_4_31_3:
  607 D1:C8A1 00 -  -  -  	.db 0 
  608 D1:C8A2 -  -  -  -  lin_4_15_3:
  609 D1:C8A2 00 -  -  -  	.db 0 
  610 D1:C8A3 -  -  -  -  lin_4_7_3:
  611 D1:C8A3 00 -  -  -  	.db 0 
  612 D1:C8A4 -  -  -  -  lin_4_3_3:
  613 D1:C8A4 00 -  -  -  	.db 0 
  614 D1:C8A5 -  -  -  -  lin_4_1_3:
  615 D1:C8A5 00 -  -  -  	.db 0 
  616 D1:C8A6 -  -  -  -  	
  617 D1:C8A6 -  -  -  -  lin_4_4:
  618 D1:C8A6 -  -  -  -  lin_4_31_4:
  619 D1:C8A6 00 -  -  -  	.db 0 
  620 D1:C8A7 -  -  -  -  lin_4_15_4:
  621 D1:C8A7 00 -  -  -  	.db 0 
  622 D1:C8A8 -  -  -  -  lin_4_7_4:
  623 D1:C8A8 00 -  -  -  	.db 0 
  624 D1:C8A9 -  -  -  -  lin_4_3_4:
  625 D1:C8A9 00 -  -  -  	.db 0 
  626 D1:C8AA -  -  -  -  lin_4_1_4:
  627 D1:C8AA 00 -  -  -  	.db 0 
  628 D1:C8AB -  -  -  -  	
  629 D1:C8AB -  -  -  -  	
  630 D1:C8AB -  -  -  -  lin_8_1:
  631 D1:C8AB -  -  -  -  lin_8_31_1:
  632 D1:C8AB 00 -  -  -  	.db 0 
  633 D1:C8AC -  -  -  -  lin_8_15_1:
  634 D1:C8AC 00 -  -  -  	.db 0 
  635 D1:C8AD -  -  -  -  lin_8_7_1:
  636 D1:C8AD 00 -  -  -  	.db 0 
  637 D1:C8AE -  -  -  -  lin_8_3_1:
  638 D1:C8AE 00 -  -  -  	.db 0 
  639 D1:C8AF -  -  -  -  lin_8_1_1:
  640 D1:C8AF 00 -  -  -  	.db 0 
  641 D1:C8B0 -  -  -  -  
  642 D1:C8B0 -  -  -  -  lin_8_2:
  643 D1:C8B0 -  -  -  -  lin_8_31_2:
  644 D1:C8B0 00 -  -  -  	.db 0 
  645 D1:C8B1 -  -  -  -  lin_8_15_2:
  646 D1:C8B1 00 -  -  -  	.db 0 
  647 D1:C8B2 -  -  -  -  lin_8_7_2:
  648 D1:C8B2 00 -  -  -  	.db 0 
  649 D1:C8B3 -  -  -  -  lin_8_3_2:
  650 D1:C8B3 00 -  -  -  	.db 0 
  651 D1:C8B4 -  -  -  -  lin_8_1_2:
  652 D1:C8B4 00 -  -  -  	.db 0 
  653 D1:C8B5 -  -  -  -  	
  654 D1:C8B5 -  -  -  -  lin_8_3:
  655 D1:C8B5 -  -  -  -  lin_8_31_3:
  656 D1:C8B5 00 -  -  -  	.db 0 
  657 D1:C8B6 -  -  -  -  lin_8_15_3:
  658 D1:C8B6 00 -  -  -  	.db 0 
  659 D1:C8B7 -  -  -  -  lin_8_7_3:
  660 D1:C8B7 00 -  -  -  	.db 0 
  661 D1:C8B8 -  -  -  -  lin_8_3_3:
  662 D1:C8B8 00 -  -  -  	.db 0 
  663 D1:C8B9 -  -  -  -  lin_8_1_3:
  664 D1:C8B9 00 -  -  -  	.db 0 
  665 D1:C8BA -  -  -  -  	
  666 D1:C8BA -  -  -  -  lin_8_4:
  667 D1:C8BA -  -  -  -  lin_8_31_4:
  668 D1:C8BA 00 -  -  -  	.db 0 
  669 D1:C8BB -  -  -  -  lin_8_15_4:
  670 D1:C8BB 00 -  -  -  	.db 0 
  671 D1:C8BC -  -  -  -  lin_8_7_4:
  672 D1:C8BC 00 -  -  -  	.db 0 
  673 D1:C8BD -  -  -  -  lin_8_3_4:
  674 D1:C8BD 00 -  -  -  	.db 0 
  675 D1:C8BE -  -  -  -  lin_8_1_4:
  676 D1:C8BE 00 -  -  -  	.db 0 
  677 D1:C8BF -  -  -  -  
  678 D1:C8BF -  -  -  -  
  679 D1:C8BF -  -  -  -  
  680 D1:C8BF -  -  -  -  
  681 D1:C8BF -  -  -  -  
  682 D1:C8BF -  -  -  -  linrep_05_1:
  683 D1:C8BF -  -  -  -  linrep_05_31_1:
  684 D1:C8BF 00 -  -  -  	.db 0 
  685 D1:C8C0 -  -  -  -  linrep_05_15_1:
  686 D1:C8C0 00 -  -  -  	.db 0 
  687 D1:C8C1 -  -  -  -  linrep_05_7_1:
  688 D1:C8C1 00 -  -  -  	.db 0 
  689 D1:C8C2 -  -  -  -  linrep_05_3_1:
  690 D1:C8C2 00 -  -  -  	.db 0 
  691 D1:C8C3 -  -  -  -  linrep_05_1_1:
  692 D1:C8C3 00 -  -  -  	.db 0 
  693 D1:C8C4 -  -  -  -  
  694 D1:C8C4 -  -  -  -  linrep_05_2:
  695 D1:C8C4 -  -  -  -  linrep_05_31_2:
  696 D1:C8C4 00 -  -  -  	.db 0 
  697 D1:C8C5 -  -  -  -  linrep_05_15_2:
  698 D1:C8C5 00 -  -  -  	.db 0 
  699 D1:C8C6 -  -  -  -  linrep_05_7_2:
  700 D1:C8C6 00 -  -  -  	.db 0 
  701 D1:C8C7 -  -  -  -  linrep_05_3_2:
  702 D1:C8C7 00 -  -  -  	.db 0 
  703 D1:C8C8 -  -  -  -  linrep_05_1_2:
  704 D1:C8C8 00 -  -  -  	.db 0 	
  705 D1:C8C9 -  -  -  -  	
  706 D1:C8C9 -  -  -  -  linrep_05_3:
  707 D1:C8C9 -  -  -  -  linrep_05_31_3:
  708 D1:C8C9 00 -  -  -  	.db 0 
  709 D1:C8CA -  -  -  -  linrep_05_15_3:
  710 D1:C8CA 00 -  -  -  	.db 0 
  711 D1:C8CB -  -  -  -  linrep_05_7_3:
  712 D1:C8CB 00 -  -  -  	.db 0 
  713 D1:C8CC -  -  -  -  linrep_05_3_3:
  714 D1:C8CC 00 -  -  -  	.db 0 
  715 D1:C8CD -  -  -  -  linrep_05_1_3:
  716 D1:C8CD 00 -  -  -  	.db 0 	
  717 D1:C8CE -  -  -  -  	
  718 D1:C8CE -  -  -  -  linrep_05_4:
  719 D1:C8CE -  -  -  -  linrep_05_31_4:
  720 D1:C8CE 00 -  -  -  	.db 0 
  721 D1:C8CF -  -  -  -  linrep_05_15_4:
  722 D1:C8CF 00 -  -  -  	.db 0 
  723 D1:C8D0 -  -  -  -  linrep_05_7_4:
  724 D1:C8D0 00 -  -  -  	.db 0 
  725 D1:C8D1 -  -  -  -  linrep_05_3_4:
  726 D1:C8D1 00 -  -  -  	.db 0 
  727 D1:C8D2 -  -  -  -  linrep_05_1_4:
  728 D1:C8D2 00 -  -  -  	.db 0 
  729 D1:C8D3 -  -  -  -  
  730 D1:C8D3 -  -  -  -  linrep_1_1:
  731 D1:C8D3 -  -  -  -  linrep_1_31_1:
  732 D1:C8D3 00 -  -  -  	.db 0 
  733 D1:C8D4 -  -  -  -  linrep_1_15_1:
  734 D1:C8D4 00 -  -  -  	.db 0 
  735 D1:C8D5 -  -  -  -  linrep_1_7_1:
  736 D1:C8D5 00 -  -  -  	.db 0 
  737 D1:C8D6 -  -  -  -  linrep_1_3_1:
  738 D1:C8D6 00 -  -  -  	.db 0
  739 D1:C8D7 -  -  -  -  linrep_1_1_1:
  740 D1:C8D7 00 -  -  -  	.db 0 	
  741 D1:C8D8 -  -  -  -  
  742 D1:C8D8 -  -  -  -  linrep_1_2:
  743 D1:C8D8 -  -  -  -  linrep_1_31_2:
  744 D1:C8D8 00 -  -  -  	.db 0 
  745 D1:C8D9 -  -  -  -  linrep_1_15_2:
  746 D1:C8D9 00 -  -  -  	.db 0 
  747 D1:C8DA -  -  -  -  linrep_1_7_2:
  748 D1:C8DA 00 -  -  -  	.db 0 
  749 D1:C8DB -  -  -  -  linrep_1_3_2:
  750 D1:C8DB 00 -  -  -  	.db 0 
  751 D1:C8DC -  -  -  -  linrep_1_1_2:
  752 D1:C8DC 00 -  -  -  	.db 0 
  753 D1:C8DD -  -  -  -  	
  754 D1:C8DD -  -  -  -  linrep_1_3:
  755 D1:C8DD -  -  -  -  linrep_1_31_3:
  756 D1:C8DD 00 -  -  -  	.db 0 
  757 D1:C8DE -  -  -  -  linrep_1_15_3:
  758 D1:C8DE 00 -  -  -  	.db 0 
  759 D1:C8DF -  -  -  -  linrep_1_7_3:
  760 D1:C8DF 00 -  -  -  	.db 0 
  761 D1:C8E0 -  -  -  -  linrep_1_3_3:
  762 D1:C8E0 00 -  -  -  	.db 0 
  763 D1:C8E1 -  -  -  -  linrep_1_1_3:
  764 D1:C8E1 00 -  -  -  	.db 0 
  765 D1:C8E2 -  -  -  -  	
  766 D1:C8E2 -  -  -  -  linrep_1_4:
  767 D1:C8E2 -  -  -  -  linrep_1_31_4:
  768 D1:C8E2 00 -  -  -  	.db 0 
  769 D1:C8E3 -  -  -  -  linrep_1_15_4:
  770 D1:C8E3 00 -  -  -  	.db 0 
  771 D1:C8E4 -  -  -  -  linrep_1_7_4:
  772 D1:C8E4 00 -  -  -  	.db 0 
  773 D1:C8E5 -  -  -  -  linrep_1_3_4:
  774 D1:C8E5 00 -  -  -  	.db 0 
  775 D1:C8E6 -  -  -  -  linrep_1_1_4:
  776 D1:C8E6 00 -  -  -  	.db 0 
  777 D1:C8E7 -  -  -  -  	
  778 D1:C8E7 -  -  -  -  linrep_2_1:
  779 D1:C8E7 -  -  -  -  linrep_2_31_1:
  780 D1:C8E7 00 -  -  -  	.db 0 
  781 D1:C8E8 -  -  -  -  linrep_2_15_1:
  782 D1:C8E8 00 -  -  -  	.db 0 
  783 D1:C8E9 -  -  -  -  linrep_2_7_1:
  784 D1:C8E9 00 -  -  -  	.db 0 
  785 D1:C8EA -  -  -  -  linrep_2_3_1:
  786 D1:C8EA 00 -  -  -  	.db 0 
  787 D1:C8EB -  -  -  -  linrep_2_1_1:
  788 D1:C8EB 00 -  -  -  	.db 0
  789 D1:C8EC -  -  -  -  
  790 D1:C8EC -  -  -  -  linrep_2_2:
  791 D1:C8EC -  -  -  -  linrep_2_31_2:
  792 D1:C8EC 00 -  -  -  	.db 0 
  793 D1:C8ED -  -  -  -  linrep_2_15_2:
  794 D1:C8ED 00 -  -  -  	.db 0 
  795 D1:C8EE -  -  -  -  linrep_2_7_2:
  796 D1:C8EE 00 -  -  -  	.db 0 
  797 D1:C8EF -  -  -  -  linrep_2_3_2:
  798 D1:C8EF 00 -  -  -  	.db 0 
  799 D1:C8F0 -  -  -  -  linrep_2_1_2:
  800 D1:C8F0 00 -  -  -  	.db 0 
  801 D1:C8F1 -  -  -  -  	
  802 D1:C8F1 -  -  -  -  linrep_2_3:
  803 D1:C8F1 -  -  -  -  linrep_2_31_3:
  804 D1:C8F1 00 -  -  -  	.db 0 
  805 D1:C8F2 -  -  -  -  linrep_2_15_3:
  806 D1:C8F2 00 -  -  -  	.db 0 
  807 D1:C8F3 -  -  -  -  linrep_2_7_3:
  808 D1:C8F3 00 -  -  -  	.db 0 
  809 D1:C8F4 -  -  -  -  linrep_2_3_3:
  810 D1:C8F4 00 -  -  -  	.db 0 
  811 D1:C8F5 -  -  -  -  linrep_2_1_3:
  812 D1:C8F5 00 -  -  -  	.db 0 
  813 D1:C8F6 -  -  -  -  	
  814 D1:C8F6 -  -  -  -  linrep_2_4:
  815 D1:C8F6 -  -  -  -  linrep_2_31_4:
  816 D1:C8F6 00 -  -  -  	.db 0 
  817 D1:C8F7 -  -  -  -  linrep_2_15_4:
  818 D1:C8F7 00 -  -  -  	.db 0 
  819 D1:C8F8 -  -  -  -  linrep_2_7_4:
  820 D1:C8F8 00 -  -  -  	.db 0 
  821 D1:C8F9 -  -  -  -  linrep_2_3_4:
  822 D1:C8F9 00 -  -  -  	.db 0 
  823 D1:C8FA -  -  -  -  linrep_2_1_4:
  824 D1:C8FA 00 -  -  -  	.db 0 
  825 D1:C8FB -  -  -  -  	
  826 D1:C8FB -  -  -  -  linrep_4_1:
  827 D1:C8FB -  -  -  -  linrep_4_31_1:
  828 D1:C8FB 00 -  -  -  	.db 0 
  829 D1:C8FC -  -  -  -  linrep_4_15_1:
  830 D1:C8FC 00 -  -  -  	.db 0 
  831 D1:C8FD -  -  -  -  linrep_4_7_1:
  832 D1:C8FD 00 -  -  -  	.db 0 
  833 D1:C8FE -  -  -  -  linrep_4_3_1:
  834 D1:C8FE 00 -  -  -  	.db 0 
  835 D1:C8FF -  -  -  -  linrep_4_1_1:
  836 D1:C8FF 00 -  -  -  	.db 0 
  837 D1:C900 -  -  -  -  
  838 D1:C900 -  -  -  -  
  839 D1:C900 -  -  -  -  linrep_4_2:
  840 D1:C900 -  -  -  -  linrep_4_31_2:
  841 D1:C900 00 -  -  -  	.db 0 
  842 D1:C901 -  -  -  -  linrep_4_15_2:
  843 D1:C901 00 -  -  -  	.db 0 
  844 D1:C902 -  -  -  -  linrep_4_7_2:
  845 D1:C902 00 -  -  -  	.db 0 
  846 D1:C903 -  -  -  -  linrep_4_3_2:
  847 D1:C903 00 -  -  -  	.db 0 
  848 D1:C904 -  -  -  -  linrep_4_1_2:
  849 D1:C904 00 -  -  -  	.db 0 
  850 D1:C905 -  -  -  -  	
  851 D1:C905 -  -  -  -  linrep_4_3:
  852 D1:C905 -  -  -  -  linrep_4_31_3:
  853 D1:C905 00 -  -  -  	.db 0 
  854 D1:C906 -  -  -  -  linrep_4_15_3:
  855 D1:C906 00 -  -  -  	.db 0 
  856 D1:C907 -  -  -  -  linrep_4_7_3:
  857 D1:C907 00 -  -  -  	.db 0 
  858 D1:C908 -  -  -  -  linrep_4_3_3:
  859 D1:C908 00 -  -  -  	.db 0 
  860 D1:C909 -  -  -  -  linrep_4_1_3:
  861 D1:C909 00 -  -  -  	.db 0 
  862 D1:C90A -  -  -  -  	
  863 D1:C90A -  -  -  -  linrep_4_4:
  864 D1:C90A -  -  -  -  linrep_4_31_4:
  865 D1:C90A 00 -  -  -  	.db 0 
  866 D1:C90B -  -  -  -  linrep_4_15_4:
  867 D1:C90B 00 -  -  -  	.db 0 
  868 D1:C90C -  -  -  -  linrep_4_7_4:
  869 D1:C90C 00 -  -  -  	.db 0 
  870 D1:C90D -  -  -  -  linrep_4_3_4:
  871 D1:C90D 00 -  -  -  	.db 0 
  872 D1:C90E -  -  -  -  linrep_4_1_4:
  873 D1:C90E 00 -  -  -  	.db 0 
  874 D1:C90F -  -  -  -  	
  875 D1:C90F -  -  -  -  	
  876 D1:C90F -  -  -  -  linrep_8_1:
  877 D1:C90F -  -  -  -  linrep_8_31_1:
  878 D1:C90F 00 -  -  -  	.db 0 
  879 D1:C910 -  -  -  -  linrep_8_15_1:
  880 D1:C910 00 -  -  -  	.db 0 
  881 D1:C911 -  -  -  -  linrep_8_7_1:
  882 D1:C911 00 -  -  -  	.db 0 
  883 D1:C912 -  -  -  -  linrep_8_3_1:
  884 D1:C912 00 -  -  -  	.db 0 
  885 D1:C913 -  -  -  -  linrep_8_1_1:
  886 D1:C913 00 -  -  -  	.db 0 
  887 D1:C914 -  -  -  -  
  888 D1:C914 -  -  -  -  linrep_8_2:
  889 D1:C914 -  -  -  -  linrep_8_31_2:
  890 D1:C914 00 -  -  -  	.db 0 
  891 D1:C915 -  -  -  -  linrep_8_15_2:
  892 D1:C915 00 -  -  -  	.db 0 
  893 D1:C916 -  -  -  -  linrep_8_7_2:
  894 D1:C916 00 -  -  -  	.db 0 
  895 D1:C917 -  -  -  -  linrep_8_3_2:
  896 D1:C917 00 -  -  -  	.db 0 
  897 D1:C918 -  -  -  -  linrep_8_1_2:
  898 D1:C918 00 -  -  -  	.db 0 
  899 D1:C919 -  -  -  -  	
  900 D1:C919 -  -  -  -  linrep_8_3:
  901 D1:C919 -  -  -  -  linrep_8_31_3:
  902 D1:C919 00 -  -  -  	.db 0 
  903 D1:C91A -  -  -  -  linrep_8_15_3:
  904 D1:C91A 00 -  -  -  	.db 0 
  905 D1:C91B -  -  -  -  linrep_8_7_3:
  906 D1:C91B 00 -  -  -  	.db 0 
  907 D1:C91C -  -  -  -  linrep_8_3_3:
  908 D1:C91C 00 -  -  -  	.db 0 
  909 D1:C91D -  -  -  -  linrep_8_1_3:
  910 D1:C91D 00 -  -  -  	.db 0 
  911 D1:C91E -  -  -  -  	
  912 D1:C91E -  -  -  -  linrep_8_4:
  913 D1:C91E -  -  -  -  linrep_8_31_4:
  914 D1:C91E 00 -  -  -  	.db 0 
  915 D1:C91F -  -  -  -  linrep_8_15_4:
  916 D1:C91F 00 -  -  -  	.db 0 
  917 D1:C920 -  -  -  -  linrep_8_7_4:
  918 D1:C920 00 -  -  -  	.db 0 
  919 D1:C921 -  -  -  -  linrep_8_3_4:
  920 D1:C921 00 -  -  -  	.db 0 
  921 D1:C922 -  -  -  -  linrep_8_1_4:
  922 D1:C922 00 -  -  -  	.db 0 
  923 D1:C923 -  -  -  -  	
  924 D1:C923 -  -  -  -  	
  925 D1:C923 -  -  -  -  	
  926 D1:C923 -  -  -  -  
  927 D1:C923 -  -  -  -  
  928 D1:C923 -  -  -  -  sine:
  929 D1:C923 80 -  -  -  	.db 128
  930 D1:C924 83 -  -  -  	.db 131
  931 D1:C925 86 -  -  -  	.db 134
  932 D1:C926 89 -  -  -  	.db 137
  933 D1:C927 8C -  -  -  	.db 140
  934 D1:C928 8F -  -  -  	.db 143
  935 D1:C929 92 -  -  -  	.db 146
  936 D1:C92A 95 -  -  -  	.db 149
  937 D1:C92B 98 -  -  -  	.db 152
  938 D1:C92C 9C -  -  -  	.db 156
  939 D1:C92D 9F -  -  -  	.db 159
  940 D1:C92E A2 -  -  -  	.db 162
  941 D1:C92F A5 -  -  -  	.db 165
  942 D1:C930 A8 -  -  -  	.db 168
  943 D1:C931 AB -  -  -  	.db 171
  944 D1:C932 AE -  -  -  	.db 174
  945 D1:C933 B0 -  -  -  	.db 176
  946 D1:C934 B3 -  -  -  	.db 179
  947 D1:C935 B6 -  -  -  	.db 182
  948 D1:C936 B9 -  -  -  	.db 185
  949 D1:C937 BC -  -  -  	.db 188
  950 D1:C938 BF -  -  -  	.db 191
  951 D1:C939 C1 -  -  -  	.db 193
  952 D1:C93A C4 -  -  -  	.db 196
  953 D1:C93B C7 -  -  -  	.db 199
  954 D1:C93C C9 -  -  -  	.db 201
  955 D1:C93D CC -  -  -  	.db 204
  956 D1:C93E CE -  -  -  	.db 206
  957 D1:C93F D1 -  -  -  	.db 209
  958 D1:C940 D3 -  -  -  	.db 211
  959 D1:C941 D5 -  -  -  	.db 213
  960 D1:C942 D8 -  -  -  	.db 216
  961 D1:C943 DA -  -  -  	.db 218
  962 D1:C944 DC -  -  -  	.db 220
  963 D1:C945 DE -  -  -  	.db 222
  964 D1:C946 E0 -  -  -  	.db 224
  965 D1:C947 E2 -  -  -  	.db 226
  966 D1:C948 E4 -  -  -  	.db 228
  967 D1:C949 E6 -  -  -  	.db 230
  968 D1:C94A E8 -  -  -  	.db 232
  969 D1:C94B EA -  -  -  	.db 234
  970 D1:C94C EB -  -  -  	.db 235
  971 D1:C94D ED -  -  -  	.db 237
  972 D1:C94E EF -  -  -  	.db 239
  973 D1:C94F F0 -  -  -  	.db 240
  974 D1:C950 F2 -  -  -  	.db 242
  975 D1:C951 F3 -  -  -  	.db 243
  976 D1:C952 F4 -  -  -  	.db 244
  977 D1:C953 F6 -  -  -  	.db 246
  978 D1:C954 F7 -  -  -  	.db 247
  979 D1:C955 F8 -  -  -  	.db 248
  980 D1:C956 F9 -  -  -  	.db 249
  981 D1:C957 FA -  -  -  	.db 250
  982 D1:C958 FB -  -  -  	.db 251
  983 D1:C959 FB -  -  -  	.db 251
  984 D1:C95A FC -  -  -  	.db 252
  985 D1:C95B FD -  -  -  	.db 253
  986 D1:C95C FD -  -  -  	.db 253
  987 D1:C95D FE -  -  -  	.db 254
  988 D1:C95E FE -  -  -  	.db 254
  989 D1:C95F FE -  -  -  	.db 254
  990 D1:C960 FF -  -  -  	.db 255
  991 D1:C961 FF -  -  -  	.db 255
  992 D1:C962 FF -  -  -  	.db 255
  993 D1:C963 FF -  -  -  	.db 255
  994 D1:C964 FF -  -  -  	.db 255
  995 D1:C965 FF -  -  -  	.db 255
  996 D1:C966 FF -  -  -  	.db 255
  997 D1:C967 FE -  -  -  	.db 254
  998 D1:C968 FE -  -  -  	.db 254
  999 D1:C969 FD -  -  -  	.db 253
 1000 D1:C96A FD -  -  -  	.db 253
 1001 D1:C96B FC -  -  -  	.db 252
 1002 D1:C96C FC -  -  -  	.db 252
 1003 D1:C96D FB -  -  -  	.db 251
 1004 D1:C96E FA -  -  -  	.db 250
 1005 D1:C96F F9 -  -  -  	.db 249
 1006 D1:C970 F8 -  -  -  	.db 248
 1007 D1:C971 F7 -  -  -  	.db 247
 1008 D1:C972 F6 -  -  -  	.db 246
 1009 D1:C973 F5 -  -  -  	.db 245
 1010 D1:C974 F4 -  -  -  	.db 244
 1011 D1:C975 F2 -  -  -  	.db 242
 1012 D1:C976 F1 -  -  -  	.db 241
 1013 D1:C977 EF -  -  -  	.db 239
 1014 D1:C978 EE -  -  -  	.db 238
 1015 D1:C979 EC -  -  -  	.db 236
 1016 D1:C97A EB -  -  -  	.db 235
 1017 D1:C97B E9 -  -  -  	.db 233
 1018 D1:C97C E7 -  -  -  	.db 231
 1019 D1:C97D E5 -  -  -  	.db 229
 1020 D1:C97E E3 -  -  -  	.db 227
 1021 D1:C97F E1 -  -  -  	.db 225
 1022 D1:C980 DF -  -  -  	.db 223
 1023 D1:C981 DD -  -  -  	.db 221
 1024 D1:C982 DB -  -  -  	.db 219
 1025 D1:C983 D9 -  -  -  	.db 217
 1026 D1:C984 D7 -  -  -  	.db 215
 1027 D1:C985 D4 -  -  -  	.db 212
 1028 D1:C986 D2 -  -  -  	.db 210
 1029 D1:C987 CF -  -  -  	.db 207
 1030 D1:C988 CD -  -  -  	.db 205
 1031 D1:C989 CA -  -  -  	.db 202
 1032 D1:C98A C8 -  -  -  	.db 200
 1033 D1:C98B C5 -  -  -  	.db 197
 1034 D1:C98C C3 -  -  -  	.db 195
 1035 D1:C98D C0 -  -  -  	.db 192
 1036 D1:C98E BD -  -  -  	.db 189
 1037 D1:C98F BA -  -  -  	.db 186
 1038 D1:C990 B8 -  -  -  	.db 184
 1039 D1:C991 B5 -  -  -  	.db 181
 1040 D1:C992 B2 -  -  -  	.db 178
 1041 D1:C993 AF -  -  -  	.db 175
 1042 D1:C994 AC -  -  -  	.db 172
 1043 D1:C995 A9 -  -  -  	.db 169
 1044 D1:C996 A6 -  -  -  	.db 166
 1045 D1:C997 A3 -  -  -  	.db 163
 1046 D1:C998 A0 -  -  -  	.db 160
 1047 D1:C999 9D -  -  -  	.db 157
 1048 D1:C99A 9A -  -  -  	.db 154
 1049 D1:C99B 97 -  -  -  	.db 151
 1050 D1:C99C 94 -  -  -  	.db 148
 1051 D1:C99D 91 -  -  -  	.db 145
 1052 D1:C99E 8E -  -  -  	.db 142
 1053 D1:C99F 8A -  -  -  	.db 138
 1054 D1:C9A0 87 -  -  -  	.db 135
 1055 D1:C9A1 84 -  -  -  	.db 132
 1056 D1:C9A2 81 -  -  -  	.db 129
 1057 D1:C9A3 7E -  -  -  	.db 126
 1058 D1:C9A4 7B -  -  -  	.db 123
 1059 D1:C9A5 78 -  -  -  	.db 120
 1060 D1:C9A6 75 -  -  -  	.db 117
 1061 D1:C9A7 71 -  -  -  	.db 113
 1062 D1:C9A8 6E -  -  -  	.db 110
 1063 D1:C9A9 6B -  -  -  	.db 107
 1064 D1:C9AA 68 -  -  -  	.db 104
 1065 D1:C9AB 65 -  -  -  	.db 101
 1066 D1:C9AC 62 -  -  -  	.db 98
 1067 D1:C9AD 5F -  -  -  	.db 95
 1068 D1:C9AE 5C -  -  -  	.db 92
 1069 D1:C9AF 59 -  -  -  	.db 89
 1070 D1:C9B0 56 -  -  -  	.db 86
 1071 D1:C9B1 53 -  -  -  	.db 83
 1072 D1:C9B2 50 -  -  -  	.db 80
 1073 D1:C9B3 4D -  -  -  	.db 77
 1074 D1:C9B4 4A -  -  -  	.db 74
 1075 D1:C9B5 47 -  -  -  	.db 71
 1076 D1:C9B6 45 -  -  -  	.db 69
 1077 D1:C9B7 42 -  -  -  	.db 66
 1078 D1:C9B8 3F -  -  -  	.db 63
 1079 D1:C9B9 3C -  -  -  	.db 60
 1080 D1:C9BA 3A -  -  -  	.db 58
 1081 D1:C9BB 37 -  -  -  	.db 55
 1082 D1:C9BC 35 -  -  -  	.db 53
 1083 D1:C9BD 32 -  -  -  	.db 50
 1084 D1:C9BE 30 -  -  -  	.db 48
 1085 D1:C9BF 2D -  -  -  	.db 45
 1086 D1:C9C0 2B -  -  -  	.db 43
 1087 D1:C9C1 28 -  -  -  	.db 40
 1088 D1:C9C2 26 -  -  -  	.db 38
 1089 D1:C9C3 24 -  -  -  	.db 36
 1090 D1:C9C4 22 -  -  -  	.db 34
 1091 D1:C9C5 20 -  -  -  	.db 32
 1092 D1:C9C6 1E -  -  -  	.db 30
 1093 D1:C9C7 1C -  -  -  	.db 28
 1094 D1:C9C8 1A -  -  -  	.db 26
 1095 D1:C9C9 18 -  -  -  	.db 24
 1096 D1:C9CA 16 -  -  -  	.db 22
 1097 D1:C9CB 14 -  -  -  	.db 20
 1098 D1:C9CC 13 -  -  -  	.db 19
 1099 D1:C9CD 11 -  -  -  	.db 17
 1100 D1:C9CE 10 -  -  -  	.db 16
 1101 D1:C9CF 0E -  -  -  	.db 14
 1102 D1:C9D0 0D -  -  -  	.db 13
 1103 D1:C9D1 0B -  -  -  	.db 11
 1104 D1:C9D2 0A -  -  -  	.db 10
 1105 D1:C9D3 09 -  -  -  	.db 9
 1106 D1:C9D4 08 -  -  -  	.db 8
 1107 D1:C9D5 07 -  -  -  	.db 7
 1108 D1:C9D6 06 -  -  -  	.db 6
 1109 D1:C9D7 05 -  -  -  	.db 5
 1110 D1:C9D8 04 -  -  -  	.db 4
 1111 D1:C9D9 03 -  -  -  	.db 3
 1112 D1:C9DA 03 -  -  -  	.db 3
 1113 D1:C9DB 02 -  -  -  	.db 2
 1114 D1:C9DC 02 -  -  -  	.db 2
 1115 D1:C9DD 01 -  -  -  	.db 1
 1116 D1:C9DE 01 -  -  -  	.db 1
 1117 D1:C9DF 00 -  -  -  	.db 0
 1118 D1:C9E0 00 -  -  -  	.db 0
 1119 D1:C9E1 00 -  -  -  	.db 0
 1120 D1:C9E2 00 -  -  -  	.db 0
 1121 D1:C9E3 00 -  -  -  	.db 0
 1122 D1:C9E4 00 -  -  -  	.db 0
 1123 D1:C9E5 00 -  -  -  	.db 0
 1124 D1:C9E6 01 -  -  -  	.db 1
 1125 D1:C9E7 01 -  -  -  	.db 1
 1126 D1:C9E8 01 -  -  -  	.db 1
 1127 D1:C9E9 02 -  -  -  	.db 2
 1128 D1:C9EA 02 -  -  -  	.db 2
 1129 D1:C9EB 03 -  -  -  	.db 3
 1130 D1:C9EC 04 -  -  -  	.db 4
 1131 D1:C9ED 04 -  -  -  	.db 4
 1132 D1:C9EE 05 -  -  -  	.db 5
 1133 D1:C9EF 06 -  -  -  	.db 6
 1134 D1:C9F0 07 -  -  -  	.db 7
 1135 D1:C9F1 08 -  -  -  	.db 8
 1136 D1:C9F2 09 -  -  -  	.db 9
 1137 D1:C9F3 0B -  -  -  	.db 11
 1138 D1:C9F4 0C -  -  -  	.db 12
 1139 D1:C9F5 0D -  -  -  	.db 13
 1140 D1:C9F6 0F -  -  -  	.db 15
 1141 D1:C9F7 10 -  -  -  	.db 16
 1142 D1:C9F8 12 -  -  -  	.db 18
 1143 D1:C9F9 14 -  -  -  	.db 20
 1144 D1:C9FA 15 -  -  -  	.db 21
 1145 D1:C9FB 17 -  -  -  	.db 23
 1146 D1:C9FC 19 -  -  -  	.db 25
 1147 D1:C9FD 1B -  -  -  	.db 27
 1148 D1:C9FE 1D -  -  -  	.db 29
 1149 D1:C9FF 1F -  -  -  	.db 31
 1150 D1:CA00 21 -  -  -  	.db 33
 1151 D1:CA01 23 -  -  -  	.db 35
 1152 D1:CA02 25 -  -  -  	.db 37
 1153 D1:CA03 27 -  -  -  	.db 39
 1154 D1:CA04 2A -  -  -  	.db 42
 1155 D1:CA05 2C -  -  -  	.db 44
 1156 D1:CA06 2E -  -  -  	.db 46
 1157 D1:CA07 31 -  -  -  	.db 49
 1158 D1:CA08 33 -  -  -  	.db 51
 1159 D1:CA09 36 -  -  -  	.db 54
 1160 D1:CA0A 38 -  -  -  	.db 56
 1161 D1:CA0B 3B -  -  -  	.db 59
 1162 D1:CA0C 3E -  -  -  	.db 62
 1163 D1:CA0D 40 -  -  -  	.db 64
 1164 D1:CA0E 43 -  -  -  	.db 67
 1165 D1:CA0F 46 -  -  -  	.db 70
 1166 D1:CA10 49 -  -  -  	.db 73
 1167 D1:CA11 4C -  -  -  	.db 76
 1168 D1:CA12 4F -  -  -  	.db 79
 1169 D1:CA13 51 -  -  -  	.db 81
 1170 D1:CA14 54 -  -  -  	.db 84
 1171 D1:CA15 57 -  -  -  	.db 87
 1172 D1:CA16 5A -  -  -  	.db 90
 1173 D1:CA17 5D -  -  -  	.db 93
 1174 D1:CA18 60 -  -  -  	.db 96
 1175 D1:CA19 63 -  -  -  	.db 99
 1176 D1:CA1A 67 -  -  -  	.db 103
 1177 D1:CA1B 6A -  -  -  	.db 106
 1178 D1:CA1C 6D -  -  -  	.db 109
 1179 D1:CA1D 70 -  -  -  	.db 112
 1180 D1:CA1E 73 -  -  -  	.db 115
 1181 D1:CA1F 76 -  -  -  	.db 118
 1182 D1:CA20 79 -  -  -  	.db 121
 1183 D1:CA21 7C -  -  -  	.db 124
 1184 D1:CA22 7F -  -  -  	.db 127
 1185 D1:CA23 -  -  -  -  	
Listing for file "ascent.asm"
  605 D1:CA23 -  -  -  -  #include "animations.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\animations.txt"
    1 D1:CA23 -  -  -  -   
    2 D1:CA23 -  -  -  -  update_animations:
    3 D1:CA23 -  -  -  -  	;Will update all animations every frame. Not significant performance impact
    4 D1:CA23 -  -  -  -  	
    5 D1:CA23 -  -  -  -  	;POSITION
    6 D1:CA23 -  -  -  -  	;load hl with data pointer (dataframe or sprite group)
    7 D1:CA23 -  -  -  -  	;ld bc with number of bytes to target property
    8 D1:CA23 -  -  -  -  	;add hl bc 
    9 D1:CA23 -  -  -  -  
   10 D1:CA23 -  -  -  -  	;ld a with desired sine freq,phase,and amplitude 
   11 D1:CA23 -  -  -  -  	;add a,xx ;Base value
   12 D1:CA23 -  -  -  -  	;ld (hl),a
   13 D1:CA23 -  -  -  -  
   14 D1:CA23 -  -  -  -  	;7 bytes per animated value
   15 D1:CA23 08 -  -  -  	ex af, af' ;'
   16 D1:CA24 21 EE FA D1 	ld hl,position_animation_data
   17 D1:CA28 7E -  -  -  	ld a,(hl)
   18 D1:CA29 23 -  -  -  	inc hl
   19 D1:CA2A -  -  -  -  update_animation_position_loop:
   20 D1:CA2A 08 -  -  -  	ex af, af' ;'
   21 D1:CA2B ED 17 -  -  	ld de,(hl);load address of property
   22 D1:CA2D 23 -  -  -  	inc hl
   23 D1:CA2E 23 -  -  -  	inc hl 
   24 D1:CA2F 23 -  -  -  	inc hl 
   25 D1:CA30 ED 07 -  -  	ld bc,(hl) ;address of anim curve 
   26 D1:CA32 23 -  -  -  	inc hl 
   27 D1:CA33 23 -  -  -  	inc hl 
   28 D1:CA34 23 -  -  -  	inc hl
   29 D1:CA35 0A -  -  -  	ld a,(bc) ;value of anim curve
   30 D1:CA36 4E -  -  -  	ld c, (hl) ;base value
   31 D1:CA37 23 -  -  -  	inc hl
   32 D1:CA38 81 -  -  -  	add a,c
   33 D1:CA39 12 -  -  -  	ld (de),a 
   34 D1:CA3A 08 -  -  -  	ex af, af' ;'
   35 D1:CA3B 3D -  -  -  	dec a 
   36 D1:CA3C C2 2A CA D1 	jp nz,update_animation_position_loop
   37 D1:CA40 -  -  -  -  	
   38 D1:CA40 -  -  -  -  	
   39 D1:CA40 -  -  -  -  	
   40 D1:CA40 11 00 00 00 	ld de,0 ;clear upper byte 
   41 D1:CA44 08 -  -  -  	ex af, af' ;' ;in
   42 D1:CA45 21 15 FC D1 	ld hl,sprite_animation_data
   43 D1:CA49 7E -  -  -  	ld a,(hl)
   44 D1:CA4A 23 -  -  -  	inc hl
   45 D1:CA4B -  -  -  -  update_animation_sprite_loop:
   46 D1:CA4B 08 -  -  -  	ex af, af' ;' ;out
   47 D1:CA4C ED 07 -  -  	ld bc,(hl) ;animation curve address
   48 D1:CA4E 23 -  -  -  	inc hl 
   49 D1:CA4F 23 -  -  -  	inc hl
   50 D1:CA50 23 -  -  -  	inc hl
   51 D1:CA51 0A -  -  -  	ld a,(bc) ;anim curve value (btwn 0 and 7)
   52 D1:CA52 5F -  -  -  	ld e,a 
   53 D1:CA53 19 -  -  -  	add hl,de ;jump to correct place
   54 D1:CA54 ED 44 -  -  	neg ;a holds -curve value
   55 D1:CA56 C6 08 -  -  	add a,8; a holds amt to jump to get past sprite table
   56 D1:CA58 5F -  -  -  	ld e,a 
   57 D1:CA59 7E -  -  -  	ld a,(hl);correct sprite index 
   58 D1:CA5A 19 -  -  -  	add hl,de ;to address of target property
   59 D1:CA5B ED 07 -  -  	ld bc,(hl)
   60 D1:CA5D 02 -  -  -  	ld (bc),a 
   61 D1:CA5E 23 -  -  -  	inc hl 
   62 D1:CA5F 23 -  -  -  	inc hl 
   63 D1:CA60 23 -  -  -  	inc hl
   64 D1:CA61 08 -  -  -  	ex af, af' ;' ;in
   65 D1:CA62 3D -  -  -  	dec a 
   66 D1:CA63 C2 4B CA D1 	jp nz,update_animation_sprite_loop
   67 D1:CA67 -  -  -  -  	
   68 D1:CA67 -  -  -  -  	
   69 D1:CA67 -  -  -  -  	;call write_a_to_ram
   70 D1:CA67 C9 -  -  -  	ret 
   71 D1:CA68 -  -  -  -  	
   72 D1:CA68 -  -  -  -  	
   73 D1:CA68 -  -  -  -  	
   74 D1:CA68 -  -  -  -  	
   75 D1:CA68 -  -  -  -  	;SPRITE
   76 D1:CA68 -  -  -  -  	;ld hl with base data ptr
   77 D1:CA68 -  -  -  -  	;ld bc with number of bytes to target property
   78 D1:CA68 -  -  -  -  	
   79 D1:CA68 -  -  -  -  
   80 D1:CA68 -  -  -  -  ;position_animation_data: ;7 bytes per animation
   81 D1:CA68 -  -  -  -  	;.db number of animations
   82 D1:CA68 -  -  -  -  	;.dl address of target property
   83 D1:CA68 -  -  -  -  	;.dl address of desired animation curve value (could use lookup table to reduce memory)
   84 D1:CA68 -  -  -  -  	;.db base value 
   85 D1:CA68 -  -  -  -  	;...
   86 D1:CA68 -  -  -  -  	;.dl MG_Data_0 + 18 
   87 D1:CA68 -  -  -  -  	;.dl lin_05_3_2
   88 D1:CA68 -  -  -  -  	;.db 168
   89 D1:CA68 -  -  -  -  	
   90 D1:CA68 -  -  -  -  	
   91 D1:CA68 -  -  -  -  
   92 D1:CA68 -  -  -  -  ;sprite_animation_data: ;14 bytes per animation
   93 D1:CA68 -  -  -  -  	;.db number of animations
   94 D1:CA68 -  -  -  -  	;.dl address of desired animation curve value (could use lookup table to reduce memory)
   95 D1:CA68 -  -  -  -  	;.db sprite frame 0 
   96 D1:CA68 -  -  -  -  	;.db sprite frame 1
   97 D1:CA68 -  -  -  -  	;.db sprite frame 2
   98 D1:CA68 -  -  -  -  	;.db sprite frame 3
   99 D1:CA68 -  -  -  -  	;.db sprite frame 4
  100 D1:CA68 -  -  -  -  	;.db sprite frame 5
  101 D1:CA68 -  -  -  -  	;.db sprite frame 6
  102 D1:CA68 -  -  -  -  	;.db sprite frame 7
  103 D1:CA68 -  -  -  -  	;.dl address of target property
  104 D1:CA68 -  -  -  -  	
  105 D1:CA68 -  -  -  -  	
  106 D1:CA68 -  -  -  -  	;.dl sine_2_7_1
  107 D1:CA68 -  -  -  -  	;.db 70
  108 D1:CA68 -  -  -  -  	;.db 71
  109 D1:CA68 -  -  -  -  	;.db 72
  110 D1:CA68 -  -  -  -  	;.db 73
  111 D1:CA68 -  -  -  -  	;.db 74
  112 D1:CA68 -  -  -  -  	;.db 71
  113 D1:CA68 -  -  -  -  	;.db 70
  114 D1:CA68 -  -  -  -  	;.db 71
  115 D1:CA68 -  -  -  -  	;.dl SG_TreeRow3 + 5
  116 D1:CA68 -  -  -  -  	
  117 D1:CA68 -  -  -  -  	
  118 D1:CA68 -  -  -  -  	
  119 D1:CA68 -  -  -  -  	
  120 D1:CA68 -  -  -  -   
  121 D1:CA68 -  -  -  -   
  122 D1:CA68 -  -  -  -   
Listing for file "ascent.asm"
  606 D1:CA68 -  -  -  -  ;#include "levelData.txt"
  607 D1:CA68 -  -  -  -  ;#include "FGLevelData.txt"
  608 D1:CA68 -  -  -  -  ;#include "testing/TestingCollisionData.txt"
  609 D1:CA68 -  -  -  -  
  610 D1:CA68 -  -  -  -  #include "generated/BG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\BG_Data.txt"
    1 D1:CA68 -  -  -  -  BG_Data_frame_table:
    2 D1:CA68 08 CB D1 -  	.dl BG_Data_0
    3 D1:CA6B FA CA D1 -  	.dl BG_Data_1
    4 D1:CA6E F8 CA D1 -  	.dl BG_Data_2
    5 D1:CA71 F6 CA D1 -  	.dl BG_Data_3
    6 D1:CA74 F4 CA D1 -  	.dl BG_Data_4
    7 D1:CA77 F2 CA D1 -  	.dl BG_Data_5
    8 D1:CA7A F0 CA D1 -  	.dl BG_Data_6
    9 D1:CA7D EE CA D1 -  	.dl BG_Data_7
   10 D1:CA80 EC CA D1 -  	.dl BG_Data_8
   11 D1:CA83 EA CA D1 -  	.dl BG_Data_9
   12 D1:CA86 E8 CA D1 -  	.dl BG_Data_10
   13 D1:CA89 E6 CA D1 -  	.dl BG_Data_11
   14 D1:CA8C E4 CA D1 -  	.dl BG_Data_12
   15 D1:CA8F E2 CA D1 -  	.dl BG_Data_13
   16 D1:CA92 E0 CA D1 -  	.dl BG_Data_14
   17 D1:CA95 DE CA D1 -  	.dl BG_Data_15
   18 D1:CA98 DC CA D1 -  	.dl BG_Data_16
   19 D1:CA9B DA CA D1 -  	.dl BG_Data_17
   20 D1:CA9E D8 CA D1 -  	.dl BG_Data_18
   21 D1:CAA1 D6 CA D1 -  	.dl BG_Data_19
   22 D1:CAA4 D4 CA D1 -  	.dl BG_Data_20
   23 D1:CAA7 D2 CA D1 -  	.dl BG_Data_21
   24 D1:CAAA D0 CA D1 -  	.dl BG_Data_22
   25 D1:CAAD CE CA D1 -  	.dl BG_Data_23
   26 D1:CAB0 CC CA D1 -  	.dl BG_Data_24
   27 D1:CAB3 CA CA D1 -  	.dl BG_Data_25
   28 D1:CAB6 C8 CA D1 -  	.dl BG_Data_26
   29 D1:CAB9 C6 CA D1 -  	.dl BG_Data_27
   30 D1:CABC C4 CA D1 -  	.dl BG_Data_28
   31 D1:CABF C2 CA D1 -  	.dl BG_Data_29
   32 D1:CAC2 -  -  -  -  
   33 D1:CAC2 -  -  -  -  
   34 D1:CAC2 -  -  -  -  
   35 D1:CAC2 -  -  -  -  BG_Data_29:
   36 D1:CAC2 00 -  -  -  	.db 0
   37 D1:CAC3 00 -  -  -  	.db 0
   38 D1:CAC4 -  -  -  -  
   39 D1:CAC4 -  -  -  -  BG_Data_28:
   40 D1:CAC4 00 -  -  -  	.db 0
   41 D1:CAC5 00 -  -  -  	.db 0
   42 D1:CAC6 -  -  -  -  
   43 D1:CAC6 -  -  -  -  BG_Data_27:
   44 D1:CAC6 00 -  -  -  	.db 0
   45 D1:CAC7 00 -  -  -  	.db 0
   46 D1:CAC8 -  -  -  -  
   47 D1:CAC8 -  -  -  -  BG_Data_26:
   48 D1:CAC8 00 -  -  -  	.db 0
   49 D1:CAC9 00 -  -  -  	.db 0
   50 D1:CACA -  -  -  -  
   51 D1:CACA -  -  -  -  BG_Data_25:
   52 D1:CACA 00 -  -  -  	.db 0
   53 D1:CACB 00 -  -  -  	.db 0
   54 D1:CACC -  -  -  -  
   55 D1:CACC -  -  -  -  BG_Data_24:
   56 D1:CACC 00 -  -  -  	.db 0
   57 D1:CACD 00 -  -  -  	.db 0
   58 D1:CACE -  -  -  -  
   59 D1:CACE -  -  -  -  BG_Data_23:
   60 D1:CACE 00 -  -  -  	.db 0
   61 D1:CACF 00 -  -  -  	.db 0
   62 D1:CAD0 -  -  -  -  
   63 D1:CAD0 -  -  -  -  BG_Data_22:
   64 D1:CAD0 00 -  -  -  	.db 0
   65 D1:CAD1 00 -  -  -  	.db 0
   66 D1:CAD2 -  -  -  -  
   67 D1:CAD2 -  -  -  -  BG_Data_21:
   68 D1:CAD2 00 -  -  -  	.db 0
   69 D1:CAD3 00 -  -  -  	.db 0
   70 D1:CAD4 -  -  -  -  
   71 D1:CAD4 -  -  -  -  BG_Data_20:
   72 D1:CAD4 00 -  -  -  	.db 0
   73 D1:CAD5 00 -  -  -  	.db 0
   74 D1:CAD6 -  -  -  -  
   75 D1:CAD6 -  -  -  -  BG_Data_19:
   76 D1:CAD6 00 -  -  -  	.db 0
   77 D1:CAD7 00 -  -  -  	.db 0
   78 D1:CAD8 -  -  -  -  
   79 D1:CAD8 -  -  -  -  BG_Data_18:
   80 D1:CAD8 00 -  -  -  	.db 0
   81 D1:CAD9 00 -  -  -  	.db 0
   82 D1:CADA -  -  -  -  
   83 D1:CADA -  -  -  -  BG_Data_17:
   84 D1:CADA 00 -  -  -  	.db 0
   85 D1:CADB 00 -  -  -  	.db 0
   86 D1:CADC -  -  -  -  
   87 D1:CADC -  -  -  -  BG_Data_16:
   88 D1:CADC 00 -  -  -  	.db 0
   89 D1:CADD 00 -  -  -  	.db 0
   90 D1:CADE -  -  -  -  
   91 D1:CADE -  -  -  -  BG_Data_15:
   92 D1:CADE 00 -  -  -  	.db 0
   93 D1:CADF 00 -  -  -  	.db 0
   94 D1:CAE0 -  -  -  -  
   95 D1:CAE0 -  -  -  -  BG_Data_14:
   96 D1:CAE0 00 -  -  -  	.db 0
   97 D1:CAE1 00 -  -  -  	.db 0
   98 D1:CAE2 -  -  -  -  
   99 D1:CAE2 -  -  -  -  BG_Data_13:
  100 D1:CAE2 00 -  -  -  	.db 0
  101 D1:CAE3 00 -  -  -  	.db 0
  102 D1:CAE4 -  -  -  -  
  103 D1:CAE4 -  -  -  -  BG_Data_12:
  104 D1:CAE4 00 -  -  -  	.db 0
  105 D1:CAE5 00 -  -  -  	.db 0
  106 D1:CAE6 -  -  -  -  
  107 D1:CAE6 -  -  -  -  BG_Data_11:
  108 D1:CAE6 00 -  -  -  	.db 0
  109 D1:CAE7 00 -  -  -  	.db 0
  110 D1:CAE8 -  -  -  -  
  111 D1:CAE8 -  -  -  -  BG_Data_10:
  112 D1:CAE8 00 -  -  -  	.db 0
  113 D1:CAE9 00 -  -  -  	.db 0
  114 D1:CAEA -  -  -  -  
  115 D1:CAEA -  -  -  -  BG_Data_9:
  116 D1:CAEA 00 -  -  -  	.db 0
  117 D1:CAEB 00 -  -  -  	.db 0
  118 D1:CAEC -  -  -  -  
  119 D1:CAEC -  -  -  -  BG_Data_8:
  120 D1:CAEC 00 -  -  -  	.db 0
  121 D1:CAED 00 -  -  -  	.db 0
  122 D1:CAEE -  -  -  -  
  123 D1:CAEE -  -  -  -  BG_Data_7:
  124 D1:CAEE 00 -  -  -  	.db 0
  125 D1:CAEF 00 -  -  -  	.db 0
  126 D1:CAF0 -  -  -  -  
  127 D1:CAF0 -  -  -  -  BG_Data_6:
  128 D1:CAF0 00 -  -  -  	.db 0
  129 D1:CAF1 00 -  -  -  	.db 0
  130 D1:CAF2 -  -  -  -  
  131 D1:CAF2 -  -  -  -  BG_Data_5:
  132 D1:CAF2 00 -  -  -  	.db 0
  133 D1:CAF3 00 -  -  -  	.db 0
  134 D1:CAF4 -  -  -  -  
  135 D1:CAF4 -  -  -  -  BG_Data_4:
  136 D1:CAF4 00 -  -  -  	.db 0
  137 D1:CAF5 00 -  -  -  	.db 0
  138 D1:CAF6 -  -  -  -  
  139 D1:CAF6 -  -  -  -  BG_Data_3:
  140 D1:CAF6 00 -  -  -  	.db 0
  141 D1:CAF7 00 -  -  -  	.db 0
  142 D1:CAF8 -  -  -  -  
  143 D1:CAF8 -  -  -  -  BG_Data_2:
  144 D1:CAF8 00 -  -  -  	.db 0
  145 D1:CAF9 00 -  -  -  	.db 0
  146 D1:CAFA -  -  -  -  
  147 D1:CAFA -  -  -  -  BG_Data_1:
  148 D1:CAFA 00 -  -  -  	.db 0
  149 D1:CAFB 03 -  -  -  	.db 3
  150 D1:CAFC 22 FF 7D 1F 	.db 34, 255, 125, 31  ;SG_Cloud1
  151 D1:CB00 70 FF 76 1F 	.db 112, 255, 118, 31  ;SG_Cloud1
  152 D1:CB04 A3 FF 15 1F 	.db 163, 255, 21, 31  ;SG_Cloud1
  153 D1:CB08 -  -  -  -  
  154 D1:CB08 -  -  -  -  BG_Data_0:
  155 D1:CB08 00 -  -  -  	.db 0
  156 D1:CB09 17 -  -  -  	.db 23
  157 D1:CB0A 55 FF 00 1C 	.db 85, 255, 0, 28  ;SG_DarkGroundChunk
  158 D1:CB0E 4F FF 88 1C 	.db 79, 255, 136, 28  ;SG_DarkGroundChunk
  159 D1:CB12 55 FF 18 1C 	.db 85, 255, 24, 28  ;SG_DarkGroundChunk
  160 D1:CB16 50 FF 70 1C 	.db 80, 255, 112, 28  ;SG_DarkGroundChunk
  161 D1:CB1A 81 FF 6F 1E 	.db 129, 255, 111, 30  ;SG_BGTree2
  162 D1:CB1E 81 FF 8E 1E 	.db 129, 255, 142, 30  ;SG_BGTree2
  163 D1:CB22 88 FF 16 1E 	.db 136, 255, 22, 30  ;SG_BGTree2
  164 D1:CB26 8D FF 0B 1E 	.db 141, 255, 11, 30  ;SG_BGTree2
  165 D1:CB2A 7C FF 86 1D 	.db 124, 255, 134, 29  ;SG_BGTree1
  166 D1:CB2E 80 FF 80 1D 	.db 128, 255, 128, 29  ;SG_BGTree1
  167 D1:CB32 7F FF 77 1D 	.db 127, 255, 119, 29  ;SG_BGTree1
  168 D1:CB36 81 FF 1F 1D 	.db 129, 255, 31, 29  ;SG_BGTree1
  169 D1:CB3A 26 FF 70 08 	.db 38, 255, 112, 8  ;SG_GroundChunk2
  170 D1:CB3E 84 FF 7F 1E 	.db 132, 255, 127, 30  ;SG_BGTree2
  171 D1:CB42 26 FF 88 09 	.db 38, 255, 136, 9  ;SG_GroundChunk1
  172 D1:CB46 2A FF 00 08 	.db 42, 255, 0, 8  ;SG_GroundChunk2
  173 D1:CB4A 2D FF 18 09 	.db 45, 255, 24, 9  ;SG_GroundChunk1
  174 D1:CB4E 41 FF 18 08 	.db 65, 255, 24, 8  ;SG_GroundChunk2
  175 D1:CB52 3C FF 88 08 	.db 60, 255, 136, 8  ;SG_GroundChunk2
  176 D1:CB56 3D FF 70 09 	.db 61, 255, 112, 9  ;SG_GroundChunk1
  177 D1:CB5A 43 FF 00 09 	.db 67, 255, 0, 9  ;SG_GroundChunk1
  178 D1:CB5E 84 FF 00 1D 	.db 132, 255, 0, 29  ;SG_BGTree1
  179 D1:CB62 F2 FF 02 1F 	.db 242, 255, 2, 31  ;SG_Cloud1
  180 D1:CB66 -  -  -  -  
  181 D1:CB66 -  -  -  -  
  182 D1:CB66 -  -  -  -  
Listing for file "ascent.asm"
  611 D1:CB66 -  -  -  -  #include "generated/MG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\MG_Data.txt"
    1 D1:CB66 -  -  -  -  MG_Data_frame_table:
    2 D1:CB66 72 CD D1 -  	.dl MG_Data_0
    3 D1:CB69 1C CD D1 -  	.dl MG_Data_1
    4 D1:CB6C D2 CC D1 -  	.dl MG_Data_2
    5 D1:CB6F 84 CC D1 -  	.dl MG_Data_3
    6 D1:CB72 32 CC D1 -  	.dl MG_Data_4
    7 D1:CB75 F0 CB D1 -  	.dl MG_Data_5
    8 D1:CB78 EE CB D1 -  	.dl MG_Data_6
    9 D1:CB7B EC CB D1 -  	.dl MG_Data_7
   10 D1:CB7E EA CB D1 -  	.dl MG_Data_8
   11 D1:CB81 E8 CB D1 -  	.dl MG_Data_9
   12 D1:CB84 E6 CB D1 -  	.dl MG_Data_10
   13 D1:CB87 E4 CB D1 -  	.dl MG_Data_11
   14 D1:CB8A E2 CB D1 -  	.dl MG_Data_12
   15 D1:CB8D E0 CB D1 -  	.dl MG_Data_13
   16 D1:CB90 DE CB D1 -  	.dl MG_Data_14
   17 D1:CB93 DC CB D1 -  	.dl MG_Data_15
   18 D1:CB96 DA CB D1 -  	.dl MG_Data_16
   19 D1:CB99 D8 CB D1 -  	.dl MG_Data_17
   20 D1:CB9C D6 CB D1 -  	.dl MG_Data_18
   21 D1:CB9F D4 CB D1 -  	.dl MG_Data_19
   22 D1:CBA2 D2 CB D1 -  	.dl MG_Data_20
   23 D1:CBA5 D0 CB D1 -  	.dl MG_Data_21
   24 D1:CBA8 CE CB D1 -  	.dl MG_Data_22
   25 D1:CBAB CC CB D1 -  	.dl MG_Data_23
   26 D1:CBAE CA CB D1 -  	.dl MG_Data_24
   27 D1:CBB1 C8 CB D1 -  	.dl MG_Data_25
   28 D1:CBB4 C6 CB D1 -  	.dl MG_Data_26
   29 D1:CBB7 C4 CB D1 -  	.dl MG_Data_27
   30 D1:CBBA C2 CB D1 -  	.dl MG_Data_28
   31 D1:CBBD C0 CB D1 -  	.dl MG_Data_29
   32 D1:CBC0 -  -  -  -  
   33 D1:CBC0 -  -  -  -  
   34 D1:CBC0 -  -  -  -  
   35 D1:CBC0 -  -  -  -  MG_Data_29:
   36 D1:CBC0 00 -  -  -  	.db 0
   37 D1:CBC1 00 -  -  -  	.db 0
   38 D1:CBC2 -  -  -  -  
   39 D1:CBC2 -  -  -  -  MG_Data_28:
   40 D1:CBC2 00 -  -  -  	.db 0
   41 D1:CBC3 00 -  -  -  	.db 0
   42 D1:CBC4 -  -  -  -  
   43 D1:CBC4 -  -  -  -  MG_Data_27:
   44 D1:CBC4 00 -  -  -  	.db 0
   45 D1:CBC5 00 -  -  -  	.db 0
   46 D1:CBC6 -  -  -  -  
   47 D1:CBC6 -  -  -  -  MG_Data_26:
   48 D1:CBC6 00 -  -  -  	.db 0
   49 D1:CBC7 00 -  -  -  	.db 0
   50 D1:CBC8 -  -  -  -  
   51 D1:CBC8 -  -  -  -  MG_Data_25:
   52 D1:CBC8 00 -  -  -  	.db 0
   53 D1:CBC9 00 -  -  -  	.db 0
   54 D1:CBCA -  -  -  -  
   55 D1:CBCA -  -  -  -  MG_Data_24:
   56 D1:CBCA 00 -  -  -  	.db 0
   57 D1:CBCB 00 -  -  -  	.db 0
   58 D1:CBCC -  -  -  -  
   59 D1:CBCC -  -  -  -  MG_Data_23:
   60 D1:CBCC 00 -  -  -  	.db 0
   61 D1:CBCD 00 -  -  -  	.db 0
   62 D1:CBCE -  -  -  -  
   63 D1:CBCE -  -  -  -  MG_Data_22:
   64 D1:CBCE 00 -  -  -  	.db 0
   65 D1:CBCF 00 -  -  -  	.db 0
   66 D1:CBD0 -  -  -  -  
   67 D1:CBD0 -  -  -  -  MG_Data_21:
   68 D1:CBD0 00 -  -  -  	.db 0
   69 D1:CBD1 00 -  -  -  	.db 0
   70 D1:CBD2 -  -  -  -  
   71 D1:CBD2 -  -  -  -  MG_Data_20:
   72 D1:CBD2 00 -  -  -  	.db 0
   73 D1:CBD3 00 -  -  -  	.db 0
   74 D1:CBD4 -  -  -  -  
   75 D1:CBD4 -  -  -  -  MG_Data_19:
   76 D1:CBD4 00 -  -  -  	.db 0
   77 D1:CBD5 00 -  -  -  	.db 0
   78 D1:CBD6 -  -  -  -  
   79 D1:CBD6 -  -  -  -  MG_Data_18:
   80 D1:CBD6 00 -  -  -  	.db 0
   81 D1:CBD7 00 -  -  -  	.db 0
   82 D1:CBD8 -  -  -  -  
   83 D1:CBD8 -  -  -  -  MG_Data_17:
   84 D1:CBD8 00 -  -  -  	.db 0
   85 D1:CBD9 00 -  -  -  	.db 0
   86 D1:CBDA -  -  -  -  
   87 D1:CBDA -  -  -  -  MG_Data_16:
   88 D1:CBDA 00 -  -  -  	.db 0
   89 D1:CBDB 00 -  -  -  	.db 0
   90 D1:CBDC -  -  -  -  
   91 D1:CBDC -  -  -  -  MG_Data_15:
   92 D1:CBDC 00 -  -  -  	.db 0
   93 D1:CBDD 00 -  -  -  	.db 0
   94 D1:CBDE -  -  -  -  
   95 D1:CBDE -  -  -  -  MG_Data_14:
   96 D1:CBDE 00 -  -  -  	.db 0
   97 D1:CBDF 00 -  -  -  	.db 0
   98 D1:CBE0 -  -  -  -  
   99 D1:CBE0 -  -  -  -  MG_Data_13:
  100 D1:CBE0 00 -  -  -  	.db 0
  101 D1:CBE1 00 -  -  -  	.db 0
  102 D1:CBE2 -  -  -  -  
  103 D1:CBE2 -  -  -  -  MG_Data_12:
  104 D1:CBE2 00 -  -  -  	.db 0
  105 D1:CBE3 00 -  -  -  	.db 0
  106 D1:CBE4 -  -  -  -  
  107 D1:CBE4 -  -  -  -  MG_Data_11:
  108 D1:CBE4 00 -  -  -  	.db 0
  109 D1:CBE5 00 -  -  -  	.db 0
  110 D1:CBE6 -  -  -  -  
  111 D1:CBE6 -  -  -  -  MG_Data_10:
  112 D1:CBE6 00 -  -  -  	.db 0
  113 D1:CBE7 00 -  -  -  	.db 0
  114 D1:CBE8 -  -  -  -  
  115 D1:CBE8 -  -  -  -  MG_Data_9:
  116 D1:CBE8 00 -  -  -  	.db 0
  117 D1:CBE9 00 -  -  -  	.db 0
  118 D1:CBEA -  -  -  -  
  119 D1:CBEA -  -  -  -  MG_Data_8:
  120 D1:CBEA 00 -  -  -  	.db 0
  121 D1:CBEB 00 -  -  -  	.db 0
  122 D1:CBEC -  -  -  -  
  123 D1:CBEC -  -  -  -  MG_Data_7:
  124 D1:CBEC 00 -  -  -  	.db 0
  125 D1:CBED 00 -  -  -  	.db 0
  126 D1:CBEE -  -  -  -  
  127 D1:CBEE -  -  -  -  MG_Data_6:
  128 D1:CBEE 00 -  -  -  	.db 0
  129 D1:CBEF 00 -  -  -  	.db 0
  130 D1:CBF0 -  -  -  -  
  131 D1:CBF0 -  -  -  -  MG_Data_5:
  132 D1:CBF0 00 -  -  -  	.db 0
  133 D1:CBF1 10 -  -  -  	.db 16
  134 D1:CBF2 0F FF 1C 0D 	.db 15, 255, 28, 13  ;SG_TreeRow1
  135 D1:CBF6 FF FF 13 0D 	.db 255, 255, 19, 13  ;SG_TreeRow1
  136 D1:CBFA 9F FF 16 0D 	.db 159, 255, 22, 13  ;SG_TreeRow1
  137 D1:CBFE 1F FF 1B 0C 	.db 31, 255, 27, 12  ;SG_TreeRow5
  138 D1:CC02 BF FF 14 0E 	.db 191, 255, 20, 14  ;SG_TreeRow2
  139 D1:CC06 EF FF 14 0C 	.db 239, 255, 20, 12  ;SG_TreeRow5
  140 D1:CC0A 7F FF 18 0E 	.db 127, 255, 24, 14  ;SG_TreeRow2
  141 D1:CC0E DF FF 13 0F 	.db 223, 255, 19, 15  ;SG_TreeRow4
  142 D1:CC12 CF FF 13 0F 	.db 207, 255, 19, 15  ;SG_TreeRow4
  143 D1:CC16 AF FF 15 0B 	.db 175, 255, 21, 11  ;SG_TreeRow3
  144 D1:CC1A 6F FF 19 0E 	.db 111, 255, 25, 14  ;SG_TreeRow2
  145 D1:CC1E 3F FF 19 0E 	.db 63, 255, 25, 14  ;SG_TreeRow2
  146 D1:CC22 5F FF 18 0B 	.db 95, 255, 24, 11  ;SG_TreeRow3
  147 D1:CC26 2F FF 1A 0F 	.db 47, 255, 26, 15  ;SG_TreeRow4
  148 D1:CC2A 8F FF 17 0C 	.db 143, 255, 23, 12  ;SG_TreeRow5
  149 D1:CC2E 4F FF 19 0C 	.db 79, 255, 25, 12  ;SG_TreeRow5
  150 D1:CC32 -  -  -  -  
  151 D1:CC32 -  -  -  -  MG_Data_4:
  152 D1:CC32 00 -  -  -  	.db 0
  153 D1:CC33 14 -  -  -  	.db 20
  154 D1:CC34 0F FF 29 0D 	.db 15, 255, 41, 13  ;SG_TreeRow1
  155 D1:CC38 4F FF 26 0C 	.db 79, 255, 38, 12  ;SG_TreeRow5
  156 D1:CC3C 8F FF 22 0C 	.db 143, 255, 34, 12  ;SG_TreeRow5
  157 D1:CC40 3F FF 27 0F 	.db 63, 255, 39, 15  ;SG_TreeRow4
  158 D1:CC44 2F FF 27 0F 	.db 47, 255, 39, 15  ;SG_TreeRow4
  159 D1:CC48 6F FF 24 0E 	.db 111, 255, 36, 14  ;SG_TreeRow2
  160 D1:CC4C 9F FF 21 0F 	.db 159, 255, 33, 15  ;SG_TreeRow4
  161 D1:CC50 CF FF 1E 0C 	.db 207, 255, 30, 12  ;SG_TreeRow5
  162 D1:CC54 BF FF 1F 0F 	.db 191, 255, 31, 15  ;SG_TreeRow4
  163 D1:CC58 FF FF 1D 0B 	.db 255, 255, 29, 11  ;SG_TreeRow3
  164 D1:CC5C 1F FF 28 0B 	.db 31, 255, 40, 11  ;SG_TreeRow3
  165 D1:CC60 5F FF 25 0D 	.db 95, 255, 37, 13  ;SG_TreeRow1
  166 D1:CC64 7F FF 23 0D 	.db 127, 255, 35, 13  ;SG_TreeRow1
  167 D1:CC68 AF FF 20 0D 	.db 175, 255, 32, 13  ;SG_TreeRow1
  168 D1:CC6C EF FF 1E 0D 	.db 239, 255, 30, 13  ;SG_TreeRow1
  169 D1:CC70 DF FF 1F 0E 	.db 223, 255, 31, 14  ;SG_TreeRow2
  170 D1:CC74 CF FF 65 05 	.db 207, 255, 101, 5  ;SG_Branch5
  171 D1:CC78 2E FF 00 10 	.db 46, 255, 0, 16  ;SG_Branch1
  172 D1:CC7C C3 FF 54 17 	.db 195, 255, 84, 23  ;SG_BranchBase4
  173 D1:CC80 E4 FF 69 05 	.db 228, 255, 105, 5  ;SG_Branch5
  174 D1:CC84 -  -  -  -  
  175 D1:CC84 -  -  -  -  MG_Data_3:
  176 D1:CC84 00 -  -  -  	.db 0
  177 D1:CC85 13 -  -  -  	.db 19
  178 D1:CC86 0F FF 28 0C 	.db 15, 255, 40, 12  ;SG_TreeRow5
  179 D1:CC8A 5F FF 26 0F 	.db 95, 255, 38, 15  ;SG_TreeRow4
  180 D1:CC8E 6F FF 25 0C 	.db 111, 255, 37, 12  ;SG_TreeRow5
  181 D1:CC92 2F FF 28 0E 	.db 47, 255, 40, 14  ;SG_TreeRow2
  182 D1:CC96 4F FF 27 0B 	.db 79, 255, 39, 11  ;SG_TreeRow3
  183 D1:CC9A 7F FF 26 0B 	.db 127, 255, 38, 11  ;SG_TreeRow3
  184 D1:CC9E 8F FF 27 0E 	.db 143, 255, 39, 14  ;SG_TreeRow2
  185 D1:CCA2 BF FF 29 0E 	.db 191, 255, 41, 14  ;SG_TreeRow2
  186 D1:CCA6 9F FF 27 0B 	.db 159, 255, 39, 11  ;SG_TreeRow3
  187 D1:CCAA EF FF 2A 0F 	.db 239, 255, 42, 15  ;SG_TreeRow4
  188 D1:CCAE FF FF 2A 0B 	.db 255, 255, 42, 11  ;SG_TreeRow3
  189 D1:CCB2 1F FF 28 0B 	.db 31, 255, 40, 11  ;SG_TreeRow3
  190 D1:CCB6 3F FF 28 0D 	.db 63, 255, 40, 13  ;SG_TreeRow1
  191 D1:CCBA AF FF 28 0D 	.db 175, 255, 40, 13  ;SG_TreeRow1
  192 D1:CCBE CF FF 29 0D 	.db 207, 255, 41, 13  ;SG_TreeRow1
  193 D1:CCC2 DF FF 2A 0C 	.db 223, 255, 42, 12  ;SG_TreeRow5
  194 D1:CCC6 87 FF 02 01 	.db 135, 255, 2, 1  ;SG_Branch3
  195 D1:CCCA 5D FF 6C 06 	.db 93, 255, 108, 6  ;SG_Branch6
  196 D1:CCCE 95 FF 1E 16 	.db 149, 255, 30, 22  ;SG_BranchBase2
  197 D1:CCD2 -  -  -  -  
  198 D1:CCD2 -  -  -  -  MG_Data_2:
  199 D1:CCD2 00 -  -  -  	.db 0
  200 D1:CCD3 12 -  -  -  	.db 18
  201 D1:CCD4 0F FF 22 0B 	.db 15, 255, 34, 11  ;SG_TreeRow3
  202 D1:CCD8 4F FF 26 0F 	.db 79, 255, 38, 15  ;SG_TreeRow4
  203 D1:CCDC 3F FF 25 0C 	.db 63, 255, 37, 12  ;SG_TreeRow5
  204 D1:CCE0 6F FF 28 0B 	.db 111, 255, 40, 11  ;SG_TreeRow3
  205 D1:CCE4 8F FF 2A 0C 	.db 143, 255, 42, 12  ;SG_TreeRow5
  206 D1:CCE8 9F FF 2B 0F 	.db 159, 255, 43, 15  ;SG_TreeRow4
  207 D1:CCEC AF FF 2A 0C 	.db 175, 255, 42, 12  ;SG_TreeRow5
  208 D1:CCF0 1F FF 23 0D 	.db 31, 255, 35, 13  ;SG_TreeRow1
  209 D1:CCF4 5F FF 27 0E 	.db 95, 255, 39, 14  ;SG_TreeRow2
  210 D1:CCF8 CF FF 2A 0E 	.db 207, 255, 42, 14  ;SG_TreeRow2
  211 D1:CCFC DF FF 29 0F 	.db 223, 255, 41, 15  ;SG_TreeRow4
  212 D1:CD00 FF FF 28 0B 	.db 255, 255, 40, 11  ;SG_TreeRow3
  213 D1:CD04 2F FF 24 0D 	.db 47, 255, 36, 13  ;SG_TreeRow1
  214 D1:CD08 7F FF 29 0D 	.db 127, 255, 41, 13  ;SG_TreeRow1
  215 D1:CD0C BF FF 2A 0D 	.db 191, 255, 42, 13  ;SG_TreeRow1
  216 D1:CD10 EF FF 28 0D 	.db 239, 255, 40, 13  ;SG_TreeRow1
  217 D1:CD14 78 FF 60 15 	.db 120, 255, 96, 21  ;SG_BranchBase3
  218 D1:CD18 A8 FF 72 02 	.db 168, 255, 114, 2  ;SG_Branch7
  219 D1:CD1C -  -  -  -  
  220 D1:CD1C -  -  -  -  MG_Data_1:
  221 D1:CD1C 00 -  -  -  	.db 0
  222 D1:CD1D 15 -  -  -  	.db 21
  223 D1:CD1E 0F FF 21 0C 	.db 15, 255, 33, 12  ;SG_TreeRow5
  224 D1:CD22 5F FF 1F 0C 	.db 95, 255, 31, 12  ;SG_TreeRow5
  225 D1:CD26 AF FF 1F 0C 	.db 175, 255, 31, 12  ;SG_TreeRow5
  226 D1:CD2A 2F FF 20 0F 	.db 47, 255, 32, 15  ;SG_TreeRow4
  227 D1:CD2E 3F FF 1F 0E 	.db 63, 255, 31, 14  ;SG_TreeRow2
  228 D1:CD32 6F FF 1F 0E 	.db 111, 255, 31, 14  ;SG_TreeRow2
  229 D1:CD36 9F FF 1F 0F 	.db 159, 255, 31, 15  ;SG_TreeRow4
  230 D1:CD3A DF FF 21 0F 	.db 223, 255, 33, 15  ;SG_TreeRow4
  231 D1:CD3E 7F FF 1F 0B 	.db 127, 255, 31, 11  ;SG_TreeRow3
  232 D1:CD42 FF FF 22 0F 	.db 255, 255, 34, 15  ;SG_TreeRow4
  233 D1:CD46 1F FF 20 0B 	.db 31, 255, 32, 11  ;SG_TreeRow3
  234 D1:CD4A 4F FF 1F 0D 	.db 79, 255, 31, 13  ;SG_TreeRow1
  235 D1:CD4E 8F FF 1F 0D 	.db 143, 255, 31, 13  ;SG_TreeRow1
  236 D1:CD52 BF FF 20 0D 	.db 191, 255, 32, 13  ;SG_TreeRow1
  237 D1:CD56 CF FF 20 0D 	.db 207, 255, 32, 13  ;SG_TreeRow1
  238 D1:CD5A EF FF 21 0B 	.db 239, 255, 33, 11  ;SG_TreeRow3
  239 D1:CD5E A3 FF 52 14 	.db 163, 255, 82, 20  ;SG_Vines5
  240 D1:CD62 D9 FF 60 02 	.db 217, 255, 96, 2  ;SG_Branch7
  241 D1:CD66 AA FF 49 15 	.db 170, 255, 73, 21  ;SG_BranchBase3
  242 D1:CD6A EF FF 06 07 	.db 239, 255, 6, 7  ;SG_Branch2
  243 D1:CD6E A3 FF 4A 11 	.db 163, 255, 74, 17  ;SG_Vines2
  244 D1:CD72 -  -  -  -  
  245 D1:CD72 -  -  -  -  MG_Data_0:
  246 D1:CD72 00 -  -  -  	.db 0
  247 D1:CD73 21 -  -  -  	.db 33
  248 D1:CD74 39 FF 88 08 	.db 57, 255, 136, 8  ;SG_GroundChunk2
  249 D1:CD78 3B FF 72 09 	.db 59, 255, 114, 9  ;SG_GroundChunk1
  250 D1:CD7C 3B FF 16 08 	.db 59, 255, 22, 8  ;SG_GroundChunk2
  251 D1:CD80 3C FF 00 09 	.db 60, 255, 0, 9  ;SG_GroundChunk1
  252 D1:CD84 FF FF 22 0E 	.db 255, 255, 34, 14  ;SG_TreeRow2
  253 D1:CD88 EF FF 23 0B 	.db 239, 255, 35, 11  ;SG_TreeRow3
  254 D1:CD8C DF FF 22 0D 	.db 223, 255, 34, 13  ;SG_TreeRow1
  255 D1:CD90 CF FF 23 0C 	.db 207, 255, 35, 12  ;SG_TreeRow5
  256 D1:CD94 BF FF 22 0D 	.db 191, 255, 34, 13  ;SG_TreeRow1
  257 D1:CD98 AF FF 22 0F 	.db 175, 255, 34, 15  ;SG_TreeRow4
  258 D1:CD9C 9F FF 22 0E 	.db 159, 255, 34, 14  ;SG_TreeRow2
  259 D1:CDA0 8F FF 23 0D 	.db 143, 255, 35, 13  ;SG_TreeRow1
  260 D1:CDA4 7F FF 23 0B 	.db 127, 255, 35, 11  ;SG_TreeRow3
  261 D1:CDA8 6F FF 23 0C 	.db 111, 255, 35, 12  ;SG_TreeRow5
  262 D1:CDAC 5F FF 22 0E 	.db 95, 255, 34, 14  ;SG_TreeRow2
  263 D1:CDB0 4F FF 22 0D 	.db 79, 255, 34, 13  ;SG_TreeRow1
  264 D1:CDB4 2F FF 22 0B 	.db 47, 255, 34, 11  ;SG_TreeRow3
  265 D1:CDB8 35 FF 12 0A 	.db 53, 255, 18, 10  ;SG_Root1
  266 D1:CDBC 33 FF 86 0A 	.db 51, 255, 134, 10  ;SG_Root1
  267 D1:CDC0 3B FF 79 0A 	.db 59, 255, 121, 10  ;SG_Root1
  268 D1:CDC4 3F FF 22 0C 	.db 63, 255, 34, 12  ;SG_TreeRow5
  269 D1:CDC8 D1 FF 49 13 	.db 209, 255, 73, 19  ;SG_Vines7
  270 D1:CDCC CF FF 1F 12 	.db 207, 255, 31, 18  ;SG_Vines6
  271 D1:CDD0 23 FF 18 09 	.db 35, 255, 24, 9  ;SG_GroundChunk1
  272 D1:CDD4 25 FF 30 09 	.db 37, 255, 48, 9  ;SG_GroundChunk1
  273 D1:CDD8 24 FF 48 08 	.db 36, 255, 72, 8  ;SG_GroundChunk2
  274 D1:CDDC 25 FF 60 09 	.db 37, 255, 96, 9  ;SG_GroundChunk1
  275 D1:CDE0 22 FF 78 08 	.db 34, 255, 120, 8  ;SG_GroundChunk2
  276 D1:CDE4 1F FF 88 08 	.db 31, 255, 136, 8  ;SG_GroundChunk2
  277 D1:CDE8 22 FF 00 08 	.db 34, 255, 0, 8  ;SG_GroundChunk2
  278 D1:CDEC E9 FF 00 10 	.db 233, 255, 0, 16  ;SG_Branch1
  279 D1:CDF0 DB 10 74 59 	.db 219, 16, 116, 89  ;Vine5_Slow
  280 D1:CDF4 CF FF 17 11 	.db 207, 255, 23, 17  ;SG_Vines2
  281 D1:CDF8 -  -  -  -  
  282 D1:CDF8 -  -  -  -  
  283 D1:CDF8 -  -  -  -  
Listing for file "ascent.asm"
  612 D1:CDF8 -  -  -  -  #include "generated/MG2_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\MG2_Data.txt"
    1 D1:CDF8 -  -  -  -  MG2_Data_frame_table:
    2 D1:CDF8 BC CE D1 -  	.dl MG2_Data_0
    3 D1:CDFB A2 CE D1 -  	.dl MG2_Data_1
    4 D1:CDFE 88 CE D1 -  	.dl MG2_Data_2
    5 D1:CE01 86 CE D1 -  	.dl MG2_Data_3
    6 D1:CE04 84 CE D1 -  	.dl MG2_Data_4
    7 D1:CE07 82 CE D1 -  	.dl MG2_Data_5
    8 D1:CE0A 80 CE D1 -  	.dl MG2_Data_6
    9 D1:CE0D 7E CE D1 -  	.dl MG2_Data_7
   10 D1:CE10 7C CE D1 -  	.dl MG2_Data_8
   11 D1:CE13 7A CE D1 -  	.dl MG2_Data_9
   12 D1:CE16 78 CE D1 -  	.dl MG2_Data_10
   13 D1:CE19 76 CE D1 -  	.dl MG2_Data_11
   14 D1:CE1C 74 CE D1 -  	.dl MG2_Data_12
   15 D1:CE1F 72 CE D1 -  	.dl MG2_Data_13
   16 D1:CE22 70 CE D1 -  	.dl MG2_Data_14
   17 D1:CE25 6E CE D1 -  	.dl MG2_Data_15
   18 D1:CE28 6C CE D1 -  	.dl MG2_Data_16
   19 D1:CE2B 6A CE D1 -  	.dl MG2_Data_17
   20 D1:CE2E 68 CE D1 -  	.dl MG2_Data_18
   21 D1:CE31 66 CE D1 -  	.dl MG2_Data_19
   22 D1:CE34 64 CE D1 -  	.dl MG2_Data_20
   23 D1:CE37 62 CE D1 -  	.dl MG2_Data_21
   24 D1:CE3A 60 CE D1 -  	.dl MG2_Data_22
   25 D1:CE3D 5E CE D1 -  	.dl MG2_Data_23
   26 D1:CE40 5C CE D1 -  	.dl MG2_Data_24
   27 D1:CE43 5A CE D1 -  	.dl MG2_Data_25
   28 D1:CE46 58 CE D1 -  	.dl MG2_Data_26
   29 D1:CE49 56 CE D1 -  	.dl MG2_Data_27
   30 D1:CE4C 54 CE D1 -  	.dl MG2_Data_28
   31 D1:CE4F 52 CE D1 -  	.dl MG2_Data_29
   32 D1:CE52 -  -  -  -  
   33 D1:CE52 -  -  -  -  
   34 D1:CE52 -  -  -  -  
   35 D1:CE52 -  -  -  -  MG2_Data_29:
   36 D1:CE52 00 -  -  -  	.db 0
   37 D1:CE53 00 -  -  -  	.db 0
   38 D1:CE54 -  -  -  -  
   39 D1:CE54 -  -  -  -  MG2_Data_28:
   40 D1:CE54 00 -  -  -  	.db 0
   41 D1:CE55 00 -  -  -  	.db 0
   42 D1:CE56 -  -  -  -  
   43 D1:CE56 -  -  -  -  MG2_Data_27:
   44 D1:CE56 00 -  -  -  	.db 0
   45 D1:CE57 00 -  -  -  	.db 0
   46 D1:CE58 -  -  -  -  
   47 D1:CE58 -  -  -  -  MG2_Data_26:
   48 D1:CE58 00 -  -  -  	.db 0
   49 D1:CE59 00 -  -  -  	.db 0
   50 D1:CE5A -  -  -  -  
   51 D1:CE5A -  -  -  -  MG2_Data_25:
   52 D1:CE5A 00 -  -  -  	.db 0
   53 D1:CE5B 00 -  -  -  	.db 0
   54 D1:CE5C -  -  -  -  
   55 D1:CE5C -  -  -  -  MG2_Data_24:
   56 D1:CE5C 00 -  -  -  	.db 0
   57 D1:CE5D 00 -  -  -  	.db 0
   58 D1:CE5E -  -  -  -  
   59 D1:CE5E -  -  -  -  MG2_Data_23:
   60 D1:CE5E 00 -  -  -  	.db 0
   61 D1:CE5F 00 -  -  -  	.db 0
   62 D1:CE60 -  -  -  -  
   63 D1:CE60 -  -  -  -  MG2_Data_22:
   64 D1:CE60 00 -  -  -  	.db 0
   65 D1:CE61 00 -  -  -  	.db 0
   66 D1:CE62 -  -  -  -  
   67 D1:CE62 -  -  -  -  MG2_Data_21:
   68 D1:CE62 00 -  -  -  	.db 0
   69 D1:CE63 00 -  -  -  	.db 0
   70 D1:CE64 -  -  -  -  
   71 D1:CE64 -  -  -  -  MG2_Data_20:
   72 D1:CE64 00 -  -  -  	.db 0
   73 D1:CE65 00 -  -  -  	.db 0
   74 D1:CE66 -  -  -  -  
   75 D1:CE66 -  -  -  -  MG2_Data_19:
   76 D1:CE66 00 -  -  -  	.db 0
   77 D1:CE67 00 -  -  -  	.db 0
   78 D1:CE68 -  -  -  -  
   79 D1:CE68 -  -  -  -  MG2_Data_18:
   80 D1:CE68 00 -  -  -  	.db 0
   81 D1:CE69 00 -  -  -  	.db 0
   82 D1:CE6A -  -  -  -  
   83 D1:CE6A -  -  -  -  MG2_Data_17:
   84 D1:CE6A 00 -  -  -  	.db 0
   85 D1:CE6B 00 -  -  -  	.db 0
   86 D1:CE6C -  -  -  -  
   87 D1:CE6C -  -  -  -  MG2_Data_16:
   88 D1:CE6C 00 -  -  -  	.db 0
   89 D1:CE6D 00 -  -  -  	.db 0
   90 D1:CE6E -  -  -  -  
   91 D1:CE6E -  -  -  -  MG2_Data_15:
   92 D1:CE6E 00 -  -  -  	.db 0
   93 D1:CE6F 00 -  -  -  	.db 0
   94 D1:CE70 -  -  -  -  
   95 D1:CE70 -  -  -  -  MG2_Data_14:
   96 D1:CE70 00 -  -  -  	.db 0
   97 D1:CE71 00 -  -  -  	.db 0
   98 D1:CE72 -  -  -  -  
   99 D1:CE72 -  -  -  -  MG2_Data_13:
  100 D1:CE72 00 -  -  -  	.db 0
  101 D1:CE73 00 -  -  -  	.db 0
  102 D1:CE74 -  -  -  -  
  103 D1:CE74 -  -  -  -  MG2_Data_12:
  104 D1:CE74 00 -  -  -  	.db 0
  105 D1:CE75 00 -  -  -  	.db 0
  106 D1:CE76 -  -  -  -  
  107 D1:CE76 -  -  -  -  MG2_Data_11:
  108 D1:CE76 00 -  -  -  	.db 0
  109 D1:CE77 00 -  -  -  	.db 0
  110 D1:CE78 -  -  -  -  
  111 D1:CE78 -  -  -  -  MG2_Data_10:
  112 D1:CE78 00 -  -  -  	.db 0
  113 D1:CE79 00 -  -  -  	.db 0
  114 D1:CE7A -  -  -  -  
  115 D1:CE7A -  -  -  -  MG2_Data_9:
  116 D1:CE7A 00 -  -  -  	.db 0
  117 D1:CE7B 00 -  -  -  	.db 0
  118 D1:CE7C -  -  -  -  
  119 D1:CE7C -  -  -  -  MG2_Data_8:
  120 D1:CE7C 00 -  -  -  	.db 0
  121 D1:CE7D 00 -  -  -  	.db 0
  122 D1:CE7E -  -  -  -  
  123 D1:CE7E -  -  -  -  MG2_Data_7:
  124 D1:CE7E 00 -  -  -  	.db 0
  125 D1:CE7F 00 -  -  -  	.db 0
  126 D1:CE80 -  -  -  -  
  127 D1:CE80 -  -  -  -  MG2_Data_6:
  128 D1:CE80 00 -  -  -  	.db 0
  129 D1:CE81 00 -  -  -  	.db 0
  130 D1:CE82 -  -  -  -  
  131 D1:CE82 -  -  -  -  MG2_Data_5:
  132 D1:CE82 00 -  -  -  	.db 0
  133 D1:CE83 00 -  -  -  	.db 0
  134 D1:CE84 -  -  -  -  
  135 D1:CE84 -  -  -  -  MG2_Data_4:
  136 D1:CE84 00 -  -  -  	.db 0
  137 D1:CE85 00 -  -  -  	.db 0
  138 D1:CE86 -  -  -  -  
  139 D1:CE86 -  -  -  -  MG2_Data_3:
  140 D1:CE86 00 -  -  -  	.db 0
  141 D1:CE87 00 -  -  -  	.db 0
  142 D1:CE88 -  -  -  -  
  143 D1:CE88 -  -  -  -  MG2_Data_2:
  144 D1:CE88 00 -  -  -  	.db 0
  145 D1:CE89 06 -  -  -  	.db 6
  146 D1:CE8A 15 FF 56 18 	.db 21, 255, 86, 24  ;SG_Platform3
  147 D1:CE8E 5E FF 24 19 	.db 94, 255, 36, 25  ;SG_Platform4
  148 D1:CE92 AC FF 12 1A 	.db 172, 255, 18, 26  ;SG_Platform1
  149 D1:CE96 1E 09 69 6E 	.db 30, 9, 105, 110  ;Spikes_0_Fast
  150 D1:CE9A 1E 09 75 6E 	.db 30, 9, 117, 110  ;Spikes_0_Fast
  151 D1:CE9E 67 09 37 6E 	.db 103, 9, 55, 110  ;Spikes_0_Fast
  152 D1:CEA2 -  -  -  -  
  153 D1:CEA2 -  -  -  -  MG2_Data_1:
  154 D1:CEA2 00 -  -  -  	.db 0
  155 D1:CEA3 06 -  -  -  	.db 6
  156 D1:CEA4 65 FF 30 18 	.db 101, 255, 48, 24  ;SG_Platform3
  157 D1:CEA8 1E FF 05 19 	.db 30, 255, 5, 25  ;SG_Platform4
  158 D1:CEAC 65 FF 67 1B 	.db 101, 255, 103, 27  ;SG_Platform2
  159 D1:CEB0 AA FF 59 1B 	.db 170, 255, 89, 27  ;SG_Platform2
  160 D1:CEB4 D7 FF 26 1A 	.db 215, 255, 38, 26  ;SG_Platform1
  161 D1:CEB8 6E 09 46 6E 	.db 110, 9, 70, 110  ;Spikes_0_Fast
  162 D1:CEBC -  -  -  -  
  163 D1:CEBC -  -  -  -  MG2_Data_0:
  164 D1:CEBC 00 -  -  -  	.db 0
  165 D1:CEBD 04 -  -  -  	.db 4
  166 D1:CEBE 5D FF 69 18 	.db 93, 255, 105, 24  ;SG_Platform3
  167 D1:CEC2 5D FF 05 19 	.db 93, 255, 5, 25  ;SG_Platform4
  168 D1:CEC6 91 FF 41 1A 	.db 145, 255, 65, 26  ;SG_Platform1
  169 D1:CECA EB FF 54 1A 	.db 235, 255, 84, 26  ;SG_Platform1
  170 D1:CECE -  -  -  -  
  171 D1:CECE -  -  -  -  
  172 D1:CECE -  -  -  -  
Listing for file "ascent.asm"
  613 D1:CECE -  -  -  -  #include "generated/FG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\FG_Data.txt"
    1 D1:CECE -  -  -  -  FG_Data_frame_table:
    2 D1:CECE BA CF D1 -  	.dl FG_Data_0
    3 D1:CED1 A8 CF D1 -  	.dl FG_Data_1
    4 D1:CED4 9E CF D1 -  	.dl FG_Data_2
    5 D1:CED7 98 CF D1 -  	.dl FG_Data_3
    6 D1:CEDA 92 CF D1 -  	.dl FG_Data_4
    7 D1:CEDD 88 CF D1 -  	.dl FG_Data_5
    8 D1:CEE0 82 CF D1 -  	.dl FG_Data_6
    9 D1:CEE3 78 CF D1 -  	.dl FG_Data_7
   10 D1:CEE6 6A CF D1 -  	.dl FG_Data_8
   11 D1:CEE9 54 CF D1 -  	.dl FG_Data_9
   12 D1:CEEC 4E CF D1 -  	.dl FG_Data_10
   13 D1:CEEF 4C CF D1 -  	.dl FG_Data_11
   14 D1:CEF2 4A CF D1 -  	.dl FG_Data_12
   15 D1:CEF5 48 CF D1 -  	.dl FG_Data_13
   16 D1:CEF8 46 CF D1 -  	.dl FG_Data_14
   17 D1:CEFB 44 CF D1 -  	.dl FG_Data_15
   18 D1:CEFE 42 CF D1 -  	.dl FG_Data_16
   19 D1:CF01 40 CF D1 -  	.dl FG_Data_17
   20 D1:CF04 3E CF D1 -  	.dl FG_Data_18
   21 D1:CF07 3C CF D1 -  	.dl FG_Data_19
   22 D1:CF0A 3A CF D1 -  	.dl FG_Data_20
   23 D1:CF0D 38 CF D1 -  	.dl FG_Data_21
   24 D1:CF10 36 CF D1 -  	.dl FG_Data_22
   25 D1:CF13 34 CF D1 -  	.dl FG_Data_23
   26 D1:CF16 32 CF D1 -  	.dl FG_Data_24
   27 D1:CF19 30 CF D1 -  	.dl FG_Data_25
   28 D1:CF1C 2E CF D1 -  	.dl FG_Data_26
   29 D1:CF1F 2C CF D1 -  	.dl FG_Data_27
   30 D1:CF22 2A CF D1 -  	.dl FG_Data_28
   31 D1:CF25 28 CF D1 -  	.dl FG_Data_29
   32 D1:CF28 -  -  -  -  
   33 D1:CF28 -  -  -  -  
   34 D1:CF28 -  -  -  -  
   35 D1:CF28 -  -  -  -  FG_Data_29:
   36 D1:CF28 00 -  -  -  	.db 0
   37 D1:CF29 00 -  -  -  	.db 0
   38 D1:CF2A -  -  -  -  
   39 D1:CF2A -  -  -  -  FG_Data_28:
   40 D1:CF2A 00 -  -  -  	.db 0
   41 D1:CF2B 00 -  -  -  	.db 0
   42 D1:CF2C -  -  -  -  
   43 D1:CF2C -  -  -  -  FG_Data_27:
   44 D1:CF2C 00 -  -  -  	.db 0
   45 D1:CF2D 00 -  -  -  	.db 0
   46 D1:CF2E -  -  -  -  
   47 D1:CF2E -  -  -  -  FG_Data_26:
   48 D1:CF2E 00 -  -  -  	.db 0
   49 D1:CF2F 00 -  -  -  	.db 0
   50 D1:CF30 -  -  -  -  
   51 D1:CF30 -  -  -  -  FG_Data_25:
   52 D1:CF30 00 -  -  -  	.db 0
   53 D1:CF31 00 -  -  -  	.db 0
   54 D1:CF32 -  -  -  -  
   55 D1:CF32 -  -  -  -  FG_Data_24:
   56 D1:CF32 00 -  -  -  	.db 0
   57 D1:CF33 00 -  -  -  	.db 0
   58 D1:CF34 -  -  -  -  
   59 D1:CF34 -  -  -  -  FG_Data_23:
   60 D1:CF34 00 -  -  -  	.db 0
   61 D1:CF35 00 -  -  -  	.db 0
   62 D1:CF36 -  -  -  -  
   63 D1:CF36 -  -  -  -  FG_Data_22:
   64 D1:CF36 00 -  -  -  	.db 0
   65 D1:CF37 00 -  -  -  	.db 0
   66 D1:CF38 -  -  -  -  
   67 D1:CF38 -  -  -  -  FG_Data_21:
   68 D1:CF38 00 -  -  -  	.db 0
   69 D1:CF39 00 -  -  -  	.db 0
   70 D1:CF3A -  -  -  -  
   71 D1:CF3A -  -  -  -  FG_Data_20:
   72 D1:CF3A 00 -  -  -  	.db 0
   73 D1:CF3B 00 -  -  -  	.db 0
   74 D1:CF3C -  -  -  -  
   75 D1:CF3C -  -  -  -  FG_Data_19:
   76 D1:CF3C 00 -  -  -  	.db 0
   77 D1:CF3D 00 -  -  -  	.db 0
   78 D1:CF3E -  -  -  -  
   79 D1:CF3E -  -  -  -  FG_Data_18:
   80 D1:CF3E 00 -  -  -  	.db 0
   81 D1:CF3F 00 -  -  -  	.db 0
   82 D1:CF40 -  -  -  -  
   83 D1:CF40 -  -  -  -  FG_Data_17:
   84 D1:CF40 00 -  -  -  	.db 0
   85 D1:CF41 00 -  -  -  	.db 0
   86 D1:CF42 -  -  -  -  
   87 D1:CF42 -  -  -  -  FG_Data_16:
   88 D1:CF42 00 -  -  -  	.db 0
   89 D1:CF43 00 -  -  -  	.db 0
   90 D1:CF44 -  -  -  -  
   91 D1:CF44 -  -  -  -  FG_Data_15:
   92 D1:CF44 00 -  -  -  	.db 0
   93 D1:CF45 00 -  -  -  	.db 0
   94 D1:CF46 -  -  -  -  
   95 D1:CF46 -  -  -  -  FG_Data_14:
   96 D1:CF46 00 -  -  -  	.db 0
   97 D1:CF47 00 -  -  -  	.db 0
   98 D1:CF48 -  -  -  -  
   99 D1:CF48 -  -  -  -  FG_Data_13:
  100 D1:CF48 00 -  -  -  	.db 0
  101 D1:CF49 00 -  -  -  	.db 0
  102 D1:CF4A -  -  -  -  
  103 D1:CF4A -  -  -  -  FG_Data_12:
  104 D1:CF4A 00 -  -  -  	.db 0
  105 D1:CF4B 00 -  -  -  	.db 0
  106 D1:CF4C -  -  -  -  
  107 D1:CF4C -  -  -  -  FG_Data_11:
  108 D1:CF4C 00 -  -  -  	.db 0
  109 D1:CF4D 00 -  -  -  	.db 0
  110 D1:CF4E -  -  -  -  
  111 D1:CF4E -  -  -  -  FG_Data_10:
  112 D1:CF4E 00 -  -  -  	.db 0
  113 D1:CF4F 01 -  -  -  	.db 1
  114 D1:CF50 CA FF 80 01 	.db 202, 255, 128, 1  ;SG_Branch3
  115 D1:CF54 -  -  -  -  
  116 D1:CF54 -  -  -  -  FG_Data_9:
  117 D1:CF54 00 -  -  -  	.db 0
  118 D1:CF55 05 -  -  -  	.db 5
  119 D1:CF56 D5 FF 72 04 	.db 213, 255, 114, 4  ;SG_Branch4
  120 D1:CF5A B0 0E 00 31 	.db 176, 14, 0, 49  ;Branches_3_Fast
  121 D1:CF5E B1 0E 09 32 	.db 177, 14, 9, 50  ;Branches_2_Fast
  122 D1:CF62 B1 0E 12 2B 	.db 177, 14, 18, 43  ;Branches_4_Fast_F
  123 D1:CF66 EA FF 13 02 	.db 234, 255, 19, 2  ;SG_Branch7
  124 D1:CF6A -  -  -  -  
  125 D1:CF6A -  -  -  -  FG_Data_8:
  126 D1:CF6A 00 -  -  -  	.db 0
  127 D1:CF6B 03 -  -  -  	.db 3
  128 D1:CF6C 7C 0E 97 2F 	.db 124, 14, 151, 47  ;Branches_5_Fast
  129 D1:CF70 7C 0E 8E 30 	.db 124, 14, 142, 48  ;Branches_4_Fast
  130 D1:CF74 BA FF 6E 07 	.db 186, 255, 110, 7  ;SG_Branch2
  131 D1:CF78 -  -  -  -  
  132 D1:CF78 -  -  -  -  FG_Data_7:
  133 D1:CF78 00 -  -  -  	.db 0
  134 D1:CF79 02 -  -  -  	.db 2
  135 D1:CF7A 87 FF 00 05 	.db 135, 255, 0, 5  ;SG_Branch5
  136 D1:CF7E ED FF 00 06 	.db 237, 255, 0, 6  ;SG_Branch6
  137 D1:CF82 -  -  -  -  
  138 D1:CF82 -  -  -  -  FG_Data_6:
  139 D1:CF82 00 -  -  -  	.db 0
  140 D1:CF83 01 -  -  -  	.db 1
  141 D1:CF84 64 FF 00 06 	.db 100, 255, 0, 6  ;SG_Branch6
  142 D1:CF88 -  -  -  -  
  143 D1:CF88 -  -  -  -  FG_Data_5:
  144 D1:CF88 00 -  -  -  	.db 0
  145 D1:CF89 02 -  -  -  	.db 2
  146 D1:CF8A D7 FF 80 01 	.db 215, 255, 128, 1  ;SG_Branch3
  147 D1:CF8E 5D FF 00 05 	.db 93, 255, 0, 5  ;SG_Branch5
  148 D1:CF92 -  -  -  -  
  149 D1:CF92 -  -  -  -  FG_Data_4:
  150 D1:CF92 00 -  -  -  	.db 0
  151 D1:CF93 01 -  -  -  	.db 1
  152 D1:CF94 B5 FF 80 01 	.db 181, 255, 128, 1  ;SG_Branch3
  153 D1:CF98 -  -  -  -  
  154 D1:CF98 -  -  -  -  FG_Data_3:
  155 D1:CF98 00 -  -  -  	.db 0
  156 D1:CF99 01 -  -  -  	.db 1
  157 D1:CF9A C1 FF 00 06 	.db 193, 255, 0, 6  ;SG_Branch6
  158 D1:CF9E -  -  -  -  
  159 D1:CF9E -  -  -  -  FG_Data_2:
  160 D1:CF9E 00 -  -  -  	.db 0
  161 D1:CF9F 02 -  -  -  	.db 2
  162 D1:CFA0 FB FF 72 04 	.db 251, 255, 114, 4  ;SG_Branch4
  163 D1:CFA4 93 FF 00 05 	.db 147, 255, 0, 5  ;SG_Branch5
  164 D1:CFA8 -  -  -  -  
  165 D1:CFA8 -  -  -  -  FG_Data_1:
  166 D1:CFA8 00 -  -  -  	.db 0
  167 D1:CFA9 04 -  -  -  	.db 4
  168 D1:CFAA C9 FF 80 01 	.db 201, 255, 128, 1  ;SG_Branch3
  169 D1:CFAE 87 FF 00 02 	.db 135, 255, 0, 2  ;SG_Branch7
  170 D1:CFB2 39 FF 14 03 	.db 57, 255, 20, 3  ;SG_Lantern1
  171 D1:CFB6 4B 0E 00 09 	.db 75, 14, 0, 9  ;Branches_9_Fast
  172 D1:CFBA -  -  -  -  
  173 D1:CFBA -  -  -  -  FG_Data_0:
  174 D1:CFBA 00 -  -  -  	.db 0
  175 D1:CFBB 05 -  -  -  	.db 5
  176 D1:CFBC 19 1A 94 01 	.db 25, 26, 148, 1  ;BigGrassBase_Fast
  177 D1:CFC0 1E 17 93 04 	.db 30, 23, 147, 4  ;BigGrassTop_Fast_F
  178 D1:CFC4 33 FF 00 00 	.db 51, 255, 0, 0  ;SG_GroundGrass
  179 D1:CFC8 33 FF 38 00 	.db 51, 255, 56, 0  ;SG_GroundGrass
  180 D1:CFCC 33 FF 5F 00 	.db 51, 255, 95, 0  ;SG_GroundGrass
  181 D1:CFD0 -  -  -  -  
  182 D1:CFD0 -  -  -  -  
  183 D1:CFD0 -  -  -  -  
Listing for file "ascent.asm"
  614 D1:CFD0 -  -  -  -  #include "generated/DecompressCalls.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\DecompressCalls.txt"
    1 D1:CFD0 -  -  -  -  decompress_calls_table_up:
    2 D1:CFD0 41 D4 D1 -  	.dl decompress_frame_up_0
    3 D1:CFD3 02 D6 D1 -  	.dl decompress_frame_up_1
    4 D1:CFD6 03 D6 D1 -  	.dl decompress_frame_up_2
    5 D1:CFD9 20 D6 D1 -  	.dl decompress_frame_up_3
    6 D1:CFDC 21 D6 D1 -  	.dl decompress_frame_up_4
    7 D1:CFDF 37 D6 D1 -  	.dl decompress_frame_up_5
    8 D1:CFE2 3F D6 D1 -  	.dl decompress_frame_up_6
    9 D1:CFE5 40 D6 D1 -  	.dl decompress_frame_up_7
   10 D1:CFE8 41 D6 D1 -  	.dl decompress_frame_up_8
   11 D1:CFEB 42 D6 D1 -  	.dl decompress_frame_up_9
   12 D1:CFEE 43 D6 D1 -  	.dl decompress_frame_up_10
   13 D1:CFF1 44 D6 D1 -  	.dl decompress_frame_up_11
   14 D1:CFF4 45 D6 D1 -  	.dl decompress_frame_up_12
   15 D1:CFF7 46 D6 D1 -  	.dl decompress_frame_up_13
   16 D1:CFFA 47 D6 D1 -  	.dl decompress_frame_up_14
   17 D1:CFFD 48 D6 D1 -  	.dl decompress_frame_up_15
   18 D1:D000 49 D6 D1 -  	.dl decompress_frame_up_16
   19 D1:D003 4A D6 D1 -  	.dl decompress_frame_up_17
   20 D1:D006 4B D6 D1 -  	.dl decompress_frame_up_18
   21 D1:D009 4C D6 D1 -  	.dl decompress_frame_up_19
   22 D1:D00C 4D D6 D1 -  	.dl decompress_frame_up_20
   23 D1:D00F 4E D6 D1 -  	.dl decompress_frame_up_21
   24 D1:D012 4F D6 D1 -  	.dl decompress_frame_up_22
   25 D1:D015 50 D6 D1 -  	.dl decompress_frame_up_23
   26 D1:D018 51 D6 D1 -  	.dl decompress_frame_up_24
   27 D1:D01B 52 D6 D1 -  	.dl decompress_frame_up_25
   28 D1:D01E 53 D6 D1 -  	.dl decompress_frame_up_26
   29 D1:D021 54 D6 D1 -  	.dl decompress_frame_up_27
   30 D1:D024 55 D6 D1 -  	.dl decompress_frame_up_28
   31 D1:D027 56 D6 D1 -  	.dl decompress_frame_up_29
   32 D1:D02A 57 D6 D1 -  	.dl decompress_frame_up_30
   33 D1:D02D 58 D6 D1 -  	.dl decompress_frame_up_31
   34 D1:D030 59 D6 D1 -  	.dl decompress_frame_up_32
   35 D1:D033 5A D6 D1 -  	.dl decompress_frame_up_33
   36 D1:D036 5B D6 D1 -  	.dl decompress_frame_up_34
   37 D1:D039 5C D6 D1 -  	.dl decompress_frame_up_35
   38 D1:D03C 5D D6 D1 -  	.dl decompress_frame_up_36
   39 D1:D03F 5E D6 D1 -  	.dl decompress_frame_up_37
   40 D1:D042 5F D6 D1 -  	.dl decompress_frame_up_38
   41 D1:D045 60 D6 D1 -  	.dl decompress_frame_up_39
   42 D1:D048 61 D6 D1 -  	.dl decompress_frame_up_40
   43 D1:D04B 62 D6 D1 -  	.dl decompress_frame_up_41
   44 D1:D04E 63 D6 D1 -  	.dl decompress_frame_up_42
   45 D1:D051 64 D6 D1 -  	.dl decompress_frame_up_43
   46 D1:D054 65 D6 D1 -  	.dl decompress_frame_up_44
   47 D1:D057 66 D6 D1 -  	.dl decompress_frame_up_45
   48 D1:D05A 67 D6 D1 -  	.dl decompress_frame_up_46
   49 D1:D05D 68 D6 D1 -  	.dl decompress_frame_up_47
   50 D1:D060 69 D6 D1 -  	.dl decompress_frame_up_48
   51 D1:D063 6A D6 D1 -  	.dl decompress_frame_up_49
   52 D1:D066 6B D6 D1 -  	.dl decompress_frame_up_50
   53 D1:D069 6C D6 D1 -  	.dl decompress_frame_up_51
   54 D1:D06C 6D D6 D1 -  	.dl decompress_frame_up_52
   55 D1:D06F 6E D6 D1 -  	.dl decompress_frame_up_53
   56 D1:D072 6F D6 D1 -  	.dl decompress_frame_up_54
   57 D1:D075 70 D6 D1 -  	.dl decompress_frame_up_55
   58 D1:D078 71 D6 D1 -  	.dl decompress_frame_up_56
   59 D1:D07B 72 D6 D1 -  	.dl decompress_frame_up_57
   60 D1:D07E 73 D6 D1 -  	.dl decompress_frame_up_58
   61 D1:D081 74 D6 D1 -  	.dl decompress_frame_up_59
   62 D1:D084 75 D6 D1 -  	.dl decompress_frame_up_60
   63 D1:D087 76 D6 D1 -  	.dl decompress_frame_up_61
   64 D1:D08A 77 D6 D1 -  	.dl decompress_frame_up_62
   65 D1:D08D 78 D6 D1 -  	.dl decompress_frame_up_63
   66 D1:D090 79 D6 D1 -  	.dl decompress_frame_up_64
   67 D1:D093 7A D6 D1 -  	.dl decompress_frame_up_65
   68 D1:D096 7B D6 D1 -  	.dl decompress_frame_up_66
   69 D1:D099 7C D6 D1 -  	.dl decompress_frame_up_67
   70 D1:D09C 7D D6 D1 -  	.dl decompress_frame_up_68
   71 D1:D09F 7E D6 D1 -  	.dl decompress_frame_up_69
   72 D1:D0A2 7F D6 D1 -  	.dl decompress_frame_up_70
   73 D1:D0A5 80 D6 D1 -  	.dl decompress_frame_up_71
   74 D1:D0A8 81 D6 D1 -  	.dl decompress_frame_up_72
   75 D1:D0AB 82 D6 D1 -  	.dl decompress_frame_up_73
   76 D1:D0AE 83 D6 D1 -  	.dl decompress_frame_up_74
   77 D1:D0B1 84 D6 D1 -  	.dl decompress_frame_up_75
   78 D1:D0B4 85 D6 D1 -  	.dl decompress_frame_up_76
   79 D1:D0B7 86 D6 D1 -  	.dl decompress_frame_up_77
   80 D1:D0BA 87 D6 D1 -  	.dl decompress_frame_up_78
   81 D1:D0BD 88 D6 D1 -  	.dl decompress_frame_up_79
   82 D1:D0C0 89 D6 D1 -  	.dl decompress_frame_up_80
   83 D1:D0C3 8A D6 D1 -  	.dl decompress_frame_up_81
   84 D1:D0C6 8B D6 D1 -  	.dl decompress_frame_up_82
   85 D1:D0C9 8C D6 D1 -  	.dl decompress_frame_up_83
   86 D1:D0CC 8D D6 D1 -  	.dl decompress_frame_up_84
   87 D1:D0CF 8E D6 D1 -  	.dl decompress_frame_up_85
   88 D1:D0D2 8F D6 D1 -  	.dl decompress_frame_up_86
   89 D1:D0D5 90 D6 D1 -  	.dl decompress_frame_up_87
   90 D1:D0D8 91 D6 D1 -  	.dl decompress_frame_up_88
   91 D1:D0DB 92 D6 D1 -  	.dl decompress_frame_up_89
   92 D1:D0DE -  -  -  -  
   93 D1:D0DE -  -  -  -  
   94 D1:D0DE -  -  -  -  decompress_calls_table_down:
   95 D1:D0DE 93 D6 D1 -  	.dl decompress_frame_down_0
   96 D1:D0E1 94 D6 D1 -  	.dl decompress_frame_down_1
   97 D1:D0E4 95 D6 D1 -  	.dl decompress_frame_down_2
   98 D1:D0E7 C7 D6 D1 -  	.dl decompress_frame_down_3
   99 D1:D0EA 00 D7 D1 -  	.dl decompress_frame_down_4
  100 D1:D0ED 16 D7 D1 -  	.dl decompress_frame_down_5
  101 D1:D0F0 17 D7 D1 -  	.dl decompress_frame_down_6
  102 D1:D0F3 6C D7 D1 -  	.dl decompress_frame_down_7
  103 D1:D0F6 6D D7 D1 -  	.dl decompress_frame_down_8
  104 D1:D0F9 AD D7 D1 -  	.dl decompress_frame_down_9
  105 D1:D0FC AE D7 D1 -  	.dl decompress_frame_down_10
  106 D1:D0FF E7 D7 D1 -  	.dl decompress_frame_down_11
  107 D1:D102 12 D8 D1 -  	.dl decompress_frame_down_12
  108 D1:D105 D7 D8 D1 -  	.dl decompress_frame_down_13
  109 D1:D108 D8 D8 D1 -  	.dl decompress_frame_down_14
  110 D1:D10B 7A D9 D1 -  	.dl decompress_frame_down_15
  111 D1:D10E 7B D9 D1 -  	.dl decompress_frame_down_16
  112 D1:D111 F3 D9 D1 -  	.dl decompress_frame_down_17
  113 D1:D114 F4 D9 D1 -  	.dl decompress_frame_down_18
  114 D1:D117 F5 D9 D1 -  	.dl decompress_frame_down_19
  115 D1:D11A F6 D9 D1 -  	.dl decompress_frame_down_20
  116 D1:D11D F7 D9 D1 -  	.dl decompress_frame_down_21
  117 D1:D120 F8 D9 D1 -  	.dl decompress_frame_down_22
  118 D1:D123 F9 D9 D1 -  	.dl decompress_frame_down_23
  119 D1:D126 FA D9 D1 -  	.dl decompress_frame_down_24
  120 D1:D129 41 DA D1 -  	.dl decompress_frame_down_25
  121 D1:D12C 42 DA D1 -  	.dl decompress_frame_down_26
  122 D1:D12F 43 DA D1 -  	.dl decompress_frame_down_27
  123 D1:D132 44 DA D1 -  	.dl decompress_frame_down_28
  124 D1:D135 45 DA D1 -  	.dl decompress_frame_down_29
  125 D1:D138 46 DA D1 -  	.dl decompress_frame_down_30
  126 D1:D13B 47 DA D1 -  	.dl decompress_frame_down_31
  127 D1:D13E 48 DA D1 -  	.dl decompress_frame_down_32
  128 D1:D141 49 DA D1 -  	.dl decompress_frame_down_33
  129 D1:D144 4A DA D1 -  	.dl decompress_frame_down_34
  130 D1:D147 4B DA D1 -  	.dl decompress_frame_down_35
  131 D1:D14A 4C DA D1 -  	.dl decompress_frame_down_36
  132 D1:D14D 4D DA D1 -  	.dl decompress_frame_down_37
  133 D1:D150 4E DA D1 -  	.dl decompress_frame_down_38
  134 D1:D153 4F DA D1 -  	.dl decompress_frame_down_39
  135 D1:D156 50 DA D1 -  	.dl decompress_frame_down_40
  136 D1:D159 51 DA D1 -  	.dl decompress_frame_down_41
  137 D1:D15C 52 DA D1 -  	.dl decompress_frame_down_42
  138 D1:D15F 53 DA D1 -  	.dl decompress_frame_down_43
  139 D1:D162 54 DA D1 -  	.dl decompress_frame_down_44
  140 D1:D165 55 DA D1 -  	.dl decompress_frame_down_45
  141 D1:D168 56 DA D1 -  	.dl decompress_frame_down_46
  142 D1:D16B 57 DA D1 -  	.dl decompress_frame_down_47
  143 D1:D16E 58 DA D1 -  	.dl decompress_frame_down_48
  144 D1:D171 59 DA D1 -  	.dl decompress_frame_down_49
  145 D1:D174 5A DA D1 -  	.dl decompress_frame_down_50
  146 D1:D177 5B DA D1 -  	.dl decompress_frame_down_51
  147 D1:D17A 5C DA D1 -  	.dl decompress_frame_down_52
  148 D1:D17D 5D DA D1 -  	.dl decompress_frame_down_53
  149 D1:D180 5E DA D1 -  	.dl decompress_frame_down_54
  150 D1:D183 5F DA D1 -  	.dl decompress_frame_down_55
  151 D1:D186 60 DA D1 -  	.dl decompress_frame_down_56
  152 D1:D189 61 DA D1 -  	.dl decompress_frame_down_57
  153 D1:D18C 62 DA D1 -  	.dl decompress_frame_down_58
  154 D1:D18F 63 DA D1 -  	.dl decompress_frame_down_59
  155 D1:D192 64 DA D1 -  	.dl decompress_frame_down_60
  156 D1:D195 65 DA D1 -  	.dl decompress_frame_down_61
  157 D1:D198 66 DA D1 -  	.dl decompress_frame_down_62
  158 D1:D19B 67 DA D1 -  	.dl decompress_frame_down_63
  159 D1:D19E 68 DA D1 -  	.dl decompress_frame_down_64
  160 D1:D1A1 69 DA D1 -  	.dl decompress_frame_down_65
  161 D1:D1A4 6A DA D1 -  	.dl decompress_frame_down_66
  162 D1:D1A7 6B DA D1 -  	.dl decompress_frame_down_67
  163 D1:D1AA 6C DA D1 -  	.dl decompress_frame_down_68
  164 D1:D1AD 6D DA D1 -  	.dl decompress_frame_down_69
  165 D1:D1B0 6E DA D1 -  	.dl decompress_frame_down_70
  166 D1:D1B3 6F DA D1 -  	.dl decompress_frame_down_71
  167 D1:D1B6 70 DA D1 -  	.dl decompress_frame_down_72
  168 D1:D1B9 71 DA D1 -  	.dl decompress_frame_down_73
  169 D1:D1BC 72 DA D1 -  	.dl decompress_frame_down_74
  170 D1:D1BF 73 DA D1 -  	.dl decompress_frame_down_75
  171 D1:D1C2 74 DA D1 -  	.dl decompress_frame_down_76
  172 D1:D1C5 75 DA D1 -  	.dl decompress_frame_down_77
  173 D1:D1C8 76 DA D1 -  	.dl decompress_frame_down_78
  174 D1:D1CB 77 DA D1 -  	.dl decompress_frame_down_79
  175 D1:D1CE 78 DA D1 -  	.dl decompress_frame_down_80
  176 D1:D1D1 79 DA D1 -  	.dl decompress_frame_down_81
  177 D1:D1D4 7A DA D1 -  	.dl decompress_frame_down_82
  178 D1:D1D7 7B DA D1 -  	.dl decompress_frame_down_83
  179 D1:D1DA 7C DA D1 -  	.dl decompress_frame_down_84
  180 D1:D1DD 7D DA D1 -  	.dl decompress_frame_down_85
  181 D1:D1E0 7E DA D1 -  	.dl decompress_frame_down_86
  182 D1:D1E3 7F DA D1 -  	.dl decompress_frame_down_87
  183 D1:D1E6 80 DA D1 -  	.dl decompress_frame_down_88
  184 D1:D1E9 81 DA D1 -  	.dl decompress_frame_down_89
  185 D1:D1EC -  -  -  -  
  186 D1:D1EC -  -  -  -  
  187 D1:D1EC -  -  -  -  
  188 D1:D1EC -  -  -  -  decompress_frame_up_pre2:
  189 D1:D1EC 15 -  -  -  	.db 21
  190 D1:D1ED FC F0 D1 C1 
              01 D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_O
  191 D1:D1F3 40 -  -  -  	.db %01000000
  192 D1:D1F4 FC F0 D1 E7 
              02 D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_F
  193 D1:D1FA 20 -  -  -  	.db %00100000
  194 D1:D1FB FC F0 D1 0D 
              04 D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_O_F
  195 D1:D201 60 -  -  -  	.db %01100000
  196 D1:D202 9A F1 D1 2D 
              05 D4 -  -  	.dl FrogCharge, FrogCharge_Slow
  197 D1:D208 00 -  -  -  	.db %00000000
  198 D1:D209 9A F1 D1 4D 
              06 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_O
  199 D1:D20F 40 -  -  -  	.db %01000000
  200 D1:D210 9A F1 D1 73 
              07 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_F
  201 D1:D216 20 -  -  -  	.db %00100000
  202 D1:D217 9A F1 D1 99 
              08 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_O_F
  203 D1:D21D 60 -  -  -  	.db %01100000
  204 D1:D21E 69 F2 D1 B9 
              09 D4 -  -  	.dl FrogJump, FrogJump_Slow
  205 D1:D224 00 -  -  -  	.db %00000000
  206 D1:D225 69 F2 D1 31 
              0B D4 -  -  	.dl FrogJump, FrogJump_Slow_O
  207 D1:D22B 40 -  -  -  	.db %01000000
  208 D1:D22C 69 F2 D1 B3 
              0C D4 -  -  	.dl FrogJump, FrogJump_Slow_F
  209 D1:D232 20 -  -  -  	.db %00100000
  210 D1:D233 69 F2 D1 2B 
              0E D4 -  -  	.dl FrogJump, FrogJump_Slow_O_F
  211 D1:D239 60 -  -  -  	.db %01100000
  212 D1:D23A 82 F3 D1 AD 
              0F D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow
  213 D1:D240 00 -  -  -  	.db %00000000
  214 D1:D241 82 F3 D1 25 
              11 D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_O
  215 D1:D247 40 -  -  -  	.db %01000000
  216 D1:D248 82 F3 D1 A7 
              12 D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_F
  217 D1:D24E 20 -  -  -  	.db %00100000
  218 D1:D24F 82 F3 D1 1F 
              14 D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_O_F
  219 D1:D255 60 -  -  -  	.db %01100000
  220 D1:D256 9B F4 D1 A1 
              15 D4 -  -  	.dl FrogFall, FrogFall_Slow
  221 D1:D25C 00 -  -  -  	.db %00000000
  222 D1:D25D 9B F4 D1 11 
              17 D4 -  -  	.dl FrogFall, FrogFall_Slow_O
  223 D1:D263 40 -  -  -  	.db %01000000
  224 D1:D264 9B F4 D1 8B 
              18 D4 -  -  	.dl FrogFall, FrogFall_Slow_F
  225 D1:D26A 20 -  -  -  	.db %00100000
  226 D1:D26B 9B F4 D1 FB 
              19 D4 -  -  	.dl FrogFall, FrogFall_Slow_O_F
  227 D1:D271 60 -  -  -  	.db %01100000
  228 D1:D272 81 F5 D1 75 
              1B D4 -  -  	.dl FrogTongue, FrogTongue_Slow
  229 D1:D278 00 -  -  -  	.db %00000000
  230 D1:D279 81 F5 D1 BB 
              1B D4 -  -  	.dl FrogTongue, FrogTongue_Slow_O
  231 D1:D27F 40 -  -  -  	.db %01000000
  232 D1:D280 -  -  -  -  
  233 D1:D280 -  -  -  -  decompress_frame_up_pre1:
  234 D1:D280 40 -  -  -  	.db 64
  235 D1:D281 34 E4 D1 04 
              1C D4 -  -  	.dl Branches_5, Branches_5_Fast
  236 D1:D287 80 -  -  -  	.db %10000000
  237 D1:D288 92 E4 D1 A4 
              1C D4 -  -  	.dl Branches_3, Branches_3_Fast
  238 D1:D28E 80 -  -  -  	.db %10000000
  239 D1:D28F F2 E4 D1 4C 
              1D D4 -  -  	.dl Branches_2, Branches_2_Fast
  240 D1:D295 80 -  -  -  	.db %10000000
  241 D1:D296 65 E7 D1 F6 
              1D D4 -  -  	.dl Tree_4, Tree_4_Fast_F
  242 D1:D29C A0 -  -  -  	.db %10100000
  243 D1:D29D 86 E9 D1 F8 
              1E D4 -  -  	.dl Tree_0, Tree_0_Fast
  244 D1:D2A3 80 -  -  -  	.db %10000000
  245 D1:D2A4 AC E8 D1 F4 
              1F D4 -  -  	.dl Tree_6, Tree_6_Fast
  246 D1:D2AA 80 -  -  -  	.db %10000000
  247 D1:D2AB 5E EA D1 F6 
              20 D4 -  -  	.dl Tree_10, Tree_10_Fast
  248 D1:D2B1 80 -  -  -  	.db %10000000
  249 D1:D2B2 D2 E7 D1 F8 
              21 D4 -  -  	.dl Tree_7, Tree_7_Fast_F
  250 D1:D2B8 A0 -  -  -  	.db %10100000
  251 D1:D2B9 CB EA D1 FA 
              22 D4 -  -  	.dl Tree_1, Tree_1_Fast_F
  252 D1:D2BF A0 -  -  -  	.db %10100000
  253 D1:D2C0 CB EA D1 F8 
              23 D4 -  -  	.dl Tree_1, Tree_1_Fast
  254 D1:D2C6 80 -  -  -  	.db %10000000
  255 D1:D2C7 37 EB D1 F6 
              24 D4 -  -  	.dl Tree_5, Tree_5_Fast
  256 D1:D2CD 80 -  -  -  	.db %10000000
  257 D1:D2CE A4 EB D1 F8 
              25 D4 -  -  	.dl Tree_11, Tree_11_Fast
  258 D1:D2D4 80 -  -  -  	.db %10000000
  259 D1:D2D5 37 EB D1 FA 
              26 D4 -  -  	.dl Tree_5, Tree_5_Fast_F
  260 D1:D2DB A0 -  -  -  	.db %10100000
  261 D1:D2DC FA E6 D1 FC 
              27 D4 -  -  	.dl Tree_2, Tree_2_Fast_F
  262 D1:D2E2 A0 -  -  -  	.db %10100000
  263 D1:D2E3 A4 EB D1 F8 
              28 D4 -  -  	.dl Tree_11, Tree_11_Fast_F
  264 D1:D2E9 A0 -  -  -  	.db %10100000
  265 D1:D2EA 11 EC D1 FA 
              29 D4 -  -  	.dl Branches_1, Branches_1_Fast
  266 D1:D2F0 80 -  -  -  	.db %10000000
  267 D1:D2F1 6C EC D1 93 
              2A D4 -  -  	.dl Vine2, Vine2_Slow
  268 D1:D2F7 00 -  -  -  	.db %00000000
  269 D1:D2F8 90 EC D1 33 
              2B D4 -  -  	.dl VineVertical, VineVertical_Slow_O
  270 D1:D2FE 40 -  -  -  	.db %01000000
  271 D1:D2FF 90 EC D1 DF 
              2B D4 -  -  	.dl VineVertical, VineVertical_Slow
  272 D1:D305 00 -  -  -  	.db %00000000
  273 D1:D306 B6 EC D1 8D 
              2C D4 -  -  	.dl Vine4, Vine4_Slow_F
  274 D1:D30C 20 -  -  -  	.db %00100000
  275 D1:D30D B6 EC D1 4D 
              2D D4 -  -  	.dl Vine4, Vine4_Slow_O_F
  276 D1:D313 60 -  -  -  	.db %01100000
  277 D1:D314 F2 EC D1 0D 
              2E D4 -  -  	.dl Vine5, Vine5_Slow_O_F
  278 D1:D31A 60 -  -  -  	.db %01100000
  279 D1:D31B 2A ED D1 CD 
              2E D4 -  -  	.dl Vine6, Vine6_Slow_O
  280 D1:D321 40 -  -  -  	.db %01000000
  281 D1:D322 56 ED D1 73 
              2F D4 -  -  	.dl Vine7, Vine7_Slow
  282 D1:D328 00 -  -  -  	.db %00000000
  283 D1:D329 F2 EC D1 F9 
              2F D4 -  -  	.dl Vine5, Vine5_Slow
  284 D1:D32F 00 -  -  -  	.db %00000000
  285 D1:D330 2A ED D1 B7 
              30 D4 -  -  	.dl Vine6, Vine6_Slow
  286 D1:D336 00 -  -  -  	.db %00000000
  287 D1:D337 B6 EC D1 5B 
              31 D4 -  -  	.dl Vine4, Vine4_Slow
  288 D1:D33D 00 -  -  -  	.db %00000000
  289 D1:D33E 56 ED D1 1B 
              32 D4 -  -  	.dl Vine7, Vine7_Slow_O
  290 D1:D344 40 -  -  -  	.db %01000000
  291 D1:D345 F2 EC D1 9B 
              32 D4 -  -  	.dl Vine5, Vine5_Slow_O
  292 D1:D34B 40 -  -  -  	.db %01000000
  293 D1:D34C B6 EC D1 59 
              33 D4 -  -  	.dl Vine4, Vine4_Slow_O
  294 D1:D352 40 -  -  -  	.db %01000000
  295 D1:D353 11 EC D1 18 
              34 D4 -  -  	.dl Branches_1, Branches_1_Fast_F
  296 D1:D359 A0 -  -  -  	.db %10100000
  297 D1:D35A F2 E4 D1 B0 
              34 D4 -  -  	.dl Branches_2, Branches_2_Fast_F
  298 D1:D360 A0 -  -  -  	.db %10100000
  299 D1:D361 34 E4 D1 5A 
              35 D4 -  -  	.dl Branches_5, Branches_5_Fast_F
  300 D1:D367 A0 -  -  -  	.db %10100000
  301 D1:D368 CF ED D1 FA 
              35 D4 -  -  	.dl Platforms_0, Platforms_0_Fast
  302 D1:D36E 80 -  -  -  	.db %10000000
  303 D1:D36F 01 EE D1 70 
              36 D4 -  -  	.dl Platforms_1, Platforms_1_Fast
  304 D1:D375 80 -  -  -  	.db %10000000
  305 D1:D376 CF ED D1 E6 
              36 D4 -  -  	.dl Platforms_0, Platforms_0_Fast_F
  306 D1:D37C A0 -  -  -  	.db %10100000
  307 D1:D37D 33 EE D1 5D 
              37 D4 -  -  	.dl Platforms_2, Platforms_2_Slow_O_F
  308 D1:D383 60 -  -  -  	.db %01100000
  309 D1:D384 33 EE D1 D9 
              37 D4 -  -  	.dl Platforms_2, Platforms_2_Slow_O
  310 D1:D38A 40 -  -  -  	.db %01000000
  311 D1:D38B 66 EE D1 54 
              38 D4 -  -  	.dl Spikes_0, Spikes_0_Fast
  312 D1:D391 80 -  -  -  	.db %10000000
  313 D1:D392 B0 EE D1 D4 
              38 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast
  314 D1:D398 80 -  -  -  	.db %10000000
  315 D1:D399 B0 EE D1 5A 
              39 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast_F
  316 D1:D39F A0 -  -  -  	.db %10100000
  317 D1:D3A0 E5 EE D1 E0 
              39 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast
  318 D1:D3A6 80 -  -  -  	.db %10000000
  319 D1:D3A7 E5 EE D1 66 
              3A D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast_F
  320 D1:D3AD A0 -  -  -  	.db %10100000
  321 D1:D3AE 33 EF D1 EC 
              3A D4 -  -  	.dl Tree_16, Tree_16_Fast
  322 D1:D3B4 80 -  -  -  	.db %10000000
  323 D1:D3B5 4B EF D1 41 
              3B D4 -  -  	.dl Tree_17, Tree_17_Slow
  324 D1:D3BB 00 -  -  -  	.db %00000000
  325 D1:D3BC 4B EF D1 A7 
              3B D4 -  -  	.dl Tree_17, Tree_17_Slow_O_F
  326 D1:D3C2 60 -  -  -  	.db %01100000
  327 D1:D3C3 5C EF D1 0D 
              3C D4 -  -  	.dl Tree_18, Tree_18_Slow
  328 D1:D3C9 00 -  -  -  	.db %00000000
  329 D1:D3CA 5C EF D1 71 
              3C D4 -  -  	.dl Tree_18, Tree_18_Slow_O_F
  330 D1:D3D0 60 -  -  -  	.db %01100000
  331 D1:D3D1 33 EF D1 D6 
              3C D4 -  -  	.dl Tree_16, Tree_16_Fast_F
  332 D1:D3D7 A0 -  -  -  	.db %10100000
  333 D1:D3D8 6D EF D1 2C 
              3D D4 -  -  	.dl Clouds_0, Clouds_0_Fast
  334 D1:D3DE 80 -  -  -  	.db %10000000
  335 D1:D3DF 96 EF D1 92 
              3D D4 -  -  	.dl Clouds_1, Clouds_1_Fast
  336 D1:D3E5 80 -  -  -  	.db %10000000
  337 D1:D3E6 BD EF D1 F6 
              3D D4 -  -  	.dl Clouds_3, Clouds_3_Fast
  338 D1:D3EC 80 -  -  -  	.db %10000000
  339 D1:D3ED E9 EF D1 62 
              3E D4 -  -  	.dl Clouds_4, Clouds_4_Fast
  340 D1:D3F3 80 -  -  -  	.db %10000000
  341 D1:D3F4 00 F0 D1 A2 
              3E D4 -  -  	.dl Clouds_2, Clouds_2_Fast
  342 D1:D3FA 80 -  -  -  	.db %10000000
  343 D1:D3FB 6D EF D1 54 
              3F D4 -  -  	.dl Clouds_0, Clouds_0_Fast_F
  344 D1:D401 A0 -  -  -  	.db %10100000
  345 D1:D402 96 EF D1 BA 
              3F D4 -  -  	.dl Clouds_1, Clouds_1_Fast_F
  346 D1:D408 A0 -  -  -  	.db %10100000
  347 D1:D409 E9 EF D1 1E 
              40 D4 -  -  	.dl Clouds_4, Clouds_4_Fast_F
  348 D1:D40F A0 -  -  -  	.db %10100000
  349 D1:D410 BD EF D1 5E 
              40 D4 -  -  	.dl Clouds_3, Clouds_3_Fast_F
  350 D1:D416 A0 -  -  -  	.db %10100000
  351 D1:D417 00 F0 D1 CA 
              40 D4 -  -  	.dl Clouds_2, Clouds_2_Fast_F
  352 D1:D41D A0 -  -  -  	.db %10100000
  353 D1:D41E 24 F0 D1 7B 
              41 D4 -  -  	.dl FrogDefault, FrogDefault_Slow
  354 D1:D424 00 -  -  -  	.db %00000000
  355 D1:D425 24 F0 D1 AB 
              42 D4 -  -  	.dl FrogDefault, FrogDefault_Slow_O
  356 D1:D42B 40 -  -  -  	.db %01000000
  357 D1:D42C 24 F0 D1 DB 
              43 D4 -  -  	.dl FrogDefault, FrogDefault_Slow_F
  358 D1:D432 20 -  -  -  	.db %00100000
  359 D1:D433 24 F0 D1 0B 
              45 D4 -  -  	.dl FrogDefault, FrogDefault_Slow_O_F
  360 D1:D439 60 -  -  -  	.db %01100000
  361 D1:D43A FC F0 D1 3B 
              46 D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow
  362 D1:D440 00 -  -  -  	.db %00000000
  363 D1:D441 -  -  -  -  
  364 D1:D441 -  -  -  -  decompress_frame_up_0:
  365 D1:D441 40 -  -  -  	.db 64
  366 D1:D442 4C DD D1 5C 
              47 D4 -  -  	.dl BigGrassBase, BigGrassBase_Fast
  367 D1:D448 80 -  -  -  	.db %10000000
  368 D1:D449 E5 DD D1 C4 
              48 D4 -  -  	.dl BigGrassTop, BigGrassTop_Fast
  369 D1:D44F 80 -  -  -  	.db %10000000
  370 D1:D450 4C DD D1 B9 
              49 D4 -  -  	.dl BigGrassBase, BigGrassBase_Slow_O
  371 D1:D456 40 -  -  -  	.db %01000000
  372 D1:D457 4C DD D1 70 
              4B D4 -  -  	.dl BigGrassBase, BigGrassBase_Fast_F
  373 D1:D45D A0 -  -  -  	.db %10100000
  374 D1:D45E E5 DD D1 D8 
              4C D4 -  -  	.dl BigGrassTop, BigGrassTop_Fast_F
  375 D1:D464 A0 -  -  -  	.db %10100000
  376 D1:D465 E5 DD D1 CD 
              4D D4 -  -  	.dl BigGrassTop, BigGrassTop_Slow_O
  377 D1:D46B 40 -  -  -  	.db %01000000
  378 D1:D46C 60 DE D1 07 
              4F D4 -  -  	.dl DualLeaf4, DualLeaf4_Slow
  379 D1:D472 00 -  -  -  	.db %00000000
  380 D1:D473 60 DE D1 B7 
              4F D4 -  -  	.dl DualLeaf4, DualLeaf4_Slow_F
  381 D1:D479 20 -  -  -  	.db %00100000
  382 D1:D47A 9A DE D1 68 
              50 D4 -  -  	.dl DualLeaf3, DualLeaf3_Fast
  383 D1:D480 80 -  -  -  	.db %10000000
  384 D1:D481 D0 DE D1 E0 
              50 D4 -  -  	.dl Branches_10, Branches_10_Fast
  385 D1:D487 80 -  -  -  	.db %10000000
  386 D1:D488 1A DF D1 58 
              51 D4 -  -  	.dl Branches_9, Branches_9_Fast
  387 D1:D48E 80 -  -  -  	.db %10000000
  388 D1:D48F 6A DF D1 DB 
              51 D4 -  -  	.dl Branches_16, Branches_16_Slow
  389 D1:D495 00 -  -  -  	.db %00000000
  390 D1:D496 97 DF D1 48 
              52 D4 -  -  	.dl Branches_13, Branches_13_Fast
  391 D1:D49C 80 -  -  -  	.db %10000000
  392 D1:D49D B5 DF D1 7A 
              52 D4 -  -  	.dl Leaves1, Leaves1_Fast
  393 D1:D4A3 80 -  -  -  	.db %10000000
  394 D1:D4A4 6B E0 D1 92 
              53 D4 -  -  	.dl DualLeaf1, DualLeaf1_Fast
  395 D1:D4AA 80 -  -  -  	.db %10000000
  396 D1:D4AB 96 E0 D1 02 
              54 D4 -  -  	.dl DualLeaf2, DualLeaf2_Fast
  397 D1:D4B1 80 -  -  -  	.db %10000000
  398 D1:D4B2 96 E0 D1 73 
              54 D4 -  -  	.dl DualLeaf2, DualLeaf2_Slow_O
  399 D1:D4B8 40 -  -  -  	.db %01000000
  400 D1:D4B9 6B E0 D1 1D 
              55 D4 -  -  	.dl DualLeaf1, DualLeaf1_Slow_O
  401 D1:D4BF 40 -  -  -  	.db %01000000
  402 D1:D4C0 C5 E0 D1 C5 
              55 D4 -  -  	.dl Branches_6, Branches_6_Slow
  403 D1:D4C6 00 -  -  -  	.db %00000000
  404 D1:D4C7 D0 DE D1 62 
              56 D4 -  -  	.dl Branches_10, Branches_10_Fast_F
  405 D1:D4CD A0 -  -  -  	.db %10100000
  406 D1:D4CE 0F E1 D1 DA 
              56 D4 -  -  	.dl Branches_7, Branches_7_Fast
  407 D1:D4D4 80 -  -  -  	.db %10000000
  408 D1:D4D5 54 E1 D1 53 
              57 D4 -  -  	.dl Branches_15, Branches_15_Slow
  409 D1:D4DB 00 -  -  -  	.db %00000000
  410 D1:D4DC 78 E1 D1 C4 
              57 D4 -  -  	.dl Branches_8, Branches_8_Fast_F
  411 D1:D4E2 A0 -  -  -  	.db %10100000
  412 D1:D4E3 A9 E1 D1 22 
              58 D4 -  -  	.dl Branches_12, Branches_12_Fast
  413 D1:D4E9 80 -  -  -  	.db %10000000
  414 D1:D4EA 54 E1 D1 7D 
              58 D4 -  -  	.dl Branches_15, Branches_15_Slow_O_F
  415 D1:D4F0 60 -  -  -  	.db %01100000
  416 D1:D4F1 E3 E1 D1 EE 
              58 D4 -  -  	.dl LeavesDark, LeavesDark_Fast
  417 D1:D4F7 80 -  -  -  	.db %10000000
  418 D1:D4F8 E3 E1 D1 06 
              5A D4 -  -  	.dl LeavesDark, LeavesDark_Fast_F
  419 D1:D4FE A0 -  -  -  	.db %10100000
  420 D1:D4FF 62 E2 D1 1E 
              5B D4 -  -  	.dl Leaves2, Leaves2_Fast
  421 D1:D505 80 -  -  -  	.db %10000000
  422 D1:D506 62 E2 D1 0A 
              5C D4 -  -  	.dl Leaves2, Leaves2_Fast_F
  423 D1:D50C A0 -  -  -  	.db %10100000
  424 D1:D50D FA E2 D1 F6 
              5C D4 -  -  	.dl LeavesLight, LeavesLight_Fast
  425 D1:D513 80 -  -  -  	.db %10000000
  426 D1:D514 78 E1 D1 0E 
              5E D4 -  -  	.dl Branches_8, Branches_8_Fast
  427 D1:D51A 80 -  -  -  	.db %10000000
  428 D1:D51B 79 E3 D1 6C 
              5E D4 -  -  	.dl Branches_11, Branches_11_Fast_F
  429 D1:D521 A0 -  -  -  	.db %10100000
  430 D1:D522 6A DF D1 D3 
              5E D4 -  -  	.dl Branches_16, Branches_16_Slow_O_F
  431 D1:D528 60 -  -  -  	.db %01100000
  432 D1:D529 97 DF D1 40 
              5F D4 -  -  	.dl Branches_13, Branches_13_Fast_F
  433 D1:D52F A0 -  -  -  	.db %10100000
  434 D1:D530 B7 E3 D1 71 
              5F D4 -  -  	.dl Branches_14, Branches_14_Slow
  435 D1:D536 00 -  -  -  	.db %00000000
  436 D1:D537 D6 E3 D1 DE 
              5F D4 -  -  	.dl Branches_4, Branches_4_Fast_F
  437 D1:D53D A0 -  -  -  	.db %10100000
  438 D1:D53E 0F E1 D1 7C 
              60 D4 -  -  	.dl Branches_7, Branches_7_Fast_F
  439 D1:D544 A0 -  -  -  	.db %10100000
  440 D1:D545 A9 E1 D1 F6 
              60 D4 -  -  	.dl Branches_12, Branches_12_Fast_F
  441 D1:D54B A0 -  -  -  	.db %10100000
  442 D1:D54C B5 DF D1 52 
              61 D4 -  -  	.dl Leaves1, Leaves1_Fast_F
  443 D1:D552 A0 -  -  -  	.db %10100000
  444 D1:D553 52 E5 D1 6A 
              62 D4 -  -  	.dl Lantern_0, Lantern_0_Fast
  445 D1:D559 80 -  -  -  	.db %10000000
  446 D1:D55A 9E E5 D1 12 
              63 D4 -  -  	.dl Lantern_1, Lantern_1_Fast
  447 D1:D560 80 -  -  -  	.db %10000000
  448 D1:D561 EA E5 D1 BA 
              63 D4 -  -  	.dl Lantern_2, Lantern_2_Fast
  449 D1:D567 80 -  -  -  	.db %10000000
  450 D1:D568 52 E5 D1 62 
              64 D4 -  -  	.dl Lantern_0, Lantern_0_Fast_F
  451 D1:D56E A0 -  -  -  	.db %10100000
  452 D1:D56F 9E E5 D1 0A 
              65 D4 -  -  	.dl Lantern_1, Lantern_1_Fast_F
  453 D1:D575 A0 -  -  -  	.db %10100000
  454 D1:D576 EA E5 D1 B2 
              65 D4 -  -  	.dl Lantern_2, Lantern_2_Fast_F
  455 D1:D57C A0 -  -  -  	.db %10100000
  456 D1:D57D 36 E6 D1 59 
              66 D4 -  -  	.dl Lantern_3, Lantern_3_Slow
  457 D1:D583 00 -  -  -  	.db %00000000
  458 D1:D584 36 E6 D1 17 
              67 D4 -  -  	.dl Lantern_3, Lantern_3_Slow_O_F
  459 D1:D58A 60 -  -  -  	.db %01100000
  460 D1:D58B 6B E6 D1 D4 
              67 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast_F
  461 D1:D591 A0 -  -  -  	.db %10100000
  462 D1:D592 6B E6 D1 86 
              68 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast
  463 D1:D598 80 -  -  -  	.db %10000000
  464 D1:D599 B0 E6 D1 38 
              69 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast
  465 D1:D59F 80 -  -  -  	.db %10000000
  466 D1:D5A0 B0 E6 D1 B8 
              69 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast_F
  467 D1:D5A6 A0 -  -  -  	.db %10100000
  468 D1:D5A7 78 E1 D1 37 
              6A D4 -  -  	.dl Branches_8, Branches_8_Slow_O_F
  469 D1:D5AD 60 -  -  -  	.db %01100000
  470 D1:D5AE 1A DF D1 BF 
              6A D4 -  -  	.dl Branches_9, Branches_9_Slow_O
  471 D1:D5B4 40 -  -  -  	.db %01000000
  472 D1:D5B5 FA E6 D1 6E 
              6B D4 -  -  	.dl Tree_2, Tree_2_Fast
  473 D1:D5BB 80 -  -  -  	.db %10000000
  474 D1:D5BC 65 E7 D1 6A 
              6C D4 -  -  	.dl Tree_4, Tree_4_Fast
  475 D1:D5C2 80 -  -  -  	.db %10000000
  476 D1:D5C3 D2 E7 D1 6C 
              6D D4 -  -  	.dl Tree_7, Tree_7_Fast
  477 D1:D5C9 80 -  -  -  	.db %10000000
  478 D1:D5CA 3F E8 D1 6E 
              6E D4 -  -  	.dl Tree_9, Tree_9_Fast
  479 D1:D5D0 80 -  -  -  	.db %10000000
  480 D1:D5D1 AC E8 D1 70 
              6F D4 -  -  	.dl Tree_6, Tree_6_Fast_F
  481 D1:D5D7 A0 -  -  -  	.db %10100000
  482 D1:D5D8 19 E9 D1 72 
              70 D4 -  -  	.dl Tree_3, Tree_3_Fast_F
  483 D1:D5DE A0 -  -  -  	.db %10100000
  484 D1:D5DF 86 E9 D1 74 
              71 D4 -  -  	.dl Tree_0, Tree_0_Fast_F
  485 D1:D5E5 A0 -  -  -  	.db %10100000
  486 D1:D5E6 19 E9 D1 70 
              72 D4 -  -  	.dl Tree_3, Tree_3_Fast
  487 D1:D5EC 80 -  -  -  	.db %10000000
  488 D1:D5ED F1 E9 D1 72 
              73 D4 -  -  	.dl Tree_8, Tree_8_Fast
  489 D1:D5F3 80 -  -  -  	.db %10000000
  490 D1:D5F4 3F E8 D1 74 
              74 D4 -  -  	.dl Tree_9, Tree_9_Fast_F
  491 D1:D5FA A0 -  -  -  	.db %10100000
  492 D1:D5FB F1 E9 D1 76 
              75 D4 -  -  	.dl Tree_8, Tree_8_Fast_F
  493 D1:D601 A0 -  -  -  	.db %10100000
  494 D1:D602 -  -  -  -  
  495 D1:D602 -  -  -  -  decompress_frame_up_1:
  496 D1:D602 00 -  -  -  	.db 0
  497 D1:D603 -  -  -  -  
  498 D1:D603 -  -  -  -  decompress_frame_up_2:
  499 D1:D603 04 -  -  -  	.db 4
  500 D1:D604 11 EC D1 77 
              76 D4 -  -  	.dl Branches_1, Branches_1_Slow_O
  501 D1:D60A 40 -  -  -  	.db %01000000
  502 D1:D60B F2 E4 D1 3D 
              77 D4 -  -  	.dl Branches_2, Branches_2_Slow_O
  503 D1:D611 40 -  -  -  	.db %01000000
  504 D1:D612 D6 E3 D1 1D 
              78 D4 -  -  	.dl Branches_4, Branches_4_Slow_O
  505 D1:D618 40 -  -  -  	.db %01000000
  506 D1:D619 0F E1 D1 E9 
              78 D4 -  -  	.dl Branches_7, Branches_7_Slow_O
  507 D1:D61F 40 -  -  -  	.db %01000000
  508 D1:D620 -  -  -  -  
  509 D1:D620 -  -  -  -  decompress_frame_up_3:
  510 D1:D620 00 -  -  -  	.db 0
  511 D1:D621 -  -  -  -  
  512 D1:D621 -  -  -  -  decompress_frame_up_4:
  513 D1:D621 03 -  -  -  	.db 3
  514 D1:D622 77 ED D1 5C 
              47 D4 -  -  	.dl Branches_0, Branches_0_Fast_F
  515 D1:D628 A0 -  -  -  	.db %10100000
  516 D1:D629 78 E1 D1 F3 
              47 D4 -  -  	.dl Branches_8, Branches_8_Slow_O
  517 D1:D62F 40 -  -  -  	.db %01000000
  518 D1:D630 1A DF D1 7C 
              48 D4 -  -  	.dl Branches_9, Branches_9_Fast_F
  519 D1:D636 A0 -  -  -  	.db %10100000
  520 D1:D637 -  -  -  -  
  521 D1:D637 -  -  -  -  decompress_frame_up_5:
  522 D1:D637 01 -  -  -  	.db 1
  523 D1:D638 D6 E3 D1 FE 
              48 D4 -  -  	.dl Branches_4, Branches_4_Fast
  524 D1:D63E 80 -  -  -  	.db %10000000
  525 D1:D63F -  -  -  -  
  526 D1:D63F -  -  -  -  decompress_frame_up_6:
  527 D1:D63F 00 -  -  -  	.db 0
  528 D1:D640 -  -  -  -  
  529 D1:D640 -  -  -  -  decompress_frame_up_7:
  530 D1:D640 00 -  -  -  	.db 0
  531 D1:D641 -  -  -  -  
  532 D1:D641 -  -  -  -  decompress_frame_up_8:
  533 D1:D641 00 -  -  -  	.db 0
  534 D1:D642 -  -  -  -  
  535 D1:D642 -  -  -  -  decompress_frame_up_9:
  536 D1:D642 00 -  -  -  	.db 0
  537 D1:D643 -  -  -  -  
  538 D1:D643 -  -  -  -  decompress_frame_up_10:
  539 D1:D643 00 -  -  -  	.db 0
  540 D1:D644 -  -  -  -  
  541 D1:D644 -  -  -  -  decompress_frame_up_11:
  542 D1:D644 00 -  -  -  	.db 0
  543 D1:D645 -  -  -  -  
  544 D1:D645 -  -  -  -  decompress_frame_up_12:
  545 D1:D645 00 -  -  -  	.db 0
  546 D1:D646 -  -  -  -  
  547 D1:D646 -  -  -  -  decompress_frame_up_13:
  548 D1:D646 00 -  -  -  	.db 0
  549 D1:D647 -  -  -  -  
  550 D1:D647 -  -  -  -  decompress_frame_up_14:
  551 D1:D647 00 -  -  -  	.db 0
  552 D1:D648 -  -  -  -  
  553 D1:D648 -  -  -  -  decompress_frame_up_15:
  554 D1:D648 00 -  -  -  	.db 0
  555 D1:D649 -  -  -  -  
  556 D1:D649 -  -  -  -  decompress_frame_up_16:
  557 D1:D649 00 -  -  -  	.db 0
  558 D1:D64A -  -  -  -  
  559 D1:D64A -  -  -  -  decompress_frame_up_17:
  560 D1:D64A 00 -  -  -  	.db 0
  561 D1:D64B -  -  -  -  
  562 D1:D64B -  -  -  -  decompress_frame_up_18:
  563 D1:D64B 00 -  -  -  	.db 0
  564 D1:D64C -  -  -  -  
  565 D1:D64C -  -  -  -  decompress_frame_up_19:
  566 D1:D64C 00 -  -  -  	.db 0
  567 D1:D64D -  -  -  -  
  568 D1:D64D -  -  -  -  decompress_frame_up_20:
  569 D1:D64D 00 -  -  -  	.db 0
  570 D1:D64E -  -  -  -  
  571 D1:D64E -  -  -  -  decompress_frame_up_21:
  572 D1:D64E 00 -  -  -  	.db 0
  573 D1:D64F -  -  -  -  
  574 D1:D64F -  -  -  -  decompress_frame_up_22:
  575 D1:D64F 00 -  -  -  	.db 0
  576 D1:D650 -  -  -  -  
  577 D1:D650 -  -  -  -  decompress_frame_up_23:
  578 D1:D650 00 -  -  -  	.db 0
  579 D1:D651 -  -  -  -  
  580 D1:D651 -  -  -  -  decompress_frame_up_24:
  581 D1:D651 00 -  -  -  	.db 0
  582 D1:D652 -  -  -  -  
  583 D1:D652 -  -  -  -  decompress_frame_up_25:
  584 D1:D652 00 -  -  -  	.db 0
  585 D1:D653 -  -  -  -  
  586 D1:D653 -  -  -  -  decompress_frame_up_26:
  587 D1:D653 00 -  -  -  	.db 0
  588 D1:D654 -  -  -  -  
  589 D1:D654 -  -  -  -  decompress_frame_up_27:
  590 D1:D654 00 -  -  -  	.db 0
  591 D1:D655 -  -  -  -  
  592 D1:D655 -  -  -  -  decompress_frame_up_28:
  593 D1:D655 00 -  -  -  	.db 0
  594 D1:D656 -  -  -  -  
  595 D1:D656 -  -  -  -  decompress_frame_up_29:
  596 D1:D656 00 -  -  -  	.db 0
  597 D1:D657 -  -  -  -  
  598 D1:D657 -  -  -  -  decompress_frame_up_30:
  599 D1:D657 00 -  -  -  	.db 0
  600 D1:D658 -  -  -  -  
  601 D1:D658 -  -  -  -  decompress_frame_up_31:
  602 D1:D658 00 -  -  -  	.db 0
  603 D1:D659 -  -  -  -  
  604 D1:D659 -  -  -  -  decompress_frame_up_32:
  605 D1:D659 00 -  -  -  	.db 0
  606 D1:D65A -  -  -  -  
  607 D1:D65A -  -  -  -  decompress_frame_up_33:
  608 D1:D65A 00 -  -  -  	.db 0
  609 D1:D65B -  -  -  -  
  610 D1:D65B -  -  -  -  decompress_frame_up_34:
  611 D1:D65B 00 -  -  -  	.db 0
  612 D1:D65C -  -  -  -  
  613 D1:D65C -  -  -  -  decompress_frame_up_35:
  614 D1:D65C 00 -  -  -  	.db 0
  615 D1:D65D -  -  -  -  
  616 D1:D65D -  -  -  -  decompress_frame_up_36:
  617 D1:D65D 00 -  -  -  	.db 0
  618 D1:D65E -  -  -  -  
  619 D1:D65E -  -  -  -  decompress_frame_up_37:
  620 D1:D65E 00 -  -  -  	.db 0
  621 D1:D65F -  -  -  -  
  622 D1:D65F -  -  -  -  decompress_frame_up_38:
  623 D1:D65F 00 -  -  -  	.db 0
  624 D1:D660 -  -  -  -  
  625 D1:D660 -  -  -  -  decompress_frame_up_39:
  626 D1:D660 00 -  -  -  	.db 0
  627 D1:D661 -  -  -  -  
  628 D1:D661 -  -  -  -  decompress_frame_up_40:
  629 D1:D661 00 -  -  -  	.db 0
  630 D1:D662 -  -  -  -  
  631 D1:D662 -  -  -  -  decompress_frame_up_41:
  632 D1:D662 00 -  -  -  	.db 0
  633 D1:D663 -  -  -  -  
  634 D1:D663 -  -  -  -  decompress_frame_up_42:
  635 D1:D663 00 -  -  -  	.db 0
  636 D1:D664 -  -  -  -  
  637 D1:D664 -  -  -  -  decompress_frame_up_43:
  638 D1:D664 00 -  -  -  	.db 0
  639 D1:D665 -  -  -  -  
  640 D1:D665 -  -  -  -  decompress_frame_up_44:
  641 D1:D665 00 -  -  -  	.db 0
  642 D1:D666 -  -  -  -  
  643 D1:D666 -  -  -  -  decompress_frame_up_45:
  644 D1:D666 00 -  -  -  	.db 0
  645 D1:D667 -  -  -  -  
  646 D1:D667 -  -  -  -  decompress_frame_up_46:
  647 D1:D667 00 -  -  -  	.db 0
  648 D1:D668 -  -  -  -  
  649 D1:D668 -  -  -  -  decompress_frame_up_47:
  650 D1:D668 00 -  -  -  	.db 0
  651 D1:D669 -  -  -  -  
  652 D1:D669 -  -  -  -  decompress_frame_up_48:
  653 D1:D669 00 -  -  -  	.db 0
  654 D1:D66A -  -  -  -  
  655 D1:D66A -  -  -  -  decompress_frame_up_49:
  656 D1:D66A 00 -  -  -  	.db 0
  657 D1:D66B -  -  -  -  
  658 D1:D66B -  -  -  -  decompress_frame_up_50:
  659 D1:D66B 00 -  -  -  	.db 0
  660 D1:D66C -  -  -  -  
  661 D1:D66C -  -  -  -  decompress_frame_up_51:
  662 D1:D66C 00 -  -  -  	.db 0
  663 D1:D66D -  -  -  -  
  664 D1:D66D -  -  -  -  decompress_frame_up_52:
  665 D1:D66D 00 -  -  -  	.db 0
  666 D1:D66E -  -  -  -  
  667 D1:D66E -  -  -  -  decompress_frame_up_53:
  668 D1:D66E 00 -  -  -  	.db 0
  669 D1:D66F -  -  -  -  
  670 D1:D66F -  -  -  -  decompress_frame_up_54:
  671 D1:D66F 00 -  -  -  	.db 0
  672 D1:D670 -  -  -  -  
  673 D1:D670 -  -  -  -  decompress_frame_up_55:
  674 D1:D670 00 -  -  -  	.db 0
  675 D1:D671 -  -  -  -  
  676 D1:D671 -  -  -  -  decompress_frame_up_56:
  677 D1:D671 00 -  -  -  	.db 0
  678 D1:D672 -  -  -  -  
  679 D1:D672 -  -  -  -  decompress_frame_up_57:
  680 D1:D672 00 -  -  -  	.db 0
  681 D1:D673 -  -  -  -  
  682 D1:D673 -  -  -  -  decompress_frame_up_58:
  683 D1:D673 00 -  -  -  	.db 0
  684 D1:D674 -  -  -  -  
  685 D1:D674 -  -  -  -  decompress_frame_up_59:
  686 D1:D674 00 -  -  -  	.db 0
  687 D1:D675 -  -  -  -  
  688 D1:D675 -  -  -  -  decompress_frame_up_60:
  689 D1:D675 00 -  -  -  	.db 0
  690 D1:D676 -  -  -  -  
  691 D1:D676 -  -  -  -  decompress_frame_up_61:
  692 D1:D676 00 -  -  -  	.db 0
  693 D1:D677 -  -  -  -  
  694 D1:D677 -  -  -  -  decompress_frame_up_62:
  695 D1:D677 00 -  -  -  	.db 0
  696 D1:D678 -  -  -  -  
  697 D1:D678 -  -  -  -  decompress_frame_up_63:
  698 D1:D678 00 -  -  -  	.db 0
  699 D1:D679 -  -  -  -  
  700 D1:D679 -  -  -  -  decompress_frame_up_64:
  701 D1:D679 00 -  -  -  	.db 0
  702 D1:D67A -  -  -  -  
  703 D1:D67A -  -  -  -  decompress_frame_up_65:
  704 D1:D67A 00 -  -  -  	.db 0
  705 D1:D67B -  -  -  -  
  706 D1:D67B -  -  -  -  decompress_frame_up_66:
  707 D1:D67B 00 -  -  -  	.db 0
  708 D1:D67C -  -  -  -  
  709 D1:D67C -  -  -  -  decompress_frame_up_67:
  710 D1:D67C 00 -  -  -  	.db 0
  711 D1:D67D -  -  -  -  
  712 D1:D67D -  -  -  -  decompress_frame_up_68:
  713 D1:D67D 00 -  -  -  	.db 0
  714 D1:D67E -  -  -  -  
  715 D1:D67E -  -  -  -  decompress_frame_up_69:
  716 D1:D67E 00 -  -  -  	.db 0
  717 D1:D67F -  -  -  -  
  718 D1:D67F -  -  -  -  decompress_frame_up_70:
  719 D1:D67F 00 -  -  -  	.db 0
  720 D1:D680 -  -  -  -  
  721 D1:D680 -  -  -  -  decompress_frame_up_71:
  722 D1:D680 00 -  -  -  	.db 0
  723 D1:D681 -  -  -  -  
  724 D1:D681 -  -  -  -  decompress_frame_up_72:
  725 D1:D681 00 -  -  -  	.db 0
  726 D1:D682 -  -  -  -  
  727 D1:D682 -  -  -  -  decompress_frame_up_73:
  728 D1:D682 00 -  -  -  	.db 0
  729 D1:D683 -  -  -  -  
  730 D1:D683 -  -  -  -  decompress_frame_up_74:
  731 D1:D683 00 -  -  -  	.db 0
  732 D1:D684 -  -  -  -  
  733 D1:D684 -  -  -  -  decompress_frame_up_75:
  734 D1:D684 00 -  -  -  	.db 0
  735 D1:D685 -  -  -  -  
  736 D1:D685 -  -  -  -  decompress_frame_up_76:
  737 D1:D685 00 -  -  -  	.db 0
  738 D1:D686 -  -  -  -  
  739 D1:D686 -  -  -  -  decompress_frame_up_77:
  740 D1:D686 00 -  -  -  	.db 0
  741 D1:D687 -  -  -  -  
  742 D1:D687 -  -  -  -  decompress_frame_up_78:
  743 D1:D687 00 -  -  -  	.db 0
  744 D1:D688 -  -  -  -  
  745 D1:D688 -  -  -  -  decompress_frame_up_79:
  746 D1:D688 00 -  -  -  	.db 0
  747 D1:D689 -  -  -  -  
  748 D1:D689 -  -  -  -  decompress_frame_up_80:
  749 D1:D689 00 -  -  -  	.db 0
  750 D1:D68A -  -  -  -  
  751 D1:D68A -  -  -  -  decompress_frame_up_81:
  752 D1:D68A 00 -  -  -  	.db 0
  753 D1:D68B -  -  -  -  
  754 D1:D68B -  -  -  -  decompress_frame_up_82:
  755 D1:D68B 00 -  -  -  	.db 0
  756 D1:D68C -  -  -  -  
  757 D1:D68C -  -  -  -  decompress_frame_up_83:
  758 D1:D68C 00 -  -  -  	.db 0
  759 D1:D68D -  -  -  -  
  760 D1:D68D -  -  -  -  decompress_frame_up_84:
  761 D1:D68D 00 -  -  -  	.db 0
  762 D1:D68E -  -  -  -  
  763 D1:D68E -  -  -  -  decompress_frame_up_85:
  764 D1:D68E 00 -  -  -  	.db 0
  765 D1:D68F -  -  -  -  
  766 D1:D68F -  -  -  -  decompress_frame_up_86:
  767 D1:D68F 00 -  -  -  	.db 0
  768 D1:D690 -  -  -  -  
  769 D1:D690 -  -  -  -  decompress_frame_up_87:
  770 D1:D690 00 -  -  -  	.db 0
  771 D1:D691 -  -  -  -  
  772 D1:D691 -  -  -  -  decompress_frame_up_88:
  773 D1:D691 00 -  -  -  	.db 0
  774 D1:D692 -  -  -  -  
  775 D1:D692 -  -  -  -  decompress_frame_up_89:
  776 D1:D692 00 -  -  -  	.db 0
  777 D1:D693 -  -  -  -  
  778 D1:D693 -  -  -  -  
  779 D1:D693 -  -  -  -  
  780 D1:D693 -  -  -  -  decompress_frame_down_0:
  781 D1:D693 00 -  -  -  	.db 0
  782 D1:D694 -  -  -  -  
  783 D1:D694 -  -  -  -  decompress_frame_down_1:
  784 D1:D694 00 -  -  -  	.db 0
  785 D1:D695 -  -  -  -  
  786 D1:D695 -  -  -  -  decompress_frame_down_2:
  787 D1:D695 07 -  -  -  	.db 7
  788 D1:D696 4C DD D1 5C 
              47 D4 -  -  	.dl BigGrassBase, BigGrassBase_Fast
  789 D1:D69C 80 -  -  -  	.db %10000000
  790 D1:D69D E5 DD D1 C4 
              48 D4 -  -  	.dl BigGrassTop, BigGrassTop_Fast
  791 D1:D6A3 80 -  -  -  	.db %10000000
  792 D1:D6A4 4C DD D1 B9 
              49 D4 -  -  	.dl BigGrassBase, BigGrassBase_Slow_O
  793 D1:D6AA 40 -  -  -  	.db %01000000
  794 D1:D6AB 4C DD D1 70 
              4B D4 -  -  	.dl BigGrassBase, BigGrassBase_Fast_F
  795 D1:D6B1 A0 -  -  -  	.db %10100000
  796 D1:D6B2 E5 DD D1 D8 
              4C D4 -  -  	.dl BigGrassTop, BigGrassTop_Fast_F
  797 D1:D6B8 A0 -  -  -  	.db %10100000
  798 D1:D6B9 E5 DD D1 CD 
              4D D4 -  -  	.dl BigGrassTop, BigGrassTop_Slow_O
  799 D1:D6BF 40 -  -  -  	.db %01000000
  800 D1:D6C0 60 DE D1 B7 
              4F D4 -  -  	.dl DualLeaf4, DualLeaf4_Slow_F
  801 D1:D6C6 20 -  -  -  	.db %00100000
  802 D1:D6C7 -  -  -  -  
  803 D1:D6C7 -  -  -  -  decompress_frame_down_3:
  804 D1:D6C7 08 -  -  -  	.db 8
  805 D1:D6C8 52 E5 D1 6A 
              62 D4 -  -  	.dl Lantern_0, Lantern_0_Fast
  806 D1:D6CE 80 -  -  -  	.db %10000000
  807 D1:D6CF 9E E5 D1 12 
              63 D4 -  -  	.dl Lantern_1, Lantern_1_Fast
  808 D1:D6D5 80 -  -  -  	.db %10000000
  809 D1:D6D6 EA E5 D1 BA 
              63 D4 -  -  	.dl Lantern_2, Lantern_2_Fast
  810 D1:D6DC 80 -  -  -  	.db %10000000
  811 D1:D6DD 52 E5 D1 62 
              64 D4 -  -  	.dl Lantern_0, Lantern_0_Fast_F
  812 D1:D6E3 A0 -  -  -  	.db %10100000
  813 D1:D6E4 9E E5 D1 0A 
              65 D4 -  -  	.dl Lantern_1, Lantern_1_Fast_F
  814 D1:D6EA A0 -  -  -  	.db %10100000
  815 D1:D6EB EA E5 D1 B2 
              65 D4 -  -  	.dl Lantern_2, Lantern_2_Fast_F
  816 D1:D6F1 A0 -  -  -  	.db %10100000
  817 D1:D6F2 36 E6 D1 59 
              66 D4 -  -  	.dl Lantern_3, Lantern_3_Slow
  818 D1:D6F8 00 -  -  -  	.db %00000000
  819 D1:D6F9 36 E6 D1 17 
              67 D4 -  -  	.dl Lantern_3, Lantern_3_Slow_O_F
  820 D1:D6FF 60 -  -  -  	.db %01100000
  821 D1:D700 -  -  -  -  
  822 D1:D700 -  -  -  -  decompress_frame_down_4:
  823 D1:D700 03 -  -  -  	.db 3
  824 D1:D701 78 E1 D1 37 
              6A D4 -  -  	.dl Branches_8, Branches_8_Slow_O_F
  825 D1:D707 60 -  -  -  	.db %01100000
  826 D1:D708 56 ED D1 73 
              2F D4 -  -  	.dl Vine7, Vine7_Slow
  827 D1:D70E 00 -  -  -  	.db %00000000
  828 D1:D70F B6 EC D1 5B 
              31 D4 -  -  	.dl Vine4, Vine4_Slow
  829 D1:D715 00 -  -  -  	.db %00000000
  830 D1:D716 -  -  -  -  
  831 D1:D716 -  -  -  -  decompress_frame_down_5:
  832 D1:D716 00 -  -  -  	.db 0
  833 D1:D717 -  -  -  -  
  834 D1:D717 -  -  -  -  decompress_frame_down_6:
  835 D1:D717 0C -  -  -  	.db 12
  836 D1:D718 6C EC D1 93 
              2A D4 -  -  	.dl Vine2, Vine2_Slow
  837 D1:D71E 00 -  -  -  	.db %00000000
  838 D1:D71F 90 EC D1 33 
              2B D4 -  -  	.dl VineVertical, VineVertical_Slow_O
  839 D1:D725 40 -  -  -  	.db %01000000
  840 D1:D726 90 EC D1 DF 
              2B D4 -  -  	.dl VineVertical, VineVertical_Slow
  841 D1:D72C 00 -  -  -  	.db %00000000
  842 D1:D72D B6 EC D1 8D 
              2C D4 -  -  	.dl Vine4, Vine4_Slow_F
  843 D1:D733 20 -  -  -  	.db %00100000
  844 D1:D734 B6 EC D1 4D 
              2D D4 -  -  	.dl Vine4, Vine4_Slow_O_F
  845 D1:D73A 60 -  -  -  	.db %01100000
  846 D1:D73B F2 EC D1 0D 
              2E D4 -  -  	.dl Vine5, Vine5_Slow_O_F
  847 D1:D741 60 -  -  -  	.db %01100000
  848 D1:D742 2A ED D1 CD 
              2E D4 -  -  	.dl Vine6, Vine6_Slow_O
  849 D1:D748 40 -  -  -  	.db %01000000
  850 D1:D749 F2 EC D1 F9 
              2F D4 -  -  	.dl Vine5, Vine5_Slow
  851 D1:D74F 00 -  -  -  	.db %00000000
  852 D1:D750 2A ED D1 B7 
              30 D4 -  -  	.dl Vine6, Vine6_Slow
  853 D1:D756 00 -  -  -  	.db %00000000
  854 D1:D757 56 ED D1 1B 
              32 D4 -  -  	.dl Vine7, Vine7_Slow_O
  855 D1:D75D 40 -  -  -  	.db %01000000
  856 D1:D75E F2 EC D1 9B 
              32 D4 -  -  	.dl Vine5, Vine5_Slow_O
  857 D1:D764 40 -  -  -  	.db %01000000
  858 D1:D765 B6 EC D1 59 
              33 D4 -  -  	.dl Vine4, Vine4_Slow_O
  859 D1:D76B 40 -  -  -  	.db %01000000
  860 D1:D76C -  -  -  -  
  861 D1:D76C -  -  -  -  decompress_frame_down_7:
  862 D1:D76C 00 -  -  -  	.db 0
  863 D1:D76D -  -  -  -  
  864 D1:D76D -  -  -  -  decompress_frame_down_8:
  865 D1:D76D 09 -  -  -  	.db 9
  866 D1:D76E 11 EC D1 18 
              34 D4 -  -  	.dl Branches_1, Branches_1_Fast_F
  867 D1:D774 A0 -  -  -  	.db %10100000
  868 D1:D775 F2 E4 D1 B0 
              34 D4 -  -  	.dl Branches_2, Branches_2_Fast_F
  869 D1:D77B A0 -  -  -  	.db %10100000
  870 D1:D77C 34 E4 D1 5A 
              35 D4 -  -  	.dl Branches_5, Branches_5_Fast_F
  871 D1:D782 A0 -  -  -  	.db %10100000
  872 D1:D783 CF ED D1 FA 
              35 D4 -  -  	.dl Platforms_0, Platforms_0_Fast
  873 D1:D789 80 -  -  -  	.db %10000000
  874 D1:D78A 01 EE D1 70 
              36 D4 -  -  	.dl Platforms_1, Platforms_1_Fast
  875 D1:D790 80 -  -  -  	.db %10000000
  876 D1:D791 CF ED D1 E6 
              36 D4 -  -  	.dl Platforms_0, Platforms_0_Fast_F
  877 D1:D797 A0 -  -  -  	.db %10100000
  878 D1:D798 33 EE D1 5D 
              37 D4 -  -  	.dl Platforms_2, Platforms_2_Slow_O_F
  879 D1:D79E 60 -  -  -  	.db %01100000
  880 D1:D79F 33 EE D1 D9 
              37 D4 -  -  	.dl Platforms_2, Platforms_2_Slow_O
  881 D1:D7A5 40 -  -  -  	.db %01000000
  882 D1:D7A6 66 EE D1 54 
              38 D4 -  -  	.dl Spikes_0, Spikes_0_Fast
  883 D1:D7AC 80 -  -  -  	.db %10000000
  884 D1:D7AD -  -  -  -  
  885 D1:D7AD -  -  -  -  decompress_frame_down_9:
  886 D1:D7AD 00 -  -  -  	.db 0
  887 D1:D7AE -  -  -  -  
  888 D1:D7AE -  -  -  -  decompress_frame_down_10:
  889 D1:D7AE 08 -  -  -  	.db 8
  890 D1:D7AF 0F E1 D1 7C 
              60 D4 -  -  	.dl Branches_7, Branches_7_Fast_F
  891 D1:D7B5 A0 -  -  -  	.db %10100000
  892 D1:D7B6 A9 E1 D1 F6 
              60 D4 -  -  	.dl Branches_12, Branches_12_Fast_F
  893 D1:D7BC A0 -  -  -  	.db %10100000
  894 D1:D7BD B5 DF D1 52 
              61 D4 -  -  	.dl Leaves1, Leaves1_Fast_F
  895 D1:D7C3 A0 -  -  -  	.db %10100000
  896 D1:D7C4 D6 E3 D1 FE 
              48 D4 -  -  	.dl Branches_4, Branches_4_Fast
  897 D1:D7CA 80 -  -  -  	.db %10000000
  898 D1:D7CB 11 EC D1 77 
              76 D4 -  -  	.dl Branches_1, Branches_1_Slow_O
  899 D1:D7D1 40 -  -  -  	.db %01000000
  900 D1:D7D2 F2 E4 D1 3D 
              77 D4 -  -  	.dl Branches_2, Branches_2_Slow_O
  901 D1:D7D8 40 -  -  -  	.db %01000000
  902 D1:D7D9 D6 E3 D1 1D 
              78 D4 -  -  	.dl Branches_4, Branches_4_Slow_O
  903 D1:D7DF 40 -  -  -  	.db %01000000
  904 D1:D7E0 0F E1 D1 E9 
              78 D4 -  -  	.dl Branches_7, Branches_7_Slow_O
  905 D1:D7E6 40 -  -  -  	.db %01000000
  906 D1:D7E7 -  -  -  -  
  907 D1:D7E7 -  -  -  -  decompress_frame_down_11:
  908 D1:D7E7 06 -  -  -  	.db 6
  909 D1:D7E8 C5 E0 D1 C5 
              55 D4 -  -  	.dl Branches_6, Branches_6_Slow
  910 D1:D7EE 00 -  -  -  	.db %00000000
  911 D1:D7EF 78 E1 D1 C4 
              57 D4 -  -  	.dl Branches_8, Branches_8_Fast_F
  912 D1:D7F5 A0 -  -  -  	.db %10100000
  913 D1:D7F6 A9 E1 D1 22 
              58 D4 -  -  	.dl Branches_12, Branches_12_Fast
  914 D1:D7FC 80 -  -  -  	.db %10000000
  915 D1:D7FD E3 E1 D1 06 
              5A D4 -  -  	.dl LeavesDark, LeavesDark_Fast_F
  916 D1:D803 A0 -  -  -  	.db %10100000
  917 D1:D804 62 E2 D1 0A 
              5C D4 -  -  	.dl Leaves2, Leaves2_Fast_F
  918 D1:D80A A0 -  -  -  	.db %10100000
  919 D1:D80B D6 E3 D1 DE 
              5F D4 -  -  	.dl Branches_4, Branches_4_Fast_F
  920 D1:D811 A0 -  -  -  	.db %10100000
  921 D1:D812 -  -  -  -  
  922 D1:D812 -  -  -  -  decompress_frame_down_12:
  923 D1:D812 1C -  -  -  	.db 28
  924 D1:D813 60 DE D1 07 
              4F D4 -  -  	.dl DualLeaf4, DualLeaf4_Slow
  925 D1:D819 00 -  -  -  	.db %00000000
  926 D1:D81A D0 DE D1 E0 
              50 D4 -  -  	.dl Branches_10, Branches_10_Fast
  927 D1:D820 80 -  -  -  	.db %10000000
  928 D1:D821 1A DF D1 58 
              51 D4 -  -  	.dl Branches_9, Branches_9_Fast
  929 D1:D827 80 -  -  -  	.db %10000000
  930 D1:D828 6A DF D1 DB 
              51 D4 -  -  	.dl Branches_16, Branches_16_Slow
  931 D1:D82E 00 -  -  -  	.db %00000000
  932 D1:D82F 97 DF D1 48 
              52 D4 -  -  	.dl Branches_13, Branches_13_Fast
  933 D1:D835 80 -  -  -  	.db %10000000
  934 D1:D836 B5 DF D1 7A 
              52 D4 -  -  	.dl Leaves1, Leaves1_Fast
  935 D1:D83C 80 -  -  -  	.db %10000000
  936 D1:D83D 6B E0 D1 92 
              53 D4 -  -  	.dl DualLeaf1, DualLeaf1_Fast
  937 D1:D843 80 -  -  -  	.db %10000000
  938 D1:D844 96 E0 D1 73 
              54 D4 -  -  	.dl DualLeaf2, DualLeaf2_Slow_O
  939 D1:D84A 40 -  -  -  	.db %01000000
  940 D1:D84B 6B E0 D1 1D 
              55 D4 -  -  	.dl DualLeaf1, DualLeaf1_Slow_O
  941 D1:D851 40 -  -  -  	.db %01000000
  942 D1:D852 D0 DE D1 62 
              56 D4 -  -  	.dl Branches_10, Branches_10_Fast_F
  943 D1:D858 A0 -  -  -  	.db %10100000
  944 D1:D859 0F E1 D1 DA 
              56 D4 -  -  	.dl Branches_7, Branches_7_Fast
  945 D1:D85F 80 -  -  -  	.db %10000000
  946 D1:D860 54 E1 D1 53 
              57 D4 -  -  	.dl Branches_15, Branches_15_Slow
  947 D1:D866 00 -  -  -  	.db %00000000
  948 D1:D867 54 E1 D1 7D 
              58 D4 -  -  	.dl Branches_15, Branches_15_Slow_O_F
  949 D1:D86D 60 -  -  -  	.db %01100000
  950 D1:D86E 62 E2 D1 1E 
              5B D4 -  -  	.dl Leaves2, Leaves2_Fast
  951 D1:D874 80 -  -  -  	.db %10000000
  952 D1:D875 FA E2 D1 F6 
              5C D4 -  -  	.dl LeavesLight, LeavesLight_Fast
  953 D1:D87B 80 -  -  -  	.db %10000000
  954 D1:D87C 78 E1 D1 0E 
              5E D4 -  -  	.dl Branches_8, Branches_8_Fast
  955 D1:D882 80 -  -  -  	.db %10000000
  956 D1:D883 79 E3 D1 6C 
              5E D4 -  -  	.dl Branches_11, Branches_11_Fast_F
  957 D1:D889 A0 -  -  -  	.db %10100000
  958 D1:D88A 6A DF D1 D3 
              5E D4 -  -  	.dl Branches_16, Branches_16_Slow_O_F
  959 D1:D890 60 -  -  -  	.db %01100000
  960 D1:D891 97 DF D1 40 
              5F D4 -  -  	.dl Branches_13, Branches_13_Fast_F
  961 D1:D897 A0 -  -  -  	.db %10100000
  962 D1:D898 B7 E3 D1 71 
              5F D4 -  -  	.dl Branches_14, Branches_14_Slow
  963 D1:D89E 00 -  -  -  	.db %00000000
  964 D1:D89F 34 E4 D1 04 
              1C D4 -  -  	.dl Branches_5, Branches_5_Fast
  965 D1:D8A5 80 -  -  -  	.db %10000000
  966 D1:D8A6 92 E4 D1 A4 
              1C D4 -  -  	.dl Branches_3, Branches_3_Fast
  967 D1:D8AC 80 -  -  -  	.db %10000000
  968 D1:D8AD F2 E4 D1 4C 
              1D D4 -  -  	.dl Branches_2, Branches_2_Fast
  969 D1:D8B3 80 -  -  -  	.db %10000000
  970 D1:D8B4 1A DF D1 BF 
              6A D4 -  -  	.dl Branches_9, Branches_9_Slow_O
  971 D1:D8BA 40 -  -  -  	.db %01000000
  972 D1:D8BB 11 EC D1 FA 
              29 D4 -  -  	.dl Branches_1, Branches_1_Fast
  973 D1:D8C1 80 -  -  -  	.db %10000000
  974 D1:D8C2 77 ED D1 5C 
              47 D4 -  -  	.dl Branches_0, Branches_0_Fast_F
  975 D1:D8C8 A0 -  -  -  	.db %10100000
  976 D1:D8C9 78 E1 D1 F3 
              47 D4 -  -  	.dl Branches_8, Branches_8_Slow_O
  977 D1:D8CF 40 -  -  -  	.db %01000000
  978 D1:D8D0 1A DF D1 7C 
              48 D4 -  -  	.dl Branches_9, Branches_9_Fast_F
  979 D1:D8D6 A0 -  -  -  	.db %10100000
  980 D1:D8D7 -  -  -  -  
  981 D1:D8D7 -  -  -  -  decompress_frame_down_13:
  982 D1:D8D7 00 -  -  -  	.db 0
  983 D1:D8D8 -  -  -  -  
  984 D1:D8D8 -  -  -  -  decompress_frame_down_14:
  985 D1:D8D8 17 -  -  -  	.db 23
  986 D1:D8D9 FA E6 D1 6E 
              6B D4 -  -  	.dl Tree_2, Tree_2_Fast
  987 D1:D8DF 80 -  -  -  	.db %10000000
  988 D1:D8E0 65 E7 D1 6A 
              6C D4 -  -  	.dl Tree_4, Tree_4_Fast
  989 D1:D8E6 80 -  -  -  	.db %10000000
  990 D1:D8E7 D2 E7 D1 6C 
              6D D4 -  -  	.dl Tree_7, Tree_7_Fast
  991 D1:D8ED 80 -  -  -  	.db %10000000
  992 D1:D8EE 3F E8 D1 6E 
              6E D4 -  -  	.dl Tree_9, Tree_9_Fast
  993 D1:D8F4 80 -  -  -  	.db %10000000
  994 D1:D8F5 AC E8 D1 70 
              6F D4 -  -  	.dl Tree_6, Tree_6_Fast_F
  995 D1:D8FB A0 -  -  -  	.db %10100000
  996 D1:D8FC 19 E9 D1 72 
              70 D4 -  -  	.dl Tree_3, Tree_3_Fast_F
  997 D1:D902 A0 -  -  -  	.db %10100000
  998 D1:D903 86 E9 D1 74 
              71 D4 -  -  	.dl Tree_0, Tree_0_Fast_F
  999 D1:D909 A0 -  -  -  	.db %10100000
 1000 D1:D90A 19 E9 D1 70 
              72 D4 -  -  	.dl Tree_3, Tree_3_Fast
 1001 D1:D910 80 -  -  -  	.db %10000000
 1002 D1:D911 F1 E9 D1 72 
              73 D4 -  -  	.dl Tree_8, Tree_8_Fast
 1003 D1:D917 80 -  -  -  	.db %10000000
 1004 D1:D918 3F E8 D1 74 
              74 D4 -  -  	.dl Tree_9, Tree_9_Fast_F
 1005 D1:D91E A0 -  -  -  	.db %10100000
 1006 D1:D91F F1 E9 D1 76 
              75 D4 -  -  	.dl Tree_8, Tree_8_Fast_F
 1007 D1:D925 A0 -  -  -  	.db %10100000
 1008 D1:D926 65 E7 D1 F6 
              1D D4 -  -  	.dl Tree_4, Tree_4_Fast_F
 1009 D1:D92C A0 -  -  -  	.db %10100000
 1010 D1:D92D 86 E9 D1 F8 
              1E D4 -  -  	.dl Tree_0, Tree_0_Fast
 1011 D1:D933 80 -  -  -  	.db %10000000
 1012 D1:D934 AC E8 D1 F4 
              1F D4 -  -  	.dl Tree_6, Tree_6_Fast
 1013 D1:D93A 80 -  -  -  	.db %10000000
 1014 D1:D93B 5E EA D1 F6 
              20 D4 -  -  	.dl Tree_10, Tree_10_Fast
 1015 D1:D941 80 -  -  -  	.db %10000000
 1016 D1:D942 D2 E7 D1 F8 
              21 D4 -  -  	.dl Tree_7, Tree_7_Fast_F
 1017 D1:D948 A0 -  -  -  	.db %10100000
 1018 D1:D949 CB EA D1 FA 
              22 D4 -  -  	.dl Tree_1, Tree_1_Fast_F
 1019 D1:D94F A0 -  -  -  	.db %10100000
 1020 D1:D950 CB EA D1 F8 
              23 D4 -  -  	.dl Tree_1, Tree_1_Fast
 1021 D1:D956 80 -  -  -  	.db %10000000
 1022 D1:D957 37 EB D1 F6 
              24 D4 -  -  	.dl Tree_5, Tree_5_Fast
 1023 D1:D95D 80 -  -  -  	.db %10000000
 1024 D1:D95E A4 EB D1 F8 
              25 D4 -  -  	.dl Tree_11, Tree_11_Fast
 1025 D1:D964 80 -  -  -  	.db %10000000
 1026 D1:D965 37 EB D1 FA 
              26 D4 -  -  	.dl Tree_5, Tree_5_Fast_F
 1027 D1:D96B A0 -  -  -  	.db %10100000
 1028 D1:D96C FA E6 D1 FC 
              27 D4 -  -  	.dl Tree_2, Tree_2_Fast_F
 1029 D1:D972 A0 -  -  -  	.db %10100000
 1030 D1:D973 A4 EB D1 F8 
              28 D4 -  -  	.dl Tree_11, Tree_11_Fast_F
 1031 D1:D979 A0 -  -  -  	.db %10100000
 1032 D1:D97A -  -  -  -  
 1033 D1:D97A -  -  -  -  decompress_frame_down_15:
 1034 D1:D97A 00 -  -  -  	.db 0
 1035 D1:D97B -  -  -  -  
 1036 D1:D97B -  -  -  -  decompress_frame_down_16:
 1037 D1:D97B 11 -  -  -  	.db 17
 1038 D1:D97C 9A DE D1 68 
              50 D4 -  -  	.dl DualLeaf3, DualLeaf3_Fast
 1039 D1:D982 80 -  -  -  	.db %10000000
 1040 D1:D983 96 E0 D1 02 
              54 D4 -  -  	.dl DualLeaf2, DualLeaf2_Fast
 1041 D1:D989 80 -  -  -  	.db %10000000
 1042 D1:D98A E3 E1 D1 EE 
              58 D4 -  -  	.dl LeavesDark, LeavesDark_Fast
 1043 D1:D990 80 -  -  -  	.db %10000000
 1044 D1:D991 6B E6 D1 D4 
              67 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast_F
 1045 D1:D997 A0 -  -  -  	.db %10100000
 1046 D1:D998 6B E6 D1 86 
              68 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast
 1047 D1:D99E 80 -  -  -  	.db %10000000
 1048 D1:D99F B0 E6 D1 38 
              69 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast
 1049 D1:D9A5 80 -  -  -  	.db %10000000
 1050 D1:D9A6 B0 E6 D1 B8 
              69 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast_F
 1051 D1:D9AC A0 -  -  -  	.db %10100000
 1052 D1:D9AD B0 EE D1 D4 
              38 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast
 1053 D1:D9B3 80 -  -  -  	.db %10000000
 1054 D1:D9B4 B0 EE D1 5A 
              39 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast_F
 1055 D1:D9BA A0 -  -  -  	.db %10100000
 1056 D1:D9BB E5 EE D1 E0 
              39 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast
 1057 D1:D9C1 80 -  -  -  	.db %10000000
 1058 D1:D9C2 E5 EE D1 66 
              3A D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast_F
 1059 D1:D9C8 A0 -  -  -  	.db %10100000
 1060 D1:D9C9 33 EF D1 EC 
              3A D4 -  -  	.dl Tree_16, Tree_16_Fast
 1061 D1:D9CF 80 -  -  -  	.db %10000000
 1062 D1:D9D0 4B EF D1 41 
              3B D4 -  -  	.dl Tree_17, Tree_17_Slow
 1063 D1:D9D6 00 -  -  -  	.db %00000000
 1064 D1:D9D7 4B EF D1 A7 
              3B D4 -  -  	.dl Tree_17, Tree_17_Slow_O_F
 1065 D1:D9DD 60 -  -  -  	.db %01100000
 1066 D1:D9DE 5C EF D1 0D 
              3C D4 -  -  	.dl Tree_18, Tree_18_Slow
 1067 D1:D9E4 00 -  -  -  	.db %00000000
 1068 D1:D9E5 5C EF D1 71 
              3C D4 -  -  	.dl Tree_18, Tree_18_Slow_O_F
 1069 D1:D9EB 60 -  -  -  	.db %01100000
 1070 D1:D9EC 33 EF D1 D6 
              3C D4 -  -  	.dl Tree_16, Tree_16_Fast_F
 1071 D1:D9F2 A0 -  -  -  	.db %10100000
 1072 D1:D9F3 -  -  -  -  
 1073 D1:D9F3 -  -  -  -  decompress_frame_down_17:
 1074 D1:D9F3 00 -  -  -  	.db 0
 1075 D1:D9F4 -  -  -  -  
 1076 D1:D9F4 -  -  -  -  decompress_frame_down_18:
 1077 D1:D9F4 00 -  -  -  	.db 0
 1078 D1:D9F5 -  -  -  -  
 1079 D1:D9F5 -  -  -  -  decompress_frame_down_19:
 1080 D1:D9F5 00 -  -  -  	.db 0
 1081 D1:D9F6 -  -  -  -  
 1082 D1:D9F6 -  -  -  -  decompress_frame_down_20:
 1083 D1:D9F6 00 -  -  -  	.db 0
 1084 D1:D9F7 -  -  -  -  
 1085 D1:D9F7 -  -  -  -  decompress_frame_down_21:
 1086 D1:D9F7 00 -  -  -  	.db 0
 1087 D1:D9F8 -  -  -  -  
 1088 D1:D9F8 -  -  -  -  decompress_frame_down_22:
 1089 D1:D9F8 00 -  -  -  	.db 0
 1090 D1:D9F9 -  -  -  -  
 1091 D1:D9F9 -  -  -  -  decompress_frame_down_23:
 1092 D1:D9F9 00 -  -  -  	.db 0
 1093 D1:D9FA -  -  -  -  
 1094 D1:D9FA -  -  -  -  decompress_frame_down_24:
 1095 D1:D9FA 0A -  -  -  	.db 10
 1096 D1:D9FB 6D EF D1 2C 
              3D D4 -  -  	.dl Clouds_0, Clouds_0_Fast
 1097 D1:DA01 80 -  -  -  	.db %10000000
 1098 D1:DA02 96 EF D1 92 
              3D D4 -  -  	.dl Clouds_1, Clouds_1_Fast
 1099 D1:DA08 80 -  -  -  	.db %10000000
 1100 D1:DA09 BD EF D1 F6 
              3D D4 -  -  	.dl Clouds_3, Clouds_3_Fast
 1101 D1:DA0F 80 -  -  -  	.db %10000000
 1102 D1:DA10 E9 EF D1 62 
              3E D4 -  -  	.dl Clouds_4, Clouds_4_Fast
 1103 D1:DA16 80 -  -  -  	.db %10000000
 1104 D1:DA17 00 F0 D1 A2 
              3E D4 -  -  	.dl Clouds_2, Clouds_2_Fast
 1105 D1:DA1D 80 -  -  -  	.db %10000000
 1106 D1:DA1E 6D EF D1 54 
              3F D4 -  -  	.dl Clouds_0, Clouds_0_Fast_F
 1107 D1:DA24 A0 -  -  -  	.db %10100000
 1108 D1:DA25 96 EF D1 BA 
              3F D4 -  -  	.dl Clouds_1, Clouds_1_Fast_F
 1109 D1:DA2B A0 -  -  -  	.db %10100000
 1110 D1:DA2C E9 EF D1 1E 
              40 D4 -  -  	.dl Clouds_4, Clouds_4_Fast_F
 1111 D1:DA32 A0 -  -  -  	.db %10100000
 1112 D1:DA33 BD EF D1 5E 
              40 D4 -  -  	.dl Clouds_3, Clouds_3_Fast_F
 1113 D1:DA39 A0 -  -  -  	.db %10100000
 1114 D1:DA3A 00 F0 D1 CA 
              40 D4 -  -  	.dl Clouds_2, Clouds_2_Fast_F
 1115 D1:DA40 A0 -  -  -  	.db %10100000
 1116 D1:DA41 -  -  -  -  
 1117 D1:DA41 -  -  -  -  decompress_frame_down_25:
 1118 D1:DA41 00 -  -  -  	.db 0
 1119 D1:DA42 -  -  -  -  
 1120 D1:DA42 -  -  -  -  decompress_frame_down_26:
 1121 D1:DA42 00 -  -  -  	.db 0
 1122 D1:DA43 -  -  -  -  
 1123 D1:DA43 -  -  -  -  decompress_frame_down_27:
 1124 D1:DA43 00 -  -  -  	.db 0
 1125 D1:DA44 -  -  -  -  
 1126 D1:DA44 -  -  -  -  decompress_frame_down_28:
 1127 D1:DA44 00 -  -  -  	.db 0
 1128 D1:DA45 -  -  -  -  
 1129 D1:DA45 -  -  -  -  decompress_frame_down_29:
 1130 D1:DA45 00 -  -  -  	.db 0
 1131 D1:DA46 -  -  -  -  
 1132 D1:DA46 -  -  -  -  decompress_frame_down_30:
 1133 D1:DA46 00 -  -  -  	.db 0
 1134 D1:DA47 -  -  -  -  
 1135 D1:DA47 -  -  -  -  decompress_frame_down_31:
 1136 D1:DA47 00 -  -  -  	.db 0
 1137 D1:DA48 -  -  -  -  
 1138 D1:DA48 -  -  -  -  decompress_frame_down_32:
 1139 D1:DA48 00 -  -  -  	.db 0
 1140 D1:DA49 -  -  -  -  
 1141 D1:DA49 -  -  -  -  decompress_frame_down_33:
 1142 D1:DA49 00 -  -  -  	.db 0
 1143 D1:DA4A -  -  -  -  
 1144 D1:DA4A -  -  -  -  decompress_frame_down_34:
 1145 D1:DA4A 00 -  -  -  	.db 0
 1146 D1:DA4B -  -  -  -  
 1147 D1:DA4B -  -  -  -  decompress_frame_down_35:
 1148 D1:DA4B 00 -  -  -  	.db 0
 1149 D1:DA4C -  -  -  -  
 1150 D1:DA4C -  -  -  -  decompress_frame_down_36:
 1151 D1:DA4C 00 -  -  -  	.db 0
 1152 D1:DA4D -  -  -  -  
 1153 D1:DA4D -  -  -  -  decompress_frame_down_37:
 1154 D1:DA4D 00 -  -  -  	.db 0
 1155 D1:DA4E -  -  -  -  
 1156 D1:DA4E -  -  -  -  decompress_frame_down_38:
 1157 D1:DA4E 00 -  -  -  	.db 0
 1158 D1:DA4F -  -  -  -  
 1159 D1:DA4F -  -  -  -  decompress_frame_down_39:
 1160 D1:DA4F 00 -  -  -  	.db 0
 1161 D1:DA50 -  -  -  -  
 1162 D1:DA50 -  -  -  -  decompress_frame_down_40:
 1163 D1:DA50 00 -  -  -  	.db 0
 1164 D1:DA51 -  -  -  -  
 1165 D1:DA51 -  -  -  -  decompress_frame_down_41:
 1166 D1:DA51 00 -  -  -  	.db 0
 1167 D1:DA52 -  -  -  -  
 1168 D1:DA52 -  -  -  -  decompress_frame_down_42:
 1169 D1:DA52 00 -  -  -  	.db 0
 1170 D1:DA53 -  -  -  -  
 1171 D1:DA53 -  -  -  -  decompress_frame_down_43:
 1172 D1:DA53 00 -  -  -  	.db 0
 1173 D1:DA54 -  -  -  -  
 1174 D1:DA54 -  -  -  -  decompress_frame_down_44:
 1175 D1:DA54 00 -  -  -  	.db 0
 1176 D1:DA55 -  -  -  -  
 1177 D1:DA55 -  -  -  -  decompress_frame_down_45:
 1178 D1:DA55 00 -  -  -  	.db 0
 1179 D1:DA56 -  -  -  -  
 1180 D1:DA56 -  -  -  -  decompress_frame_down_46:
 1181 D1:DA56 00 -  -  -  	.db 0
 1182 D1:DA57 -  -  -  -  
 1183 D1:DA57 -  -  -  -  decompress_frame_down_47:
 1184 D1:DA57 00 -  -  -  	.db 0
 1185 D1:DA58 -  -  -  -  
 1186 D1:DA58 -  -  -  -  decompress_frame_down_48:
 1187 D1:DA58 00 -  -  -  	.db 0
 1188 D1:DA59 -  -  -  -  
 1189 D1:DA59 -  -  -  -  decompress_frame_down_49:
 1190 D1:DA59 00 -  -  -  	.db 0
 1191 D1:DA5A -  -  -  -  
 1192 D1:DA5A -  -  -  -  decompress_frame_down_50:
 1193 D1:DA5A 00 -  -  -  	.db 0
 1194 D1:DA5B -  -  -  -  
 1195 D1:DA5B -  -  -  -  decompress_frame_down_51:
 1196 D1:DA5B 00 -  -  -  	.db 0
 1197 D1:DA5C -  -  -  -  
 1198 D1:DA5C -  -  -  -  decompress_frame_down_52:
 1199 D1:DA5C 00 -  -  -  	.db 0
 1200 D1:DA5D -  -  -  -  
 1201 D1:DA5D -  -  -  -  decompress_frame_down_53:
 1202 D1:DA5D 00 -  -  -  	.db 0
 1203 D1:DA5E -  -  -  -  
 1204 D1:DA5E -  -  -  -  decompress_frame_down_54:
 1205 D1:DA5E 00 -  -  -  	.db 0
 1206 D1:DA5F -  -  -  -  
 1207 D1:DA5F -  -  -  -  decompress_frame_down_55:
 1208 D1:DA5F 00 -  -  -  	.db 0
 1209 D1:DA60 -  -  -  -  
 1210 D1:DA60 -  -  -  -  decompress_frame_down_56:
 1211 D1:DA60 00 -  -  -  	.db 0
 1212 D1:DA61 -  -  -  -  
 1213 D1:DA61 -  -  -  -  decompress_frame_down_57:
 1214 D1:DA61 00 -  -  -  	.db 0
 1215 D1:DA62 -  -  -  -  
 1216 D1:DA62 -  -  -  -  decompress_frame_down_58:
 1217 D1:DA62 00 -  -  -  	.db 0
 1218 D1:DA63 -  -  -  -  
 1219 D1:DA63 -  -  -  -  decompress_frame_down_59:
 1220 D1:DA63 00 -  -  -  	.db 0
 1221 D1:DA64 -  -  -  -  
 1222 D1:DA64 -  -  -  -  decompress_frame_down_60:
 1223 D1:DA64 00 -  -  -  	.db 0
 1224 D1:DA65 -  -  -  -  
 1225 D1:DA65 -  -  -  -  decompress_frame_down_61:
 1226 D1:DA65 00 -  -  -  	.db 0
 1227 D1:DA66 -  -  -  -  
 1228 D1:DA66 -  -  -  -  decompress_frame_down_62:
 1229 D1:DA66 00 -  -  -  	.db 0
 1230 D1:DA67 -  -  -  -  
 1231 D1:DA67 -  -  -  -  decompress_frame_down_63:
 1232 D1:DA67 00 -  -  -  	.db 0
 1233 D1:DA68 -  -  -  -  
 1234 D1:DA68 -  -  -  -  decompress_frame_down_64:
 1235 D1:DA68 00 -  -  -  	.db 0
 1236 D1:DA69 -  -  -  -  
 1237 D1:DA69 -  -  -  -  decompress_frame_down_65:
 1238 D1:DA69 00 -  -  -  	.db 0
 1239 D1:DA6A -  -  -  -  
 1240 D1:DA6A -  -  -  -  decompress_frame_down_66:
 1241 D1:DA6A 00 -  -  -  	.db 0
 1242 D1:DA6B -  -  -  -  
 1243 D1:DA6B -  -  -  -  decompress_frame_down_67:
 1244 D1:DA6B 00 -  -  -  	.db 0
 1245 D1:DA6C -  -  -  -  
 1246 D1:DA6C -  -  -  -  decompress_frame_down_68:
 1247 D1:DA6C 00 -  -  -  	.db 0
 1248 D1:DA6D -  -  -  -  
 1249 D1:DA6D -  -  -  -  decompress_frame_down_69:
 1250 D1:DA6D 00 -  -  -  	.db 0
 1251 D1:DA6E -  -  -  -  
 1252 D1:DA6E -  -  -  -  decompress_frame_down_70:
 1253 D1:DA6E 00 -  -  -  	.db 0
 1254 D1:DA6F -  -  -  -  
 1255 D1:DA6F -  -  -  -  decompress_frame_down_71:
 1256 D1:DA6F 00 -  -  -  	.db 0
 1257 D1:DA70 -  -  -  -  
 1258 D1:DA70 -  -  -  -  decompress_frame_down_72:
 1259 D1:DA70 00 -  -  -  	.db 0
 1260 D1:DA71 -  -  -  -  
 1261 D1:DA71 -  -  -  -  decompress_frame_down_73:
 1262 D1:DA71 00 -  -  -  	.db 0
 1263 D1:DA72 -  -  -  -  
 1264 D1:DA72 -  -  -  -  decompress_frame_down_74:
 1265 D1:DA72 00 -  -  -  	.db 0
 1266 D1:DA73 -  -  -  -  
 1267 D1:DA73 -  -  -  -  decompress_frame_down_75:
 1268 D1:DA73 00 -  -  -  	.db 0
 1269 D1:DA74 -  -  -  -  
 1270 D1:DA74 -  -  -  -  decompress_frame_down_76:
 1271 D1:DA74 00 -  -  -  	.db 0
 1272 D1:DA75 -  -  -  -  
 1273 D1:DA75 -  -  -  -  decompress_frame_down_77:
 1274 D1:DA75 00 -  -  -  	.db 0
 1275 D1:DA76 -  -  -  -  
 1276 D1:DA76 -  -  -  -  decompress_frame_down_78:
 1277 D1:DA76 00 -  -  -  	.db 0
 1278 D1:DA77 -  -  -  -  
 1279 D1:DA77 -  -  -  -  decompress_frame_down_79:
 1280 D1:DA77 00 -  -  -  	.db 0
 1281 D1:DA78 -  -  -  -  
 1282 D1:DA78 -  -  -  -  decompress_frame_down_80:
 1283 D1:DA78 00 -  -  -  	.db 0
 1284 D1:DA79 -  -  -  -  
 1285 D1:DA79 -  -  -  -  decompress_frame_down_81:
 1286 D1:DA79 00 -  -  -  	.db 0
 1287 D1:DA7A -  -  -  -  
 1288 D1:DA7A -  -  -  -  decompress_frame_down_82:
 1289 D1:DA7A 00 -  -  -  	.db 0
 1290 D1:DA7B -  -  -  -  
 1291 D1:DA7B -  -  -  -  decompress_frame_down_83:
 1292 D1:DA7B 00 -  -  -  	.db 0
 1293 D1:DA7C -  -  -  -  
 1294 D1:DA7C -  -  -  -  decompress_frame_down_84:
 1295 D1:DA7C 00 -  -  -  	.db 0
 1296 D1:DA7D -  -  -  -  
 1297 D1:DA7D -  -  -  -  decompress_frame_down_85:
 1298 D1:DA7D 00 -  -  -  	.db 0
 1299 D1:DA7E -  -  -  -  
 1300 D1:DA7E -  -  -  -  decompress_frame_down_86:
 1301 D1:DA7E 00 -  -  -  	.db 0
 1302 D1:DA7F -  -  -  -  
 1303 D1:DA7F -  -  -  -  decompress_frame_down_87:
 1304 D1:DA7F 00 -  -  -  	.db 0
 1305 D1:DA80 -  -  -  -  
 1306 D1:DA80 -  -  -  -  decompress_frame_down_88:
 1307 D1:DA80 00 -  -  -  	.db 0
 1308 D1:DA81 -  -  -  -  
 1309 D1:DA81 -  -  -  -  decompress_frame_down_89:
 1310 D1:DA81 1A -  -  -  	.db 26
 1311 D1:DA82 24 F0 D1 7B 
              41 D4 -  -  	.dl FrogDefault, FrogDefault_Slow
 1312 D1:DA88 00 -  -  -  	.db %00000000
 1313 D1:DA89 24 F0 D1 AB 
              42 D4 -  -  	.dl FrogDefault, FrogDefault_Slow_O
 1314 D1:DA8F 40 -  -  -  	.db %01000000
 1315 D1:DA90 24 F0 D1 DB 
              43 D4 -  -  	.dl FrogDefault, FrogDefault_Slow_F
 1316 D1:DA96 20 -  -  -  	.db %00100000
 1317 D1:DA97 24 F0 D1 0B 
              45 D4 -  -  	.dl FrogDefault, FrogDefault_Slow_O_F
 1318 D1:DA9D 60 -  -  -  	.db %01100000
 1319 D1:DA9E FC F0 D1 3B 
              46 D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow
 1320 D1:DAA4 00 -  -  -  	.db %00000000
 1321 D1:DAA5 FC F0 D1 C1 
              01 D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_O
 1322 D1:DAAB 40 -  -  -  	.db %01000000
 1323 D1:DAAC FC F0 D1 E7 
              02 D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_F
 1324 D1:DAB2 20 -  -  -  	.db %00100000
 1325 D1:DAB3 FC F0 D1 0D 
              04 D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_O_F
 1326 D1:DAB9 60 -  -  -  	.db %01100000
 1327 D1:DABA 9A F1 D1 2D 
              05 D4 -  -  	.dl FrogCharge, FrogCharge_Slow
 1328 D1:DAC0 00 -  -  -  	.db %00000000
 1329 D1:DAC1 9A F1 D1 4D 
              06 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_O
 1330 D1:DAC7 40 -  -  -  	.db %01000000
 1331 D1:DAC8 9A F1 D1 73 
              07 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_F
 1332 D1:DACE 20 -  -  -  	.db %00100000
 1333 D1:DACF 9A F1 D1 99 
              08 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_O_F
 1334 D1:DAD5 60 -  -  -  	.db %01100000
 1335 D1:DAD6 69 F2 D1 B9 
              09 D4 -  -  	.dl FrogJump, FrogJump_Slow
 1336 D1:DADC 00 -  -  -  	.db %00000000
 1337 D1:DADD 69 F2 D1 31 
              0B D4 -  -  	.dl FrogJump, FrogJump_Slow_O
 1338 D1:DAE3 40 -  -  -  	.db %01000000
 1339 D1:DAE4 69 F2 D1 B3 
              0C D4 -  -  	.dl FrogJump, FrogJump_Slow_F
 1340 D1:DAEA 20 -  -  -  	.db %00100000
 1341 D1:DAEB 69 F2 D1 2B 
              0E D4 -  -  	.dl FrogJump, FrogJump_Slow_O_F
 1342 D1:DAF1 60 -  -  -  	.db %01100000
 1343 D1:DAF2 82 F3 D1 AD 
              0F D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow
 1344 D1:DAF8 00 -  -  -  	.db %00000000
 1345 D1:DAF9 82 F3 D1 25 
              11 D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_O
 1346 D1:DAFF 40 -  -  -  	.db %01000000
 1347 D1:DB00 82 F3 D1 A7 
              12 D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_F
 1348 D1:DB06 20 -  -  -  	.db %00100000
 1349 D1:DB07 82 F3 D1 1F 
              14 D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_O_F
 1350 D1:DB0D 60 -  -  -  	.db %01100000
 1351 D1:DB0E 9B F4 D1 A1 
              15 D4 -  -  	.dl FrogFall, FrogFall_Slow
 1352 D1:DB14 00 -  -  -  	.db %00000000
 1353 D1:DB15 9B F4 D1 11 
              17 D4 -  -  	.dl FrogFall, FrogFall_Slow_O
 1354 D1:DB1B 40 -  -  -  	.db %01000000
 1355 D1:DB1C 9B F4 D1 8B 
              18 D4 -  -  	.dl FrogFall, FrogFall_Slow_F
 1356 D1:DB22 20 -  -  -  	.db %00100000
 1357 D1:DB23 9B F4 D1 FB 
              19 D4 -  -  	.dl FrogFall, FrogFall_Slow_O_F
 1358 D1:DB29 60 -  -  -  	.db %01100000
 1359 D1:DB2A 81 F5 D1 75 
              1B D4 -  -  	.dl FrogTongue, FrogTongue_Slow
 1360 D1:DB30 00 -  -  -  	.db %00000000
 1361 D1:DB31 81 F5 D1 BB 
              1B D4 -  -  	.dl FrogTongue, FrogTongue_Slow_O
 1362 D1:DB37 40 -  -  -  	.db %01000000
Listing for file "ascent.asm"
  615 D1:DB38 -  -  -  -  #include "generated/Palette_Setup.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Palette_Setup.txt"
    1 D1:DB38 -  -  -  -  setup_palette_1:
    2 D1:DB38 21 00 02 E3 	ld hl,mpLcdPalette
    3 D1:DB3C 3E C7 -  -  	ld a,%11000111
    4 D1:DB3E 77 -  -  -  	ld (hl),a 
    5 D1:DB3F 23 -  -  -  	inc hl
    6 D1:DB40 3E 20 -  -  	ld a,%00100000
    7 D1:DB42 77 -  -  -  	ld (hl),a 
    8 D1:DB43 23 -  -  -  	inc hl
    9 D1:DB44 3E 29 -  -  	ld a,%00101001
   10 D1:DB46 77 -  -  -  	ld (hl),a 
   11 D1:DB47 23 -  -  -  	inc hl
   12 D1:DB48 3E 39 -  -  	ld a,%00111001
   13 D1:DB4A 77 -  -  -  	ld (hl),a 
   14 D1:DB4B 23 -  -  -  	inc hl
   15 D1:DB4C 3E 8A -  -  	ld a,%10001010
   16 D1:DB4E 77 -  -  -  	ld (hl),a 
   17 D1:DB4F 23 -  -  -  	inc hl
   18 D1:DB50 3E 4D -  -  	ld a,%01001101
   19 D1:DB52 77 -  -  -  	ld (hl),a 
   20 D1:DB53 23 -  -  -  	inc hl
   21 D1:DB54 3E EB -  -  	ld a,%11101011
   22 D1:DB56 77 -  -  -  	ld (hl),a 
   23 D1:DB57 23 -  -  -  	inc hl
   24 D1:DB58 3E E1 -  -  	ld a,%11100001
   25 D1:DB5A 77 -  -  -  	ld (hl),a 
   26 D1:DB5B 23 -  -  -  	inc hl
   27 D1:DB5C 3E 2F -  -  	ld a,%00101111
   28 D1:DB5E 77 -  -  -  	ld (hl),a 
   29 D1:DB5F 23 -  -  -  	inc hl
   30 D1:DB60 3E 2E -  -  	ld a,%00101110
   31 D1:DB62 77 -  -  -  	ld (hl),a 
   32 D1:DB63 23 -  -  -  	inc hl
   33 D1:DB64 3E 6A -  -  	ld a,%01101010
   34 D1:DB66 77 -  -  -  	ld (hl),a 
   35 D1:DB67 23 -  -  -  	inc hl
   36 D1:DB68 3E 95 -  -  	ld a,%10010101
   37 D1:DB6A 77 -  -  -  	ld (hl),a 
   38 D1:DB6B 23 -  -  -  	inc hl
   39 D1:DB6C 3E FF -  -  	ld a,%11111111
   40 D1:DB6E 77 -  -  -  	ld (hl),a 
   41 D1:DB6F 23 -  -  -  	inc hl
   42 D1:DB70 3E 73 -  -  	ld a,%01110011
   43 D1:DB72 77 -  -  -  	ld (hl),a 
   44 D1:DB73 23 -  -  -  	inc hl
   45 D1:DB74 3E BF -  -  	ld a,%10111111
   46 D1:DB76 77 -  -  -  	ld (hl),a 
   47 D1:DB77 23 -  -  -  	inc hl
   48 D1:DB78 3E 5B -  -  	ld a,%01011011
   49 D1:DB7A 77 -  -  -  	ld (hl),a 
   50 D1:DB7B 23 -  -  -  	inc hl
   51 D1:DB7C 3E 93 -  -  	ld a,%10010011
   52 D1:DB7E 77 -  -  -  	ld (hl),a 
   53 D1:DB7F 23 -  -  -  	inc hl
   54 D1:DB80 3E 4F -  -  	ld a,%01001111
   55 D1:DB82 77 -  -  -  	ld (hl),a 
   56 D1:DB83 23 -  -  -  	inc hl
   57 D1:DB84 3E 25 -  -  	ld a,%00100101
   58 D1:DB86 77 -  -  -  	ld (hl),a 
   59 D1:DB87 23 -  -  -  	inc hl
   60 D1:DB88 3E 80 -  -  	ld a,%10000000
   61 D1:DB8A 77 -  -  -  	ld (hl),a 
   62 D1:DB8B 23 -  -  -  	inc hl
   63 D1:DB8C 3E 0D -  -  	ld a,%00001101
   64 D1:DB8E 77 -  -  -  	ld (hl),a 
   65 D1:DB8F 23 -  -  -  	inc hl
   66 D1:DB90 3E 5D -  -  	ld a,%01011101
   67 D1:DB92 77 -  -  -  	ld (hl),a 
   68 D1:DB93 23 -  -  -  	inc hl
   69 D1:DB94 3E DF -  -  	ld a,%11011111
   70 D1:DB96 77 -  -  -  	ld (hl),a 
   71 D1:DB97 23 -  -  -  	inc hl
   72 D1:DB98 3E 75 -  -  	ld a,%01110101
   73 D1:DB9A 77 -  -  -  	ld (hl),a 
   74 D1:DB9B 23 -  -  -  	inc hl
   75 D1:DB9C 3E 5E -  -  	ld a,%01011110
   76 D1:DB9E 77 -  -  -  	ld (hl),a 
   77 D1:DB9F 23 -  -  -  	inc hl
   78 D1:DBA0 3E 65 -  -  	ld a,%01100101
   79 D1:DBA2 77 -  -  -  	ld (hl),a 
   80 D1:DBA3 23 -  -  -  	inc hl
   81 D1:DBA4 3E 11 -  -  	ld a,%00010001
   82 D1:DBA6 77 -  -  -  	ld (hl),a 
   83 D1:DBA7 23 -  -  -  	inc hl
   84 D1:DBA8 3E 6F -  -  	ld a,%01101111
   85 D1:DBAA 77 -  -  -  	ld (hl),a 
   86 D1:DBAB 23 -  -  -  	inc hl
   87 D1:DBAC 3E AA -  -  	ld a,%10101010
   88 D1:DBAE 77 -  -  -  	ld (hl),a 
   89 D1:DBAF 23 -  -  -  	inc hl
   90 D1:DBB0 3E 50 -  -  	ld a,%01010000
   91 D1:DBB2 77 -  -  -  	ld (hl),a 
   92 D1:DBB3 23 -  -  -  	inc hl
   93 D1:DBB4 3E 97 -  -  	ld a,%10010111
   94 D1:DBB6 77 -  -  -  	ld (hl),a 
   95 D1:DBB7 23 -  -  -  	inc hl
   96 D1:DBB8 3E 19 -  -  	ld a,%00011001
   97 D1:DBBA 77 -  -  -  	ld (hl),a 
   98 D1:DBBB 23 -  -  -  	inc hl
   99 D1:DBBC C9 -  -  -  	ret 
Listing for file "ascent.asm"
  616 D1:DBBD -  -  -  -  #include "generated/Sprite_Tables.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Tables.txt"
    1 D1:DBBD -  -  -  -  Sprite_Table_Table:
    2 D1:DBBD C3 DB D1 -  	.dl Sprite_Table_0
    3 D1:DBC0 4C DD D1 -  	.dl Sprite_Table_1
    4 D1:DBC3 -  -  -  -  
    5 D1:DBC3 -  -  -  -  
    6 D1:DBC3 -  -  -  -  Sprite_Table_0:
    7 D1:DBC3 B9 49 D4 -  	.dl BigGrassBase_Slow_O
    8 D1:DBC6 5C 47 D4 -  	.dl BigGrassBase_Fast
    9 D1:DBC9 70 4B D4 -  	.dl BigGrassBase_Fast_F
   10 D1:DBCC C4 48 D4 -  	.dl BigGrassTop_Fast
   11 D1:DBCF D8 4C D4 -  	.dl BigGrassTop_Fast_F
   12 D1:DBD2 CD 4D D4 -  	.dl BigGrassTop_Slow_O
   13 D1:DBD5 07 4F D4 -  	.dl DualLeaf4_Slow
   14 D1:DBD8 B7 4F D4 -  	.dl DualLeaf4_Slow_F
   15 D1:DBDB 68 50 D4 -  	.dl DualLeaf3_Fast
   16 D1:DBDE 58 51 D4 -  	.dl Branches_9_Fast
   17 D1:DBE1 48 52 D4 -  	.dl Branches_13_Fast
   18 D1:DBE4 E0 50 D4 -  	.dl Branches_10_Fast
   19 D1:DBE7 DB 51 D4 -  	.dl Branches_16_Slow
   20 D1:DBEA 7A 52 D4 -  	.dl Leaves1_Fast
   21 D1:DBED 92 53 D4 -  	.dl DualLeaf1_Fast
   22 D1:DBF0 02 54 D4 -  	.dl DualLeaf2_Fast
   23 D1:DBF3 73 54 D4 -  	.dl DualLeaf2_Slow_O
   24 D1:DBF6 1D 55 D4 -  	.dl DualLeaf1_Slow_O
   25 D1:DBF9 F6 5C D4 -  	.dl LeavesLight_Fast
   26 D1:DBFC EE 58 D4 -  	.dl LeavesDark_Fast
   27 D1:DBFF 71 5F D4 -  	.dl Branches_14_Slow
   28 D1:DC02 7D 58 D4 -  	.dl Branches_15_Slow_O_F
   29 D1:DC05 0E 5E D4 -  	.dl Branches_8_Fast
   30 D1:DC08 53 57 D4 -  	.dl Branches_15_Slow
   31 D1:DC0B 6C 5E D4 -  	.dl Branches_11_Fast_F
   32 D1:DC0E 40 5F D4 -  	.dl Branches_13_Fast_F
   33 D1:DC11 62 56 D4 -  	.dl Branches_10_Fast_F
   34 D1:DC14 0A 5C D4 -  	.dl Leaves2_Fast_F
   35 D1:DC17 1E 5B D4 -  	.dl Leaves2_Fast
   36 D1:DC1A 6A 62 D4 -  	.dl Lantern_0_Fast
   37 D1:DC1D 12 63 D4 -  	.dl Lantern_1_Fast
   38 D1:DC20 BA 63 D4 -  	.dl Lantern_2_Fast
   39 D1:DC23 62 64 D4 -  	.dl Lantern_0_Fast_F
   40 D1:DC26 0A 65 D4 -  	.dl Lantern_1_Fast_F
   41 D1:DC29 B2 65 D4 -  	.dl Lantern_2_Fast_F
   42 D1:DC2C 59 66 D4 -  	.dl Lantern_3_Slow
   43 D1:DC2F 17 67 D4 -  	.dl Lantern_3_Slow_O_F
   44 D1:DC32 06 5A D4 -  	.dl LeavesDark_Fast_F
   45 D1:DC35 22 58 D4 -  	.dl Branches_12_Fast
   46 D1:DC38 C5 55 D4 -  	.dl Branches_6_Slow
   47 D1:DC3B DA 56 D4 -  	.dl Branches_7_Fast
   48 D1:DC3E C4 57 D4 -  	.dl Branches_8_Fast_F
   49 D1:DC41 D3 5E D4 -  	.dl Branches_16_Slow_O_F
   50 D1:DC44 DE 5F D4 -  	.dl Branches_4_Fast_F
   51 D1:DC47 7C 60 D4 -  	.dl Branches_7_Fast_F
   52 D1:DC4A F6 60 D4 -  	.dl Branches_12_Fast_F
   53 D1:DC4D 52 61 D4 -  	.dl Leaves1_Fast_F
   54 D1:DC50 04 1C D4 -  	.dl Branches_5_Fast
   55 D1:DC53 FE 48 D4 -  	.dl Branches_4_Fast
   56 D1:DC56 A4 1C D4 -  	.dl Branches_3_Fast
   57 D1:DC59 4C 1D D4 -  	.dl Branches_2_Fast
   58 D1:DC5C D4 67 D4 -  	.dl GroundDirtFull_Fast_F
   59 D1:DC5F 86 68 D4 -  	.dl GroundDirtFull_Fast
   60 D1:DC62 38 69 D4 -  	.dl GroundDirtMound_Fast
   61 D1:DC65 B8 69 D4 -  	.dl GroundDirtMound_Fast_F
   62 D1:DC68 37 6A D4 -  	.dl Branches_8_Slow_O_F
   63 D1:DC6B BF 6A D4 -  	.dl Branches_9_Slow_O
   64 D1:DC6E 6E 6B D4 -  	.dl Tree_2_Fast
   65 D1:DC71 6A 6C D4 -  	.dl Tree_4_Fast
   66 D1:DC74 6C 6D D4 -  	.dl Tree_7_Fast
   67 D1:DC77 6E 6E D4 -  	.dl Tree_9_Fast
   68 D1:DC7A 70 6F D4 -  	.dl Tree_6_Fast_F
   69 D1:DC7D 72 70 D4 -  	.dl Tree_3_Fast_F
   70 D1:DC80 74 71 D4 -  	.dl Tree_0_Fast_F
   71 D1:DC83 70 72 D4 -  	.dl Tree_3_Fast
   72 D1:DC86 72 73 D4 -  	.dl Tree_8_Fast
   73 D1:DC89 74 74 D4 -  	.dl Tree_9_Fast_F
   74 D1:DC8C 76 75 D4 -  	.dl Tree_8_Fast_F
   75 D1:DC8F F6 1D D4 -  	.dl Tree_4_Fast_F
   76 D1:DC92 F8 1E D4 -  	.dl Tree_0_Fast
   77 D1:DC95 F4 1F D4 -  	.dl Tree_6_Fast
   78 D1:DC98 F6 20 D4 -  	.dl Tree_10_Fast
   79 D1:DC9B F8 21 D4 -  	.dl Tree_7_Fast_F
   80 D1:DC9E FA 22 D4 -  	.dl Tree_1_Fast_F
   81 D1:DCA1 F8 23 D4 -  	.dl Tree_1_Fast
   82 D1:DCA4 F6 24 D4 -  	.dl Tree_5_Fast
   83 D1:DCA7 F8 25 D4 -  	.dl Tree_11_Fast
   84 D1:DCAA FA 26 D4 -  	.dl Tree_5_Fast_F
   85 D1:DCAD FC 27 D4 -  	.dl Tree_2_Fast_F
   86 D1:DCB0 F8 28 D4 -  	.dl Tree_11_Fast_F
   87 D1:DCB3 FA 29 D4 -  	.dl Branches_1_Fast
   88 D1:DCB6 93 2A D4 -  	.dl Vine2_Slow
   89 D1:DCB9 33 2B D4 -  	.dl VineVertical_Slow_O
   90 D1:DCBC DF 2B D4 -  	.dl VineVertical_Slow
   91 D1:DCBF 8D 2C D4 -  	.dl Vine4_Slow_F
   92 D1:DCC2 4D 2D D4 -  	.dl Vine4_Slow_O_F
   93 D1:DCC5 0D 2E D4 -  	.dl Vine5_Slow_O_F
   94 D1:DCC8 CD 2E D4 -  	.dl Vine6_Slow_O
   95 D1:DCCB 73 2F D4 -  	.dl Vine7_Slow
   96 D1:DCCE F9 2F D4 -  	.dl Vine5_Slow
   97 D1:DCD1 B7 30 D4 -  	.dl Vine6_Slow
   98 D1:DCD4 5B 31 D4 -  	.dl Vine4_Slow
   99 D1:DCD7 1B 32 D4 -  	.dl Vine7_Slow_O
  100 D1:DCDA 9B 32 D4 -  	.dl Vine5_Slow_O
  101 D1:DCDD 59 33 D4 -  	.dl Vine4_Slow_O
  102 D1:DCE0 18 34 D4 -  	.dl Branches_1_Fast_F
  103 D1:DCE3 B0 34 D4 -  	.dl Branches_2_Fast_F
  104 D1:DCE6 5A 35 D4 -  	.dl Branches_5_Fast_F
  105 D1:DCE9 77 76 D4 -  	.dl Branches_1_Slow_O
  106 D1:DCEC 3D 77 D4 -  	.dl Branches_2_Slow_O
  107 D1:DCEF 1D 78 D4 -  	.dl Branches_4_Slow_O
  108 D1:DCF2 E9 78 D4 -  	.dl Branches_7_Slow_O
  109 D1:DCF5 5C 47 D4 -  	.dl Branches_0_Fast_F
  110 D1:DCF8 F3 47 D4 -  	.dl Branches_8_Slow_O
  111 D1:DCFB 7C 48 D4 -  	.dl Branches_9_Fast_F
  112 D1:DCFE FA 35 D4 -  	.dl Platforms_0_Fast
  113 D1:DD01 70 36 D4 -  	.dl Platforms_1_Fast
  114 D1:DD04 E6 36 D4 -  	.dl Platforms_0_Fast_F
  115 D1:DD07 5D 37 D4 -  	.dl Platforms_2_Slow_O_F
  116 D1:DD0A D9 37 D4 -  	.dl Platforms_2_Slow_O
  117 D1:DD0D 54 38 D4 -  	.dl Spikes_0_Fast
  118 D1:DD10 D4 38 D4 -  	.dl GroundDirtDark_Fast
  119 D1:DD13 5A 39 D4 -  	.dl GroundDirtDark_Fast_F
  120 D1:DD16 E0 39 D4 -  	.dl GroundHumpDark_Fast
  121 D1:DD19 66 3A D4 -  	.dl GroundHumpDark_Fast_F
  122 D1:DD1C EC 3A D4 -  	.dl Tree_16_Fast
  123 D1:DD1F 41 3B D4 -  	.dl Tree_17_Slow
  124 D1:DD22 A7 3B D4 -  	.dl Tree_17_Slow_O_F
  125 D1:DD25 0D 3C D4 -  	.dl Tree_18_Slow
  126 D1:DD28 71 3C D4 -  	.dl Tree_18_Slow_O_F
  127 D1:DD2B D6 3C D4 -  	.dl Tree_16_Fast_F
  128 D1:DD2E 2C 3D D4 -  	.dl Clouds_0_Fast
  129 D1:DD31 92 3D D4 -  	.dl Clouds_1_Fast
  130 D1:DD34 F6 3D D4 -  	.dl Clouds_3_Fast
  131 D1:DD37 62 3E D4 -  	.dl Clouds_4_Fast
  132 D1:DD3A A2 3E D4 -  	.dl Clouds_2_Fast
  133 D1:DD3D 54 3F D4 -  	.dl Clouds_0_Fast_F
  134 D1:DD40 BA 3F D4 -  	.dl Clouds_1_Fast_F
  135 D1:DD43 1E 40 D4 -  	.dl Clouds_4_Fast_F
  136 D1:DD46 5E 40 D4 -  	.dl Clouds_3_Fast_F
  137 D1:DD49 CA 40 D4 -  	.dl Clouds_2_Fast_F
  138 D1:DD4C -  -  -  -  
  139 D1:DD4C -  -  -  -  Sprite_Table_1:
  140 D1:DD4C -  -  -  -  
Listing for file "ascent.asm"
  617 D1:DD4C -  -  -  -  #include "generated/Sprite_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Data.txt"
    1 D1:DD4C -  -  -  -  BigGrassBase:
    2 D1:DD4C 10 -  -  -  	.db %00010000
    3 D1:DD4D 18 1A -  -  	.db 24, 26
    4 D1:DD4F 3F FF FC 3F 
              FF FC 3F FF 	.db %00111111, %11111111, %11111100, %00111111, %11111111, %11111100, %00111111, %11111111
    5 D1:DD57 FC 3F FF FC 
              3F FF FC 3F 	.db %11111100, %00111111, %11111111, %11111100, %00111111, %11111111, %11111100, %00111111
    6 D1:DD5F FF FC 3F FF 
              FC 3F FF FC 	.db %11111111, %11111100, %00111111, %11111111, %11111100, %00111111, %11111111, %11111100
    7 D1:DD67 3F FF FC 3F 
              FF FC 3F FF 	.db %00111111, %11111111, %11111100, %00111111, %11111111, %11111100, %00111111, %11111111
    8 D1:DD6F FC 3F FF FC 
              3F FF FC FF 	.db %11111100, %00111111, %11111111, %11111100, %00111111, %11111111, %11111100, %11111111
    9 D1:DD77 FF FC FF FF 
              FC FF FF FC 	.db %11111111, %11111100, %11111111, %11111111, %11111100, %11111111, %11111111, %11111100
   10 D1:DD7F FF FF FC FF 
              FF FC FF FF 	.db %11111111, %11111111, %11111100, %11111111, %11111111, %11111100, %11111111, %11111111
   11 D1:DD87 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   12 D1:DD8F FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   13 D1:DD97 FF FF FF FF 
              FF FF -  -  	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   14 D1:DD9D -  -  -  -  
   15 D1:DD9D 54 -  -  -  	.db %01010100
   16 D1:DD9E -  -  -  -  
   17 D1:DD9E 1F C7 42 F8 
              F8 1F 57 42 	.db %00011111, %11000111, %01000010, %11111000, %11111000, %00011111, %01010111, %01000010
   18 D1:DDA6 F8 F8 1F 57 
              42 F8 F8 1F 	.db %11111000, %11111000, %00011111, %01010111, %01000010, %11111000, %11111000, %00011111
   19 D1:DDAE 1F 42 E8 F8 
              1F 1F 42 EB 	.db %00011111, %01000010, %11101000, %11111000, %00011111, %00011111, %01000010, %11101011
   20 D1:DDB6 F8 1F 1F 42 
              F3 F8 5F 9F 	.db %11111000, %00011111, %00011111, %01000010, %11110011, %11111000, %01011111, %10011111
   21 D1:DDBE 40 FE FE 05 
              F1 F4 2F EF 	.db %01000000, %11111110, %11111110, %00000101, %11110001, %11110100, %00101111, %11101111
   22 D1:DDC6 E0 5F BF 42 
              FD FE 17 FB 	.db %11100000, %01011111, %10111111, %01000010, %11111101, %11111110, %00010111, %11111011
   23 D1:DDCE F4 0B FF F8 
              17 FF F4 0F 	.db %11110100, %00001011, %11111111, %11111000, %00010111, %11111111, %11110100, %00001111
   24 D1:DDD6 FF FA 17 FF 
              FD 0B FF FE 	.db %11111111, %11111010, %00010111, %11111111, %11111101, %00001011, %11111111, %11111110
   25 D1:DDDE 17 FF FD 0B 
              FF FE 00 -  	.db %00010111, %11111111, %11111101, %00001011, %11111111, %11111110, %00000000
   26 D1:DDE5 -  -  -  -  
   27 D1:DDE5 -  -  -  -  
   28 D1:DDE5 -  -  -  -  BigGrassTop:
   29 D1:DDE5 10 -  -  -  	.db %00010000
   30 D1:DDE6 1A 17 -  -  	.db 26, 23
   31 D1:DDE8 00 00 FC 00 
              00 FF 00 00 	.db %00000000, %00000000, %11111100, %00000000, %00000000, %11111111, %00000000, %00000000
   32 D1:DDF0 FF F0 00 FF 
              FF 00 3F FF 	.db %11111111, %11110000, %00000000, %11111111, %11111111, %00000000, %00111111, %11111111
   33 D1:DDF8 C0 3F FF C0 
              0F FF F0 0F 	.db %11000000, %00111111, %11111111, %11000000, %00001111, %11111111, %11110000, %00001111
   34 D1:DE00 FF F0 03 FF 
              FC 00 FF FF 	.db %11111111, %11110000, %00000011, %11111111, %11111100, %00000000, %11111111, %11111111
   35 D1:DE08 00 FF FF 00 
              3F FF C0 0F 	.db %00000000, %11111111, %11111111, %00000000, %00111111, %11111111, %11000000, %00001111
   36 D1:DE10 FF F0 0F FF 
              FC 03 FF FC 	.db %11111111, %11110000, %00001111, %11111111, %11111100, %00000011, %11111111, %11111100
   37 D1:DE18 00 FF FF 00 
              3F FF C0 3F 	.db %00000000, %11111111, %11111111, %00000000, %00111111, %11111111, %11000000, %00111111
   38 D1:DE20 FF F0 0F FF 
              F0 03 FF FC 	.db %11111111, %11110000, %00001111, %11111111, %11110000, %00000011, %11111111, %11111100
   39 D1:DE28 00 FF FF 00 
              3F FF C0 0F 	.db %00000000, %11111111, %11111111, %00000000, %00111111, %11111111, %11000000, %00001111
   40 D1:DE30 FF F0 00 -  	.db %11111111, %11110000, %00000000
   41 D1:DE33 -  -  -  -  
   42 D1:DE33 45 -  -  -  	.db %01000101
   43 D1:DE34 -  -  -  -  
   44 D1:DE34 56 A9 43 6A 
              12 94 30 E8 	.db %01010110, %10101001, %01000011, %01101010, %00010010, %10010100, %00110000, %11101000
   45 D1:DE3C 30 50 60 E8 
              10 50 30 A0 	.db %00110000, %01010000, %01100000, %11101000, %00010000, %01010000, %00110000, %10100000
   46 D1:DE44 61 78 30 B0 
              69 60 52 F4 	.db %01100001, %01111000, %00110000, %10110000, %01101001, %01100000, %01010010, %11110100
   47 D1:DE4C 30 FC 0A 5C 
              18 38 34 5E 	.db %00110000, %11111100, %00001010, %01011100, %00011000, %00111000, %00110100, %01011110
   48 D1:DE54 06 2F 03 57 
              03 8E 07 16 	.db %00000110, %00101111, %00000011, %01010111, %00000011, %10001110, %00000111, %00010110
   49 D1:DE5C 8A AF 07 1C 	.db %10001010, %10101111, %00000111, %00011100
   50 D1:DE60 -  -  -  -  
   51 D1:DE60 -  -  -  -  
   52 D1:DE60 -  -  -  -  DualLeaf4:
   53 D1:DE60 10 -  -  -  	.db %00010000
   54 D1:DE61 0E 13 -  -  	.db 14, 19
   55 D1:DE63 00 3C 03 F0 
              3F C0 FF 03 	.db %00000000, %00111100, %00000011, %11110000, %00111111, %11000000, %11111111, %00000011
   56 D1:DE6B FC 3F F0 FF 
              CF FC 3F C3 	.db %11111100, %00111111, %11110000, %11111111, %11001111, %11111100, %00111111, %11000011
   57 D1:DE73 FF 0F F0 3F 
              00 FF 03 FF 	.db %11111111, %00001111, %11110000, %00111111, %00000000, %11111111, %00000011, %11111111
   58 D1:DE7B 07 FF 0F FC 
              3F F0 3F C0 	.db %00000111, %11111111, %00001111, %11111100, %00111111, %11110000, %00111111, %11000000
   59 D1:DE83 3F 00 -  -  	.db %00111111, %00000000
   60 D1:DE85 -  -  -  -  
   61 D1:DE85 45 -  -  -  	.db %01000101
   62 D1:DE86 -  -  -  -  
   63 D1:DE86 10 81 42 C5 
              C3 F1 7C 2F 	.db %00010000, %10000001, %01000010, %11000101, %11000011, %11110001, %01111100, %00101111
   64 D1:DE8E 37 13 E9 F4 
              E8 E0 3C 06 	.db %00110111, %00010011, %11101001, %11110100, %11101000, %11100000, %00111100, %00000110
   65 D1:DE96 A1 D4 7E 7E 	.db %10100001, %11010100, %01111110, %01111110
   66 D1:DE9A -  -  -  -  
   67 D1:DE9A -  -  -  -  
   68 D1:DE9A -  -  -  -  DualLeaf3:
   69 D1:DE9A 10 -  -  -  	.db %00010000
   70 D1:DE9B 16 0B -  -  	.db 22, 11
   71 D1:DE9D F0 00 FF F0 
              0F FF F0 3F 	.db %11110000, %00000000, %11111111, %11110000, %00001111, %11111111, %11110000, %00111111
   72 D1:DEA5 CF F3 FF 3F 
              CF F0 FF FF 	.db %11001111, %11110011, %11111111, %00111111, %11001111, %11110000, %11111111, %11111111
   73 D1:DEAD C0 FF FF 03 
              FF F0 0F FF 	.db %11000000, %11111111, %11111111, %00000011, %11111111, %11110000, %00001111, %11111111
   74 D1:DEB5 00 0F FC 00 
              0F F0 00 -  	.db %00000000, %00001111, %11111100, %00000000, %00001111, %11110000, %00000000
   75 D1:DEBC -  -  -  -  
   76 D1:DEBC 45 -  -  -  	.db %01000101
   77 D1:DEBD -  -  -  -  
   78 D1:DEBD 00 10 00 F0 
              06 E0 05 F6 	.db %00000000, %00010000, %00000000, %11110000, %00000110, %11100000, %00000101, %11110110
   79 D1:DEC5 02 F9 01 7E 
              82 FF 55 FE 	.db %00000010, %11111001, %00000001, %01111110, %10000010, %11111111, %01010101, %11111110
   80 D1:DECD FF FF FF -  	.db %11111111, %11111111, %11111111
   81 D1:DED0 -  -  -  -  
   82 D1:DED0 -  -  -  -  
   83 D1:DED0 -  -  -  -  Branches_10:
   84 D1:DED0 20 -  -  -  	.db %00100000
   85 D1:DED1 12 0E -  -  	.db 18, 14
   86 D1:DED3 00 0F C0 0F 
              F0 0F FC 03 	.db %00000000, %00001111, %11000000, %00001111, %11110000, %00001111, %11111100, %00000011
   87 D1:DEDB FF 03 FF C3 
              FF F3 FF FF 	.db %11111111, %00000011, %11111111, %11000011, %11111111, %11110011, %11111111, %11111111
   88 D1:DEE3 FF FC FF FC 
              3F FC 0F FC 	.db %11111111, %11111100, %11111111, %11111100, %00111111, %11111100, %00001111, %11111100
   89 D1:DEEB 03 FC 00 FF 
              00 33 00 00 	.db %00000011, %11111100, %00000000, %11111111, %00000000, %00110011, %00000000, %00000000
   90 D1:DEF3 -  -  -  -  
   91 D1:DEF3 01 23 -  -  	.db %00000001, %00100011
   92 D1:DEF5 -  -  -  -  
   93 D1:DEF5 04 60 46 F0 
              15 BE 14 2D 	.db %00000100, %01100000, %01000110, %11110000, %00010101, %10111110, %00010100, %00101101
   94 D1:DEFD 50 15 E5 00 
              55 39 55 04 	.db %01010000, %00010101, %11100101, %00000000, %01010101, %00111001, %01010101, %00000100
   95 D1:DF05 4A A9 10 01 
              5A D8 40 55 	.db %01001010, %10101001, %00010000, %00000001, %01011010, %11011000, %01000000, %01010101
   96 D1:DF0D 2F 85 01 4E 
              25 0B E8 50 	.db %00101111, %10000101, %00000001, %01001110, %00100101, %00001011, %11101000, %01010000
   97 D1:DF15 A9 10 50 40 
              00 -  -  -  	.db %10101001, %00010000, %01010000, %01000000, %00000000
   98 D1:DF1A -  -  -  -  
   99 D1:DF1A -  -  -  -  
  100 D1:DF1A -  -  -  -  Branches_9:
  101 D1:DF1A 20 -  -  -  	.db %00100000
  102 D1:DF1B 12 0E -  -  	.db 18, 14
  103 D1:DF1D 00 30 C0 3F 
              F0 0F FC 0F 	.db %00000000, %00110000, %11000000, %00111111, %11110000, %00001111, %11111100, %00001111
  104 D1:DF25 FF 0F FF FF 
              FF FF FF FF 	.db %11111111, %00001111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  105 D1:DF2D FF FF FF FF 
              FF FF CF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11001111, %11111111
  106 D1:DF35 03 FF 00 FF 
              00 0C 00 00 	.db %00000011, %11111111, %00000000, %11111111, %00000000, %00001100, %00000000, %00000000
  107 D1:DF3D -  -  -  -  
  108 D1:DF3D 01 23 -  -  	.db %00000001, %00100011
  109 D1:DF3F -  -  -  -  
  110 D1:DF3F 00 00 00 51 
              51 40 06 50 	.db %00000000, %00000000, %00000000, %01010001, %01010001, %01000000, %00000110, %01010000
  111 D1:DF47 55 04 58 AA 
              A0 01 51 FB 	.db %01010101, %00000100, %01011000, %10101010, %10100000, %00000001, %01010001, %11111011
  112 D1:DF4F BF 05 45 B9 
              65 05 05 BA 	.db %10111111, %00000101, %01000101, %10111001, %01100101, %00000101, %00000101, %10111010
  113 D1:DF57 50 11 BF BE 
              50 55 06 A9 	.db %01010000, %00010001, %10111111, %10111110, %01010000, %01010101, %00000110, %10101001
  114 D1:DF5F 44 40 00 14 
              15 05 15 40 	.db %01000100, %01000000, %00000000, %00010100, %00010101, %00000101, %00010101, %01000000
  115 D1:DF67 04 00 00 -  	.db %00000100, %00000000, %00000000
  116 D1:DF6A -  -  -  -  
  117 D1:DF6A -  -  -  -  
  118 D1:DF6A -  -  -  -  Branches_16:
  119 D1:DF6A 20 -  -  -  	.db %00100000
  120 D1:DF6B 0D 0D -  -  	.db 13, 13
  121 D1:DF6D 07 F8 3F 83 
              FC 1F C0 FC 	.db %00000111, %11111000, %00111111, %10000011, %11111100, %00011111, %11000000, %11111100
  122 D1:DF75 0F C0 7C 07 
              C0 3C 03 C0 	.db %00001111, %11000000, %01111100, %00000111, %11000000, %00111100, %00000011, %11000000
  123 D1:DF7D 1E 01 E0 0C 
              00 00 -  -  	.db %00011110, %00000001, %11100000, %00001100, %00000000, %00000000
  124 D1:DF83 -  -  -  -  
  125 D1:DF83 01 23 -  -  	.db %00000001, %00100011
  126 D1:DF85 -  -  -  -  
  127 D1:DF85 16 A4 12 D0 
              43 50 6C 00 	.db %00010110, %10100100, %00010010, %11010000, %01000011, %01010000, %01101100, %00000000
  128 D1:DF8D 94 0A 01 40 
              64 24 18 14 	.db %10010100, %00001010, %00000001, %01000000, %01100100, %00100100, %00011000, %00010100
  129 D1:DF95 10 00 -  -  	.db %00010000, %00000000
  130 D1:DF97 -  -  -  -  
  131 D1:DF97 -  -  -  -  
  132 D1:DF97 -  -  -  -  Branches_13:
  133 D1:DF97 20 -  -  -  	.db %00100000
  134 D1:DF98 0E 06 -  -  	.db 14, 6
  135 D1:DF9A 00 0C 33 FF 
              FF FF FF 3F 	.db %00000000, %00001100, %00110011, %11111111, %11111111, %11111111, %11111111, %00111111
  136 D1:DFA2 FC 03 F0 -  	.db %11111100, %00000011, %11110000
  137 D1:DFA5 -  -  -  -  
  138 D1:DFA5 01 20 -  -  	.db %00000001, %00100000
  139 D1:DFA7 -  -  -  -  
  140 D1:DFA7 00 00 10 00 
              01 59 08 45 	.db %00000000, %00000000, %00010000, %00000000, %00000001, %01011001, %00001000, %01000101
  141 D1:DFAF AA 50 00 15 
              60 00 -  -  	.db %10101010, %01010000, %00000000, %00010101, %01100000, %00000000
  142 D1:DFB5 -  -  -  -  
  143 D1:DFB5 -  -  -  -  
  144 D1:DFB5 -  -  -  -  Leaves1:
  145 D1:DFB5 20 -  -  -  	.db %00100000
  146 D1:DFB6 1A 15 -  -  	.db 26, 21
  147 D1:DFB8 00 0F 00 00 
              0F FC 00 3F 	.db %00000000, %00001111, %00000000, %00000000, %00001111, %11111100, %00000000, %00111111
  148 D1:DFC0 FF C0 0F FF 
              FC 0F FF FF 	.db %11111111, %11000000, %00001111, %11111111, %11111100, %00001111, %11111111, %11111111
  149 D1:DFC8 03 FF FF C3 
              FF FF F0 FF 	.db %00000011, %11111111, %11111111, %11000011, %11111111, %11111111, %11110000, %11111111
  150 D1:DFD0 FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  151 D1:DFD8 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  152 D1:DFE0 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  153 D1:DFE8 FF FF FF FF 
              3F FF FF CF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111, %11001111
  154 D1:DFF0 FF FF C0 3F 
              FF F0 0F FF 	.db %11111111, %11111111, %11000000, %00111111, %11111111, %11110000, %00001111, %11111111
  155 D1:DFF8 F0 00 FF F0 
              00 -  -  -  	.db %11110000, %00000000, %11111111, %11110000, %00000000
  156 D1:DFFD -  -  -  -  
  157 D1:DFFD 48 50 -  -  	.db %01001000, %01010000
  158 D1:DFFF -  -  -  -  
  159 D1:DFFF 10 04 40 01 
              11 11 00 04 	.db %00010000, %00000100, %01000000, %00000001, %00010001, %00010001, %00000000, %00000100
  160 D1:E007 44 40 00 00 
              01 00 00 00 	.db %01000100, %01000000, %00000000, %00000000, %00000001, %00000000, %00000000, %00000000
  161 D1:E00F 44 00 00 00 
              01 10 00 22 	.db %01000100, %00000000, %00000000, %00000000, %00000001, %00010000, %00000000, %00100010
  162 D1:E017 00 00 00 00 
              20 88 80 00 	.db %00000000, %00000000, %00000000, %00000000, %00100000, %10001000, %10000000, %00000000
  163 D1:E01F 00 00 8A A2 
              00 08 88 00 	.db %00000000, %00000000, %10001010, %10100010, %00000000, %00001000, %10001000, %00000000
  164 D1:E027 08 A2 82 22 
              22 20 02 28 	.db %00001000, %10100010, %10000010, %00100010, %00100010, %00100000, %00000010, %00101000
  165 D1:E02F AA 88 88 88 
              08 8A 2A 2A 	.db %10101010, %10001000, %10001000, %10001000, %00001000, %10001010, %00101010, %00101010
  166 D1:E037 AA AA 88 2A 
              8A AA AA AA 	.db %10101010, %10101010, %10001000, %00101010, %10001010, %10101010, %10101010, %10101010
  167 D1:E03F AA 8A AA AA 
              AA AA AA A8 	.db %10101010, %10001010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101000
  168 D1:E047 AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  169 D1:E04F AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  170 D1:E057 AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  171 D1:E05F AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  172 D1:E067 AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010
  173 D1:E06B -  -  -  -  
  174 D1:E06B -  -  -  -  
  175 D1:E06B -  -  -  -  DualLeaf1:
  176 D1:E06B 10 -  -  -  	.db %00010000
  177 D1:E06C 10 0C -  -  	.db 16, 12
  178 D1:E06E 03 C0 0F F0 
              3F FC 3F FC 	.db %00000011, %11000000, %00001111, %11110000, %00111111, %11111100, %00111111, %11111100
  179 D1:E076 FF FF FF 3F 
              FC 3F FC 3F 	.db %11111111, %11111111, %11111111, %00111111, %11111100, %00111111, %11111100, %00111111
  180 D1:E07E FC 0F F0 0F 
              F0 0F C0 0C 	.db %11111100, %00001111, %11110000, %00001111, %11110000, %00001111, %11000000, %00001100
  181 D1:E086 -  -  -  -  
  182 D1:E086 45 -  -  -  	.db %01000101
  183 D1:E087 -  -  -  -  
  184 D1:E087 01 40 A8 17 
              40 BF 00 FA 	.db %00000001, %01000000, %10101000, %00010111, %01000000, %10111111, %00000000, %11111010
  185 D1:E08F 05 D0 BF 17 
              C7 E7 D7 -  	.db %00000101, %11010000, %10111111, %00010111, %11000111, %11100111, %11010111
  186 D1:E096 -  -  -  -  
  187 D1:E096 -  -  -  -  
  188 D1:E096 -  -  -  -  DualLeaf2:
  189 D1:E096 10 -  -  -  	.db %00010000
  190 D1:E097 12 0C -  -  	.db 18, 12
  191 D1:E099 03 C0 00 FC 
              00 FF 00 FF 	.db %00000011, %11000000, %00000000, %11111100, %00000000, %11111111, %00000000, %11111111
  192 D1:E0A1 F0 3F FF 0F 
              CF CF F3 FF 	.db %11110000, %00111111, %11111111, %00001111, %11001111, %11001111, %11110011, %11111111
  193 D1:E0A9 F0 3F FC 0F 
              FF 00 FF C0 	.db %11110000, %00111111, %11111100, %00001111, %11111111, %00000000, %11111111, %11000000
  194 D1:E0B1 3F C0 03 -  	.db %00111111, %11000000, %00000011
  195 D1:E0B4 -  -  -  -  
  196 D1:E0B4 45 -  -  -  	.db %01000101
  197 D1:E0B5 -  -  -  -  
  198 D1:E0B5 02 05 02 E0 
              5F 85 F4 2F 	.db %00000010, %00000101, %00000010, %11100000, %01011111, %10000101, %11110100, %00101111
  199 D1:E0BD E8 2F 45 FE 
              5E 8F D3 C0 	.db %11101000, %00101111, %01000101, %11111110, %01011110, %10001111, %11010011, %11000000
  200 D1:E0C5 -  -  -  -  
  201 D1:E0C5 -  -  -  -  
  202 D1:E0C5 -  -  -  -  Branches_6:
  203 D1:E0C5 20 -  -  -  	.db %00100000
  204 D1:E0C6 12 0B -  -  	.db 18, 11
  205 D1:E0C8 37 3F 3F FF 
              FF FF FF FF 	.db %00110111, %00111111, %00111111, %11111111, %11111111, %11111111, %11111111, %11111111
  206 D1:E0D0 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  207 D1:E0D8 FF FF FF FF 
              FC FF F0 00 	.db %11111111, %11111111, %11111111, %11111111, %11111100, %11111111, %11110000, %00000000
  208 D1:E0E0 0C -  -  -  	.db %00001100
  209 D1:E0E1 -  -  -  -  
  210 D1:E0E1 01 23 -  -  	.db %00000001, %00100011
  211 D1:E0E3 -  -  -  -  
  212 D1:E0E3 00 00 00 14 
              00 15 40 10 	.db %00000000, %00000000, %00000000, %00010100, %00000000, %00010101, %01000000, %00010000
  213 D1:E0EB 05 44 01 55 
              94 41 55 15 	.db %00000101, %01000100, %00000001, %01010101, %10010100, %01000001, %01010101, %00010101
  214 D1:E0F3 2D CA 86 99 
              AA E6 BF FF 	.db %00101101, %11001010, %10000110, %10011001, %10101010, %11100110, %10111111, %11111111
  215 D1:E0FB FF C8 59 15 
              A6 A8 16 15 	.db %11111111, %11001000, %01011001, %00010101, %10100110, %10101000, %00010110, %00010101
  216 D1:E103 01 54 15 41 
              55 00 14 00 	.db %00000001, %01010100, %00010101, %01000001, %01010101, %00000000, %00010100, %00000000
  217 D1:E10B 00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000
  218 D1:E10F -  -  -  -  
  219 D1:E10F -  -  -  -  
  220 D1:E10F -  -  -  -  Branches_7:
  221 D1:E10F 20 -  -  -  	.db %00100000
  222 D1:E110 12 0A -  -  	.db 18, 10
  223 D1:E112 FF 3C FF FF 
              FF FF FF FF 	.db %11111111, %00111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  224 D1:E11A FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  225 D1:E122 FF FF FF F3 
              C3 C0 F0 -  	.db %11111111, %11111111, %11111111, %11110011, %11000011, %11000000, %11110000
  226 D1:E129 -  -  -  -  
  227 D1:E129 01 23 -  -  	.db %00000001, %00100011
  228 D1:E12B -  -  -  -  
  229 D1:E12B 00 00 00 00 
              55 40 01 00 	.db %00000000, %00000000, %00000000, %00000000, %01010101, %01000000, %00000001, %00000000
  230 D1:E133 90 01 55 45 
              51 15 55 05 	.db %10010000, %00000001, %01010101, %01000101, %01010001, %00010101, %01010101, %00000101
  231 D1:E13B 00 AB FA 9D 
              FA AF AA FB 	.db %00000000, %10101011, %11111010, %10011101, %11111010, %10101111, %10101010, %11111011
  232 D1:E143 AA BF 05 51 
              55 51 55 44 	.db %10101010, %10111111, %00000101, %01010001, %01010101, %01010001, %01010101, %01000100
  233 D1:E14B 15 10 44 00 
              00 00 05 00 	.db %00010101, %00010000, %01000100, %00000000, %00000000, %00000000, %00000101, %00000000
  234 D1:E153 00 -  -  -  	.db %00000000
  235 D1:E154 -  -  -  -  
  236 D1:E154 -  -  -  -  
  237 D1:E154 -  -  -  -  Branches_15:
  238 D1:E154 20 -  -  -  	.db %00100000
  239 D1:E155 09 0E -  -  	.db 9, 14
  240 D1:E157 80 60 38 1E 
              07 C3 F1 FE 	.db %10000000, %01100000, %00111000, %00011110, %00000111, %11000011, %11110001, %11111110
  241 D1:E15F 7F 1F 87 C1 
              E0 F0 18 0C 	.db %01111111, %00011111, %10000111, %11000001, %11100000, %11110000, %00011000, %00001100
  242 D1:E167 -  -  -  -  
  243 D1:E167 01 23 -  -  	.db %00000001, %00100011
  244 D1:E169 -  -  -  -  
  245 D1:E169 00 01 01 00 
              64 00 84 01 	.db %00000000, %00000001, %00000001, %00000000, %01100100, %00000000, %10000100, %00000001
  246 D1:E171 A1 06 90 6C 
              68 10 40 -  	.db %10100001, %00000110, %10010000, %01101100, %01101000, %00010000, %01000000
  247 D1:E178 -  -  -  -  
  248 D1:E178 -  -  -  -  
  249 D1:E178 -  -  -  -  Branches_8:
  250 D1:E178 20 -  -  -  	.db %00100000
  251 D1:E179 0A 0E -  -  	.db 10, 14
  252 D1:E17B 03 C3 F3 FC 
              FF 3F FF FF 	.db %00000011, %11000011, %11110011, %11111100, %11111111, %00111111, %11111111, %11111111
  253 D1:E183 FF FF FF 3F 
              CF F3 F0 F0 	.db %11111111, %11111111, %11111111, %00111111, %11001111, %11110011, %11110000, %11110000
  254 D1:E18B 3C 00 -  -  	.db %00111100, %00000000
  255 D1:E18D -  -  -  -  
  256 D1:E18D 01 23 -  -  	.db %00000001, %00100011
  257 D1:E18F -  -  -  -  
  258 D1:E18F 06 00 60 12 
              90 5B 51 1A 	.db %00000110, %00000000, %01100000, %00010010, %10010000, %01011011, %01010001, %00011010
  259 D1:E197 50 51 94 11 
              F9 45 6E 50 	.db %01010000, %01010001, %10010100, %00010001, %11111001, %01000101, %01101110, %01010000
  260 D1:E19F 4B 84 5E 54 
              B8 50 A1 01 	.db %01001011, %10000100, %01011110, %01010100, %10111000, %01010000, %10100001, %00000001
  261 D1:E1A7 44 40 -  -  	.db %01000100, %01000000
  262 D1:E1A9 -  -  -  -  
  263 D1:E1A9 -  -  -  -  
  264 D1:E1A9 -  -  -  -  Branches_12:
  265 D1:E1A9 20 -  -  -  	.db %00100000
  266 D1:E1AA 12 0A -  -  	.db 18, 10
  267 D1:E1AC 00 00 C0 3F 
              F0 FF FF FF 	.db %00000000, %00000000, %11000000, %00111111, %11110000, %11111111, %11111111, %11111111
  268 D1:E1B4 FF FF FF FF 
              FF FF FF FC 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111100
  269 D1:E1BC 0F FF 00 0F 
              C0 00 F0 -  	.db %00001111, %11111111, %00000000, %00001111, %11000000, %00000000, %11110000
  270 D1:E1C3 -  -  -  -  
  271 D1:E1C3 01 23 -  -  	.db %00000001, %00100011
  272 D1:E1C5 -  -  -  -  
  273 D1:E1C5 00 00 00 00 
              05 54 50 01 	.db %00000000, %00000000, %00000000, %00000000, %00000101, %01010100, %01010000, %00000001
  274 D1:E1CD 45 04 16 3A 
              5F 2A F8 F2 	.db %01000101, %00000100, %00010110, %00111010, %01011111, %00101010, %11111000, %11110010
  275 D1:E1D5 12 9A C5 6A 
              00 00 15 06 	.db %00010010, %10011010, %11000101, %01101010, %00000000, %00000000, %00010101, %00000110
  276 D1:E1DD 90 00 14 10 
              14 00 -  -  	.db %10010000, %00000000, %00010100, %00010000, %00010100, %00000000
  277 D1:E1E3 -  -  -  -  
  278 D1:E1E3 -  -  -  -  
  279 D1:E1E3 -  -  -  -  LeavesDark:
  280 D1:E1E3 10 -  -  -  	.db %00010000
  281 D1:E1E4 1A 15 -  -  	.db 26, 21
  282 D1:E1E6 00 0F 00 00 
              0F FC 00 3F 	.db %00000000, %00001111, %00000000, %00000000, %00001111, %11111100, %00000000, %00111111
  283 D1:E1EE FF C0 0F FF 
              FC 0F FF FF 	.db %11111111, %11000000, %00001111, %11111111, %11111100, %00001111, %11111111, %11111111
  284 D1:E1F6 03 FF FF C3 
              FF FF F0 FF 	.db %00000011, %11111111, %11111111, %11000011, %11111111, %11111111, %11110000, %11111111
  285 D1:E1FE FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  286 D1:E206 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  287 D1:E20E FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  288 D1:E216 FF FF FF FF 
              3F FF FF CF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111, %11001111
  289 D1:E21E FF FF C0 3F 
              FF F0 0F FF 	.db %11111111, %11111111, %11000000, %00111111, %11111111, %11110000, %00001111, %11111111
  290 D1:E226 F0 00 FF F0 
              00 -  -  -  	.db %11110000, %00000000, %11111111, %11110000, %00000000
  291 D1:E22B -  -  -  -  
  292 D1:E22B 54 -  -  -  	.db %01010100
  293 D1:E22C -  -  -  -  
  294 D1:E22C 4A A1 54 02 
              A9 40 55 20 	.db %01001010, %10100001, %01010100, %00000010, %10101001, %01000000, %01010101, %00100000
  295 D1:E234 0A 24 80 02 
              20 02 20 10 	.db %00001010, %00100100, %10000000, %00000010, %00100000, %00000010, %00100000, %00010000
  296 D1:E23C 00 84 40 00 
              00 00 00 00 	.db %00000000, %10000100, %01000000, %00000000, %00000000, %00000000, %00000000, %00000000
  297 D1:E244 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  298 D1:E24C 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  299 D1:E254 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  300 D1:E25C 00 00 00 00 
              00 00 -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  301 D1:E262 -  -  -  -  
  302 D1:E262 -  -  -  -  
  303 D1:E262 -  -  -  -  Leaves2:
  304 D1:E262 20 -  -  -  	.db %00100000
  305 D1:E263 1A 12 -  -  	.db 26, 18
  306 D1:E265 0F 00 00 0F 
              F0 0F 03 FC 	.db %00001111, %00000000, %00000000, %00001111, %11110000, %00001111, %00000011, %11111100
  307 D1:E26D 0F F3 FF FF 
              FC FF FF FF 	.db %00001111, %11110011, %11111111, %11111111, %11111100, %11111111, %11111111, %11111111
  308 D1:E275 3F FF FF FF 
              FF FF FF FF 	.db %00111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  309 D1:E27D FF FF FF FF 
              FF CF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11001111, %11111111, %11111111
  310 D1:E285 F3 FF FF F0 
              FF FF FC 3F 	.db %11110011, %11111111, %11111111, %11110000, %11111111, %11111111, %11111100, %00111111
  311 D1:E28D FF FF 0F FF 
              FF 00 FF FF 	.db %11111111, %11111111, %00001111, %11111111, %11111111, %00000000, %11111111, %11111111
  312 D1:E295 C0 3F FF F0 
              03 FF F0 00 	.db %11000000, %00111111, %11111111, %11110000, %00000011, %11111111, %11110000, %00000000
  313 D1:E29D 0F F0 00 -  	.db %00001111, %11110000, %00000000
  314 D1:E2A0 -  -  -  -  
  315 D1:E2A0 48 50 -  -  	.db %01001000, %01010000
  316 D1:E2A2 -  -  -  -  
  317 D1:E2A2 00 01 00 00 
              04 40 01 00 	.db %00000000, %00000001, %00000000, %00000000, %00000100, %01000000, %00000001, %00000000
  318 D1:E2AA 01 11 00 00 
              14 40 00 40 	.db %00000001, %00010001, %00000000, %00000000, %00010100, %01000000, %00000000, %01000000
  319 D1:E2B2 00 00 04 10 
              00 00 00 00 	.db %00000000, %00000000, %00000100, %00010000, %00000000, %00000000, %00000000, %00000000
  320 D1:E2BA 11 00 00 00 
              00 00 00 00 	.db %00010001, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  321 D1:E2C2 00 A2 00 02 
              88 80 02 0A 	.db %00000000, %10100010, %00000000, %00000010, %10001000, %10000000, %00000010, %00001010
  322 D1:E2CA 88 0A 8A A2 
              20 88 A2 28 	.db %10001000, %00001010, %10001010, %10100010, %00100000, %10001000, %10100010, %00101000
  323 D1:E2D2 AA AA 88 8A 
              A8 A2 AA AA 	.db %10101010, %10101010, %10001000, %10001010, %10101000, %10100010, %10101010, %10101010
  324 D1:E2DA A2 2A AA AA 
              AA AA AA AA 	.db %10100010, %00101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  325 D1:E2E2 AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  326 D1:E2EA AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  327 D1:E2F2 AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  328 D1:E2FA -  -  -  -  
  329 D1:E2FA -  -  -  -  
  330 D1:E2FA -  -  -  -  LeavesLight:
  331 D1:E2FA 10 -  -  -  	.db %00010000
  332 D1:E2FB 1A 15 -  -  	.db 26, 21
  333 D1:E2FD 00 0F 00 00 
              0F FC 00 3F 	.db %00000000, %00001111, %00000000, %00000000, %00001111, %11111100, %00000000, %00111111
  334 D1:E305 FF C0 0F FF 
              FC 0F FF FF 	.db %11111111, %11000000, %00001111, %11111111, %11111100, %00001111, %11111111, %11111111
  335 D1:E30D 03 FF FF C3 
              FF FF F0 FF 	.db %00000011, %11111111, %11111111, %11000011, %11111111, %11111111, %11110000, %11111111
  336 D1:E315 FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  337 D1:E31D FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  338 D1:E325 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  339 D1:E32D FF FF FF FF 
              3F FF FF CF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111, %11001111
  340 D1:E335 FF FF C0 3F 
              FF F0 0F FF 	.db %11111111, %11111111, %11000000, %00111111, %11111111, %11110000, %00001111, %11111111
  341 D1:E33D F0 00 FF F0 
              00 -  -  -  	.db %11110000, %00000000, %11111111, %11110000, %00000000
  342 D1:E342 -  -  -  -  
  343 D1:E342 48 -  -  -  	.db %01001000
  344 D1:E343 -  -  -  -  
  345 D1:E343 4A A1 54 02 
              A9 40 55 20 	.db %01001010, %10100001, %01010100, %00000010, %10101001, %01000000, %01010101, %00100000
  346 D1:E34B 0A 24 80 02 
              20 02 20 10 	.db %00001010, %00100100, %10000000, %00000010, %00100000, %00000010, %00100000, %00010000
  347 D1:E353 00 84 40 00 
              00 00 00 00 	.db %00000000, %10000100, %01000000, %00000000, %00000000, %00000000, %00000000, %00000000
  348 D1:E35B 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  349 D1:E363 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  350 D1:E36B 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  351 D1:E373 00 00 00 00 
              00 00 -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  352 D1:E379 -  -  -  -  
  353 D1:E379 -  -  -  -  
  354 D1:E379 -  -  -  -  Branches_11:
  355 D1:E379 20 -  -  -  	.db %00100000
  356 D1:E37A 12 0A -  -  	.db 18, 10
  357 D1:E37C 00 03 C3 CF 
              FF FF FF FF 	.db %00000000, %00000011, %11000011, %11001111, %11111111, %11111111, %11111111, %11111111
  358 D1:E384 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  359 D1:E38C FF FF 03 F3 
              C0 00 30 -  	.db %11111111, %11111111, %00000011, %11110011, %11000000, %00000000, %00110000
  360 D1:E393 -  -  -  -  
  361 D1:E393 01 32 -  -  	.db %00000001, %00110010
  362 D1:E395 -  -  -  -  
  363 D1:E395 00 00 00 15 
              00 00 05 44 	.db %00000000, %00000000, %00000000, %00010101, %00000000, %00000000, %00000101, %01000100
  364 D1:E39D 15 65 55 04 
              10 FB FA 3F 	.db %00010101, %01100101, %01010101, %00000100, %00010000, %11111011, %11111010, %00111111
  365 D1:E3A5 FF B7 D3 FB 
              EA BE 15 54 	.db %11111111, %10110111, %11010011, %11111011, %11101010, %10111110, %00010101, %01010100
  366 D1:E3AD 14 15 E0 00 
              14 10 15 00 	.db %00010100, %00010101, %11100000, %00000000, %00010100, %00010000, %00010101, %00000000
  367 D1:E3B5 00 10 -  -  	.db %00000000, %00010000
  368 D1:E3B7 -  -  -  -  
  369 D1:E3B7 -  -  -  -  
  370 D1:E3B7 -  -  -  -  Branches_14:
  371 D1:E3B7 20 -  -  -  	.db %00100000
  372 D1:E3B8 06 0E -  -  	.db 6, 14
  373 D1:E3BA 30 C3 0C 39 
              E7 9E FF FF 	.db %00110000, %11000011, %00001100, %00111001, %11100111, %10011110, %11111111, %11111111
  374 D1:E3C2 FF FF F0 -  	.db %11111111, %11111111, %11110000
  375 D1:E3C5 -  -  -  -  
  376 D1:E3C5 01 23 -  -  	.db %00000001, %00100011
  377 D1:E3C7 -  -  -  -  
  378 D1:E3C7 00 00 10 20 
              20 20 1D 06 	.db %00000000, %00000000, %00010000, %00100000, %00100000, %00100000, %00011101, %00000110
  379 D1:E3CF 90 65 06 10 
              59 07 90 -  	.db %10010000, %01100101, %00000110, %00010000, %01011001, %00000111, %10010000
  380 D1:E3D6 -  -  -  -  
  381 D1:E3D6 -  -  -  -  
  382 D1:E3D6 -  -  -  -  Branches_4:
  383 D1:E3D6 20 -  -  -  	.db %00100000
  384 D1:E3D7 12 0E -  -  	.db 18, 14
  385 D1:E3D9 00 03 CF FF 
              FF FF FF FF 	.db %00000000, %00000011, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111
  386 D1:E3E1 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  387 D1:E3E9 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  388 D1:E3F1 FF FF FF 3F 
              FF C0 FF 30 	.db %11111111, %11111111, %11111111, %00111111, %11111111, %11000000, %11111111, %00110000
  389 D1:E3F9 -  -  -  -  
  390 D1:E3F9 01 23 -  -  	.db %00000001, %00100011
  391 D1:E3FB -  -  -  -  
  392 D1:E3FB 00 00 00 00 
              00 00 50 45 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %01010000, %01000101
  393 D1:E403 01 55 50 00 
              25 00 14 16 	.db %00000001, %01010101, %01010000, %00000000, %00100101, %00000000, %00010100, %00010110
  394 D1:E40B 11 45 5A 19 
              2A AA 58 3F 	.db %00010001, %01000101, %01011010, %00011001, %00101010, %10101010, %01011000, %00111111
  395 D1:E413 AA AA AF FE 
              BD FF DF E2 	.db %10101010, %10101010, %10101111, %11111110, %10111101, %11111111, %11011111, %11100010
  396 D1:E41B 55 64 02 AA 
              60 00 05 50 	.db %01010101, %01100100, %00000010, %10101010, %01100000, %00000000, %00000101, %01010000
  397 D1:E423 54 15 54 00 
              00 00 00 05 	.db %01010100, %00010101, %01010100, %00000000, %00000000, %00000000, %00000000, %00000101
  398 D1:E42B 10 55 00 00 
              00 00 00 00 	.db %00010000, %01010101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  399 D1:E433 00 -  -  -  	.db %00000000
  400 D1:E434 -  -  -  -  
  401 D1:E434 -  -  -  -  
  402 D1:E434 -  -  -  -  Branches_5:
  403 D1:E434 20 -  -  -  	.db %00100000
  404 D1:E435 12 0E -  -  	.db 18, 14
  405 D1:E437 00 C0 CF FF 
              FF FF FF FF 	.db %00000000, %11000000, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111
  406 D1:E43F FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  407 D1:E447 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  408 D1:E44F FF FF FF 3F 
              FF C3 C3 F0 	.db %11111111, %11111111, %11111111, %00111111, %11111111, %11000011, %11000011, %11110000
  409 D1:E457 -  -  -  -  
  410 D1:E457 01 23 -  -  	.db %00000001, %00100011
  411 D1:E459 -  -  -  -  
  412 D1:E459 00 00 00 00 
              01 00 05 05 	.db %00000000, %00000000, %00000000, %00000000, %00000001, %00000000, %00000101, %00000101
  413 D1:E461 41 41 45 40 
              00 01 15 45 	.db %01000001, %01000001, %01000101, %01000000, %00000000, %00000001, %00010101, %01000101
  414 D1:E469 55 45 65 A5 
              AA 66 AA FA 	.db %01010101, %01000101, %01100101, %10100101, %10101010, %01100110, %10101010, %11111010
  415 D1:E471 F9 FF BF FE 
              AA F6 BA 99 	.db %11111001, %11111111, %10111111, %11111110, %10101010, %11110110, %10111010, %10011001
  416 D1:E479 50 55 55 55 
              51 50 00 01 	.db %01010000, %01010101, %01010101, %01010101, %01010001, %01010000, %00000000, %00000001
  417 D1:E481 54 51 41 50 
              00 00 01 40 	.db %01010100, %01010001, %01000001, %01010000, %00000000, %00000000, %00000001, %01000000
  418 D1:E489 15 45 00 00 
              00 00 00 00 	.db %00010101, %01000101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  419 D1:E491 00 -  -  -  	.db %00000000
  420 D1:E492 -  -  -  -  
  421 D1:E492 -  -  -  -  
  422 D1:E492 -  -  -  -  Branches_3:
  423 D1:E492 20 -  -  -  	.db %00100000
  424 D1:E493 12 0E -  -  	.db 18, 14
  425 D1:E495 0F CF FF FF 
              FF FF FF FF 	.db %00001111, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  426 D1:E49D FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  427 D1:E4A5 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  428 D1:E4AD FF FF FF FF 
              3F FF 00 F0 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %00000000, %11110000
  429 D1:E4B5 -  -  -  -  
  430 D1:E4B5 01 23 -  -  	.db %00000001, %00100011
  431 D1:E4B7 -  -  -  -  
  432 D1:E4B7 00 00 00 00 
              50 00 15 55 	.db %00000000, %00000000, %00000000, %00000000, %01010000, %00000000, %00010101, %01010101
  433 D1:E4BF 50 15 00 00 
              00 00 00 65 	.db %01010000, %00010101, %00000000, %00000000, %00000000, %00000000, %00000000, %01100101
  434 D1:E4C7 05 98 A2 55 
              05 AA 32 AA 	.db %00000101, %10011000, %10100010, %01010101, %00000101, %10101010, %00110010, %10101010
  435 D1:E4CF BD 4B FF FF 
              FF BF EA 95 	.db %10111101, %01001011, %11111111, %11111111, %11111111, %10111111, %11101010, %10010101
  436 D1:E4D7 5E AA E6 55 
              A9 55 6A 56 	.db %01011110, %10101010, %11100110, %01010101, %10101001, %01010101, %01101010, %01010110
  437 D1:E4DF 40 12 50 00 
              00 50 01 54 	.db %01000000, %00010010, %01010000, %00000000, %00000000, %01010000, %00000001, %01010100
  438 D1:E4E7 15 54 00 15 
              40 00 00 00 	.db %00010101, %01010100, %00000000, %00010101, %01000000, %00000000, %00000000, %00000000
  439 D1:E4EF 40 00 00 -  	.db %01000000, %00000000, %00000000
  440 D1:E4F2 -  -  -  -  
  441 D1:E4F2 -  -  -  -  
  442 D1:E4F2 -  -  -  -  Branches_2:
  443 D1:E4F2 20 -  -  -  	.db %00100000
  444 D1:E4F3 12 0E -  -  	.db 18, 14
  445 D1:E4F5 0F C3 FF FF 
              FF FF FF FF 	.db %00001111, %11000011, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  446 D1:E4FD FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  447 D1:E505 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  448 D1:E50D FF FF FF FF 
              FF F3 0F 30 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11110011, %00001111, %00110000
  449 D1:E515 -  -  -  -  
  450 D1:E515 01 32 -  -  	.db %00000001, %00110010
  451 D1:E517 -  -  -  -  
  452 D1:E517 00 00 00 00 
              50 00 00 05 	.db %00000000, %00000000, %00000000, %00000000, %01010000, %00000000, %00000000, %00000101
  453 D1:E51F 54 15 55 45 
              40 00 00 00 	.db %01010100, %00010101, %01010101, %01000101, %01000000, %00000000, %00000000, %00000000
  454 D1:E527 55 55 14 05 
              59 FF FD 55 	.db %01010101, %01010101, %00010100, %00000101, %01011001, %11111111, %11111101, %01010101
  455 D1:E52F 47 EA AA AE 
              FF EF FF F6 	.db %01000111, %11101010, %10101010, %10101110, %11111111, %11101111, %11111111, %11110110
  456 D1:E537 AA AA 5D 07 
              F4 FF F5 55 	.db %10101010, %10101010, %01011101, %00000111, %11110100, %11111111, %11110101, %01010101
  457 D1:E53F 05 55 75 15 
              15 55 00 00 	.db %00000101, %01010101, %01110101, %00010101, %00010101, %01010101, %00000000, %00000000
  458 D1:E547 01 00 05 50 
              00 40 05 50 	.db %00000001, %00000000, %00000101, %01010000, %00000000, %01000000, %00000101, %01010000
  459 D1:E54F 00 00 00 -  	.db %00000000, %00000000, %00000000
  460 D1:E552 -  -  -  -  
  461 D1:E552 -  -  -  -  
  462 D1:E552 -  -  -  -  Lantern_0:
  463 D1:E552 20 -  -  -  	.db %00100000
  464 D1:E553 08 18 -  -  	.db 8, 24
  465 D1:E555 FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  466 D1:E55D FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  467 D1:E565 FF FF FF FF 
              FF FF FF FC 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111100
  468 D1:E56D -  -  -  -  
  469 D1:E56D EA D3 -  -  	.db %11101010, %11010011
  470 D1:E56F -  -  -  -  
  471 D1:E56F 00 05 50 09 
              55 4A 55 45 	.db %00000000, %00000101, %01010000, %00001001, %01010101, %01001010, %01010101, %01000101
  472 D1:E577 50 00 03 4A 
              FF 4A AF 4A 	.db %01010000, %00000000, %00000011, %01001010, %11111111, %01001010, %10101111, %01001010
  473 D1:E57F EC 00 03 4A 
              AF 4A BB 4A 	.db %11101100, %00000000, %00000011, %01001010, %10101111, %01001010, %10111011, %01001010
  474 D1:E587 AC 00 03 4A 
              BB 4A AF 4A 	.db %10101100, %00000000, %00000011, %01001010, %10111011, %01001010, %10101111, %01001010
  475 D1:E58F A8 00 03 4A 
              AB 4A AB 4A 	.db %10101000, %00000000, %00000011, %01001010, %10101011, %01001010, %10101011, %01001010
  476 D1:E597 EF 4A AB 4A 
              AD 00 00 -  	.db %11101111, %01001010, %10101011, %01001010, %10101101, %00000000, %00000000
  477 D1:E59E -  -  -  -  
  478 D1:E59E -  -  -  -  
  479 D1:E59E -  -  -  -  Lantern_1:
  480 D1:E59E 20 -  -  -  	.db %00100000
  481 D1:E59F 08 18 -  -  	.db 8, 24
  482 D1:E5A1 FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  483 D1:E5A9 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  484 D1:E5B1 FF FF FF FF 
              FF FF FF FC 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111100
  485 D1:E5B9 -  -  -  -  
  486 D1:E5B9 EA 3D -  -  	.db %11101010, %00111101
  487 D1:E5BB -  -  -  -  
  488 D1:E5BB 00 05 50 09 
              55 4E 55 45 	.db %00000000, %00000101, %01010000, %00001001, %01010101, %01001110, %01010101, %01000101
  489 D1:E5C3 50 00 02 4E 
              BA 4E EA 4F 	.db %01010000, %00000000, %00000010, %01001110, %10111010, %01001110, %11101010, %01001111
  490 D1:E5CB E8 00 02 4F 
              BA 4F EA 4F 	.db %11101000, %00000000, %00000010, %01001111, %10111010, %01001111, %11101010, %01001111
  491 D1:E5D3 F8 00 02 4F 
              EE 4F FA 4F 	.db %11111000, %00000000, %00000010, %01001111, %11101110, %01001111, %11111010, %01001111
  492 D1:E5DB E8 00 02 4F 
              EE 4F EA 4F 	.db %11101000, %00000000, %00000010, %01001111, %11101110, %01001111, %11101010, %01001111
  493 D1:E5E3 FA 4F BE 4F 
              E9 00 00 -  	.db %11111010, %01001111, %10111110, %01001111, %11101001, %00000000, %00000000
  494 D1:E5EA -  -  -  -  
  495 D1:E5EA -  -  -  -  
  496 D1:E5EA -  -  -  -  Lantern_2:
  497 D1:E5EA 20 -  -  -  	.db %00100000
  498 D1:E5EB 08 18 -  -  	.db 8, 24
  499 D1:E5ED FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  500 D1:E5F5 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  501 D1:E5FD FF FF FF FF 
              FF FF FF FC 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111100
  502 D1:E605 -  -  -  -  
  503 D1:E605 EA 3D -  -  	.db %11101010, %00111101
  504 D1:E607 -  -  -  -  
  505 D1:E607 00 05 50 09 
              55 4A 55 45 	.db %00000000, %00000101, %01010000, %00001001, %01010101, %01001010, %01010101, %01000101
  506 D1:E60F 50 00 02 4A 
              AA 4F AA 4E 	.db %01010000, %00000000, %00000010, %01001010, %10101010, %01001111, %10101010, %01001110
  507 D1:E617 E8 00 02 4F 
              AA 4F AA 4E 	.db %11101000, %00000000, %00000010, %01001111, %10101010, %01001111, %10101010, %01001110
  508 D1:E61F E8 00 02 4F 
              AA 4F EA 4F 	.db %11101000, %00000000, %00000010, %01001111, %10101010, %01001111, %11101010, %01001111
  509 D1:E627 B8 00 02 4F 
              EA 4F EA 4F 	.db %10111000, %00000000, %00000010, %01001111, %11101010, %01001111, %11101010, %01001111
  510 D1:E62F AA 4F EA 4E 
              E9 00 00 -  	.db %10101010, %01001111, %11101010, %01001110, %11101001, %00000000, %00000000
  511 D1:E636 -  -  -  -  
  512 D1:E636 -  -  -  -  
  513 D1:E636 -  -  -  -  Lantern_3:
  514 D1:E636 20 -  -  -  	.db %00100000
  515 D1:E637 07 15 -  -  	.db 7, 21
  516 D1:E639 10 20 47 CF 
              DF FF FF FF 	.db %00010000, %00100000, %01000111, %11001111, %11011111, %11111111, %11111111, %11111111
  517 D1:E641 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  518 D1:E649 F2 44 80 -  	.db %11110010, %01000100, %10000000
  519 D1:E64C -  -  -  -  
  520 D1:E64C 9A ED -  -  	.db %10011010, %11101101
  521 D1:E64E -  -  -  -  
  522 D1:E64E 01 99 A9 9E 
              A6 BE A9 FE 	.db %00000001, %10011001, %10101001, %10011110, %10100110, %10111110, %10101001, %11111110
  523 D1:E656 9B BE 9E A9 
              BB A9 EB 9B 	.db %10011011, %10111110, %10011110, %10101001, %10111011, %10101001, %11101011, %10011011
  524 D1:E65E BA 9E B9 BB 
              A9 AB 9A AA 	.db %10111010, %10011110, %10111001, %10111011, %10101001, %10101011, %10011010, %10101010
  525 D1:E666 9A 69 66 96 
              A8 -  -  -  	.db %10011010, %01101001, %01100110, %10010110, %10101000
  526 D1:E66B -  -  -  -  
  527 D1:E66B -  -  -  -  
  528 D1:E66B -  -  -  -  GroundDirtFull:
  529 D1:E66B 24 -  -  -  	.db %00100100
  530 D1:E66C 10 10 -  -  	.db 16, 16
  531 D1:E66E 15 00 -  -  	.db %00010101, %00000000
  532 D1:E670 -  -  -  -  
  533 D1:E670 04 00 00 00 
              04 00 00 00 	.db %00000100, %00000000, %00000000, %00000000, %00000100, %00000000, %00000000, %00000000
  534 D1:E678 AA AA 40 4A 
              21 12 10 24 	.db %10101010, %10101010, %01000000, %01001010, %00100001, %00010010, %00010000, %00100100
  535 D1:E680 01 01 00 04 
              44 2A A8 10 	.db %00000001, %00000001, %00000000, %00000100, %01000100, %00101010, %10101000, %00010000
  536 D1:E688 10 A5 0A 80 
              04 00 00 A1 	.db %00010000, %10100101, %00001010, %10000000, %00000100, %00000000, %00000000, %10100001
  537 D1:E690 84 40 00 61 
              10 10 00 10 	.db %10000100, %01000000, %00000000, %01100001, %00010000, %00010000, %00000000, %00010000
  538 D1:E698 0A AA 94 00 
              29 10 12 84 	.db %00001010, %10101010, %10010100, %00000000, %00101001, %00010000, %00010010, %10000100
  539 D1:E6A0 10 00 42 84 
              01 29 00 80 	.db %00010000, %00000000, %01000010, %10000100, %00000001, %00101001, %00000000, %10000000
  540 D1:E6A8 04 A1 40 8A 
              A0 00 00 00 	.db %00000100, %10100001, %01000000, %10001010, %10100000, %00000000, %00000000, %00000000
  541 D1:E6B0 -  -  -  -  
  542 D1:E6B0 -  -  -  -  
  543 D1:E6B0 -  -  -  -  GroundDirtMound:
  544 D1:E6B0 20 -  -  -  	.db %00100000
  545 D1:E6B1 10 0C -  -  	.db 16, 12
  546 D1:E6B3 0F F0 3F FC 
              FF FF FF FF 	.db %00001111, %11110000, %00111111, %11111100, %11111111, %11111111, %11111111, %11111111
  547 D1:E6BB FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  548 D1:E6C3 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  549 D1:E6CB -  -  -  -  
  550 D1:E6CB 01 50 -  -  	.db %00000001, %01010000
  551 D1:E6CD -  -  -  -  
  552 D1:E6CD 00 00 05 55 
              50 05 56 59 	.db %00000000, %00000000, %00000101, %01010101, %01010000, %00000101, %01010110, %01011001
  553 D1:E6D5 50 55 96 5A 
              55 55 9A 56 	.db %01010000, %01010101, %10010110, %01011010, %01010101, %01010101, %10011010, %01010110
  554 D1:E6DD 56 A5 54 00 
              01 59 55 65 	.db %01010110, %10100101, %01010100, %00000000, %00000001, %01011001, %01010101, %01100101
  555 D1:E6E5 50 00 15 69 
              55 15 59 59 	.db %01010000, %00000000, %00010101, %01101001, %01010101, %00010101, %01011001, %01011001
  556 D1:E6ED 65 56 50 05 
              66 55 41 41 	.db %01100101, %01010110, %01010000, %00000101, %01100110, %01010101, %01000001, %01000001
  557 D1:E6F5 A6 65 95 55 
              95 -  -  -  	.db %10100110, %01100101, %10010101, %01010101, %10010101
  558 D1:E6FA -  -  -  -  
  559 D1:E6FA -  -  -  -  
  560 D1:E6FA -  -  -  -  Tree_2:
  561 D1:E6FA 10 -  -  -  	.db %00010000
  562 D1:E6FB 1A 10 -  -  	.db 26, 16
  563 D1:E6FD FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  564 D1:E705 FF FF FF FF 
              FF 3F FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  565 D1:E70D CF FF FF F3 
              FF FF FC FF 	.db %11001111, %11111111, %11111111, %11110011, %11111111, %11111111, %11111100, %11111111
  566 D1:E715 FF FF 3F FF 
              FF CF FF FF 	.db %11111111, %11111111, %00111111, %11111111, %11111111, %11001111, %11111111, %11111111
  567 D1:E71D FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  568 D1:E725 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  569 D1:E72D FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  570 D1:E731 -  -  -  -  
  571 D1:E731 01 -  -  -  	.db %00000001
  572 D1:E732 -  -  -  -  
  573 D1:E732 01 12 40 80 
              4C DD 30 33 	.db %00000001, %00010010, %01000000, %10000000, %01001100, %11011101, %00110000, %00110011
  574 D1:E73A 27 CC 02 51 
              E4 02 59 D9 	.db %00100111, %11001100, %00000010, %01010001, %11100100, %00000010, %01011001, %11011001
  575 D1:E742 08 69 D9 01 
              69 9B 07 69 	.db %00001000, %01101001, %11011001, %00000001, %01101001, %10011011, %00000111, %01101001
  576 D1:E74A 1E 03 70 3E 
              03 D2 3E 00 	.db %00011110, %00000011, %01110000, %00111110, %00000011, %11010010, %00111110, %00000000
  577 D1:E752 A5 5C 80 F9 
              75 60 1C 6D 	.db %10100101, %01011100, %10000000, %11111001, %01110101, %01100000, %00011100, %01101101
  578 D1:E75A 18 01 1B 86 
              02 46 69 41 	.db %00011000, %00000001, %00011011, %10000110, %00000010, %01000110, %01101001, %01000001
  579 D1:E762 91 82 40 -  	.db %10010001, %10000010, %01000000
  580 D1:E765 -  -  -  -  
  581 D1:E765 -  -  -  -  
  582 D1:E765 -  -  -  -  Tree_4:
  583 D1:E765 24 -  -  -  	.db %00100100
  584 D1:E766 1A 10 -  -  	.db 26, 16
  585 D1:E768 01 20 -  -  	.db %00000001, %00100000
  586 D1:E76A -  -  -  -  
  587 D1:E76A 14 45 40 15 
              54 25 61 44 	.db %00010100, %01000101, %01000000, %00010101, %01010100, %00100101, %01100001, %01000100
  588 D1:E772 14 05 55 00 
              41 11 01 45 	.db %00010100, %00000101, %01010101, %00000000, %01000001, %00010001, %00000001, %01000101
  589 D1:E77A 50 54 24 21 
              10 00 95 05 	.db %01010000, %01010100, %00100100, %00100001, %00010000, %00000000, %10010101, %00000101
  590 D1:E782 41 41 11 00 
              09 10 94 15 	.db %01000001, %01000001, %00010001, %00000000, %00001001, %00010000, %10010100, %00010101
  591 D1:E78A 11 11 00 95 
              09 49 45 10 	.db %00010001, %00010001, %00000000, %10010101, %00001001, %01001001, %01000101, %00010000
  592 D1:E792 01 09 50 94 
              95 51 00 50 	.db %00000001, %00001001, %01010000, %10010100, %10010101, %01010001, %00000000, %01010000
  593 D1:E79A 95 09 49 45 
              40 45 09 40 	.db %10010101, %00001001, %01001001, %01000101, %01000000, %01000101, %00001001, %01000000
  594 D1:E7A2 90 95 54 01 
              50 A4 05 05 	.db %10010000, %10010101, %01010100, %00000001, %01010000, %10100100, %00000101, %00000101
  595 D1:E7AA 54 44 45 0A 
              42 50 55 00 	.db %01010100, %01000100, %01000101, %00001010, %01000010, %01010000, %01010101, %00000000
  596 D1:E7B2 10 54 14 95 
              41 02 04 11 	.db %00010000, %01010100, %00010100, %10010101, %01000001, %00000010, %00000100, %00010001
  597 D1:E7BA 52 49 51 00 
              20 51 11 10 	.db %01010010, %01001001, %01010001, %00000000, %00100000, %01010001, %00010001, %00010000
  598 D1:E7C2 91 50 A5 05 
              11 12 15 54 	.db %10010001, %01010000, %10100101, %00000101, %00010001, %00010010, %00010101, %01010100
  599 D1:E7CA 09 54 04 51 
              01 54 40 25 	.db %00001001, %01010100, %00000100, %01010001, %00000001, %01010100, %01000000, %00100101
  600 D1:E7D2 -  -  -  -  
  601 D1:E7D2 -  -  -  -  
  602 D1:E7D2 -  -  -  -  Tree_7:
  603 D1:E7D2 24 -  -  -  	.db %00100100
  604 D1:E7D3 1A 10 -  -  	.db 26, 16
  605 D1:E7D5 10 23 -  -  	.db %00010000, %00100011
  606 D1:E7D7 -  -  -  -  
  607 D1:E7D7 10 05 08 28 
              85 28 81 62 	.db %00010000, %00000101, %00001000, %00101000, %10000101, %00101000, %10000001, %01100010
  608 D1:E7DF 5A 08 88 5C 
              BA 05 81 60 	.db %01011010, %00001000, %10001000, %01011100, %10111010, %00000101, %10000001, %01100000
  609 D1:E7E7 88 95 CA B1 
              58 06 A0 49 	.db %10001000, %10010101, %11001010, %10110001, %01011000, %00000110, %10100000, %01001001
  610 D1:E7EF 62 89 51 68 
              48 60 16 2A 	.db %01100010, %10001001, %01010001, %01101000, %01001000, %01100000, %00010110, %00101010
  611 D1:E7F7 54 15 80 87 
              85 EA 96 00 	.db %01010100, %00010101, %10000000, %10000111, %10000101, %11101010, %10010110, %00000000
  612 D1:E7FF 58 82 29 72 
              A1 C0 05 68 	.db %01011000, %10000010, %00101001, %01110010, %10100001, %11000000, %00000101, %01101000
  613 D1:E807 2A 9E 22 1E 
              18 56 22 A5 	.db %00101010, %10011110, %00100010, %00011110, %00011000, %01010110, %00100010, %10100101
  614 D1:E80F 67 25 80 01 
              62 A9 55 72 	.db %01100111, %00100101, %10000000, %00000001, %01100010, %10101001, %01010101, %01110010
  615 D1:E817 5A 06 15 8A 
              56 95 97 81 	.db %01011010, %00000110, %00010101, %10001010, %01010110, %10010101, %10010111, %10000001
  616 D1:E81F 00 51 25 A0 
              59 E5 00 15 	.db %00000000, %01010001, %00100101, %10100000, %01011001, %11100101, %00000000, %00010101
  617 D1:E827 D2 02 A1 58 
              50 41 60 89 	.db %11010010, %00000010, %10100001, %01011000, %01010000, %01000001, %01100000, %10001001
  618 D1:E82F 28 97 96 10 
              16 08 A2 89 	.db %00101000, %10010111, %10010110, %00010000, %00010110, %00001000, %10100010, %10001001
  619 D1:E837 7B 81 81 62 
              08 22 94 20 	.db %01111011, %10000001, %10000001, %01100010, %00001000, %00100010, %10010100, %00100000
  620 D1:E83F -  -  -  -  
  621 D1:E83F -  -  -  -  
  622 D1:E83F -  -  -  -  Tree_9:
  623 D1:E83F 24 -  -  -  	.db %00100100
  624 D1:E840 1A 10 -  -  	.db 26, 16
  625 D1:E842 20 31 -  -  	.db %00100000, %00110001
  626 D1:E844 -  -  -  -  
  627 D1:E844 14 95 0A A8 
              A8 35 B3 49 	.db %00010100, %10010101, %00001010, %10101000, %10101000, %00110101, %10110011, %01001001
  628 D1:E84C D2 28 A8 8C 
              58 A0 56 EA 	.db %11010010, %00101000, %10101000, %10001100, %01011000, %10100000, %01010110, %11101010
  629 D1:E854 AA C8 CD 82 
              17 B8 AA AC 	.db %10101010, %11001000, %11001101, %10000010, %00010111, %10111000, %10101010, %10101100
  630 D1:E85C 83 5B 25 6E 
              CA A8 23 35 	.db %10000011, %01011011, %00100101, %01101110, %11001010, %10101000, %00100011, %00110101
  631 D1:E864 88 68 2C 8A 
              A3 8D 60 C6 	.db %10001000, %01101000, %00101100, %10001010, %10100011, %10001101, %01100000, %11000110
  632 D1:E86C C2 7A AB 0B 
              5A 0B 34 25 	.db %11000010, %01111010, %10101011, %00001011, %01011010, %00001011, %00110100, %00100101
  633 D1:E874 AA B0 85 0A 
              23 79 52 AA 	.db %10101010, %10110000, %10000101, %00001010, %00100011, %01111001, %01010010, %10101010
  634 D1:E87C 21 63 BE 1E 
              21 68 AA 14 	.db %00100001, %01100011, %10111110, %00011110, %00100001, %01101000, %10101010, %00010100
  635 D1:E884 00 71 20 A5 
              EA B5 08 55 	.db %00000000, %01110001, %00100000, %10100101, %11101010, %10110101, %00001000, %01010101
  636 D1:E88C 80 88 16 2B 
              68 34 5E 20 	.db %10000000, %10001000, %00010110, %00101011, %01101000, %00110100, %01011110, %00100000
  637 D1:E894 AB 48 AA 8D 
              CD A4 22 A2 	.db %10101011, %01001000, %10101010, %10001101, %11001101, %10100100, %00100010, %10100010
  638 D1:E89C 8A 0F 5E D7 
              96 2A 28 88 	.db %10001010, %00001111, %01011110, %11010111, %10010110, %00101010, %00101000, %10001000
  639 D1:E8A4 D7 81 79 42 
              AA A8 8D 63 	.db %11010111, %10000001, %01111001, %01000010, %10101010, %10101000, %10001101, %01100011
  640 D1:E8AC -  -  -  -  
  641 D1:E8AC -  -  -  -  
  642 D1:E8AC -  -  -  -  Tree_6:
  643 D1:E8AC 24 -  -  -  	.db %00100100
  644 D1:E8AD 1A 10 -  -  	.db 26, 16
  645 D1:E8AF 01 23 -  -  	.db %00000001, %00100011
  646 D1:E8B1 -  -  -  -  
  647 D1:E8B1 06 50 5A A5 
              80 A9 98 15 	.db %00000110, %01010000, %01011010, %10100101, %10000000, %10101001, %10011000, %00010101
  648 D1:E8B9 0A 9A 49 29 
              9B 49 50 99 	.db %00001010, %10011010, %01001001, %00101001, %10011011, %01001001, %01010000, %10011001
  649 D1:E8C1 61 83 50 85 
              59 43 66 48 	.db %01100001, %10000011, %01010000, %10000101, %01011001, %01000011, %01100110, %01001000
  650 D1:E8C9 A4 02 15 54 
              2A 69 96 83 	.db %10100100, %00000010, %00010101, %01010100, %00101010, %01101001, %10010110, %10000011
  651 D1:E8D1 80 45 00 9A 
              A9 A4 39 41 	.db %10000000, %01000101, %00000000, %10011010, %10101001, %10100100, %00111001, %01000001
  652 D1:E8D9 41 0B 69 99 
              42 A4 94 90 	.db %01000001, %00001011, %01101001, %10011001, %01000010, %10100100, %10010100, %10010000
  653 D1:E8E1 06 9A 58 19 
              55 05 04 A6 	.db %00000110, %10011010, %01011000, %00011001, %01010101, %00000101, %00000100, %10100110
  654 D1:E8E9 66 43 54 42 
              A5 4D A6 55 	.db %01100110, %01000011, %01010100, %01000010, %10100101, %01001101, %10100110, %01010101
  655 D1:E8F1 37 50 95 65 
              69 89 92 75 	.db %00110111, %01010000, %10010101, %01100101, %01101001, %10001001, %10010010, %01110101
  656 D1:E8F9 29 69 96 54 
              DA 04 55 54 	.db %00101001, %01101001, %10010110, %01010100, %11011010, %00000100, %01010101, %01010100
  657 D1:E901 98 66 4D 10 
              05 59 05 96 	.db %10011000, %01100110, %01001101, %00010000, %00000101, %01011001, %00000101, %10010110
  658 D1:E909 68 29 0A 41 
              42 69 96 50 	.db %01101000, %00101001, %00001010, %01000001, %01000010, %01101001, %10010110, %01010000
  659 D1:E911 D6 64 94 25 
              56 65 42 EA 	.db %11010110, %01100100, %10010100, %00100101, %01010110, %01100101, %01000010, %11101010
  660 D1:E919 -  -  -  -  
  661 D1:E919 -  -  -  -  
  662 D1:E919 -  -  -  -  Tree_3:
  663 D1:E919 24 -  -  -  	.db %00100100
  664 D1:E91A 1A 10 -  -  	.db 26, 16
  665 D1:E91C 10 20 -  -  	.db %00010000, %00100000
  666 D1:E91E -  -  -  -  
  667 D1:E91E 05 11 05 00 
              05 80 01 45 	.db %00000101, %00010001, %00000101, %00000000, %00000101, %10000000, %00000001, %01000101
  668 D1:E926 11 48 45 51 
              40 11 45 10 	.db %00010001, %01001000, %01000101, %01010001, %01000000, %00010001, %01000101, %00010000
  669 D1:E92E 84 58 16 01 
              54 40 54 01 	.db %10000100, %01011000, %00010110, %00000001, %01010100, %01000000, %01010100, %00000001
  670 D1:E936 85 64 55 14 
              01 40 18 56 	.db %10000101, %01100100, %01010101, %00010100, %00000001, %01000000, %00011000, %01010110
  671 D1:E93E 04 55 50 56 
              41 85 60 51 	.db %00000100, %01010101, %01010000, %01010110, %01000001, %10000101, %01100000, %01010001
  672 D1:E946 51 05 60 14 
              56 05 55 10 	.db %01010001, %00000101, %01100000, %00010100, %01010110, %00000101, %01010101, %00010000
  673 D1:E94E 56 01 41 60 
              54 51 04 58 	.db %01010110, %00000001, %01000001, %01100000, %01010100, %01010001, %00000100, %01011000
  674 D1:E956 54 16 85 41 
              14 05 85 40 	.db %01010100, %00010110, %10000101, %01000001, %00010100, %00000101, %10000101, %01000000
  675 D1:E95E 58 45 10 50 
              58 50 01 64 	.db %01011000, %01000101, %00010000, %01010000, %01011000, %01010000, %00000001, %01100100
  676 D1:E966 41 10 05 95 
              05 05 44 10 	.db %01000001, %00010000, %00000101, %10010101, %00000101, %00000101, %01000100, %00010000
  677 D1:E96E 14 55 51 50 
              65 51 01 61 	.db %00010100, %01010101, %01010001, %01010000, %01100101, %01010001, %00000001, %01100001
  678 D1:E976 54 15 00 11 
              10 16 04 05 	.db %01010100, %00010101, %00000000, %00010001, %00010000, %00010110, %00000100, %00000101
  679 D1:E97E 61 01 15 41 
              60 00 56 00 	.db %01100001, %00000001, %00010101, %01000001, %01100000, %00000000, %01010110, %00000000
  680 D1:E986 -  -  -  -  
  681 D1:E986 -  -  -  -  
  682 D1:E986 -  -  -  -  Tree_0:
  683 D1:E986 10 -  -  -  	.db %00010000
  684 D1:E987 1A 10 -  -  	.db 26, 16
  685 D1:E989 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  686 D1:E991 FF FF FF FF 
              FF 3F FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  687 D1:E999 CF FF FF F3 
              FF FF FC FF 	.db %11001111, %11111111, %11111111, %11110011, %11111111, %11111111, %11111100, %11111111
  688 D1:E9A1 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  689 D1:E9A9 FF FF FF FC 
              FF FF FF 3F 	.db %11111111, %11111111, %11111111, %11111100, %11111111, %11111111, %11111111, %00111111
  690 D1:E9B1 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  691 D1:E9B9 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  692 D1:E9BD -  -  -  -  
  693 D1:E9BD 01 -  -  -  	.db %00000001
  694 D1:E9BE -  -  -  -  
  695 D1:E9BE 00 9A 4A 80 
              26 02 90 1A 	.db %00000000, %10011010, %01001010, %10000000, %00100110, %00000010, %10010000, %00011010
  696 D1:E9C6 40 A4 05 9A 
              71 08 AB 73 	.db %01000000, %10100100, %00000101, %10011010, %01110001, %00001000, %10101011, %01110011
  697 D1:E9CE 08 AB 74 09 
              5B 77 02 9A 	.db %00001000, %10101011, %01110100, %00001001, %01011011, %01110111, %00000010, %10011010
  698 D1:E9D6 75 00 B2 1D 
              00 BF 57 40 	.db %01110101, %00000000, %10110010, %00011101, %00000000, %10111111, %01010111, %01000000
  699 D1:E9DE 2B 56 10 2B 
              5F 18 01 9F 	.db %00101011, %01010110, %00010000, %00101011, %01011111, %00011000, %00000001, %10011111
  700 D1:E9E6 0C 00 23 83 
              01 22 E2 40 	.db %00001100, %00000000, %00100011, %10000011, %00000001, %00100010, %11100010, %01000000
  701 D1:E9EE 66 2A A0 -  	.db %01100110, %00101010, %10100000
  702 D1:E9F1 -  -  -  -  
  703 D1:E9F1 -  -  -  -  
  704 D1:E9F1 -  -  -  -  Tree_8:
  705 D1:E9F1 24 -  -  -  	.db %00100100
  706 D1:E9F2 1A 10 -  -  	.db 26, 16
  707 D1:E9F4 10 23 -  -  	.db %00010000, %00100011
  708 D1:E9F6 -  -  -  -  
  709 D1:E9F6 10 05 62 22 
              85 20 80 40 	.db %00010000, %00000101, %01100010, %00100010, %10000101, %00100000, %10000000, %01000000
  710 D1:E9FE 56 82 A0 52 
              2A 06 01 52 	.db %01010110, %10000010, %10100000, %01010010, %00101010, %00000110, %00000001, %01010010
  711 D1:EA06 28 25 E0 B8 
              60 21 18 8A 	.db %00101000, %00100101, %11100000, %10111000, %01100000, %00100001, %00011000, %10001010
  712 D1:EA0E 5E 22 08 12 
              15 8A A1 62 	.db %01011110, %00100010, %00001000, %00010010, %00010101, %10001010, %10100001, %01100010
  713 D1:EA16 80 04 21 57 
              0A 85 43 00 	.db %10000000, %00000100, %00100001, %01010111, %00001010, %10000101, %01000011, %00000000
  714 D1:EA1E 00 11 78 A9 
              17 80 60 02 	.db %00000000, %00010001, %01111000, %10101001, %00010111, %10000000, %01100000, %00000010
  715 D1:EA26 15 A0 89 7A 
              05 A0 08 57 	.db %00010101, %10100000, %10001001, %01111010, %00000101, %10100000, %00001000, %01010111
  716 D1:EA2E A2 00 80 15 
              05 84 57 0A 	.db %10100010, %00000000, %10000000, %00010101, %00000101, %10000100, %01010111, %00001010
  717 D1:EA36 A6 00 19 5A 
              95 5C 82 55 	.db %10100110, %00000000, %00011001, %01011010, %10010101, %01011100, %10000010, %01010101
  718 D1:EA3E 01 57 08 85 
              7A A5 14 15 	.db %00000001, %01010111, %00001000, %10000101, %01111010, %10100101, %00010100, %00010101
  719 D1:EA46 A2 AA 16 A0 
              61 41 68 22 	.db %10100010, %10101010, %00010110, %10100000, %01100001, %01000001, %01101000, %00100010
  720 D1:EA4E A1 56 96 08 
              16 06 22 21 	.db %10100001, %01010110, %10010110, %00001000, %00010110, %00000110, %00100010, %00100001
  721 D1:EA56 71 61 01 60 
              22 0A 56 1E 	.db %01110001, %01100001, %00000001, %01100000, %00100010, %00001010, %01010110, %00011110
  722 D1:EA5E -  -  -  -  
  723 D1:EA5E -  -  -  -  
  724 D1:EA5E -  -  -  -  Tree_10:
  725 D1:EA5E 24 -  -  -  	.db %00100100
  726 D1:EA5F 1A 10 -  -  	.db 26, 16
  727 D1:EA61 12 03 -  -  	.db %00010010, %00000011
  728 D1:EA63 -  -  -  -  
  729 D1:EA63 19 2A 77 FD 
              DD FA D7 9E 	.db %00011001, %00101010, %01110111, %11111101, %11011101, %11111010, %11010111, %10011110
  730 D1:EA6B 25 FF F7 DC 
              AC 65 2B 7F 	.db %00100101, %11111111, %11110111, %11011100, %10101100, %01100101, %00101011, %01111111
  731 D1:EA73 F7 5D D8 C2 
              94 BF 7F FC 	.db %11110111, %01011101, %11011000, %11000010, %10010100, %10111111, %01111111, %11111100
  732 D1:EA7B 5F 21 79 77 
              DF FF 2D D6 	.db %01011111, %00100001, %01111001, %01110111, %11011111, %11111111, %00101101, %11010110
  733 D1:EA83 31 A5 7D FF 
              DF DD 55 38 	.db %00110001, %10100101, %01111101, %11111111, %11011111, %11011101, %01010101, %00111000
  734 D1:EA8B D7 C7 7D F5 
              73 54 AD 77 	.db %11010111, %11000111, %01111101, %11110101, %01110011, %01010100, %10101101, %01110111
  735 D1:EA93 FF FF 75 5D 
              59 D7 73 F7 	.db %11111111, %11111111, %01110101, %01011101, %01011001, %11010111, %01110011, %11110111
  736 D1:EA9B 61 47 A6 B4 
              77 7F F6 1D 	.db %01100001, %01000111, %10100110, %10110100, %01110111, %01111111, %11110110, %00011101
  737 D1:EAA3 F9 60 05 D7 
              FF E8 7A 0A 	.db %11111001, %01100000, %00000101, %11010111, %11111111, %11101000, %01111010, %00001010
  738 D1:EAAB 35 2D 7F FD 
              A8 AA 95 18 	.db %00110101, %00101101, %01111111, %11111101, %10101000, %10101010, %10010101, %00011000
  739 D1:EAB3 1F FF CE A8 
              A1 96 95 FD 	.db %00011111, %11111111, %11001110, %10101000, %10100001, %10010110, %10010101, %11111101
  740 D1:EABB FD F2 12 6D 
              6B 5F FF DF 	.db %11111101, %11110010, %00010010, %01101101, %01101011, %01011111, %11111111, %11011111
  741 D1:EAC3 E1 52 8E B7 
              F7 DD 5E B1 	.db %11100001, %01010010, %10001110, %10110111, %11110111, %11011101, %01011110, %10110001
  742 D1:EACB -  -  -  -  
  743 D1:EACB -  -  -  -  
  744 D1:EACB -  -  -  -  Tree_1:
  745 D1:EACB 10 -  -  -  	.db %00010000
  746 D1:EACC 1A 10 -  -  	.db 26, 16
  747 D1:EACE FF FF FF FF 
              FF FF F3 FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11110011, %11111111
  748 D1:EAD6 FF FC FF FF 
              FF 3F FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  749 D1:EADE FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  750 D1:EAE6 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  751 D1:EAEE FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  752 D1:EAF6 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  753 D1:EAFE FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  754 D1:EB02 -  -  -  -  
  755 D1:EB02 01 -  -  -  	.db %00000001
  756 D1:EB03 -  -  -  -  
  757 D1:EB03 01 00 48 80 
              69 35 30 4A 	.db %00000001, %00000000, %01001000, %10000000, %01101001, %00110101, %00110000, %01001010
  758 D1:EB0B 27 20 48 C6 
              61 D5 C6 60 	.db %00100111, %00100000, %01001000, %11000110, %01100001, %11010101, %11000110, %01100000
  759 D1:EB13 E7 73 AC 29 
              DC E9 0B 55 	.db %11100111, %01110011, %10101100, %00101001, %11011100, %11101001, %00001011, %01010101
  760 D1:EB1B 5A 44 FE 58 
              80 2B 92 28 	.db %01011010, %01000100, %11111110, %01011000, %10000000, %00101011, %10010010, %00101000
  761 D1:EB23 0E C2 82 03 
              B0 74 C1 2D 	.db %00001110, %11000010, %10000010, %00000011, %10110000, %01110100, %11000001, %00101101
  762 D1:EB2B 5F 10 09 73 
              E4 0A 5C F2 	.db %01011111, %00010000, %00001001, %01110011, %11100100, %00001010, %01011100, %11110010
  763 D1:EB33 04 92 3C 80 	.db %00000100, %10010010, %00111100, %10000000
  764 D1:EB37 -  -  -  -  
  765 D1:EB37 -  -  -  -  
  766 D1:EB37 -  -  -  -  Tree_5:
  767 D1:EB37 24 -  -  -  	.db %00100100
  768 D1:EB38 1A 10 -  -  	.db 26, 16
  769 D1:EB3A 10 20 -  -  	.db %00010000, %00100000
  770 D1:EB3C -  -  -  -  
  771 D1:EB3C 11 10 15 00 
              05 40 01 15 	.db %00010001, %00010000, %00010101, %00000000, %00000101, %01000000, %00000001, %00010101
  772 D1:EB44 05 50 04 56 
              00 15 44 41 	.db %00000101, %01010000, %00000100, %01010110, %00000000, %00010101, %01000100, %01000001
  773 D1:EB4C 60 05 60 61 
              04 55 16 04 	.db %01100000, %00000101, %01100000, %01100001, %00000100, %01010101, %00010110, %00000100
  774 D1:EB54 50 06 11 41 
              60 60 05 81 	.db %01010000, %00000110, %00010001, %01000001, %01100000, %01100000, %00000101, %10000001
  775 D1:EB5C 45 44 56 08 
              00 50 10 54 	.db %01000101, %01000100, %01010110, %00001000, %00000000, %01010000, %00010000, %01010100
  776 D1:EB64 45 60 00 16 
              05 80 44 44 	.db %01000101, %01100000, %00000000, %00010110, %00000101, %10000000, %01000100, %01000100
  777 D1:EB6C 10 15 80 58 
              15 44 41 04 	.db %00010000, %00010101, %10000000, %01011000, %00010101, %01000100, %01000001, %00000100
  778 D1:EB74 58 05 01 55 
              46 01 54 00 	.db %01011000, %00000101, %00000001, %01010101, %01000110, %00000001, %01010100, %00000000
  779 D1:EB7C 10 15 54 58 
              45 81 01 45 	.db %00010000, %00010101, %01010100, %01011000, %01000101, %10000001, %00000001, %01000101
  780 D1:EB84 45 45 05 60 
              00 04 50 44 	.db %01000101, %01000101, %00000101, %01100000, %00000000, %00000100, %01010000, %01000100
  781 D1:EB8C 19 5A 04 40 
              45 40 51 95 	.db %00011001, %01011010, %00000100, %01000000, %01000101, %01000000, %01010001, %10010101
  782 D1:EB94 A0 16 10 45 
              11 01 58 04 	.db %10100000, %00010110, %00010000, %01000101, %00010001, %00000001, %01011000, %00000100
  783 D1:EB9C 68 14 51 10 
              14 00 15 80 	.db %01101000, %00010100, %01010001, %00010000, %00010100, %00000000, %00010101, %10000000
  784 D1:EBA4 -  -  -  -  
  785 D1:EBA4 -  -  -  -  
  786 D1:EBA4 -  -  -  -  Tree_11:
  787 D1:EBA4 24 -  -  -  	.db %00100100
  788 D1:EBA5 1A 10 -  -  	.db 26, 16
  789 D1:EBA7 20 13 -  -  	.db %00100000, %00010011
  790 D1:EBA9 -  -  -  -  
  791 D1:EBA9 10 95 33 CF 
              30 C5 C3 42 	.db %00010000, %10010101, %00110011, %11001111, %00110000, %11000101, %11000011, %01000010
  792 D1:EBB1 43 F3 F3 FF 
              58 37 97 FC 	.db %01000011, %11110011, %11110011, %11111111, %01011000, %00110111, %10010111, %11111100
  793 D1:EBB9 F3 6F 35 B3 
              E5 7F FC C6 	.db %11110011, %01101111, %00110101, %10110011, %11100101, %01111111, %11111100, %11000110
  794 D1:EBC1 3F 6E 3F 55 
              FF F9 4C D5 	.db %00111111, %01101110, %00111111, %01010101, %11111111, %11111001, %01001100, %11010101
  795 D1:EBC9 30 B7 97 FE 
              50 CD 6F C9 	.db %00110000, %10110111, %10010111, %11111110, %01010000, %11001101, %01101111, %11001001
  796 D1:EBD1 48 F3 96 C3 
              58 C8 54 CF 	.db %01001000, %11110011, %10010110, %11000011, %01011000, %11001000, %01010100, %11001111
  797 D1:EBD9 C5 6C CE 3C 
              15 CC F1 5B 	.db %11000101, %01101100, %11001110, %00111100, %00010101, %11001100, %11110001, %01011011
  798 D1:EBE1 FC C3 05 50 
              CC 56 CE FC 	.db %11111100, %11000011, %00000101, %01010000, %11001100, %01010110, %11001110, %11111100
  799 D1:EBE9 DB 59 43 DA 
              FF E8 CE 5C 	.db %11011011, %01011001, %01000011, %11011010, %11111111, %11101000, %11001110, %01011100
  800 D1:EBF1 94 31 FF FF 
              94 F5 C1 43 	.db %10010100, %00110001, %11111111, %11111111, %10010100, %11110101, %11000001, %01000011
  801 D1:EBF9 3F FF F9 73 
              11 25 33 CF 	.db %00111111, %11111111, %11111001, %01110011, %00010001, %00100101, %00110011, %11001111
  802 D1:EC01 FC A5 3C 10 
              50 FF CC CE 	.db %11111100, %10100101, %00111100, %00010000, %01010000, %11111111, %11001100, %11001110
  803 D1:EC09 5C C9 69 7F 
              33 F0 CD 4F 	.db %01011100, %11001001, %01101001, %01111111, %00110011, %11110000, %11001101, %01001111
  804 D1:EC11 -  -  -  -  
  805 D1:EC11 -  -  -  -  
  806 D1:EC11 -  -  -  -  Branches_1:
  807 D1:EC11 20 -  -  -  	.db %00100000
  808 D1:EC12 12 0E -  -  	.db 18, 14
  809 D1:EC14 3F 00 3F FC 
              0F FF F3 FF 	.db %00111111, %00000000, %00111111, %11111100, %00001111, %11111111, %11110011, %11111111
  810 D1:EC1C FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  811 D1:EC24 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  812 D1:EC2C F3 FF FC FF 
              FC 3C FC 00 	.db %11110011, %11111111, %11111100, %11111111, %11111100, %00111100, %11111100, %00000000
  813 D1:EC34 -  -  -  -  
  814 D1:EC34 01 23 -  -  	.db %00000001, %00100011
  815 D1:EC36 -  -  -  -  
  816 D1:EC36 00 00 05 00 
              05 55 55 00 	.db %00000000, %00000000, %00000101, %00000000, %00000101, %01010101, %01010101, %00000000
  817 D1:EC3E 00 50 15 44 
              05 45 52 94 	.db %00000000, %01010000, %00010101, %01000100, %00000101, %01000101, %01010010, %10010100
  818 D1:EC46 40 4A AA 95 
              84 0A AE AB 	.db %01000000, %01001010, %10101010, %10010101, %10000100, %00001010, %10101110, %10101011
  819 D1:EC4E F5 50 FF FF 
              EA A0 02 AA 	.db %11110101, %01010000, %11111111, %11111111, %11101010, %10100000, %00000010, %10101010
  820 D1:EC56 A6 54 00 A1 
              15 40 14 00 	.db %10100110, %01010100, %00000000, %10100001, %00010101, %01000000, %00010100, %00000000
  821 D1:EC5E 05 45 44 01 
              45 50 00 00 	.db %00000101, %01000101, %01000100, %00000001, %01000101, %01010000, %00000000, %00000000
  822 D1:EC66 00 00 00 00 
              00 00 -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  823 D1:EC6C -  -  -  -  
  824 D1:EC6C -  -  -  -  
  825 D1:EC6C -  -  -  -  Vine2:
  826 D1:EC6C 10 -  -  -  	.db %00010000
  827 D1:EC6D 0B 10 -  -  	.db 11, 16
  828 D1:EC6F 00 60 1C 07 
              89 C3 F8 2E 	.db %00000000, %01100000, %00011100, %00000111, %10001001, %11000011, %11111000, %00101110
  829 D1:EC77 01 C0 7E CE 
              DF 80 70 0E 	.db %00000001, %11000000, %01111110, %11001110, %11011111, %10000000, %01110000, %00001110
  830 D1:EC7F 81 F8 3B 3F 
              06 E0 -  -  	.db %10000001, %11111000, %00111011, %00111111, %00000110, %11100000
  831 D1:EC85 -  -  -  -  
  832 D1:EC85 45 -  -  -  	.db %01000101
  833 D1:EC86 -  -  -  -  
  834 D1:EC86 01 88 33 27 
              8F 01 B9 EF 	.db %00000001, %10001000, %00110011, %00100111, %10001111, %00000001, %10111001, %11101111
  835 D1:EC8E 04 60 -  -  	.db %00000100, %01100000
  836 D1:EC90 -  -  -  -  
  837 D1:EC90 -  -  -  -  
  838 D1:EC90 -  -  -  -  VineVertical:
  839 D1:EC90 10 -  -  -  	.db %00010000
  840 D1:EC91 0A 12 -  -  	.db 10, 18
  841 D1:EC93 0E 03 80 E0 
              3B 0F DB F7 	.db %00001110, %00000011, %10000000, %11100000, %00111011, %00001111, %11011011, %11110111
  842 D1:EC9B E9 F0 1C 07 
              0F D3 7E 1D 	.db %11101001, %11110000, %00011100, %00000111, %00001111, %11010011, %01111110, %00011101
  843 D1:ECA3 07 05 C3 F0 
              5C 07 00 -  	.db %00000111, %00000101, %11000011, %11110000, %01011100, %00000111, %00000000
  844 D1:ECAA -  -  -  -  
  845 D1:ECAA 45 -  -  -  	.db %01000101
  846 D1:ECAB -  -  -  -  
  847 D1:ECAB 2D 9D F0 F0 
              E3 2C 18 F9 	.db %00101101, %10011101, %11110000, %11110000, %11100011, %00101100, %00011000, %11111001
  848 D1:ECB3 B1 0C C8 -  	.db %10110001, %00001100, %11001000
  849 D1:ECB6 -  -  -  -  
  850 D1:ECB6 -  -  -  -  
  851 D1:ECB6 -  -  -  -  Vine4:
  852 D1:ECB6 10 -  -  -  	.db %00010000
  853 D1:ECB7 13 12 -  -  	.db 19, 18
  854 D1:ECB9 00 18 E0 03 
              FC 00 0F 80 	.db %00000000, %00011000, %11100000, %00000011, %11111100, %00000000, %00001111, %10000000
  855 D1:ECC1 03 C0 20 F0 
              06 3F 80 FF 	.db %00000011, %11000000, %00100000, %11110000, %00000110, %00111111, %10000000, %11111111
  856 D1:ECC9 70 07 C0 01 
              F0 00 7C 00 	.db %01110000, %00000111, %11000000, %00000001, %11110000, %00000000, %01111100, %00000000
  857 D1:ECD1 6F 80 0F 98 
              00 E7 00 1C 	.db %01101111, %10000000, %00001111, %10011000, %00000000, %11100111, %00000000, %00011100
  858 D1:ECD9 60 07 80 01 
              E0 00 78 00 	.db %01100000, %00000111, %10000000, %00000001, %11100000, %00000000, %01111000, %00000000
  859 D1:ECE1 1E 00 00 -  	.db %00011110, %00000000, %00000000
  860 D1:ECE4 -  -  -  -  
  861 D1:ECE4 45 -  -  -  	.db %01000101
  862 D1:ECE5 -  -  -  -  
  863 D1:ECE5 08 3A D4 61 
              F0 3E 52 94 	.db %00001000, %00111010, %11010100, %01100001, %11110000, %00111110, %01010010, %10010100
  864 D1:ECED 78 F3 DE E6 
              66 -  -  -  	.db %01111000, %11110011, %11011110, %11100110, %01100110
  865 D1:ECF2 -  -  -  -  
  866 D1:ECF2 -  -  -  -  
  867 D1:ECF2 -  -  -  -  Vine5:
  868 D1:ECF2 10 -  -  -  	.db %00010000
  869 D1:ECF3 13 10 -  -  	.db 19, 16
  870 D1:ECF5 00 00 40 00 
              0C 00 C3 80 	.db %00000000, %00000000, %01000000, %00000000, %00001100, %00000000, %11000011, %10000000
  871 D1:ECFD 1D F0 00 FC 
              00 3F 0C 1F 	.db %00011101, %11110000, %00000000, %11111100, %00000000, %00111111, %00001100, %00011111
  872 D1:ED05 C1 CF F0 1B 
              FF 01 FC 73 	.db %11000001, %11001111, %11110000, %00011011, %11111111, %00000001, %11111100, %01110011
  873 D1:ED0D FE 0C 7F E0 
              0F E6 00 80 	.db %11111110, %00001100, %01111111, %11100000, %00001111, %11100110, %00000000, %10000000
  874 D1:ED15 C0 30 00 06 
              00 00 -  -  	.db %11000000, %00110000, %00000000, %00000110, %00000000, %00000000
  875 D1:ED1B -  -  -  -  
  876 D1:ED1B 54 -  -  -  	.db %01010100
  877 D1:ED1C -  -  -  -  
  878 D1:ED1C 1C F8 E3 8F 
              47 E0 F0 0E 	.db %00011100, %11111000, %11100011, %10001111, %01000111, %11100000, %11110000, %00001110
  879 D1:ED24 83 E8 6A 00 
              00 00 -  -  	.db %10000011, %11101000, %01101010, %00000000, %00000000, %00000000
  880 D1:ED2A -  -  -  -  
  881 D1:ED2A -  -  -  -  
  882 D1:ED2A -  -  -  -  Vine6:
  883 D1:ED2A 10 -  -  -  	.db %00010000
  884 D1:ED2B 15 0A -  -  	.db 21, 10
  885 D1:ED2D 30 08 01 80 
              E0 08 06 01 	.db %00110000, %00001000, %00000001, %10000000, %11100000, %00001000, %00000110, %00000001
  886 D1:ED35 C1 E1 FF FF 
              FF FF FF FF 	.db %11000001, %11100001, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  887 D1:ED3D FF FF C4 08 
              06 60 E0 62 	.db %11111111, %11111111, %11000100, %00001000, %00000110, %01100000, %11100000, %01100010
  888 D1:ED45 03 03 00 -  	.db %00000011, %00000011, %00000000
  889 D1:ED48 -  -  -  -  
  890 D1:ED48 45 -  -  -  	.db %01000101
  891 D1:ED49 -  -  -  -  
  892 D1:ED49 00 00 00 00 
              00 0E 5B AB 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001110, %01011011, %10101011
  893 D1:ED51 FF FF FF FF 
              F8 -  -  -  	.db %11111111, %11111111, %11111111, %11111111, %11111000
  894 D1:ED56 -  -  -  -  
  895 D1:ED56 -  -  -  -  
  896 D1:ED56 -  -  -  -  Vine7:
  897 D1:ED56 10 -  -  -  	.db %00010000
  898 D1:ED57 0F 0A -  -  	.db 15, 10
  899 D1:ED59 06 01 9C 03 
              B0 1F C0 F7 	.db %00000110, %00000001, %10011100, %00000011, %10110000, %00011111, %11000000, %11110111
  900 D1:ED61 E3 E7 FF 8F 
              FE 39 F4 60 	.db %11100011, %11100111, %11111111, %10001111, %11111110, %00111001, %11110100, %01100000
  901 D1:ED69 0E 00 1C -  	.db %00001110, %00000000, %00011100
  902 D1:ED6C -  -  -  -  
  903 D1:ED6C 45 -  -  -  	.db %01000101
  904 D1:ED6D -  -  -  -  
  905 D1:ED6D 01 83 03 E0 
              FC 1F FF FF 	.db %00000001, %10000011, %00000011, %11100000, %11111100, %00011111, %11111111, %11111111
  906 D1:ED75 FF C0 -  -  	.db %11111111, %11000000
  907 D1:ED77 -  -  -  -  
  908 D1:ED77 -  -  -  -  
  909 D1:ED77 -  -  -  -  Branches_0:
  910 D1:ED77 20 -  -  -  	.db %00100000
  911 D1:ED78 12 0E -  -  	.db 18, 14
  912 D1:ED7A CC 00 3F CF 
              0F FF F3 FF 	.db %11001100, %00000000, %00111111, %11001111, %00001111, %11111111, %11110011, %11111111
  913 D1:ED82 FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  914 D1:ED8A FF FF FF FF 
              3F FF CF FF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11001111, %11111111
  915 D1:ED92 F3 FF F0 FF 
              FC 3F 30 00 	.db %11110011, %11111111, %11110000, %11111111, %11111100, %00111111, %00110000, %00000000
  916 D1:ED9A -  -  -  -  
  917 D1:ED9A 01 23 -  -  	.db %00000001, %00100011
  918 D1:ED9C -  -  -  -  
  919 D1:ED9C 00 00 00 00 
              15 40 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00010101, %01000000, %00000000, %00000000
  920 D1:EDA4 40 51 45 40 
              04 00 00 10 	.db %01000000, %01010001, %01000101, %01000000, %00000100, %00000000, %00000000, %00010000
  921 D1:EDAC 05 45 5A 01 
              10 BA AA F5 	.db %00000101, %01000101, %01011010, %00000001, %00010000, %10111010, %10101010, %11110101
  922 D1:EDB4 41 0F FF FA 
              95 10 AA AA 	.db %01000001, %00001111, %11111111, %11111010, %10010101, %00010000, %10101010, %10101010
  923 D1:EDBC 55 04 55 51 
              44 00 00 05 	.db %01010101, %00000100, %01010101, %01010001, %01000100, %00000000, %00000000, %00000101
  924 D1:EDC4 40 40 00 50 
              14 05 40 00 	.db %01000000, %01000000, %00000000, %01010000, %00010100, %00000101, %01000000, %00000000
  925 D1:EDCC 00 00 00 -  	.db %00000000, %00000000, %00000000
  926 D1:EDCF -  -  -  -  
  927 D1:EDCF -  -  -  -  
  928 D1:EDCF -  -  -  -  Platforms_0:
  929 D1:EDCF 24 -  -  -  	.db %00100100
  930 D1:EDD0 14 09 -  -  	.db 20, 9
  931 D1:EDD2 9A 12 -  -  	.db %10011010, %00010010
  932 D1:EDD4 -  -  -  -  
  933 D1:EDD4 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  934 D1:EDDC 00 00 05 55 
              55 55 55 05 	.db %00000000, %00000000, %00000101, %01010101, %01010101, %01010101, %01010101, %00000101
  935 D1:EDE4 55 55 55 55 
              0A 55 5A A5 	.db %01010101, %01010101, %01010101, %01010101, %00001010, %01010101, %01011010, %10100101
  936 D1:EDEC 55 0B A5 AB 
              BA 5A 0E EA 	.db %01010101, %00001011, %10100101, %10101011, %10111010, %01011010, %00001110, %11101010
  937 D1:EDF4 EE EE AE 0B 
              BB BB BB BB 	.db %11101110, %11101110, %10101110, %00001011, %10111011, %10111011, %10111011, %10111011
  938 D1:EDFC 00 00 00 00 
              00 -  -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000
  939 D1:EE01 -  -  -  -  
  940 D1:EE01 -  -  -  -  
  941 D1:EE01 -  -  -  -  Platforms_1:
  942 D1:EE01 24 -  -  -  	.db %00100100
  943 D1:EE02 14 09 -  -  	.db 20, 9
  944 D1:EE04 9A 12 -  -  	.db %10011010, %00010010
  945 D1:EE06 -  -  -  -  
  946 D1:EE06 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  947 D1:EE0E 00 00 55 55 
              55 55 55 55 	.db %00000000, %00000000, %01010101, %01010101, %01010101, %01010101, %01010101, %01010101
  948 D1:EE16 55 55 55 55 
              A5 55 AA 55 	.db %01010101, %01010101, %01010101, %01010101, %10100101, %01010101, %10101010, %01010101
  949 D1:EE1E 5A BA 5A BB 
              A5 AA EE AE 	.db %01011010, %10111010, %01011010, %10111011, %10100101, %10101010, %11101110, %10101110
  950 D1:EE26 EE EA EE BB 
              BB BB BB BB 	.db %11101110, %11101010, %11101110, %10111011, %10111011, %10111011, %10111011, %10111011
  951 D1:EE2E 00 00 00 00 
              00 -  -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000
  952 D1:EE33 -  -  -  -  
  953 D1:EE33 -  -  -  -  
  954 D1:EE33 -  -  -  -  Platforms_2:
  955 D1:EE33 20 -  -  -  	.db %00100000
  956 D1:EE34 0E 0E -  -  	.db 14, 14
  957 D1:EE36 FF 01 FE 03 
              FC 07 F8 0F 	.db %11111111, %00000001, %11111110, %00000011, %11111100, %00000111, %11111000, %00001111
  958 D1:EE3E F0 1F E0 3F 
              C0 7F 00 FC 	.db %11110000, %00011111, %11100000, %00111111, %11000000, %01111111, %00000000, %11111100
  959 D1:EE46 01 F0 03 C0 
              07 00 0C 00 	.db %00000001, %11110000, %00000011, %11000000, %00000111, %00000000, %00001100, %00000000
  960 D1:EE4E 10 -  -  -  	.db %00010000
  961 D1:EE4F -  -  -  -  
  962 D1:EE4F 90 21 -  -  	.db %10010000, %00100001
  963 D1:EE51 -  -  -  -  
  964 D1:EE51 1A EC 1A EC 
              1A EC 1A EC 	.db %00011010, %11101100, %00011010, %11101100, %00011010, %11101100, %00011010, %11101100
  965 D1:EE59 1A EC 1A EC 
              1A EC 1A EC 	.db %00011010, %11101100, %00011010, %11101100, %00011010, %11101100, %00011010, %11101100
  966 D1:EE61 6B 86 B1 A1 
              84 -  -  -  	.db %01101011, %10000110, %10110001, %10100001, %10000100
  967 D1:EE66 -  -  -  -  
  968 D1:EE66 -  -  -  -  
  969 D1:EE66 -  -  -  -  Spikes_0:
  970 D1:EE66 20 -  -  -  	.db %00100000
  971 D1:EE67 18 09 -  -  	.db 24, 9
  972 D1:EE69 3C 3C 3C 3C 
              3C 3C 3C 3C 	.db %00111100, %00111100, %00111100, %00111100, %00111100, %00111100, %00111100, %00111100
  973 D1:EE71 3C 3C 3C 3C 
              FF FF FF FF 	.db %00111100, %00111100, %00111100, %00111100, %11111111, %11111111, %11111111, %11111111
  974 D1:EE79 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  975 D1:EE81 FF FF FF -  	.db %11111111, %11111111, %11111111
  976 D1:EE84 -  -  -  -  
  977 D1:EE84 96 70 -  -  	.db %10010110, %01110000
  978 D1:EE86 -  -  -  -  
  979 D1:EE86 00 00 00 18 
              18 18 18 18 	.db %00000000, %00000000, %00000000, %00011000, %00011000, %00011000, %00011000, %00011000
  980 D1:EE8E 18 18 18 18 
              05 A0 05 A0 	.db %00011000, %00011000, %00011000, %00011000, %00000101, %10100000, %00000101, %10100000
  981 D1:EE96 05 A0 05 A0 
              05 A0 05 A0 	.db %00000101, %10100000, %00000101, %10100000, %00000101, %10100000, %00000101, %10100000
  982 D1:EE9E 15 A8 15 A8 
              15 A8 15 A8 	.db %00010101, %10101000, %00010101, %10101000, %00010101, %10101000, %00010101, %10101000
  983 D1:EEA6 15 A8 15 A8 
              15 A8 15 A8 	.db %00010101, %10101000, %00010101, %10101000, %00010101, %10101000, %00010101, %10101000
  984 D1:EEAE 15 A8 -  -  	.db %00010101, %10101000
  985 D1:EEB0 -  -  -  -  
  986 D1:EEB0 -  -  -  -  
  987 D1:EEB0 -  -  -  -  GroundDirtDark:
  988 D1:EEB0 24 -  -  -  	.db %00100100
  989 D1:EEB1 10 0C -  -  	.db 16, 12
  990 D1:EEB3 01 50 -  -  	.db %00000001, %01010000
  991 D1:EEB5 -  -  -  -  
  992 D1:EEB5 00 00 00 00 
              00 00 00 04 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000100
  993 D1:EEBD 58 08 00 01 
              08 08 25 40 	.db %01011000, %00001000, %00000000, %00000001, %00001000, %00001000, %00100101, %01000000
  994 D1:EEC5 00 00 20 54 
              01 50 00 08 	.db %00000000, %00000000, %00100000, %01010100, %00000001, %01010000, %00000000, %00001000
  995 D1:EECD 00 14 00 08 
              20 00 00 00 	.db %00000000, %00010100, %00000000, %00001000, %00100000, %00000000, %00000000, %00000000
  996 D1:EED5 20 00 50 00 
              52 12 05 05 	.db %00100000, %00000000, %01010000, %00000000, %01010010, %00010010, %00000101, %00000101
  997 D1:EEDD 02 44 80 40 
              00 00 00 00 	.db %00000010, %01000100, %10000000, %01000000, %00000000, %00000000, %00000000, %00000000
  998 D1:EEE5 -  -  -  -  
  999 D1:EEE5 -  -  -  -  
 1000 D1:EEE5 -  -  -  -  GroundHumpDark:
 1001 D1:EEE5 20 -  -  -  	.db %00100000
 1002 D1:EEE6 10 0D -  -  	.db 16, 13
 1003 D1:EEE8 03 F0 0F FC 
              3F FC FF FF 	.db %00000011, %11110000, %00001111, %11111100, %00111111, %11111100, %11111111, %11111111
 1004 D1:EEF0 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1005 D1:EEF8 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1006 D1:EF00 FF FF -  -  	.db %11111111, %11111111
 1007 D1:EF02 -  -  -  -  
 1008 D1:EF02 10 50 -  -  	.db %00010000, %01010000
 1009 D1:EF04 -  -  -  -  
 1010 D1:EF04 00 00 55 40 
              01 55 54 05 	.db %00000000, %00000000, %01010101, %01000000, %00000001, %01010101, %01010100, %00000101
 1011 D1:EF0C 55 56 50 95 
              59 56 55 95 	.db %01010101, %01010110, %01010000, %10010101, %01011001, %01010110, %01010101, %10010101
 1012 D1:EF14 59 05 59 51 
              59 50 09 44 	.db %01011001, %00000101, %01011001, %01010001, %01011001, %01010000, %00001001, %01000100
 1013 D1:EF1C 05 55 55 56 
              55 56 55 56 	.db %00000101, %01010101, %01010101, %01010110, %01010101, %01010110, %01010101, %01010110
 1014 D1:EF24 95 49 55 45 
              94 18 15 11 	.db %10010101, %01001001, %01010101, %01000101, %10010100, %00011000, %00010101, %00010001
 1015 D1:EF2C 56 55 54 55 
              59 55 55 -  	.db %01010110, %01010101, %01010100, %01010101, %01011001, %01010101, %01010101
 1016 D1:EF33 -  -  -  -  
 1017 D1:EF33 -  -  -  -  
 1018 D1:EF33 -  -  -  -  Tree_16:
 1019 D1:EF33 08 -  -  -  	.db %00001000
 1020 D1:EF34 0A 10 -  -  	.db 10, 16
 1021 D1:EF36 3C 0F 03 C0 
              F0 3C 0F 0F 	.db %00111100, %00001111, %00000011, %11000000, %11110000, %00111100, %00001111, %00001111
 1022 D1:EF3E C0 F0 3C 0F 
              03 FC FC 3C 	.db %11000000, %11110000, %00111100, %00001111, %00000011, %11111100, %11111100, %00111100
 1023 D1:EF46 0F 03 C0 F0 	.db %00001111, %00000011, %11000000, %11110000
 1024 D1:EF4A -  -  -  -  
 1025 D1:EF4A 00 -  -  -  	.db %00000000
 1026 D1:EF4B -  -  -  -  
 1027 D1:EF4B -  -  -  -  
 1028 D1:EF4B -  -  -  -  
 1029 D1:EF4B -  -  -  -  Tree_17:
 1030 D1:EF4B 08 -  -  -  	.db %00001000
 1031 D1:EF4C 07 0E -  -  	.db 7, 14
 1032 D1:EF4E 0C 18 77 E1 
              C3 0F 9E 70 	.db %00001100, %00011000, %01110111, %11100001, %11000011, %00001111, %10011110, %01110000
 1033 D1:EF56 E3 C7 0C 18 
              00 -  -  -  	.db %11100011, %11000111, %00001100, %00011000, %00000000
 1034 D1:EF5B -  -  -  -  
 1035 D1:EF5B 00 -  -  -  	.db %00000000
 1036 D1:EF5C -  -  -  -  
 1037 D1:EF5C -  -  -  -  
 1038 D1:EF5C -  -  -  -  
 1039 D1:EF5C -  -  -  -  Tree_18:
 1040 D1:EF5C 08 -  -  -  	.db %00001000
 1041 D1:EF5D 07 0E -  -  	.db 7, 14
 1042 D1:EF5F 18 30 C7 83 
              06 0C 1C 1E 	.db %00011000, %00110000, %11000111, %10000011, %00000110, %00001100, %00011100, %00011110
 1043 D1:EF67 30 60 C1 83 
              00 -  -  -  	.db %00110000, %01100000, %11000001, %10000011, %00000000
 1044 D1:EF6C -  -  -  -  
 1045 D1:EF6C 00 -  -  -  	.db %00000000
 1046 D1:EF6D -  -  -  -  
 1047 D1:EF6D -  -  -  -  
 1048 D1:EF6D -  -  -  -  
 1049 D1:EF6D -  -  -  -  Clouds_0:
 1050 D1:EF6D 10 -  -  -  	.db %00010000
 1051 D1:EF6E 10 0A -  -  	.db 16, 10
 1052 D1:EF70 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1053 D1:EF78 FF FF FF FF 
              FF FF 3F FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111
 1054 D1:EF80 0F CC 03 00 	.db %00001111, %11001100, %00000011, %00000000
 1055 D1:EF84 -  -  -  -  
 1056 D1:EF84 67 -  -  -  	.db %01100111
 1057 D1:EF85 -  -  -  -  
 1058 D1:EF85 00 40 31 84 
              13 1C 0E 20 	.db %00000000, %01000000, %00110001, %10000100, %00010011, %00011100, %00001110, %00100000
 1059 D1:EF8D 00 00 E0 00 
              F0 77 F3 FF 	.db %00000000, %00000000, %11100000, %00000000, %11110000, %01110111, %11110011, %11111111
 1060 D1:EF95 FF -  -  -  	.db %11111111
 1061 D1:EF96 -  -  -  -  
 1062 D1:EF96 -  -  -  -  
 1063 D1:EF96 -  -  -  -  Clouds_1:
 1064 D1:EF96 10 -  -  -  	.db %00010000
 1065 D1:EF97 0C 0E -  -  	.db 12, 14
 1066 D1:EF99 03 F0 FF 3F 
              F3 FF FF FF 	.db %00000011, %11110000, %11111111, %00111111, %11110011, %11111111, %11111111, %11111111
 1067 D1:EFA1 FF 3F F0 FF 
              0F F0 FF 0F 	.db %11111111, %00111111, %11110000, %11111111, %00001111, %11110000, %11111111, %00001111
 1068 D1:EFA9 F0 3F 00 F0 
              03 -  -  -  	.db %11110000, %00111111, %00000000, %11110000, %00000011
 1069 D1:EFAE -  -  -  -  
 1070 D1:EFAE 76 -  -  -  	.db %01110110
 1071 D1:EFAF -  -  -  -  
 1072 D1:EFAF 3C 7C 3B 3E 
              47 F0 37 C5 	.db %00111100, %01111100, %00111011, %00111110, %01000111, %11110000, %00110111, %11000101
 1073 D1:EFB7 F6 73 B1 F0 
              70 40 -  -  	.db %11110110, %01110011, %10110001, %11110000, %01110000, %01000000
 1074 D1:EFBD -  -  -  -  
 1075 D1:EFBD -  -  -  -  
 1076 D1:EFBD -  -  -  -  Clouds_3:
 1077 D1:EFBD 10 -  -  -  	.db %00010000
 1078 D1:EFBE 10 0B -  -  	.db 16, 11
 1079 D1:EFC0 03 00 0F C0 
              3F C0 FF F3 	.db %00000011, %00000000, %00001111, %11000000, %00111111, %11000000, %11111111, %11110011
 1080 D1:EFC8 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1081 D1:EFD0 FF FF FF FF 
              FF FF -  -  	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1082 D1:EFD6 -  -  -  -  
 1083 D1:EFD6 76 -  -  -  	.db %01110110
 1084 D1:EFD7 -  -  -  -  
 1085 D1:EFD7 00 0C 07 80 
              FF 03 FF C6 	.db %00000000, %00001100, %00000111, %10000000, %11111111, %00000011, %11111111, %11000110
 1086 D1:EFDF 7F FF 3C FB 
              83 E7 FF FF 	.db %01111111, %11111111, %00111100, %11111011, %10000011, %11100111, %11111111, %11111111
 1087 D1:EFE7 FF FC -  -  	.db %11111111, %11111100
 1088 D1:EFE9 -  -  -  -  
 1089 D1:EFE9 -  -  -  -  
 1090 D1:EFE9 -  -  -  -  Clouds_4:
 1091 D1:EFE9 10 -  -  -  	.db %00010000
 1092 D1:EFEA 08 0A -  -  	.db 8, 10
 1093 D1:EFEC 03 0F 3F 3F 
              FF FF FF FF 	.db %00000011, %00001111, %00111111, %00111111, %11111111, %11111111, %11111111, %11111111
 1094 D1:EFF4 FF FF -  -  	.db %11111111, %11111111
 1095 D1:EFF6 -  -  -  -  
 1096 D1:EFF6 76 -  -  -  	.db %01110110
 1097 D1:EFF7 -  -  -  -  
 1098 D1:EFF7 00 11 C3 C7 
              C5 CE 4F CF 	.db %00000000, %00010001, %11000011, %11000111, %11000101, %11001110, %01001111, %11001111
 1099 D1:EFFF C0 -  -  -  	.db %11000000
 1100 D1:F000 -  -  -  -  
 1101 D1:F000 -  -  -  -  
 1102 D1:F000 -  -  -  -  Clouds_2:
 1103 D1:F000 14 -  -  -  	.db %00010100
 1104 D1:F001 10 10 -  -  	.db 16, 16
 1105 D1:F003 67 -  -  -  	.db %01100111
 1106 D1:F004 -  -  -  -  
 1107 D1:F004 00 00 00 00 
              00 08 40 0E 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001000, %01000000, %00001110
 1108 D1:F00C B0 C3 1F 80 
              00 00 00 00 	.db %10110000, %11000011, %00011111, %10000000, %00000000, %00000000, %00000000, %00000000
 1109 D1:F014 60 02 80 01 
              01 F0 20 1E 	.db %01100000, %00000010, %10000000, %00000001, %00000001, %11110000, %00100000, %00011110
 1110 D1:F01C 30 00 1F 08 
              01 F8 00 00 	.db %00110000, %00000000, %00011111, %00001000, %00000001, %11111000, %00000000, %00000000
 1111 D1:F024 -  -  -  -  
 1112 D1:F024 -  -  -  -  
 1113 D1:F024 -  -  -  -  FrogDefault:
 1114 D1:F024 40 -  -  -  	.db %01000000
 1115 D1:F025 19 13 -  -  	.db 25, 19
 1116 D1:F027 00 0F FE 00 
              1F FF 80 3F 	.db %00000000, %00001111, %11111110, %00000000, %00011111, %11111111, %10000000, %00111111
 1117 D1:F02F FF E0 3F FF 
              F0 3F FF F8 	.db %11111111, %11100000, %00111111, %11111111, %11110000, %00111111, %11111111, %11111000
 1118 D1:F037 7F FF FC 7F 
              FF FE FF FF 	.db %01111111, %11111111, %11111100, %01111111, %11111111, %11111110, %11111111, %11111111
 1119 D1:F03F FF 7F FF FF 
              FF FF FF BF 	.db %11111111, %01111111, %11111111, %11111111, %11111111, %11111111, %11111111, %10111111
 1120 D1:F047 FF FF DF FF 
              FF 8F FF FF 	.db %11111111, %11111111, %11011111, %11111111, %11111111, %10001111, %11111111, %11111111
 1121 D1:F04F 87 FF FF C3 
              FF FF F1 FF 	.db %10000111, %11111111, %11111111, %11000011, %11111111, %11111111, %11110001, %11111111
 1122 D1:F057 FF FC FF FF 
              FE 7F FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111110, %01111111, %11111111, %11111111
 1123 D1:F05F 1F FF FF 80 	.db %00011111, %11111111, %11111111, %10000000
 1124 D1:F063 -  -  -  -  
 1125 D1:F063 95 46 80 00 	.db %10010101, %01000110, %10000000, %00000000
 1126 D1:F067 -  -  -  -  
 1127 D1:F067 00 00 00 00 
              00 09 24 92 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001001, %00100100, %10010010
 1128 D1:F06F 48 00 02 4A 
              49 24 89 00 	.db %01001000, %00000000, %00000010, %01001010, %01001001, %00100100, %10001001, %00000000
 1129 D1:F077 02 4A 49 26 
              4A 44 80 09 	.db %00000010, %01001010, %01001001, %00100110, %01001010, %01000100, %10000000, %00001001
 1130 D1:F07F 49 14 93 25 
              24 40 00 94 	.db %01001001, %00010100, %10010011, %00100101, %00100100, %01000000, %00000000, %10010100
 1131 D1:F087 91 45 26 DA 
              48 80 09 29 	.db %10010001, %01000101, %00100110, %11011010, %01001000, %10000000, %00001001, %00101001
 1132 D1:F08F 14 92 49 24 
              89 20 00 4A 	.db %00010100, %10010010, %01001001, %00100100, %10001001, %00100000, %00000000, %01001010
 1133 D1:F097 48 A4 92 48 
              92 64 20 12 	.db %01001000, %10100100, %10010010, %01001000, %10010010, %01100100, %00100000, %00010010
 1134 D1:F09F 52 29 24 92 
              92 49 21 00 	.db %01010010, %00101001, %00100100, %10010010, %10010010, %01001001, %00100001, %00000000
 1135 D1:F0A7 02 52 49 24 
              A4 92 49 21 	.db %00000010, %01010010, %01001001, %00100100, %10100100, %10010010, %01001001, %00100001
 1136 D1:F0AF 20 12 92 48 
              C9 24 92 23 	.db %00100000, %00010010, %10010010, %01001000, %11001001, %00100100, %10010010, %00100011
 1137 D1:F0B7 08 00 12 92 
              49 19 24 91 	.db %00001000, %00000000, %00010010, %10010010, %01001001, %00011001, %00100100, %10010001
 1138 D1:F0BF 24 40 04 A4 
              92 46 49 21 	.db %00100100, %01000000, %00000100, %10100100, %10010010, %01000110, %01001001, %00100001
 1139 D1:F0C7 49 10 0A 29 
              24 8C 92 14 	.db %01001001, %00010000, %00001010, %00101001, %00100100, %10001100, %10010010, %00010100
 1140 D1:F0CF 92 20 12 8A 
              44 99 21 49 	.db %10010010, %00100000, %00010010, %10001010, %01000100, %10011001, %00100001, %01001001
 1141 D1:F0D7 22 40 04 94 
              92 48 C2 52 	.db %00100010, %01000000, %00000100, %10010100, %10010010, %01001000, %11000010, %01010010
 1142 D1:F0DF 25 22 00 25 
              14 92 48 82 	.db %00100101, %00100010, %00000000, %00100101, %00010100, %10010010, %01001000, %10000010
 1143 D1:F0E7 52 49 22 00 
              24 92 49 20 	.db %01010010, %01001001, %00100010, %00000000, %00100100, %10010010, %01001001, %00100000
 1144 D1:F0EF 02 49 24 90 
              00 00 00 00 	.db %00000010, %01001001, %00100100, %10010000, %00000000, %00000000, %00000000, %00000000
 1145 D1:F0F7 00 00 00 00 
              00 -  -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000
 1146 D1:F0FC -  -  -  -  
 1147 D1:F0FC -  -  -  -  
 1148 D1:F0FC -  -  -  -  FrogChargeLit:
 1149 D1:F0FC 20 -  -  -  	.db %00100000
 1150 D1:F0FD 19 12 -  -  	.db 25, 18
 1151 D1:F0FF 00 0F FE 00 
              1F FF 80 3F 	.db %00000000, %00001111, %11111110, %00000000, %00011111, %11111111, %10000000, %00111111
 1152 D1:F107 FF E0 3F FF 
              F0 3F FF F8 	.db %11111111, %11100000, %00111111, %11111111, %11110000, %00111111, %11111111, %11111000
 1153 D1:F10F 7F FF FC 7F 
              FF FE FF FF 	.db %01111111, %11111111, %11111100, %01111111, %11111111, %11111110, %11111111, %11111111
 1154 D1:F117 FF FF FF FF 
              FF FF FF BF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %10111111
 1155 D1:F11F FF FF DF FF 
              FF CF FF FF 	.db %11111111, %11111111, %11011111, %11111111, %11111111, %11001111, %11111111, %11111111
 1156 D1:F127 C7 FF FF E3 
              FF FF FD FF 	.db %11000111, %11111111, %11111111, %11100011, %11111111, %11111111, %11111101, %11111111
 1157 D1:F12F FF FE FF FF 
              FF 3F FF FF 	.db %11111111, %11111110, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
 1158 D1:F137 80 -  -  -  	.db %10000000
 1159 D1:F138 -  -  -  -  
 1160 D1:F138 98 46 -  -  	.db %10011000, %01000110
 1161 D1:F13A -  -  -  -  
 1162 D1:F13A 00 00 00 05 
              55 54 00 56 	.db %00000000, %00000000, %00000000, %00000101, %01010101, %01010100, %00000000, %01010110
 1163 D1:F142 AA A5 00 56 
              AA D6 94 05 	.db %10101010, %10100101, %00000000, %01010110, %10101010, %11010110, %10010100, %00000101
 1164 D1:F14A A9 AB 5A 90 
              05 A9 9A FE 	.db %10101001, %10101011, %01011010, %10010000, %00000101, %10101001, %10011010, %11111110
 1165 D1:F152 A4 05 69 AA 
              AA A5 40 16 	.db %10100100, %00000101, %01101001, %10101010, %10101010, %10100101, %01000000, %00010110
 1166 D1:F15A A6 AA A5 55 
              40 56 9A AA 	.db %10100110, %10101010, %10100101, %01010101, %01000000, %01010110, %10011010, %10101010
 1167 D1:F162 95 55 40 56 
              AA A9 55 55 	.db %10010101, %01010101, %01000000, %01010110, %10101010, %10101001, %01010101, %01010101
 1168 D1:F16A 50 56 A9 55 
              55 65 40 5A 	.db %01010000, %01010110, %10101001, %01010101, %01010101, %01100101, %01000000, %01011010
 1169 D1:F172 AA 55 55 A9 
              01 9A AA 55 	.db %10101010, %01010101, %01010101, %10101001, %00000001, %10011010, %10101010, %01010101
 1170 D1:F17A 56 A4 16 6A 
              A5 55 AA 41 	.db %01010110, %10100100, %00010110, %01101010, %10100101, %01010101, %10101010, %01000001
 1171 D1:F182 59 A5 55 6A 
              58 01 66 AA 	.db %01011001, %10100101, %01010101, %01101010, %01011000, %00000001, %01100110, %10101010
 1172 D1:F18A A4 5A AA 40 
              55 55 50 15 	.db %10100100, %01011010, %10101010, %01000000, %01010101, %01010101, %01010000, %00010101
 1173 D1:F192 55 40 00 00 
              00 00 00 00 	.db %01010101, %01000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
 1174 D1:F19A -  -  -  -  
 1175 D1:F19A -  -  -  -  
 1176 D1:F19A -  -  -  -  FrogCharge:
 1177 D1:F19A 40 -  -  -  	.db %01000000
 1178 D1:F19B 19 12 -  -  	.db 25, 18
 1179 D1:F19D 00 0F FE 00 
              1F FF 80 3F 	.db %00000000, %00001111, %11111110, %00000000, %00011111, %11111111, %10000000, %00111111
 1180 D1:F1A5 FF E0 3F FF 
              F0 3F FF F8 	.db %11111111, %11100000, %00111111, %11111111, %11110000, %00111111, %11111111, %11111000
 1181 D1:F1AD 7F FF FC 7F 
              FF FE FF FF 	.db %01111111, %11111111, %11111100, %01111111, %11111111, %11111110, %11111111, %11111111
 1182 D1:F1B5 FF FF FF FF 
              FF FF FF BF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %10111111
 1183 D1:F1BD FF FF DF FF 
              FF CF FF FF 	.db %11111111, %11111111, %11011111, %11111111, %11111111, %11001111, %11111111, %11111111
 1184 D1:F1C5 C7 FF FF E3 
              FF FF FD FF 	.db %11000111, %11111111, %11111111, %11100011, %11111111, %11111111, %11111101, %11111111
 1185 D1:F1CD FF FE FF FF 
              FF 3F FF FF 	.db %11111111, %11111110, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
 1186 D1:F1D5 80 -  -  -  	.db %10000000
 1187 D1:F1D6 -  -  -  -  
 1188 D1:F1D6 95 46 80 00 	.db %10010101, %01000110, %10000000, %00000000
 1189 D1:F1DA -  -  -  -  
 1190 D1:F1DA 00 00 00 00 
              00 09 24 92 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001001, %00100100, %10010010
 1191 D1:F1E2 48 00 02 4A 
              49 24 89 00 	.db %01001000, %00000000, %00000010, %01001010, %01001001, %00100100, %10001001, %00000000
 1192 D1:F1EA 02 4A 49 26 
              4A 44 80 09 	.db %00000010, %01001010, %01001001, %00100110, %01001010, %01000100, %10000000, %00001001
 1193 D1:F1F2 49 14 93 25 
              24 40 00 94 	.db %01001001, %00010100, %10010011, %00100101, %00100100, %01000000, %00000000, %10010100
 1194 D1:F1FA 91 45 26 DA 
              48 80 09 29 	.db %10010001, %01000101, %00100110, %11011010, %01001000, %10000000, %00001001, %00101001
 1195 D1:F202 14 92 49 24 
              89 20 00 4A 	.db %00010100, %10010010, %01001001, %00100100, %10001001, %00100000, %00000000, %01001010
 1196 D1:F20A 48 A4 92 48 
              92 64 20 02 	.db %01001000, %10100100, %10010010, %01001000, %10010010, %01100100, %00100000, %00000010
 1197 D1:F212 4A 45 24 92 
              52 49 24 20 	.db %01001010, %01000101, %00100100, %10010010, %01010010, %01001001, %00100100, %00100000
 1198 D1:F21A 02 4A 49 24 
              94 92 49 24 	.db %00000010, %01001010, %01001001, %00100100, %10010100, %10010010, %01001001, %00100100
 1199 D1:F222 24 02 4A 49 
              19 24 92 48 	.db %00100100, %00000010, %01001010, %01001001, %00011001, %00100100, %10010010, %01001000
 1200 D1:F22A 8C 20 02 52 
              49 23 24 92 	.db %10001100, %00100000, %00000010, %01010010, %01001001, %00100011, %00100100, %10010010
 1201 D1:F232 44 91 00 14 
              52 49 23 24 	.db %01000100, %10010001, %00000000, %00010100, %01010010, %01001001, %00100011, %00100100
 1202 D1:F23A 90 A4 88 04 
              A2 92 48 C9 	.db %10010000, %10100100, %10001000, %00000100, %10100010, %10010010, %01001000, %11001001
 1203 D1:F242 21 49 22 01 
              25 14 89 26 	.db %00100001, %01001001, %00100010, %00000001, %00100101, %00010100, %10001001, %00100110
 1204 D1:F24A 42 92 25 00 
              01 28 A4 92 	.db %01000010, %10010010, %00100101, %00000000, %00000001, %00101000, %10100100, %10010010
 1205 D1:F252 48 82 52 49 
              22 00 24 92 	.db %01001000, %10000010, %01010010, %01001001, %00100010, %00000000, %00100100, %10010010
 1206 D1:F25A 49 24 00 49 
              24 92 00 00 	.db %01001001, %00100100, %00000000, %01001001, %00100100, %10010010, %00000000, %00000000
 1207 D1:F262 00 00 00 00 
              00 00 00 -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
 1208 D1:F269 -  -  -  -  
 1209 D1:F269 -  -  -  -  
 1210 D1:F269 -  -  -  -  FrogJump:
 1211 D1:F269 40 -  -  -  	.db %01000000
 1212 D1:F26A 1E 1D -  -  	.db 30, 29
 1213 D1:F26C 00 00 1F C0 
              00 01 FF 80 	.db %00000000, %00000000, %00011111, %11000000, %00000000, %00000001, %11111111, %10000000
 1214 D1:F274 00 0F FF 00 
              00 7F FC 00 	.db %00000000, %00001111, %11111111, %00000000, %00000000, %01111111, %11111100, %00000000
 1215 D1:F27C 03 FF F0 00 
              1F FF C0 01 	.db %00000011, %11111111, %11110000, %00000000, %00011111, %11111111, %11000000, %00000001
 1216 D1:F284 FF FF 00 0F 
              FF FC 00 FF 	.db %11111111, %11111111, %00000000, %00001111, %11111111, %11111100, %00000000, %11111111
 1217 D1:F28C FF F0 07 FF 
              FF E0 1F FF 	.db %11111111, %11110000, %00000111, %11111111, %11111111, %11100000, %00011111, %11111111
 1218 D1:F294 FF C0 FF FF 
              FF 07 FF FF 	.db %11111111, %11000000, %11111111, %11111111, %11111111, %00000111, %11111111, %11111111
 1219 D1:F29C FC 1F FF FF 
              F0 7F FF FF 	.db %11111100, %00011111, %11111111, %11111111, %11110000, %01111111, %11111111, %11111111
 1220 D1:F2A4 83 FF FF FC 
              1F FF FF C0 	.db %10000011, %11111111, %11111111, %11111100, %00011111, %11111111, %11111111, %11000000
 1221 D1:F2AC 7F FF 80 03 
              FF FC 00 1F 	.db %01111111, %11111111, %10000000, %00000011, %11111111, %11111100, %00000000, %00011111
 1222 D1:F2B4 FF C0 00 FF 
              F0 00 03 FF 	.db %11111111, %11000000, %00000000, %11111111, %11110000, %00000000, %00000011, %11111111
 1223 D1:F2BC 80 00 0F FC 
              00 00 3F C0 	.db %10000000, %00000000, %00001111, %11111100, %00000000, %00000000, %00111111, %11000000
 1224 D1:F2C4 00 00 FF 00 
              00 03 FC 00 	.db %00000000, %00000000, %11111111, %00000000, %00000000, %00000011, %11111100, %00000000
 1225 D1:F2CC 00 0F F0 00 
              00 3F 80 00 	.db %00000000, %00001111, %11110000, %00000000, %00000000, %00111111, %10000000, %00000000
 1226 D1:F2D4 00 7C 00 00 
              00 -  -  -  	.db %00000000, %01111100, %00000000, %00000000, %00000000
 1227 D1:F2D9 -  -  -  -  
 1228 D1:F2D9 95 46 80 00 	.db %10010101, %01000110, %10000000, %00000000
 1229 D1:F2DD -  -  -  -  
 1230 D1:F2DD 00 00 00 00 
              92 48 00 12 	.db %00000000, %00000000, %00000000, %00000000, %10010010, %01001000, %00000000, %00010010
 1231 D1:F2E5 92 48 80 01 
              49 24 92 20 	.db %10010010, %01001000, %10000000, %00000001, %01001001, %00100100, %10010010, %00100000
 1232 D1:F2ED 02 92 4C 94 
              88 00 A4 92 	.db %00000010, %10010010, %01001100, %10010100, %10001000, %00000000, %10100100, %10010010
 1233 D1:F2F5 64 A4 40 00 
              A4 52 4D B4 	.db %01100100, %10100100, %01000000, %00000000, %10100100, %01010010, %01001101, %10110100
 1234 D1:F2FD 88 00 94 8A 
              29 24 91 20 	.db %10001000, %00000000, %10010100, %10001010, %00101001, %00100100, %10010001, %00100000
 1235 D1:F305 00 52 49 24 
              92 48 C2 00 	.db %00000000, %01010010, %01001001, %00100100, %10010010, %01001000, %11000010, %00000000
 1236 D1:F30D 25 24 52 49 
              22 4C 80 00 	.db %00100101, %00100100, %01010010, %01001001, %00100010, %01001100, %10000000, %00000000
 1237 D1:F315 52 48 A4 92 
              92 49 01 20 	.db %01010010, %01001000, %10100100, %10010010, %10010010, %01001001, %00000001, %00100000
 1238 D1:F31D 00 52 49 24 
              94 92 40 0A 	.db %00000000, %01010010, %01001001, %00100100, %10010100, %10010010, %01000000, %00001010
 1239 D1:F325 44 00 52 45 
              25 24 90 92 	.db %01000100, %00000000, %01010010, %01000101, %00100101, %00100100, %10010000, %10010010
 1240 D1:F32D 52 48 80 52 
              49 29 24 91 	.db %01010010, %01001000, %10000000, %01010010, %01001001, %00101001, %00100100, %10010001
 1241 D1:F335 24 92 48 80 
              0A 49 25 24 	.db %00100100, %10010010, %01001000, %10000000, %00001010, %01001001, %00100101, %00100100
 1242 D1:F33D 91 24 92 44 
              80 01 49 25 	.db %10010001, %00100100, %10010010, %01000100, %10000000, %00000001, %01001001, %00100101
 1243 D1:F345 24 92 12 49 
              24 00 01 49 	.db %00100100, %10010010, %00010010, %01001001, %00100100, %00000000, %00000001, %01001001
 1244 D1:F34D 15 24 92 10 
              00 00 00 52 	.db %00010101, %00100100, %10010010, %00010000, %00000000, %00000000, %00000000, %01010010
 1245 D1:F355 45 29 24 24 
              00 0A 48 A2 	.db %01000101, %00101001, %00100100, %00100100, %00000000, %00001010, %01001000, %10100010
 1246 D1:F35D 49 20 00 0A 
              48 A4 40 00 	.db %01001001, %00100000, %00000000, %00001010, %01001000, %10100100, %01000000, %00000000
 1247 D1:F365 00 52 45 22 
              00 29 22 89 	.db %00000000, %01010010, %01000101, %00100010, %00000000, %00101001, %00100010, %10001001
 1248 D1:F36D 00 14 8A 20 
              00 52 28 80 	.db %00000000, %00010100, %10001010, %00100000, %00000000, %01010010, %00101000, %10000000
 1249 D1:F375 4A 28 80 51 
              48 80 51 44 	.db %01001010, %00101000, %10000000, %01010001, %01001000, %10000000, %01010001, %01000100
 1250 D1:F37D 00 09 20 00 
              00 -  -  -  	.db %00000000, %00001001, %00100000, %00000000, %00000000
 1251 D1:F382 -  -  -  -  
 1252 D1:F382 -  -  -  -  
 1253 D1:F382 -  -  -  -  FrogJumpMouth:
 1254 D1:F382 40 -  -  -  	.db %01000000
 1255 D1:F383 1E 1D -  -  	.db 30, 29
 1256 D1:F385 00 00 1F C0 
              00 01 FF 80 	.db %00000000, %00000000, %00011111, %11000000, %00000000, %00000001, %11111111, %10000000
 1257 D1:F38D 00 0F FF 00 
              00 7F FC 00 	.db %00000000, %00001111, %11111111, %00000000, %00000000, %01111111, %11111100, %00000000
 1258 D1:F395 03 FF F0 00 
              1F FF C0 01 	.db %00000011, %11111111, %11110000, %00000000, %00011111, %11111111, %11000000, %00000001
 1259 D1:F39D FF FF 00 0F 
              FF FC 00 FF 	.db %11111111, %11111111, %00000000, %00001111, %11111111, %11111100, %00000000, %11111111
 1260 D1:F3A5 FF F0 07 FF 
              FF E0 1F FF 	.db %11111111, %11110000, %00000111, %11111111, %11111111, %11100000, %00011111, %11111111
 1261 D1:F3AD FF C0 FF FF 
              FF 07 FF FF 	.db %11111111, %11000000, %11111111, %11111111, %11111111, %00000111, %11111111, %11111111
 1262 D1:F3B5 FC 1F FF FF 
              F0 7F FF FF 	.db %11111100, %00011111, %11111111, %11111111, %11110000, %01111111, %11111111, %11111111
 1263 D1:F3BD 83 FF FF FC 
              1F FF FF C0 	.db %10000011, %11111111, %11111111, %11111100, %00011111, %11111111, %11111111, %11000000
 1264 D1:F3C5 7F FF 80 03 
              FF FC 00 1F 	.db %01111111, %11111111, %10000000, %00000011, %11111111, %11111100, %00000000, %00011111
 1265 D1:F3CD FF C0 00 FF 
              F0 00 03 FF 	.db %11111111, %11000000, %00000000, %11111111, %11110000, %00000000, %00000011, %11111111
 1266 D1:F3D5 80 00 0F FC 
              00 00 3F C0 	.db %10000000, %00000000, %00001111, %11111100, %00000000, %00000000, %00111111, %11000000
 1267 D1:F3DD 00 00 FF 00 
              00 03 FC 00 	.db %00000000, %00000000, %11111111, %00000000, %00000000, %00000011, %11111100, %00000000
 1268 D1:F3E5 00 0F F0 00 
              00 3F 80 00 	.db %00000000, %00001111, %11110000, %00000000, %00000000, %00111111, %10000000, %00000000
 1269 D1:F3ED 00 7C 00 00 
              00 -  -  -  	.db %00000000, %01111100, %00000000, %00000000, %00000000
 1270 D1:F3F2 -  -  -  -  
 1271 D1:F3F2 95 46 80 00 	.db %10010101, %01000110, %10000000, %00000000
 1272 D1:F3F6 -  -  -  -  
 1273 D1:F3F6 00 00 00 00 
              92 48 00 12 	.db %00000000, %00000000, %00000000, %00000000, %10010010, %01001000, %00000000, %00010010
 1274 D1:F3FE 92 48 80 01 
              49 24 92 20 	.db %10010010, %01001000, %10000000, %00000001, %01001001, %00100100, %10010010, %00100000
 1275 D1:F406 02 92 4C 94 
              88 00 A4 92 	.db %00000010, %10010010, %01001100, %10010100, %10001000, %00000000, %10100100, %10010010
 1276 D1:F40E 64 A4 40 00 
              A4 52 4D B4 	.db %01100100, %10100100, %01000000, %00000000, %10100100, %01010010, %01001101, %10110100
 1277 D1:F416 48 00 94 8A 
              29 24 89 20 	.db %01001000, %00000000, %10010100, %10001010, %00101001, %00100100, %10001001, %00100000
 1278 D1:F41E 00 52 49 24 
              92 44 92 00 	.db %00000000, %01010010, %01001001, %00100100, %10010010, %01000100, %10010010, %00000000
 1279 D1:F426 25 24 52 49 
              22 49 80 00 	.db %00100101, %00100100, %01010010, %01001001, %00100010, %01001001, %10000000, %00000000
 1280 D1:F42E 52 48 A4 92 
              92 49 01 20 	.db %01010010, %01001000, %10100100, %10010010, %10010010, %01001001, %00000001, %00100000
 1281 D1:F436 00 52 49 24 
              94 92 40 0A 	.db %00000000, %01010010, %01001001, %00100100, %10010100, %10010010, %01000000, %00001010
 1282 D1:F43E 44 00 52 45 
              25 24 90 92 	.db %01000100, %00000000, %01010010, %01000101, %00100101, %00100100, %10010000, %10010010
 1283 D1:F446 52 48 80 52 
              49 29 24 91 	.db %01010010, %01001000, %10000000, %01010010, %01001001, %00101001, %00100100, %10010001
 1284 D1:F44E 24 92 48 80 
              0A 49 25 24 	.db %00100100, %10010010, %01001000, %10000000, %00001010, %01001001, %00100101, %00100100
 1285 D1:F456 91 24 92 44 
              80 01 49 25 	.db %10010001, %00100100, %10010010, %01000100, %10000000, %00000001, %01001001, %00100101
 1286 D1:F45E 24 92 12 49 
              24 00 01 49 	.db %00100100, %10010010, %00010010, %01001001, %00100100, %00000000, %00000001, %01001001
 1287 D1:F466 15 24 92 10 
              00 00 00 52 	.db %00010101, %00100100, %10010010, %00010000, %00000000, %00000000, %00000000, %01010010
 1288 D1:F46E 45 29 24 24 
              00 0A 48 A2 	.db %01000101, %00101001, %00100100, %00100100, %00000000, %00001010, %01001000, %10100010
 1289 D1:F476 49 20 00 0A 
              48 A4 40 00 	.db %01001001, %00100000, %00000000, %00001010, %01001000, %10100100, %01000000, %00000000
 1290 D1:F47E 00 52 45 22 
              00 29 22 89 	.db %00000000, %01010010, %01000101, %00100010, %00000000, %00101001, %00100010, %10001001
 1291 D1:F486 00 14 8A 20 
              00 52 28 80 	.db %00000000, %00010100, %10001010, %00100000, %00000000, %01010010, %00101000, %10000000
 1292 D1:F48E 4A 28 80 51 
              48 80 51 44 	.db %01001010, %00101000, %10000000, %01010001, %01001000, %10000000, %01010001, %01000100
 1293 D1:F496 00 09 20 00 
              00 -  -  -  	.db %00000000, %00001001, %00100000, %00000000, %00000000
 1294 D1:F49B -  -  -  -  
 1295 D1:F49B -  -  -  -  
 1296 D1:F49B -  -  -  -  FrogFall:
 1297 D1:F49B 40 -  -  -  	.db %01000000
 1298 D1:F49C 16 1A -  -  	.db 22, 26
 1299 D1:F49E 3C 00 00 F8 
              00 03 E0 00 	.db %00111100, %00000000, %00000000, %11111000, %00000000, %00000011, %11100000, %00000000
 1300 D1:F4A6 0F 80 00 3F 
              03 F0 FC 0F 	.db %00001111, %10000000, %00000000, %00111111, %00000011, %11110000, %11111100, %00001111
 1301 D1:F4AE E3 F0 7F 9F 
              C1 FE 7F 8F 	.db %11100011, %11110000, %01111111, %10011111, %11000001, %11111110, %01111111, %10001111
 1302 D1:F4B6 F3 FF 3F 8F 
              FF FC 3F FF 	.db %11110011, %11111111, %00111111, %10001111, %11111111, %11111100, %00111111, %11111111
 1303 D1:F4BE F0 FF FF C3 
              FF FF 0F FF 	.db %11110000, %11111111, %11111111, %11000011, %11111111, %11111111, %00001111, %11111111
 1304 D1:F4C6 FE 3F FF FE 
              FF FF FB FF 	.db %11111110, %00111111, %11111111, %11111110, %11111111, %11111111, %11111011, %11111111
 1305 D1:F4CE FF F7 FF FF 
              DF FF FF 3F 	.db %11111111, %11110111, %11111111, %11111111, %11011111, %11111111, %11111111, %00111111
 1306 D1:F4D6 FF FC 7F FF 
              F0 FF FF C1 	.db %11111111, %11111100, %01111111, %11111111, %11110000, %11111111, %11111111, %11000001
 1307 D1:F4DE FF FF 01 FF 
              F8 01 FF C0 	.db %11111111, %11111111, %00000001, %11111111, %11111000, %00000001, %11111111, %11000000
 1308 D1:F4E6 -  -  -  -  
 1309 D1:F4E6 95 48 60 00 	.db %10010101, %01001000, %01100000, %00000000
 1310 D1:F4EA -  -  -  -  
 1311 D1:F4EA 00 00 48 00 
              A2 01 44 02 	.db %00000000, %00000000, %01001000, %00000000, %10100010, %00000001, %01000100, %00000010
 1312 D1:F4F2 88 00 00 00 
              29 10 09 24 	.db %10001000, %00000000, %00000000, %00000000, %00101001, %00010000, %00001001, %00100100
 1313 D1:F4FA 00 4A 20 02 
              92 20 02 91 	.db %00000000, %01001010, %00100000, %00000010, %10010010, %00100000, %00000010, %10010001
 1314 D1:F502 00 94 88 00 
              A4 88 00 14 	.db %00000000, %10010100, %10001000, %00000000, %10100100, %10001000, %00000000, %00010100
 1315 D1:F50A 88 00 14 91 
              20 02 91 00 	.db %10001000, %00000000, %00010100, %10010001, %00100000, %00000010, %10010001, %00000000
 1316 D1:F512 14 91 64 80 
              01 48 80 52 	.db %00010100, %10010001, %01100100, %10000000, %00000001, %01001000, %10000000, %01010010
 1317 D1:F51A 44 B6 48 05 
              22 01 49 22 	.db %01000100, %10110110, %01001000, %00000101, %00100010, %00000001, %01001001, %00100010
 1318 D1:F522 DB 64 A4 88 
              05 24 8B 6D 	.db %11011011, %01100100, %10100100, %10001000, %00000101, %00100100, %10001011, %01101101
 1319 D1:F52A B2 92 20 14 
              92 2D B6 DA 	.db %10110010, %10010010, %00100000, %00010100, %10010010, %00101101, %10110110, %11011010
 1320 D1:F532 48 80 0A 48 
              B6 DB 6D 26 	.db %01001000, %10000000, %00001010, %01001000, %10110110, %11011011, %01101101, %00100110
 1321 D1:F53A C8 00 14 92 
              49 36 DB 6D 	.db %11001000, %00000000, %00010100, %10010010, %01001001, %00110110, %11011011, %01101101
 1322 D1:F542 B2 40 05 14 
              92 49 36 49 	.db %10110010, %01000000, %00000101, %00010100, %10010010, %01001001, %00110110, %01001001
 1323 D1:F54A 24 80 0A 48 
              A4 92 48 92 	.db %00100100, %10000000, %00001010, %01001000, %10100100, %10010010, %01001000, %10010010
 1324 D1:F552 52 20 02 52 
              29 24 92 49 	.db %01010010, %00100000, %00000010, %01010010, %00101001, %00100100, %10010010, %01001001
 1325 D1:F55A 24 40 04 A4 
              8A 29 42 52 	.db %00100100, %01000000, %00000100, %10100100, %10001010, %00101001, %01000010, %01010010
 1326 D1:F562 44 00 4A 48 
              A4 A1 29 22 	.db %01000100, %00000000, %01001010, %01001000, %10100100, %10100001, %00101001, %00100010
 1327 D1:F56A 00 24 A4 92 
              92 24 48 00 	.db %00000000, %00100100, %10100100, %10010010, %10010010, %00100100, %01001000, %00000000
 1328 D1:F572 12 52 49 24 
              48 00 02 49 	.db %00010010, %01010010, %01001001, %00100100, %01001000, %00000000, %00000010, %01001001
 1329 D1:F57A 24 92 00 00 
              00 00 00 -  	.db %00100100, %10010010, %00000000, %00000000, %00000000, %00000000, %00000000
 1330 D1:F581 -  -  -  -  
 1331 D1:F581 -  -  -  -  
 1332 D1:F581 -  -  -  -  FrogTongue:
 1333 D1:F581 10 -  -  -  	.db %00010000
 1334 D1:F582 08 08 -  -  	.db 8, 8
 1335 D1:F584 3C 7E FF FF 
              FF FF 7E 3C 	.db %00111100, %01111110, %11111111, %11111111, %11111111, %11111111, %01111110, %00111100
 1336 D1:F58C -  -  -  -  
 1337 D1:F58C CB -  -  -  	.db %11001011
 1338 D1:F58D -  -  -  -  
 1339 D1:F58D 07 9F 9F 9F 
              9F 9E 00 -  	.db %00000111, %10011111, %10011111, %10011111, %10011111, %10011110, %00000000
 1340 D1:F594 -  -  -  -  
 1341 D1:F594 -  -  -  -  
Listing for file "ascent.asm"
  618 D1:F594 -  -  -  -  #include "generated/SpriteEquates.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\SpriteEquates.txt"
    1 D1:F594 -  -  -  -  FrogChargeLit_Slow_O .equ 13894081 ; vRam + 1 - 294
    2 D1:F594 -  -  -  -  FrogChargeLit_Slow_F .equ 13894375 ; vRam + 295 - 588
    3 D1:F594 -  -  -  -  FrogChargeLit_Slow_O_F .equ 13894669 ; vRam + 589 - 877
    4 D1:F594 -  -  -  -  FrogCharge_Slow .equ 13894957 ; vRam + 877 - 1165
    5 D1:F594 -  -  -  -  FrogCharge_Slow_O .equ 13895245 ; vRam + 1165 - 1458
    6 D1:F594 -  -  -  -  FrogCharge_Slow_F .equ 13895539 ; vRam + 1459 - 1752
    7 D1:F594 -  -  -  -  FrogCharge_Slow_O_F .equ 13895833 ; vRam + 1753 - 2041
    8 D1:F594 -  -  -  -  FrogJump_Slow .equ 13896121 ; vRam + 2041 - 2417
    9 D1:F594 -  -  -  -  FrogJump_Slow_O .equ 13896497 ; vRam + 2417 - 2802
   10 D1:F594 -  -  -  -  FrogJump_Slow_F .equ 13896883 ; vRam + 2803 - 3179
   11 D1:F594 -  -  -  -  FrogJump_Slow_O_F .equ 13897259 ; vRam + 3179 - 3564
   12 D1:F594 -  -  -  -  FrogJumpMouth_Slow .equ 13897645 ; vRam + 3565 - 3941
   13 D1:F594 -  -  -  -  FrogJumpMouth_Slow_O .equ 13898021 ; vRam + 3941 - 4326
   14 D1:F594 -  -  -  -  FrogJumpMouth_Slow_F .equ 13898407 ; vRam + 4327 - 4703
   15 D1:F594 -  -  -  -  FrogJumpMouth_Slow_O_F .equ 13898783 ; vRam + 4703 - 5088
   16 D1:F594 -  -  -  -  FrogFall_Slow .equ 13899169 ; vRam + 5089 - 5456
   17 D1:F594 -  -  -  -  FrogFall_Slow_O .equ 13899537 ; vRam + 5457 - 5834
   18 D1:F594 -  -  -  -  FrogFall_Slow_F .equ 13899915 ; vRam + 5835 - 6202
   19 D1:F594 -  -  -  -  FrogFall_Slow_O_F .equ 13900283 ; vRam + 6203 - 6580
   20 D1:F594 -  -  -  -  FrogTongue_Slow .equ 13900661 ; vRam + 6581 - 6650
   21 D1:F594 -  -  -  -  FrogTongue_Slow_O .equ 13900731 ; vRam + 6651 - 6724
   22 D1:F594 -  -  -  -  Branches_5_Fast .equ 13900804 ; vRam + 6724 - 6884
   23 D1:F594 -  -  -  -  Branches_3_Fast .equ 13900964 ; vRam + 6884 - 7051
   24 D1:F594 -  -  -  -  Branches_2_Fast .equ 13901132 ; vRam + 7052 - 7221
   25 D1:F594 -  -  -  -  Tree_4_Fast_F .equ 13901302 ; vRam + 7222 - 7479
   26 D1:F594 -  -  -  -  Tree_0_Fast .equ 13901560 ; vRam + 7480 - 7731
   27 D1:F594 -  -  -  -  Tree_6_Fast .equ 13901812 ; vRam + 7732 - 7989
   28 D1:F594 -  -  -  -  Tree_10_Fast .equ 13902070 ; vRam + 7990 - 8247
   29 D1:F594 -  -  -  -  Tree_7_Fast_F .equ 13902328 ; vRam + 8248 - 8505
   30 D1:F594 -  -  -  -  Tree_1_Fast_F .equ 13902586 ; vRam + 8506 - 8760
   31 D1:F594 -  -  -  -  Tree_1_Fast .equ 13902840 ; vRam + 8760 - 9014
   32 D1:F594 -  -  -  -  Tree_5_Fast .equ 13903094 ; vRam + 9014 - 9271
   33 D1:F594 -  -  -  -  Tree_11_Fast .equ 13903352 ; vRam + 9272 - 9529
   34 D1:F594 -  -  -  -  Tree_5_Fast_F .equ 13903610 ; vRam + 9530 - 9787
   35 D1:F594 -  -  -  -  Tree_2_Fast_F .equ 13903868 ; vRam + 9788 - 10039
   36 D1:F594 -  -  -  -  Tree_11_Fast_F .equ 13904120 ; vRam + 10040 - 10297
   37 D1:F594 -  -  -  -  Branches_1_Fast .equ 13904378 ; vRam + 10298 - 10450
   38 D1:F594 -  -  -  -  Vine2_Slow .equ 13904531 ; vRam + 10451 - 10610
   39 D1:F594 -  -  -  -  VineVertical_Slow_O .equ 13904691 ; vRam + 10611 - 10782
   40 D1:F594 -  -  -  -  VineVertical_Slow .equ 13904863 ; vRam + 10783 - 10956
   41 D1:F594 -  -  -  -  Vine4_Slow_F .equ 13905037 ; vRam + 10957 - 11148
   42 D1:F594 -  -  -  -  Vine4_Slow_O_F .equ 13905229 ; vRam + 11149 - 11341
   43 D1:F594 -  -  -  -  Vine5_Slow_O_F .equ 13905421 ; vRam + 11341 - 11532
   44 D1:F594 -  -  -  -  Vine6_Slow_O .equ 13905613 ; vRam + 11533 - 11699
   45 D1:F594 -  -  -  -  Vine7_Slow .equ 13905779 ; vRam + 11699 - 11832
   46 D1:F594 -  -  -  -  Vine5_Slow .equ 13905913 ; vRam + 11833 - 12022
   47 D1:F594 -  -  -  -  Vine6_Slow .equ 13906103 ; vRam + 12023 - 12187
   48 D1:F594 -  -  -  -  Vine4_Slow .equ 13906267 ; vRam + 12187 - 12379
   49 D1:F594 -  -  -  -  Vine7_Slow_O .equ 13906459 ; vRam + 12379 - 12507
   50 D1:F594 -  -  -  -  Vine5_Slow_O .equ 13906587 ; vRam + 12507 - 12696
   51 D1:F594 -  -  -  -  Vine4_Slow_O .equ 13906777 ; vRam + 12697 - 12887
   52 D1:F594 -  -  -  -  Branches_1_Fast_F .equ 13906968 ; vRam + 12888 - 13040
   53 D1:F594 -  -  -  -  Branches_2_Fast_F .equ 13907120 ; vRam + 13040 - 13209
   54 D1:F594 -  -  -  -  Branches_5_Fast_F .equ 13907290 ; vRam + 13210 - 13370
   55 D1:F594 -  -  -  -  Platforms_0_Fast .equ 13907450 ; vRam + 13370 - 13488
   56 D1:F594 -  -  -  -  Platforms_1_Fast .equ 13907568 ; vRam + 13488 - 13606
   57 D1:F594 -  -  -  -  Platforms_0_Fast_F .equ 13907686 ; vRam + 13606 - 13724
   58 D1:F594 -  -  -  -  Platforms_2_Slow_O_F .equ 13907805 ; vRam + 13725 - 13848
   59 D1:F594 -  -  -  -  Platforms_2_Slow_O .equ 13907929 ; vRam + 13849 - 13972
   60 D1:F594 -  -  -  -  Spikes_0_Fast .equ 13908052 ; vRam + 13972 - 14100
   61 D1:F594 -  -  -  -  GroundDirtDark_Fast .equ 13908180 ; vRam + 14100 - 14233
   62 D1:F594 -  -  -  -  GroundDirtDark_Fast_F .equ 13908314 ; vRam + 14234 - 14367
   63 D1:F594 -  -  -  -  GroundHumpDark_Fast .equ 13908448 ; vRam + 14368 - 14502
   64 D1:F594 -  -  -  -  GroundHumpDark_Fast_F .equ 13908582 ; vRam + 14502 - 14636
   65 D1:F594 -  -  -  -  Tree_16_Fast .equ 13908716 ; vRam + 14636 - 14721
   66 D1:F594 -  -  -  -  Tree_17_Slow .equ 13908801 ; vRam + 14721 - 14822
   67 D1:F594 -  -  -  -  Tree_17_Slow_O_F .equ 13908903 ; vRam + 14823 - 14924
   68 D1:F594 -  -  -  -  Tree_18_Slow .equ 13909005 ; vRam + 14925 - 15025
   69 D1:F594 -  -  -  -  Tree_18_Slow_O_F .equ 13909105 ; vRam + 15025 - 15125
   70 D1:F594 -  -  -  -  Tree_16_Fast_F .equ 13909206 ; vRam + 15126 - 15211
   71 D1:F594 -  -  -  -  Clouds_0_Fast .equ 13909292 ; vRam + 15212 - 15313
   72 D1:F594 -  -  -  -  Clouds_1_Fast .equ 13909394 ; vRam + 15314 - 15413
   73 D1:F594 -  -  -  -  Clouds_3_Fast .equ 13909494 ; vRam + 15414 - 15521
   74 D1:F594 -  -  -  -  Clouds_4_Fast .equ 13909602 ; vRam + 15522 - 15586
   75 D1:F594 -  -  -  -  Clouds_2_Fast .equ 13909666 ; vRam + 15586 - 15763
   76 D1:F594 -  -  -  -  Clouds_0_Fast_F .equ 13909844 ; vRam + 15764 - 15865
   77 D1:F594 -  -  -  -  Clouds_1_Fast_F .equ 13909946 ; vRam + 15866 - 15965
   78 D1:F594 -  -  -  -  Clouds_4_Fast_F .equ 13910046 ; vRam + 15966 - 16030
   79 D1:F594 -  -  -  -  Clouds_3_Fast_F .equ 13910110 ; vRam + 16030 - 16137
   80 D1:F594 -  -  -  -  Clouds_2_Fast_F .equ 13910218 ; vRam + 16138 - 16315
   81 D1:F594 -  -  -  -  FrogDefault_Slow .equ 13910395 ; vRam + 16315 - 16618
   82 D1:F594 -  -  -  -  FrogDefault_Slow_O .equ 13910699 ; vRam + 16619 - 16922
   83 D1:F594 -  -  -  -  FrogDefault_Slow_F .equ 13911003 ; vRam + 16923 - 17226
   84 D1:F594 -  -  -  -  FrogDefault_Slow_O_F .equ 13911307 ; vRam + 17227 - 17530
   85 D1:F594 -  -  -  -  FrogChargeLit_Slow .equ 13911611 ; vRam + 17531 - 17819
   86 D1:F594 -  -  -  -  BigGrassBase_Fast .equ 13911900 ; vRam + 17820 - 18180
   87 D1:F594 -  -  -  -  BigGrassTop_Fast .equ 13912260 ; vRam + 18180 - 18425
   88 D1:F594 -  -  -  -  BigGrassBase_Slow_O .equ 13912505 ; vRam + 18425 - 18863
   89 D1:F594 -  -  -  -  BigGrassBase_Fast_F .equ 13912944 ; vRam + 18864 - 19224
   90 D1:F594 -  -  -  -  BigGrassTop_Fast_F .equ 13913304 ; vRam + 19224 - 19469
   91 D1:F594 -  -  -  -  BigGrassTop_Slow_O .equ 13913549 ; vRam + 19469 - 19783
   92 D1:F594 -  -  -  -  DualLeaf4_Slow .equ 13913863 ; vRam + 19783 - 19959
   93 D1:F594 -  -  -  -  DualLeaf4_Slow_F .equ 13914039 ; vRam + 19959 - 20135
   94 D1:F594 -  -  -  -  DualLeaf3_Fast .equ 13914216 ; vRam + 20136 - 20256
   95 D1:F594 -  -  -  -  Branches_10_Fast .equ 13914336 ; vRam + 20256 - 20375
   96 D1:F594 -  -  -  -  Branches_9_Fast .equ 13914456 ; vRam + 20376 - 20506
   97 D1:F594 -  -  -  -  Branches_16_Slow .equ 13914587 ; vRam + 20507 - 20615
   98 D1:F594 -  -  -  -  Branches_13_Fast .equ 13914696 ; vRam + 20616 - 20665
   99 D1:F594 -  -  -  -  Leaves1_Fast .equ 13914746 ; vRam + 20666 - 20946
  100 D1:F594 -  -  -  -  DualLeaf1_Fast .equ 13915026 ; vRam + 20946 - 21057
  101 D1:F594 -  -  -  -  DualLeaf2_Fast .equ 13915138 ; vRam + 21058 - 21170
  102 D1:F594 -  -  -  -  DualLeaf2_Slow_O .equ 13915251 ; vRam + 21171 - 21340
  103 D1:F594 -  -  -  -  DualLeaf1_Slow_O .equ 13915421 ; vRam + 21341 - 21509
  104 D1:F594 -  -  -  -  Branches_6_Slow .equ 13915589 ; vRam + 21509 - 21666
  105 D1:F594 -  -  -  -  Branches_10_Fast_F .equ 13915746 ; vRam + 21666 - 21785
  106 D1:F594 -  -  -  -  Branches_7_Fast .equ 13915866 ; vRam + 21786 - 21907
  107 D1:F594 -  -  -  -  Branches_15_Slow .equ 13915987 ; vRam + 21907 - 22019
  108 D1:F594 -  -  -  -  Branches_8_Fast_F .equ 13916100 ; vRam + 22020 - 22114
  109 D1:F594 -  -  -  -  Branches_12_Fast .equ 13916194 ; vRam + 22114 - 22205
  110 D1:F594 -  -  -  -  Branches_15_Slow_O_F .equ 13916285 ; vRam + 22205 - 22317
  111 D1:F594 -  -  -  -  LeavesDark_Fast .equ 13916398 ; vRam + 22318 - 22598
  112 D1:F594 -  -  -  -  LeavesDark_Fast_F .equ 13916678 ; vRam + 22598 - 22878
  113 D1:F594 -  -  -  -  Leaves2_Fast .equ 13916958 ; vRam + 22878 - 23113
  114 D1:F594 -  -  -  -  Leaves2_Fast_F .equ 13917194 ; vRam + 23114 - 23349
  115 D1:F594 -  -  -  -  LeavesLight_Fast .equ 13917430 ; vRam + 23350 - 23630
  116 D1:F594 -  -  -  -  Branches_8_Fast .equ 13917710 ; vRam + 23630 - 23724
  117 D1:F594 -  -  -  -  Branches_11_Fast_F .equ 13917804 ; vRam + 23724 - 23827
  118 D1:F594 -  -  -  -  Branches_16_Slow_O_F .equ 13917907 ; vRam + 23827 - 23935
  119 D1:F594 -  -  -  -  Branches_13_Fast_F .equ 13918016 ; vRam + 23936 - 23985
  120 D1:F594 -  -  -  -  Branches_14_Slow .equ 13918065 ; vRam + 23985 - 24093
  121 D1:F594 -  -  -  -  Branches_4_Fast_F .equ 13918174 ; vRam + 24094 - 24252
  122 D1:F594 -  -  -  -  Branches_7_Fast_F .equ 13918332 ; vRam + 24252 - 24373
  123 D1:F594 -  -  -  -  Branches_12_Fast_F .equ 13918454 ; vRam + 24374 - 24465
  124 D1:F594 -  -  -  -  Leaves1_Fast_F .equ 13918546 ; vRam + 24466 - 24746
  125 D1:F594 -  -  -  -  Lantern_0_Fast .equ 13918826 ; vRam + 24746 - 24913
  126 D1:F594 -  -  -  -  Lantern_1_Fast .equ 13918994 ; vRam + 24914 - 25081
  127 D1:F594 -  -  -  -  Lantern_2_Fast .equ 13919162 ; vRam + 25082 - 25249
  128 D1:F594 -  -  -  -  Lantern_0_Fast_F .equ 13919330 ; vRam + 25250 - 25417
  129 D1:F594 -  -  -  -  Lantern_1_Fast_F .equ 13919498 ; vRam + 25418 - 25585
  130 D1:F594 -  -  -  -  Lantern_2_Fast_F .equ 13919666 ; vRam + 25586 - 25753
  131 D1:F594 -  -  -  -  Lantern_3_Slow .equ 13919833 ; vRam + 25753 - 25942
  132 D1:F594 -  -  -  -  Lantern_3_Slow_O_F .equ 13920023 ; vRam + 25943 - 26132
  133 D1:F594 -  -  -  -  GroundDirtFull_Fast_F .equ 13920212 ; vRam + 26132 - 26309
  134 D1:F594 -  -  -  -  GroundDirtFull_Fast .equ 13920390 ; vRam + 26310 - 26487
  135 D1:F594 -  -  -  -  GroundDirtMound_Fast .equ 13920568 ; vRam + 26488 - 26615
  136 D1:F594 -  -  -  -  GroundDirtMound_Fast_F .equ 13920696 ; vRam + 26616 - 26743
  137 D1:F594 -  -  -  -  Branches_8_Slow_O_F .equ 13920823 ; vRam + 26743 - 26879
  138 D1:F594 -  -  -  -  Branches_9_Slow_O .equ 13920959 ; vRam + 26879 - 27054
  139 D1:F594 -  -  -  -  Tree_2_Fast .equ 13921134 ; vRam + 27054 - 27305
  140 D1:F594 -  -  -  -  Tree_4_Fast .equ 13921386 ; vRam + 27306 - 27563
  141 D1:F594 -  -  -  -  Tree_7_Fast .equ 13921644 ; vRam + 27564 - 27821
  142 D1:F594 -  -  -  -  Tree_9_Fast .equ 13921902 ; vRam + 27822 - 28079
  143 D1:F594 -  -  -  -  Tree_6_Fast_F .equ 13922160 ; vRam + 28080 - 28337
  144 D1:F594 -  -  -  -  Tree_3_Fast_F .equ 13922418 ; vRam + 28338 - 28595
  145 D1:F594 -  -  -  -  Tree_0_Fast_F .equ 13922676 ; vRam + 28596 - 28847
  146 D1:F594 -  -  -  -  Tree_3_Fast .equ 13922928 ; vRam + 28848 - 29105
  147 D1:F594 -  -  -  -  Tree_8_Fast .equ 13923186 ; vRam + 29106 - 29363
  148 D1:F594 -  -  -  -  Tree_9_Fast_F .equ 13923444 ; vRam + 29364 - 29621
  149 D1:F594 -  -  -  -  Tree_8_Fast_F .equ 13923702 ; vRam + 29622 - 29879
  150 D1:F594 -  -  -  -  Branches_1_Slow_O .equ 13923959 ; vRam + 29879 - 30076
  151 D1:F594 -  -  -  -  Branches_2_Slow_O .equ 13924157 ; vRam + 30077 - 30300
  152 D1:F594 -  -  -  -  Branches_4_Slow_O .equ 13924381 ; vRam + 30301 - 30504
  153 D1:F594 -  -  -  -  Branches_7_Slow_O .equ 13924585 ; vRam + 30505 - 30668
  154 D1:F594 -  -  -  -  Branches_0_Fast_F .equ 13911900 ; vRam + 17820 - 17971
  155 D1:F594 -  -  -  -  Branches_8_Slow_O .equ 13912051 ; vRam + 17971 - 18107
  156 D1:F594 -  -  -  -  Branches_9_Fast_F .equ 13912188 ; vRam + 18108 - 18238
  157 D1:F594 -  -  -  -  Branches_4_Fast .equ 13912318 ; vRam + 18238 - 18396
Listing for file "ascent.asm"
  619 D1:F594 -  -  -  -  #include "generated/Sprite_Groups.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Groups.txt"
    1 D1:F594 -  -  -  -  Sprite_Groups:
    2 D1:F594 F4 F5 D1 -  	.dl SG_GroundGrass
    3 D1:F597 36 F6 D1 -  	.dl SG_Branch3
    4 D1:F59A 54 F6 D1 -  	.dl SG_Branch7
    5 D1:F59D A6 F6 D1 -  	.dl SG_Lantern1
    6 D1:F5A0 B8 F6 D1 -  	.dl SG_Branch4
    7 D1:F5A3 0E F7 D1 -  	.dl SG_Branch5
    8 D1:F5A6 5C F7 D1 -  	.dl SG_Branch6
    9 D1:F5A9 92 F7 D1 -  	.dl SG_Branch2
   10 D1:F5AC E0 F7 D1 -  	.dl SG_GroundChunk2
   11 D1:F5AF FA F7 D1 -  	.dl SG_GroundChunk1
   12 D1:F5B2 18 F8 D1 -  	.dl SG_Root1
   13 D1:F5B5 26 F8 D1 -  	.dl SG_TreeRow3
   14 D1:F5B8 44 F8 D1 -  	.dl SG_TreeRow5
   15 D1:F5BB 62 F8 D1 -  	.dl SG_TreeRow1
   16 D1:F5BE 80 F8 D1 -  	.dl SG_TreeRow2
   17 D1:F5C1 9E F8 D1 -  	.dl SG_TreeRow4
   18 D1:F5C4 BC F8 D1 -  	.dl SG_Branch1
   19 D1:F5C7 FA F8 D1 -  	.dl SG_Vines2
   20 D1:F5CA 0C F9 D1 -  	.dl SG_Vines6
   21 D1:F5CD 22 F9 D1 -  	.dl SG_Vines7
   22 D1:F5D0 38 F9 D1 -  	.dl SG_Vines5
   23 D1:F5D3 5E F9 D1 -  	.dl SG_BranchBase3
   24 D1:F5D6 70 F9 D1 -  	.dl SG_BranchBase2
   25 D1:F5D9 8A F9 D1 -  	.dl SG_BranchBase4
   26 D1:F5DC 9C F9 D1 -  	.dl SG_Platform3
   27 D1:F5DF B6 F9 D1 -  	.dl SG_Platform4
   28 D1:F5E2 D0 F9 D1 -  	.dl SG_Platform1
   29 D1:F5E5 E2 F9 D1 -  	.dl SG_Platform2
   30 D1:F5E8 F4 F9 D1 -  	.dl SG_DarkGroundChunk
   31 D1:F5EB 12 FA D1 -  	.dl SG_BGTree1
   32 D1:F5EE 34 FA D1 -  	.dl SG_BGTree2
   33 D1:F5F1 56 FA D1 -  	.dl SG_Cloud1
   34 D1:F5F4 -  -  -  -  
   35 D1:F5F4 -  -  -  -  
   36 D1:F5F4 -  -  -  -  
   37 D1:F5F4 -  -  -  -  SG_GroundGrass:
   38 D1:F5F4 00 -  -  -  	.db 0
   39 D1:F5F5 10 -  -  -  	.db 16
   40 D1:F5F6 1A 1A 09 00 	.db 26, 26, 9, 0  ;BigGrassBase_Slow_O
   41 D1:F5FA 1A 1A 20 01 	.db 26, 26, 32, 1  ;BigGrassBase_Fast
   42 D1:F5FE 1A 1A 2C 02 	.db 26, 26, 44, 2  ;BigGrassBase_Fast_F
   43 D1:F602 1A 1A 00 01 	.db 26, 26, 0, 1  ;BigGrassBase_Fast
   44 D1:F606 03 17 02 03 	.db 3, 23, 2, 3  ;BigGrassTop_Fast
   45 D1:F60A 1A 1A 13 01 	.db 26, 26, 19, 1  ;BigGrassBase_Fast
   46 D1:F60E 03 17 15 03 	.db 3, 23, 21, 3  ;BigGrassTop_Fast
   47 D1:F612 03 17 07 04 	.db 3, 23, 7, 4  ;BigGrassTop_Fast_F
   48 D1:F616 04 17 1D 04 	.db 4, 23, 29, 4  ;BigGrassTop_Fast_F
   49 D1:F61A 03 17 28 04 	.db 3, 23, 40, 4  ;BigGrassTop_Fast_F
   50 D1:F61E 1D 17 19 04 	.db 29, 23, 25, 4  ;BigGrassTop_Fast_F
   51 D1:F622 1D 17 08 05 	.db 29, 23, 8, 5  ;BigGrassTop_Slow_O
   52 D1:F626 1D 17 34 03 	.db 29, 23, 52, 3  ;BigGrassTop_Fast
   53 D1:F62A 0A 13 34 06 	.db 10, 19, 52, 6  ;DualLeaf4_Slow
   54 D1:F62E 00 13 13 07 	.db 0, 19, 19, 7  ;DualLeaf4_Slow_F
   55 D1:F632 21 0B 26 08 	.db 33, 11, 38, 8  ;DualLeaf3_Fast
   56 D1:F636 -  -  -  -  
   57 D1:F636 -  -  -  -  SG_Branch3:
   58 D1:F636 00 -  -  -  	.db 0
   59 D1:F637 07 -  -  -  	.db 7
   60 D1:F638 00 0E 17 09 	.db 0, 14, 23, 9  ;Branches_9_Fast
   61 D1:F63C 0E 06 08 0A 	.db 14, 6, 8, 10  ;Branches_13_Fast
   62 D1:F640 07 0E 0F 0B 	.db 7, 14, 15, 11  ;Branches_10_Fast
   63 D1:F644 12 0D 0D 0C 	.db 18, 13, 13, 12  ;Branches_16_Slow
   64 D1:F648 05 15 00 0D 	.db 5, 21, 0, 13  ;Leaves1_Fast
   65 D1:F64C 1D 0C 0A 11 	.db 29, 12, 10, 17  ;DualLeaf1_Fast
   66 D1:F650 01 0B 0F 08 	.db 1, 11, 15, 8  ;DualLeaf3_Fast
   67 D1:F654 -  -  -  -  
   68 D1:F654 -  -  -  -  SG_Branch7:
   69 D1:F654 00 -  -  -  	.db 0
   70 D1:F655 14 -  -  -  	.db 20
   71 D1:F656 00 15 0A 12 	.db 0, 21, 10, 18  ;LeavesLight_Fast
   72 D1:F65A 05 15 15 12 	.db 5, 21, 21, 18  ;LeavesLight_Fast
   73 D1:F65E 21 15 18 13 	.db 33, 21, 24, 19  ;LeavesDark_Fast
   74 D1:F662 12 15 00 13 	.db 18, 21, 0, 19  ;LeavesDark_Fast
   75 D1:F666 28 15 08 13 	.db 40, 21, 8, 19  ;LeavesDark_Fast
   76 D1:F66A 19 0E 1A 14 	.db 25, 14, 26, 20  ;Branches_14_Slow
   77 D1:F66E 14 0E 0D 15 	.db 20, 14, 13, 21  ;Branches_15_Slow_O_F
   78 D1:F672 36 0E 03 16 	.db 54, 14, 3, 22  ;Branches_8_Fast
   79 D1:F676 15 0E 07 17 	.db 21, 14, 7, 23  ;Branches_15_Slow
   80 D1:F67A 23 0A 13 18 	.db 35, 10, 19, 24  ;Branches_11_Fast_F
   81 D1:F67E 25 06 1C 19 	.db 37, 6, 28, 25  ;Branches_13_Fast_F
   82 D1:F682 26 0E 0B 0B 	.db 38, 14, 11, 11  ;Branches_10_Fast
   83 D1:F686 2E 0E 08 16 	.db 46, 14, 8, 22  ;Branches_8_Fast
   84 D1:F68A 1D 0E 0B 1A 	.db 29, 14, 11, 26  ;Branches_10_Fast_F
   85 D1:F68E 27 12 11 1B 	.db 39, 18, 17, 27  ;Leaves2_Fast_F
   86 D1:F692 22 12 02 1C 	.db 34, 18, 2, 28  ;Leaves2_Fast
   87 D1:F696 10 15 0E 0D 	.db 16, 21, 14, 13  ;Leaves1_Fast
   88 D1:F69A 10 15 1C 0D 	.db 16, 21, 28, 13  ;Leaves1_Fast
   89 D1:F69E 08 15 05 0D 	.db 8, 21, 5, 13  ;Leaves1_Fast
   90 D1:F6A2 39 0C 05 0E 	.db 57, 12, 5, 14  ;DualLeaf1_Fast
   91 D1:F6A6 -  -  -  -  
   92 D1:F6A6 -  -  -  -  SG_Lantern1:
   93 D1:F6A6 00 -  -  -  	.db 0
   94 D1:F6A7 04 -  -  -  	.db 4
   95 D1:F6A8 00 18 04 1E 	.db 0, 24, 4, 30  ;Lantern_0_Fast
   96 D1:F6AC 00 18 00 21 	.db 0, 24, 0, 33  ;Lantern_0_Fast_F
   97 D1:F6B0 18 15 04 23 	.db 24, 21, 4, 35  ;Lantern_3_Slow
   98 D1:F6B4 18 15 00 24 	.db 24, 21, 0, 36  ;Lantern_3_Slow_O_F
   99 D1:F6B8 -  -  -  -  
  100 D1:F6B8 -  -  -  -  SG_Branch4:
  101 D1:F6B8 00 -  -  -  	.db 0
  102 D1:F6B9 15 -  -  -  	.db 21
  103 D1:F6BA 3F 15 0C 0D 	.db 63, 21, 12, 13  ;Leaves1_Fast
  104 D1:F6BE 00 15 0F 12 	.db 0, 21, 15, 18  ;LeavesLight_Fast
  105 D1:F6C2 05 15 1B 12 	.db 5, 21, 27, 18  ;LeavesLight_Fast
  106 D1:F6C6 0E 12 12 1C 	.db 14, 18, 18, 28  ;Leaves2_Fast
  107 D1:F6CA 0D 15 06 0D 	.db 13, 21, 6, 13  ;Leaves1_Fast
  108 D1:F6CE 1C 15 00 25 	.db 28, 21, 0, 37  ;LeavesDark_Fast_F
  109 D1:F6D2 1A 15 18 25 	.db 26, 21, 24, 37  ;LeavesDark_Fast_F
  110 D1:F6D6 2C 0A 11 26 	.db 44, 10, 17, 38  ;Branches_12_Fast
  111 D1:F6DA 25 0E 19 15 	.db 37, 14, 25, 21  ;Branches_15_Slow_O_F
  112 D1:F6DE 20 15 08 13 	.db 32, 21, 8, 19  ;LeavesDark_Fast
  113 D1:F6E2 18 15 0F 13 	.db 24, 21, 15, 19  ;LeavesDark_Fast
  114 D1:F6E6 41 0E 11 17 	.db 65, 14, 17, 23  ;Branches_15_Slow
  115 D1:F6EA 40 0E 15 0B 	.db 64, 14, 21, 11  ;Branches_10_Fast
  116 D1:F6EE 11 12 1E 1B 	.db 17, 18, 30, 27  ;Leaves2_Fast_F
  117 D1:F6F2 36 0E 1D 1A 	.db 54, 14, 29, 26  ;Branches_10_Fast_F
  118 D1:F6F6 3D 0B 25 27 	.db 61, 11, 37, 39  ;Branches_6_Slow
  119 D1:F6FA 4C 0D 11 0C 	.db 76, 13, 17, 12  ;Branches_16_Slow
  120 D1:F6FE 3E 0A 1C 28 	.db 62, 10, 28, 40  ;Branches_7_Fast
  121 D1:F702 2F 0E 1A 29 	.db 47, 14, 26, 41  ;Branches_8_Fast_F
  122 D1:F706 37 12 06 1C 	.db 55, 18, 6, 28  ;Leaves2_Fast
  123 D1:F70A 4E 15 07 0D 	.db 78, 21, 7, 13  ;Leaves1_Fast
  124 D1:F70E -  -  -  -  
  125 D1:F70E -  -  -  -  SG_Branch5:
  126 D1:F70E 00 -  -  -  	.db 0
  127 D1:F70F 13 -  -  -  	.db 19
  128 D1:F710 1E 15 08 13 	.db 30, 21, 8, 19  ;LeavesDark_Fast
  129 D1:F714 00 15 09 12 	.db 0, 21, 9, 18  ;LeavesLight_Fast
  130 D1:F718 43 15 0C 13 	.db 67, 21, 12, 19  ;LeavesDark_Fast
  131 D1:F71C 09 12 00 1C 	.db 9, 18, 0, 28  ;Leaves2_Fast
  132 D1:F720 0A 12 10 1C 	.db 10, 18, 16, 28  ;Leaves2_Fast
  133 D1:F724 33 0A 00 28 	.db 51, 10, 0, 40  ;Branches_7_Fast
  134 D1:F728 2C 0E 09 16 	.db 44, 14, 9, 22  ;Branches_8_Fast
  135 D1:F72C 34 0A 0B 18 	.db 52, 10, 11, 24  ;Branches_11_Fast_F
  136 D1:F730 11 0E 1A 15 	.db 17, 14, 26, 21  ;Branches_15_Slow_O_F
  137 D1:F734 35 06 14 19 	.db 53, 6, 20, 25  ;Branches_13_Fast_F
  138 D1:F738 1E 0E 0D 14 	.db 30, 14, 13, 20  ;Branches_14_Slow
  139 D1:F73C 24 0E 0D 15 	.db 36, 14, 13, 21  ;Branches_15_Slow_O_F
  140 D1:F740 16 15 10 13 	.db 22, 21, 16, 19  ;LeavesDark_Fast
  141 D1:F744 12 15 04 13 	.db 18, 21, 4, 19  ;LeavesDark_Fast
  142 D1:F748 41 0D 0D 2A 	.db 65, 13, 13, 42  ;Branches_16_Slow_O_F
  143 D1:F74C 38 0E 08 1A 	.db 56, 14, 8, 26  ;Branches_10_Fast_F
  144 D1:F750 37 0C 15 0F 	.db 55, 12, 21, 15  ;DualLeaf2_Fast
  145 D1:F754 2B 13 19 06 	.db 43, 19, 25, 6  ;DualLeaf4_Slow
  146 D1:F758 45 15 12 0D 	.db 69, 21, 18, 13  ;Leaves1_Fast
  147 D1:F75C -  -  -  -  
  148 D1:F75C -  -  -  -  SG_Branch6:
  149 D1:F75C 00 -  -  -  	.db 0
  150 D1:F75D 0D -  -  -  	.db 13
  151 D1:F75E 2F 15 15 13 	.db 47, 21, 21, 19  ;LeavesDark_Fast
  152 D1:F762 00 15 09 12 	.db 0, 21, 9, 18  ;LeavesLight_Fast
  153 D1:F766 26 15 11 0D 	.db 38, 21, 17, 13  ;Leaves1_Fast
  154 D1:F76A 25 0E 00 2B 	.db 37, 14, 0, 43  ;Branches_4_Fast_F
  155 D1:F76E 26 0A 09 2C 	.db 38, 10, 9, 44  ;Branches_7_Fast_F
  156 D1:F772 21 0E 12 09 	.db 33, 14, 18, 9  ;Branches_9_Fast
  157 D1:F776 20 0A 1B 2D 	.db 32, 10, 27, 45  ;Branches_12_Fast_F
  158 D1:F77A 0B 15 05 0D 	.db 11, 21, 5, 13  ;Leaves1_Fast
  159 D1:F77E 18 13 22 06 	.db 24, 19, 34, 6  ;DualLeaf4_Slow
  160 D1:F782 19 0E 0E 14 	.db 25, 14, 14, 20  ;Branches_14_Slow
  161 D1:F786 29 0D 16 2A 	.db 41, 13, 22, 42  ;Branches_16_Slow_O_F
  162 D1:F78A 0C 15 0F 2E 	.db 12, 21, 15, 46  ;Leaves1_Fast_F
  163 D1:F78E 2E 12 1C 1C 	.db 46, 18, 28, 28  ;Leaves2_Fast
  164 D1:F792 -  -  -  -  
  165 D1:F792 -  -  -  -  SG_Branch2:
  166 D1:F792 00 -  -  -  	.db 0
  167 D1:F793 13 -  -  -  	.db 19
  168 D1:F794 00 15 09 12 	.db 0, 21, 9, 18  ;LeavesLight_Fast
  169 D1:F798 01 15 15 12 	.db 1, 21, 21, 18  ;LeavesLight_Fast
  170 D1:F79C 0A 15 1C 2E 	.db 10, 21, 28, 46  ;Leaves1_Fast_F
  171 D1:F7A0 0D 15 06 2E 	.db 13, 21, 6, 46  ;Leaves1_Fast_F
  172 D1:F7A4 0B 15 10 0D 	.db 11, 21, 16, 13  ;Leaves1_Fast
  173 D1:F7A8 3C 0E 1D 29 	.db 60, 14, 29, 41  ;Branches_8_Fast_F
  174 D1:F7AC 35 0E 19 29 	.db 53, 14, 25, 41  ;Branches_8_Fast_F
  175 D1:F7B0 2D 0E 12 1A 	.db 45, 14, 18, 26  ;Branches_10_Fast_F
  176 D1:F7B4 30 0E 1C 0B 	.db 48, 14, 28, 11  ;Branches_10_Fast
  177 D1:F7B8 29 0E 1E 17 	.db 41, 14, 30, 23  ;Branches_15_Slow
  178 D1:F7BC 2F 06 25 19 	.db 47, 6, 37, 25  ;Branches_13_Fast_F
  179 D1:F7C0 27 13 2A 06 	.db 39, 19, 42, 6  ;DualLeaf4_Slow
  180 D1:F7C4 19 15 16 13 	.db 25, 21, 22, 19  ;LeavesDark_Fast
  181 D1:F7C8 17 15 00 13 	.db 23, 21, 0, 19  ;LeavesDark_Fast
  182 D1:F7CC 1D 15 0C 13 	.db 29, 21, 12, 19  ;LeavesDark_Fast
  183 D1:F7D0 34 0D 11 0C 	.db 52, 13, 17, 12  ;Branches_16_Slow
  184 D1:F7D4 28 0E 23 15 	.db 40, 14, 35, 21  ;Branches_15_Slow_O_F
  185 D1:F7D8 3A 12 0C 1C 	.db 58, 18, 12, 28  ;Leaves2_Fast
  186 D1:F7DC 1C 12 22 1C 	.db 28, 18, 34, 28  ;Leaves2_Fast
  187 D1:F7E0 -  -  -  -  
  188 D1:F7E0 -  -  -  -  SG_GroundChunk2:
  189 D1:F7E0 00 -  -  -  	.db 0
  190 D1:F7E1 06 -  -  -  	.db 6
  191 D1:F7E2 0E 10 00 33 	.db 14, 16, 0, 51  ;GroundDirtFull_Fast_F
  192 D1:F7E6 0F 10 08 34 	.db 15, 16, 8, 52  ;GroundDirtFull_Fast
  193 D1:F7EA 0E 10 10 33 	.db 14, 16, 16, 51  ;GroundDirtFull_Fast_F
  194 D1:F7EE 02 0C 00 35 	.db 2, 12, 0, 53  ;GroundDirtMound_Fast
  195 D1:F7F2 03 0C 08 35 	.db 3, 12, 8, 53  ;GroundDirtMound_Fast
  196 D1:F7F6 02 0C 10 35 	.db 2, 12, 16, 53  ;GroundDirtMound_Fast
  197 D1:F7FA -  -  -  -  
  198 D1:F7FA -  -  -  -  SG_GroundChunk1:
  199 D1:F7FA 00 -  -  -  	.db 0
  200 D1:F7FB 07 -  -  -  	.db 7
  201 D1:F7FC 10 10 00 34 	.db 16, 16, 0, 52  ;GroundDirtFull_Fast
  202 D1:F800 0F 10 08 34 	.db 15, 16, 8, 52  ;GroundDirtFull_Fast
  203 D1:F804 0E 10 10 33 	.db 14, 16, 16, 51  ;GroundDirtFull_Fast_F
  204 D1:F808 02 0C 10 35 	.db 2, 12, 16, 53  ;GroundDirtMound_Fast
  205 D1:F80C 03 0C 08 35 	.db 3, 12, 8, 53  ;GroundDirtMound_Fast
  206 D1:F810 04 0C 00 36 	.db 4, 12, 0, 54  ;GroundDirtMound_Fast_F
  207 D1:F814 00 0C 0C 35 	.db 0, 12, 12, 53  ;GroundDirtMound_Fast
  208 D1:F818 -  -  -  -  
  209 D1:F818 -  -  -  -  SG_Root1:
  210 D1:F818 00 -  -  -  	.db 0
  211 D1:F819 03 -  -  -  	.db 3
  212 D1:F81A 06 0E 00 16 	.db 6, 14, 0, 22  ;Branches_8_Fast
  213 D1:F81E 03 0E 0D 37 	.db 3, 14, 13, 55  ;Branches_8_Slow_O_F
  214 D1:F822 00 0E 04 38 	.db 0, 14, 4, 56  ;Branches_9_Slow_O
  215 D1:F826 -  -  -  -  
  216 D1:F826 -  -  -  -  SG_TreeRow3:
  217 D1:F826 00 -  -  -  	.db 0
  218 D1:F827 07 -  -  -  	.db 7
  219 D1:F828 00 10 00 39 	.db 0, 16, 0, 57  ;Tree_2_Fast
  220 D1:F82C 00 10 0D 3A 	.db 0, 16, 13, 58  ;Tree_4_Fast
  221 D1:F830 00 10 1A 3B 	.db 0, 16, 26, 59  ;Tree_7_Fast
  222 D1:F834 00 10 27 3C 	.db 0, 16, 39, 60  ;Tree_9_Fast
  223 D1:F838 00 10 34 3D 	.db 0, 16, 52, 61  ;Tree_6_Fast_F
  224 D1:F83C 00 10 41 3E 	.db 0, 16, 65, 62  ;Tree_3_Fast_F
  225 D1:F840 00 10 4E 3F 	.db 0, 16, 78, 63  ;Tree_0_Fast_F
  226 D1:F844 -  -  -  -  
  227 D1:F844 -  -  -  -  SG_TreeRow5:
  228 D1:F844 00 -  -  -  	.db 0
  229 D1:F845 07 -  -  -  	.db 7
  230 D1:F846 00 10 00 39 	.db 0, 16, 0, 57  ;Tree_2_Fast
  231 D1:F84A 00 10 0D 40 	.db 0, 16, 13, 64  ;Tree_3_Fast
  232 D1:F84E 00 10 1A 41 	.db 0, 16, 26, 65  ;Tree_8_Fast
  233 D1:F852 00 10 27 42 	.db 0, 16, 39, 66  ;Tree_9_Fast_F
  234 D1:F856 00 10 34 43 	.db 0, 16, 52, 67  ;Tree_8_Fast_F
  235 D1:F85A 00 10 41 44 	.db 0, 16, 65, 68  ;Tree_4_Fast_F
  236 D1:F85E 00 10 4E 3F 	.db 0, 16, 78, 63  ;Tree_0_Fast_F
  237 D1:F862 -  -  -  -  
  238 D1:F862 -  -  -  -  SG_TreeRow1:
  239 D1:F862 00 -  -  -  	.db 0
  240 D1:F863 07 -  -  -  	.db 7
  241 D1:F864 00 10 00 45 	.db 0, 16, 0, 69  ;Tree_0_Fast
  242 D1:F868 00 10 0D 40 	.db 0, 16, 13, 64  ;Tree_3_Fast
  243 D1:F86C 00 10 1A 46 	.db 0, 16, 26, 70  ;Tree_6_Fast
  244 D1:F870 00 10 27 47 	.db 0, 16, 39, 71  ;Tree_10_Fast
  245 D1:F874 00 10 34 48 	.db 0, 16, 52, 72  ;Tree_7_Fast_F
  246 D1:F878 00 10 41 44 	.db 0, 16, 65, 68  ;Tree_4_Fast_F
  247 D1:F87C 00 10 4E 49 	.db 0, 16, 78, 73  ;Tree_1_Fast_F
  248 D1:F880 -  -  -  -  
  249 D1:F880 -  -  -  -  SG_TreeRow2:
  250 D1:F880 00 -  -  -  	.db 0
  251 D1:F881 07 -  -  -  	.db 7
  252 D1:F882 00 10 00 4A 	.db 0, 16, 0, 74  ;Tree_1_Fast
  253 D1:F886 00 10 0D 4B 	.db 0, 16, 13, 75  ;Tree_5_Fast
  254 D1:F88A 00 10 1A 41 	.db 0, 16, 26, 65  ;Tree_8_Fast
  255 D1:F88E 00 10 27 4C 	.db 0, 16, 39, 76  ;Tree_11_Fast
  256 D1:F892 00 10 34 43 	.db 0, 16, 52, 67  ;Tree_8_Fast_F
  257 D1:F896 00 10 41 4D 	.db 0, 16, 65, 77  ;Tree_5_Fast_F
  258 D1:F89A 00 10 4E 4E 	.db 0, 16, 78, 78  ;Tree_2_Fast_F
  259 D1:F89E -  -  -  -  
  260 D1:F89E -  -  -  -  SG_TreeRow4:
  261 D1:F89E 00 -  -  -  	.db 0
  262 D1:F89F 07 -  -  -  	.db 7
  263 D1:F8A0 00 10 00 45 	.db 0, 16, 0, 69  ;Tree_0_Fast
  264 D1:F8A4 00 10 0D 4B 	.db 0, 16, 13, 75  ;Tree_5_Fast
  265 D1:F8A8 00 10 1A 46 	.db 0, 16, 26, 70  ;Tree_6_Fast
  266 D1:F8AC 00 10 27 4F 	.db 0, 16, 39, 79  ;Tree_11_Fast_F
  267 D1:F8B0 00 10 34 3D 	.db 0, 16, 52, 61  ;Tree_6_Fast_F
  268 D1:F8B4 00 10 41 3E 	.db 0, 16, 65, 62  ;Tree_3_Fast_F
  269 D1:F8B8 00 10 4E 49 	.db 0, 16, 78, 73  ;Tree_1_Fast_F
  270 D1:F8BC -  -  -  -  
  271 D1:F8BC -  -  -  -  SG_Branch1:
  272 D1:F8BC 00 -  -  -  	.db 0
  273 D1:F8BD 0F -  -  -  	.db 15
  274 D1:F8BE 19 0E 34 50 	.db 25, 14, 52, 80  ;Branches_1_Fast
  275 D1:F8C2 19 0E 2C 32 	.db 25, 14, 44, 50  ;Branches_2_Fast
  276 D1:F8C6 1A 0E 23 31 	.db 26, 14, 35, 49  ;Branches_3_Fast
  277 D1:F8CA 1B 0E 1A 2F 	.db 27, 14, 26, 47  ;Branches_5_Fast
  278 D1:F8CE 1D 0A 11 28 	.db 29, 10, 17, 40  ;Branches_7_Fast
  279 D1:F8D2 07 15 11 0D 	.db 7, 21, 17, 13  ;Leaves1_Fast
  280 D1:F8D6 00 12 0A 1C 	.db 0, 18, 10, 28  ;Leaves2_Fast
  281 D1:F8DA 1C 15 07 13 	.db 28, 21, 7, 19  ;LeavesDark_Fast
  282 D1:F8DE 1F 0E 22 16 	.db 31, 14, 34, 22  ;Branches_8_Fast
  283 D1:F8E2 14 0E 17 17 	.db 20, 14, 23, 23  ;Branches_15_Slow
  284 D1:F8E6 05 15 02 12 	.db 5, 21, 2, 18  ;LeavesLight_Fast
  285 D1:F8EA 29 0D 1F 0C 	.db 41, 13, 31, 12  ;Branches_16_Slow
  286 D1:F8EE 13 15 00 0D 	.db 19, 21, 0, 13  ;Leaves1_Fast
  287 D1:F8F2 32 0C 1C 0F 	.db 50, 12, 28, 15  ;DualLeaf2_Fast
  288 D1:F8F6 0D 15 09 0D 	.db 13, 21, 9, 13  ;Leaves1_Fast
  289 D1:F8FA -  -  -  -  
  290 D1:F8FA -  -  -  -  SG_Vines2:
  291 D1:F8FA 00 -  -  -  	.db 0
  292 D1:F8FB 04 -  -  -  	.db 4
  293 D1:F8FC 00 10 03 51 	.db 0, 16, 3, 81  ;Vine2_Slow
  294 D1:F900 10 12 02 52 	.db 16, 18, 2, 82  ;VineVertical_Slow_O
  295 D1:F904 22 12 02 53 	.db 34, 18, 2, 83  ;VineVertical_Slow
  296 D1:F908 33 0C 00 11 	.db 51, 12, 0, 17  ;DualLeaf2_Fast
  297 D1:F90C -  -  -  -  
  298 D1:F90C -  -  -  -  SG_Vines6:
  299 D1:F90C 00 -  -  -  	.db 0
  300 D1:F90D 05 -  -  -  	.db 5
  301 D1:F90E 00 12 00 54 	.db 0, 18, 0, 84  ;Vine4_Slow_F
  302 D1:F912 0F 12 07 55 	.db 15, 18, 7, 85  ;Vine4_Slow_O_F
  303 D1:F916 1F 10 0F 56 	.db 31, 16, 15, 86  ;Vine5_Slow_O_F
  304 D1:F91A 26 0A 18 57 	.db 38, 10, 24, 87  ;Vine6_Slow_O
  305 D1:F91E 28 0A 23 58 	.db 40, 10, 35, 88  ;Vine7_Slow
  306 D1:F922 -  -  -  -  
  307 D1:F922 -  -  -  -  SG_Vines7:
  308 D1:F922 00 -  -  -  	.db 0
  309 D1:F923 05 -  -  -  	.db 5
  310 D1:F924 21 10 00 59 	.db 33, 16, 0, 89  ;Vine5_Slow
  311 D1:F928 1F 0A 08 5A 	.db 31, 10, 8, 90  ;Vine6_Slow
  312 D1:F92C 18 10 12 59 	.db 24, 16, 18, 89  ;Vine5_Slow
  313 D1:F930 0F 10 1A 59 	.db 15, 16, 26, 89  ;Vine5_Slow
  314 D1:F934 00 12 22 5B 	.db 0, 18, 34, 91  ;Vine4_Slow
  315 D1:F938 -  -  -  -  
  316 D1:F938 -  -  -  -  SG_Vines5:
  317 D1:F938 00 -  -  -  	.db 0
  318 D1:F939 09 -  -  -  	.db 9
  319 D1:F93A 00 12 00 54 	.db 0, 18, 0, 84  ;Vine4_Slow_F
  320 D1:F93E 11 12 07 55 	.db 17, 18, 7, 85  ;Vine4_Slow_O_F
  321 D1:F942 21 10 0F 56 	.db 33, 16, 15, 86  ;Vine5_Slow_O_F
  322 D1:F946 28 0A 19 5A 	.db 40, 10, 25, 90  ;Vine6_Slow
  323 D1:F94A 2A 0A 23 5C 	.db 42, 10, 35, 92  ;Vine7_Slow_O
  324 D1:F94E 22 10 2A 5D 	.db 34, 16, 42, 93  ;Vine5_Slow_O
  325 D1:F952 21 0A 32 57 	.db 33, 10, 50, 87  ;Vine6_Slow_O
  326 D1:F956 1A 10 3D 59 	.db 26, 16, 61, 89  ;Vine5_Slow
  327 D1:F95A 0C 12 44 5E 	.db 12, 18, 68, 94  ;Vine4_Slow_O
  328 D1:F95E -  -  -  -  
  329 D1:F95E -  -  -  -  SG_BranchBase3:
  330 D1:F95E 00 -  -  -  	.db 0
  331 D1:F95F 04 -  -  -  	.db 4
  332 D1:F960 0B 0E 00 5F 	.db 11, 14, 0, 95  ;Branches_1_Fast_F
  333 D1:F964 0A 0E 09 60 	.db 10, 14, 9, 96  ;Branches_2_Fast_F
  334 D1:F968 09 0E 12 61 	.db 9, 14, 18, 97  ;Branches_5_Fast_F
  335 D1:F96C 00 0E 0E 14 	.db 0, 14, 14, 20  ;Branches_14_Slow
  336 D1:F970 -  -  -  -  
  337 D1:F970 -  -  -  -  SG_BranchBase2:
  338 D1:F970 00 -  -  -  	.db 0
  339 D1:F971 06 -  -  -  	.db 6
  340 D1:F972 00 0E 2A 62 	.db 0, 14, 42, 98  ;Branches_1_Slow_O
  341 D1:F976 01 0E 21 63 	.db 1, 14, 33, 99  ;Branches_2_Slow_O
  342 D1:F97A 02 0E 18 64 	.db 2, 14, 24, 100  ;Branches_4_Slow_O
  343 D1:F97E 04 0E 06 38 	.db 4, 14, 6, 56  ;Branches_9_Slow_O
  344 D1:F982 04 0A 0F 65 	.db 4, 10, 15, 101  ;Branches_7_Slow_O
  345 D1:F986 0B 0E 00 0B 	.db 11, 14, 0, 11  ;Branches_10_Fast
  346 D1:F98A -  -  -  -  
  347 D1:F98A -  -  -  -  SG_BranchBase4:
  348 D1:F98A 00 -  -  -  	.db 0
  349 D1:F98B 04 -  -  -  	.db 4
  350 D1:F98C 0D 0E 00 66 	.db 13, 14, 0, 102  ;Branches_0_Fast_F
  351 D1:F990 07 0E 08 67 	.db 7, 14, 8, 103  ;Branches_8_Slow_O
  352 D1:F994 12 0E 09 68 	.db 18, 14, 9, 104  ;Branches_9_Fast_F
  353 D1:F998 00 0E 0C 38 	.db 0, 14, 12, 56  ;Branches_9_Slow_O
  354 D1:F99C -  -  -  -  
  355 D1:F99C -  -  -  -  SG_Platform3:
  356 D1:F99C 00 -  -  -  	.db 0
  357 D1:F99D 06 -  -  -  	.db 6
  358 D1:F99E 00 09 00 69 	.db 0, 9, 0, 105  ;Platforms_0_Fast
  359 D1:F9A2 00 09 0A 6A 	.db 0, 9, 10, 106  ;Platforms_1_Fast
  360 D1:F9A6 00 09 28 6B 	.db 0, 9, 40, 107  ;Platforms_0_Fast_F
  361 D1:F9AA 08 0E 00 6C 	.db 8, 14, 0, 108  ;Platforms_2_Slow_O_F
  362 D1:F9AE 00 09 14 6A 	.db 0, 9, 20, 106  ;Platforms_1_Fast
  363 D1:F9B2 00 09 1E 6A 	.db 0, 9, 30, 106  ;Platforms_1_Fast
  364 D1:F9B6 -  -  -  -  
  365 D1:F9B6 -  -  -  -  SG_Platform4:
  366 D1:F9B6 00 -  -  -  	.db 0
  367 D1:F9B7 06 -  -  -  	.db 6
  368 D1:F9B8 00 09 00 69 	.db 0, 9, 0, 105  ;Platforms_0_Fast
  369 D1:F9BC 00 09 0A 6A 	.db 0, 9, 10, 106  ;Platforms_1_Fast
  370 D1:F9C0 00 09 28 6B 	.db 0, 9, 40, 107  ;Platforms_0_Fast_F
  371 D1:F9C4 08 0E 2A 6D 	.db 8, 14, 42, 109  ;Platforms_2_Slow_O
  372 D1:F9C8 00 09 14 6A 	.db 0, 9, 20, 106  ;Platforms_1_Fast
  373 D1:F9CC 00 09 1E 6A 	.db 0, 9, 30, 106  ;Platforms_1_Fast
  374 D1:F9D0 -  -  -  -  
  375 D1:F9D0 -  -  -  -  SG_Platform1:
  376 D1:F9D0 00 -  -  -  	.db 0
  377 D1:F9D1 04 -  -  -  	.db 4
  378 D1:F9D2 00 09 00 69 	.db 0, 9, 0, 105  ;Platforms_0_Fast
  379 D1:F9D6 00 09 0A 6A 	.db 0, 9, 10, 106  ;Platforms_1_Fast
  380 D1:F9DA 00 09 14 6B 	.db 0, 9, 20, 107  ;Platforms_0_Fast_F
  381 D1:F9DE 08 0E 16 6D 	.db 8, 14, 22, 109  ;Platforms_2_Slow_O
  382 D1:F9E2 -  -  -  -  
  383 D1:F9E2 -  -  -  -  SG_Platform2:
  384 D1:F9E2 00 -  -  -  	.db 0
  385 D1:F9E3 04 -  -  -  	.db 4
  386 D1:F9E4 00 09 00 69 	.db 0, 9, 0, 105  ;Platforms_0_Fast
  387 D1:F9E8 00 09 0A 6A 	.db 0, 9, 10, 106  ;Platforms_1_Fast
  388 D1:F9EC 00 09 14 6B 	.db 0, 9, 20, 107  ;Platforms_0_Fast_F
  389 D1:F9F0 08 0E 00 6C 	.db 8, 14, 0, 108  ;Platforms_2_Slow_O_F
  390 D1:F9F4 -  -  -  -  
  391 D1:F9F4 -  -  -  -  SG_DarkGroundChunk:
  392 D1:F9F4 00 -  -  -  	.db 0
  393 D1:F9F5 07 -  -  -  	.db 7
  394 D1:F9F6 11 0C 00 6F 	.db 17, 12, 0, 111  ;GroundDirtDark_Fast
  395 D1:F9FA 11 0C 08 6F 	.db 17, 12, 8, 111  ;GroundDirtDark_Fast
  396 D1:F9FE 10 0C 10 70 	.db 16, 12, 16, 112  ;GroundDirtDark_Fast_F
  397 D1:FA02 05 0D 00 71 	.db 5, 13, 0, 113  ;GroundHumpDark_Fast
  398 D1:FA06 05 0D 08 71 	.db 5, 13, 8, 113  ;GroundHumpDark_Fast
  399 D1:FA0A 04 0D 10 72 	.db 4, 13, 16, 114  ;GroundHumpDark_Fast_F
  400 D1:FA0E 00 0D 0C 72 	.db 0, 13, 12, 114  ;GroundHumpDark_Fast_F
  401 D1:FA12 -  -  -  -  
  402 D1:FA12 -  -  -  -  SG_BGTree1:
  403 D1:FA12 00 -  -  -  	.db 0
  404 D1:FA13 08 -  -  -  	.db 8
  405 D1:FA14 03 15 00 13 	.db 3, 21, 0, 19  ;LeavesDark_Fast
  406 D1:FA18 1B 10 0B 73 	.db 27, 16, 11, 115  ;Tree_16_Fast
  407 D1:FA1C 0F 0E 0E 74 	.db 15, 14, 14, 116  ;Tree_17_Slow
  408 D1:FA20 11 0E 09 75 	.db 17, 14, 9, 117  ;Tree_17_Slow_O_F
  409 D1:FA24 2B 10 0B 73 	.db 43, 16, 11, 115  ;Tree_16_Fast
  410 D1:FA28 25 0E 08 75 	.db 37, 14, 8, 117  ;Tree_17_Slow_O_F
  411 D1:FA2C 00 15 0C 13 	.db 0, 21, 12, 19  ;LeavesDark_Fast
  412 D1:FA30 1F 0B 03 08 	.db 31, 11, 3, 8  ;DualLeaf3_Fast
  413 D1:FA34 -  -  -  -  
  414 D1:FA34 -  -  -  -  SG_BGTree2:
  415 D1:FA34 00 -  -  -  	.db 0
  416 D1:FA35 08 -  -  -  	.db 8
  417 D1:FA36 37 0E 0B 76 	.db 55, 14, 11, 118  ;Tree_18_Slow
  418 D1:FA3A 37 0E 05 74 	.db 55, 14, 5, 116  ;Tree_17_Slow
  419 D1:FA3E 37 0E 06 77 	.db 55, 14, 6, 119  ;Tree_18_Slow_O_F
  420 D1:FA42 2A 10 05 78 	.db 42, 16, 5, 120  ;Tree_16_Fast_F
  421 D1:FA46 1A 10 06 73 	.db 26, 16, 6, 115  ;Tree_16_Fast
  422 D1:FA4A 11 0E 06 76 	.db 17, 14, 6, 118  ;Tree_18_Slow
  423 D1:FA4E 00 15 00 13 	.db 0, 21, 0, 19  ;LeavesDark_Fast
  424 D1:FA52 33 0C 09 0F 	.db 51, 12, 9, 15  ;DualLeaf2_Fast
  425 D1:FA56 -  -  -  -  
  426 D1:FA56 -  -  -  -  SG_Cloud1:
  427 D1:FA56 00 -  -  -  	.db 0
  428 D1:FA57 0D -  -  -  	.db 13
  429 D1:FA58 14 0A 06 79 	.db 20, 10, 6, 121  ;Clouds_0_Fast
  430 D1:FA5C 0D 0E 00 7A 	.db 13, 14, 0, 122  ;Clouds_1_Fast
  431 D1:FA60 00 0B 07 7B 	.db 0, 11, 7, 123  ;Clouds_3_Fast
  432 D1:FA64 03 0A 03 7C 	.db 3, 10, 3, 124  ;Clouds_4_Fast
  433 D1:FA68 08 10 06 7D 	.db 8, 16, 6, 125  ;Clouds_2_Fast
  434 D1:FA6C 14 0A 0E 79 	.db 20, 10, 14, 121  ;Clouds_0_Fast
  435 D1:FA70 13 0A 14 7E 	.db 19, 10, 20, 126  ;Clouds_0_Fast_F
  436 D1:FA74 0B 0E 1C 7F 	.db 11, 14, 28, 127  ;Clouds_1_Fast_F
  437 D1:FA78 03 0A 1B 80 	.db 3, 10, 27, 128  ;Clouds_4_Fast_F
  438 D1:FA7C 01 0B 0F 81 	.db 1, 11, 15, 129  ;Clouds_3_Fast_F
  439 D1:FA80 01 0B 15 7B 	.db 1, 11, 21, 123  ;Clouds_3_Fast
  440 D1:FA84 06 10 14 7D 	.db 6, 16, 20, 125  ;Clouds_2_Fast
  441 D1:FA88 06 10 0C 82 	.db 6, 16, 12, 130  ;Clouds_2_Fast_F
  442 D1:FA8C -  -  -  -  
  443 D1:FA8C -  -  -  -  
  444 D1:FA8C -  -  -  -  
Listing for file "ascent.asm"
  620 D1:FA8C -  -  -  -  #include "generated/Collision_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Collision_Data.txt"
    1 D1:FA8C -  -  -  -  Collision_Data_Frame_Table: 
    2 D1:FA8C D3 FA D1 -  	.dl collision_data_0
    3 D1:FA8F B4 FA D1 -  	.dl collision_data_1
    4 D1:FA92 95 FA D1 -  	.dl collision_data_2
    5 D1:FA95 -  -  -  -  
    6 D1:FA95 -  -  -  -  
    7 D1:FA95 -  -  -  -  collision_data_2:
    8 D1:FA95 06 -  -  -  	.db 6
    9 D1:FA96 0E 07 87 56 
              80 -  -  -  	.db 14,7,135,86,%10000000
   10 D1:FA9B 18 06 73 69 
              C0 -  -  -  	.db 24,6,115,105,%11000000
   11 D1:FAA0 18 06 7F 75 
              C0 -  -  -  	.db 24,6,127,117,%11000000
   12 D1:FAA5 57 07 55 24 
              80 -  -  -  	.db 87,7,85,36,%10000000
   13 D1:FAAA 61 06 41 37 
              C0 -  -  -  	.db 97,6,65,55,%11000000
   14 D1:FAAF A5 07 2F 12 
              80 -  -  -  	.db 165,7,47,18,%10000000
   15 D1:FAB4 -  -  -  -  
   16 D1:FAB4 -  -  -  -  
   17 D1:FAB4 -  -  -  -  collision_data_1:
   18 D1:FAB4 06 -  -  -  	.db 6
   19 D1:FAB5 5E 07 61 30 
              80 -  -  -  	.db 94,7,97,48,%10000000
   20 D1:FABA 68 06 50 46 
              C0 -  -  -  	.db 104,6,80,70,%11000000
   21 D1:FABF 17 07 36 05 
              80 -  -  -  	.db 23,7,54,5,%10000000
   22 D1:FAC4 5E 07 84 67 
              80 -  -  -  	.db 94,7,132,103,%10000000
   23 D1:FAC9 A3 07 76 59 
              80 -  -  -  	.db 163,7,118,89,%10000000
   24 D1:FACE D0 07 43 26 
              80 -  -  -  	.db 208,7,67,38,%10000000
   25 D1:FAD3 -  -  -  -  
   26 D1:FAD3 -  -  -  -  
   27 D1:FAD3 -  -  -  -  collision_data_0:
   28 D1:FAD3 05 -  -  -  	.db 5
   29 D1:FAD4 02 17 9F 00 
              00 -  -  -  	.db 2,23,159,0,%00000000
   30 D1:FAD9 56 07 9A 69 
              80 -  -  -  	.db 86,7,154,105,%10000000
   31 D1:FADE 56 07 36 05 
              80 -  -  -  	.db 86,7,54,5,%10000000
   32 D1:FAE3 8A 07 5E 41 
              80 -  -  -  	.db 138,7,94,65,%10000000
   33 D1:FAE8 E4 07 71 54 
              80 -  -  -  	.db 228,7,113,84,%10000000
   34 D1:FAED -  -  -  -  
   35 D1:FAED 00 -  -  -  	.db 0 ;Terminate Data
Listing for file "ascent.asm"
  621 D1:FAEE -  -  -  -  #include "generated/Animation_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Animation_Data.txt"
    1 D1:FAEE -  -  -  -  position_animation_data:
    2 D1:FAEE 2A -  -  -  	.db 42
    3 D1:FAEF B2 CF D1 -  	.dl FG_Data_1 + 10
    4 D1:FAF2 0C C8 D1 -  	.dl sine_1_15_1
    5 D1:FAF5 39 -  -  -  	.db 57
    6 D1:FAF6 08 F6 D1 -  	.dl SG_GroundGrass + 20
    7 D1:FAF9 2D C8 D1 -  	.dl sine_2_1_3
    8 D1:FAFC 02 -  -  -  	.db 2
    9 D1:FAFD 16 F6 D1 -  	.dl SG_GroundGrass + 34
   10 D1:FB00 28 C8 D1 -  	.dl sine_2_1_2
   11 D1:FB03 04 -  -  -  	.db 4
   12 D1:FB04 20 F6 D1 -  	.dl SG_GroundGrass + 44
   13 D1:FB07 41 C8 D1 -  	.dl sine_4_1_3
   14 D1:FB0A 19 -  -  -  	.db 25
   15 D1:FB0B 2A F6 D1 -  	.dl SG_GroundGrass + 54
   16 D1:FB0E 50 C8 D1 -  	.dl sine_8_1_2
   17 D1:FB11 0A -  -  -  	.db 10
   18 D1:FB12 48 F6 D1 -  	.dl SG_Branch3 + 18
   19 D1:FB15 23 C8 D1 -  	.dl sine_2_1_1
   20 D1:FB18 05 -  -  -  	.db 5
   21 D1:FB19 90 F6 D1 -  	.dl SG_Branch7 + 60
   22 D1:FB1C 32 C8 D1 -  	.dl sine_2_1_4
   23 D1:FB1F 11 -  -  -  	.db 17
   24 D1:FB20 96 F6 D1 -  	.dl SG_Branch7 + 66
   25 D1:FB23 3C C8 D1 -  	.dl sine_4_1_2
   26 D1:FB26 10 -  -  -  	.db 16
   27 D1:FB27 9A F6 D1 -  	.dl SG_Branch7 + 70
   28 D1:FB2A 19 C8 D1 -  	.dl sine_1_1_3
   29 D1:FB2D 10 -  -  -  	.db 16
   30 D1:FB2E 9E F6 D1 -  	.dl SG_Branch7 + 74
   31 D1:FB31 37 C8 D1 -  	.dl sine_4_1_1
   32 D1:FB34 08 -  -  -  	.db 8
   33 D1:FB35 BA F6 D1 -  	.dl SG_Branch4 + 2
   34 D1:FB38 2C C8 D1 -  	.dl sine_2_3_3
   35 D1:FB3B 3F -  -  -  	.db 63
   36 D1:FB3C C0 F6 D1 -  	.dl SG_Branch4 + 8
   37 D1:FB3F 37 C8 D1 -  	.dl sine_4_1_1
   38 D1:FB42 0F -  -  -  	.db 15
   39 D1:FB43 CC F6 D1 -  	.dl SG_Branch4 + 20
   40 D1:FB46 37 C8 D1 -  	.dl sine_4_1_1
   41 D1:FB49 06 -  -  -  	.db 6
   42 D1:FB4A 1C F7 D1 -  	.dl SG_Branch5 + 14
   43 D1:FB4D 23 C8 D1 -  	.dl sine_2_1_1
   44 D1:FB50 09 -  -  -  	.db 9
   45 D1:FB51 46 F7 D1 -  	.dl SG_Branch5 + 56
   46 D1:FB54 2D C8 D1 -  	.dl sine_2_1_3
   47 D1:FB57 04 -  -  -  	.db 4
   48 D1:FB58 62 F7 D1 -  	.dl SG_Branch6 + 6
   49 D1:FB5B 2D C8 D1 -  	.dl sine_2_1_3
   50 D1:FB5E 00 -  -  -  	.db 0
   51 D1:FB5F 7A F7 D1 -  	.dl SG_Branch6 + 30
   52 D1:FB62 37 C8 D1 -  	.dl sine_4_1_1
   53 D1:FB65 0B -  -  -  	.db 11
   54 D1:FB66 8A F7 D1 -  	.dl SG_Branch6 + 46
   55 D1:FB69 3C C8 D1 -  	.dl sine_4_1_2
   56 D1:FB6C 0C -  -  -  	.db 12
   57 D1:FB6D 90 F7 D1 -  	.dl SG_Branch6 + 52
   58 D1:FB70 23 C8 D1 -  	.dl sine_2_1_1
   59 D1:FB73 1C -  -  -  	.db 28
   60 D1:FB74 94 F7 D1 -  	.dl SG_Branch2 + 2
   61 D1:FB77 37 C8 D1 -  	.dl sine_4_1_1
   62 D1:FB7A 00 -  -  -  	.db 0
   63 D1:FB7B 98 F7 D1 -  	.dl SG_Branch2 + 6
   64 D1:FB7E 28 C8 D1 -  	.dl sine_2_1_2
   65 D1:FB81 01 -  -  -  	.db 1
   66 D1:FB82 DA F7 D1 -  	.dl SG_Branch2 + 72
   67 D1:FB85 2D C8 D1 -  	.dl sine_2_1_3
   68 D1:FB88 0C -  -  -  	.db 12
   69 D1:FB89 D6 F8 D1 -  	.dl SG_Branch1 + 26
   70 D1:FB8C 41 C8 D1 -  	.dl sine_4_1_3
   71 D1:FB8F 00 -  -  -  	.db 0
   72 D1:FB90 EE F8 D1 -  	.dl SG_Branch1 + 50
   73 D1:FB93 3C C8 D1 -  	.dl sine_4_1_2
   74 D1:FB96 13 -  -  -  	.db 19
   75 D1:FB97 F8 F8 D1 -  	.dl SG_Branch1 + 60
   76 D1:FB9A 0F C8 D1 -  	.dl sine_1_1_1
   77 D1:FB9D 09 -  -  -  	.db 9
   78 D1:FB9E 12 F9 D1 -  	.dl SG_Vines6 + 6
   79 D1:FBA1 27 C8 D1 -  	.dl sine_2_3_2
   80 D1:FBA4 0F -  -  -  	.db 15
   81 D1:FBA5 16 F9 D1 -  	.dl SG_Vines6 + 10
   82 D1:FBA8 27 C8 D1 -  	.dl sine_2_3_2
   83 D1:FBAB 1F -  -  -  	.db 31
   84 D1:FBAC 1A F9 D1 -  	.dl SG_Vines6 + 14
   85 D1:FBAF 27 C8 D1 -  	.dl sine_2_3_2
   86 D1:FBB2 26 -  -  -  	.db 38
   87 D1:FBB3 1E F9 D1 -  	.dl SG_Vines6 + 18
   88 D1:FBB6 27 C8 D1 -  	.dl sine_2_3_2
   89 D1:FBB9 28 -  -  -  	.db 40
   90 D1:FBBA 24 F9 D1 -  	.dl SG_Vines7 + 2
   91 D1:FBBD 27 C8 D1 -  	.dl sine_2_3_2
   92 D1:FBC0 21 -  -  -  	.db 33
   93 D1:FBC1 28 F9 D1 -  	.dl SG_Vines7 + 6
   94 D1:FBC4 27 C8 D1 -  	.dl sine_2_3_2
   95 D1:FBC7 1F -  -  -  	.db 31
   96 D1:FBC8 2C F9 D1 -  	.dl SG_Vines7 + 10
   97 D1:FBCB 27 C8 D1 -  	.dl sine_2_3_2
   98 D1:FBCE 18 -  -  -  	.db 24
   99 D1:FBCF 30 F9 D1 -  	.dl SG_Vines7 + 14
  100 D1:FBD2 28 C8 D1 -  	.dl sine_2_1_2
  101 D1:FBD5 0F -  -  -  	.db 15
  102 D1:FBD6 3A F9 D1 -  	.dl SG_Vines5 + 2
  103 D1:FBD9 4B C8 D1 -  	.dl sine_8_1_1
  104 D1:FBDC 00 -  -  -  	.db 0
  105 D1:FBDD 3E F9 D1 -  	.dl SG_Vines5 + 6
  106 D1:FBE0 50 C8 D1 -  	.dl sine_8_1_2
  107 D1:FBE3 11 -  -  -  	.db 17
  108 D1:FBE4 42 F9 D1 -  	.dl SG_Vines5 + 10
  109 D1:FBE7 55 C8 D1 -  	.dl sine_8_1_3
  110 D1:FBEA 21 -  -  -  	.db 33
  111 D1:FBEB 46 F9 D1 -  	.dl SG_Vines5 + 14
  112 D1:FBEE 5A C8 D1 -  	.dl sine_8_1_4
  113 D1:FBF1 28 -  -  -  	.db 40
  114 D1:FBF2 4A F9 D1 -  	.dl SG_Vines5 + 18
  115 D1:FBF5 4B C8 D1 -  	.dl sine_8_1_1
  116 D1:FBF8 2A -  -  -  	.db 42
  117 D1:FBF9 4E F9 D1 -  	.dl SG_Vines5 + 22
  118 D1:FBFC 50 C8 D1 -  	.dl sine_8_1_2
  119 D1:FBFF 22 -  -  -  	.db 34
  120 D1:FC00 52 F9 D1 -  	.dl SG_Vines5 + 26
  121 D1:FC03 55 C8 D1 -  	.dl sine_8_1_3
  122 D1:FC06 21 -  -  -  	.db 33
  123 D1:FC07 56 F9 D1 -  	.dl SG_Vines5 + 30
  124 D1:FC0A 5A C8 D1 -  	.dl sine_8_1_4
  125 D1:FC0D 1A -  -  -  	.db 26
  126 D1:FC0E 5A F9 D1 -  	.dl SG_Vines5 + 34
  127 D1:FC11 4B C8 D1 -  	.dl sine_8_1_1
  128 D1:FC14 0C -  -  -  	.db 12
  129 D1:FC15 -  -  -  -  
  130 D1:FC15 -  -  -  -  
  131 D1:FC15 -  -  -  -  
  132 D1:FC15 -  -  -  -  sprite_animation_data:
  133 D1:FC15 05 -  -  -  	.db 5
  134 D1:FC16 A8 C8 D1 -  	.dl lin_4_7_4
  135 D1:FC19 0E -  -  -  	.db 14
  136 D1:FC1A 0F -  -  -  	.db 15
  137 D1:FC1B 10 -  -  -  	.db 16
  138 D1:FC1C 11 -  -  -  	.db 17
  139 D1:FC1D 0E -  -  -  	.db 14
  140 D1:FC1E 0F -  -  -  	.db 15
  141 D1:FC1F 0E -  -  -  	.db 14
  142 D1:FC20 11 -  -  -  	.db 17
  143 D1:FC21 4F F6 D1 -  	.dl SG_Branch3 + 25
  144 D1:FC24 FD C8 D1 -  	.dl linrep_4_7_1
  145 D1:FC27 1D -  -  -  	.db 29
  146 D1:FC28 1E -  -  -  	.db 30
  147 D1:FC29 1F -  -  -  	.db 31
  148 D1:FC2A 1E -  -  -  	.db 30
  149 D1:FC2B 1D -  -  -  	.db 29
  150 D1:FC2C 1E -  -  -  	.db 30
  151 D1:FC2D 1F -  -  -  	.db 31
  152 D1:FC2E 1E -  -  -  	.db 30
  153 D1:FC2F AB F6 D1 -  	.dl SG_Lantern1 + 5
  154 D1:FC32 FD C8 D1 -  	.dl linrep_4_7_1
  155 D1:FC35 20 -  -  -  	.db 32
  156 D1:FC36 21 -  -  -  	.db 33
  157 D1:FC37 22 -  -  -  	.db 34
  158 D1:FC38 21 -  -  -  	.db 33
  159 D1:FC39 20 -  -  -  	.db 32
  160 D1:FC3A 21 -  -  -  	.db 33
  161 D1:FC3B 22 -  -  -  	.db 34
  162 D1:FC3C 21 -  -  -  	.db 33
  163 D1:FC3D AF F6 D1 -  	.dl SG_Lantern1 + 9
  164 D1:FC40 9E C8 D1 -  	.dl lin_4_7_2
  165 D1:FC43 53 -  -  -  	.db 83
  166 D1:FC44 52 -  -  -  	.db 82
  167 D1:FC45 52 -  -  -  	.db 82
  168 D1:FC46 53 -  -  -  	.db 83
  169 D1:FC47 53 -  -  -  	.db 83
  170 D1:FC48 53 -  -  -  	.db 83
  171 D1:FC49 52 -  -  -  	.db 82
  172 D1:FC4A 53 -  -  -  	.db 83
  173 D1:FC4B 07 F9 D1 -  	.dl SG_Vines2 + 13
  174 D1:FC4E 9E C8 D1 -  	.dl lin_4_7_2
  175 D1:FC51 0F -  -  -  	.db 15
  176 D1:FC52 0F -  -  -  	.db 15
  177 D1:FC53 0E -  -  -  	.db 14
  178 D1:FC54 11 -  -  -  	.db 17
  179 D1:FC55 10 -  -  -  	.db 16
  180 D1:FC56 0E -  -  -  	.db 14
  181 D1:FC57 0F -  -  -  	.db 15
  182 D1:FC58 11 -  -  -  	.db 17
  183 D1:FC59 0B F9 D1 -  	.dl SG_Vines2 + 17
  184 D1:FC5C -  -  -  -  
  185 D1:FC5C -  -  -  -  
  186 D1:FC5C -  -  -  -  
  187 D1:FC5C -  -  -  -  breakaway_platform_data_0
  188 D1:FC5C 00 -  -  -  	.db 0
  189 D1:FC5D -  -  -  -  
  190 D1:FC5D -  -  -  -  
  191 D1:FC5D -  -  -  -  breakaway_platform_data_1
  192 D1:FC5D 00 -  -  -  	.db 0
  193 D1:FC5E -  -  -  -  
  194 D1:FC5E -  -  -  -  
  195 D1:FC5E -  -  -  -  breakaway_platform_data_2
  196 D1:FC5E 00 -  -  -  	.db 0
  197 D1:FC5F -  -  -  -  
  198 D1:FC5F -  -  -  -  
  199 D1:FC5F -  -  -  -  breakaway_platform_data_3
  200 D1:FC5F 00 -  -  -  	.db 0
  201 D1:FC60 -  -  -  -  
  202 D1:FC60 -  -  -  -  
  203 D1:FC60 -  -  -  -  breakaway_platform_data_4
  204 D1:FC60 00 -  -  -  	.db 0
  205 D1:FC61 -  -  -  -  
  206 D1:FC61 -  -  -  -  
  207 D1:FC61 -  -  -  -  breakaway_platform_data_5
  208 D1:FC61 00 -  -  -  	.db 0
  209 D1:FC62 -  -  -  -  
  210 D1:FC62 -  -  -  -  
  211 D1:FC62 -  -  -  -  breakaway_platform_data_6
  212 D1:FC62 00 -  -  -  	.db 0
  213 D1:FC63 -  -  -  -  
  214 D1:FC63 -  -  -  -  
  215 D1:FC63 -  -  -  -  breakaway_platform_data_7
  216 D1:FC63 00 -  -  -  	.db 0
  217 D1:FC64 -  -  -  -  
  218 D1:FC64 -  -  -  -  
  219 D1:FC64 -  -  -  -  breakaway_platform_data_8
  220 D1:FC64 00 -  -  -  	.db 0
  221 D1:FC65 -  -  -  -  
  222 D1:FC65 -  -  -  -  
  223 D1:FC65 -  -  -  -  breakaway_platform_data_9
  224 D1:FC65 00 -  -  -  	.db 0
  225 D1:FC66 -  -  -  -  
  226 D1:FC66 -  -  -  -  
  227 D1:FC66 -  -  -  -  breakaway_platform_data_10
  228 D1:FC66 00 -  -  -  	.db 0
  229 D1:FC67 -  -  -  -  
  230 D1:FC67 -  -  -  -  
  231 D1:FC67 -  -  -  -  breakaway_platform_data_11
  232 D1:FC67 00 -  -  -  	.db 0
  233 D1:FC68 -  -  -  -  
  234 D1:FC68 -  -  -  -  
  235 D1:FC68 -  -  -  -  breakaway_platform_data_12
  236 D1:FC68 00 -  -  -  	.db 0
  237 D1:FC69 -  -  -  -  
  238 D1:FC69 -  -  -  -  
  239 D1:FC69 -  -  -  -  breakaway_platform_data_13
  240 D1:FC69 00 -  -  -  	.db 0
  241 D1:FC6A -  -  -  -  
  242 D1:FC6A -  -  -  -  
  243 D1:FC6A -  -  -  -  breakaway_platform_data_14
  244 D1:FC6A 00 -  -  -  	.db 0
  245 D1:FC6B -  -  -  -  
  246 D1:FC6B -  -  -  -  
Listing for file "ascent.asm"
  622 D1:FC6B -  -  -  -  #include "generated/Tongue_Rings.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Tongue_Rings.txt"
    1 D1:FC6B -  -  -  -  Tongue_Rings:
    2 D1:FC6B 00 -  -  -  	.db 0
Listing for file "ascent.asm"
  623 D1:FC6C -  -  -  -  
  624 D1:FC6C -  -  -  -  ;#include "testing/SpriteGroups.txt"
  625 D1:FC6C -  -  -  -  ;#include "TestingSpriteData.txt"
  626 D1:FC6C -  -  -  -  ;#include "TestGeneratedSpriteData.txt"
  627 D1:FC6C -  -  -  -  ;#include "Sprite_Data.txt"
  628 D1:FC6C -  -  -  -  ;#include "FG_Data.txt"
  629 D1:FC6C -  -  -  -  ;#include "MG_Data.txt"
  630 D1:FC6C -  -  -  -  ;#include "BG_Data.txt"
  631 D1:FC6C -  -  -  -  ;#include "Palette_Setup.txt"
  632 D1:FC6C -  -  -  -  ;#include "Equates.txt"
  633 D1:FC6C -  -  -  -  ;#include "Decompress_Calls.txt"
  634 D1:FC6C -  -  -  -  ;#include "Sprite_Tables.txt"
  635 D1:FC6C -  -  -  -  ;#include "TestingBGData.txt"
  636 D1:FC6C -  -  -  -  ;#include "TestingFGData.txt"
  637 D1:FC6C -  -  -  -  
  638 D1:FC6C -  -  -  -  
