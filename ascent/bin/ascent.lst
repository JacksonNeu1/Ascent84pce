    1 00:0000 -  -  -  -  
    2 00:0000 -  -  -  -  #include "includes\ti84pce.inc"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\includes\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "ascent.asm"
    3 00:0000 -  -  -  -  
    4 00:0000 -  -  -  -   .assume ADL=1
    5 00:0000 -  -  -  -   .org userMem-2
    6 D1:A87F EF 7B -  -   .db tExtTok,tAsm84CeCmp
    7 D1:A881 -  -  -  -  
    8 D1:A881 -  -  -  -  
    9 D1:A881 -  -  -  -  
   10 D1:A881 -  -  -  -  ;0E30000h + 0200h
   11 D1:A881 -  -  -  -  
   12 D1:A881 CD 28 08 02 	call _homeup
   13 D1:A885 CD 10 08 02 	call _ClrScrnFull
   14 D1:A889 -  -  -  -  
   15 D1:A889 CD 48 08 02 	call _RunIndicOff		; turn off run indicator
   16 D1:A88D F3 -  -  -  	di			
   17 D1:A88E -  -  -  -  	
   18 D1:A88E -  -  -  -  	
   19 D1:A88E CD 0F D2 D1 	call setup_palette_1
   20 D1:A892 -  -  -  -  
   21 D1:A892 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255
   22 D1:A896 3E 25 -  -  	ld	a,lcdBpp4
   23 D1:A898 32 18 00 E3 	ld (mpLcdCtrl),a	
   24 D1:A89C -  -  -  -  
   25 D1:A89C -  -  -  -  
   26 D1:A89C -  -  -  -  
   27 D1:A89C -  -  -  -  
   28 D1:A89C -  -  -  -  	;call sdcomp_set_fast
   29 D1:A89C -  -  -  -  	;call sdcomp_set_flip
   30 D1:A89C -  -  -  -  	;call sdcomp_reset_offset
   31 D1:A89C -  -  -  -  	;ld hl, Tree_5 
   32 D1:A89C -  -  -  -  	;ld de, Tree_5_Fast_F_0
   33 D1:A89C -  -  -  -  	;call sdcomp_set_2bpc
   34 D1:A89C -  -  -  -  	;call sprite_decompress
   35 D1:A89C -  -  -  -  	
   36 D1:A89C -  -  -  -  	;call sdcomp_set_fast
   37 D1:A89C -  -  -  -  	;call sdcomp_reset_flip
   38 D1:A89C -  -  -  -  	;call sdcomp_reset_offset
   39 D1:A89C -  -  -  -  	;ld hl, Moss_0 
   40 D1:A89C -  -  -  -  	;ld de, Moss_0_Fast_0
   41 D1:A89C -  -  -  -  	;call sprite_decompress
   42 D1:A89C -  -  -  -  	
   43 D1:A89C -  -  -  -  	;call prgmpause
   44 D1:A89C -  -  -  -  	;call prgmpause
   45 D1:A89C -  -  -  -  
   46 D1:A89C 21 00 00 00 	ld hl,0
   47 D1:A8A0 22 D2 AB D1 	ld (cam_pos),hl
   48 D1:A8A4 22 D5 AB D1 	ld (bg_cam_pos),hl
   49 D1:A8A8 -  -  -  -  	
   50 D1:A8A8 -  -  -  -  	
   51 D1:A8A8 3E 02 -  -  	ld a,%00000010;disable, 32768hz
   52 D1:A8AA 32 30 00 F2 	ld ($F20030),a	
   53 D1:A8AE -  -  -  -  	
   54 D1:A8AE CD 91 B8 D1 	call setup_decompress_queue
   55 D1:A8B2 -  -  -  -  	
   56 D1:A8B2 -  -  -  -  	;Decompress sprites in preframes for setup
   57 D1:A8B2 21 D7 CA D1 	ld hl,decompress_frame_up_pre2 
   58 D1:A8B6 CD 97 B9 D1 	call cfdc_direct_add_decompress_frame
   59 D1:A8BA CD DE B8 D1 	call continue_decompressions ;Run decompression (Will finish as timer has not started)
   60 D1:A8BE 21 D8 CA D1 	ld hl,decompress_frame_up_pre1
   61 D1:A8C2 CD 97 B9 D1 	call cfdc_direct_add_decompress_frame
   62 D1:A8C6 CD DE B8 D1 	call continue_decompressions ;Run decompression (Will finish as timer has not started)
   63 D1:A8CA -  -  -  -  	
   64 D1:A8CA -  -  -  -  	;call draw_fg
   65 D1:A8CA -  -  -  -  	
   66 D1:A8CA 3E 00 -  -  	ld a,0
   67 D1:A8CC CD 89 B9 D1 	call cfdc_cam_move_up ;need to skip here for frame 0
   68 D1:A8D0 -  -  -  -  	
   69 D1:A8D0 -  -  -  -  	;call prgmpause
   70 D1:A8D0 -  -  -  -  
   71 D1:A8D0 CD DE B8 D1 	call continue_decompressions
   72 D1:A8D4 -  -  -  -  	
   73 D1:A8D4 -  -  -  -  	;call prgmpause
   74 D1:A8D4 00 -  -  -  	nop ;This needs to be here for some reason
   75 D1:A8D5 -  -  -  -  ;	call decompress_calls
   76 D1:A8D5 -  -  -  -  	
   77 D1:A8D5 -  -  -  -  
   78 D1:A8D5 -  -  -  -  	
   79 D1:A8D5 -  -  -  -  	;gen purp timers
   80 D1:A8D5 -  -  -  -  		; 76543210	
   81 D1:A8D5 3E 03 -  -  	ld a,%00000011;enable, 32768hz
   82 D1:A8D7 32 30 00 F2 	ld ($F20030),a
   83 D1:A8DB -  -  -  -  	;	  fedcba98
   84 D1:A8DB 3E 02 -  -  	ld a,%00000010;count up
   85 D1:A8DD 32 31 00 F2 	ld ($F20031),a
   86 D1:A8E1 -  -  -  -  	
   87 D1:A8E1 21 00 2C D5 	ld hl,vRam + (160*240*2)
   88 D1:A8E5 22 D8 AB D1 	ld (draw_buffer),hl
   89 D1:A8E9 21 00 C2 D5 	ld hl,vRam + (160*240*3)
   90 D1:A8ED 22 10 00 E3 	ld (mpLcdBase),hl
   91 D1:A8F1 -  -  -  -  	
   92 D1:A8F1 -  -  -  -  	
   93 D1:A8F1 21 00 43 00 	ld hl,$004300
   94 D1:A8F5 22 F5 BE D1 	ld (player_x_pos),hl 
   95 D1:A8F9 21 00 EE 02 	ld hl,$02EE00
   96 D1:A8FD 22 F8 BE D1 	ld (player_y_pos),hl 
   97 D1:A901 -  -  -  -  	
   98 D1:A901 -  -  -  -  
   99 D1:A901 -  -  -  -  	;ld hl,BG_buffer+(160*5)
  100 D1:A901 -  -  -  -  	;ld (dbgl_vram_line_start),hl
  101 D1:A901 -  -  -  -  
  102 D1:A901 -  -  -  -  	;ld hl,BG_Data_1
  103 D1:A901 -  -  -  -  	;ld a,10
  104 D1:A901 -  -  -  -  	;call draw_bg_line
  105 D1:A901 -  -  -  -  	
  106 D1:A901 -  -  -  -  	
  107 D1:A901 -  -  -  -  	;call prgmpause
  108 D1:A901 -  -  -  -  
  109 D1:A901 -  -  -  -  	;call draw_mg
  110 D1:A901 -  -  -  -  
  111 D1:A901 CD 2B AD D1 	call setup_bg ;after initial decompressions and cam setup
  112 D1:A905 -  -  -  -  	;call prgmpause
  113 D1:A905 -  -  -  -  	;call prgmpause
  114 D1:A905 -  -  -  -  main_loop:
  115 D1:A905 -  -  -  -  
  116 D1:A905 -  -  -  -  	
  117 D1:A905 -  -  -  -  
  118 D1:A905 -  -  -  -  	;clear timer
  119 D1:A905 3E 00 -  -  	ld a,0
  120 D1:A907 32 00 00 F2 	ld ($F20000),a;32768hz
  121 D1:A90B 32 01 00 F2 	ld ($F20001),a;128hz
  122 D1:A90F 32 02 00 F2 	ld ($F20002),a;0.5hz
  123 D1:A913 32 03 00 F2 	ld ($F20003),a
  124 D1:A917 -  -  -  -  	
  125 D1:A917 -  -  -  -  	;Instructions here 
  126 D1:A917 -  -  -  -  	
  127 D1:A917 -  -  -  -  	
  128 D1:A917 -  -  -  -  	;call input_cam_up
  129 D1:A917 C3 B7 B9 D1 	jp get_inputs
  130 D1:A91B -  -  -  -  get_inputs_return:
  131 D1:A91B -  -  -  -  	;call move_bg Draw BG calls MoveBg
  132 D1:A91B -  -  -  -  	;call player_move_debug
  133 D1:A91B CD 8D BA D1 	call player_update
  134 D1:A91F CD 9B BC D1 	call check_collisions
  135 D1:A923 -  -  -  -  	
  136 D1:A923 CD 89 BF D1 	call update_sine_vals
  137 D1:A927 3A 5C C1 D1 	ld a,(lin_4_7_1)
  138 D1:A92B -  -  -  -  	;call write_a_to_ram
  139 D1:A92B -  -  -  -  	
  140 D1:A92B CD E6 C2 D1 	call update_animations
  141 D1:A92F -  -  -  -  	
  142 D1:A92F -  -  -  -  	
  143 D1:A92F CD 3B AC D1 	call draw_bg
  144 D1:A933 -  -  -  -  
  145 D1:A933 -  -  -  -  	
  146 D1:A933 -  -  -  -  	
  147 D1:A933 -  -  -  -  	;TEsting
  148 D1:A933 21 00 00 00 	ld hl,0
  149 D1:A937 3A 00 00 F2 	ld a,($F20000);32768hz
  150 D1:A93B 6F -  -  -  	ld l,a
  151 D1:A93C 3A 01 00 F2 	ld a,($F20001);128hz 
  152 D1:A940 67 -  -  -  	ld h,a
  153 D1:A941 CB 3C -  -  	srl h ;div by 8
  154 D1:A943 CB 1D -  -  	rr l 
  155 D1:A945 CB 3C -  -  	srl h
  156 D1:A947 CB 1D -  -  	rr l 
  157 D1:A949 CB 3C -  -  	srl h
  158 D1:A94B CB 1D -  -  	rr l 
  159 D1:A94D 7D -  -  -  	ld a,l
  160 D1:A94E 32 DF AB D1 	ld (draw_bg_time),a
  161 D1:A952 -  -  -  -  	
  162 D1:A952 -  -  -  -  	;TEST CLEAR BUFFER
  163 D1:A952 -  -  -  -  	;ld hl,BG_buffer
  164 D1:A952 -  -  -  -  	;ld de,(draw_buffer)
  165 D1:A952 -  -  -  -  	;ld bc, 160*240
  166 D1:A952 -  -  -  -  	;ldir
  167 D1:A952 -  -  -  -  	
  168 D1:A952 CD 43 B5 D1 	call draw_mg
  169 D1:A956 -  -  -  -  	
  170 D1:A956 CD 61 B5 D1 	call draw_mg2
  171 D1:A95A -  -  -  -  	
  172 D1:A95A -  -  -  -  	
  173 D1:A95A CD DD BB D1 	call player_draw 
  174 D1:A95E -  -  -  -  	
  175 D1:A95E -  -  -  -  	;TEsting
  176 D1:A95E 21 00 00 00 	ld hl,0
  177 D1:A962 3A 00 00 F2 	ld a,($F20000);32768hz
  178 D1:A966 6F -  -  -  	ld l,a
  179 D1:A967 3A 01 00 F2 	ld a,($F20001);128hz 
  180 D1:A96B 67 -  -  -  	ld h,a
  181 D1:A96C CB 3C -  -  	srl h ;div by 8
  182 D1:A96E CB 1D -  -  	rr l 
  183 D1:A970 CB 3C -  -  	srl h
  184 D1:A972 CB 1D -  -  	rr l 
  185 D1:A974 CB 3C -  -  	srl h
  186 D1:A976 CB 1D -  -  	rr l 
  187 D1:A978 7D -  -  -  	ld a,l
  188 D1:A979 32 E0 AB D1 	ld (draw_mg_time),a
  189 D1:A97D -  -  -  -  	
  190 D1:A97D CD 7F B5 D1 	call draw_fg
  191 D1:A981 -  -  -  -  	;Leaves_4_Slow_1 has issue
  192 D1:A981 -  -  -  -  	;Need to fix indexing of decompress segments
  193 D1:A981 -  -  -  -  	
  194 D1:A981 -  -  -  -  	;Sprite groups must all use the same load index of a given sprite, as they pull from same data
  195 D1:A981 -  -  -  -  	
  196 D1:A981 -  -  -  -  	
  197 D1:A981 -  -  -  -  	
  198 D1:A981 -  -  -  -  	;TEsting
  199 D1:A981 21 00 00 00 	ld hl,0
  200 D1:A985 3A 00 00 F2 	ld a,($F20000);32768hz
  201 D1:A989 6F -  -  -  	ld l,a
  202 D1:A98A 3A 01 00 F2 	ld a,($F20001);128hz 
  203 D1:A98E 67 -  -  -  	ld h,a
  204 D1:A98F CB 3C -  -  	srl h ;div by 8
  205 D1:A991 CB 1D -  -  	rr l 
  206 D1:A993 CB 3C -  -  	srl h
  207 D1:A995 CB 1D -  -  	rr l 
  208 D1:A997 CB 3C -  -  	srl h
  209 D1:A999 CB 1D -  -  	rr l 
  210 D1:A99B 7D -  -  -  	ld a,l
  211 D1:A99C 32 E1 AB D1 	ld (draw_fg_time),a
  212 D1:A9A0 -  -  -  -  	
  213 D1:A9A0 21 00 00 00 	ld hl,0
  214 D1:A9A4 -  -  -  -  	
  215 D1:A9A4 -  -  -  -  	; for debug longest frame draw time
  216 D1:A9A4 3A 00 00 F2 	ld a,($F20000)
  217 D1:A9A8 6F -  -  -  	ld l,a
  218 D1:A9A9 3A 01 00 F2 	ld a,($F20001);128hz 
  219 D1:A9AD 67 -  -  -  	ld h,a
  220 D1:A9AE E5 -  -  -  	push hl
  221 D1:A9AF ED 4B E3 AB 
              D1 -  -  -  	ld bc,(longestFrame)
  222 D1:A9B4 ED 42 -  -  	sbc hl,bc 
  223 D1:A9B6 DA C8 A9 D1 	jp c,longest_frame_skip
  224 D1:A9BA -  -  -  -  	
  225 D1:A9BA E1 -  -  -  	pop hl 
  226 D1:A9BB E5 -  -  -  	push hl 
  227 D1:A9BC 22 E3 AB D1 	ld (longestFrame),hl 
  228 D1:A9C0 2A D2 AB D1 	ld hl,(cam_pos)
  229 D1:A9C4 22 E6 AB D1 	ld (longestFramePos),hl
  230 D1:A9C8 -  -  -  -  longest_frame_skip:
  231 D1:A9C8 E1 -  -  -  	pop hl 
  232 D1:A9C9 -  -  -  -  	
  233 D1:A9C9 -  -  -  -  	;Add to frame counter
  234 D1:A9C9 2A EC AB D1 	ld hl,(frameCount)
  235 D1:A9CD 23 -  -  -  	inc hl
  236 D1:A9CE 22 EC AB D1 	ld (frameCount),hl
  237 D1:A9D2 -  -  -  -  	
  238 D1:A9D2 -  -  -  -  
  239 D1:A9D2 -  -  -  -  	
  240 D1:A9D2 -  -  -  -  	;check if lcd has drawn first frame
  241 D1:A9D2 -  -  -  -  
  242 D1:A9D2 CD 6E B9 D1 	call check_for_decompress_calls
  243 D1:A9D6 -  -  -  -  	;Sprite decompression will occur here
  244 D1:A9D6 CD DE B8 D1 	call continue_decompressions
  245 D1:A9DA -  -  -  -  	
  246 D1:A9DA -  -  -  -  	;TEsting
  247 D1:A9DA 21 00 00 00 	ld hl,0
  248 D1:A9DE 3A 00 00 F2 	ld a,($F20000);32768hz
  249 D1:A9E2 6F -  -  -  	ld l,a
  250 D1:A9E3 3A 01 00 F2 	ld a,($F20001);128hz 
  251 D1:A9E7 67 -  -  -  	ld h,a
  252 D1:A9E8 CB 3C -  -  	srl h ;div by 8
  253 D1:A9EA CB 1D -  -  	rr l 
  254 D1:A9EC CB 3C -  -  	srl h
  255 D1:A9EE CB 1D -  -  	rr l 
  256 D1:A9F0 CB 3C -  -  	srl h
  257 D1:A9F2 CB 1D -  -  	rr l 
  258 D1:A9F4 7D -  -  -  	ld a,l
  259 D1:A9F5 32 E2 AB D1 	ld (decompress_time),a
  260 D1:A9F9 -  -  -  -  
  261 D1:A9F9 -  -  -  -  
  262 D1:A9F9 -  -  -  -  	
  263 D1:A9F9 -  -  -  -  
  264 D1:A9F9 -  -  -  -  	;Draw time bar at top of screen 
  265 D1:A9F9 2A D8 AB D1 	ld hl, (draw_buffer)
  266 D1:A9FD 01 00 00 00 	ld bc,0 
  267 D1:AA01 3A E2 AB D1 	ld a,(decompress_time)
  268 D1:AA05 4F -  -  -  	ld c,a 
  269 D1:AA06 3E 55 -  -  	ld a, $55
  270 D1:AA08 CD E0 10 02 	call _MemSet
  271 D1:AA0C -  -  -  -  	
  272 D1:AA0C 2A D8 AB D1 	ld hl, (draw_buffer)
  273 D1:AA10 01 00 00 00 	ld bc,0 
  274 D1:AA14 3A E1 AB D1 	ld a,(draw_fg_time)
  275 D1:AA18 4F -  -  -  	ld c,a 
  276 D1:AA19 3E 44 -  -  	ld a, $44
  277 D1:AA1B CD E0 10 02 	call _MemSet
  278 D1:AA1F -  -  -  -  	
  279 D1:AA1F 2A D8 AB D1 	ld hl, (draw_buffer)
  280 D1:AA23 01 00 00 00 	ld bc,0 
  281 D1:AA27 3A E0 AB D1 	ld a,(draw_mg_time)
  282 D1:AA2B 4F -  -  -  	ld c,a 
  283 D1:AA2C 3E 33 -  -  	ld a, $33
  284 D1:AA2E CD E0 10 02 	call _MemSet
  285 D1:AA32 -  -  -  -  
  286 D1:AA32 2A D8 AB D1 	ld hl, (draw_buffer)
  287 D1:AA36 01 00 00 00 	ld bc,0 
  288 D1:AA3A 3A DF AB D1 	ld a,(draw_bg_time)
  289 D1:AA3E 4F -  -  -  	ld c,a 
  290 D1:AA3F 3E 22 -  -  	ld a, $22
  291 D1:AA41 CD E0 10 02 	call _MemSet
  292 D1:AA45 -  -  -  -  	
  293 D1:AA45 -  -  -  -  
  294 D1:AA45 2A D8 AB D1 	ld hl, (draw_buffer)
  295 D1:AA49 -  -  -  -  	;max time = 00000011 11100010
  296 D1:AA49 -  -  -  -  	;after 3x shift, a = 011111000 = 120
  297 D1:AA49 01 78 00 00 	ld bc, 120  ; =1000/4 /2 for 2pix/bit 
  298 D1:AA4D 09 -  -  -  	add hl,bc 
  299 D1:AA4E 3E 55 -  -  	ld a,$55
  300 D1:AA50 77 -  -  -  	ld (hl),a 
  301 D1:AA51 -  -  -  -  	
  302 D1:AA51 -  -  -  -  	
  303 D1:AA51 -  -  -  -  	;Again for thick line
  304 D1:AA51 -  -  -  -  	
  305 D1:AA51 2A D8 AB D1 	ld hl, (draw_buffer)
  306 D1:AA55 01 A0 00 00 	ld bc,160
  307 D1:AA59 09 -  -  -  	add hl,bc 
  308 D1:AA5A 3A E2 AB D1 	ld a,(decompress_time)
  309 D1:AA5E 4F -  -  -  	ld c,a 
  310 D1:AA5F 3E 55 -  -  	ld a, $55
  311 D1:AA61 CD E0 10 02 	call _MemSet
  312 D1:AA65 -  -  -  -  	
  313 D1:AA65 2A D8 AB D1 	ld hl, (draw_buffer)
  314 D1:AA69 01 A0 00 00 	ld bc,160
  315 D1:AA6D 09 -  -  -  	add hl,bc 
  316 D1:AA6E 3A E1 AB D1 	ld a,(draw_fg_time)
  317 D1:AA72 4F -  -  -  	ld c,a 
  318 D1:AA73 3E 44 -  -  	ld a, $44
  319 D1:AA75 CD E0 10 02 	call _MemSet
  320 D1:AA79 -  -  -  -  	
  321 D1:AA79 2A D8 AB D1 	ld hl, (draw_buffer)
  322 D1:AA7D 01 A0 00 00 	ld bc,160
  323 D1:AA81 09 -  -  -  	add hl,bc
  324 D1:AA82 3A E0 AB D1 	ld a,(draw_mg_time)
  325 D1:AA86 4F -  -  -  	ld c,a 
  326 D1:AA87 3E 33 -  -  	ld a, $33
  327 D1:AA89 CD E0 10 02 	call _MemSet
  328 D1:AA8D -  -  -  -  
  329 D1:AA8D 2A D8 AB D1 	ld hl, (draw_buffer)
  330 D1:AA91 01 A0 00 00 	ld bc,160
  331 D1:AA95 09 -  -  -  	add hl,bc
  332 D1:AA96 3A DF AB D1 	ld a,(draw_bg_time)
  333 D1:AA9A 4F -  -  -  	ld c,a 
  334 D1:AA9B 3E 22 -  -  	ld a, $22
  335 D1:AA9D CD E0 10 02 	call _MemSet
  336 D1:AAA1 -  -  -  -  	
  337 D1:AAA1 2A D8 AB D1 	ld hl, (draw_buffer)
  338 D1:AAA5 01 18 01 00 	ld bc,280
  339 D1:AAA9 09 -  -  -  	add hl,bc 
  340 D1:AAAA 3E 55 -  -  	ld a,$55
  341 D1:AAAC 77 -  -  -  	ld (hl),a 
  342 D1:AAAD -  -  -  -  	
  343 D1:AAAD -  -  -  -  	
  344 D1:AAAD -  -  -  -  
  345 D1:AAAD -  -  -  -  
  346 D1:AAAD -  -  -  -  	
  347 D1:AAAD -  -  -  -  
  348 D1:AAAD -  -  -  -  	;swap draw buffers
  349 D1:AAAD 2A 10 00 E3 	ld hl,(mpLcdBase)
  350 D1:AAB1 ED 5B D8 AB 
              D1 -  -  -  	ld de,(draw_buffer)
  351 D1:AAB6 ED 53 10 00 
              E3 -  -  -  	ld (mpLcdBase),de
  352 D1:AABB 22 D8 AB D1 	ld (draw_buffer),hl
  353 D1:AABF -  -  -  -  
  354 D1:AABF -  -  -  -  
  355 D1:AABF -  -  -  -  	;wait until finished drawing second frame
  356 D1:AABF -  -  -  -  	;Need to check clock here, there wont always be decompression to wait for
  357 D1:AABF -  -  -  -  	;Max time = 00000011 11000000
  358 D1:AABF -  -  -  -  main_clock_check_loop:
  359 D1:AABF 3A 01 00 F2 	ld a,($F20001);128hz clock
  360 D1:AAC3 FE 03 -  -  	cp %00000011 ;check if reached 4 
  361 D1:AAC5 DA BF AA D1 	jp c,main_clock_check_loop ;msb <= 2, can continue  
  362 D1:AAC9 3A 00 00 F2 	ld a,($F20000);32768hz clock
  363 D1:AACD FE E0 -  -  	cp %11100000;check if reached value 
  364 D1:AACF DA BF AA D1 	jp c,main_clock_check_loop ;msb = 3 and lsb < value, can continue
  365 D1:AAD3 -  -  -  -  	
  366 D1:AAD3 -  -  -  -  
  367 D1:AAD3 -  -  -  -  
  368 D1:AAD3 -  -  -  -  clear_int:      
  369 D1:AAD3 21 28 00 E3     ld hl, mpLcdIcr
  370 D1:AAD7 CB D6 -  -      set 2, (hl)            ; clear interrupt
  371 D1:AAD9 21 20 00 E3     ld hl, mpLcdRis
  372 D1:AADD -  -  -  -  wait_int:
  373 D1:AADD CB 56 -  -      bit 2, (hl)
  374 D1:AADF 28 FC -  -      jr z, wait_int  
  375 D1:AAE1 -  -  -  -  
  376 D1:AAE1 -  -  -  -  
  377 D1:AAE1 21 00 00 00 	ld hl,0
  378 D1:AAE5 -  -  -  -  	
  379 D1:AAE5 3A 02 00 F2 	ld a,($F20002)
  380 D1:AAE9 67 -  -  -  	ld h,a
  381 D1:AAEA 3A 01 00 F2 	ld a,($F20001)
  382 D1:AAEE 6F -  -  -  	ld l,a
  383 D1:AAEF ED 4B E9 AB 
              D1 -  -  -  	ld bc,(totalTime)
  384 D1:AAF4 09 -  -  -  	add hl,bc 
  385 D1:AAF5 22 E9 AB D1 	ld (totalTime),hl 
  386 D1:AAF9 -  -  -  -  	
  387 D1:AAF9 -  -  -  -  	
  388 D1:AAF9 -  -  -  -  	
  389 D1:AAF9 -  -  -  -  	
  390 D1:AAF9 -  -  -  -  
  391 D1:AAF9 -  -  -  -  	
  392 D1:AAF9 -  -  -  -  
  393 D1:AAF9 C2 05 A9 D1 	jp nz,main_loop
  394 D1:AAFD -  -  -  -  		
  395 D1:AAFD -  -  -  -  	;print debug times 
  396 D1:AAFD 21 00 00 D4 	ld hl,vRam
  397 D1:AB01 22 10 00 E3 	ld (mpLcdBase),hl
  398 D1:AB05 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  399 D1:AB09 3E 2D -  -  	ld	a,lcdBpp16
  400 D1:AB0B 32 18 00 E3 	ld (mpLcdCtrl),a
  401 D1:AB0F -  -  -  -  	
  402 D1:AB0F 3E 00 -  -  	ld a,0
  403 D1:AB11 32 95 05 D0 	ld (curRow),a
  404 D1:AB15 32 96 05 D0 	ld (curCol),a
  405 D1:AB19 2A E3 AB D1 	ld hl,(longestFrame)
  406 D1:AB1D CD E0 1E 02 	call _DispHL
  407 D1:AB21 3E 01 -  -  	ld a,1
  408 D1:AB23 32 95 05 D0 	ld (curRow),a
  409 D1:AB27 3E 00 -  -  	ld a,0
  410 D1:AB29 32 96 05 D0 	ld (curCol),a
  411 D1:AB2D 2A E6 AB D1 	ld hl,(longestFramePos)
  412 D1:AB31 CD E0 1E 02 	call _DispHL
  413 D1:AB35 3E 02 -  -  	ld a,2
  414 D1:AB37 32 95 05 D0 	ld (curRow),a
  415 D1:AB3B 3E 00 -  -  	ld a,0
  416 D1:AB3D 32 96 05 D0 	ld (curCol),a
  417 D1:AB41 2A E9 AB D1 	ld hl,(totalTime)
  418 D1:AB45 CD E0 1E 02 	call _DispHL
  419 D1:AB49 3E 03 -  -  	ld a,3
  420 D1:AB4B 32 95 05 D0 	ld (curRow),a
  421 D1:AB4F 3E 00 -  -  	ld a,0
  422 D1:AB51 32 96 05 D0 	ld (curCol),a
  423 D1:AB55 2A EC AB D1 	ld hl,(frameCount)
  424 D1:AB59 CD E0 1E 02 	call _DispHL
  425 D1:AB5D -  -  -  -  	
  426 D1:AB5D CD C1 AB D1 	call prgmpause
  427 D1:AB61 CD C1 AB D1 	call prgmpause
  428 D1:AB65 -  -  -  -  	
  429 D1:AB65 -  -  -  -  	
  430 D1:AB65 -  -  -  -  exit_prgm:
  431 D1:AB65 21 00 00 D4 	ld hl,vRam
  432 D1:AB69 22 10 00 E3 	ld (mpLcdBase),hl
  433 D1:AB6D CD 10 08 02 	call _ClrScrnFull
  434 D1:AB71 3E 2D -  -  	ld	a,lcdBpp16
  435 D1:AB73 32 18 00 E3 	ld	(mpLcdCtrl),a
  436 D1:AB77 CD 3C 1A 02 	call _DrawStatusBar
  437 D1:AB7B -  -  -  -  	
  438 D1:AB7B FB -  -  -  	ei				; reset screen back to normal
  439 D1:AB7C C9 -  -  -  	ret			; return to os
  440 D1:AB7D -  -  -  -  
  441 D1:AB7D -  -  -  -  
  442 D1:AB7D -  -  -  -  printHL:;=================REMOVE
  443 D1:AB7D E5 -  -  -  	push hl
  444 D1:AB7E 21 00 00 D4 	ld hl,vRam
  445 D1:AB82 22 10 00 E3 	ld (mpLcdBase),hl
  446 D1:AB86 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  447 D1:AB8A 3E 2D -  -  	ld	a,lcdBpp16
  448 D1:AB8C 32 18 00 E3 	ld (mpLcdCtrl),a
  449 D1:AB90 E1 -  -  -  	pop hl
  450 D1:AB91 CD E0 1E 02 	call _DispHL
  451 D1:AB95 FB -  -  -  	ei
  452 D1:AB96 CD 8C 0D 02 	call _GetKey
  453 D1:AB9A F3 -  -  -  	di
  454 D1:AB9B C3 65 AB D1 	jp exit_prgm
  455 D1:AB9F -  -  -  -  
  456 D1:AB9F -  -  -  -  
  457 D1:AB9F -  -  -  -  write_a_to_ram:
  458 D1:AB9F F5 -  -  -  	push af 
  459 D1:ABA0 E5 -  -  -  	push hl 
  460 D1:ABA1 -  -  -  -  write_a_to_ram_addr .equ $ + 1 
  461 D1:ABA1 21 00 60 D4 	ld hl, $d46000
  462 D1:ABA5 77 -  -  -  	ld (hl),a 
  463 D1:ABA6 23 -  -  -  	inc hl 
  464 D1:ABA7 22 A2 AB D1 	ld (write_a_to_ram_addr),hl 
  465 D1:ABAB E1 -  -  -  	pop hl 
  466 D1:ABAC F1 -  -  -  	pop af 
  467 D1:ABAD C9 -  -  -  	ret 
  468 D1:ABAE -  -  -  -  	
  469 D1:ABAE -  -  -  -  write_hl_to_ram:
  470 D1:ABAE E5 -  -  -  	push hl 
  471 D1:ABAF D5 -  -  -  	push de 
  472 D1:ABB0 EB -  -  -  	ex de,hl
  473 D1:ABB1 2A A2 AB D1 	ld hl,(write_a_to_ram_addr)
  474 D1:ABB5 ED 1F -  -  	ld (hl),de 
  475 D1:ABB7 23 -  -  -  	inc hl
  476 D1:ABB8 23 -  -  -  	inc hl
  477 D1:ABB9 23 -  -  -  	inc hl
  478 D1:ABBA 22 A2 AB D1 	ld (write_a_to_ram_addr),hl
  479 D1:ABBE D1 -  -  -  	pop de 
  480 D1:ABBF E1 -  -  -  	pop hl
  481 D1:ABC0 C9 -  -  -  	ret 
  482 D1:ABC1 -  -  -  -  
  483 D1:ABC1 -  -  -  -  prgmpause: ;for testing, interrupts code until key pressed. will destroy af register
  484 D1:ABC1 F5 -  -  -  	push af
  485 D1:ABC2 D5 -  -  -  	push de 
  486 D1:ABC3 E5 -  -  -  	push hl 
  487 D1:ABC4 08 -  -  -  	ex af,af';'
  488 D1:ABC5 F5 -  -  -  	push af 
  489 D1:ABC6 FB -  -  -  	ei
  490 D1:ABC7 CD 8C 0D 02 	call _GetKey
  491 D1:ABCB F3 -  -  -  	di
  492 D1:ABCC F1 -  -  -  	pop af 
  493 D1:ABCD 08 -  -  -  	ex af,af';'
  494 D1:ABCE E1 -  -  -  	pop hl 
  495 D1:ABCF D1 -  -  -  	pop de 
  496 D1:ABD0 F1 -  -  -  	pop af
  497 D1:ABD1 C9 -  -  -  	ret
  498 D1:ABD2 -  -  -  -  
  499 D1:ABD2 -  -  -  -  cam_pos:;y position of lowest visible line in fg layer
  500 D1:ABD2 00 00 00 -  	.dl 0
  501 D1:ABD5 -  -  -  -  bg_cam_pos: ;y position of lowest visible line in bg layer (= cam pos / 8)
  502 D1:ABD5 00 00 00 -  	.dl 0
  503 D1:ABD8 -  -  -  -  
  504 D1:ABD8 -  -  -  -  
  505 D1:ABD8 -  -  -  -  draw_buffer:;where new frame is drawn before lcd pointer is swapped 
  506 D1:ABD8 00 2C D5 -  	.dl $d52c00
  507 D1:ABDB -  -  -  -  	
  508 D1:ABDB -  -  -  -  BG_draw_buffer: ;Address of the uppermost line of the background buffer. This is where new lines of bg are drawn to 
  509 D1:ABDB 00 00 00 -  	.dl 0
  510 D1:ABDE -  -  -  -  BG_buffer .equ vram + (160*240) ;Start of BG buffer 
  511 D1:ABDE -  -  -  -  
  512 D1:ABDE -  -  -  -  
  513 D1:ABDE -  -  -  -  ;d40000 = Decompressed sprite data
  514 D1:ABDE -  -  -  -  ;d49600 = BG buffer
  515 D1:ABDE -  -  -  -  ;d52c00 = Frame draw buffer 1 
  516 D1:ABDE -  -  -  -  ;d5c200 = frame draw buffer 2
  517 D1:ABDE -  -  -  -  
  518 D1:ABDE -  -  -  -  ;pixelShadow .equ $D031F6 
  519 D1:ABDE -  -  -  -  
  520 D1:ABDE -  -  -  -  move_bg_time:
  521 D1:ABDE 00 -  -  -  	.db 0
  522 D1:ABDF -  -  -  -  draw_bg_time:
  523 D1:ABDF 00 -  -  -  	.db 0
  524 D1:ABE0 -  -  -  -  draw_mg_time:
  525 D1:ABE0 00 -  -  -  	.db 0
  526 D1:ABE1 -  -  -  -  draw_fg_time:
  527 D1:ABE1 00 -  -  -  	.db 0
  528 D1:ABE2 -  -  -  -  decompress_time:
  529 D1:ABE2 00 -  -  -  	.db 0
  530 D1:ABE3 -  -  -  -  
  531 D1:ABE3 -  -  -  -  
  532 D1:ABE3 -  -  -  -  longestFrame:
  533 D1:ABE3 00 00 00 -  	.dl 0
  534 D1:ABE6 -  -  -  -  longestFramePos:
  535 D1:ABE6 00 00 00 -  	.dl 0
  536 D1:ABE9 -  -  -  -  totalTime:
  537 D1:ABE9 00 00 00 -  	.dl 0
  538 D1:ABEC -  -  -  -  frameCount:
  539 D1:ABEC 00 00 00 -  	.dl 0
  540 D1:ABEF -  -  -  -  hasLagged:
  541 D1:ABEF 00 00 00 -  	.dl 0
  542 D1:ABF2 -  -  -  -  
  543 D1:ABF2 -  -  -  -  sd_test_a:
  544 D1:ABF2 00 00 00 -  	.dl 0 
  545 D1:ABF5 -  -  -  -  
  546 D1:ABF5 -  -  -  -  
  547 D1:ABF5 -  -  -  -  
  548 D1:ABF5 -  -  -  -  
  549 D1:ABF5 -  -  -  -  
  550 D1:ABF5 -  -  -  -  
  551 D1:ABF5 -  -  -  -  #include "timeTesting.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\timeTesting.txt"
    1 D1:ABF5 -  -  -  -  
    2 D1:ABF5 -  -  -  -  
    3 D1:ABF5 -  -  -  -  
    4 D1:ABF5 -  -  -  -  time_test_start:
    5 D1:ABF5 -  -  -  -  
    6 D1:ABF5 -  -  -  -  		; 76543210	
    7 D1:ABF5 3E 03 -  -  	ld a,%00000011;enable, 32768hz
    8 D1:ABF7 32 30 00 F2 	ld ($F20030),a
    9 D1:ABFB -  -  -  -  	;	  fedcba98
   10 D1:ABFB 3E 02 -  -  	ld a,%00000010;count up
   11 D1:ABFD 32 31 00 F2 	ld ($F20031),a
   12 D1:AC01 3E 00 -  -  	ld a,0
   13 D1:AC03 32 00 00 F2 	ld ($F20000),a
   14 D1:AC07 32 01 00 F2 	ld ($F20001),a
   15 D1:AC0B 32 02 00 F2 	ld ($F20002),a
   16 D1:AC0F 32 03 00 F2 	ld ($F20003),a
   17 D1:AC13 -  -  -  -  	
   18 D1:AC13 21 2C 01 00 	ld hl,300
   19 D1:AC17 -  -  -  -  	
   20 D1:AC17 -  -  -  -  time_testing_loop:
   21 D1:AC17 E5 -  -  -  	push hl
   22 D1:AC18 01 E8 03 00 	ld bc,1000
   23 D1:AC1C -  -  -  -  time_testing_loop_2:
   24 D1:AC1C C5 -  -  -  	push bc
   25 D1:AC1D -  -  -  -  	;instruction here
   26 D1:AC1D -  -  -  -  	
   27 D1:AC1D -  -  -  -  	
   28 D1:AC1D -  -  -  -  	;Instruction end
   29 D1:AC1D C1 -  -  -  	pop bc
   30 D1:AC1E 0B -  -  -  	dec bc
   31 D1:AC1F 79 -  -  -  	ld a,c
   32 D1:AC20 B0 -  -  -  	or b
   33 D1:AC21 C2 1C AC D1 	jp nz,time_testing_loop_2
   34 D1:AC25 E1 -  -  -  	pop hl
   35 D1:AC26 2B -  -  -  	dec hl
   36 D1:AC27 7D -  -  -  	ld a,l
   37 D1:AC28 B4 -  -  -  	or h
   38 D1:AC29 C2 17 AC D1 	jp nz,time_testing_loop
   39 D1:AC2D -  -  -  -  	
   40 D1:AC2D 3A 01 00 F2 	ld a,($F20001);128hz
   41 D1:AC31 6F -  -  -  	ld l,a
   42 D1:AC32 3A 02 00 F2 	ld a,($F20002);0.5hz
   43 D1:AC36 67 -  -  -  	ld h,a
   44 D1:AC37 C3 7D AB D1 	jp printHL;div by 128 for time
   45 D1:AC3B -  -  -  -  	
   46 D1:AC3B -  -  -  -  
   47 D1:AC3B -  -  -  -  ;60fps = .0166sec/f	
   48 D1:AC3B -  -  -  -  
   49 D1:AC3B -  -  -  -  ;1000 ldir in vram of 160*240 bytes
   50 D1:AC3B -  -  -  -  ;6.8sec, .0068 sec/instruction   0.4 of a frame
   51 D1:AC3B -  -  -  -  
   52 D1:AC3B -  -  -  -  
   53 D1:AC3B -  -  -  -  ;10,000 draw 1 bg line very complex 
   54 D1:AC3B -  -  -  -  ;9 sec  .07 of frame/instruction
   55 D1:AC3B -  -  -  -  
   56 D1:AC3B -  -  -  -  ;300k draw slow sprite 12*5 px complex
   57 D1:AC3B -  -  -  -  ;16.4RT, 14.8CLK
   58 D1:AC3B -  -  -  -  ;.00328 frames/sprite, 4.19 frames / screen
   59 D1:AC3B -  -  -  -  ;.24 screens/frame
   60 D1:AC3B -  -  -  -  
   61 D1:AC3B -  -  -  -  
   62 D1:AC3B -  -  -  -  ;300k slow sprite best case 12*5px
   63 D1:AC3B -  -  -  -  ;8.75RT 7.6clk
   64 D1:AC3B -  -  -  -  ;.00175 frames/spr 2.24 frames/screen
   65 D1:AC3B -  -  -  -  ;.446 screens/frame
   66 D1:AC3B -  -  -  -  
   67 D1:AC3B -  -  -  -  
   68 D1:AC3B -  -  -  -  
   69 D1:AC3B -  -  -  -  ;1,000,000 fast fg sprite 20*4 px
   70 D1:AC3B -  -  -  -  ;22.15RT,20.35clk
   71 D1:AC3B -  -  -  -  ;.00133 frames/spr 1.275 frames/screen
   72 D1:AC3B -  -  -  -  ;.78 screens/frame
   73 D1:AC3B -  -  -  -  
   74 D1:AC3B -  -  -  -  
   75 D1:AC3B -  -  -  -  ;for 60% of screen with fg sprites in 1 frame
   76 D1:AC3B -  -  -  -  ;.6 = .78*fast + .44*(1-fast)
   77 D1:AC3B -  -  -  -  ;.47 = FAST
   78 D1:AC3B -  -  -  -  
   79 D1:AC3B -  -  -  -  ;50% fast sprites, 50% slow sprites
   80 D1:AC3B -  -  -  -  
   81 D1:AC3B -  -  -  -  
   82 D1:AC3B -  -  -  -  
   83 D1:AC3B -  -  -  -  
   84 D1:AC3B -  -  -  -  
   85 D1:AC3B -  -  -  -  
   86 D1:AC3B -  -  -  -  
   87 D1:AC3B -  -  -  -  
   88 D1:AC3B -  -  -  -  
Listing for file "ascent.asm"
  552 D1:AC3B -  -  -  -  #include "drawBGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawBGSprite.txt"
    1 D1:AC3B -  -  -  -  
    2 D1:AC3B -  -  -  -  
    3 D1:AC3B -  -  -  -  BGMaxSpriteHeight .equ 120
    4 D1:AC3B -  -  -  -  
    5 D1:AC3B -  -  -  -  
    6 D1:AC3B -  -  -  -  draw_bg:; function for drawing background buffer to the draw buffer, clearing the frame for fg sprites to be drawn over 
    7 D1:AC3B CD 6F AC D1 	call move_bg
    8 D1:AC3F 21 00 2C D5 	ld hl,$d52c00;BG_buffer_end
    9 D1:AC43 ED 4B DB AB 
              D1 -  -  -  	ld bc,(BG_draw_buffer)
   10 D1:AC48 37 -  -  -  	scf 
   11 D1:AC49 3F -  -  -  	ccf 
   12 D1:AC4A ED 42 -  -  	sbc hl,bc ;get number of bytes from the loop point in the buffer to end of the buffer 
   13 D1:AC4C E5 -  -  -  	push hl 
   14 D1:AC4D C1 -  -  -  	pop bc	;put into bc for ldir 
   15 D1:AC4E 2A DB AB D1 	ld hl,(BG_draw_buffer)
   16 D1:AC52 ED 5B D8 AB 
              D1 -  -  -  	ld de,(draw_buffer)
   17 D1:AC57 ED B0 -  -  	ldir
   18 D1:AC59 2A DB AB D1 	ld hl,(BG_draw_buffer) ;loop point in buffer
   19 D1:AC5D 01 00 96 D4 	ld bc,BG_buffer ;start of buffer
   20 D1:AC61 37 -  -  -  	scf 
   21 D1:AC62 3F -  -  -  	ccf 
   22 D1:AC63 ED 42 -  -  	sbc hl,bc ;number of bytes from start to loop point 
   23 D1:AC65 C8 -  -  -  	ret z ;if bg buffer line is at top of buffer, no second ldir
   24 D1:AC66 E5 -  -  -  	push hl 
   25 D1:AC67 C1 -  -  -  	pop bc
   26 D1:AC68 21 00 96 D4 	ld hl,BG_buffer 
   27 D1:AC6C ED B0 -  -  	ldir 
   28 D1:AC6E C9 -  -  -  	ret 
   29 D1:AC6F -  -  -  -  	
   30 D1:AC6F -  -  -  -  	
   31 D1:AC6F -  -  -  -  ;function for moving the backgrond buffer. checks if camera has moved since the buffer was last updated.
   32 D1:AC6F -  -  -  -  ;if so will draw new lines of the bg buffer to move it up or down until it is in the correct position
   33 D1:AC6F -  -  -  -  move_bg:
   34 D1:AC6F 2A D2 AB D1 	ld hl,(cam_pos);load cam pos 
   35 D1:AC73 -  -  -  -  	;call write_hl_to_ram
   36 D1:AC73 CB 3C -  -  	srl h
   37 D1:AC75 CB 1D -  -  	rr l
   38 D1:AC77 CB 3C -  -  	srl h
   39 D1:AC79 CB 1D -  -  	rr l
   40 D1:AC7B CB 3C -  -  	srl h
   41 D1:AC7D CB 1D -  -  	rr l	;div by 8 to get location of BG layer
   42 D1:AC7F -  -  -  -  	;hl holds bg cam pos, lowest visible line of bg layer 
   43 D1:AC7F ED 4B D5 AB 
              D1 -  -  -  	ld bc,(bg_cam_pos);previous BG cam location 
   44 D1:AC84 37 -  -  -  	scf
   45 D1:AC85 3F -  -  -  	ccf
   46 D1:AC86 ED 42 -  -  	sbc hl,bc ;compare to the updated location
   47 D1:AC88 C8 -  -  -  	ret z ;if 0, the bg buffer does not need to be moved 
   48 D1:AC89 DA 95 AC D1 	jp c,move_bg_down ;if previous cam pos id above current pos, screen has moved down, go to move bg down 1 line
   49 D1:AC8D CD E4 AC D1 	call inc_bg ;otherwise, screen has moved up, need to move bg up 1 line
   50 D1:AC91 C3 6F AC D1 	jp move_bg ;repeat until bg is in correct pos
   51 D1:AC95 -  -  -  -  move_bg_down:
   52 D1:AC95 CD 9D AC D1 	call dec_bg
   53 D1:AC99 C3 6F AC D1 	jp move_bg ;repeat until bg is in correct pos
   54 D1:AC9D -  -  -  -  
   55 D1:AC9D -  -  -  -  
   56 D1:AC9D -  -  -  -  dec_bg:;move bg cam down 1px 
   57 D1:AC9D -  -  -  -  
   58 D1:AC9D -  -  -  -  	
   59 D1:AC9D -  -  -  -  	;Testibng
   60 D1:AC9D -  -  -  -  	;ld a,$AD
   61 D1:AC9D -  -  -  -  	;call write_a_to_ram
   62 D1:AC9D -  -  -  -  	
   63 D1:AC9D -  -  -  -  
   64 D1:AC9D -  -  -  -  	;write on draw buffer line 
   65 D1:AC9D 2A DB AB D1 	ld hl,(BG_draw_buffer) ;topmost line of bg buffer will be overwritten with new bottom line 
   66 D1:ACA1 22 F0 AD D1 	ld (dbgl_vram_line_start),hl 
   67 D1:ACA5 -  -  -  -  	
   68 D1:ACA5 2A D5 AB D1 	ld hl,(bg_cam_pos)
   69 D1:ACA9 2B -  -  -  	dec hl ;dec bg cam pos by 1 
   70 D1:ACAA 22 D5 AB D1 	ld (bg_cam_pos),hl 
   71 D1:ACAE -  -  -  -  	
   72 D1:ACAE 01 00 00 00 	ld bc,0 ;clear bc reg
   73 D1:ACB2 4C -  -  -  	ld c,h;bottom y value msb 
   74 D1:ACB3 7D -  -  -  	ld a,l ;bottom y value lsb 
   75 D1:ACB4 21 2B C3 D1 	ld hl,BG_Data_frame_table
   76 D1:ACB8 0C -  -  -  	inc c 
   77 D1:ACB9 09 -  -  -  	add hl,bc 
   78 D1:ACBA 09 -  -  -  	add hl,bc 
   79 D1:ACBB 09 -  -  -  	add hl,bc ;add 3*frame number to get to correct frame pointer
   80 D1:ACBC ED 27 -  -  	ld hl,(hl) ;hl now points to bg frame data 
   81 D1:ACBE CD 82 AD D1 	call draw_bg_line
   82 D1:ACC2 -  -  -  -  	
   83 D1:ACC2 -  -  -  -  
   84 D1:ACC2 -  -  -  -  	;move buffer pos
   85 D1:ACC2 2A DB AB D1 	ld hl,(BG_draw_buffer)
   86 D1:ACC6 01 60 2B D5 	ld bc,$d52b60;BG_buffer_end, start of last line of vram buffer 
   87 D1:ACCA 37 -  -  -  	scf 
   88 D1:ACCB 3F -  -  -  	ccf 
   89 D1:ACCC ED 42 -  -  	sbc hl,bc ;compare to current line 
   90 D1:ACCE 2A DB AB D1 	ld hl,(BG_draw_buffer)
   91 D1:ACD2 C2 DA AC D1 	jp nz,dec_bg_bottom_skip
   92 D1:ACD6 21 60 95 D4 	ld hl,$d49560;1 row above top of bg buffer 
   93 D1:ACDA -  -  -  -  dec_bg_bottom_skip:
   94 D1:ACDA 01 A0 00 00 	ld bc,160 
   95 D1:ACDE 09 -  -  -  	add hl,bc
   96 D1:ACDF 22 DB AB D1 	ld (BG_draw_buffer),hl 
   97 D1:ACE3 C9 -  -  -  	ret
   98 D1:ACE4 -  -  -  -  
   99 D1:ACE4 -  -  -  -  
  100 D1:ACE4 -  -  -  -  inc_bg:;move cam up 
  101 D1:ACE4 -  -  -  -  
  102 D1:ACE4 -  -  -  -  	
  103 D1:ACE4 -  -  -  -  	;Testibng
  104 D1:ACE4 -  -  -  -  	;ld a,$00
  105 D1:ACE4 -  -  -  -  	;call write_a_to_ram
  106 D1:ACE4 -  -  -  -  	;call prgmpause
  107 D1:ACE4 -  -  -  -  
  108 D1:ACE4 2A DB AB D1 	ld hl,(BG_draw_buffer)
  109 D1:ACE8 01 00 96 D4 	ld bc,BG_buffer
  110 D1:ACEC 37 -  -  -  	scf 
  111 D1:ACED 3F -  -  -  	ccf 
  112 D1:ACEE ED 42 -  -  	sbc hl,bc ;compare current drawing line to top of bg buffer 
  113 D1:ACF0 2A DB AB D1 	ld hl,(BG_draw_buffer)
  114 D1:ACF4 C2 FC AC D1 	jp nz,inc_bg_top_skip ;if they are not equal, continue
  115 D1:ACF8 21 00 2C D5 	ld hl,$d52c00;otherwise need to wrap back to bottom of buffer, set hl to 1 below bottom of bg buffer 
  116 D1:ACFC -  -  -  -  inc_bg_top_skip:
  117 D1:ACFC 01 A0 00 00 	ld bc,160 
  118 D1:AD00 37 -  -  -  	scf
  119 D1:AD01 3F -  -  -  	ccf 
  120 D1:AD02 ED 42 -  -  	sbc hl,bc ;move up line, hl now points to line drawing location in vram 
  121 D1:AD04 22 DB AB D1 	ld (BG_draw_buffer),hl 
  122 D1:AD08 22 F0 AD D1 	ld (dbgl_vram_line_start),hl 
  123 D1:AD0C 2A D5 AB D1 	ld hl,(bg_cam_pos)
  124 D1:AD10 23 -  -  -  	inc hl 
  125 D1:AD11 22 D5 AB D1 	ld (bg_cam_pos),hl ;incremnet cam pos 
  126 D1:AD15 -  -  -  -  	;call write_hl_to_ram
  127 D1:AD15 01 EF 00 00 	ld bc,239
  128 D1:AD19 09 -  -  -  	add hl,bc ;gets uppermost visible line y value in bg layer
  129 D1:AD1A 4C -  -  -  	ld c,h;cam pos msb 
  130 D1:AD1B 7D -  -  -  	ld a,l ;a holds line number in target frame 
  131 D1:AD1C 21 2B C3 D1 	ld hl,BG_Data_frame_table
  132 D1:AD20 0C -  -  -  	inc c ;inc to get to upper frame 
  133 D1:AD21 09 -  -  -  	add hl,bc 
  134 D1:AD22 09 -  -  -  	add hl,bc 
  135 D1:AD23 09 -  -  -  	add hl,bc 
  136 D1:AD24 ED 27 -  -  	ld hl,(hl)
  137 D1:AD26 CD 82 AD D1 	call draw_bg_line
  138 D1:AD2A C9 -  -  -  	ret
  139 D1:AD2B -  -  -  -  	
  140 D1:AD2B -  -  -  -  
  141 D1:AD2B -  -  -  -  
  142 D1:AD2B -  -  -  -  
  143 D1:AD2B -  -  -  -  
  144 D1:AD2B -  -  -  -  setup_bg: ;Draws entire BG buffer when loading game 
  145 D1:AD2B 2A D2 AB D1 	ld hl,(cam_pos)
  146 D1:AD2F CB 3C -  -  	srl h
  147 D1:AD31 CB 1D -  -  	rr l
  148 D1:AD33 CB 3C -  -  	srl h
  149 D1:AD35 CB 1D -  -  	rr l ;div by 4
  150 D1:AD37 -  -  -  -  	;hl holds bg cam pos 
  151 D1:AD37 22 D5 AB D1 	ld (bg_cam_pos),hl
  152 D1:AD3B -  -  -  -  	
  153 D1:AD3B 01 EF 00 00 	ld bc,239
  154 D1:AD3F 09 -  -  -  	add hl,bc;hl holds y position of uppermost visible line in bg layer 
  155 D1:AD40 -  -  -  -  	
  156 D1:AD40 23 -  -  -  	inc hl;to be dec in loop
  157 D1:AD41 E5 -  -  -  	push hl ;save uppermost line y val
  158 D1:AD42 21 00 96 D4 	ld hl,BG_buffer ;start of bg drawing buffer 
  159 D1:AD46 22 DB AB D1 	ld (BG_draw_buffer),hl ;set current bg line drawing location 
  160 D1:AD4A E5 -  -  -  	push hl 
  161 D1:AD4B -  -  -  -  	
  162 D1:AD4B 3E F0 -  -  	ld a,240 ;num loops
  163 D1:AD4D 32 75 AD D1 	ld (setup_bg_loop_count),a
  164 D1:AD51 -  -  -  -  setup_bg_loop:
  165 D1:AD51 -  -  -  -  
  166 D1:AD51 E1 -  -  -  	pop hl;vram draw pos, next line of bg drawn here 
  167 D1:AD52 22 F0 AD D1 	ld (dbgl_vram_line_start),hl ;set drawing pos 
  168 D1:AD56 01 A0 00 00 	ld bc,160
  169 D1:AD5A 09 -  -  -  	add hl,bc 
  170 D1:AD5B EB -  -  -  	ex de,hl ;put next vram pos in de 
  171 D1:AD5C E1 -  -  -  	pop hl;uppermost line y val
  172 D1:AD5D 2B -  -  -  	dec hl ;dec line y value (move to next lowest line)
  173 D1:AD5E E5 -  -  -  	push hl;push uppermost line y val
  174 D1:AD5F D5 -  -  -  	push de ;push vram pos 
  175 D1:AD60 01 00 00 00 	ld bc,0
  176 D1:AD64 4C -  -  -  	ld c,h;cam pos msb 
  177 D1:AD65 7D -  -  -  	ld a,l ;a holds line number in current frame 
  178 D1:AD66 21 2B C3 D1 	ld hl,BG_Data_frame_table
  179 D1:AD6A 0C -  -  -  	inc c ;add 1 to get to upper frame
  180 D1:AD6B 09 -  -  -  	add hl,bc 
  181 D1:AD6C 09 -  -  -  	add hl,bc 
  182 D1:AD6D 09 -  -  -  	add hl,bc 
  183 D1:AD6E ED 27 -  -  	ld hl,(hl) ;hl now points to upper frame data 
  184 D1:AD70 CD 82 AD D1 	call draw_bg_line ;hl pts to upper frame data, a = line num in target frame
  185 D1:AD74 -  -  -  -  	
  186 D1:AD74 -  -  -  -  setup_bg_loop_count .equ $ + 1
  187 D1:AD74 3E 00 -  -  	ld a,0
  188 D1:AD76 3D -  -  -  	dec a ;dec loop counter
  189 D1:AD77 32 75 AD D1 	ld (setup_bg_loop_count),a
  190 D1:AD7B C2 51 AD D1 	jp nz,setup_bg_loop 
  191 D1:AD7F E1 -  -  -  	pop hl ;pop vram pos 
  192 D1:AD80 E1 -  -  -  	pop hl ;pop current line number 
  193 D1:AD81 C9 -  -  -  	ret 
  194 D1:AD82 -  -  -  -  
  195 D1:AD82 -  -  -  -  
  196 D1:AD82 -  -  -  -  
  197 D1:AD82 -  -  -  -  
  198 D1:AD82 -  -  -  -  
  199 D1:AD82 -  -  -  -  
  200 D1:AD82 -  -  -  -  ;hl = upper data frame, a = line number in target frame
  201 D1:AD82 -  -  -  -  ;for drawing BG, only 1 line is drawn at a time.
  202 D1:AD82 -  -  -  -  ;therefore only check sprites in the above frame that may extend downwards, 
  203 D1:AD82 -  -  -  -  ;and the sprites in the target frame which contains the y position of the line being drawn
  204 D1:AD82 -  -  -  -  ;set dbgl_vram_line_start before calling 
  205 D1:AD82 -  -  -  -  draw_bg_line:
  206 D1:AD82 -  -  -  -  	
  207 D1:AD82 -  -  -  -  	
  208 D1:AD82 32 CE AD D1 	ld (dbgl_line_num),a ;write line num to required positions 
  209 D1:AD86 32 B2 B5 D1 	ld (dfgs_cam_height_1), a ;Used to check if upper frame should be considered
  210 D1:AD8A ED 44 -  -  	neg 
  211 D1:AD8C 32 BA AD D1 	ld (dbgl_lines_to_top_of_target_frame),a 
  212 D1:AD90 -  -  -  -  	
  213 D1:AD90 E5 -  -  -  	push hl ;upper frame sprite table pointer 
  214 D1:AD91 3E FF -  -  	ld a,$FF ;Set all of line to FF to clear it with color 16
  215 D1:AD93 01 A0 00 00 	ld bc,160
  216 D1:AD97 2A F0 AD D1 	ld hl,(dbgl_vram_line_start) ;Drawing address of line 
  217 D1:AD9B CD E0 10 02 	call _MemSet ;Clear all of line 
  218 D1:AD9F E1 -  -  -  	pop hl ;return upper frame ptr 
  219 D1:ADA0 -  -  -  -  
  220 D1:ADA0 -  -  -  -  	
  221 D1:ADA0 3E DA -  -  	ld a,%11011010;jp c
  222 D1:ADA2 32 E4 B5 D1 	ld (dfgs_bg_mode_1),a 
  223 D1:ADA6 32 48 B6 D1 	ld (dfgs_bg_mode_2),a 
  224 D1:ADAA -  -  -  -  	
  225 D1:ADAA 3E FF -  -  	ld a,255;
  226 D1:ADAC 32 E1 B6 D1 	ld (dfgs_cam_height_3),a ;Will skip drawing of lower frame
  227 D1:ADB0 32 FB B6 D1 	ld (dfgs_cam_height_4),a
  228 D1:ADB4 -  -  -  -  	
  229 D1:ADB4 -  -  -  -  
  230 D1:ADB4 -  -  -  -  	
  231 D1:ADB4 CD 99 B5 D1 	call draw_fg_sprites
  232 D1:ADB8 -  -  -  -  	
  233 D1:ADB8 C9 -  -  -  	ret
  234 D1:ADB9 -  -  -  -  	
  235 D1:ADB9 -  -  -  -  
  236 D1:ADB9 -  -  -  -  
  237 D1:ADB9 -  -  -  -  	;a = y value of sprite in upper frame, hl pts to height
  238 D1:ADB9 -  -  -  -  dbgl_draw_upper_sprite:	
  239 D1:ADB9 -  -  -  -  
  240 D1:ADB9 -  -  -  -  	;push af 
  241 D1:ADB9 -  -  -  -  	;call write_a_to_ram
  242 D1:ADB9 -  -  -  -  	;ld a,(hl)
  243 D1:ADB9 -  -  -  -  	;call write_a_to_ram
  244 D1:ADB9 -  -  -  -  	;ld a,$BC
  245 D1:ADB9 -  -  -  -  	;call write_a_to_ram
  246 D1:ADB9 -  -  -  -  	;pop af
  247 D1:ADB9 -  -  -  -  	
  248 D1:ADB9 -  -  -  -  	;call write_hl_to_ram
  249 D1:ADB9 -  -  -  -  	
  250 D1:ADB9 -  -  -  -  	;call prgmpause
  251 D1:ADB9 -  -  -  -  
  252 D1:ADB9 -  -  -  -  dbgl_lines_to_top_of_target_frame .equ $ + 1
  253 D1:ADB9 C6 00 -  -  	add a,0 ;a holds line number in sprite to draw (0 indexed)
  254 D1:ADBB -  -  -  -  	;call write_a_to_ram
  255 D1:ADBB DA C9 AD D1 	jp c,dbgl_upper_skip_sprite ; if line to draw >255, skip (happens if sprite has large y val)
  256 D1:ADBF BE -  -  -  	cp (hl) ;compare to sprite height 
  257 D1:ADC0 D2 C9 AD D1 	jp nc, dbgl_upper_skip_sprite; Skip drawing, sprite does not extend to target line 
  258 D1:ADC4 -  -  -  -  	;Sprite is to be drawn, a holds line number 
  259 D1:ADC4 CD E1 AD D1 	call dbgl_setup_and_draw ;draw sprite line 
  260 D1:ADC8 -  -  -  -  	;hl pts to next sprite y
  261 D1:ADC8 C9 -  -  -  	ret
  262 D1:ADC9 -  -  -  -  	
  263 D1:ADC9 -  -  -  -  dbgl_upper_skip_sprite:
  264 D1:ADC9 23 -  -  -  	inc hl ;to x 
  265 D1:ADCA 23 -  -  -  	inc hl ;to index 
  266 D1:ADCB 23 -  -  -  	inc hl ;to next y
  267 D1:ADCC C9 -  -  -  	ret
  268 D1:ADCD -  -  -  -  	
  269 D1:ADCD -  -  -  -  
  270 D1:ADCD -  -  -  -  	;a holds y in frame, (hl) = height
  271 D1:ADCD -  -  -  -  dbgl_draw_lower_sprite:
  272 D1:ADCD -  -  -  -  	
  273 D1:ADCD -  -  -  -  	;call write_a_to_ram
  274 D1:ADCD -  -  -  -  	;call prgmpause
  275 D1:ADCD -  -  -  -  	;call write_hl_to_ram
  276 D1:ADCD -  -  -  -  	
  277 D1:ADCD -  -  -  -  	;call prgmpause
  278 D1:ADCD -  -  -  -  	
  279 D1:ADCD -  -  -  -  dbgl_line_num .equ $ + 1
  280 D1:ADCD D6 00 -  -  	sub 0;subtract line num 
  281 D1:ADCF DA DD AD D1 	jp c, dbgl_lower_skip_sprite ;if carry, line number was above sprite y pos 
  282 D1:ADD3 -  -  -  -  	;if a is 0, we draw first line of sprite, if a is 1, draw second... a holds line num of sprite to draw (0 indexed) 
  283 D1:ADD3 BE -  -  -  	cp (hl) ;compare to sprite height
  284 D1:ADD4 D2 DD AD D1 	jp nc, dbgl_lower_skip_sprite; Skip drawing, sprite does not extend to target line 
  285 D1:ADD8 -  -  -  -  	
  286 D1:ADD8 -  -  -  -  	;Sprite is to be drawn, a holds line number 
  287 D1:ADD8 CD E1 AD D1 	call dbgl_setup_and_draw ;draw sprite line 
  288 D1:ADDC -  -  -  -  	;hl pts to next y
  289 D1:ADDC C9 -  -  -  	ret
  290 D1:ADDD -  -  -  -  	
  291 D1:ADDD -  -  -  -  dbgl_lower_skip_sprite:
  292 D1:ADDD -  -  -  -  
  293 D1:ADDD -  -  -  -  	;ld a,$AA 
  294 D1:ADDD -  -  -  -  	;call write_a_to_ram
  295 D1:ADDD -  -  -  -  	;call prgmpause
  296 D1:ADDD -  -  -  -  	
  297 D1:ADDD 23 -  -  -  	inc hl ;to x 
  298 D1:ADDE 23 -  -  -  	inc hl ;to index 
  299 D1:ADDF 23 -  -  -  	inc hl ;to y
  300 D1:ADE0 C9 -  -  -  	ret
  301 D1:ADE1 -  -  -  -  
  302 D1:ADE1 -  -  -  -  
  303 D1:ADE1 -  -  -  -  
  304 D1:ADE1 -  -  -  -  
  305 D1:ADE1 -  -  -  -  ;a holds 0 indexed line num of sprite, (hl) = height ,bc,de = 0
  306 D1:ADE1 -  -  -  -  ;returns hl holds next y val
  307 D1:ADE1 -  -  -  -  dbgl_setup_and_draw:
  308 D1:ADE1 -  -  -  -  
  309 D1:ADE1 -  -  -  -  	;push af 
  310 D1:ADE1 -  -  -  -  	;ld a,$AB 
  311 D1:ADE1 -  -  -  -  	;call write_a_to_ram
  312 D1:ADE1 -  -  -  -  	;call write_hl_to_ram
  313 D1:ADE1 -  -  -  -  	;pop af 
  314 D1:ADE1 -  -  -  -  	;call write_a_to_ram
  315 D1:ADE1 -  -  -  -  	
  316 D1:ADE1 -  -  -  -  	;call prgmpause
  317 D1:ADE1 -  -  -  -  
  318 D1:ADE1 01 00 00 00 	ld bc,0
  319 D1:ADE5 11 00 00 00 	ld de,0
  320 D1:ADE9 -  -  -  -  	
  321 D1:ADE9 23 -  -  -  	inc hl;to x pos
  322 D1:ADEA 5E -  -  -  	ld e,(hl);e holds x pos 
  323 D1:ADEB 23 -  -  -  	inc hl 
  324 D1:ADEC 4E -  -  -  	ld c,(hl);sprite index 
  325 D1:ADED 23 -  -  -  	inc hl ;next y
  326 D1:ADEE E5 -  -  -  	push hl ;save location in data 
  327 D1:ADEF -  -  -  -  dbgl_vram_line_start .equ $ + 1	
  328 D1:ADEF 21 00 00 00 	ld hl,0
  329 D1:ADF3 19 -  -  -  	add hl,de;add x pos
  330 D1:ADF4 -  -  -  -  dbgl_sg_x_origin .equ $ + 1
  331 D1:ADF4 1E 00 -  -  	ld e,0 
  332 D1:ADF6 19 -  -  -  	add hl,de;add x pos
  333 D1:ADF7 -  -  -  -  	
  334 D1:ADF7 EB -  -  -  	ex de,hl;put vram pos into de 
  335 D1:ADF8 -  -  -  -  	
  336 D1:ADF8 26 A0 -  -  	ld h,160
  337 D1:ADFA 6F -  -  -  	ld l,a ;number of lines to subtract 
  338 D1:ADFB ED 6C -  -  	mlt hl;bytes to subtract from vram
  339 D1:ADFD 37 -  -  -  	scf 
  340 D1:ADFE 3F -  -  -  	ccf
  341 D1:ADFF EB -  -  -  	ex de,hl;hl holds initial vram pos, de is lines to subtract  
  342 D1:AE00 ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  343 D1:AE02 EB -  -  -  	ex de,hl;put in de
  344 D1:AE03 -  -  -  -  	
  345 D1:AE03 -  -  -  -  dbgl_sprite_pointers .equ $ + 1
  346 D1:AE03 21 00 00 00 	ld hl,0
  347 D1:AE07 09 -  -  -  	add hl,bc
  348 D1:AE08 09 -  -  -  	add hl,bc 
  349 D1:AE09 09 -  -  -  	add hl,bc ;hl points to sprite data pointer 
  350 D1:AE0A ED 27 -  -  	ld hl,(hl);hl holds sprite data
  351 D1:AE0C -  -  -  -  
  352 D1:AE0C -  -  -  -  
  353 D1:AE0C CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  354 D1:AE0E CA 1A AE D1 	jp z,dbgl_fast_sprite ;if even address, fast sprite 
  355 D1:AE12 CD EC AE D1 	call draw_slow_sprite_single_line
  356 D1:AE16 C3 1E AE D1 	jp dbgl_slow_sprite
  357 D1:AE1A -  -  -  -  dbgl_fast_sprite:
  358 D1:AE1A CD 6E AE D1 	call draw_fast_sprite_single_line
  359 D1:AE1E -  -  -  -  dbgl_slow_sprite:
  360 D1:AE1E -  -  -  -  	
  361 D1:AE1E 11 00 00 00 	ld de,0;clear de 
  362 D1:AE22 01 00 00 00 	ld bc,0
  363 D1:AE26 E1 -  -  -  	pop hl;back to data
  364 D1:AE27 C9 -  -  -  	ret
  365 D1:AE28 -  -  -  -  	
  366 D1:AE28 -  -  -  -  
  367 D1:AE28 -  -  -  -  
  368 D1:AE28 -  -  -  -  
  369 D1:AE28 -  -  -  -  
  370 D1:AE28 -  -  -  -  
  371 D1:AE28 -  -  -  -  
  372 D1:AE28 -  -  -  -  
  373 D1:AE28 -  -  -  -  
  374 D1:AE28 -  -  -  -  
  375 D1:AE28 -  -  -  -  
  376 D1:AE28 -  -  -  -  
  377 D1:AE28 -  -  -  -  
  378 D1:AE28 -  -  -  -  
  379 D1:AE28 -  -  -  -  
  380 D1:AE28 -  -  -  -  
  381 D1:AE28 -  -  -  -  
  382 D1:AE28 -  -  -  -  
  383 D1:AE28 -  -  -  -  
Listing for file "ascent.asm"
  553 D1:AE28 -  -  -  -  #include "drawFGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFGSprite.txt"
    1 D1:AE28 -  -  -  -  
    2 D1:AE28 -  -  -  -  ;hl = data, a = lines to draw. returns a = num loops to draw, hl = 1 before first gap length
    3 D1:AE28 -  -  -  -  setup_sprite_bottom_cut:
    4 D1:AE28 1B -  -  -  	dec de
    5 D1:AE29 01 00 00 00 	ld bc,0 ;clear bc
    6 D1:AE2D 4F -  -  -  	ld c,a;c = lines to draw
    7 D1:AE2E E5 -  -  -  	push hl ;save data 
    8 D1:AE2F 09 -  -  -  	add hl,bc
    9 D1:AE30 7E -  -  -  	ld a,(hl);num loops to draw
   10 D1:AE31 E1 -  -  -  	pop hl ;return to start of data
   11 D1:AE32 4E -  -  -  	ld c,(hl) ;height
   12 D1:AE33 09 -  -  -  	add hl,bc ;hl now points to 1 before first gap length
   13 D1:AE34 C9 -  -  -  	ret 
   14 D1:AE35 -  -  -  -  
   15 D1:AE35 -  -  -  -  setup_sprite_top_cut:
   16 D1:AE35 1B -  -  -  	dec de ;move to correct vram pos 
   17 D1:AE36 01 00 00 00 	ld bc,0
   18 D1:AE3A 4F -  -  -  	ld c,a ;lines to skip (1 indexed)
   19 D1:AE3B D5 -  -  -  	push de
   20 D1:AE3C 11 00 00 00 	ld de,0
   21 D1:AE40 E5 -  -  -  	push hl
   22 D1:AE41 5E -  -  -  	ld e,(hl);height
   23 D1:AE42 09 -  -  -  	add hl,bc;hl points to num skip loops 
   24 D1:AE43 4E -  -  -  	ld c,(hl);c holds num skip loops
   25 D1:AE44 E1 -  -  -  	pop hl;start of data
   26 D1:AE45 19 -  -  -  	add hl,de
   27 D1:AE46 46 -  -  -  	ld b,(hl);total number of loops
   28 D1:AE47 23 -  -  -  	inc hl;hl is pixel data
   29 D1:AE48 D1 -  -  -  	pop de;back to vram
   30 D1:AE49 79 -  -  -  	ld a,c;loops to skip
   31 D1:AE4A C9 -  -  -  	ret 
   32 D1:AE4B -  -  -  -  
   33 D1:AE4B -  -  -  -  ;hl = data, a = line number to draw. returns a = c = number of loops to skip, b = loops to skip + loops to draw. HL = gap length  
   34 D1:AE4B -  -  -  -  setup_sprite_single_line: ;sets up for single line drawing mode 
   35 D1:AE4B 1B -  -  -  	dec de
   36 D1:AE4C 01 00 00 00 	ld bc,0
   37 D1:AE50 4F -  -  -  	ld c,a ;line to draw
   38 D1:AE51 D5 -  -  -  	push de ;save vram 
   39 D1:AE52 11 00 00 00 	ld de,0
   40 D1:AE56 E5 -  -  -  	push hl
   41 D1:AE57 5E -  -  -  	ld e,(hl);height
   42 D1:AE58 09 -  -  -  	add hl,bc;hl points to num skip loops 
   43 D1:AE59 4E -  -  -  	ld c,(hl);c holds num skip loops
   44 D1:AE5A 23 -  -  -  	inc hl 
   45 D1:AE5B 46 -  -  -  	ld b,(hl);b holds num loops after drawn line 
   46 D1:AE5C E1 -  -  -  	pop hl;start of data
   47 D1:AE5D 19 -  -  -  	add hl,de
   48 D1:AE5E 23 -  -  -  	inc hl;hl is pixel data points to gap length 
   49 D1:AE5F D1 -  -  -  	pop de;back to vram
   50 D1:AE60 79 -  -  -  	ld a,c;loops to skip
   51 D1:AE61 C9 -  -  -  	ret 
   52 D1:AE62 -  -  -  -  
   53 D1:AE62 -  -  -  -  
   54 D1:AE62 -  -  -  -  
   55 D1:AE62 -  -  -  -  draw_fast_sprite_bottom_cut_from_line:
   56 D1:AE62 3C -  -  -  	inc a 
   57 D1:AE63 -  -  -  -  ;de = vram , hl = data, a = number lines to draw
   58 D1:AE63 -  -  -  -  draw_fast_sprite_bottom_cut:
   59 D1:AE63 CD 28 AE D1 	call setup_sprite_bottom_cut
   60 D1:AE67 23 -  -  -  	inc hl ;hl points to gap length 
   61 D1:AE68 4E -  -  -  	ld c,(hl);load alpha length
   62 D1:AE69 EB -  -  -  	ex de,hl;hl is vram, de is data
   63 D1:AE6A C3 B1 AE D1 	jp dfgs_loop
   64 D1:AE6E -  -  -  -  
   65 D1:AE6E -  -  -  -  
   66 D1:AE6E -  -  -  -  ;de = vram , hl = data, a = line to draw (starting from 0)
   67 D1:AE6E -  -  -  -  draw_fast_sprite_single_line:
   68 D1:AE6E B7 -  -  -  	or a 
   69 D1:AE6F CA 62 AE D1 	jp z,draw_fast_sprite_bottom_cut_from_line ; if a is 0, same as drawing bottom cut
   70 D1:AE73 -  -  -  -  	;we know a is not 0 here 
   71 D1:AE73 CD 4B AE D1 	call setup_sprite_single_line
   72 D1:AE77 -  -  -  -  	
   73 D1:AE77 C5 -  -  -  	push bc;save total and skipped loops
   74 D1:AE78 01 00 00 00 	ld bc,0
   75 D1:AE7C -  -  -  -  	
   76 D1:AE7C C3 89 AE D1 	jp draw_fast_sprite_top_loop 
   77 D1:AE80 -  -  -  -  
   78 D1:AE80 -  -  -  -  
   79 D1:AE80 -  -  -  -  
   80 D1:AE80 -  -  -  -  ;de = vram , hl = data, a = top lines to skip (1 indexed)
   81 D1:AE80 -  -  -  -  draw_fast_sprite_top_cut:
   82 D1:AE80 CD 35 AE D1 	call setup_sprite_top_cut
   83 D1:AE84 C5 -  -  -  	push bc ;save total and skipped loops 
   84 D1:AE85 01 00 00 00 	ld bc,0 
   85 D1:AE89 -  -  -  -  	
   86 D1:AE89 -  -  -  -  draw_fast_sprite_top_loop:; need to follow through gap and drawn lengths to find start of drawing
   87 D1:AE89 4E -  -  -  	ld c,(hl);load with first gap length	
   88 D1:AE8A EB -  -  -  	ex de,hl;hl is vram
   89 D1:AE8B 09 -  -  -  	add hl,bc
   90 D1:AE8C EB -  -  -  	ex de,hl;hl is data
   91 D1:AE8D 23 -  -  -  	inc hl
   92 D1:AE8E 4E -  -  -  	ld c,(hl);ldir length
   93 D1:AE8F 09 -  -  -  	add hl,bc;add ldir length
   94 D1:AE90 EB -  -  -  	ex de,hl;hl is vram
   95 D1:AE91 09 -  -  -  	add hl,bc;add ldir length
   96 D1:AE92 13 -  -  -  	inc de
   97 D1:AE93 EB -  -  -  	ex de,hl;hl is data
   98 D1:AE94 3D -  -  -  	dec a
   99 D1:AE95 C2 89 AE D1 	jp nz,draw_fast_sprite_top_loop
  100 D1:AE99 -  -  -  -  	
  101 D1:AE99 -  -  -  -  	
  102 D1:AE99 C1 -  -  -  	pop bc ;b is total loops, c is skipped loops 
  103 D1:AE9A 78 -  -  -  	ld a,b
  104 D1:AE9B 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
  105 D1:AE9C -  -  -  -  		
  106 D1:AE9C 01 00 00 00 	ld bc,0
  107 D1:AEA0 4E -  -  -  	ld c,(hl);load c with gap length
  108 D1:AEA1 EB -  -  -  	ex de,hl ;setup for loop 
  109 D1:AEA2 C3 B1 AE D1 	jp dfgs_loop
  110 D1:AEA6 -  -  -  -  
  111 D1:AEA6 -  -  -  -  
  112 D1:AEA6 -  -  -  -  ;de = vram , hl = data
  113 D1:AEA6 -  -  -  -  draw_fast_sprite_full:
  114 D1:AEA6 1B -  -  -  	dec de
  115 D1:AEA7 01 00 00 00 	ld bc,0
  116 D1:AEAB 4E -  -  -  	ld c,(hl);height
  117 D1:AEAC 09 -  -  -  	add hl,bc
  118 D1:AEAD 7E -  -  -  	ld a,(hl);total loops
  119 D1:AEAE 23 -  -  -  	inc hl
  120 D1:AEAF 4E -  -  -  	ld c,(hl);first gap length
  121 D1:AEB0 EB -  -  -  	ex de,hl
  122 D1:AEB1 -  -  -  -  ;a = num loops, c = alphaLength,hl = vram
  123 D1:AEB1 -  -  -  -  dfgs_loop:;gap, colors
  124 D1:AEB1 09 -  -  -  	add hl,bc;add alpha length
  125 D1:AEB2 EB -  -  -  	ex de,hl;swap, hl is data, de is vram
  126 D1:AEB3 23 -  -  -  	inc hl
  127 D1:AEB4 4E -  -  -  	ld c,(hl);get ldir length
  128 D1:AEB5 23 -  -  -  	inc hl
  129 D1:AEB6 ED B0 -  -  	ldir
  130 D1:AEB8 4E -  -  -  	ld c,(hl);load c with next alpha length
  131 D1:AEB9 EB -  -  -  	ex de,hl;swap, hl is vram
  132 D1:AEBA 3D -  -  -  	dec a
  133 D1:AEBB C2 B1 AE D1 	jp nz,dfgs_loop
  134 D1:AEBF C9 -  -  -  	ret
  135 D1:AEC0 -  -  -  -  	
  136 D1:AEC0 -  -  -  -  	
  137 D1:AEC0 -  -  -  -  	
  138 D1:AEC0 -  -  -  -  	
  139 D1:AEC0 -  -  -  -  
  140 D1:AEC0 -  -  -  -  
  141 D1:AEC0 -  -  -  -  ;hl = data, de = vram
  142 D1:AEC0 -  -  -  -  draw_slow_sprite_full:
  143 D1:AEC0 01 00 00 00 	ld bc,0
  144 D1:AEC4 4E -  -  -  	ld c,(hl);height
  145 D1:AEC5 09 -  -  -  	add hl,bc
  146 D1:AEC6 7E -  -  -  	ld a,(hl);num loops
  147 D1:AEC7 1B -  -  -  	dec de ;correct vram pos 
  148 D1:AEC8 D9 -  -  -  	exx;into shadow 
  149 D1:AEC9 47 -  -  -  	ld b,a ;number of loops
  150 D1:AECA -  -  -  -  	;hl = (gap length) -1 de = vram-1 b' = loops
  151 D1:AECA -  -  -  -  dsfgs_line_loop:
  152 D1:AECA D9 -  -  -  	exx;out of shadow
  153 D1:AECB 23 -  -  -  	inc hl;gap length
  154 D1:AECC 4E -  -  -  	ld c,(hl);gap length
  155 D1:AECD EB -  -  -  	ex de,hl;hl is vram
  156 D1:AECE 09 -  -  -  	add hl,bc;add aplha gap
  157 D1:AECF EB -  -  -  	ex de,hl;hl is data
  158 D1:AED0 23 -  -  -  	inc hl;hl points to single pix mask
  159 D1:AED1 1A -  -  -  	ld a,(de);vram data
  160 D1:AED2 A6 -  -  -  	and (hl)
  161 D1:AED3 23 -  -  -  	inc hl;pixel data
  162 D1:AED4 B6 -  -  -  	or (hl)
  163 D1:AED5 12 -  -  -  	ld (de),a
  164 D1:AED6 23 -  -  -  	inc hl;ldir length
  165 D1:AED7 -  -  -  -  	
  166 D1:AED7 13 -  -  -  	inc de;move to next pixel
  167 D1:AED8 -  -  -  -  	
  168 D1:AED8 7E -  -  -  	ld a,(hl);ldir length
  169 D1:AED9 23 -  -  -  	inc hl;data
  170 D1:AEDA 4F -  -  -  	ld c,a
  171 D1:AEDB B7 -  -  -  	or a
  172 D1:AEDC CA E2 AE D1 	jp z,dsfgs_ldir_skip
  173 D1:AEE0 ED B0 -  -  	ldir
  174 D1:AEE2 -  -  -  -  dsfgs_ldir_skip:
  175 D1:AEE2 1A -  -  -  	ld a,(de);vram data
  176 D1:AEE3 A6 -  -  -  	and (hl)
  177 D1:AEE4 23 -  -  -  	inc hl;pixel data
  178 D1:AEE5 B6 -  -  -  	or (hl)
  179 D1:AEE6 12 -  -  -  	ld (de),a
  180 D1:AEE7 -  -  -  -  	
  181 D1:AEE7 D9 -  -  -  	exx ;into shadow
  182 D1:AEE8 10 E0 -  -  	djnz dsfgs_line_loop
  183 D1:AEEA D9 -  -  -  	exx ;out 
  184 D1:AEEB C9 -  -  -  	ret
  185 D1:AEEC -  -  -  -  
  186 D1:AEEC -  -  -  -  
  187 D1:AEEC -  -  -  -  
  188 D1:AEEC -  -  -  -  ;de = vram , hl = data, a = line to draw (from 0)
  189 D1:AEEC -  -  -  -  draw_slow_sprite_single_line:
  190 D1:AEEC -  -  -  -  
  191 D1:AEEC B7 -  -  -  	or a 
  192 D1:AEED CA 2A AF D1 	jp z,draw_slow_sprite_bottom_cut_from_line ; if a is 0, same as drawing bottom cut
  193 D1:AEF1 -  -  -  -  	;we know a is not 0 here
  194 D1:AEF1 CD 4B AE D1 	call setup_sprite_single_line
  195 D1:AEF5 C5 -  -  -  	push bc;save total and skipped loops
  196 D1:AEF6 01 00 00 00 	ld bc,0
  197 D1:AEFA -  -  -  -  	
  198 D1:AEFA C3 07 AF D1 	jp slow_sprite_data_traverse 
  199 D1:AEFE -  -  -  -  	
  200 D1:AEFE -  -  -  -  
  201 D1:AEFE -  -  -  -  ;de = vram , hl = data, a = top lines to skip (from 1)
  202 D1:AEFE -  -  -  -  draw_slow_sprite_top_cut:
  203 D1:AEFE CD 35 AE D1 	call setup_sprite_top_cut
  204 D1:AF02 C5 -  -  -  	push bc;save total and skipped loops
  205 D1:AF03 01 00 00 00 	ld bc,0
  206 D1:AF07 -  -  -  -  ;hl = data start, a = num loops to skip, bc = 0
  207 D1:AF07 -  -  -  -  slow_sprite_data_traverse:
  208 D1:AF07 4E -  -  -  	ld c,(hl);gap length
  209 D1:AF08 EB -  -  -  	ex de,hl;hl is vram
  210 D1:AF09 09 -  -  -  	add hl,bc
  211 D1:AF0A EB -  -  -  	ex de,hl
  212 D1:AF0B -  -  -  -  	
  213 D1:AF0B 23 -  -  -  	inc hl ;inc past leading pixels
  214 D1:AF0C 23 -  -  -  	inc hl
  215 D1:AF0D 23 -  -  -  	inc hl;ldir length
  216 D1:AF0E 4E -  -  -  	ld c,(hl)
  217 D1:AF0F 09 -  -  -  	add hl,bc
  218 D1:AF10 EB -  -  -  	ex de,hl
  219 D1:AF11 09 -  -  -  	add hl,bc
  220 D1:AF12 EB -  -  -  	ex de,hl
  221 D1:AF13 13 -  -  -  	inc de;inc for leading pix 
  222 D1:AF14 23 -  -  -  	inc hl;inc past ending pixels
  223 D1:AF15 23 -  -  -  	inc hl
  224 D1:AF16 23 -  -  -  	inc hl;gap length
  225 D1:AF17 -  -  -  -  	
  226 D1:AF17 3D -  -  -  	dec a 
  227 D1:AF18 C2 07 AF D1 	jp nz,slow_sprite_data_traverse
  228 D1:AF1C -  -  -  -  
  229 D1:AF1C -  -  -  -  
  230 D1:AF1C C1 -  -  -  	pop bc ;b is total loops, c is skipped loops 
  231 D1:AF1D 78 -  -  -  	ld a,b
  232 D1:AF1E 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
  233 D1:AF1F 01 00 00 00 	ld bc,0;clear bc 
  234 D1:AF23 2B -  -  -  	dec hl	;hl points to 1 before gaplength
  235 D1:AF24 D9 -  -  -  	exx ;toshadow
  236 D1:AF25 47 -  -  -  	ld b,a 
  237 D1:AF26 C3 CA AE D1 	jp dsfgs_line_loop
  238 D1:AF2A -  -  -  -  	
  239 D1:AF2A -  -  -  -  	
  240 D1:AF2A -  -  -  -  	
  241 D1:AF2A -  -  -  -  draw_slow_sprite_bottom_cut_from_line:
  242 D1:AF2A 3C -  -  -  	inc a 
  243 D1:AF2B -  -  -  -  ;de = vram , hl = data, a = number lines to draw
  244 D1:AF2B -  -  -  -  draw_slow_sprite_bottom_cut:
  245 D1:AF2B -  -  -  -  
  246 D1:AF2B CD 28 AE D1 	call setup_sprite_bottom_cut
  247 D1:AF2F -  -  -  -  	;a = loops to draw, hl = 1 before gap length 
  248 D1:AF2F D9 -  -  -  	exx ;toshadow
  249 D1:AF30 47 -  -  -  	ld b,a
  250 D1:AF31 C3 CA AE D1 	jp dsfgs_line_loop
  251 D1:AF35 -  -  -  -  
  252 D1:AF35 -  -  -  -  
  253 D1:AF35 -  -  -  -  
  254 D1:AF35 -  -  -  -  
  255 D1:AF35 -  -  -  -  
  256 D1:AF35 -  -  -  -  
  257 D1:AF35 -  -  -  -  
  258 D1:AF35 -  -  -  -  
  259 D1:AF35 -  -  -  -  
  260 D1:AF35 -  -  -  -  
  261 D1:AF35 -  -  -  -  
  262 D1:AF35 -  -  -  -  
  263 D1:AF35 -  -  -  -  
  264 D1:AF35 -  -  -  -  
  265 D1:AF35 -  -  -  -  
  266 D1:AF35 -  -  -  -  
  267 D1:AF35 -  -  -  -  
  268 D1:AF35 -  -  -  -  
  269 D1:AF35 -  -  -  -  
  270 D1:AF35 -  -  -  -  
  271 D1:AF35 -  -  -  -  
  272 D1:AF35 -  -  -  -  
  273 D1:AF35 -  -  -  -  
  274 D1:AF35 -  -  -  -  
  275 D1:AF35 -  -  -  -  
  276 D1:AF35 -  -  -  -  
  277 D1:AF35 -  -  -  -  
  278 D1:AF35 -  -  -  -  
  279 D1:AF35 -  -  -  -  
  280 D1:AF35 -  -  -  -  
  281 D1:AF35 -  -  -  -  
  282 D1:AF35 -  -  -  -  
  283 D1:AF35 -  -  -  -  
  284 D1:AF35 -  -  -  -  
  285 D1:AF35 -  -  -  -  
  286 D1:AF35 -  -  -  -  
  287 D1:AF35 -  -  -  -   
  288 D1:AF35 -  -  -  -  
  289 D1:AF35 -  -  -  -  
  290 D1:AF35 -  -  -  -  
  291 D1:AF35 -  -  -  -  
  292 D1:AF35 -  -  -  -  
  293 D1:AF35 -  -  -  -  
  294 D1:AF35 -  -  -  -  
  295 D1:AF35 -  -  -  -  
  296 D1:AF35 -  -  -  -  
  297 D1:AF35 -  -  -  -  
  298 D1:AF35 -  -  -  -  
  299 D1:AF35 -  -  -  -  
  300 D1:AF35 -  -  -  -  
  301 D1:AF35 -  -  -  -  
  302 D1:AF35 -  -  -  -  
  303 D1:AF35 -  -  -  -  
  304 D1:AF35 -  -  -  -  
  305 D1:AF35 -  -  -  -  
  306 D1:AF35 -  -  -  -  
  307 D1:AF35 -  -  -  -  
  308 D1:AF35 -  -  -  -  
  309 D1:AF35 -  -  -  -  
  310 D1:AF35 -  -  -  -  
  311 D1:AF35 -  -  -  -  
  312 D1:AF35 -  -  -  -  
  313 D1:AF35 -  -  -  -  
  314 D1:AF35 -  -  -  -  
  315 D1:AF35 -  -  -  -  
  316 D1:AF35 -  -  -  -  
  317 D1:AF35 -  -  -  -  
  318 D1:AF35 -  -  -  -  
  319 D1:AF35 -  -  -  -  
  320 D1:AF35 -  -  -  -  
  321 D1:AF35 -  -  -  -  
  322 D1:AF35 -  -  -  -  
  323 D1:AF35 -  -  -  -  
  324 D1:AF35 -  -  -  -  
  325 D1:AF35 -  -  -  -  
  326 D1:AF35 -  -  -  -  
  327 D1:AF35 -  -  -  -  
  328 D1:AF35 -  -  -  -  
  329 D1:AF35 -  -  -  -  
  330 D1:AF35 -  -  -  -  
  331 D1:AF35 -  -  -  -  
  332 D1:AF35 -  -  -  -  
  333 D1:AF35 -  -  -  -  
  334 D1:AF35 -  -  -  -  
  335 D1:AF35 -  -  -  -  
  336 D1:AF35 -  -  -  -  
  337 D1:AF35 -  -  -  -  
  338 D1:AF35 -  -  -  -  
  339 D1:AF35 -  -  -  -  
  340 D1:AF35 -  -  -  -  
  341 D1:AF35 -  -  -  -  
  342 D1:AF35 -  -  -  -  
  343 D1:AF35 -  -  -  -  	
  344 D1:AF35 -  -  -  -  	
Listing for file "ascent.asm"
  554 D1:AF35 -  -  -  -  #include "BetterSpriteDecompress.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\BetterSpriteDecompress.txt"
    1 D1:AF35 -  -  -  -  
    2 D1:AF35 -  -  -  -  
    3 D1:AF35 -  -  -  -  
    4 D1:AF35 -  -  -  -  
    5 D1:AF35 -  -  -  -  
    6 D1:AF35 -  -  -  -  
    7 D1:AF35 -  -  -  -  
    8 D1:AF35 -  -  -  -  
    9 D1:AF35 -  -  -  -  ;REGISTER USEAGE
   10 D1:AF35 -  -  -  -  ;HL = sprite color data byte
   11 D1:AF35 -  -  -  -  ;C = bit selector for color data 
   12 D1:AF35 -  -  -  -  ;HL' = alpha data byte
   13 D1:AF35 -  -  -  -  ;C' = bit selector for alpha data
   14 D1:AF35 -  -  -  -  ;DE = output sprite data location
   15 D1:AF35 -  -  -  -  ;DE' = loops/line write location 
   16 D1:AF35 -  -  -  -  ;A' = alpha bits remaining to read in row
   17 D1:AF35 -  -  -  -  
   18 D1:AF35 -  -  -  -  ;SETUP ----------------
   19 D1:AF35 -  -  -  -  ;SET UP BPC MODE AND ALPHA/NOALPHA
   20 D1:AF35 -  -  -  -  ;write height or width(BG) data to decompressed sprite 
   21 D1:AF35 -  -  -  -  ;GET PER SPRITE PALETTE DATA
   22 D1:AF35 -  -  -  -  ;set registers to point to correct locations for decompression
   23 D1:AF35 -  -  -  -  ;------------
   24 D1:AF35 -  -  -  -  
   25 D1:AF35 -  -  -  -  ;GO TO EITHER FAST, SLOW, or BG SPRITE ALGORITHMS
   26 D1:AF35 -  -  -  -  
   27 D1:AF35 -  -  -  -  
   28 D1:AF35 -  -  -  -  ;FAST / SLOW ROUTINE ---------------------------
   29 D1:AF35 -  -  -  -  ;Parse through alpha data, count number of 00 pairs (gap length)
   30 D1:AF35 -  -  -  -  ;IF FAST, GOTO LDIR ROUTINE
   31 D1:AF35 -  -  -  -  ;leading pixel(s), either 11, 01, 10 in alpha data. 
   32 D1:AF35 -  -  -  -  ;write pixel mask and color data
   33 D1:AF35 -  -  -  -  
   34 D1:AF35 -  -  -  -  ;LDIR ROUTINE
   35 D1:AF35 -  -  -  -  ;Count number of 11 pairs in alpha data (LDIR length)
   36 D1:AF35 -  -  -  -  ;if slow and alpha data ends with 00, the last 11 pair becomes trailing pixels
   37 D1:AF35 -  -  -  -  ;Write LDIR length to sprite data 
   38 D1:AF35 -  -  -  -  ;Write LDIR pixel data (if nonzero)
   39 D1:AF35 -  -  -  -  ;IF FAST, GOTO END
   40 D1:AF35 -  -  -  -  
   41 D1:AF35 -  -  -  -  ;trailing pixels
   42 D1:AF35 -  -  -  -  ;11,10,01 in alpha data 
   43 D1:AF35 -  -  -  -  
   44 D1:AF35 -  -  -  -  ;END AND RESTART
   45 D1:AF35 -  -  -  -  ;Increment loops/line counter
   46 D1:AF35 -  -  -  -  ;check if end of line and write loops/line
   47 D1:AF35 -  -  -  -  
   48 D1:AF35 -  -  -  -  ;store registers and check if interrupt is required
   49 D1:AF35 -  -  -  -  ;if interruption required, return to main loop to draw next frame
   50 D1:AF35 -  -  -  -  ;otherwise return to start of loop
   51 D1:AF35 -  -  -  -  
   52 D1:AF35 -  -  -  -  ;
   53 D1:AF35 -  -  -  -  
   54 D1:AF35 -  -  -  -  
   55 D1:AF35 -  -  -  -  
   56 D1:AF35 -  -  -  -  
   57 D1:AF35 -  -  -  -  
   58 D1:AF35 -  -  -  -  
   59 D1:AF35 -  -  -  -  ;rotates c and incs hl if needed to point to next bit. can be flipped to dec bit 
   60 D1:AF35 -  -  -  -  sdcomp_next_in_bitstream:
   61 D1:AF35 -  -  -  -  sdcomp_flip_bitstream .equ $ + 1
   62 D1:AF35 CB 09 -  -  	rrc c;rlc flip
   63 D1:AF37 D0 -  -  -  	ret nc
   64 D1:AF38 -  -  -  -  sdcomp_flip_bitstream_2 .equ $
   65 D1:AF38 23 -  -  -  	inc hl;dec hl flip
   66 D1:AF39 C9 -  -  -  	ret
   67 D1:AF3A -  -  -  -  
   68 D1:AF3A -  -  -  -  ;ALPHA HELPER FUNCS ================================================================================================	
   69 D1:AF3A -  -  -  -  
   70 D1:AF3A -  -  -  -  ;IN SHADOW
   71 D1:AF3A -  -  -  -  ;HL POINTS TO PIXEL ALPHA DATA
   72 D1:AF3A -  -  -  -  ;C IS BITMASK
   73 D1:AF3A -  -  -  -  ;RETURNS 0 OR nonzero IN A 
   74 D1:AF3A -  -  -  -  ;If final alpha bit in line is read, writes loop/line data, ...
   75 D1:AF3A -  -  -  -  ; sets some flags, decrements remaining lines, traverses sprite data if flip, returns the read data 
   76 D1:AF3A -  -  -  -  ; next call returns first bit in next row  
   77 D1:AF3A -  -  -  -  sdcomp_get_next_alpha:
   78 D1:AF3A -  -  -  -  	;ld a,$A2;test 
   79 D1:AF3A -  -  -  -  	;call write_a_to_ram
   80 D1:AF3A 79 -  -  -  	ld a,c 
   81 D1:AF3B -  -  -  -  	;call write_a_to_ram 
   82 D1:AF3B 7E -  -  -  	ld a,(hl)
   83 D1:AF3C -  -  -  -  	;call write_a_to_ram
   84 D1:AF3C -  -  -  -  	
   85 D1:AF3C 37 -  -  -  	scf 
   86 D1:AF3D -  -  -  -  sdcomp_end_of_line_alp .equ $
   87 D1:AF3D DA 4A AF D1 	jp c, sdcomp_end_of_line_alp_skip
   88 D1:AF41 -  -  -  -  
   89 D1:AF41 -  -  -  -  	;ld a,$A3
   90 D1:AF41 -  -  -  -  	;call write_a_to_ram 
   91 D1:AF41 -  -  -  -  	
   92 D1:AF41 3E D2 -  -  	ld a, %11010010 ;jp nc 
   93 D1:AF43 32 AD AF D1 	ld (sdcomp_end_vitrual_zero_read),a 
   94 D1:AF47 -  -  -  -  	
   95 D1:AF47 3E 00 -  -  	ld a,0
   96 D1:AF49 C9 -  -  -  	ret ;returns virtual 0, outside of data range 
   97 D1:AF4A -  -  -  -  
   98 D1:AF4A -  -  -  -  sdcomp_end_of_line_alp_skip:
   99 D1:AF4A -  -  -  -  	
  100 D1:AF4A -  -  -  -  	
  101 D1:AF4A -  -  -  -  	
  102 D1:AF4A -  -  -  -  ;MUST BE RESET EVERY ROW
  103 D1:AF4A 37 -  -  -  	scf
  104 D1:AF4B -  -  -  -  sdcomp_bit_offset .equ $ ;jp nc for offset
  105 D1:AF4B DA 58 AF D1 	jp c,sdcomp_bit_offset_skip
  106 D1:AF4F 3E DA -  -  	ld a,%11011010;jp c 
  107 D1:AF51 32 4B AF D1 	ld (sdcomp_bit_offset),a
  108 D1:AF55 -  -  -  -  	;ld a,$A9
  109 D1:AF55 -  -  -  -  	;call write_a_to_ram
  110 D1:AF55 3E 00 -  -  	ld a,0
  111 D1:AF57 C9 -  -  -  	ret ;return 0 first bit
  112 D1:AF58 -  -  -  -  sdcomp_bit_offset_skip:;skip bit offset
  113 D1:AF58 -  -  -  -  		
  114 D1:AF58 -  -  -  -  	;ld a,$EF
  115 D1:AF58 -  -  -  -  	;call write_a_to_ram
  116 D1:AF58 7E -  -  -  	ld a,(hl)
  117 D1:AF59 -  -  -  -  	;push af 
  118 D1:AF59 -  -  -  -  	;call write_a_to_ram
  119 D1:AF59 -  -  -  -  	;ld a,c
  120 D1:AF59 -  -  -  -  	;call write_a_to_ram
  121 D1:AF59 -  -  -  -  	;pop af 
  122 D1:AF59 -  -  -  -  	
  123 D1:AF59 -  -  -  -  	
  124 D1:AF59 A1 -  -  -  	and c 
  125 D1:AF5A CD 35 AF D1 	call sdcomp_next_in_bitstream;incs bitstream
  126 D1:AF5E -  -  -  -  	;a holds data to return
  127 D1:AF5E -  -  -  -  	;call write_a_to_ram
  128 D1:AF5E 37 -  -  -  	scf 
  129 D1:AF5F -  -  -  -  sdcomp_no_alpha_1 .equ $;Load a with 1 if no alpha
  130 D1:AF5F DA 65 AF D1 	jp c,sdcomp_no_alpha_1_skip
  131 D1:AF63 3E 01 -  -  	ld a,1
  132 D1:AF65 -  -  -  -  sdcomp_no_alpha_1_skip:
  133 D1:AF65 -  -  -  -  	
  134 D1:AF65 -  -  -  -  	
  135 D1:AF65 08 -  -  -  	ex af,af' ;';into shadow
  136 D1:AF66 3D -  -  -  	dec a 
  137 D1:AF67 -  -  -  -  	;call write_a_to_ram
  138 D1:AF67 C2 93 AF D1 	jp nz, sdcomp_end_of_line_skip
  139 D1:AF6B -  -  -  -  	
  140 D1:AF6B -  -  -  -  	;HAve read last bit in line  
  141 D1:AF6B -  -  -  -  	
  142 D1:AF6B -  -  -  -  	;ld a,$AC;Test
  143 D1:AF6B -  -  -  -  	;call write_a_to_ram;Test
  144 D1:AF6B -  -  -  -  	;Decrement lines remaining in sprite
  145 D1:AF6B -  -  -  -  sdcomp_lines_remaining .equ $ + 1
  146 D1:AF6B 3E 00 -  -  	ld a,0
  147 D1:AF6D 3D -  -  -  	dec a 
  148 D1:AF6E 32 6C AF D1 	ld (sdcomp_lines_remaining),a
  149 D1:AF72 -  -  -  -  	;call write_a_to_ram
  150 D1:AF72 C2 7C AF D1 	jp nz,sdcomp_set_end_flag_skip
  151 D1:AF76 -  -  -  -  	;end of last line reached 
  152 D1:AF76 3E DA -  -  	ld a,%11011010;jp c
  153 D1:AF78 32 F2 B1 D1 	ld (sdcomp_end_reached_flag) , a ;set end reached flag to indicate sprite is done decompressing TODO 
  154 D1:AF7C -  -  -  -  	;ld a,$E9
  155 D1:AF7C -  -  -  -  	;call write_a_to_ram;TEST 
  156 D1:AF7C -  -  -  -  sdcomp_set_end_flag_skip:
  157 D1:AF7C -  -  -  -  	
  158 D1:AF7C -  -  -  -  
  159 D1:AF7C -  -  -  -  	
  160 D1:AF7C 3E D2 -  -  	ld a, %11010010 ;jp nc 
  161 D1:AF7E 32 CD B1 D1 	ld (sdcomp_end_of_line_gaplength),a
  162 D1:AF82 32 3D AF D1 	ld (sdcomp_end_of_line_alp),a
  163 D1:AF86 -  -  -  -  	;ld (sdcomp_write_loops_per_line_flag),a 
  164 D1:AF86 37 -  -  -  	scf ;Set offset bit for next line
  165 D1:AF87 -  -  -  -  sdcomp_offset_1 .equ $
  166 D1:AF87 DA 91 AF D1 	jp c,sdcomp_offset_1_skip
  167 D1:AF8B 3E D2 -  -  	ld a, %11010010 ;jp nc 
  168 D1:AF8D 32 4B AF D1 	ld (sdcomp_bit_offset),a
  169 D1:AF91 -  -  -  -  sdcomp_offset_1_skip:
  170 D1:AF91 -  -  -  -  	
  171 D1:AF91 -  -  -  -  sdcomp_sprite_width_2 .equ $+1
  172 D1:AF91 3E 00 -  -  	ld a,0 ;Return sprite width to a'
  173 D1:AF93 -  -  -  -  	
  174 D1:AF93 -  -  -  -  	;call write_a_to_ram
  175 D1:AF93 -  -  -  -  	
  176 D1:AF93 -  -  -  -  sdcomp_end_of_line_skip:
  177 D1:AF93 08 -  -  -  	ex af,af' ;' ;out
  178 D1:AF94 -  -  -  -  	
  179 D1:AF94 -  -  -  -  	;push af ;testing
  180 D1:AF94 -  -  -  -  	;ld a,$A0
  181 D1:AF94 -  -  -  -  	;call write_a_to_ram
  182 D1:AF94 -  -  -  -  	;pop af 
  183 D1:AF94 -  -  -  -  	;call write_a_to_ram
  184 D1:AF94 -  -  -  -  	
  185 D1:AF94 C9 -  -  -  	ret 
  186 D1:AF95 -  -  -  -  	
  187 D1:AF95 -  -  -  -  
  188 D1:AF95 -  -  -  -  
  189 D1:AF95 -  -  -  -  ;in shadow,returns a $FF,$0F,$F0,$00
  190 D1:AF95 -  -  -  -  sdcomp_get_next_alpha_pair:
  191 D1:AF95 -  -  -  -  	;ld a,$A1
  192 D1:AF95 -  -  -  -  	;call write_a_to_ram
  193 D1:AF95 -  -  -  -  	
  194 D1:AF95 -  -  -  -  	;ld a,c ;test
  195 D1:AF95 -  -  -  -  	;call write_a_to_ram 
  196 D1:AF95 -  -  -  -  	;ld a,(hl) ;test
  197 D1:AF95 -  -  -  -  	;call write_a_to_ram
  198 D1:AF95 -  -  -  -  	
  199 D1:AF95 3E DA -  -  	ld a,%11011010;jp c 
  200 D1:AF97 32 AD AF D1 	ld(sdcomp_end_vitrual_zero_read),a ;reset vitrual zero read flag
  201 D1:AF9B -  -  -  -  	
  202 D1:AF9B CD 3A AF D1 	call sdcomp_get_next_alpha
  203 D1:AF9F B7 -  -  -  	or a 
  204 D1:AFA0 CA AA AF D1 	jp z,sdcomp_get_next_alpha_pair0
  205 D1:AFA4 3E F0 -  -  	ld a,$F0;FIRST BIT WAS 1
  206 D1:AFA6 -  -  -  -  	;call write_a_to_ram
  207 D1:AFA6 C3 B9 AF D1 	jp sdcomp_get_next_alpha_pair1
  208 D1:AFAA -  -  -  -  sdcomp_get_next_alpha_pair0:
  209 D1:AFAA 3E 00 -  -  	ld a,0
  210 D1:AFAC -  -  -  -  	
  211 D1:AFAC 37 -  -  -  	scf 
  212 D1:AFAD -  -  -  -  sdcomp_end_vitrual_zero_read .equ $
  213 D1:AFAD DA B9 AF D1 	jp c,sdcomp_get_next_alpha_pair1
  214 D1:AFB1 F5 -  -  -  	push af 
  215 D1:AFB2 -  -  -  -  	;This gets triggered when we have read a vitrual 0 (outside of line) as the first bit in an alpha pair 
  216 D1:AFB2 -  -  -  -  	
  217 D1:AFB2 3E 3D -  -  	ld a,%00111101 ;dec a 
  218 D1:AFB4 32 D4 B1 D1 	ld (sdcomp_dec_gap_btwn_rows),a 
  219 D1:AFB8 -  -  -  -  	;We should subtract 1 from the next interline gap length whenever a virtual 00 is read.
  220 D1:AFB8 -  -  -  -  	;ld a,$A4
  221 D1:AFB8 -  -  -  -  	;call write_a_to_ram
  222 D1:AFB8 F1 -  -  -  	pop af 
  223 D1:AFB9 -  -  -  -  	
  224 D1:AFB9 -  -  -  -  sdcomp_get_next_alpha_pair1:
  225 D1:AFB9 -  -  -  -  
  226 D1:AFB9 -  -  -  -  	
  227 D1:AFB9 32 CF AF D1 	ld (sdcomp_get_next_alpha_pair_or),a 
  228 D1:AFBD -  -  -  -  	
  229 D1:AFBD CD 3A AF D1 	call sdcomp_get_next_alpha
  230 D1:AFC1 B7 -  -  -  	or a 
  231 D1:AFC2 CA CC AF D1 	jp z,sdcomp_get_next_alpha_pair2
  232 D1:AFC6 3E 0F -  -  	ld a,$0F;SECOND BIT WAS 1
  233 D1:AFC8 C3 CE AF D1 	jp sdcomp_get_next_alpha_pair3
  234 D1:AFCC -  -  -  -  sdcomp_get_next_alpha_pair2:
  235 D1:AFCC 3E 00 -  -  	ld a,0;SECOND BIT WAS 0
  236 D1:AFCE -  -  -  -  sdcomp_get_next_alpha_pair3:	
  237 D1:AFCE -  -  -  -  sdcomp_get_next_alpha_pair_or .equ $ + 1
  238 D1:AFCE F6 00 -  -  	or 0;OR WITH FIRST BIT 
  239 D1:AFD0 -  -  -  -  	
  240 D1:AFD0 C9 -  -  -  	ret 
  241 D1:AFD1 -  -  -  -  	
  242 D1:AFD1 -  -  -  -  ;COLOR HELPER FUNCS =================================================================================================
  243 D1:AFD1 -  -  -  -  
  244 D1:AFD1 -  -  -  -  ;not in shadow, returns a = color0000
  245 D1:AFD1 -  -  -  -  sdcomp_get_next_color_leading_nibble:
  246 D1:AFD1 CD DA AF D1 	call sdcomp_get_next_color
  247 D1:AFD5 0F -  -  -  	rrca 
  248 D1:AFD6 0F -  -  -  	rrca 
  249 D1:AFD7 0F -  -  -  	rrca 
  250 D1:AFD8 0F -  -  -  	rrca
  251 D1:AFD9 C9 -  -  -  	ret 
  252 D1:AFDA -  -  -  -  
  253 D1:AFDA -  -  -  -  
  254 D1:AFDA -  -  -  -  
  255 D1:AFDA -  -  -  -  ;bit orders
  256 D1:AFDA -  -  -  -  ;	noflip   flip 
  257 D1:AFDA -  -  -  -  ;4bpp 3210 	 0123
  258 D1:AFDA -  -  -  -  ;3bpp 210	 012
  259 D1:AFDA -  -  -  -  ;2bpp 10	 01
  260 D1:AFDA -  -  -  -  ;1bpp 0		 0
  261 D1:AFDA -  -  -  -  
  262 D1:AFDA -  -  -  -  ;not in shadow, returns a = 0000color
  263 D1:AFDA -  -  -  -  sdcomp_get_next_color:
  264 D1:AFDA D5 -  -  -  	push de ;save data write location
  265 D1:AFDB 1E 00 -  -  	ld e,0;E will store the final color data
  266 D1:AFDD -  -  -  -  	
  267 D1:AFDD 37 -  -  -  	scf
  268 D1:AFDE -  -  -  -  sdcomp_0bpc .equ $ ;if sprite is 0bpc, skip reading bitstream, set to jp c 
  269 D1:AFDE D2 28 B0 D1 	jp nc,sdcomp_get_color_from_index
  270 D1:AFE2 -  -  -  -  	
  271 D1:AFE2 -  -  -  -  	;ld a,$C1
  272 D1:AFE2 -  -  -  -  	;call write_a_to_ram
  273 D1:AFE2 -  -  -  -  	
  274 D1:AFE2 7E -  -  -  	ld a,(hl) ;read next bit 
  275 D1:AFE3 -  -  -  -  	;call write_a_to_ram ;TEST
  276 D1:AFE3 A1 -  -  -  	and c
  277 D1:AFE4 -  -  -  -  	;call write_a_to_ram ;TEST
  278 D1:AFE4 CD 35 AF D1 	call sdcomp_next_in_bitstream  ;inc bitstream 
  279 D1:AFE8 B7 -  -  -  	or a
  280 D1:AFE9 CA EF AF D1 	jp z,sdcomp_get_color_data_set_skip_1
  281 D1:AFED -  -  -  -  sdcomp_color_bit_0 .equ $ + 1 
  282 D1:AFED CB CB -  -  	set 1,e  ;set bit of e reg to color, 0 for flip, else depends on bpc 
  283 D1:AFEF -  -  -  -  sdcomp_get_color_data_set_skip_1:
  284 D1:AFEF -  -  -  -  	
  285 D1:AFEF 37 -  -  -  	scf
  286 D1:AFF0 -  -  -  -  sdcomp_1bpc .equ $
  287 D1:AFF0 D2 28 B0 D1 	jp nc,sdcomp_get_color_from_index ;if 1bpc jump to end 
  288 D1:AFF4 -  -  -  -  
  289 D1:AFF4 -  -  -  -  	;ld a,$C2
  290 D1:AFF4 -  -  -  -  	;call write_a_to_ram
  291 D1:AFF4 -  -  -  -  	
  292 D1:AFF4 7E -  -  -  	ld a,(hl)
  293 D1:AFF5 -  -  -  -  	;call write_a_to_ram ;TEST
  294 D1:AFF5 A1 -  -  -  	and c 
  295 D1:AFF6 -  -  -  -  	;call write_a_to_ram ;TEST
  296 D1:AFF6 CD 35 AF D1 	call sdcomp_next_in_bitstream
  297 D1:AFFA B7 -  -  -  	or a
  298 D1:AFFB CA 01 B0 D1 	jp z,sdcomp_get_color_data_set_skip_2
  299 D1:AFFF -  -  -  -  sdcomp_color_bit_1 .equ $ + 1 	
  300 D1:AFFF CB C3 -  -  	set 0,e ;store next bit of color data in e  
  301 D1:B001 -  -  -  -  sdcomp_get_color_data_set_skip_2:
  302 D1:B001 -  -  -  -  	
  303 D1:B001 37 -  -  -  	scf
  304 D1:B002 -  -  -  -  sdcomp_2bpc .equ $ ;if 2bpc jump to end
  305 D1:B002 D2 28 B0 D1 	jp nc,sdcomp_get_color_from_index
  306 D1:B006 -  -  -  -  	
  307 D1:B006 7E -  -  -  	ld a,(hl)
  308 D1:B007 A1 -  -  -  	and c 
  309 D1:B008 CD 35 AF D1 	call sdcomp_next_in_bitstream
  310 D1:B00C B7 -  -  -  	or a
  311 D1:B00D CA 13 B0 D1 	jp z,sdcomp_get_color_data_set_skip_3
  312 D1:B011 -  -  -  -  sdcomp_color_bit_2 .equ $ + 1 
  313 D1:B011 CB D3 -  -  	set 2,e 
  314 D1:B013 -  -  -  -  sdcomp_get_color_data_set_skip_3:
  315 D1:B013 -  -  -  -  	
  316 D1:B013 37 -  -  -  	scf
  317 D1:B014 -  -  -  -  sdcomp_3bpc .equ $
  318 D1:B014 D2 28 B0 D1 	jp nc,sdcomp_get_color_from_index	
  319 D1:B018 -  -  -  -  
  320 D1:B018 -  -  -  -  ;4bpp, interpret as color data, not indexed	
  321 D1:B018 7E -  -  -  	ld a,(hl)
  322 D1:B019 A1 -  -  -  	and c 
  323 D1:B01A CD 35 AF D1 	call sdcomp_next_in_bitstream
  324 D1:B01E B7 -  -  -  	or a
  325 D1:B01F CA 25 B0 D1 	jp z,sdcomp_get_color_data_set_skip_4
  326 D1:B023 -  -  -  -  sdcomp_color_bit_3 .equ $ + 1 
  327 D1:B023 CB DB -  -  	set 3,e 
  328 D1:B025 -  -  -  -  sdcomp_get_color_data_set_skip_4:
  329 D1:B025 -  -  -  -  ;4bpp, interpret as color data, not indexed
  330 D1:B025 7B -  -  -  	ld a,e 
  331 D1:B026 D1 -  -  -  	pop de 
  332 D1:B027 C9 -  -  -  	ret 
  333 D1:B028 -  -  -  -  
  334 D1:B028 -  -  -  -  sdcomp_get_color_from_index: ; e holds index of color data, 1-8
  335 D1:B028 -  -  -  -  	
  336 D1:B028 -  -  -  -  	;ld a,$DD
  337 D1:B028 -  -  -  -  	;call write_a_to_ram
  338 D1:B028 -  -  -  -  	;ld a,e 
  339 D1:B028 -  -  -  -  	;call write_a_to_ram
  340 D1:B028 -  -  -  -  	
  341 D1:B028 -  -  -  -  	
  342 D1:B028 CB 53 -  -  	bit 2,e 
  343 D1:B02A CA 4C B0 D1 	jp z, sdcomp_get_color_from_index_2l
  344 D1:B02E -  -  -  -  	
  345 D1:B02E -  -  -  -  	;Bit 2 = 1 
  346 D1:B02E CB 4B -  -  	bit 1,e 
  347 D1:B030 CA 40 B0 D1 	jp z,sdcomp_get_color_from_index_2h1l
  348 D1:B034 -  -  -  -  
  349 D1:B034 -  -  -  -  	;bit 2 = 1 1 = 1
  350 D1:B034 -  -  -  -  sdcomp_indexed_color_data_4 .equ $ + 1	
  351 D1:B034 3E 00 -  -  	ld a,0
  352 D1:B036 CB 43 -  -  	bit 0,e 
  353 D1:B038 CA 6E B0 D1 	jp z,sdcomp_get_color_from_index_msn
  354 D1:B03C C3 6A B0 D1 	jp sdcomp_get_color_from_index_lsn
  355 D1:B040 -  -  -  -  
  356 D1:B040 -  -  -  -  sdcomp_get_color_from_index_2h1l:
  357 D1:B040 -  -  -  -  	;2 = 1 1 = 0 
  358 D1:B040 -  -  -  -  sdcomp_indexed_color_data_3 .equ $ + 1	
  359 D1:B040 3E 00 -  -  	ld a,0
  360 D1:B042 CB 43 -  -  	bit 0,e 
  361 D1:B044 CA 6E B0 D1 	jp z,sdcomp_get_color_from_index_msn
  362 D1:B048 C3 6A B0 D1 	jp sdcomp_get_color_from_index_lsn
  363 D1:B04C -  -  -  -  	
  364 D1:B04C -  -  -  -  sdcomp_get_color_from_index_2l:
  365 D1:B04C -  -  -  -  	;bit 2 was 0 
  366 D1:B04C CB 4B -  -  	bit 1,e 
  367 D1:B04E CA 5E B0 D1 	jp z,sdcomp_get_color_from_index_2l1l
  368 D1:B052 -  -  -  -  	
  369 D1:B052 -  -  -  -  	;bit 2 = 0 1 = 1
  370 D1:B052 -  -  -  -  sdcomp_indexed_color_data_2 .equ $ + 1	
  371 D1:B052 3E 00 -  -  	ld a,0
  372 D1:B054 CB 43 -  -  	bit 0,e 
  373 D1:B056 CA 6E B0 D1 	jp z,sdcomp_get_color_from_index_msn
  374 D1:B05A C3 6A B0 D1 	jp sdcomp_get_color_from_index_lsn
  375 D1:B05E -  -  -  -  	
  376 D1:B05E -  -  -  -  sdcomp_get_color_from_index_2l1l:
  377 D1:B05E -  -  -  -  	;bit 2 =0  1 = 0
  378 D1:B05E -  -  -  -  sdcomp_indexed_color_data_1 .equ $ + 1	
  379 D1:B05E 3E 00 -  -  	ld a,0
  380 D1:B060 -  -  -  -  	
  381 D1:B060 CB 43 -  -  	bit 0,e 
  382 D1:B062 CA 6E B0 D1 	jp z,sdcomp_get_color_from_index_msn
  383 D1:B066 C3 6A B0 D1 	jp sdcomp_get_color_from_index_lsn
  384 D1:B06A -  -  -  -  sdcomp_get_color_from_index_lsn:
  385 D1:B06A E6 0F -  -  	and %00001111;and with least significant nibble 
  386 D1:B06C D1 -  -  -  	pop de 
  387 D1:B06D -  -  -  -  	
  388 D1:B06D -  -  -  -  	;push af 
  389 D1:B06D -  -  -  -  	;ld a,$C0
  390 D1:B06D -  -  -  -  	;call write_a_to_ram
  391 D1:B06D -  -  -  -  	;pop af 
  392 D1:B06D -  -  -  -  	;call write_a_to_ram
  393 D1:B06D -  -  -  -  	
  394 D1:B06D C9 -  -  -  	ret 
  395 D1:B06E -  -  -  -  	
  396 D1:B06E -  -  -  -  sdcomp_get_color_from_index_msn:
  397 D1:B06E E6 F0 -  -  	and %11110000;and with most significant nibble 
  398 D1:B070 0F -  -  -  	rrca 
  399 D1:B071 0F -  -  -  	rrca 
  400 D1:B072 0F -  -  -  	rrca 
  401 D1:B073 0F -  -  -  	rrca 
  402 D1:B074 D1 -  -  -  	pop de 
  403 D1:B075 -  -  -  -  	
  404 D1:B075 -  -  -  -  	;push af 
  405 D1:B075 -  -  -  -  	;ld a,$C0
  406 D1:B075 -  -  -  -  	;call write_a_to_ram
  407 D1:B075 -  -  -  -  	;pop af 
  408 D1:B075 -  -  -  -  	;call write_a_to_ram
  409 D1:B075 -  -  -  -  	
  410 D1:B075 C9 -  -  -  	ret 
  411 D1:B076 -  -  -  -  
  412 D1:B076 -  -  -  -  
  413 D1:B076 -  -  -  -  
  414 D1:B076 -  -  -  -  ;function for traversing sprite data for reversed sprites.
  415 D1:B076 -  -  -  -  ;Reads forward through alpha and color data to end of line, so that it can then be read backwards 
  416 D1:B076 -  -  -  -  ;in shadow ,destroys a
  417 D1:B076 -  -  -  -  sdcomp_traverse_line_data:
  418 D1:B076 D9 -  -  -  	exx ;OUT 
  419 D1:B077 -  -  -  -  sdcomp_color_data_line_end_byte .equ $ + 1
  420 D1:B077 21 00 00 00 	ld hl,0 ;load end of previous color data line 
  421 D1:B07B -  -  -  -  sdcomp_color_data_line_end_mask .equ $ + 1
  422 D1:B07B 0E 00 -  -  	ld c,0 ;load end of previous color data line
  423 D1:B07D D9 -  -  -  	exx;toshadow 
  424 D1:B07E -  -  -  -  	
  425 D1:B07E -  -  -  -  	;load end of previous alpha data line 
  426 D1:B07E -  -  -  -  sdcomp_alpha_data_line_end_byte .equ $ + 1
  427 D1:B07E 21 00 00 00 	ld hl,0
  428 D1:B082 -  -  -  -  sdcomp_alpha_data_line_end_mask .equ $ + 1
  429 D1:B082 0E 00 -  -  	ld c,0
  430 D1:B084 -  -  -  -  sdcomp_traverse_initial:
  431 D1:B084 D5 -  -  -  	push de
  432 D1:B085 -  -  -  -  sdcomp_sprite_width .equ $ + 1
  433 D1:B085 1E 00 -  -  	ld e, 0
  434 D1:B087 -  -  -  -  	;e holds sprite width 
  435 D1:B087 -  -  -  -  	
  436 D1:B087 -  -  -  -  	;Read forward through alpha data and inc color pointer if alpha is 1 
  437 D1:B087 -  -  -  -  sdcomp_traverse_line_data_loop:
  438 D1:B087 CB 09 -  -  	rrc c 
  439 D1:B089 D2 8E B0 D1 	jp nc,sdcomp_traverse_line_data_alpha_inc_skip ;if not reached end of byte, skip
  440 D1:B08D 23 -  -  -  	inc hl ;have reached end of alpha byte, inc hl 
  441 D1:B08E -  -  -  -  sdcomp_traverse_line_data_alpha_inc_skip:
  442 D1:B08E 7E -  -  -  	ld a,(hl)
  443 D1:B08F A1 -  -  -  	and c ;read alpha data 
  444 D1:B090 -  -  -  -  sdcomp_no_alpha_3 .equ $ ;jp c for no alpha sprites to always inc color 
  445 D1:B090 CA A6 B0 D1 	jp z,sdcomp_traverse_line_data_color_skip;if no alpha skip incrementing color. 
  446 D1:B094 D9 -  -  -  	exx;out of shadow 
  447 D1:B095 -  -  -  -  
  448 D1:B095 CB 09 -  -  	rrc c ;rotate mask
  449 D1:B097 -  -  -  -  sdcomp_traverse_2bpp .equ $ + 1
  450 D1:B097 CB 0F -  -  	rrc a ;replace with rrc c for 2bpc (not nop because rrc c is 2 byte operation)
  451 D1:B099 -  -  -  -  sdcomp_traverse_3bpp .equ $ + 1
  452 D1:B099 CB 0F -  -  	rrc a;rrc c for 3bpc
  453 D1:B09B -  -  -  -  sdcomp_traverse_4bpp .equ $ + 1
  454 D1:B09B CB 0F -  -  	rrc a;rrc c for 4 bpc 
  455 D1:B09D -  -  -  -  	
  456 D1:B09D -  -  -  -  	;check if end of byte was reached during rotations
  457 D1:B09D 79 -  -  -  	ld a,c
  458 D1:B09E -  -  -  -  sdcomp_traverse_bit_check .equ $ + 1
  459 D1:B09E E6 F0 -  -  	and %11110000 ; 4bpc = 11110000 3bpc = 11100000, 2bpc 11000000 1bpc 10000000 TODO 
  460 D1:B0A0 CA A5 B0 D1 	jp z,sdcomp_traverse_line_data_color_inc_skip
  461 D1:B0A4 23 -  -  -  	inc hl ;inc hl if end of byte was reached 
  462 D1:B0A5 -  -  -  -  sdcomp_traverse_line_data_color_inc_skip:
  463 D1:B0A5 D9 -  -  -  	exx ;toshadow
  464 D1:B0A6 -  -  -  -  sdcomp_traverse_line_data_color_skip:
  465 D1:B0A6 1D -  -  -  	dec e ;e holds sprite width 
  466 D1:B0A7 C2 87 B0 D1 	jp nz,sdcomp_traverse_line_data_loop ;loop until end of line reached 
  467 D1:B0AB D1 -  -  -  	pop de  ;back to write location 
  468 D1:B0AC -  -  -  -  	;set new end of line pointers 
  469 D1:B0AC -  -  -  -  	
  470 D1:B0AC -  -  -  -  	;ld a,$BB 
  471 D1:B0AC -  -  -  -  	;call write_a_to_ram 
  472 D1:B0AC -  -  -  -  	;ld a,(hl) 
  473 D1:B0AC -  -  -  -  	;call write_a_to_ram 
  474 D1:B0AC -  -  -  -  	;ld a,c 
  475 D1:B0AC -  -  -  -  	;call write_a_to_ram 
  476 D1:B0AC -  -  -  -  	
  477 D1:B0AC -  -  -  -  	
  478 D1:B0AC 22 7F B0 D1 	ld (sdcomp_alpha_data_line_end_byte),hl
  479 D1:B0B0 79 -  -  -  	ld a,c
  480 D1:B0B1 32 83 B0 D1 	ld (sdcomp_alpha_data_line_end_mask),a
  481 D1:B0B5 D9 -  -  -  	exx ;out
  482 D1:B0B6 22 78 B0 D1 	ld (sdcomp_color_data_line_end_byte),hl
  483 D1:B0BA 79 -  -  -  	ld a,c 
  484 D1:B0BB 32 7C B0 D1 	ld (sdcomp_color_data_line_end_mask),a
  485 D1:B0BF -  -  -  -  	
  486 D1:B0BF -  -  -  -  	;ld a,(hl) 
  487 D1:B0BF -  -  -  -  	;call write_a_to_ram 
  488 D1:B0BF -  -  -  -  	;ld a,c 
  489 D1:B0BF -  -  -  -  	;call write_a_to_ram 
  490 D1:B0BF -  -  -  -  	
  491 D1:B0BF D9 -  -  -  	exx;to shadow 
  492 D1:B0C0 C9 -  -  -  	ret
  493 D1:B0C1 -  -  -  -  
  494 D1:B0C1 -  -  -  -  
  495 D1:B0C1 -  -  -  -  
  496 D1:B0C1 -  -  -  -  
  497 D1:B0C1 -  -  -  -  
  498 D1:B0C1 -  -  -  -  ;hl/c is color data, de is ldir write pos, b' is ldir length, not in shadow 
  499 D1:B0C1 -  -  -  -  sdcomp_write_ldir_data_loop:
  500 D1:B0C1 CD DA AF D1 	call sdcomp_get_next_color
  501 D1:B0C5 47 -  -  -  	ld b,a;first pixel
  502 D1:B0C6 CD D1 AF D1 	call sdcomp_get_next_color_leading_nibble
  503 D1:B0CA B0 -  -  -  	or b
  504 D1:B0CB -  -  -  -  	
  505 D1:B0CB -  -  -  -  	
  506 D1:B0CB 12 -  -  -  	ld (de),a;write color data
  507 D1:B0CC 13 -  -  -  	inc de
  508 D1:B0CD D9 -  -  -  	exx;to shadow
  509 D1:B0CE 05 -  -  -  	dec b;ldir length counter
  510 D1:B0CF D9 -  -  -  	exx
  511 D1:B0D0 C2 C1 B0 D1 	jp nz,sdcomp_write_ldir_data_loop
  512 D1:B0D4 C9 -  -  -  	ret
  513 D1:B0D5 -  -  -  -  	
  514 D1:B0D5 -  -  -  -  
  515 D1:B0D5 -  -  -  -  ;Not in shadow, a holds alpha data pair, writes color and mask data to output 
  516 D1:B0D5 -  -  -  -  sdcomp_write_leading_or_end_pixels:
  517 D1:B0D5 D5 -  -  -  	push de ;output location	
  518 D1:B0D6 47 -  -  -  	ld b,a;save for later
  519 D1:B0D7 CB 67 -  -  	bit 4,a ;check if first pixel has color 
  520 D1:B0D9 3E 00 -  -  	ld a,0
  521 D1:B0DB 16 FF -  -  	ld d,%11111111;pixel data mask assuming no colors 
  522 D1:B0DD CA E7 B0 D1 	jp z,sdcomp_leading_pixel_first_skip
  523 D1:B0E1 -  -  -  -  	;has first color
  524 D1:B0E1 16 F0 -  -  	ld d,%11110000;save second pixel of bg 
  525 D1:B0E3 CD DA AF D1 	call sdcomp_get_next_color
  526 D1:B0E7 -  -  -  -  sdcomp_leading_pixel_first_skip:
  527 D1:B0E7 -  -  -  -  	;a is either $00 or $0color1
  528 D1:B0E7 -  -  -  -  	
  529 D1:B0E7 1E FF -  -  	ld e,%11111111;assuming no colors
  530 D1:B0E9 -  -  -  -  	
  531 D1:B0E9 CB 40 -  -  	bit 0,b;check second pixel alpha
  532 D1:B0EB 47 -  -  -  	ld b,a;save for later 
  533 D1:B0EC 3E 00 -  -  	ld a,0
  534 D1:B0EE CA F8 B0 D1 	jp z,sdcomp_leading_pixel_second_skip;
  535 D1:B0F2 -  -  -  -  	;has second color 
  536 D1:B0F2 CD D1 AF D1 	call sdcomp_get_next_color_leading_nibble
  537 D1:B0F6 -  -  -  -  	;a = color2 0 
  538 D1:B0F6 1E 0F -  -  	ld e,%00001111;save first pixel of bg
  539 D1:B0F8 -  -  -  -  	
  540 D1:B0F8 -  -  -  -  sdcomp_leading_pixel_second_skip:
  541 D1:B0F8 -  -  -  -  	;a is either 00 or c2 0 
  542 D1:B0F8 -  -  -  -  	;b is either 00 or 0 c1 
  543 D1:B0F8 B0 -  -  -  	or b 
  544 D1:B0F9 47 -  -  -  	ld b,a;final color data
  545 D1:B0FA 7A -  -  -  	ld a,d 
  546 D1:B0FB A3 -  -  -  	and e ;final mask data 
  547 D1:B0FC -  -  -  -  	
  548 D1:B0FC D1 -  -  -  	pop de;return to pointer 
  549 D1:B0FD -  -  -  -  	
  550 D1:B0FD 12 -  -  -  	ld (de),a;write mask data 
  551 D1:B0FE 13 -  -  -  	inc de 
  552 D1:B0FF 78 -  -  -  	ld a,b;color data 
  553 D1:B100 12 -  -  -  	ld (de),a;write color data 
  554 D1:B101 -  -  -  -  	
  555 D1:B101 -  -  -  -  	
  556 D1:B101 -  -  -  -  	
  557 D1:B101 -  -  -  -  	;call write_a_to_ram
  558 D1:B101 -  -  -  -  	
  559 D1:B101 13 -  -  -  	inc de 
  560 D1:B102 C9 -  -  -  	ret 
  561 D1:B103 -  -  -  -  
  562 D1:B103 -  -  -  -  
  563 D1:B103 -  -  -  -  
  564 D1:B103 -  -  -  -  ;ENTRY POINT 
  565 D1:B103 -  -  -  -  
  566 D1:B103 -  -  -  -  
  567 D1:B103 -  -  -  -  ;hl = sprite data start, de = main data decompress location
  568 D1:B103 -  -  -  -  sprite_decompress:
  569 D1:B103 -  -  -  -  
  570 D1:B103 -  -  -  -  
  571 D1:B103 -  -  -  -  	;SETUP ===========================================================================================================
  572 D1:B103 -  -  -  -  
  573 D1:B103 -  -  -  -  	;SET UP BPC MODE AND ALPHA/NOALPHA
  574 D1:B103 -  -  -  -  
  575 D1:B103 -  -  -  -  	;HL pointing to flags registers
  576 D1:B103 -  -  -  -  	;TODO set up bpc and alpha modes, Sprite type and offset. Write conditional jumps where needed
  577 D1:B103 -  -  -  -  	;set bpc mode 
  578 D1:B103 CB 7E -  -  	bit 7,(hl)
  579 D1:B105 C4 D3 B3 D1 	call nz,sdcomp_set_4bpc
  580 D1:B109 CB 76 -  -  	bit 6,(hl)
  581 D1:B10B C4 70 B3 D1 	call nz,sdcomp_set_3bpc 
  582 D1:B10F CB 6E -  -  	bit 5,(hl)
  583 D1:B111 C4 1D B3 D1 	call nz,sdcomp_set_2bpc 
  584 D1:B115 CB 66 -  -  	bit 4,(hl)
  585 D1:B117 C4 E8 B2 D1 	call nz,sdcomp_set_1bpc 
  586 D1:B11B CB 5E -  -  	bit 3,(hl)
  587 D1:B11D C4 CD B2 D1 	call nz,sdcomp_set_0bpc 
  588 D1:B121 CB 56 -  -  	bit 2,(hl)
  589 D1:B123 C4 3A B4 D1 	call nz,sdcomp_set_noalpha
  590 D1:B127 CB 56 -  -  	bit 2,(hl)
  591 D1:B129 CC 4B B4 D1 	call z,sdcomp_reset_noalpha
  592 D1:B12D -  -  -  -  	
  593 D1:B12D -  -  -  -  	
  594 D1:B12D 3E 00 -  -  	ld a,0
  595 D1:B12F 32 5B B2 D1 	ld (sdcomp_loops_per_line_counter),a ;reset loops counter
  596 D1:B133 3E DA -  -  	ld a,%11011010;jp c 
  597 D1:B135 32 AD AF D1 	ld(sdcomp_end_vitrual_zero_read),a ;reset vitrual zero read flag
  598 D1:B139 -  -  -  -  	;write height or width(BG) data to decompressed sprite 
  599 D1:B139 -  -  -  -  	
  600 D1:B139 23 -  -  -  	inc hl ;hl points to width in px 
  601 D1:B13A -  -  -  -  	
  602 D1:B13A -  -  -  -  	
  603 D1:B13A 7E -  -  -  	ld a,(hl) 
  604 D1:B13B 32 86 B0 D1 	ld (sdcomp_sprite_width),a ;TODO set width in required locations
  605 D1:B13F 32 92 AF D1 	ld (sdcomp_sprite_width_2),a
  606 D1:B143 47 -  -  -  	ld b,a;width
  607 D1:B144 08 -  -  -  	ex af,af' ;'
  608 D1:B145 78 -  -  -  	ld a,b;Number of alpha bits remaining in row
  609 D1:B146 08 -  -  -  	ex af,af' ;' 
  610 D1:B147 -  -  -  -  
  611 D1:B147 -  -  -  -  
  612 D1:B147 -  -  -  -  sdcomp_offset_2 .equ $ 
  613 D1:B147 00 -  -  -  	nop ;replace with inc b for offset 
  614 D1:B148 -  -  -  -  
  615 D1:B148 -  -  -  -  	;Calculate number of bytes to skip between rows for gap length  
  616 D1:B148 04 -  -  -  	inc b ;round up on odd sprites
  617 D1:B149 CB 38 -  -  	srl b;divide by 2
  618 D1:B14B -  -  -  -  	
  619 D1:B14B -  -  -  -  	
  620 D1:B14B 3E A0 -  -  	ld a,160
  621 D1:B14D 90 -  -  -  	sub b ;a holds 160 - (width in pairs)
  622 D1:B14E 32 D2 B1 D1 	ld (sdcomp_gap_btwn_rows),a 
  623 D1:B152 -  -  -  -  	
  624 D1:B152 -  -  -  -  	;call write_a_to_ram
  625 D1:B152 -  -  -  -  	;ld a,$BE
  626 D1:B152 -  -  -  -  	;call write_a_to_ram
  627 D1:B152 -  -  -  -  	;ld a,b 
  628 D1:B152 -  -  -  -  	;call write_a_to_ram
  629 D1:B152 -  -  -  -  	
  630 D1:B152 -  -  -  -  	
  631 D1:B152 7E -  -  -  	ld a,(hl);load width again
  632 D1:B153 -  -  -  -  	
  633 D1:B153 47 -  -  -  	ld b,a 
  634 D1:B154 -  -  -  -  	
  635 D1:B154 -  -  -  -  
  636 D1:B154 23 -  -  -  	inc hl ;hl points to height 
  637 D1:B155 7E -  -  -  	ld a,(hl);height
  638 D1:B156 32 6C AF D1 	ld (sdcomp_lines_remaining),a ;write height to lines remaining counter
  639 D1:B15A -  -  -  -  	
  640 D1:B15A -  -  -  -  	
  641 D1:B15A -  -  -  -  
  642 D1:B15A 12 -  -  -  	ld (de), a ;write height to first byte of sprite data 
  643 D1:B15B 13 -  -  -  	inc de 
  644 D1:B15C -  -  -  -  	
  645 D1:B15C 23 -  -  -  	inc hl ;HL points to start of alpha data 
  646 D1:B15D -  -  -  -  
  647 D1:B15D E5 -  -  -  	push hl ;Save alpha data 
  648 D1:B15E -  -  -  -  	
  649 D1:B15E -  -  -  -  	
  650 D1:B15E -  -  -  -  	;Need to find start of color data
  651 D1:B15E -  -  -  -  	;at this point a = height, b = width 
  652 D1:B15E -  -  -  -  	
  653 D1:B15E 37 -  -  -  	scf
  654 D1:B15F -  -  -  -  	
  655 D1:B15F -  -  -  -  sdcomp_no_alpha_2 .equ $
  656 D1:B15F D2 78 B1 D1 	jp nc,sdcomp_no_alpha_2_skip ; if no alpha skip this part
  657 D1:B163 -  -  -  -  	
  658 D1:B163 -  -  -  -  	;need to find number of pixels, div by 8 and skip that many bytes
  659 D1:B163 -  -  -  -  	
  660 D1:B163 E5 -  -  -  	push hl
  661 D1:B164 67 -  -  -  	ld h,a;height
  662 D1:B165 68 -  -  -  	ld l,b;width
  663 D1:B166 ED 6C -  -  	mlt hl;number of pixels
  664 D1:B168 -  -  -  -  	;rounds up to nearest multiple of 8
  665 D1:B168 2B -  -  -  	dec hl
  666 D1:B169 CB 3C -  -  	srl h
  667 D1:B16B CB 1D -  -  	rr l
  668 D1:B16D CB 3C -  -  	srl h
  669 D1:B16F CB 1D -  -  	rr l 
  670 D1:B171 CB 3C -  -  	srl h 
  671 D1:B173 CB 1D -  -  	rr l 
  672 D1:B175 23 -  -  -  	inc hl 
  673 D1:B176 C1 -  -  -  	pop bc ;initial hl location
  674 D1:B177 -  -  -  -  	;add number of bytes to skip 
  675 D1:B177 09 -  -  -  	add hl,bc ;HL points to start of color data 
  676 D1:B178 -  -  -  -  	
  677 D1:B178 -  -  -  -  	
  678 D1:B178 -  -  -  -  	
  679 D1:B178 -  -  -  -  sdcomp_no_alpha_2_skip:
  680 D1:B178 -  -  -  -  
  681 D1:B178 -  -  -  -  	
  682 D1:B178 -  -  -  -  	;HL POINTING TO COLOR PALETTE DATA
  683 D1:B178 -  -  -  -  
  684 D1:B178 -  -  -  -  	
  685 D1:B178 47 -  -  -  	ld b,a ;save for after
  686 D1:B179 -  -  -  -  	;GET LOCAL PALETTE DATA
  687 D1:B179 -  -  -  -  	
  688 D1:B179 37 -  -  -  	scf 
  689 D1:B17A -  -  -  -  sdcomp_1bpc_1 .equ $ 
  690 D1:B17A D2 84 B1 D1 	jp nc,sdcomp_1bpc_1_skip ;skip if not 1bpc or 2bpc or 3bpc
  691 D1:B17E -  -  -  -  	
  692 D1:B17E 7E -  -  -  	ld a,(hl);color data 	
  693 D1:B17F 32 5F B0 D1 	ld (sdcomp_indexed_color_data_1),a 
  694 D1:B183 23 -  -  -  	inc hl 
  695 D1:B184 -  -  -  -  	
  696 D1:B184 -  -  -  -  sdcomp_1bpc_1_skip:	
  697 D1:B184 -  -  -  -  
  698 D1:B184 -  -  -  -  
  699 D1:B184 37 -  -  -  	scf 
  700 D1:B185 -  -  -  -  sdcomp_2bpc_1 .equ $ 
  701 D1:B185 D2 8F B1 D1 	jp nc,sdcomp_2bpc_1_skip ;skip if not 2bpc or 3bpc
  702 D1:B189 -  -  -  -  	
  703 D1:B189 7E -  -  -  	ld a,(hl);color data 
  704 D1:B18A 32 53 B0 D1 	ld (sdcomp_indexed_color_data_2),a 
  705 D1:B18E 23 -  -  -  	inc hl 
  706 D1:B18F -  -  -  -  	
  707 D1:B18F -  -  -  -  sdcomp_2bpc_1_skip:	
  708 D1:B18F -  -  -  -  
  709 D1:B18F -  -  -  -  
  710 D1:B18F 37 -  -  -  	scf 
  711 D1:B190 -  -  -  -  sdcomp_3bpc_1 .equ $ 
  712 D1:B190 DA A0 B1 D1 	jp c,sdcomp_3bpc_1_skip ;skip if not 3bpc
  713 D1:B194 -  -  -  -  	
  714 D1:B194 7E -  -  -  	ld a,(hl);color data 
  715 D1:B195 32 41 B0 D1 	ld (sdcomp_indexed_color_data_3),a 
  716 D1:B199 23 -  -  -  	inc hl 
  717 D1:B19A 7E -  -  -  	ld a,(hl);color data 
  718 D1:B19B 32 35 B0 D1 	ld (sdcomp_indexed_color_data_4),a 
  719 D1:B19F 23 -  -  -  	inc hl 
  720 D1:B1A0 -  -  -  -  	
  721 D1:B1A0 -  -  -  -  sdcomp_3bpc_1_skip:	
  722 D1:B1A0 -  -  -  -  
  723 D1:B1A0 -  -  -  -  	
  724 D1:B1A0 D5 -  -  -  	push de ;loops/line data location
  725 D1:B1A1 EB -  -  -  	ex de,hl
  726 D1:B1A2 78 -  -  -  	ld a,b
  727 D1:B1A3 01 00 00 00 	ld bc,0
  728 D1:B1A7 4F -  -  -  	ld c,a;height 
  729 D1:B1A8 09 -  -  -  	add hl,bc
  730 D1:B1A9 EB -  -  -  	ex de,hl;de points to data write location
  731 D1:B1AA -  -  -  -  	
  732 D1:B1AA -  -  -  -  	
  733 D1:B1AA D9 -  -  -  	exx;in to shadow
  734 D1:B1AB D1 -  -  -  	pop de 
  735 D1:B1AC E1 -  -  -  	pop hl ;alpha data stored from earlier
  736 D1:B1AD 0E 80 -  -  	ld c,%10000000;alpha mask
  737 D1:B1AF D9 -  -  -  	exx;out 
  738 D1:B1B0 0E 80 -  -  	ld c,%10000000;color mask
  739 D1:B1B2 -  -  -  -  	
  740 D1:B1B2 -  -  -  -  	;HL now points to pixel color data 
  741 D1:B1B2 -  -  -  -  	;HL' points to pixel alpha data 
  742 D1:B1B2 -  -  -  -  	;C holds color mask
  743 D1:B1B2 -  -  -  -  	;C' holds alpha mask
  744 D1:B1B2 -  -  -  -  	;DE' holds loops/line output data location
  745 D1:B1B2 -  -  -  -  	;DE holds main data output location
  746 D1:B1B2 -  -  -  -  	;A holds height
  747 D1:B1B2 -  -  -  -  	;A' holds bits remaining in row
  748 D1:B1B2 -  -  -  -  
  749 D1:B1B2 -  -  -  -  
  750 D1:B1B2 37 -  -  -  	scf 
  751 D1:B1B3 -  -  -  -  sdcomp_flip_setup .equ $
  752 D1:B1B3 DA C3 B1 D1 	jp c,sdcomp_find_gap_length;continue if no flip
  753 D1:B1B7 -  -  -  -  
  754 D1:B1B7 -  -  -  -  	
  755 D1:B1B7 2B -  -  -  	dec hl;dec color pointer
  756 D1:B1B8 0E 01 -  -  	ld c, %00000001
  757 D1:B1BA D9 -  -  -  	exx;to shadow 
  758 D1:B1BB 2B -  -  -  	dec hl;dec alpha pointer
  759 D1:B1BC 0E 01 -  -  	ld c, %00000001;alpha mask
  760 D1:B1BE CD 84 B0 D1 	call sdcomp_traverse_initial
  761 D1:B1C2 D9 -  -  -  	exx ;out of shadow 
  762 D1:B1C3 -  -  -  -  	
  763 D1:B1C3 -  -  -  -  	
  764 D1:B1C3 -  -  -  -  
  765 D1:B1C3 -  -  -  -  	;TODO jump to BG routine here
  766 D1:B1C3 -  -  -  -  	;END SETUP ======================================================================================================
  767 D1:B1C3 -  -  -  -  	
  768 D1:B1C3 -  -  -  -  	
  769 D1:B1C3 -  -  -  -  sdcomp_find_gap_length:
  770 D1:B1C3 -  -  -  -  	
  771 D1:B1C3 -  -  -  -  	
  772 D1:B1C3 -  -  -  -  	
  773 D1:B1C3 -  -  -  -  ;If virtual 0 was read as the start of an alpha pair, remove 1 from next gap length 
  774 D1:B1C3 -  -  -  -  ;this will occur if:
  775 D1:B1C3 -  -  -  -  ;Starting pixels are at the end of line, eg :00000001. ldir length = 0 as virtual 0s are read. interline length should be reduced by 1 
  776 D1:B1C3 -  -  -  -  ;
  777 D1:B1C3 -  -  -  -  ;if during ldir search, line data ends in 11, followed by virtual 00. In this case the 11 is the ending pixels if slow sprite, so gap length should not be reduced
  778 D1:B1C3 -  -  -  -  ; This is done from the addition of 1 gap length whenever the 11->00 case occurs, canceling the interline reduction due to reading vitrual 00. 
  779 D1:B1C3 -  -  -  -  	
  780 D1:B1C3 D9 -  -  -  	exx ;to shadow
  781 D1:B1C4 -  -  -  -  	
  782 D1:B1C4 -  -  -  -  sdcomp_add_1_gap_length .equ $ + 1
  783 D1:B1C4 06 00 -  -  	ld b,0;00 pairs found 
  784 D1:B1C6 3E 00 -  -  	ld a,0 ;reset
  785 D1:B1C8 32 C5 B1 D1 	ld (sdcomp_add_1_gap_length),a 
  786 D1:B1CC -  -  -  -  
  787 D1:B1CC -  -  -  -  sdcomp_find_gap_length_loop:
  788 D1:B1CC -  -  -  -  
  789 D1:B1CC 37 -  -  -  	scf 
  790 D1:B1CD -  -  -  -  sdcomp_end_of_line_gaplength .equ $ 
  791 D1:B1CD DA F6 B1 D1 	jp c, sdcomp_end_of_line_gaplength_skip
  792 D1:B1D1 -  -  -  -  	
  793 D1:B1D1 -  -  -  -  	;We have reached the end of the alpha data, add between line gap length 
  794 D1:B1D1 -  -  -  -  sdcomp_gap_btwn_rows .equ $ + 1
  795 D1:B1D1 3E 00 -  -  	ld a,0
  796 D1:B1D3 80 -  -  -  	add a,b 
  797 D1:B1D4 -  -  -  -  sdcomp_dec_gap_btwn_rows .equ $ 	
  798 D1:B1D4 00 -  -  -  	nop ;replace with dec a to decrease gap length 
  799 D1:B1D5 47 -  -  -  	ld b,a 
  800 D1:B1D6 3E 00 -  -  	ld a,%00000000 ;nop 
  801 D1:B1D8 32 D4 B1 D1 	ld (sdcomp_dec_gap_btwn_rows),a ;reset dec gap
  802 D1:B1DC 3E DA -  -  	ld a,%11011010;jp c
  803 D1:B1DE 32 3D AF D1 	ld (sdcomp_end_of_line_alp),a ;Reset virtual zero flag, reading alpha data will now be the next line 
  804 D1:B1E2 32 CD B1 D1 	ld (sdcomp_end_of_line_gaplength),a ;Reset flag for adding interline gaplength 
  805 D1:B1E6 -  -  -  -  	
  806 D1:B1E6 37 -  -  -  	scf
  807 D1:B1E7 -  -  -  -  sdcomp_flip_traverse .equ $
  808 D1:B1E7 D4 76 B0 D1 	call nc,sdcomp_traverse_line_data ;call line data traverse if flip
  809 D1:B1EB -  -  -  -  		
  810 D1:B1EB -  -  -  -  	;Write loops/line data as we have reached a gap btwn lines 
  811 D1:B1EB 3A 5B B2 D1 	ld a,(sdcomp_loops_per_line_counter)
  812 D1:B1EF 12 -  -  -  	ld (de),a ;write loops/line data 
  813 D1:B1F0 13 -  -  -  	inc de
  814 D1:B1F1 -  -  -  -  	
  815 D1:B1F1 -  -  -  -  	
  816 D1:B1F1 37 -  -  -  	scf 
  817 D1:B1F2 -  -  -  -  sdcomp_end_reached_flag .equ $;check if end of sprite reached
  818 D1:B1F2 D2 C4 B2 D1 	jp nc,sdcomp_end
  819 D1:B1F6 -  -  -  -  
  820 D1:B1F6 -  -  -  -  	
  821 D1:B1F6 -  -  -  -  sdcomp_end_of_line_gaplength_skip:
  822 D1:B1F6 CD 95 AF D1 	call sdcomp_get_next_alpha_pair
  823 D1:B1FA -  -  -  -  	;call write_a_to_ram
  824 D1:B1FA 04 -  -  -  	inc b 
  825 D1:B1FB -  -  -  -  
  826 D1:B1FB -  -  -  -  	;push af ;TEST
  827 D1:B1FB -  -  -  -  	;ld a,$AB;TEST
  828 D1:B1FB -  -  -  -  	;call write_a_to_ram
  829 D1:B1FB -  -  -  -  	
  830 D1:B1FB -  -  -  -  	;call write_a_to_ram
  831 D1:B1FB -  -  -  -  	;pop af ;TEST
  832 D1:B1FB -  -  -  -  	
  833 D1:B1FB B7 -  -  -  	or a
  834 D1:B1FC CA CC B1 D1 	jp z,sdcomp_find_gap_length_loop
  835 D1:B200 -  -  -  -  	
  836 D1:B200 -  -  -  -  ;END OF GAP LENGTH LOOP =====================	
  837 D1:B200 -  -  -  -  	
  838 D1:B200 F5 -  -  -  	push af; save leading pixel alpha data 
  839 D1:B201 -  -  -  -  	;B holds number of 00 pairs + 1
  840 D1:B201 -  -  -  -  	
  841 D1:B201 -  -  -  -  	;ld a,$AA ;test
  842 D1:B201 -  -  -  -  	;call write_a_to_ram
  843 D1:B201 -  -  -  -  	;ld a,b ;test
  844 D1:B201 -  -  -  -  	;call write_a_to_ram
  845 D1:B201 -  -  -  -  	
  846 D1:B201 -  -  -  -  	
  847 D1:B201 -  -  -  -  	
  848 D1:B201 -  -  -  -  	;Write gap length data to output
  849 D1:B201 78 -  -  -  	ld a,b 
  850 D1:B202 D9 -  -  -  	exx;out of shadow 
  851 D1:B203 12 -  -  -  	ld (de),a;GAP LENGTH 
  852 D1:B204 13 -  -  -  	inc de 
  853 D1:B205 D9 -  -  -  	exx;into shadow 	
  854 D1:B206 -  -  -  -  	
  855 D1:B206 -  -  -  -  	
  856 D1:B206 -  -  -  -  ;LEADING PIXELS ===================================================================================================
  857 D1:B206 F1 -  -  -  	pop af ;a holds leading pixel pair alpha data (FF,0F,F0)
  858 D1:B207 -  -  -  -  	
  859 D1:B207 37 -  -  -  	scf 
  860 D1:B208 -  -  -  -  sdcomp_fast_1 .equ $ 
  861 D1:B208 D2 12 B2 D1 	jp nc, sdcomp_ldir_start 
  862 D1:B20C -  -  -  -  	
  863 D1:B20C D9 -  -  -  	exx;out of shadow
  864 D1:B20D CD D5 B0 D1 	call sdcomp_write_leading_or_end_pixels
  865 D1:B211 D9 -  -  -  	exx;into shadow 
  866 D1:B212 -  -  -  -  	
  867 D1:B212 -  -  -  -  
  868 D1:B212 -  -  -  -  	
  869 D1:B212 -  -  -  -  ;LDIR ==============================================================================================================	
  870 D1:B212 -  -  -  -  	;Count number of 11 pairs for LDIR section
  871 D1:B212 -  -  -  -  	;If end of line reached we know last pixels must be the ending pair
  872 D1:B212 -  -  -  -  	;
  873 D1:B212 -  -  -  -  	
  874 D1:B212 -  -  -  -  	;If ending is 11 -> 00 
  875 D1:B212 -  -  -  -  	;11 pair will need to become ending pixels if slow sprite
  876 D1:B212 -  -  -  -  	;Will need to reduce b by 1 
  877 D1:B212 -  -  -  -  	
  878 D1:B212 -  -  -  -  	;If ending is 11 ->01/10
  879 D1:B212 -  -  -  -  	;last pair wil become ending pixels, dont reduce b 
  880 D1:B212 -  -  -  -  	
  881 D1:B212 -  -  -  -  sdcomp_ldir_start:
  882 D1:B212 -  -  -  -  
  883 D1:B212 -  -  -  -  ;	ld a, %11010010 ;jp nc 
  884 D1:B212 -  -  -  -  ;	ld (sdcomp_end_of_line_2) , a ;reset end of line flag 
  885 D1:B212 -  -  -  -  
  886 D1:B212 06 00 -  -  	ld b,0; will hold number of 11 pairs found
  887 D1:B214 -  -  -  -  sdcomp_ldir_loop:
  888 D1:B214 CD 95 AF D1 	call sdcomp_get_next_alpha_pair ;get alpha data
  889 D1:B218 04 -  -  -  	inc b 
  890 D1:B219 -  -  -  -  	
  891 D1:B219 -  -  -  -  	;push af 
  892 D1:B219 -  -  -  -  	;ld a,$DE 
  893 D1:B219 -  -  -  -  	;call write_a_to_ram
  894 D1:B219 -  -  -  -  	;pop af
  895 D1:B219 -  -  -  -  	;call write_a_to_ram
  896 D1:B219 -  -  -  -  	
  897 D1:B219 -  -  -  -  ;	scf 
  898 D1:B219 -  -  -  -  ;sdcomp_end_of_line_2 .equ $ ;set when end of line reached 
  899 D1:B219 -  -  -  -  ;	jp nc, sdcomp_ldir_loop_end;If read last in line
  900 D1:B219 -  -  -  -  	
  901 D1:B219 EE FF -  -  	xor %11111111 ;flip all bits  (CPL does not set flags :(  )
  902 D1:B21B CA 14 B2 D1 	jp z, sdcomp_ldir_loop; if a is 0 means a was $FF 
  903 D1:B21F 2F -  -  -  	cpl ; flip back 
  904 D1:B220 -  -  -  -  sdcomp_ldir_loop_end:
  905 D1:B220 -  -  -  -  
  906 D1:B220 -  -  -  -  	
  907 D1:B220 -  -  -  -  	;at this point b holds # 11 pairs +1 
  908 D1:B220 37 -  -  -  	scf 
  909 D1:B221 -  -  -  -  sdcomp_fast_2 .equ $ 
  910 D1:B221 D2 3C B2 D1 	jp nc,sdcomp_ldir_write ;jump before dec b because we have read first 11 pair in searching for gaplength 
  911 D1:B225 -  -  -  -  
  912 D1:B225 -  -  -  -  	
  913 D1:B225 -  -  -  -  	
  914 D1:B225 05 -  -  -  	dec b ;b holds # 11 pairs 
  915 D1:B226 CA 4F B2 D1 	jp z,sdcomp_no_ldir;no pairs found,no ldir length
  916 D1:B22A B7 -  -  -  	or a
  917 D1:B22B C2 3C B2 D1 	jp nz,sdcomp_ldir_write;ends not in 00, has single ending pixel
  918 D1:B22F -  -  -  -  	
  919 D1:B22F -  -  -  -  	;ends in 11 -> 00,ending pixels will be 11 if slow sprite. If fast, jump to ldir write here 
  920 D1:B22F -  -  -  -  	
  921 D1:B22F -  -  -  -  	;ld a,$DF
  922 D1:B22F -  -  -  -  	;call write_a_to_ram
  923 D1:B22F -  -  -  -  	
  924 D1:B22F -  -  -  -  	;must add 1 to next gap length, have already read first 00
  925 D1:B22F -  -  -  -  	;for the case with virtual 00, this cancels the decrease in gap length 
  926 D1:B22F 3E 01 -  -  	ld a,1;start w 1 gap len
  927 D1:B231 32 C5 B1 D1 	ld (sdcomp_add_1_gap_length),a 
  928 D1:B235 3E FF -  -  	ld a,$ff;ending pixels 11
  929 D1:B237 -  -  -  -  	
  930 D1:B237 05 -  -  -  	dec b;reduce length by 1, final pair is end pixels
  931 D1:B238 CA 4F B2 D1 	jp z,sdcomp_no_ldir;no ldir length,ending pixels is 11 
  932 D1:B23C -  -  -  -  	;b holds ldir length 
  933 D1:B23C -  -  -  -  	
  934 D1:B23C -  -  -  -  
  935 D1:B23C -  -  -  -  ;b holds ldir length, a holds ending pixels
  936 D1:B23C -  -  -  -  sdcomp_ldir_write:
  937 D1:B23C -  -  -  -  
  938 D1:B23C -  -  -  -  	;b holds 11 pairs found 
  939 D1:B23C -  -  -  -  	
  940 D1:B23C -  -  -  -  	;push af;TEST
  941 D1:B23C -  -  -  -  	;ld a,$DA 
  942 D1:B23C -  -  -  -  	;call write_a_to_ram
  943 D1:B23C -  -  -  -  	;ld a,b 
  944 D1:B23C -  -  -  -  	;call write_a_to_ram
  945 D1:B23C -  -  -  -  	;pop af ;TEST
  946 D1:B23C -  -  -  -  
  947 D1:B23C F5 -  -  -  	push af;save ending pixels
  948 D1:B23D 78 -  -  -  	ld a,b
  949 D1:B23E D9 -  -  -  	exx ;out 
  950 D1:B23F 12 -  -  -  	ld (de),a;write ldir length
  951 D1:B240 13 -  -  -  	inc de 
  952 D1:B241 CD C1 B0 D1 	call sdcomp_write_ldir_data_loop
  953 D1:B245 -  -  -  -  
  954 D1:B245 F1 -  -  -  	pop af;return ending pixels
  955 D1:B246 -  -  -  -  	
  956 D1:B246 37 -  -  -  	scf
  957 D1:B247 -  -  -  -  sdcomp_fast_3 .equ $ 
  958 D1:B247 D2 5A B2 D1 	jp nc,sdcomp_inc_loops_per_line ;skip ending pixels
  959 D1:B24B -  -  -  -  	
  960 D1:B24B C3 56 B2 D1 	jp sdcomp_write_end_pixels
  961 D1:B24F -  -  -  -  sdcomp_no_ldir:;no ldir length, a holds ending pixels,00,10,01,11
  962 D1:B24F -  -  -  -  
  963 D1:B24F -  -  -  -  
  964 D1:B24F -  -  -  -  	;push af ;TEST
  965 D1:B24F -  -  -  -  	;ld a,$DB
  966 D1:B24F -  -  -  -  	;call write_a_to_ram
  967 D1:B24F -  -  -  -  	;pop af ;TEST
  968 D1:B24F -  -  -  -  	;call write_a_to_ram
  969 D1:B24F -  -  -  -  
  970 D1:B24F F5 -  -  -  	push af;save end pixels
  971 D1:B250 -  -  -  -  	
  972 D1:B250 D9 -  -  -  	exx;out of shadow
  973 D1:B251 3E 00 -  -  	ld a,0
  974 D1:B253 12 -  -  -  	ld (de),a ;write 0 as ldir length
  975 D1:B254 13 -  -  -  	inc de 
  976 D1:B255 F1 -  -  -  	pop af;return ending pixels
  977 D1:B256 -  -  -  -  
  978 D1:B256 -  -  -  -  ;WRITE ENDING PIXELS ======================================================================================
  979 D1:B256 -  -  -  -  
  980 D1:B256 -  -  -  -  sdcomp_write_end_pixels:
  981 D1:B256 -  -  -  -  ;not in shadow
  982 D1:B256 -  -  -  -  	
  983 D1:B256 -  -  -  -  	;test
  984 D1:B256 -  -  -  -  	;push af 
  985 D1:B256 -  -  -  -  	;ld a,$E0
  986 D1:B256 -  -  -  -  	;call write_a_to_ram
  987 D1:B256 -  -  -  -  	;pop af 
  988 D1:B256 -  -  -  -  	
  989 D1:B256 -  -  -  -  
  990 D1:B256 CD D5 B0 D1 	call sdcomp_write_leading_or_end_pixels
  991 D1:B25A -  -  -  -  	
  992 D1:B25A -  -  -  -  	
  993 D1:B25A -  -  -  -  ;sdcomp_test_lines_stop .equ $ + 1 
  994 D1:B25A -  -  -  -  	;ld a,2
  995 D1:B25A -  -  -  -  	;dec a 
  996 D1:B25A -  -  -  -  	;jp z,sdcomp_end
  997 D1:B25A -  -  -  -  	;ld (sdcomp_test_lines_stop),a 
  998 D1:B25A -  -  -  -  
  999 D1:B25A -  -  -  -  sdcomp_inc_loops_per_line:	
 1000 D1:B25A -  -  -  -  	;INC LOOP/LINE count
 1001 D1:B25A -  -  -  -  sdcomp_loops_per_line_counter .equ $ + 1
 1002 D1:B25A 3E 00 -  -  	ld a,0;inc number of loops
 1003 D1:B25C 3C -  -  -  	inc a 
 1004 D1:B25D 32 5B B2 D1 	ld (sdcomp_loops_per_line_counter),a
 1005 D1:B261 -  -  -  -  
 1006 D1:B261 -  -  -  -  
 1007 D1:B261 -  -  -  -  	;jp sdcomp_find_gap_length ;TESTING REMOVE
 1008 D1:B261 -  -  -  -  	
 1009 D1:B261 -  -  -  -  	;Check the timer to see if we need to begin rendering next frame 
 1010 D1:B261 -  -  -  -  	;1090 cycles @ 32768hz ~= 1 frame (1/30s)
 1011 D1:B261 -  -  -  -  	;Should stop decompressions at 1000 cycles?
 1012 D1:B261 -  -  -  -  	; = %00000011, 11100000
 1013 D1:B261 -  -  -  -  sdcomp_clock_check_loop:
 1014 D1:B261 3A 01 00 F2 	ld a,($F20001);128hz clock
 1015 D1:B265 FE 03 -  -  	cp %00000011 ;check if reached 3 
 1016 D1:B267 DA C3 B1 D1 	jp c,sdcomp_find_gap_length ;msb <= 2, can continue  
 1017 D1:B26B 3A 00 00 F2 	ld a,($F20000);32768hz clock
 1018 D1:B26F FE E0 -  -  	cp %11100000;check if reached value 
 1019 D1:B271 DA C3 B1 D1 	jp c,sdcomp_find_gap_length ;msb = 3 and lsb < value, can continue
 1020 D1:B275 -  -  -  -  	
 1021 D1:B275 -  -  -  -  	;Past clock threshold, need to stop decompressions
 1022 D1:B275 -  -  -  -  
 1023 D1:B275 -  -  -  -  
 1024 D1:B275 -  -  -  -  	;TODO can prob not need to save (a) register
 1025 D1:B275 -  -  -  -  sdcomp_interrupt:
 1026 D1:B275 -  -  -  -  
 1027 D1:B275 -  -  -  -  
 1028 D1:B275 -  -  -  -  	;not in shadow 
 1029 D1:B275 22 A1 B2 D1 	ld (sdcomp_cont_hl),hl 
 1030 D1:B279 EB -  -  -  	ex de,hl
 1031 D1:B27A 22 A5 B2 D1 	ld (sdcomp_cont_de),hl 
 1032 D1:B27E C5 -  -  -  	push bc
 1033 D1:B27F E1 -  -  -  	pop hl
 1034 D1:B280 22 A9 B2 D1 	ld (sdcomp_cont_bc),hl
 1035 D1:B284 32 AD B2 D1 	ld (sdcomp_cont_a),a 
 1036 D1:B288 D9 -  -  -  	exx 
 1037 D1:B289 08 -  -  -  	ex af,af' ;'
 1038 D1:B28A 22 B1 B2 D1 	ld (sdcomp_cont_hlP),hl 
 1039 D1:B28E EB -  -  -  	ex de,hl
 1040 D1:B28F 22 B5 B2 D1 	ld (sdcomp_cont_deP),hl 
 1041 D1:B293 C5 -  -  -  	push bc 
 1042 D1:B294 E1 -  -  -  	pop hl
 1043 D1:B295 22 B9 B2 D1 	ld (sdcomp_cont_bcP),hl
 1044 D1:B299 32 BD B2 D1 	ld (sdcomp_cont_aP),a 
 1045 D1:B29D -  -  -  -  	
 1046 D1:B29D -  -  -  -  	
 1047 D1:B29D -  -  -  -  	;ld a, $AA
 1048 D1:B29D -  -  -  -  	;call write_a_to_ram
 1049 D1:B29D -  -  -  -  	
 1050 D1:B29D 3E 01 -  -  	ld a,1 ;Return 1 if interrupted
 1051 D1:B29F C9 -  -  -  	ret 
 1052 D1:B2A0 -  -  -  -  	
 1053 D1:B2A0 -  -  -  -  sdcomp_continue:
 1054 D1:B2A0 -  -  -  -  	;not in shadow 
 1055 D1:B2A0 -  -  -  -  sdcomp_cont_hl .equ $ + 1
 1056 D1:B2A0 21 00 00 00 	ld hl,0
 1057 D1:B2A4 -  -  -  -  sdcomp_cont_de .equ $ + 1
 1058 D1:B2A4 11 00 00 00 	ld de,0
 1059 D1:B2A8 -  -  -  -  sdcomp_cont_bc .equ $ + 1
 1060 D1:B2A8 01 00 00 00 	ld bc,0
 1061 D1:B2AC -  -  -  -  sdcomp_cont_a .equ $ + 1
 1062 D1:B2AC 3E 00 -  -  	ld a,0
 1063 D1:B2AE D9 -  -  -  	exx 
 1064 D1:B2AF 08 -  -  -  	ex af,af' ;'
 1065 D1:B2B0 -  -  -  -  sdcomp_cont_hlP .equ $ + 1
 1066 D1:B2B0 21 00 00 00 	ld hl,0
 1067 D1:B2B4 -  -  -  -  sdcomp_cont_deP .equ $ + 1
 1068 D1:B2B4 11 00 00 00 	ld de,0
 1069 D1:B2B8 -  -  -  -  sdcomp_cont_bcP .equ $ + 1
 1070 D1:B2B8 01 00 00 00 	ld bc,0
 1071 D1:B2BC -  -  -  -  sdcomp_cont_aP .equ $ + 1
 1072 D1:B2BC 3E 00 -  -  	ld a,0	
 1073 D1:B2BE -  -  -  -  	
 1074 D1:B2BE D9 -  -  -  	exx ;out of shadow 
 1075 D1:B2BF 08 -  -  -  	ex af,af' ;'
 1076 D1:B2C0 -  -  -  -  
 1077 D1:B2C0 C3 C3 B1 D1 	jp sdcomp_find_gap_length
 1078 D1:B2C4 -  -  -  -  
 1079 D1:B2C4 -  -  -  -  	
 1080 D1:B2C4 -  -  -  -  
 1081 D1:B2C4 -  -  -  -  sdcomp_end:
 1082 D1:B2C4 -  -  -  -  	
 1083 D1:B2C4 -  -  -  -  	;ld a,$69
 1084 D1:B2C4 -  -  -  -  	;call write_a_to_ram
 1085 D1:B2C4 -  -  -  -  	
 1086 D1:B2C4 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1087 D1:B2C6 32 F2 B1 D1 	ld (sdcomp_end_reached_flag),a 
 1088 D1:B2CA -  -  -  -  	
 1089 D1:B2CA 3E 00 -  -  	ld a,0 ;return 0 if finished decompressing 
 1090 D1:B2CC C9 -  -  -  	ret 
 1091 D1:B2CD -  -  -  -  
 1092 D1:B2CD -  -  -  -  
 1093 D1:B2CD -  -  -  -  ;bit orders
 1094 D1:B2CD -  -  -  -  ;	noflip   flip 
 1095 D1:B2CD -  -  -  -  ;4bpp 3210 	 0123
 1096 D1:B2CD -  -  -  -  ;3bpp 210	 012
 1097 D1:B2CD -  -  -  -  ;2bpp 10	 01
 1098 D1:B2CD -  -  -  -  ;1bpp 0		 0
 1099 D1:B2CD -  -  -  -  
 1100 D1:B2CD -  -  -  -  
 1101 D1:B2CD -  -  -  -  sdcomp_set_0bpc:
 1102 D1:B2CD 3E DA -  -  	ld a,%11011010;jp c
 1103 D1:B2CF 32 DE AF D1 	ld (sdcomp_0bpc),a
 1104 D1:B2D3 -  -  -  -  	
 1105 D1:B2D3 32 85 B1 D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
 1106 D1:B2D7 32 90 B1 D1 	ld (sdcomp_3bpc_1),a 
 1107 D1:B2DB -  -  -  -  	
 1108 D1:B2DB 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1109 D1:B2DD 32 7A B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1110 D1:B2E1 3E 00 -  -  	ld a,%00000000
 1111 D1:B2E3 32 9F B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1112 D1:B2E7 C9 -  -  -  	ret 
 1113 D1:B2E8 -  -  -  -  	
 1114 D1:B2E8 -  -  -  -  sdcomp_set_1bpc:
 1115 D1:B2E8 3E D2 -  -  	ld a,%11010010;jp nc
 1116 D1:B2EA 32 DE AF D1 	ld (sdcomp_0bpc),a
 1117 D1:B2EE 3E DA -  -  	ld a,%11011010;jp c
 1118 D1:B2F0 32 F0 AF D1 	ld (sdcomp_1bpc),a
 1119 D1:B2F4 -  -  -  -  	
 1120 D1:B2F4 32 85 B1 D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
 1121 D1:B2F8 32 90 B1 D1 	ld (sdcomp_3bpc_1),a 
 1122 D1:B2FC -  -  -  -  	
 1123 D1:B2FC 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1124 D1:B2FE 32 7A B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1125 D1:B302 -  -  -  -  	
 1126 D1:B302 -  -  -  -  	
 1127 D1:B302 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1128 D1:B304 32 EE AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1129 D1:B308 -  -  -  -  	
 1130 D1:B308 3E 80 -  -  	ld a,%10000000
 1131 D1:B30A 32 9F B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1132 D1:B30E -  -  -  -  	
 1133 D1:B30E 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1134 D1:B310 32 98 B0 D1 	ld (sdcomp_traverse_2bpp),a
 1135 D1:B314 32 9A B0 D1 	ld (sdcomp_traverse_3bpp),a
 1136 D1:B318 32 9C B0 D1 	ld (sdcomp_traverse_4bpp),a
 1137 D1:B31C C9 -  -  -  	ret 
 1138 D1:B31D -  -  -  -  
 1139 D1:B31D -  -  -  -  sdcomp_set_2bpc:
 1140 D1:B31D 3E D2 -  -  	ld a,%11010010;jp nc
 1141 D1:B31F 32 DE AF D1 	ld (sdcomp_0bpc),a
 1142 D1:B323 32 F0 AF D1 	ld (sdcomp_1bpc),a
 1143 D1:B327 -  -  -  -  	
 1144 D1:B327 3E DA -  -  	ld a,%11011010;jp c
 1145 D1:B329 32 02 B0 D1 	ld (sdcomp_2bpc),a
 1146 D1:B32D -  -  -  -  	
 1147 D1:B32D 32 90 B1 D1 	ld (sdcomp_3bpc_1),a ;for setting local pallete data
 1148 D1:B331 -  -  -  -  	
 1149 D1:B331 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1150 D1:B333 32 7A B1 D1 	ld (sdcomp_1bpc_1),a;for setting local pallete data
 1151 D1:B337 32 85 B1 D1 	ld (sdcomp_2bpc_1),a 
 1152 D1:B33B -  -  -  -  	
 1153 D1:B33B 37 -  -  -  	scf 
 1154 D1:B33C -  -  -  -  sdcomp_flip_2bpc .equ $ 
 1155 D1:B33C D2 4D B3 D1 	jp nc, sdcomp_2bpc_flip
 1156 D1:B340 -  -  -  -  	
 1157 D1:B340 3E CB -  -  	ld a,%11001011 ;set 1,e
 1158 D1:B342 32 EE AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1159 D1:B346 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1160 D1:B348 32 00 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1161 D1:B34C -  -  -  -  	
 1162 D1:B34C C9 -  -  -  	ret 
 1163 D1:B34D -  -  -  -  	
 1164 D1:B34D -  -  -  -  sdcomp_2bpc_flip:
 1165 D1:B34D 3E CB -  -  	ld a,%11001011 ;set 1,e
 1166 D1:B34F 32 00 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1167 D1:B353 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1168 D1:B355 32 EE AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1169 D1:B359 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1170 D1:B35B 32 98 B0 D1 	ld (sdcomp_traverse_2bpp),a
 1171 D1:B35F -  -  -  -  
 1172 D1:B35F 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1173 D1:B361 32 9A B0 D1 	ld (sdcomp_traverse_3bpp),a
 1174 D1:B365 32 9C B0 D1 	ld (sdcomp_traverse_4bpp),a
 1175 D1:B369 -  -  -  -  	
 1176 D1:B369 3E C0 -  -  	ld a,%11000000
 1177 D1:B36B 32 9F B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1178 D1:B36F C9 -  -  -  	ret 
 1179 D1:B370 -  -  -  -  
 1180 D1:B370 -  -  -  -  
 1181 D1:B370 -  -  -  -  sdcomp_set_3bpc:
 1182 D1:B370 -  -  -  -  	
 1183 D1:B370 3E D2 -  -  	ld a,%11010010;jp nc
 1184 D1:B372 32 DE AF D1 	ld (sdcomp_0bpc),a
 1185 D1:B376 32 F0 AF D1 	ld (sdcomp_1bpc),a
 1186 D1:B37A 32 02 B0 D1 	ld (sdcomp_2bpc),a
 1187 D1:B37E -  -  -  -  	
 1188 D1:B37E 3E DA -  -  	ld a,%11011010;jp c
 1189 D1:B380 32 14 B0 D1 	ld (sdcomp_3bpc),a
 1190 D1:B384 -  -  -  -  	
 1191 D1:B384 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1192 D1:B386 32 7A B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1193 D1:B38A 32 85 B1 D1 	ld (sdcomp_2bpc_1),a 
 1194 D1:B38E 32 90 B1 D1 	ld (sdcomp_3bpc_1),a 
 1195 D1:B392 -  -  -  -  	
 1196 D1:B392 37 -  -  -  	scf 
 1197 D1:B393 -  -  -  -  sdcomp_flip_3bpc .equ $ 
 1198 D1:B393 D2 AA B3 D1 	jp nc, sdcomp_3bpc_flip	
 1199 D1:B397 -  -  -  -  	
 1200 D1:B397 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1201 D1:B399 32 EE AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1202 D1:B39D 3E CB -  -  	ld a,%11001011 ;set 1,e
 1203 D1:B39F 32 00 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1204 D1:B3A3 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1205 D1:B3A5 32 12 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1206 D1:B3A9 -  -  -  -  	
 1207 D1:B3A9 C9 -  -  -  	ret 
 1208 D1:B3AA -  -  -  -  	
 1209 D1:B3AA -  -  -  -  sdcomp_3bpc_flip:
 1210 D1:B3AA 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1211 D1:B3AC 32 12 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1212 D1:B3B0 3E CB -  -  	ld a,%11001011 ;set 1,e
 1213 D1:B3B2 32 00 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1214 D1:B3B6 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1215 D1:B3B8 32 EE AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1216 D1:B3BC -  -  -  -  	
 1217 D1:B3BC 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1218 D1:B3BE 32 98 B0 D1 	ld (sdcomp_traverse_2bpp),a 
 1219 D1:B3C2 32 9A B0 D1 	ld (sdcomp_traverse_3bpp),a 
 1220 D1:B3C6 -  -  -  -  	
 1221 D1:B3C6 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1222 D1:B3C8 32 9C B0 D1 	ld (sdcomp_traverse_4bpp),a
 1223 D1:B3CC -  -  -  -  	
 1224 D1:B3CC 3E E0 -  -  	ld a,%11100000
 1225 D1:B3CE 32 9F B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1226 D1:B3D2 -  -  -  -  	
 1227 D1:B3D2 C9 -  -  -  	ret 
 1228 D1:B3D3 -  -  -  -  
 1229 D1:B3D3 -  -  -  -  sdcomp_set_4bpc:
 1230 D1:B3D3 -  -  -  -  
 1231 D1:B3D3 3E D2 -  -  	ld a,%11010010;jp nc
 1232 D1:B3D5 32 DE AF D1 	ld (sdcomp_0bpc),a
 1233 D1:B3D9 32 F0 AF D1 	ld (sdcomp_1bpc),a
 1234 D1:B3DD 32 02 B0 D1 	ld (sdcomp_2bpc),a
 1235 D1:B3E1 -  -  -  -  
 1236 D1:B3E1 3E DA -  -  	ld a,%11011010;jp c
 1237 D1:B3E3 -  -  -  -  
 1238 D1:B3E3 32 7A B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1239 D1:B3E7 32 85 B1 D1 	ld (sdcomp_2bpc_1),a 
 1240 D1:B3EB 32 90 B1 D1 	ld (sdcomp_3bpc_1),a 
 1241 D1:B3EF -  -  -  -  	
 1242 D1:B3EF 37 -  -  -  	scf 
 1243 D1:B3F0 -  -  -  -  sdcomp_flip_4bpc .equ $ 
 1244 D1:B3F0 D2 0D B4 D1 	jp nc, sdcomp_4bpc_flip	
 1245 D1:B3F4 3E DB -  -  	ld a,%11011011 ;set 3,e
 1246 D1:B3F6 32 EE AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1247 D1:B3FA 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1248 D1:B3FC 32 00 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1249 D1:B400 3E CB -  -  	ld a,%11001011 ;set 1,e
 1250 D1:B402 32 12 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1251 D1:B406 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1252 D1:B408 32 24 B0 D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
 1253 D1:B40C C9 -  -  -  	ret 
 1254 D1:B40D -  -  -  -  sdcomp_4bpc_flip:
 1255 D1:B40D 3E DB -  -  	ld a,%11011011 ;set 3,e
 1256 D1:B40F 32 24 B0 D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
 1257 D1:B413 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1258 D1:B415 32 12 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1259 D1:B419 3E CB -  -  	ld a,%11001011 ;set 1,e
 1260 D1:B41B 32 00 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1261 D1:B41F 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1262 D1:B421 32 EE AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1263 D1:B425 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1264 D1:B427 32 98 B0 D1 	ld (sdcomp_traverse_2bpp),a 
 1265 D1:B42B 32 9A B0 D1 	ld (sdcomp_traverse_3bpp),a 
 1266 D1:B42F 32 9C B0 D1 	ld (sdcomp_traverse_4bpp),a 
 1267 D1:B433 -  -  -  -  	
 1268 D1:B433 3E F0 -  -  	ld a,%11110000
 1269 D1:B435 32 9F B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1270 D1:B439 -  -  -  -  	
 1271 D1:B439 C9 -  -  -  	ret 
 1272 D1:B43A -  -  -  -  	
 1273 D1:B43A -  -  -  -  	
 1274 D1:B43A -  -  -  -  sdcomp_set_noalpha:
 1275 D1:B43A 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1276 D1:B43C 32 5F AF D1 	ld (sdcomp_no_alpha_1),a 
 1277 D1:B440 3E DA -  -  	ld a,%11011010;jp c
 1278 D1:B442 32 5F B1 D1 	ld (sdcomp_no_alpha_2),a 
 1279 D1:B446 32 90 B0 D1 	ld (sdcomp_no_alpha_3),a 
 1280 D1:B44A C9 -  -  -  	ret
 1281 D1:B44B -  -  -  -  	
 1282 D1:B44B -  -  -  -  sdcomp_reset_noalpha:
 1283 D1:B44B -  -  -  -  
 1284 D1:B44B 3E DA -  -  	ld a,%11011010;jp c
 1285 D1:B44D 32 5F AF D1 	ld (sdcomp_no_alpha_1),a 
 1286 D1:B451 3E D2 -  -  	ld a, %11010010 ;jp nc
 1287 D1:B453 32 5F B1 D1 	ld (sdcomp_no_alpha_2),a 
 1288 D1:B457 3E CA -  -  	ld a, %11001010 ;jp z
 1289 D1:B459 32 90 B0 D1 	ld (sdcomp_no_alpha_3),a 
 1290 D1:B45D C9 -  -  -  	ret
 1291 D1:B45E -  -  -  -  
 1292 D1:B45E -  -  -  -  
 1293 D1:B45E -  -  -  -  sdcomp_set_offset:
 1294 D1:B45E 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1295 D1:B460 32 87 AF D1 	ld (sdcomp_offset_1),a 
 1296 D1:B464 32 4B AF D1 	ld (sdcomp_bit_offset),a 
 1297 D1:B468 3E 04 -  -  	ld a,%00000100 ;inc b 
 1298 D1:B46A 32 47 B1 D1 	ld (sdcomp_offset_2),a 
 1299 D1:B46E -  -  -  -  	
 1300 D1:B46E C9 -  -  -  	ret 
 1301 D1:B46F -  -  -  -  
 1302 D1:B46F -  -  -  -  sdcomp_reset_offset:
 1303 D1:B46F 3E DA -  -  	ld a,%11011010;jp c
 1304 D1:B471 32 87 AF D1 	ld (sdcomp_offset_1),a 
 1305 D1:B475 32 4B AF D1 	ld (sdcomp_bit_offset),a 
 1306 D1:B479 3E 00 -  -  	ld a,%00000000 ;nop
 1307 D1:B47B 32 47 B1 D1 	ld (sdcomp_offset_2),a 
 1308 D1:B47F C9 -  -  -  	ret 
 1309 D1:B480 -  -  -  -  	
 1310 D1:B480 -  -  -  -  sdcomp_set_flip:
 1311 D1:B480 3E 01 -  -  	ld a, %00000001 ;rlc c 
 1312 D1:B482 32 36 AF D1 	ld (sdcomp_flip_bitstream),a
 1313 D1:B486 3E 2B -  -  	ld a, %00101011 ;dec hl 
 1314 D1:B488 32 38 AF D1 	ld (sdcomp_flip_bitstream_2),a 
 1315 D1:B48C 3E DC -  -  	ld a, %11011100 ;call c 
 1316 D1:B48E 32 E7 B1 D1 	ld (sdcomp_flip_traverse),a 
 1317 D1:B492 -  -  -  -  	
 1318 D1:B492 3E DA -  -  	ld a,%11011010;jp c
 1319 D1:B494 32 3C B3 D1 	ld (sdcomp_flip_2bpc),a
 1320 D1:B498 32 93 B3 D1 	ld (sdcomp_flip_3bpc),a
 1321 D1:B49C 32 F0 B3 D1 	ld (sdcomp_flip_4bpc),a
 1322 D1:B4A0 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1323 D1:B4A2 32 B3 B1 D1 	ld (sdcomp_flip_setup),a 
 1324 D1:B4A6 -  -  -  -  	
 1325 D1:B4A6 C9 -  -  -  	ret 
 1326 D1:B4A7 -  -  -  -  
 1327 D1:B4A7 -  -  -  -  sdcomp_reset_flip:
 1328 D1:B4A7 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1329 D1:B4A9 32 36 AF D1 	ld (sdcomp_flip_bitstream),a
 1330 D1:B4AD 3E 23 -  -  	ld a, %00100011 ;inc hl 
 1331 D1:B4AF 32 38 AF D1 	ld (sdcomp_flip_bitstream_2),a 
 1332 D1:B4B3 3E D4 -  -  	ld a, %11010100 ;call nc 
 1333 D1:B4B5 32 E7 B1 D1 	ld (sdcomp_flip_traverse),a 
 1334 D1:B4B9 -  -  -  -  	
 1335 D1:B4B9 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1336 D1:B4BB 32 3C B3 D1 	ld (sdcomp_flip_2bpc),a
 1337 D1:B4BF 32 93 B3 D1 	ld (sdcomp_flip_3bpc),a
 1338 D1:B4C3 32 F0 B3 D1 	ld (sdcomp_flip_4bpc),a
 1339 D1:B4C7 3E DA -  -  	ld a,%11011010;jp c
 1340 D1:B4C9 32 B3 B1 D1 	ld (sdcomp_flip_setup),a 
 1341 D1:B4CD C9 -  -  -  	ret 
 1342 D1:B4CE -  -  -  -  
 1343 D1:B4CE -  -  -  -  
 1344 D1:B4CE -  -  -  -  sdcomp_set_fast:
 1345 D1:B4CE 3E DA -  -  	ld a,%11011010;jp c
 1346 D1:B4D0 32 08 B2 D1 	ld(sdcomp_fast_1),a 
 1347 D1:B4D4 32 21 B2 D1 	ld(sdcomp_fast_2),a 
 1348 D1:B4D8 32 47 B2 D1 	ld(sdcomp_fast_3),a 
 1349 D1:B4DC -  -  -  -  	
 1350 D1:B4DC C9 -  -  -  	ret 
 1351 D1:B4DD -  -  -  -  
 1352 D1:B4DD -  -  -  -  sdcomp_reset_fast:
 1353 D1:B4DD 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1354 D1:B4DF 32 08 B2 D1 	ld(sdcomp_fast_1),a 
 1355 D1:B4E3 32 21 B2 D1 	ld(sdcomp_fast_2),a 
 1356 D1:B4E7 32 47 B2 D1 	ld(sdcomp_fast_3),a 
 1357 D1:B4EB -  -  -  -  	
 1358 D1:B4EB C9 -  -  -  	ret 
 1359 D1:B4EC -  -  -  -  
 1360 D1:B4EC -  -  -  -  
 1361 D1:B4EC -  -  -  -  
 1362 D1:B4EC -  -  -  -  
 1363 D1:B4EC -  -  -  -  
 1364 D1:B4EC -  -  -  -  
Listing for file "ascent.asm"
  555 D1:B4EC -  -  -  -  #include "drawFG.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFG.txt"
    1 D1:B4EC -  -  -  -  
    2 D1:B4EC -  -  -  -  FGMaxSpriteHeight .equ 120
    3 D1:B4EC -  -  -  -  
    4 D1:B4EC -  -  -  -  draw_fg_setup:
    5 D1:B4EC 3E D2 -  -  	ld a, %11010010 ;jp nc
    6 D1:B4EE 32 E4 B5 D1 	ld (dfgs_bg_mode_1),a 
    7 D1:B4F2 32 48 B6 D1 	ld (dfgs_bg_mode_2),a 
    8 D1:B4F6 -  -  -  -  
    9 D1:B4F6 2A D8 AB D1 	ld hl,(draw_buffer)
   10 D1:B4FA 22 F4 B5 D1 	ld (dfgs_vram_top_1),hl
   11 D1:B4FE 22 A9 B6 D1 	ld (dfgs_vram_top_2),hl
   12 D1:B502 01 00 96 00 	ld bc,160*240
   13 D1:B506 09 -  -  -  	add hl,bc
   14 D1:B507 22 64 B6 D1 	ld (dfgs_vram_bottom_1),hl 
   15 D1:B50B 22 84 B6 D1 	ld (dfgs_vram_bottom_2),hl 
   16 D1:B50F 22 10 B7 D1 	ld (dfgs_vram_bottom_3),hl 
   17 D1:B513 22 30 B7 D1 	ld (dfgs_vram_bottom_4),hl 
   18 D1:B517 C9 -  -  -  	ret 
   19 D1:B518 -  -  -  -  
   20 D1:B518 -  -  -  -  
   21 D1:B518 -  -  -  -  draw_fg_setup_2:
   22 D1:B518 01 EF 00 00 	ld bc,239
   23 D1:B51C 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of fg layer
   24 D1:B51D 7D -  -  -  	ld a,l ;lsb cam pos, = line number in middle frame
   25 D1:B51E 32 B2 B5 D1 	ld (dfgs_cam_height_1),a
   26 D1:B522 32 4D B6 D1 	ld (dfgs_cam_height_2),a ;y value in dataframe of uppermost line of viewport
   27 D1:B526 32 E1 B6 D1 	ld (dfgs_cam_height_3),a
   28 D1:B52A 32 FB B6 D1 	ld (dfgs_cam_height_4),a	
   29 D1:B52E ED 44 -  -  	neg 
   30 D1:B530 32 E9 B5 D1 	ld (dfgs_viewport_to_upper_frame),a ;1 = top line of VP is top line of middle frame
   31 D1:B534 ED 44 -  -  	neg 
   32 D1:B536 D6 EF -  -  	sub 239
   33 D1:B538 32 04 B7 D1 	ld (dfgs_viewport_bottom_y),a
   34 D1:B53C -  -  -  -  	
   35 D1:B53C 01 00 00 00 	ld bc,0
   36 D1:B540 4C -  -  -  	ld c,h;msb ccam pos 
   37 D1:B541 0C -  -  -  	inc c 
   38 D1:B542 -  -  -  -  	
   39 D1:B542 C9 -  -  -  	ret 
   40 D1:B543 -  -  -  -  
   41 D1:B543 -  -  -  -  draw_mg:
   42 D1:B543 -  -  -  -  
   43 D1:B543 CD EC B4 D1 	call draw_fg_setup
   44 D1:B547 -  -  -  -  	
   45 D1:B547 2A D2 AB D1 	ld hl,(cam_pos)
   46 D1:B54B CB 3C -  -  	srl h ;div by 2
   47 D1:B54D CB 1D -  -  	rr l 
   48 D1:B54F -  -  -  -  	
   49 D1:B54F CD 18 B5 D1 	call draw_fg_setup_2
   50 D1:B553 -  -  -  -  
   51 D1:B553 21 29 C4 D1 	ld hl,MG_Data_frame_table
   52 D1:B557 09 -  -  -  	add hl,bc
   53 D1:B558 09 -  -  -  	add hl,bc 
   54 D1:B559 09 -  -  -  	add hl,bc 	
   55 D1:B55A ED 27 -  -  	ld hl,(hl);upper frame 
   56 D1:B55C -  -  -  -  	
   57 D1:B55C CD 99 B5 D1 	call draw_fg_sprites
   58 D1:B560 C9 -  -  -  	ret
   59 D1:B561 -  -  -  -  
   60 D1:B561 -  -  -  -  draw_mg2:
   61 D1:B561 -  -  -  -  
   62 D1:B561 CD EC B4 D1 	call draw_fg_setup
   63 D1:B565 -  -  -  -  	
   64 D1:B565 2A D2 AB D1 	ld hl,(cam_pos)
   65 D1:B569 CB 3C -  -  	srl h ;div by 2
   66 D1:B56B CB 1D -  -  	rr l 
   67 D1:B56D -  -  -  -  	
   68 D1:B56D CD 18 B5 D1 	call draw_fg_setup_2
   69 D1:B571 -  -  -  -  
   70 D1:B571 21 BB C6 D1 	ld hl,MG2_Data_frame_table
   71 D1:B575 09 -  -  -  	add hl,bc
   72 D1:B576 09 -  -  -  	add hl,bc 
   73 D1:B577 09 -  -  -  	add hl,bc 	
   74 D1:B578 ED 27 -  -  	ld hl,(hl);upper frame 
   75 D1:B57A -  -  -  -  
   76 D1:B57A CD 99 B5 D1 	call draw_fg_sprites
   77 D1:B57E C9 -  -  -  	ret
   78 D1:B57F -  -  -  -  	
   79 D1:B57F -  -  -  -  
   80 D1:B57F -  -  -  -  draw_fg:
   81 D1:B57F -  -  -  -  
   82 D1:B57F CD EC B4 D1 	call draw_fg_setup
   83 D1:B583 -  -  -  -  	
   84 D1:B583 2A D2 AB D1 	ld hl,(cam_pos)
   85 D1:B587 -  -  -  -  	
   86 D1:B587 CD 18 B5 D1 	call draw_fg_setup_2
   87 D1:B58B -  -  -  -  	
   88 D1:B58B 21 BD C7 D1 	ld hl,FG_Data_frame_table
   89 D1:B58F 09 -  -  -  	add hl,bc
   90 D1:B590 09 -  -  -  	add hl,bc 
   91 D1:B591 09 -  -  -  	add hl,bc 	
   92 D1:B592 ED 27 -  -  	ld hl,(hl);upper frame 
   93 D1:B594 -  -  -  -  
   94 D1:B594 CD 99 B5 D1 	call draw_fg_sprites
   95 D1:B598 C9 -  -  -  	ret
   96 D1:B599 -  -  -  -  
   97 D1:B599 -  -  -  -  
   98 D1:B599 -  -  -  -  ; Upper Frame =======================================================================================================
   99 D1:B599 -  -  -  -  ; Upper Frame =======================================================================================================
  100 D1:B599 -  -  -  -  ;hl = upper frame data
  101 D1:B599 -  -  -  -   
  102 D1:B599 -  -  -  -  ;load cam height 123,vram top 12 vram bottom 1234
  103 D1:B599 -  -  -  -  draw_fg_sprites:
  104 D1:B599 -  -  -  -  	;UPPER FRAME, bottom of upper frame is not on screen, bottom of mid frame is on screen bottom of lower is not on screen
  105 D1:B599 CD 7A B8 D1 	call sprite_table_from_index
  106 D1:B59D ED 53 71 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de ;write sprite table ptr to required locations 
  107 D1:B5A2 ED 53 B3 B7 
              D1 -  -  -  	ld (dfgs_sprite_pointers_2),de 
  108 D1:B5A7 ED 53 04 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  109 D1:B5AC -  -  -  -  	
  110 D1:B5AC 11 00 00 00 	ld de,0
  111 D1:B5B0 23 -  -  -  	inc hl;past data table 
  112 D1:B5B1 -  -  -  -  	;hl is number of elements
  113 D1:B5B1 -  -  -  -  	
  114 D1:B5B1 -  -  -  -  	
  115 D1:B5B1 -  -  -  -  	;if cam is far below upper frame, can skip upper frame 
  116 D1:B5B1 -  -  -  -  dfgs_cam_height_1 .equ $ + 1
  117 D1:B5B1 3E 00 -  -  	ld a,0 
  118 D1:B5B3 FE 78 -  -  	cp FGMaxSpriteHeight
  119 D1:B5B5 D2 C7 B5 D1 	jp nc, dfgs_do_upper_loop
  120 D1:B5B9 -  -  -  -  	;cam too low for upper frame sprites to be drawn
  121 D1:B5B9 01 00 00 00 	ld bc,0
  122 D1:B5BD 4E -  -  -  	ld c,(hl) ;bc holds number of elements
  123 D1:B5BE 09 -  -  -  	add hl,bc 
  124 D1:B5BF 09 -  -  -  	add hl,bc 
  125 D1:B5C0 09 -  -  -  	add hl,bc 
  126 D1:B5C1 09 -  -  -  	add hl,bc;hl points to end of current frame data 
  127 D1:B5C2 23 -  -  -  	inc hl;start of next frame
  128 D1:B5C3 C3 13 B6 D1 	jp dfgs_mid_start ;skip upper loop
  129 D1:B5C7 -  -  -  -  	
  130 D1:B5C7 -  -  -  -  	
  131 D1:B5C7 -  -  -  -  dfgs_do_upper_loop:	
  132 D1:B5C7 08 -  -  -  	ex af,af' ;'
  133 D1:B5C8 -  -  -  -  	
  134 D1:B5C8 7E -  -  -  	ld a,(hl);number of elements
  135 D1:B5C9 -  -  -  -  	;TESTING
  136 D1:B5C9 -  -  -  -  	;call write_a_to_ram
  137 D1:B5C9 -  -  -  -  	;call prgmpause
  138 D1:B5C9 -  -  -  -  	;TESTING
  139 D1:B5C9 -  -  -  -  	
  140 D1:B5C9 3C -  -  -  	inc a ;to be decd later
  141 D1:B5CA 08 -  -  -  	ex af,af' ;'
  142 D1:B5CB 23 -  -  -  	inc hl;hl points to first sprite in upper frame  
  143 D1:B5CC -  -  -  -  
  144 D1:B5CC -  -  -  -  dfgs_upper_loop:;Want to check for sprites in upper frame that extend to lower frame 
  145 D1:B5CC -  -  -  -  
  146 D1:B5CC 08 -  -  -  	ex af,af';'
  147 D1:B5CD 3D -  -  -  	dec a ;dec number of elements
  148 D1:B5CE -  -  -  -  	;call write_a_to_ram
  149 D1:B5CE CA 13 B6 D1 	jp z,dfgs_mid_start 
  150 D1:B5D2 08 -  -  -  	ex af,af';'
  151 D1:B5D3 -  -  -  -  
  152 D1:B5D3 7E -  -  -  	ld a,(hl);sprite y value 
  153 D1:B5D4 23 -  -  -  	inc hl ;to height
  154 D1:B5D5 -  -  -  -  	
  155 D1:B5D5 -  -  -  -  	;call write_a_to_ram
  156 D1:B5D5 -  -  -  -  	;call prgmpause
  157 D1:B5D5 CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  158 D1:B5D7 C2 7A B7 D1 	jp nz, dfgs_sg_upper ;goto group loop 
  159 D1:B5DB -  -  -  -  	
  160 D1:B5DB -  -  -  -  	;otherwise single sprite, call draw routine 
  161 D1:B5DB CD E3 B5 D1 	call dfgs_draw_upper_sprite
  162 D1:B5DF -  -  -  -  	
  163 D1:B5DF C3 CC B5 D1 	jp dfgs_upper_loop
  164 D1:B5E3 -  -  -  -  	
  165 D1:B5E3 -  -  -  -  
  166 D1:B5E3 -  -  -  -  ;Can be used for normal sprites and in sprite groups 
  167 D1:B5E3 -  -  -  -  ;a holds y pos in upper frame, hl pts to sprite height 
  168 D1:B5E3 -  -  -  -  dfgs_draw_upper_sprite:
  169 D1:B5E3 -  -  -  -  
  170 D1:B5E3 37 -  -  -  	scf 
  171 D1:B5E4 -  -  -  -  dfgs_bg_mode_1 .equ $ 
  172 D1:B5E4 D2 B9 AD D1 	jp nc, dbgl_draw_upper_sprite ;if bg mode go to bg draw routine
  173 D1:B5E8 -  -  -  -  
  174 D1:B5E8 -  -  -  -  
  175 D1:B5E8 -  -  -  -  dfgs_viewport_to_upper_frame .equ $ + 1
  176 D1:B5E8 C6 00 -  -  	add a,0 ;a now holds number of lines to skip in current sprite (1 indexed)
  177 D1:B5EA -  -  -  -  	;call write_a_to_ram
  178 D1:B5EA DA 0F B6 D1 	jp c, dfgs_upper_skip ;if sprite has large y pos, can carry over
  179 D1:B5EE BE -  -  -  	cp (hl) ;compare to sprite height 
  180 D1:B5EF D2 0F B6 D1 	jp nc, dfgs_upper_skip ;skips drawing too many lines, sprite is not on screen
  181 D1:B5F3 -  -  -  -  	;a holds number of lines to skip drawing
  182 D1:B5F3 -  -  -  -  
  183 D1:B5F3 -  -  -  -  dfgs_vram_top_1 .equ $ + 1 
  184 D1:B5F3 11 00 00 00 	ld de,0;load top of vram 
  185 D1:B5F7 E5 -  -  -  	push hl ;save height ptr
  186 D1:B5F8 CD 57 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  187 D1:B5FC -  -  -  -  	
  188 D1:B5FC CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  189 D1:B5FE CA 0A B6 D1 	jp z,dfgs_upper_fast
  190 D1:B602 CD FE AE D1 	call draw_slow_sprite_top_cut
  191 D1:B606 C3 0E B6 D1 	jp dfgs_upper_skip_2
  192 D1:B60A -  -  -  -  dfgs_upper_fast:
  193 D1:B60A CD 80 AE D1 	call draw_fast_sprite_top_cut
  194 D1:B60E -  -  -  -  dfgs_upper_skip_2:
  195 D1:B60E E1 -  -  -  	pop hl ;hl holds (height)
  196 D1:B60F -  -  -  -  	
  197 D1:B60F -  -  -  -  
  198 D1:B60F -  -  -  -  dfgs_upper_skip:
  199 D1:B60F -  -  -  -  
  200 D1:B60F 23 -  -  -  	inc hl ;to x
  201 D1:B610 23 -  -  -  	inc hl ;to index 
  202 D1:B611 23 -  -  -  	inc hl;to y 
  203 D1:B612 -  -  -  -  	
  204 D1:B612 C9 -  -  -  	ret ;end of dfgs_draw_upper_sprite
  205 D1:B613 -  -  -  -  	
  206 D1:B613 -  -  -  -  	;ld a,$AA
  207 D1:B613 -  -  -  -  	;call write_a_to_ram
  208 D1:B613 -  -  -  -  	;call prgmpause
  209 D1:B613 -  -  -  -  	
  210 D1:B613 -  -  -  -  
  211 D1:B613 -  -  -  -  ;MIDDLE FRAME ====================================================================================================
  212 D1:B613 -  -  -  -  	
  213 D1:B613 -  -  -  -  dfgs_mid_start:;MIDDLE FRAME, can be top cut, no cut, or bottom cut ===============================================
  214 D1:B613 -  -  -  -  	
  215 D1:B613 -  -  -  -  	;call prgmpause
  216 D1:B613 -  -  -  -  	
  217 D1:B613 CD 7A B8 D1 	call sprite_table_from_index
  218 D1:B617 ED 53 71 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  219 D1:B61C ED 53 FD B7 
              D1 -  -  -  	ld (dfgs_sprite_pointers_3),de 
  220 D1:B621 ED 53 04 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  221 D1:B626 11 00 00 00 	ld de,0
  222 D1:B62A 23 -  -  -  	inc hl;past sprite table ptr
  223 D1:B62B 08 -  -  -  	ex af,af' ;'
  224 D1:B62C 7E -  -  -  	ld a,(hl);number of elements
  225 D1:B62D 3C -  -  -  	inc a 
  226 D1:B62E 08 -  -  -  	ex af,af' ;'
  227 D1:B62F -  -  -  -  	
  228 D1:B62F 23 -  -  -  	inc hl ;to first y val 
  229 D1:B630 -  -  -  -  dfgs_mid_loop:
  230 D1:B630 -  -  -  -  	
  231 D1:B630 08 -  -  -  	ex af,af';'
  232 D1:B631 3D -  -  -  	dec a 
  233 D1:B632 CA C8 B6 D1 	jp z,dfgs_lower_start ;check for end of data
  234 D1:B636 -  -  -  -  	
  235 D1:B636 08 -  -  -  	ex af,af';'
  236 D1:B637 -  -  -  -  
  237 D1:B637 -  -  -  -  	;ld a, $AB
  238 D1:B637 -  -  -  -  	;call write_a_to_ram
  239 D1:B637 -  -  -  -  
  240 D1:B637 7E -  -  -  	ld a,(hl);y val of sprite in dataframe
  241 D1:B638 -  -  -  -  	;call write_a_to_ram
  242 D1:B638 23 -  -  -  	inc hl ;to height
  243 D1:B639 -  -  -  -  	
  244 D1:B639 CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  245 D1:B63B C2 C4 B7 D1 	jp nz, dfgs_sg_mid ;goto group loop 
  246 D1:B63F -  -  -  -  	
  247 D1:B63F -  -  -  -  	;otherwise, draw single sprite 
  248 D1:B63F CD 47 B6 D1 	call dfgs_draw_mid_sprite
  249 D1:B643 -  -  -  -  
  250 D1:B643 -  -  -  -  	
  251 D1:B643 C3 30 B6 D1 	jp dfgs_mid_loop
  252 D1:B647 -  -  -  -  	
  253 D1:B647 -  -  -  -  	
  254 D1:B647 -  -  -  -  	
  255 D1:B647 -  -  -  -  	;a = ypos in mid frame, hl pts to height
  256 D1:B647 -  -  -  -  dfgs_draw_mid_sprite:	
  257 D1:B647 -  -  -  -  	
  258 D1:B647 37 -  -  -  	scf 
  259 D1:B648 -  -  -  -  dfgs_bg_mode_2 .equ $ 
  260 D1:B648 D2 CD AD D1 	jp nc, dbgl_draw_lower_sprite ;if bg mode go to bg draw routine
  261 D1:B64C -  -  -  -  
  262 D1:B64C -  -  -  -  	;call write_a_to_ram
  263 D1:B64C -  -  -  -  	
  264 D1:B64C -  -  -  -  dfgs_cam_height_2 .equ $ + 1 ;y value in dataframe of uppermost line of viewport
  265 D1:B64C D6 00 -  -  	sub 0;subtract cam pos
  266 D1:B64E -  -  -  -  	;call write_a_to_ram
  267 D1:B64E -  -  -  -  
  268 D1:B64E CA 56 B6 D1 	jp z, dfgs_mid_sprite_topline ;check case where sprite is on top line of viewport
  269 D1:B652 D2 A3 B6 D1 	jp nc, dfgs_mid_sprite_above ; carried, sprite is above viewport boundary, a holds num lines to skip
  270 D1:B656 -  -  -  -  dfgs_mid_sprite_topline:
  271 D1:B656 -  -  -  -  
  272 D1:B656 -  -  -  -  	;Sprite is below viewport bound, either full or bottom cut 
  273 D1:B656 -  -  -  -  	
  274 D1:B656 -  -  -  -  	;a = sprite y - cam pos 
  275 D1:B656 3D -  -  -  	dec a ;for case where sprite pos = cam pos
  276 D1:B657 C6 F0 -  -  	add a,240 
  277 D1:B659 -  -  -  -  
  278 D1:B659 D2 7F B6 D1 	jp nc, dfgs_mid_skip
  279 D1:B65D -  -  -  -  	;a holds y pos above bottom of vp (0 indexed )
  280 D1:B65D 3C -  -  -  	inc a 
  281 D1:B65E -  -  -  -  	
  282 D1:B65E -  -  -  -  	
  283 D1:B65E -  -  -  -  	
  284 D1:B65E BE -  -  -  	cp (hl) ;compare to sprite height 
  285 D1:B65F DA 83 B6 D1 	jp c, dfgs_mid_bottom_cut ;height > lines to draw, bottom is cut off 
  286 D1:B663 -  -  -  -  	;otherwise, draw full sprite 
  287 D1:B663 -  -  -  -  	
  288 D1:B663 -  -  -  -  dfgs_vram_bottom_1 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  289 D1:B663 11 00 00 00 	ld de,0;load bottom of vram 
  290 D1:B667 E5 -  -  -  	push hl ;save height ptr
  291 D1:B668 CD 57 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  292 D1:B66C -  -  -  -  	
  293 D1:B66C CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  294 D1:B66E CA 7A B6 D1 	jp z,dfgs_mid_full_fast
  295 D1:B672 CD C0 AE D1 	call draw_slow_sprite_full
  296 D1:B676 C3 7E B6 D1 	jp dfgs_mid_skip_1
  297 D1:B67A -  -  -  -  dfgs_mid_full_fast:
  298 D1:B67A CD A6 AE D1 	call draw_fast_sprite_full
  299 D1:B67E -  -  -  -  dfgs_mid_skip_1:
  300 D1:B67E E1 -  -  -  	pop hl ;hl holds (height)
  301 D1:B67F -  -  -  -  	
  302 D1:B67F -  -  -  -  	
  303 D1:B67F -  -  -  -  dfgs_mid_skip:;sprite is entirely above or below cam pos 
  304 D1:B67F 23 -  -  -  	inc hl ;x
  305 D1:B680 23 -  -  -  	inc hl ;index 
  306 D1:B681 23 -  -  -  	inc hl;to y 
  307 D1:B682 -  -  -  -  	
  308 D1:B682 -  -  -  -  	
  309 D1:B682 -  -  -  -  	
  310 D1:B682 C9 -  -  -  	ret
  311 D1:B683 -  -  -  -  	
  312 D1:B683 -  -  -  -  
  313 D1:B683 -  -  -  -  dfgs_mid_bottom_cut:
  314 D1:B683 -  -  -  -  dfgs_vram_bottom_2 .equ $ + 1  ;Bottom Cut SPRITE, a = lines above bottom of viewport
  315 D1:B683 11 00 00 00 	ld de,0;load bottom of vram 
  316 D1:B687 E5 -  -  -  	push hl ;save height ptr
  317 D1:B688 CD 57 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  318 D1:B68C -  -  -  -  	
  319 D1:B68C CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  320 D1:B68E CA 9A B6 D1 	jp z,dfgs_mid_bcut_fast
  321 D1:B692 CD 2B AF D1 	call draw_slow_sprite_bottom_cut
  322 D1:B696 C3 9E B6 D1 	jp dfgs_mid_skip_2
  323 D1:B69A -  -  -  -  dfgs_mid_bcut_fast:
  324 D1:B69A CD 63 AE D1 	call draw_fast_sprite_bottom_cut
  325 D1:B69E -  -  -  -  dfgs_mid_skip_2:
  326 D1:B69E E1 -  -  -  	pop hl ;hl holds (height)
  327 D1:B69F C3 7F B6 D1 	jp dfgs_mid_skip
  328 D1:B6A3 -  -  -  -  
  329 D1:B6A3 -  -  -  -  dfgs_mid_sprite_above:
  330 D1:B6A3 -  -  -  -  	
  331 D1:B6A3 -  -  -  -  	;a holds lines to skip 
  332 D1:B6A3 BE -  -  -  	cp (hl) ;compare to height
  333 D1:B6A4 D2 7F B6 D1 	jp nc, dfgs_mid_skip ;skip sprite, entirely above viewport
  334 D1:B6A8 -  -  -  -  
  335 D1:B6A8 -  -  -  -  dfgs_vram_top_2 .equ $ + 1
  336 D1:B6A8 11 00 00 00 	ld de,0;top of vram 
  337 D1:B6AC E5 -  -  -  	push hl ;save height ptr
  338 D1:B6AD CD 57 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  339 D1:B6B1 -  -  -  -  	
  340 D1:B6B1 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  341 D1:B6B3 CA BF B6 D1 	jp z,dfgs_mid_tcut_fast
  342 D1:B6B7 CD FE AE D1 	call draw_slow_sprite_top_cut
  343 D1:B6BB C3 C3 B6 D1 	jp dfgs_mid_skip_3
  344 D1:B6BF -  -  -  -  dfgs_mid_tcut_fast:
  345 D1:B6BF CD 80 AE D1 	call draw_fast_sprite_top_cut
  346 D1:B6C3 -  -  -  -  dfgs_mid_skip_3:
  347 D1:B6C3 E1 -  -  -  	pop hl ;hl holds (height)
  348 D1:B6C4 C3 7F B6 D1 	jp dfgs_mid_skip
  349 D1:B6C8 -  -  -  -  	
  350 D1:B6C8 -  -  -  -  	
  351 D1:B6C8 -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================		
  352 D1:B6C8 -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================	
  353 D1:B6C8 -  -  -  -  dfgs_lower_start:
  354 D1:B6C8 -  -  -  -  	
  355 D1:B6C8 CD 7A B8 D1 	call sprite_table_from_index
  356 D1:B6CC ED 53 71 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  357 D1:B6D1 ED 53 46 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_4),de
  358 D1:B6D6 11 00 00 00 	ld de,0
  359 D1:B6DA 23 -  -  -  	inc hl;past data table 
  360 D1:B6DB -  -  -  -  	
  361 D1:B6DB 08 -  -  -  	ex af,af' ;'
  362 D1:B6DC 7E -  -  -  	ld a,(hl);number of elements
  363 D1:B6DD 3C -  -  -  	inc a 
  364 D1:B6DE 08 -  -  -  	ex af,af' ;'
  365 D1:B6DF 23 -  -  -  	inc hl
  366 D1:B6E0 -  -  -  -  	
  367 D1:B6E0 -  -  -  -  
  368 D1:B6E0 -  -  -  -  dfgs_cam_height_3 .equ $ + 1 
  369 D1:B6E0 3E 00 -  -  	ld a, 0
  370 D1:B6E2 D6 EF -  -  	sub 239
  371 D1:B6E4 D0 -  -  -  	ret nc;if bottom frame is offscreen 
  372 D1:B6E5 -  -  -  -  
  373 D1:B6E5 -  -  -  -  	;a holds y value of viewport bottom line in lower frame 
  374 D1:B6E5 -  -  -  -  	
  375 D1:B6E5 -  -  -  -  
  376 D1:B6E5 -  -  -  -  dfgs_lower_loop:
  377 D1:B6E5 -  -  -  -  
  378 D1:B6E5 08 -  -  -  	ex af,af';'
  379 D1:B6E6 3D -  -  -  	dec a 
  380 D1:B6E7 C8 -  -  -  	ret z
  381 D1:B6E8 08 -  -  -  	ex af,af';'
  382 D1:B6E9 -  -  -  -  	
  383 D1:B6E9 7E -  -  -  	ld a,(hl);y
  384 D1:B6EA -  -  -  -  	;call write_a_to_ram
  385 D1:B6EA 23 -  -  -  	inc hl ;inc to height
  386 D1:B6EB -  -  -  -  	
  387 D1:B6EB CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  388 D1:B6ED C2 0E B8 D1 	jp nz, dfgs_sg_lower ;goto group loop 
  389 D1:B6F1 -  -  -  -  	
  390 D1:B6F1 -  -  -  -  	;otherwise, draw single sprite 
  391 D1:B6F1 CD F9 B6 D1 	call dfgs_draw_lower_sprite
  392 D1:B6F5 -  -  -  -  	
  393 D1:B6F5 C3 E5 B6 D1 	jp dfgs_lower_loop
  394 D1:B6F9 -  -  -  -  
  395 D1:B6F9 -  -  -  -  	
  396 D1:B6F9 -  -  -  -  dfgs_draw_lower_sprite: ;a = ypos, hl pts to height
  397 D1:B6F9 -  -  -  -  	
  398 D1:B6F9 -  -  -  -  
  399 D1:B6F9 -  -  -  -  	;call write_a_to_ram
  400 D1:B6F9 47 -  -  -  	ld b,a ;save
  401 D1:B6FA -  -  -  -  dfgs_cam_height_4 .equ $ + 1 
  402 D1:B6FA 3E 00 -  -  	ld a, 0 ;check if bottom frame is in VP at all
  403 D1:B6FC D6 EF -  -  	sub 239
  404 D1:B6FE D2 2B B7 D1 	jp nc,dfgs_lower_skip
  405 D1:B702 78 -  -  -  	ld a,b
  406 D1:B703 -  -  -  -  dfgs_viewport_bottom_y .equ $ + 1
  407 D1:B703 D6 00 -  -  	sub 0;subtract y val of viewport bottom
  408 D1:B705 -  -  -  -  
  409 D1:B705 DA 2B B7 D1 	jp c,dfgs_lower_skip;sprite below screen
  410 D1:B709 -  -  -  -  	
  411 D1:B709 -  -  -  -  	;push af 
  412 D1:B709 -  -  -  -  	;ld a,$A0
  413 D1:B709 -  -  -  -  	;call write_a_to_ram
  414 D1:B709 -  -  -  -  	;pop af
  415 D1:B709 -  -  -  -  	
  416 D1:B709 -  -  -  -  	
  417 D1:B709 3C -  -  -  	inc a
  418 D1:B70A -  -  -  -  	;a holds number of lines to draw 
  419 D1:B70A BE -  -  -  	cp (hl) ;compare to sprite height 
  420 D1:B70B DA 2F B7 D1 	jp c, dfgs_lower_bottom_cut ;bottom is below viewport 
  421 D1:B70F -  -  -  -  	
  422 D1:B70F -  -  -  -  	;draw full sprite 
  423 D1:B70F -  -  -  -  dfgs_vram_bottom_3 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  424 D1:B70F 11 00 00 00 	ld de,0;load bottom of vram 
  425 D1:B713 E5 -  -  -  	push hl ;save height ptr
  426 D1:B714 CD 57 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  427 D1:B718 -  -  -  -  	
  428 D1:B718 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  429 D1:B71A CA 26 B7 D1 	jp z,dfgs_lower_full_fast
  430 D1:B71E CD C0 AE D1 	call draw_slow_sprite_full
  431 D1:B722 C3 2A B7 D1 	jp dfgs_lower_skip_1
  432 D1:B726 -  -  -  -  dfgs_lower_full_fast:
  433 D1:B726 CD A6 AE D1 	call draw_fast_sprite_full
  434 D1:B72A -  -  -  -  dfgs_lower_skip_1:
  435 D1:B72A E1 -  -  -  	pop hl ;hl holds (height)
  436 D1:B72B -  -  -  -  
  437 D1:B72B -  -  -  -  	
  438 D1:B72B -  -  -  -  dfgs_lower_skip:;sprite offscreen
  439 D1:B72B 23 -  -  -  	inc hl ;x 
  440 D1:B72C 23 -  -  -  	inc hl ;index 
  441 D1:B72D 23 -  -  -  	inc hl;to y 
  442 D1:B72E -  -  -  -  	;call write_a_to_ram
  443 D1:B72E -  -  -  -  	;ld a,$AD
  444 D1:B72E -  -  -  -  	;call write_a_to_ram
  445 D1:B72E C9 -  -  -  	ret
  446 D1:B72F -  -  -  -  	
  447 D1:B72F -  -  -  -  dfgs_lower_bottom_cut: 
  448 D1:B72F -  -  -  -  dfgs_vram_bottom_4 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  449 D1:B72F 11 00 00 00 	ld de,0;load bottom of vram 
  450 D1:B733 E5 -  -  -  	push hl ;save height ptr
  451 D1:B734 CD 57 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  452 D1:B738 -  -  -  -  	
  453 D1:B738 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  454 D1:B73A CA 46 B7 D1 	jp z,dfgs_lower_bcut_fast ;even= fast
  455 D1:B73E CD 2B AF D1 	call draw_slow_sprite_bottom_cut
  456 D1:B742 C3 4A B7 D1 	jp dfgs_lower_skip_2
  457 D1:B746 -  -  -  -  dfgs_lower_bcut_fast:
  458 D1:B746 CD 63 AE D1 	call draw_fast_sprite_bottom_cut
  459 D1:B74A -  -  -  -  dfgs_lower_skip_2:
  460 D1:B74A E1 -  -  -  	pop hl ;hl holds (height)
  461 D1:B74B C3 2B B7 D1 	jp dfgs_lower_skip
  462 D1:B74F -  -  -  -  	
  463 D1:B74F -  -  -  -  
  464 D1:B74F -  -  -  -  ;===================================================================================================================
  465 D1:B74F -  -  -  -  ;SPRITE GROUPS =====================================================================================================
  466 D1:B74F -  -  -  -  
  467 D1:B74F -  -  -  -  dfgs_sg_setup:
  468 D1:B74F 23 -  -  -  	inc hl ;hl points to xPos of sprite group 
  469 D1:B750 7E -  -  -  	ld a,(hl)
  470 D1:B751 32 6B B8 D1 	ld (dfgs_sg_x_origin),a 
  471 D1:B755 32 F5 AD D1 	ld (dbgl_sg_x_origin),a
  472 D1:B759 -  -  -  -  	;call write_a_to_ram
  473 D1:B759 01 00 00 00 	ld bc,0
  474 D1:B75D 23 -  -  -  	inc hl ; index 
  475 D1:B75E 4E -  -  -  	ld c,(hl) ;sprite group index 
  476 D1:B75F -  -  -  -  
  477 D1:B75F 21 B2 E5 D1 	ld hl, Sprite_Groups
  478 D1:B763 -  -  -  -  	;ld c,0 ;TESTING
  479 D1:B763 -  -  -  -  
  480 D1:B763 09 -  -  -  	add hl,bc 
  481 D1:B764 09 -  -  -  	add hl,bc 
  482 D1:B765 09 -  -  -  	add hl,bc 
  483 D1:B766 -  -  -  -  	
  484 D1:B766 -  -  -  -  	;hl now points to correct sprite group ptr 
  485 D1:B766 ED 27 -  -  	ld hl, (hl)	
  486 D1:B768 -  -  -  -  	;hl pts to sprite table for this group 
  487 D1:B768 -  -  -  -  
  488 D1:B768 CD 7A B8 D1 	call sprite_table_from_index
  489 D1:B76C ED 53 71 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1), de ;NEed to undo after loop is done 
  490 D1:B771 ED 53 04 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  491 D1:B776 23 -  -  -  	inc hl ;to num sprites 
  492 D1:B777 -  -  -  -  
  493 D1:B777 7E -  -  -  	ld a,(hl) ;num sprites in group
  494 D1:B778 23 -  -  -  	inc hl;first sprite y 
  495 D1:B779 C9 -  -  -  	ret
  496 D1:B77A -  -  -  -  	
  497 D1:B77A -  -  -  -  	;Sprite group in upper frame. a holds y pos of sprite group. HL points to height (unused)
  498 D1:B77A -  -  -  -  dfgs_sg_upper:	
  499 D1:B77A 32 88 B7 D1 	ld (dfgs_sg_upper_y_origin),a
  500 D1:B77E E5 -  -  -  	push hl ;save frame data location (height ptr)
  501 D1:B77F CD 4F B7 D1 	call dfgs_sg_setup ;returns with a = num sprites
  502 D1:B783 -  -  -  -   
  503 D1:B783 32 9C B7 D1 	ld (dfgs_sg_upper_count),a 
  504 D1:B787 -  -  -  -  	
  505 D1:B787 -  -  -  -  dfgs_sg_upper_loop:
  506 D1:B787 -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  507 D1:B787 -  -  -  -  	;if no carry, sprite is still in upper frame, a holds pos in upper frame 
  508 D1:B787 -  -  -  -  	;if carry sprite is entirely in mid frame, a holds y pos in mid frame 
  509 D1:B787 -  -  -  -  dfgs_sg_upper_y_origin .equ $ + 1 
  510 D1:B787 3E 00 -  -  	ld a, 0
  511 D1:B789 96 -  -  -  	sub a,(hl)
  512 D1:B78A -  -  -  -  	;call write_a_to_ram
  513 D1:B78A 23 -  -  -  	inc hl ;to height
  514 D1:B78B D2 97 B7 D1 	jp nc, dfgs_sg_upper_draw_upper
  515 D1:B78F -  -  -  -  	
  516 D1:B78F CD 47 B6 D1 	call dfgs_draw_mid_sprite
  517 D1:B793 C3 9B B7 D1 	jp dfgs_sg_upper_continue
  518 D1:B797 -  -  -  -  	;otherwise, sprite is entirely in mid frame, a holds y pos in mid frame
  519 D1:B797 -  -  -  -  	
  520 D1:B797 -  -  -  -  	
  521 D1:B797 -  -  -  -  dfgs_sg_upper_draw_upper:
  522 D1:B797 CD E3 B5 D1 	call dfgs_draw_upper_sprite
  523 D1:B79B -  -  -  -  dfgs_sg_upper_continue:
  524 D1:B79B -  -  -  -  dfgs_sg_upper_count .equ $ + 1
  525 D1:B79B 3E 00 -  -  	ld a, 0
  526 D1:B79D 3D -  -  -  	dec a 
  527 D1:B79E 32 9C B7 D1 	ld (dfgs_sg_upper_count),a 
  528 D1:B7A2 C2 87 B7 D1 	jp nz, dfgs_sg_upper_loop 
  529 D1:B7A6 -  -  -  -  	;otherwise, end of sprite group 
  530 D1:B7A6 32 6B B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  531 D1:B7AA 32 F5 AD D1 	ld (dbgl_sg_x_origin),a
  532 D1:B7AE E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  533 D1:B7AF 23 -  -  -  	inc hl
  534 D1:B7B0 23 -  -  -  	inc hl
  535 D1:B7B1 23 -  -  -  	inc hl ;to y pos of next sprite
  536 D1:B7B2 -  -  -  -  dfgs_sprite_pointers_2 .equ $ + 1
  537 D1:B7B2 11 00 00 00 	ld de, 0
  538 D1:B7B6 ED 53 71 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  539 D1:B7BB ED 53 04 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  540 D1:B7C0 C3 CC B5 D1 	jp dfgs_upper_loop
  541 D1:B7C4 -  -  -  -  	
  542 D1:B7C4 -  -  -  -  
  543 D1:B7C4 -  -  -  -  
  544 D1:B7C4 -  -  -  -  ;SG MID =========================================================================================================
  545 D1:B7C4 -  -  -  -  	;Sprite group in middle frame. a holds y pos of sprite group. HL points to height (unused)
  546 D1:B7C4 -  -  -  -  dfgs_sg_mid:	
  547 D1:B7C4 E5 -  -  -  	push hl
  548 D1:B7C5 32 D2 B7 D1 	ld (dfgs_sg_mid_y_origin),a
  549 D1:B7C9 CD 4F B7 D1 	call dfgs_sg_setup 
  550 D1:B7CD -  -  -  -  	
  551 D1:B7CD 32 E6 B7 D1 	ld (dfgs_sg_mid_count),a
  552 D1:B7D1 -  -  -  -  	
  553 D1:B7D1 -  -  -  -  dfgs_sg_mid_loop:
  554 D1:B7D1 -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  555 D1:B7D1 -  -  -  -  	;if no carry, sprite is still in mid frame, a holds pos in mid frame 
  556 D1:B7D1 -  -  -  -  	;if carry sprite is entirely in lower frame, a holds y pos in lower frame 
  557 D1:B7D1 -  -  -  -  dfgs_sg_mid_y_origin .equ $ + 1 
  558 D1:B7D1 3E 00 -  -  	ld a, 0
  559 D1:B7D3 96 -  -  -  	sub a,(hl)
  560 D1:B7D4 23 -  -  -  	inc hl ;to height
  561 D1:B7D5 D2 E1 B7 D1 	jp nc, dfgs_sg_mid_draw_mid
  562 D1:B7D9 -  -  -  -  	
  563 D1:B7D9 CD F9 B6 D1 	call dfgs_draw_lower_sprite
  564 D1:B7DD C3 E5 B7 D1 	jp dfgs_sg_mid_continue
  565 D1:B7E1 -  -  -  -  
  566 D1:B7E1 -  -  -  -  		
  567 D1:B7E1 -  -  -  -  dfgs_sg_mid_draw_mid:
  568 D1:B7E1 CD 47 B6 D1 	call dfgs_draw_mid_sprite
  569 D1:B7E5 -  -  -  -  dfgs_sg_mid_continue:
  570 D1:B7E5 -  -  -  -  dfgs_sg_mid_count .equ $ + 1
  571 D1:B7E5 3E 00 -  -  	ld a, 0
  572 D1:B7E7 3D -  -  -  	dec a 
  573 D1:B7E8 32 E6 B7 D1 	ld (dfgs_sg_mid_count),a 
  574 D1:B7EC C2 D1 B7 D1 	jp nz, dfgs_sg_mid_loop 
  575 D1:B7F0 -  -  -  -  	;otherwise, end of sprite group 
  576 D1:B7F0 32 6B B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  577 D1:B7F4 32 F5 AD D1 	ld (dbgl_sg_x_origin),a 
  578 D1:B7F8 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  579 D1:B7F9 23 -  -  -  	inc hl
  580 D1:B7FA 23 -  -  -  	inc hl
  581 D1:B7FB 23 -  -  -  	inc hl ;to y pos of next sprite
  582 D1:B7FC -  -  -  -  dfgs_sprite_pointers_3 .equ $ + 1
  583 D1:B7FC 11 00 00 00 	ld de, 0
  584 D1:B800 ED 53 71 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  585 D1:B805 ED 53 04 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  586 D1:B80A C3 30 B6 D1 	jp dfgs_mid_loop
  587 D1:B80E -  -  -  -  	
  588 D1:B80E -  -  -  -  	
  589 D1:B80E -  -  -  -  ;SG Lower =========================================================================================================
  590 D1:B80E -  -  -  -  	;Sprite group in lower frame. a holds y pos of sprite group. HL points to height (unused)
  591 D1:B80E -  -  -  -  dfgs_sg_lower:	
  592 D1:B80E 32 1C B8 D1 	ld (dfgs_sg_lower_y_origin),a
  593 D1:B812 E5 -  -  -  	push hl
  594 D1:B813 CD 4F B7 D1 	call dfgs_sg_setup 
  595 D1:B817 32 2F B8 D1 	ld (dfgs_sg_lower_count),a
  596 D1:B81B -  -  -  -  	;call write_a_to_ram
  597 D1:B81B -  -  -  -  dfgs_sg_lower_loop:
  598 D1:B81B -  -  -  -  
  599 D1:B81B -  -  -  -  	;call prgmpause
  600 D1:B81B -  -  -  -  
  601 D1:B81B -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  602 D1:B81B -  -  -  -  	;if no carry, sprite is still in lower frame, a holds pos in lower frame 
  603 D1:B81B -  -  -  -  	;if carry sprite is offscreen
  604 D1:B81B -  -  -  -  dfgs_sg_lower_y_origin .equ $ + 1 
  605 D1:B81B 3E 00 -  -  	ld a, 0
  606 D1:B81D 96 -  -  -  	sub a,(hl)
  607 D1:B81E -  -  -  -  	;call write_a_to_ram
  608 D1:B81E 23 -  -  -  	inc hl ;to height
  609 D1:B81F D2 2A B8 D1 	jp nc, dfgs_sg_lower_draw_lower
  610 D1:B823 -  -  -  -  	
  611 D1:B823 23 -  -  -  	inc hl 
  612 D1:B824 23 -  -  -  	inc hl
  613 D1:B825 23 -  -  -  	inc hl 
  614 D1:B826 C3 2E B8 D1 	jp dfgs_sg_lower_continue
  615 D1:B82A -  -  -  -  	;otherwise, sprite is entirely below lower frame, skip
  616 D1:B82A -  -  -  -  	
  617 D1:B82A -  -  -  -  	
  618 D1:B82A -  -  -  -  dfgs_sg_lower_draw_lower:
  619 D1:B82A CD F9 B6 D1 	call dfgs_draw_lower_sprite
  620 D1:B82E -  -  -  -  dfgs_sg_lower_continue:
  621 D1:B82E -  -  -  -  dfgs_sg_lower_count .equ $ + 1
  622 D1:B82E 3E 00 -  -  	ld a, 0
  623 D1:B830 -  -  -  -  	;call write_a_to_ram
  624 D1:B830 3D -  -  -  	dec a 
  625 D1:B831 32 2F B8 D1 	ld (dfgs_sg_lower_count),a 
  626 D1:B835 C2 1B B8 D1 	jp nz, dfgs_sg_lower_loop 
  627 D1:B839 -  -  -  -  	;otherwise, end of sprite group 
  628 D1:B839 32 6B B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  629 D1:B83D 32 F5 AD D1 	ld (dbgl_sg_x_origin),a 
  630 D1:B841 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  631 D1:B842 23 -  -  -  	inc hl
  632 D1:B843 23 -  -  -  	inc hl
  633 D1:B844 23 -  -  -  	inc hl ;to y pos of next sprite
  634 D1:B845 -  -  -  -  dfgs_sprite_pointers_4 .equ $ + 1
  635 D1:B845 11 00 00 00 	ld de, 0
  636 D1:B849 ED 53 71 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  637 D1:B84E ED 53 04 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  638 D1:B853 C3 E5 B6 D1 	jp dfgs_lower_loop
  639 D1:B857 -  -  -  -  	
  640 D1:B857 -  -  -  -  	
  641 D1:B857 -  -  -  -  	
  642 D1:B857 -  -  -  -  	
  643 D1:B857 -  -  -  -  ;a holds distance from bottom of screen, starting from 1, or for top cut dist above screen = num lines to skip 
  644 D1:B857 -  -  -  -  ;(hl) = height 	
  645 D1:B857 -  -  -  -  ;de = initial vram, top for top cut, otherwise bottom
  646 D1:B857 -  -  -  -  
  647 D1:B857 -  -  -  -  ;Subtracts a lines from de (initial vram pos),
  648 D1:B857 -  -  -  -  ;returns hl = sprite data, de = new vram position
  649 D1:B857 -  -  -  -  dfgs_setup_draw:
  650 D1:B857 23 -  -  -  	inc hl ;x pos 
  651 D1:B858 01 00 00 00 	ld bc,0
  652 D1:B85C 4E -  -  -  	ld c,(hl); x pos
  653 D1:B85D 23 -  -  -  	inc hl;to index
  654 D1:B85E E5 -  -  -  	push hl;save sprite index 
  655 D1:B85F 26 A0 -  -  	ld h,160
  656 D1:B861 6F -  -  -  	ld l,a ;number of lines to subtract 
  657 D1:B862 ED 6C -  -  	mlt hl;subtract from vram
  658 D1:B864 37 -  -  -  	scf 
  659 D1:B865 3F -  -  -  	ccf
  660 D1:B866 EB -  -  -  	ex de,hl;hl holds initial vram pos, de is lines to subtract  
  661 D1:B867 ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  662 D1:B869 09 -  -  -  	add hl,bc;add x pos ;hl now holds sprite draw start pos 
  663 D1:B86A -  -  -  -  dfgs_sg_x_origin .equ $ + 1 ;
  664 D1:B86A 0E 00 -  -  	ld c, 0
  665 D1:B86C 09 -  -  -  	add hl,bc;add sprite group x pos offset (if applicable)
  666 D1:B86D EB -  -  -  	ex de,hl;put in de
  667 D1:B86E E1 -  -  -  	pop hl;back to frame data 
  668 D1:B86F 4E -  -  -  	ld c,(hl);sprite index
  669 D1:B870 -  -  -  -  dfgs_sprite_pointers_1 .equ $ + 1	
  670 D1:B870 21 00 00 00 	ld hl,0 ;load sprite table 
  671 D1:B874 09 -  -  -  	add hl,bc
  672 D1:B875 09 -  -  -  	add hl,bc 
  673 D1:B876 09 -  -  -  	add hl,bc;move to sprite ptr
  674 D1:B877 -  -  -  -  	;call prgmpause
  675 D1:B877 ED 27 -  -  	ld hl,(hl);hl holds sprite data, if even = fast sprite 
  676 D1:B879 -  -  -  -  
  677 D1:B879 C9 -  -  -  	ret
  678 D1:B87A -  -  -  -  
  679 D1:B87A -  -  -  -  	;hl pts to sprite table index, returns de = sprite table ptr
  680 D1:B87A -  -  -  -  	
  681 D1:B87A -  -  -  -  sprite_table_from_index:
  682 D1:B87A E5 -  -  -  	push hl ;save 
  683 D1:B87B 11 00 00 00 	ld de,0
  684 D1:B87F 5E -  -  -  	ld e,(hl) ;e holds table index
  685 D1:B880 21 94 D2 D1 	ld hl,Sprite_Table_Table
  686 D1:B884 19 -  -  -  	add hl,de 
  687 D1:B885 19 -  -  -  	add hl,de 
  688 D1:B886 19 -  -  -  	add hl,de ;inc to correct table
  689 D1:B887 ED 17 -  -  	ld de,(hl)
  690 D1:B889 -  -  -  -  	
  691 D1:B889 -  -  -  -  
  692 D1:B889 -  -  -  -  	
  693 D1:B889 -  -  -  -  	;call prgmpause Seems to work
  694 D1:B889 -  -  -  -  	
  695 D1:B889 E1 -  -  -  	pop hl 
  696 D1:B88A C9 -  -  -  	ret 
  697 D1:B88B -  -  -  -  	
  698 D1:B88B -  -  -  -  
  699 D1:B88B -  -  -  -  
  700 D1:B88B -  -  -  -  	
  701 D1:B88B -  -  -  -  	
  702 D1:B88B -  -  -  -  	
  703 D1:B88B -  -  -  -  	
  704 D1:B88B -  -  -  -  	
  705 D1:B88B -  -  -  -  	
  706 D1:B88B -  -  -  -  	
  707 D1:B88B -  -  -  -  	
  708 D1:B88B -  -  -  -  	
  709 D1:B88B -  -  -  -  	
Listing for file "ascent.asm"
  556 D1:B88B -  -  -  -  #include "SpriteDecompressManager.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\SpriteDecompressManager.txt"
    1 D1:B88B -  -  -  -  
    2 D1:B88B -  -  -  -  
    3 D1:B88B -  -  -  -  decompress_queue_start .equ vram
    4 D1:B88B -  -  -  -  
    5 D1:B88B -  -  -  -  decompress_queue_end .equ vram + (7*64) ;Max queue length of 64
    6 D1:B88B -  -  -  -  
    7 D1:B88B -  -  -  -  decompress_tail_ptr:
    8 D1:B88B 06 00 D4 -  	.dl decompress_queue_start + 6  ;points to sprite being currently decompressed (parameters byte)
    9 D1:B88E -  -  -  -  
   10 D1:B88E -  -  -  -  decompress_head_ptr: ;points to where next element will be added to queue
   11 D1:B88E 00 00 D4 -  	.dl decompress_queue_start
   12 D1:B891 -  -  -  -  
   13 D1:B891 -  -  -  -  ;Decompress queue format
   14 D1:B891 -  -  -  -  ; .dl Sprite data ptr, decompress location, parameters (7 = fast, 6 = offset, 5 = flip, 4 =started decompressing 3 = finished decompressing )
   15 D1:B891 -  -  -  -  
   16 D1:B891 -  -  -  -  setup_decompress_queue: ;clears memory in queue
   17 D1:B891 3E FF -  -  	ld a,$FF
   18 D1:B893 01 C0 01 00 	ld bc, 7*64
   19 D1:B897 21 00 00 D4 	ld hl, decompress_queue_start
   20 D1:B89B 22 8E B8 D1 	ld (decompress_head_ptr),hl 
   21 D1:B89F CD E0 10 02 	call _MemSet
   22 D1:B8A3 21 06 00 D4 	ld hl, decompress_queue_start + 6
   23 D1:B8A7 22 8B B8 D1 	ld (decompress_tail_ptr),hl 
   24 D1:B8AB 3E 00 -  -  	ld a,0 
   25 D1:B8AD 32 B6 B9 D1 	ld (last_decompressed_cam_pos),a
   26 D1:B8B1 C9 -  -  -  	ret 
   27 D1:B8B2 -  -  -  -  
   28 D1:B8B2 -  -  -  -  ;bc = sprite data ptr, de = decompress location, a = params
   29 D1:B8B2 -  -  -  -  ;adds sprite to queue
   30 D1:B8B2 -  -  -  -  add_to_decompress_queue:
   31 D1:B8B2 2A 8E B8 D1 	ld hl, (decompress_head_ptr)
   32 D1:B8B6 ED 0F -  -  	ld (hl), bc 
   33 D1:B8B8 23 -  -  -  	inc hl
   34 D1:B8B9 23 -  -  -  	inc hl 
   35 D1:B8BA 23 -  -  -  	inc hl 
   36 D1:B8BB -  -  -  -  
   37 D1:B8BB ED 1F -  -  	ld (hl),de
   38 D1:B8BD -  -  -  -  	
   39 D1:B8BD 23 -  -  -  	inc hl 
   40 D1:B8BE 23 -  -  -  	inc hl 
   41 D1:B8BF 23 -  -  -  	inc hl 
   42 D1:B8C0 -  -  -  -  	
   43 D1:B8C0 77 -  -  -  	ld (hl), a 
   44 D1:B8C1 23 -  -  -  	inc hl ;start of next element 
   45 D1:B8C2 -  -  -  -  	
   46 D1:B8C2 E5 -  -  -  	push hl 
   47 D1:B8C3 11 C0 01 D4 	ld de, decompress_queue_end
   48 D1:B8C7 37 -  -  -  	scf
   49 D1:B8C8 3F -  -  -  	ccf
   50 D1:B8C9 ED 52 -  -  	sbc hl,de ;check if we have reached end of queue to wrap around
   51 D1:B8CB E1 -  -  -  	pop hl
   52 D1:B8CC CA D5 B8 D1 	jp z, a2dq_back_to_start
   53 D1:B8D0 -  -  -  -  	
   54 D1:B8D0 22 8E B8 D1 	ld (decompress_head_ptr),hl
   55 D1:B8D4 -  -  -  -  	;ld a,$AB ;testing
   56 D1:B8D4 -  -  -  -  	;call write_a_to_ram
   57 D1:B8D4 C9 -  -  -  	ret
   58 D1:B8D5 -  -  -  -  	
   59 D1:B8D5 -  -  -  -  a2dq_back_to_start:
   60 D1:B8D5 -  -  -  -  	;ld a,$AA ;testing
   61 D1:B8D5 -  -  -  -  	;call write_a_to_ram
   62 D1:B8D5 -  -  -  -  
   63 D1:B8D5 21 00 00 D4 	ld hl,decompress_queue_start
   64 D1:B8D9 22 8E B8 D1 	ld (decompress_head_ptr),hl
   65 D1:B8DD C9 -  -  -  	ret
   66 D1:B8DE -  -  -  -  	
   67 D1:B8DE -  -  -  -  	
   68 D1:B8DE -  -  -  -  
   69 D1:B8DE -  -  -  -  
   70 D1:B8DE -  -  -  -  ;Runs after frame has been rendered. Checks through decompress queue and continues sprite decompressions
   71 D1:B8DE -  -  -  -  	;if has ended, return. at end of queue
   72 D1:B8DE -  -  -  -  	;if not started, begin decompression and set start flag
   73 D1:B8DE -  -  -  -  	;if has started, but not ended, continue decompression 
   74 D1:B8DE -  -  -  -  	;if started and ended, move to next element 
   75 D1:B8DE -  -  -  -  continue_decompressions:
   76 D1:B8DE 2A 8B B8 D1 	ld hl, (decompress_tail_ptr)
   77 D1:B8E2 7E -  -  -  	ld a,(hl) ;decompress params 
   78 D1:B8E3 CB 5F -  -  	bit 3,a 
   79 D1:B8E5 C0 -  -  -  	ret nz ;sprite is done decompressing, at end of queue 
   80 D1:B8E6 -  -  -  -  	
   81 D1:B8E6 -  -  -  -  	;testing
   82 D1:B8E6 -  -  -  -  	;push af
   83 D1:B8E6 -  -  -  -  	;ld a,$55
   84 D1:B8E6 -  -  -  -  	;call write_a_to_ram
   85 D1:B8E6 -  -  -  -  	;pop af
   86 D1:B8E6 -  -  -  -  	
   87 D1:B8E6 -  -  -  -  	
   88 D1:B8E6 -  -  -  -  	
   89 D1:B8E6 -  -  -  -  	
   90 D1:B8E6 CB 67 -  -  	bit 4,a
   91 D1:B8E8 CA 24 B9 D1 	jp z, cd_begin_decompression
   92 D1:B8EC -  -  -  -  	
   93 D1:B8EC -  -  -  -  	;has started,not ended 
   94 D1:B8EC CD A0 B2 D1 	call sdcomp_continue 
   95 D1:B8F0 B7 -  -  -  	or a 
   96 D1:B8F1 C0 -  -  -  	ret nz ;sprite not yet done decompressing 
   97 D1:B8F2 -  -  -  -  
   98 D1:B8F2 -  -  -  -  cd_done_decompressing:
   99 D1:B8F2 -  -  -  -  	;sprite finished decompressing
  100 D1:B8F2 2A 8B B8 D1 	ld hl, (decompress_tail_ptr)	
  101 D1:B8F6 CB DE -  -  	set 3,(hl) ;set finished flag
  102 D1:B8F8 11 07 00 00 	ld de,7 
  103 D1:B8FC 19 -  -  -  	add hl,de ;points to next element in queue
  104 D1:B8FD -  -  -  -  	
  105 D1:B8FD E5 -  -  -  	push hl 
  106 D1:B8FE 11 C0 01 D4 	ld de, decompress_queue_end
  107 D1:B902 37 -  -  -  	scf
  108 D1:B903 3F -  -  -  	ccf
  109 D1:B904 ED 52 -  -  	sbc hl,de ;check if need to wrap to start of queue
  110 D1:B906 E1 -  -  -  	pop hl
  111 D1:B907 D2 13 B9 D1 	jp nc, cd_back_to_start
  112 D1:B90B 22 8B B8 D1 	ld (decompress_tail_ptr),hl
  113 D1:B90F C3 DE B8 D1 	jp continue_decompressions ;Move on to next sprite 
  114 D1:B913 -  -  -  -  	
  115 D1:B913 -  -  -  -  cd_back_to_start:
  116 D1:B913 21 00 00 D4 	ld hl,decompress_queue_start
  117 D1:B917 11 06 00 00 	ld de,6 ;tail points to the parameters byte
  118 D1:B91B 19 -  -  -  	add hl,de
  119 D1:B91C 22 8B B8 D1 	ld (decompress_tail_ptr),hl
  120 D1:B920 C3 DE B8 D1 	jp continue_decompressions ;Move on to next sprite 
  121 D1:B924 -  -  -  -  
  122 D1:B924 -  -  -  -  cd_begin_decompression:
  123 D1:B924 -  -  -  -  
  124 D1:B924 -  -  -  -  	;testing
  125 D1:B924 -  -  -  -  	;push af 
  126 D1:B924 -  -  -  -  	;ld a,$AA
  127 D1:B924 -  -  -  -  	;call write_a_to_ram
  128 D1:B924 -  -  -  -  	;pop af
  129 D1:B924 -  -  -  -  	
  130 D1:B924 -  -  -  -  	;setup and begin decompressing
  131 D1:B924 CB E6 -  -  	set 4,(hl) ;set start flag
  132 D1:B926 F5 -  -  -  	push af 
  133 D1:B927 CB 7F -  -  	bit 7,a 
  134 D1:B929 C4 CE B4 D1 	call nz, sdcomp_set_fast
  135 D1:B92D F1 -  -  -  	pop af 
  136 D1:B92E -  -  -  -  	
  137 D1:B92E F5 -  -  -  	push af 
  138 D1:B92F CB 7F -  -  	bit 7,a 
  139 D1:B931 CC DD B4 D1 	call z, sdcomp_reset_fast
  140 D1:B935 F1 -  -  -  	pop af 
  141 D1:B936 -  -  -  -  	
  142 D1:B936 F5 -  -  -  	push af 
  143 D1:B937 CB 77 -  -  	bit 6,a 
  144 D1:B939 C4 5E B4 D1 	call nz, sdcomp_set_offset
  145 D1:B93D F1 -  -  -  	pop af 
  146 D1:B93E -  -  -  -  	
  147 D1:B93E F5 -  -  -  	push af 
  148 D1:B93F CB 77 -  -  	bit 6,a 
  149 D1:B941 CC 6F B4 D1 	call z, sdcomp_reset_offset
  150 D1:B945 F1 -  -  -  	pop af 
  151 D1:B946 -  -  -  -  	
  152 D1:B946 F5 -  -  -  	push af 
  153 D1:B947 CB 6F -  -  	bit 5,a 
  154 D1:B949 C4 80 B4 D1 	call nz, sdcomp_set_flip
  155 D1:B94D F1 -  -  -  	pop af 
  156 D1:B94E -  -  -  -  	
  157 D1:B94E F5 -  -  -  	push af 
  158 D1:B94F CB 6F -  -  	bit 5,a 
  159 D1:B951 CC A7 B4 D1 	call z, sdcomp_reset_flip
  160 D1:B955 F1 -  -  -  	pop af 
  161 D1:B956 -  -  -  -  	
  162 D1:B956 2A 8B B8 D1 	ld hl, (decompress_tail_ptr) ;may be unnessecary
  163 D1:B95A -  -  -  -  	
  164 D1:B95A 2B -  -  -  	dec hl 
  165 D1:B95B 2B -  -  -  	dec hl 
  166 D1:B95C 2B -  -  -  	dec hl 
  167 D1:B95D ED 17 -  -  	ld de,(hl) ;load decompress location
  168 D1:B95F -  -  -  -  
  169 D1:B95F 2B -  -  -  	dec hl 
  170 D1:B960 2B -  -  -  	dec hl 
  171 D1:B961 2B -  -  -  	dec hl 
  172 D1:B962 ED 27 -  -  	ld hl,(hl) ;load sprite data ptr
  173 D1:B964 -  -  -  -  
  174 D1:B964 CD 03 B1 D1 	call sprite_decompress
  175 D1:B968 B7 -  -  -  	or a 
  176 D1:B969 C0 -  -  -  	ret nz ;sprite not yet done decompressing 
  177 D1:B96A C3 F2 B8 D1 	jp cd_done_decompressing
  178 D1:B96E -  -  -  -  
  179 D1:B96E -  -  -  -  
  180 D1:B96E -  -  -  -  ;Checks to see if cam has moved to a new frame and decompressions need to be added to queue
  181 D1:B96E -  -  -  -  check_for_decompress_calls:
  182 D1:B96E 3A B6 B9 D1 	ld a, (last_decompressed_cam_pos)
  183 D1:B972 47 -  -  -  	ld b,a ;put last decompressed pos in b
  184 D1:B973 3A D3 AB D1 	ld a, (cam_pos + 1) ;Current frame cam is in
  185 D1:B977 32 B6 B9 D1 	ld (last_decompressed_cam_pos),a ;store this frame as the last decompressed frame 
  186 D1:B97B -  -  -  -  	;need to check if cam has moved up or down since last time
  187 D1:B97B B8 -  -  -  	cp a,b 
  188 D1:B97C -  -  -  -  	
  189 D1:B97C -  -  -  -  	
  190 D1:B97C C8 -  -  -  	ret z ;if same, no new things to add to queue 
  191 D1:B97D D2 89 B9 D1 	jp nc, cfdc_cam_move_up ;camera has moved up since last time 
  192 D1:B981 -  -  -  -  	
  193 D1:B981 -  -  -  -  	;cam has moved down since last time 
  194 D1:B981 21 C9 C9 D1 	ld hl, decompress_calls_table_down
  195 D1:B985 C3 8D B9 D1 	jp cfdc_add_calls_to_queue
  196 D1:B989 -  -  -  -  	
  197 D1:B989 -  -  -  -  	
  198 D1:B989 -  -  -  -  cfdc_cam_move_up:
  199 D1:B989 21 BB C8 D1 	ld hl, decompress_calls_table_up
  200 D1:B98D -  -  -  -  
  201 D1:B98D -  -  -  -  	;a = cam frame, hl = decompress call table (up or down)
  202 D1:B98D -  -  -  -  cfdc_add_calls_to_queue:
  203 D1:B98D -  -  -  -  
  204 D1:B98D -  -  -  -  	;call write_a_to_ram
  205 D1:B98D -  -  -  -  
  206 D1:B98D 01 00 00 00 	ld bc,0
  207 D1:B991 4F -  -  -  	ld c,a
  208 D1:B992 09 -  -  -  	add hl,bc 
  209 D1:B993 09 -  -  -  	add hl,bc 
  210 D1:B994 09 -  -  -  	add hl,bc 
  211 D1:B995 ED 27 -  -  	ld hl,(hl) ;hl now points to correct decompress frame 
  212 D1:B997 -  -  -  -  cfdc_direct_add_decompress_frame:
  213 D1:B997 -  -  -  -  
  214 D1:B997 08 -  -  -  	ex af,af' ;'
  215 D1:B998 7E -  -  -  	ld a,(hl) ;a' holds num elements 
  216 D1:B999 -  -  -  -  	
  217 D1:B999 -  -  -  -  	;call write_a_to_ram
  218 D1:B999 -  -  -  -  	
  219 D1:B999 -  -  -  -  	;call prgmpause
  220 D1:B999 -  -  -  -  	
  221 D1:B999 3C -  -  -  	inc a ;to be decd later
  222 D1:B99A 08 -  -  -  	ex af,af' ;'
  223 D1:B99B -  -  -  -  	
  224 D1:B99B 23 -  -  -  	inc hl ;points to first sprite data 
  225 D1:B99C -  -  -  -  cfdc_add_to_queue_loop:
  226 D1:B99C 08 -  -  -  	ex af,af' ;'
  227 D1:B99D -  -  -  -  	;call write_a_to_ram
  228 D1:B99D 3D -  -  -  	dec a ;account for cases where frame has 0 elements 
  229 D1:B99E C8 -  -  -  	ret z
  230 D1:B99F 08 -  -  -  	ex af,af' ;'
  231 D1:B9A0 ED 07 -  -  	ld bc ,(hl) ;load sprite data 
  232 D1:B9A2 23 -  -  -  	inc hl 
  233 D1:B9A3 23 -  -  -  	inc hl
  234 D1:B9A4 23 -  -  -  	inc hl 
  235 D1:B9A5 ED 17 -  -  	ld de,(hl) ;load decomp location 
  236 D1:B9A7 23 -  -  -  	inc hl 
  237 D1:B9A8 23 -  -  -  	inc hl
  238 D1:B9A9 23 -  -  -  	inc hl 
  239 D1:B9AA 7E -  -  -  	ld a,(hl) ;ld params
  240 D1:B9AB 23 -  -  -  	inc hl 
  241 D1:B9AC E5 -  -  -  	push hl
  242 D1:B9AD CD B2 B8 D1 	call add_to_decompress_queue
  243 D1:B9B1 E1 -  -  -  	pop hl
  244 D1:B9B2 C3 9C B9 D1 	jp cfdc_add_to_queue_loop
  245 D1:B9B6 -  -  -  -  	
  246 D1:B9B6 -  -  -  -  	
  247 D1:B9B6 -  -  -  -  
  248 D1:B9B6 -  -  -  -  
  249 D1:B9B6 -  -  -  -  last_decompressed_cam_pos:
  250 D1:B9B6 00 -  -  -  	.db 0 ;camera frame last time checking for decomp was called 
  251 D1:B9B7 -  -  -  -  	
  252 D1:B9B7 -  -  -  -  	
  253 D1:B9B7 -  -  -  -  
  254 D1:B9B7 -  -  -  -  
  255 D1:B9B7 -  -  -  -  
  256 D1:B9B7 -  -  -  -  
  257 D1:B9B7 -  -  -  -  
  258 D1:B9B7 -  -  -  -  
  259 D1:B9B7 -  -  -  -  
  260 D1:B9B7 -  -  -  -  
  261 D1:B9B7 -  -  -  -  
  262 D1:B9B7 -  -  -  -  
  263 D1:B9B7 -  -  -  -  
  264 D1:B9B7 -  -  -  -  
  265 D1:B9B7 -  -  -  -  
  266 D1:B9B7 -  -  -  -  
  267 D1:B9B7 -  -  -  -  
  268 D1:B9B7 -  -  -  -  
  269 D1:B9B7 -  -  -  -  
  270 D1:B9B7 -  -  -  -  
  271 D1:B9B7 -  -  -  -  
  272 D1:B9B7 -  -  -  -  
  273 D1:B9B7 -  -  -  -  
  274 D1:B9B7 -  -  -  -  
  275 D1:B9B7 -  -  -  -  
  276 D1:B9B7 -  -  -  -  
  277 D1:B9B7 -  -  -  -  
Listing for file "ascent.asm"
  557 D1:B9B7 -  -  -  -  #include "getInputs.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\getInputs.txt"
    1 D1:B9B7 -  -  -  -  
    2 D1:B9B7 -  -  -  -  
    3 D1:B9B7 -  -  -  -  
    4 D1:B9B7 -  -  -  -  get_inputs:
    5 D1:B9B7 21 00 00 F5 	ld	hl,DI_Mode		; register for keypad mode
    6 D1:B9BB 36 02 -  -  	ld	(hl),2			; set single scan mode
    7 D1:B9BD -  -  -  -  
    8 D1:B9BD AF -  -  -  	xor	a,a
    9 D1:B9BE -  -  -  -  scan_wait:
   10 D1:B9BE BE -  -  -  	cp	a,(hl)			; wait for keypad idle mode
   11 D1:B9BF 20 FD -  -  	jr	nz,scan_wait
   12 D1:B9C1 -  -  -  -  	
   13 D1:B9C1 -  -  -  -  	; https://wikiti.brandonw.net/index.php?title=84PCE:Ports:A000
   14 D1:B9C1 -  -  -  -  	
   15 D1:B9C1 3A 1E 00 F5 	ld	a,(kbdG7) ; $F5001E
   16 D1:B9C5 CB 5F -  -   	bit	kbitUp,a
   17 D1:B9C7 F5 -  -  -  	push af 
   18 D1:B9C8 C2 F5 B9 D1 	jp nz, input_cam_up
   19 D1:B9CC F1 -  -  -  	pop af 
   20 D1:B9CD -  -  -  -  	
   21 D1:B9CD CB 47 -  -  	bit	kbitDown,a
   22 D1:B9CF C2 15 BA D1 	jp nz, input_cam_down
   23 D1:B9D3 -  -  -  -  
   24 D1:B9D3 -  -  -  -  
   25 D1:B9D3 3A 1C 00 F5 	ld a,(kbdG6)
   26 D1:B9D7 CB 77 -  -  	bit kbitClear,a
   27 D1:B9D9 C2 65 AB D1 	jp nz,exit_prgm
   28 D1:B9DD -  -  -  -  	
   29 D1:B9DD 3A 1A 00 F5 	ld a,(kbdG5)
   30 D1:B9E1 CB 57 -  -  	bit kbit6,a 
   31 D1:B9E3 C4 61 BA D1 	call nz, charge_jump_right
   32 D1:B9E7 -  -  -  -  	
   33 D1:B9E7 3A 16 00 F5 	ld a,(kbdG3)
   34 D1:B9EB CB 57 -  -  	bit kbit4,a 
   35 D1:B9ED C4 35 BA D1 	call nz, charge_jump_left
   36 D1:B9F1 -  -  -  -  	
   37 D1:B9F1 -  -  -  -  
   38 D1:B9F1 C3 1B A9 D1 	jp get_inputs_return
   39 D1:B9F5 -  -  -  -  	
   40 D1:B9F5 -  -  -  -  	
   41 D1:B9F5 -  -  -  -  input_cam_up:
   42 D1:B9F5 -  -  -  -  	;Move cam
   43 D1:B9F5 2A D2 AB D1 	ld hl,(cam_pos)
   44 D1:B9F9 -  -  -  -  	
   45 D1:B9F9 E5 -  -  -  	push hl 
   46 D1:B9FA 01 C4 09 00 	ld bc,2500
   47 D1:B9FE ED 42 -  -  	sbc hl,bc 
   48 D1:BA00 E1 -  -  -  	pop hl 
   49 D1:BA01 D2 1B A9 D1 	jp nc, get_inputs_return
   50 D1:BA05 -  -  -  -  	
   51 D1:BA05 23 -  -  -  	inc hl
   52 D1:BA06 23 -  -  -  	inc hl
   53 D1:BA07 23 -  -  -  	inc hl
   54 D1:BA08 23 -  -  -  	inc hl
   55 D1:BA09 23 -  -  -  	inc hl
   56 D1:BA0A 23 -  -  -  	inc hl
   57 D1:BA0B 23 -  -  -  	inc hl
   58 D1:BA0C 23 -  -  -  	inc hl
   59 D1:BA0D -  -  -  -  	
   60 D1:BA0D 22 D2 AB D1 	ld (cam_pos),hl
   61 D1:BA11 C3 1B A9 D1 	jp get_inputs_return
   62 D1:BA15 -  -  -  -  
   63 D1:BA15 -  -  -  -  
   64 D1:BA15 -  -  -  -  input_cam_down:
   65 D1:BA15 -  -  -  -  	;Move cam
   66 D1:BA15 2A D2 AB D1 	ld hl,(cam_pos)
   67 D1:BA19 -  -  -  -  	
   68 D1:BA19 -  -  -  -  	
   69 D1:BA19 E5 -  -  -  	push hl 
   70 D1:BA1A 01 0A 00 00 	ld bc,10 
   71 D1:BA1E ED 42 -  -  	sbc hl,bc 
   72 D1:BA20 E1 -  -  -  	pop hl 
   73 D1:BA21 DA 1B A9 D1 	jp c, get_inputs_return
   74 D1:BA25 -  -  -  -  	
   75 D1:BA25 2B -  -  -  	dec hl
   76 D1:BA26 2B -  -  -  	dec hl
   77 D1:BA27 2B -  -  -  	dec hl
   78 D1:BA28 2B -  -  -  	dec hl
   79 D1:BA29 2B -  -  -  	dec hl
   80 D1:BA2A 2B -  -  -  	dec hl
   81 D1:BA2B 2B -  -  -  	dec hl
   82 D1:BA2C 2B -  -  -  	dec hl
   83 D1:BA2D -  -  -  -  	
   84 D1:BA2D -  -  -  -  	
   85 D1:BA2D -  -  -  -  	
   86 D1:BA2D -  -  -  -  	
   87 D1:BA2D -  -  -  -  	
   88 D1:BA2D 22 D2 AB D1 	ld (cam_pos),hl
   89 D1:BA31 C3 1B A9 D1 	jp get_inputs_return
   90 D1:BA35 -  -  -  -  	
   91 D1:BA35 -  -  -  -  	
   92 D1:BA35 -  -  -  -  	
Listing for file "ascent.asm"
  558 D1:BA35 -  -  -  -  #include "PlayerController.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\PlayerController.txt"
    1 D1:BA35 -  -  -  -  
    2 D1:BA35 -  -  -  -  
    3 D1:BA35 -  -  -  -  
    4 D1:BA35 -  -  -  -  charge_jump_left:
    5 D1:BA35 -  -  -  -  	;Decrease jump right strength if it > -127 
    6 D1:BA35 -  -  -  -  	;Increase jump up strength 
    7 D1:BA35 -  -  -  -  	;Do nothing if jump left timer is above max value 
    8 D1:BA35 3A 07 BF D1 	ld a,(player_flags)
    9 D1:BA39 CB FF -  -  	set 7, a 
   10 D1:BA3B 32 07 BF D1 	ld (player_flags),a 
   11 D1:BA3F -  -  -  -  	
   12 D1:BA3F 3A F4 BE D1 	ld a,(jump_charge_timer)
   13 D1:BA43 FE 1E -  -  	cp timer_max_val
   14 D1:BA45 D2 60 BA D1 	jp nc, cjl_skip
   15 D1:BA49 3A F3 BE D1 	ld a,(jump_strength_right)
   16 D1:BA4D 3D -  -  -  	dec a 
   17 D1:BA4E 3D -  -  -  	dec a 
   18 D1:BA4F 3D -  -  -  	dec a 
   19 D1:BA50 3D -  -  -  	dec a 
   20 D1:BA51 32 F3 BE D1 	ld (jump_strength_right),a
   21 D1:BA55 3A F2 BE D1 	ld a,(jump_strength_up)
   22 D1:BA59 3C -  -  -  	inc a 
   23 D1:BA5A 3C -  -  -  	inc a 
   24 D1:BA5B 3C -  -  -  	inc a 
   25 D1:BA5C 32 F2 BE D1 	ld (jump_strength_up),a
   26 D1:BA60 -  -  -  -  
   27 D1:BA60 -  -  -  -  cjl_skip:
   28 D1:BA60 C9 -  -  -  	ret 
   29 D1:BA61 -  -  -  -  
   30 D1:BA61 -  -  -  -  
   31 D1:BA61 -  -  -  -  charge_jump_right:
   32 D1:BA61 -  -  -  -  	;Increase jump right strength if it < 127 
   33 D1:BA61 -  -  -  -  	;Increase jump up strength 
   34 D1:BA61 -  -  -  -  	;Do nothing if jump  timer is above max value 
   35 D1:BA61 -  -  -  -  	
   36 D1:BA61 3A 07 BF D1 	ld a,(player_flags)
   37 D1:BA65 CB FF -  -  	set 7, a 
   38 D1:BA67 32 07 BF D1 	ld (player_flags),a 
   39 D1:BA6B 3A F4 BE D1 	ld a,(jump_charge_timer)
   40 D1:BA6F FE 1E -  -  	cp timer_max_val
   41 D1:BA71 D2 8C BA D1 	jp nc, cjr_skip
   42 D1:BA75 3A F3 BE D1 	ld a,(jump_strength_right)
   43 D1:BA79 3C -  -  -  	inc a
   44 D1:BA7A 3C -  -  -  	inc a
   45 D1:BA7B 3C -  -  -  	inc a
   46 D1:BA7C 3C -  -  -  	inc a
   47 D1:BA7D 32 F3 BE D1 	ld (jump_strength_right),a
   48 D1:BA81 3A F2 BE D1 	ld a,(jump_strength_up)
   49 D1:BA85 3C -  -  -  	inc a 
   50 D1:BA86 3C -  -  -  	inc a
   51 D1:BA87 3C -  -  -  	inc a
   52 D1:BA88 32 F2 BE D1 	ld (jump_strength_up),a	
   53 D1:BA8C -  -  -  -  cjr_skip:
   54 D1:BA8C C9 -  -  -  	ret 
   55 D1:BA8D -  -  -  -  
   56 D1:BA8D -  -  -  -  
   57 D1:BA8D -  -  -  -  
   58 D1:BA8D -  -  -  -  player_update: ;Should be called after inputs
   59 D1:BA8D -  -  -  -  
   60 D1:BA8D 3A 07 BF D1 	ld a,(player_flags)
   61 D1:BA91 CB 7F -  -  	bit 7,a ;jump key  flag 
   62 D1:BA93 CA AA BA D1 	jp z, pu_try_jump
   63 D1:BA97 -  -  -  -  	
   64 D1:BA97 CB BF -  -  	res 7,a ;Reset jump hold check 
   65 D1:BA99 32 07 BF D1 	ld (player_flags),a 
   66 D1:BA9D -  -  -  -  	;Jump key is held, charge jump
   67 D1:BA9D 3A F4 BE D1 	ld a,(jump_charge_timer)
   68 D1:BAA1 3C -  -  -  	inc a 
   69 D1:BAA2 32 F4 BE D1 	ld (jump_charge_timer),a
   70 D1:BAA6 -  -  -  -  	;Jumps can be charged in air, for immediate jump
   71 D1:BAA6 -  -  -  -  	
   72 D1:BAA6 C3 FF BA D1 	jp pu_physics
   73 D1:BAAA -  -  -  -  	
   74 D1:BAAA -  -  -  -  pu_try_jump:
   75 D1:BAAA -  -  -  -  	;no jump keys held this frame. If jump timer > 0 and on ground, then jump 
   76 D1:BAAA -  -  -  -  	
   77 D1:BAAA CB 77 -  -  	bit 6,a ;ground check 
   78 D1:BAAC CA F1 BA D1 	jp z, pu_no_jump ;if not on ground, cant jump
   79 D1:BAB0 3A F4 BE D1 	ld a,(jump_charge_timer)
   80 D1:BAB4 B7 -  -  -  	or a 
   81 D1:BAB5 CA F1 BA D1 	jp z,pu_no_jump ;jump timers are 0 = no jump
   82 D1:BAB9 -  -  -  -  	
   83 D1:BAB9 FE 05 -  -  	cp 5;if timer < 5 no jump
   84 D1:BABB DA F1 BA D1 	jp c, pu_no_jump
   85 D1:BABF -  -  -  -  	
   86 D1:BABF -  -  -  -  	;This is the minimum jump player can do 
   87 D1:BABF -  -  -  -  	;ld a,(jump_strength_right)
   88 D1:BABF -  -  -  -  	;bit 7,a 
   89 D1:BABF -  -  -  -  	;;jp nz, pu_min_jump_left 
   90 D1:BABF -  -  -  -  	;or a 
   91 D1:BABF -  -  -  -  	;jp z, pu_min_jump_up 
   92 D1:BABF -  -  -  -  	;ld a,20 
   93 D1:BABF -  -  -  -  	;jp pu_min_jump_up
   94 D1:BABF -  -  -  -  ;pu_min_jump_left:
   95 D1:BABF -  -  -  -  	;ld a, -20
   96 D1:BABF -  -  -  -  ;pu_min_jump_up:
   97 D1:BABF -  -  -  -  	;ld (jump_strength_right),a 
   98 D1:BABF -  -  -  -  	
   99 D1:BABF -  -  -  -  	;ld a,15 
  100 D1:BABF -  -  -  -  	;ld (jump_strength_up),a 
  101 D1:BABF -  -  -  -  	
  102 D1:BABF -  -  -  -  	;ld a,$55
  103 D1:BABF -  -  -  -  	;call write_a_to_ram
  104 D1:BABF -  -  -  -  	
  105 D1:BABF -  -  -  -  	;Player is on ground and should execute a jump 
  106 D1:BABF -  -  -  -  pu_jump_notmin:
  107 D1:BABF -  -  -  -  	
  108 D1:BABF 21 00 00 00 	ld hl,0 
  109 D1:BAC3 3A F2 BE D1 	ld a,(jump_strength_up)
  110 D1:BAC7 6F -  -  -  	ld l,a
  111 D1:BAC8 -  -  -  -  	;call write_a_to_ram
  112 D1:BAC8 -  -  -  -  
  113 D1:BAC8 22 FE BE D1 	ld (player_y_vel),hl 
  114 D1:BACC -  -  -  -  	;call write_hl_to_ram
  115 D1:BACC -  -  -  -  	
  116 D1:BACC 3A F3 BE D1 	ld a,(jump_strength_right)
  117 D1:BAD0 -  -  -  -  	;call write_a_to_ram
  118 D1:BAD0 CB 7F -  -  	bit 7, a 
  119 D1:BAD2 C2 DE BA D1 	jp nz, pu_left_jump 
  120 D1:BAD6 -  -  -  -  	;right jump 
  121 D1:BAD6 21 00 00 00 	ld hl,0
  122 D1:BADA C3 E2 BA D1 	jp pu_jump_cont
  123 D1:BADE -  -  -  -  pu_left_jump:	
  124 D1:BADE 21 FF FF FF 	ld hl, $ffffff ;makes x vel negative 
  125 D1:BAE2 -  -  -  -  pu_jump_cont:
  126 D1:BAE2 6F -  -  -  	ld l,a 
  127 D1:BAE3 -  -  -  -  	
  128 D1:BAE3 22 FB BE D1 	ld (player_x_vel),hl 
  129 D1:BAE7 -  -  -  -  	;call write_hl_to_ram
  130 D1:BAE7 -  -  -  -  	;Clear ground flag 
  131 D1:BAE7 3A 07 BF D1 	ld a,(player_flags)
  132 D1:BAEB CB B7 -  -  	res 6, a 
  133 D1:BAED 32 07 BF D1 	ld (player_flags),a 
  134 D1:BAF1 -  -  -  -  	
  135 D1:BAF1 -  -  -  -  pu_no_jump:	
  136 D1:BAF1 -  -  -  -  	;reset jump timers 
  137 D1:BAF1 3E 00 -  -  	ld a,0 
  138 D1:BAF3 32 F4 BE D1 	ld (jump_charge_timer),a 
  139 D1:BAF7 32 F3 BE D1 	ld (jump_strength_right),a 
  140 D1:BAFB 32 F2 BE D1 	ld (jump_strength_up),a
  141 D1:BAFF -  -  -  -  	
  142 D1:BAFF -  -  -  -  	
  143 D1:BAFF -  -  -  -  	
  144 D1:BAFF -  -  -  -  	
  145 D1:BAFF -  -  -  -  	
  146 D1:BAFF -  -  -  -  	
  147 D1:BAFF -  -  -  -  pu_physics:
  148 D1:BAFF -  -  -  -  
  149 D1:BAFF -  -  -  -  	;Execute player physics update and check for collisions 
  150 D1:BAFF -  -  -  -  	;Run multiple times, 16 steps per frame? 
  151 D1:BAFF -  -  -  -  	;Move up first, then check collision, then move side and check again 
  152 D1:BAFF -  -  -  -  
  153 D1:BAFF 3E 10 -  -  	ld a,16 ;num physics loops 
  154 D1:BB01 32 06 BB D1 	ld (pu_physics_count),a 
  155 D1:BB05 -  -  -  -  	
  156 D1:BB05 -  -  -  -  pu_physics_loop:
  157 D1:BB05 -  -  -  -  
  158 D1:BB05 -  -  -  -  pu_physics_count .equ $ + 1
  159 D1:BB05 3E 00 -  -  	ld a,0
  160 D1:BB07 3D -  -  -  	dec a 
  161 D1:BB08 CA B2 BB D1 	jp z, pu_physics_end
  162 D1:BB0C 32 06 BB D1 	ld (pu_physics_count),a
  163 D1:BB10 -  -  -  -  	
  164 D1:BB10 3A 07 BF D1 	ld a,(player_flags)
  165 D1:BB14 -  -  -  -  	
  166 D1:BB14 CB AF -  -  	res 5,a ;reset in semisolid flag 
  167 D1:BB16 32 07 BF D1 	ld (player_flags),a 
  168 D1:BB1A CB 77 -  -  	bit 6,a 
  169 D1:BB1C C2 05 BB D1 	jp nz,pu_physics_loop ;If on ground, no need to do physics 
  170 D1:BB20 -  -  -  -  	
  171 D1:BB20 -  -  -  -  	
  172 D1:BB20 -  -  -  -  
  173 D1:BB20 -  -  -  -  ;Y POS UPDATE
  174 D1:BB20 -  -  -  -  
  175 D1:BB20 2A FE BE D1 	ld hl, (player_y_vel) 	
  176 D1:BB24 EB -  -  -  	ex de,hl 
  177 D1:BB25 2A F8 BE D1 	ld hl, (player_y_pos) 
  178 D1:BB29 19 -  -  -  	add hl,de ;add y vel to y pos 
  179 D1:BB2A 22 F8 BE D1 	ld (player_y_pos),hl 
  180 D1:BB2E -  -  -  -  	
  181 D1:BB2E -  -  -  -  	;check for vertical collisions here 
  182 D1:BB2E 3E DA -  -  	ld a,%11011010;jp c
  183 D1:BB30 32 34 BD D1 	ld (collision_check_vertical),a
  184 D1:BB34 CD 9B BC D1 	call check_collisions
  185 D1:BB38 -  -  -  -  	
  186 D1:BB38 -  -  -  -  	;Temp ground check
  187 D1:BB38 2A F8 BE D1 	ld hl, (player_y_pos) 
  188 D1:BB3C 11 00 20 00 	ld de, $002000
  189 D1:BB40 ED 52 -  -  	sbc hl,de 
  190 D1:BB42 D2 58 BB D1 	jp nc, pu_update_x_pos 
  191 D1:BB46 -  -  -  -  
  192 D1:BB46 -  -  -  -  pu_ground_hit:
  193 D1:BB46 21 00 20 00 	ld hl,$002000 ;TEMP 
  194 D1:BB4A 22 F8 BE D1 	ld (player_y_pos),hl 
  195 D1:BB4E 3A 07 BF D1 	ld a,(player_flags)
  196 D1:BB52 CB F7 -  -  	set 6,a 
  197 D1:BB54 32 07 BF D1 	ld (player_flags),a 
  198 D1:BB58 -  -  -  -  
  199 D1:BB58 -  -  -  -  pu_update_x_pos:
  200 D1:BB58 -  -  -  -  
  201 D1:BB58 -  -  -  -  ;X POS UPDATE
  202 D1:BB58 2A FB BE D1 	ld hl, (player_x_vel) 
  203 D1:BB5C EB -  -  -  	ex de,hl 
  204 D1:BB5D 2A F5 BE D1 	ld hl, (player_x_pos) 
  205 D1:BB61 19 -  -  -  	add hl,de ;add x vel to x pos 
  206 D1:BB62 22 F5 BE D1 	ld (player_x_pos),hl 
  207 D1:BB66 -  -  -  -  	
  208 D1:BB66 11 00 02 00 	ld de,$000200
  209 D1:BB6A ED 52 -  -  	sbc hl,de 
  210 D1:BB6C DC C0 BE D1 	call c, reverse_x_vel ;If xpos < 2px
  211 D1:BB70 2A F5 BE D1 	ld hl, (player_x_pos) 
  212 D1:BB74 11 00 28 01 	ld de,$012800; if xpos > 300px
  213 D1:BB78 ED 52 -  -  	sbc hl,de 
  214 D1:BB7A D4 C0 BE D1 	call nc,reverse_x_vel
  215 D1:BB7E -  -  -  -  	
  216 D1:BB7E -  -  -  -  	;TODO check horizontal collisoins 
  217 D1:BB7E 3E D2 -  -  	ld a, %11010010 ;jp nc 
  218 D1:BB80 32 34 BD D1 	ld (collision_check_vertical),a
  219 D1:BB84 CD 9B BC D1 	call check_collisions
  220 D1:BB88 -  -  -  -  	
  221 D1:BB88 -  -  -  -  	;Set previous position 
  222 D1:BB88 2A F8 BE D1 	ld hl, (player_y_pos)
  223 D1:BB8C 22 04 BF D1 	ld (player_y_pos_prev), hl 
  224 D1:BB90 2A F5 BE D1 	ld hl, (player_x_pos)
  225 D1:BB94 22 01 BF D1 	ld (player_x_pos_prev), hl 
  226 D1:BB98 -  -  -  -  	
  227 D1:BB98 3A 07 BF D1 	ld a,(player_flags)
  228 D1:BB9C CB 6F -  -  	bit 5,a ;in semisolid flag 
  229 D1:BB9E CA A8 BB D1 	jp z, pu_no_semisolid
  230 D1:BBA2 CB E7 -  -  	set 4,a	
  231 D1:BBA4 C3 AA BB D1 	jp pu_prev_semisolid
  232 D1:BBA8 -  -  -  -  pu_no_semisolid:
  233 D1:BBA8 CB A7 -  -  	res 4,a 
  234 D1:BBAA -  -  -  -  pu_prev_semisolid:
  235 D1:BBAA 32 07 BF D1 	ld (player_flags),a 
  236 D1:BBAE -  -  -  -  	
  237 D1:BBAE C3 05 BB D1 	jp pu_physics_loop
  238 D1:BBB2 -  -  -  -  	;Apply gravity and terminal v check after loop 
  239 D1:BBB2 -  -  -  -  	
  240 D1:BBB2 -  -  -  -  pu_physics_end:
  241 D1:BBB2 -  -  -  -  	;Apply gravity 
  242 D1:BBB2 2A FE BE D1 	ld hl,(player_y_vel)
  243 D1:BBB6 CB 7C -  -  	bit 7,h  ;Check if vel is negative
  244 D1:BBB8 CA C7 BB D1 	jp z,pu_apply_gravity
  245 D1:BBBC -  -  -  -  	
  246 D1:BBBC E5 -  -  -  	push hl 
  247 D1:BBBD -  -  -  -  	;check foor terminal vel 
  248 D1:BBBD 11 00 0F 00 	ld de, $000f00 ;15px per frame
  249 D1:BBC1 19 -  -  -  	add hl,de ;terminal V is negative
  250 D1:BBC2 E1 -  -  -  	pop hl 
  251 D1:BBC3 D2 D4 BB D1 	jp nc, pu_terminal_vel
  252 D1:BBC7 -  -  -  -  pu_apply_gravity:
  253 D1:BBC7 11 0B 00 00 	ld de,11 ;GRAVITY CONSTANT
  254 D1:BBCB 37 -  -  -  	scf 
  255 D1:BBCC 3F -  -  -  	ccf ;reset carry flag 
  256 D1:BBCD ED 52 -  -  	sbc hl,de 
  257 D1:BBCF 22 FE BE D1 	ld (player_y_vel),hl
  258 D1:BBD3 -  -  -  -  
  259 D1:BBD3 C9 -  -  -  	ret 
  260 D1:BBD4 -  -  -  -  pu_terminal_vel:
  261 D1:BBD4 21 00 F1 FF 	ld hl, $fff100 ;-15 px per frame
  262 D1:BBD8 22 FE BE D1 	ld (player_y_vel),hl
  263 D1:BBDC -  -  -  -  
  264 D1:BBDC C9 -  -  -  	ret 
  265 D1:BBDD -  -  -  -  
  266 D1:BBDD -  -  -  -  
  267 D1:BBDD -  -  -  -  
  268 D1:BBDD -  -  -  -  
  269 D1:BBDD -  -  -  -  player_draw:
  270 D1:BBDD -  -  -  -  ;Draw sprite and reset any flags 
  271 D1:BBDD -  -  -  -  
  272 D1:BBDD -  -  -  -  	;Todo Logic for choosing sprite index 
  273 D1:BBDD 3E 00 -  -  	ld a,0 
  274 D1:BBDF 32 96 BC D1 	ld (player_sprite_index),a 
  275 D1:BBE3 3E 13 -  -  	ld a, 19
  276 D1:BBE5 32 50 BC D1 	ld (pd_sprite_height_1),a 
  277 D1:BBE9 32 6F BC D1 	ld (pd_sprite_height_2),a 
  278 D1:BBED -  -  -  -  	
  279 D1:BBED -  -  -  -  	
  280 D1:BBED -  -  -  -  	;ld x pos
  281 D1:BBED 3A F6 BE D1 	ld a, (player_x_pos + 1) ;fullpixel byte
  282 D1:BBF1 -  -  -  -  
  283 D1:BBF1 CB 47 -  -  	bit 0, a ;least fullpixel bit 
  284 D1:BBF3 CA 00 BC D1 	jp z, pd_even_px 
  285 D1:BBF7 ED 5B EF BE 
              D1 -  -  -  	ld de, (player_sprite_table_offset)
  286 D1:BBFC C3 05 BC D1 	jp pd_set_sprite_table
  287 D1:BC00 -  -  -  -  pd_even_px:
  288 D1:BC00 ED 5B EC BE 
              D1 -  -  -  	ld de, (player_sprite_table)
  289 D1:BC05 -  -  -  -  pd_set_sprite_table:
  290 D1:BC05 ED 53 92 BC 
              D1 -  -  -  	ld (pd_sprite_table), de 
  291 D1:BC0A -  -  -  -  	
  292 D1:BC0A CB 3F -  -  	srl a ;div by 2
  293 D1:BC0C 47 -  -  -  	ld b,a 
  294 D1:BC0D 3A F7 BE D1 	ld a,(player_x_pos+2);MSB fullpixel 
  295 D1:BC11 0F -  -  -  	rrca ;Move bit 0 to bit 7
  296 D1:BC12 B0 -  -  -  	or b 
  297 D1:BC13 -  -  -  -  
  298 D1:BC13 -  -  -  -  	
  299 D1:BC13 32 8E BC D1 	ld (pd_xpos_full),a 
  300 D1:BC17 -  -  -  -  	
  301 D1:BC17 -  -  -  -  	;call write_a_to_ram
  302 D1:BC17 -  -  -  -  	
  303 D1:BC17 21 00 00 00 	ld hl,0 
  304 D1:BC1B 3A FA BE D1 	ld a,(player_y_pos + 2) ;MSB
  305 D1:BC1F 67 -  -  -  	ld h,a 
  306 D1:BC20 3A F9 BE D1 	ld a, (player_y_pos + 1) ;middle bit (fullpixel LSB)
  307 D1:BC24 6F -  -  -  	ld l,a 
  308 D1:BC25 -  -  -  -  
  309 D1:BC25 EB -  -  -  	ex de,hl 
  310 D1:BC26 2A D2 AB D1 	ld hl,(cam_pos)
  311 D1:BC2A CB 3C -  -  	srl h ;div by 2
  312 D1:BC2C CB 1D -  -  	rr l 
  313 D1:BC2E 01 EF 00 00 	ld bc,239
  314 D1:BC32 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of fg layer
  315 D1:BC33 37 -  -  -  	scf 
  316 D1:BC34 3F -  -  -  	ccf 
  317 D1:BC35 -  -  -  -  	;Uppermost vp line - player y  = lines below top to draw player 
  318 D1:BC35 ED 52 -  -  	sbc hl,de 
  319 D1:BC37 -  -  -  -  	;call write_hl_to_ram
  320 D1:BC37 DA 67 BC D1 	jp c, pd_top_cut
  321 D1:BC3B -  -  -  -  	
  322 D1:BC3B 7C -  -  -  	ld a,h 
  323 D1:BC3C -  -  -  -  	
  324 D1:BC3C B7 -  -  -  	or a 
  325 D1:BC3D C0 -  -  -  	ret nz ;player is > 256 px below cam 
  326 D1:BC3E -  -  -  -  	
  327 D1:BC3E 7D -  -  -  	ld a,l 
  328 D1:BC3F -  -  -  -  	;a holds lines below vp top to draw player
  329 D1:BC3F 47 -  -  -  	ld b,a 
  330 D1:BC40 3E F0 -  -  	ld a,240
  331 D1:BC42 90 -  -  -  	sub a,b ;lines above bottom of VP 
  332 D1:BC43 D8 -  -  -  	ret c ;player below VP 
  333 D1:BC44 -  -  -  -  
  334 D1:BC44 -  -  -  -  	
  335 D1:BC44 ED 5B D8 AB 
              D1 -  -  -  	ld de, (draw_buffer)
  336 D1:BC49 21 00 96 00 	ld hl, 240*160
  337 D1:BC4D 19 -  -  -  	add hl,de 
  338 D1:BC4E EB -  -  -  	ex de,hl ;DE hlds VP bottom 
  339 D1:BC4F -  -  -  -  	
  340 D1:BC4F -  -  -  -  pd_sprite_height_1 .equ $ + 1
  341 D1:BC4F FE 00 -  -  	cp 0 
  342 D1:BC51 DA 5E BC D1 	jp c, pd_bottom_cut 
  343 D1:BC55 -  -  -  -  
  344 D1:BC55 -  -  -  -  	;Otherwise, no top or bottm cut
  345 D1:BC55 -  -  -  -  	;a holds lines above bottom VP 
  346 D1:BC55 CD 7F BC D1 	call pd_setup_draw
  347 D1:BC59 -  -  -  -  	
  348 D1:BC59 -  -  -  -  
  349 D1:BC59 -  -  -  -  	;call prgmpause
  350 D1:BC59 -  -  -  -  	
  351 D1:BC59 CD C0 AE D1 	call draw_slow_sprite_full
  352 D1:BC5D -  -  -  -  	
  353 D1:BC5D -  -  -  -  	
  354 D1:BC5D C9 -  -  -  	ret
  355 D1:BC5E -  -  -  -  
  356 D1:BC5E -  -  -  -  pd_bottom_cut:
  357 D1:BC5E -  -  -  -  	;a holds lines to draw
  358 D1:BC5E -  -  -  -  	;DE holds vram bottom 
  359 D1:BC5E CD 7F BC D1 	call pd_setup_draw
  360 D1:BC62 CD 2B AF D1 	call draw_slow_sprite_bottom_cut
  361 D1:BC66 -  -  -  -  	
  362 D1:BC66 -  -  -  -  	;push af 
  363 D1:BC66 -  -  -  -  	;ld a,$33
  364 D1:BC66 -  -  -  -  	;call write_a_to_ram 
  365 D1:BC66 -  -  -  -  	;pop af 
  366 D1:BC66 -  -  -  -  	
  367 D1:BC66 C9 -  -  -  	ret 
  368 D1:BC67 -  -  -  -  	
  369 D1:BC67 -  -  -  -  
  370 D1:BC67 -  -  -  -  pd_top_cut:
  371 D1:BC67 -  -  -  -  	;call write_hl_to_ram
  372 D1:BC67 -  -  -  -  	;push af 
  373 D1:BC67 -  -  -  -  	;ld a,$44
  374 D1:BC67 -  -  -  -  	;call write_a_to_ram 
  375 D1:BC67 -  -  -  -  	;pop af 
  376 D1:BC67 -  -  -  -  
  377 D1:BC67 7C -  -  -  	ld a,h ;Upper byte after subtraction, check for chase where player > 256 px above cam to prevent overflow errors
  378 D1:BC68 EE FF -  -  	xor %11111111 ;flip all bits 
  379 D1:BC6A C0 -  -  -  	ret nz ;player is > 256 px above cam 
  380 D1:BC6B -  -  -  -  	
  381 D1:BC6B -  -  -  -   
  382 D1:BC6B -  -  -  -  	
  383 D1:BC6B 7D -  -  -  	ld a,l ;lines below VP
  384 D1:BC6C ED 44 -  -  	neg 
  385 D1:BC6E -  -  -  -  
  386 D1:BC6E -  -  -  -  	;a holds lines above vp top = lines to cut 
  387 D1:BC6E -  -  -  -  pd_sprite_height_2 .equ $ + 1 
  388 D1:BC6E FE 00 -  -  	cp 0 ; compare to height 
  389 D1:BC70 D0 -  -  -  	ret nc 
  390 D1:BC71 -  -  -  -  
  391 D1:BC71 ED 5B D8 AB 
              D1 -  -  -  	ld de,(draw_buffer)
  392 D1:BC76 CD 7F BC D1 	call pd_setup_draw ;Setup draw pos 
  393 D1:BC7A -  -  -  -  	
  394 D1:BC7A -  -  -  -  	;bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  395 D1:BC7A -  -  -  -  	;jp z,pd_top_cut_fast
  396 D1:BC7A CD FE AE D1 	call draw_slow_sprite_top_cut ;for now assume all sprites are slow
  397 D1:BC7E -  -  -  -  	
  398 D1:BC7E -  -  -  -  	;jp pd_top_cut_slow
  399 D1:BC7E -  -  -  -  ;pd_top_cut_fast:
  400 D1:BC7E -  -  -  -  	;call draw_fast_sprite_top_cut
  401 D1:BC7E -  -  -  -  ;pd_top_cut_slow:
  402 D1:BC7E -  -  -  -  	
  403 D1:BC7E C9 -  -  -  	ret 
  404 D1:BC7F -  -  -  -  	
  405 D1:BC7F -  -  -  -  
  406 D1:BC7F -  -  -  -  
  407 D1:BC7F -  -  -  -  
  408 D1:BC7F -  -  -  -  pd_setup_draw:
  409 D1:BC7F -  -  -  -  	;A holds lines above bottom (or top) line of VP 
  410 D1:BC7F -  -  -  -  	;DE holds VP top or bottom
  411 D1:BC7F 26 A0 -  -  	ld h,160
  412 D1:BC81 6F -  -  -  	ld l,a ;Num lines to subtract
  413 D1:BC82 ED 6C -  -  	mlt hl 
  414 D1:BC84 37 -  -  -  	scf 
  415 D1:BC85 3F -  -  -  	ccf 
  416 D1:BC86 EB -  -  -  	ex de,hl ;De holds lines to subtract, hl holds vram pos 
  417 D1:BC87 ED 52 -  -  	sbc hl,de 
  418 D1:BC89 01 00 00 00 	ld bc,0 
  419 D1:BC8D -  -  -  -  pd_xpos_full .equ $ + 1 
  420 D1:BC8D 0E 00 -  -  	ld c, 0 ;ld x pos 
  421 D1:BC8F 09 -  -  -  	add hl,bc 
  422 D1:BC90 EB -  -  -  	ex de,hl 
  423 D1:BC91 -  -  -  -  pd_sprite_table .equ $ + 1 
  424 D1:BC91 21 00 00 00 	ld hl,0 ;Load sprite table (offset or even)
  425 D1:BC95 -  -  -  -  
  426 D1:BC95 -  -  -  -  player_sprite_index .equ $ + 1 
  427 D1:BC95 0E 00 -  -  	ld c,0 ;load sprite index 
  428 D1:BC97 09 -  -  -  	add hl,bc 
  429 D1:BC98 09 -  -  -  	add hl,bc 
  430 D1:BC99 09 -  -  -  	add hl,bc 
  431 D1:BC9A -  -  -  -  	;HL holds sprite data, de holds draw pos 
  432 D1:BC9A C9 -  -  -  	ret 
  433 D1:BC9B -  -  -  -  
  434 D1:BC9B -  -  -  -  
  435 D1:BC9B -  -  -  -  
  436 D1:BC9B -  -  -  -  
  437 D1:BC9B -  -  -  -  check_collisions:
  438 D1:BC9B 3A FA BE D1 	ld a,(player_y_pos+2) ;Frame Number
  439 D1:BC9F 01 00 00 00 	ld bc,0 
  440 D1:BCA3 21 46 EA D1 	ld hl, Collision_Data_frame_table
  441 D1:BCA7 4F -  -  -  	ld c,a 
  442 D1:BCA8 09 -  -  -  	add hl,bc ;add frame num 
  443 D1:BCA9 09 -  -  -  	add hl,bc ;add frame num 
  444 D1:BCAA 09 -  -  -  	add hl,bc ;add frame num 
  445 D1:BCAB ED 27 -  -  	ld hl,(hl)
  446 D1:BCAD -  -  -  -  	
  447 D1:BCAD 3E DA -  -  	ld a,%11011010;jp c
  448 D1:BCAF 32 B8 BE D1 	ld(check_col_lower_jump),a 
  449 D1:BCB3 -  -  -  -  	
  450 D1:BCB3 -  -  -  -  	;hl points to collision data for this frame 
  451 D1:BCB3 08 -  -  -  	ex af,af' ;' 
  452 D1:BCB4 7E -  -  -  	ld a,(hl) ;ld number of elements 
  453 D1:BCB5 3C -  -  -  	inc a ;for 0 case
  454 D1:BCB6 08 -  -  -  	ex af,af' ;' 
  455 D1:BCB7 23 -  -  -  	inc hl ;to first element
  456 D1:BCB8 -  -  -  -  
  457 D1:BCB8 -  -  -  -  check_collisions_same_loop:
  458 D1:BCB8 -  -  -  -  	;hl pts to ymin of collider 
  459 D1:BCB8 08 -  -  -  	ex af,af' ;'
  460 D1:BCB9 3D -  -  -  	dec a 
  461 D1:BCBA CA D9 BC D1 	jp z, check_collisions_lower
  462 D1:BCBE 08 -  -  -  	ex af,af';' 
  463 D1:BCBF -  -  -  -  	;Collider bottom is in same frame as player 
  464 D1:BCBF 3A F9 BE D1 	ld a,(player_y_pos + 1)
  465 D1:BCC3 96 -  -  -  	sub a,(hl); sub y pos of collider 
  466 D1:BCC4 -  -  -  -  	;call write_a_to_ram
  467 D1:BCC4 DA B2 BE D1 	jp c, check_col_skip_4 
  468 D1:BCC8 23 -  -  -  	inc hl; to height 
  469 D1:BCC9 -  -  -  -  	;Player top is above bottom of collider 
  470 D1:BCC9 -  -  -  -  	;a holds # pixels above bottom of collider (0 indexed)	
  471 D1:BCC9 0E 13 -  -  	ld c,player_collider_height
  472 D1:BCCB -  -  -  -  	;call write_a_to_ram
  473 D1:BCCB 91 -  -  -  	sub a,c
  474 D1:BCCC DA 02 BD D1 	jp c, check_col_y_collision
  475 D1:BCD0 96 -  -  -  	sub (hl); cokmpare to collider height -1 
  476 D1:BCD1 DA 02 BD D1 	jp c,check_col_y_collision
  477 D1:BCD5 -  -  -  -  	;Otherwise no collision 	
  478 D1:BCD5 C3 B3 BE D1 	jp check_col_skip_3
  479 D1:BCD9 -  -  -  -  
  480 D1:BCD9 -  -  -  -  check_collisions_lower:
  481 D1:BCD9 -  -  -  -  	;hl pts to start of lower frame collisoin data 
  482 D1:BCD9 08 -  -  -  	ex af,af' ;' 
  483 D1:BCDA 7E -  -  -  	ld a,(hl) ;ld number of elements 
  484 D1:BCDB 3C -  -  -  	inc a ;for 0 case
  485 D1:BCDC -  -  -  -  	;call write_a_to_ram
  486 D1:BCDC 08 -  -  -  	ex af,af' ;' 
  487 D1:BCDD 23 -  -  -  	inc hl ;to first element
  488 D1:BCDE 3E D2 -  -  	ld a, %11010010 ;jp nc 
  489 D1:BCE0 32 B8 BE D1 	ld(check_col_lower_jump),a 
  490 D1:BCE4 -  -  -  -  
  491 D1:BCE4 -  -  -  -  check_collisions_lower_loop:
  492 D1:BCE4 -  -  -  -  ;hl pts to ymin of collider 
  493 D1:BCE4 08 -  -  -  	ex af,af' ;'
  494 D1:BCE5 3D -  -  -  	dec a 
  495 D1:BCE6 C8 -  -  -  	ret z 
  496 D1:BCE7 08 -  -  -  	ex af,af';' 
  497 D1:BCE8 -  -  -  -  	;collider y min is in frame below player
  498 D1:BCE8 -  -  -  -  	;we already know player is above collider bottom 
  499 D1:BCE8 3A F9 BE D1 	ld a,(player_y_pos + 1)
  500 D1:BCEC 96 -  -  -  	sub (hl)
  501 D1:BCED D2 B2 BE D1 	jp nc,check_col_skip_4
  502 D1:BCF1 -  -  -  -  	;call write_a_to_ram
  503 D1:BCF1 23 -  -  -  	inc hl ;to height 
  504 D1:BCF2 -  -  -  -  	;a holds px from player top to collider bottom 
  505 D1:BCF2 0E 13 -  -  	ld c,player_collider_height
  506 D1:BCF4 -  -  -  -  	;call write_a_to_ram
  507 D1:BCF4 91 -  -  -  	sub a,c
  508 D1:BCF5 DA 02 BD D1 	jp c, check_col_y_collision
  509 D1:BCF9 -  -  -  -  	
  510 D1:BCF9 -  -  -  -  	
  511 D1:BCF9 -  -  -  -  	;call write_a_to_ram
  512 D1:BCF9 96 -  -  -  	sub (hl); cokmpare to collider height -1 
  513 D1:BCFA DA 02 BD D1 	jp c,check_col_y_collision
  514 D1:BCFE -  -  -  -  	;Otherwise no collision 	
  515 D1:BCFE C3 B3 BE D1 	jp check_col_skip_3
  516 D1:BD02 -  -  -  -  	
  517 D1:BD02 -  -  -  -  check_col_y_collision:
  518 D1:BD02 -  -  -  -  	;call write_a_to_ram
  519 D1:BD02 -  -  -  -  
  520 D1:BD02 -  -  -  -  	;Player is within Y range of collider 
  521 D1:BD02 -  -  -  -  	;ld a,$AA 
  522 D1:BD02 -  -  -  -  	;call write_a_to_ram;TESTIng
  523 D1:BD02 -  -  -  -  	
  524 D1:BD02 23 -  -  -  	inc hl ;to x max 
  525 D1:BD03 3A F6 BE D1 	ld a,(player_x_pos+1);Fullpixels
  526 D1:BD07 CB 3F -  -  	srl a ;div by 2 
  527 D1:BD09 47 -  -  -  	ld b,a 
  528 D1:BD0A 3A F7 BE D1 	ld a,(player_x_pos+2);MSB fullpixel 
  529 D1:BD0E 0F -  -  -  	rrca ;Move bit 0 to bit 7
  530 D1:BD0F B0 -  -  -  	or b 
  531 D1:BD10 -  -  -  -  	;A holds x pos / 2 (paired pixels) 
  532 D1:BD10 -  -  -  -  	
  533 D1:BD10 BE -  -  -  	cp (hl) ;compare to x max 
  534 D1:BD11 -  -  -  -  	;zero or carry = collison 
  535 D1:BD11 CA 1D BD D1 	jp z, check_col_x_collision
  536 D1:BD15 DA 1D BD D1 	jp c, check_col_x_collision
  537 D1:BD19 -  -  -  -  	
  538 D1:BD19 C3 B4 BE D1 	jp check_col_skip_2
  539 D1:BD1D -  -  -  -  	
  540 D1:BD1D -  -  -  -  check_col_x_collision:
  541 D1:BD1D -  -  -  -  
  542 D1:BD1D -  -  -  -  	;ld a,$BB
  543 D1:BD1D -  -  -  -  	;call write_a_to_ram
  544 D1:BD1D -  -  -  -  	;Need to find x pos of right of player, then div by 2 
  545 D1:BD1D 3A F6 BE D1 	ld a,(player_x_pos+1);Fullpixels
  546 D1:BD21 C6 18 -  -  	add a, player_collider_width ;Will set carry flag if right side of player > 255 and left of player < 255 
  547 D1:BD23 1F -  -  -  	rra ;div by 2 and move carry flag to bit 7. 
  548 D1:BD24 47 -  -  -  	ld b,a 
  549 D1:BD25 3A F7 BE D1 	ld a,(player_x_pos +2 ); MSB pixel 
  550 D1:BD29 0F -  -  -  	rrca ;move bit 0 to bit 7
  551 D1:BD2A B0 -  -  -  	or b ;a holds right pos of player / 2 
  552 D1:BD2B 23 -  -  -  	inc hl ;to x min 
  553 D1:BD2C BE -  -  -  	cp (hl) 
  554 D1:BD2D -  -  -  -   
  555 D1:BD2D DA B5 BE D1 	jp c, check_col_skip_1 
  556 D1:BD31 -  -  -  -  
  557 D1:BD31 -  -  -  -  
  558 D1:BD31 -  -  -  -  
  559 D1:BD31 -  -  -  -  
  560 D1:BD31 -  -  -  -  
  561 D1:BD31 -  -  -  -  
  562 D1:BD31 -  -  -  -  	
  563 D1:BD31 -  -  -  -  collision_found: ;A collision has been detected
  564 D1:BD31 -  -  -  -  	
  565 D1:BD31 -  -  -  -  	;TESTing 
  566 D1:BD31 23 -  -  -  	inc hl ;to flags 
  567 D1:BD32 7E -  -  -  	ld a,(hl)
  568 D1:BD33 -  -  -  -  	;call write_a_to_ram
  569 D1:BD33 -  -  -  -  	
  570 D1:BD33 37 -  -  -  	scf 
  571 D1:BD34 -  -  -  -  collision_check_vertical .equ $
  572 D1:BD34 DA 63 BD D1 	jp c, collision_check_vert 
  573 D1:BD38 -  -  -  -  	
  574 D1:BD38 -  -  -  -  
  575 D1:BD38 3A 07 BF D1 	ld a,(player_flags)
  576 D1:BD3C CB 5F -  -  	bit 3,a 
  577 D1:BD3E CA 4C BD D1 	jp z,colis_horiz_not_fall
  578 D1:BD42 -  -  -  -  	;player is falling 
  579 D1:BD42 CB EF -  -  	set 5,a ;set semisolid flag 
  580 D1:BD44 32 07 BF D1 	ld (player_flags),a 
  581 D1:BD48 C3 B6 BE D1 	jp check_col_skip_0
  582 D1:BD4C -  -  -  -  	
  583 D1:BD4C -  -  -  -  colis_horiz_not_fall:
  584 D1:BD4C -  -  -  -  	;Player is moving horizontal 
  585 D1:BD4C 7E -  -  -  	ld a,(hl) ;flags 
  586 D1:BD4D CB 7F -  -  	bit 7,a ;semisolid 
  587 D1:BD4F C2 A4 BD D1 	jp nz,vert_col_up_semisolid ;skips semisolid 
  588 D1:BD53 -  -  -  -  
  589 D1:BD53 CB 77 -  -  	bit 6,a 
  590 D1:BD55 C2 4C BE D1 	jp nz, collision_spikes
  591 D1:BD59 -  -  -  -  	
  592 D1:BD59 -  -  -  -  	;TODO breakaway platforms 
  593 D1:BD59 -  -  -  -  	
  594 D1:BD59 -  -  -  -  	;player has moved horiz and hit a solid wall 
  595 D1:BD59 -  -  -  -  	;Reverse x velocity 
  596 D1:BD59 E5 -  -  -  	push hl 
  597 D1:BD5A CD C0 BE D1 	call reverse_x_vel
  598 D1:BD5E E1 -  -  -  	pop hl 
  599 D1:BD5F -  -  -  -  	
  600 D1:BD5F C3 B6 BE D1 	jp check_col_skip_0
  601 D1:BD63 -  -  -  -  
  602 D1:BD63 -  -  -  -  collision_check_vert:
  603 D1:BD63 -  -  -  -  	;Player is moving in vertical direction 
  604 D1:BD63 -  -  -  -  
  605 D1:BD63 3A 00 BF D1 	ld a,(player_y_vel + 2) ;MSB of y vel 
  606 D1:BD67 CB 7F -  -  	bit 7,a ;check if moving up or down 
  607 D1:BD69 C2 B2 BD D1 	jp nz, vert_col_down
  608 D1:BD6D -  -  -  -  	
  609 D1:BD6D -  -  -  -  	
  610 D1:BD6D 3A 07 BF D1 	ld a,(player_flags)
  611 D1:BD71 CB 5F -  -  	bit 3,a 
  612 D1:BD73 CA 81 BD D1 	jp z,colis_vert_up_not_fall
  613 D1:BD77 CB EF -  -  	set 5,a ;set semisolid flag. All colliders act semisolid while in fall
  614 D1:BD79 32 07 BF D1 	ld (player_flags),a 
  615 D1:BD7D C3 B6 BE D1 	jp check_col_skip_0
  616 D1:BD81 -  -  -  -  	
  617 D1:BD81 -  -  -  -  	
  618 D1:BD81 -  -  -  -  colis_vert_up_not_fall:
  619 D1:BD81 -  -  -  -  	;player is moving up 
  620 D1:BD81 7E -  -  -  	ld a,(hl) ;flags 
  621 D1:BD82 CB 7F -  -  	bit 7,a ;semisolid 
  622 D1:BD84 C2 A4 BD D1 	jp nz,vert_col_up_semisolid ;semisolid and moving up
  623 D1:BD88 -  -  -  -  
  624 D1:BD88 CB 77 -  -  	bit 6,a 
  625 D1:BD8A C2 4C BE D1 	jp nz, collision_spikes
  626 D1:BD8E -  -  -  -  
  627 D1:BD8E -  -  -  -  	;TODO breakaway platforms 
  628 D1:BD8E -  -  -  -  	
  629 D1:BD8E -  -  -  -  	;Plyaer has moved up and hit non spike object 
  630 D1:BD8E -  -  -  -  	;Set velocity to 0 
  631 D1:BD8E E5 -  -  -  	push hl 
  632 D1:BD8F 21 00 00 00 	ld hl,0
  633 D1:BD93 22 FE BE D1 	ld (player_y_vel),hl 
  634 D1:BD97 2A 04 BF D1 	ld hl, (player_y_pos_prev) ;revert to previous y pos 
  635 D1:BD9B 22 F8 BE D1 	ld (player_y_pos),hl 
  636 D1:BD9F E1 -  -  -  	pop hl 
  637 D1:BDA0 -  -  -  -  	
  638 D1:BDA0 C3 B6 BE D1 	jp check_col_skip_0
  639 D1:BDA4 -  -  -  -  	
  640 D1:BDA4 -  -  -  -  vert_col_up_semisolid:
  641 D1:BDA4 3A 07 BF D1 	ld a,(player_flags)
  642 D1:BDA8 CB EF -  -  	set 5,a ;set semisolid flag 
  643 D1:BDAA 32 07 BF D1 	ld (player_flags),a 
  644 D1:BDAE C3 B6 BE D1 	jp check_col_skip_0
  645 D1:BDB2 -  -  -  -  	
  646 D1:BDB2 -  -  -  -  	
  647 D1:BDB2 -  -  -  -  	
  648 D1:BDB2 -  -  -  -  vert_col_down:
  649 D1:BDB2 -  -  -  -  
  650 D1:BDB2 -  -  -  -  
  651 D1:BDB2 3A 07 BF D1 	ld a,(player_flags)
  652 D1:BDB6 CB 5F -  -  	bit 3,a 
  653 D1:BDB8 CA 0F BE D1 	jp z,colis_vert_down_not_fall
  654 D1:BDBC CB EF -  -  	set 5,a ;set semisolid flag. All colliders act semisolid while in fall
  655 D1:BDBE 32 07 BF D1 	ld (player_flags),a 
  656 D1:BDC2 -  -  -  -  	
  657 D1:BDC2 E5 -  -  -  	push hl 
  658 D1:BDC3 -  -  -  -  	;check if we are below spike hit height 
  659 D1:BDC3 2A 08 BF D1 	ld hl,(spike_hit_height)
  660 D1:BDC7 EB -  -  -  	ex de,hl 
  661 D1:BDC8 2A F8 BE D1 	ld hl,(player_y_pos) 
  662 D1:BDCC ED 52 -  -  	sbc hl,de 
  663 D1:BDCE DA D7 BD D1 	jp c,check_end_fall
  664 D1:BDD2 -  -  -  -  	;Player is above threshold 
  665 D1:BDD2 E1 -  -  -  	pop hl 
  666 D1:BDD3 C3 B6 BE D1 	jp check_col_skip_0 ;continue 
  667 D1:BDD7 -  -  -  -  	
  668 D1:BDD7 -  -  -  -  
  669 D1:BDD7 -  -  -  -  check_end_fall:
  670 D1:BDD7 -  -  -  -  	;Player has hit ground below fall threshold 
  671 D1:BDD7 32 07 BF D1 	ld (player_flags),a 
  672 D1:BDDB CB 67 -  -  	bit 4,a ;check we were not in semisolid last update 
  673 D1:BDDD CA E6 BD D1 	jp z, check_end_fall_2; player not currently in collider 
  674 D1:BDE1 E1 -  -  -  	pop hl 
  675 D1:BDE2 C3 B6 BE D1 	jp check_col_skip_0 ;continue 
  676 D1:BDE6 -  -  -  -  check_end_fall_2:
  677 D1:BDE6 -  -  -  -  	;player can land 
  678 D1:BDE6 -  -  -  -  	;check for unlucky bounce 
  679 D1:BDE6 CB 9F -  -  	res 3,a 
  680 D1:BDE8 32 07 BF D1 	ld (player_flags),a ;reset fall flag 
  681 D1:BDEC E1 -  -  -  	pop hl 
  682 D1:BDED 3A 0B BF D1 	ld a, (fall_num_bounces)
  683 D1:BDF1 47 -  -  -  	ld b,a 
  684 D1:BDF2 CD E1 BE D1 	call random_val
  685 D1:BDF6 0E 01 -  -  	ld c,%00000001
  686 D1:BDF8 -  -  -  -  unlucky_bounce_loop:
  687 D1:BDF8 A1 -  -  -  	and a,c 
  688 D1:BDF9 CA 0F BE D1 	jp z,colis_vert_down_not_fall
  689 D1:BDFD CB 01 -  -  	rlc c 
  690 D1:BDFF DA 0F BE D1 	jp c,colis_vert_down_not_fall
  691 D1:BE03 10 F3 -  -  	djnz unlucky_bounce_loop
  692 D1:BE05 -  -  -  -  	
  693 D1:BE05 -  -  -  -  ;Player has hit unlucky bounce 
  694 D1:BE05 E5 -  -  -  	push hl 
  695 D1:BE06 CD 5C BE D1 	call spike_hit_bounce
  696 D1:BE0A E1 -  -  -  	pop hl
  697 D1:BE0B C3 B6 BE D1 	jp check_col_skip_0 ;continue 
  698 D1:BE0F -  -  -  -  	
  699 D1:BE0F -  -  -  -  colis_vert_down_not_fall:
  700 D1:BE0F -  -  -  -  	;player is moving down 
  701 D1:BE0F 7E -  -  -  	ld a,(hl) ;flags 
  702 D1:BE10 CB 7F -  -  	bit 7,a ;semisolid 
  703 D1:BE12 CA 26 BE D1 	jp z,vert_col_down_solid 
  704 D1:BE16 -  -  -  -  	
  705 D1:BE16 -  -  -  -  	;semisolid and moving down
  706 D1:BE16 3A 07 BF D1 	ld a,(player_flags)
  707 D1:BE1A CB EF -  -  	set 5,a ;set semisolid flag 
  708 D1:BE1C 32 07 BF D1 	ld (player_flags),a 
  709 D1:BE20 CB 67 -  -  	bit 4,a ;check we were not in semisolid last update 
  710 D1:BE22 C2 B6 BE D1 	jp nz, check_col_skip_0 ;we were already within semisolid collider 
  711 D1:BE26 -  -  -  -  	;otherwise, hit the collider 
  712 D1:BE26 -  -  -  -  	
  713 D1:BE26 -  -  -  -  
  714 D1:BE26 -  -  -  -  vert_col_down_solid:
  715 D1:BE26 CB 77 -  -  	bit 6,a 
  716 D1:BE28 C2 4C BE D1 	jp nz, collision_spikes
  717 D1:BE2C -  -  -  -  
  718 D1:BE2C -  -  -  -  	;TODO breakaway platforms 
  719 D1:BE2C -  -  -  -  	
  720 D1:BE2C -  -  -  -  	;Plyaer has moved down and hit non spike object 
  721 D1:BE2C -  -  -  -  	;Set velocity to 0 
  722 D1:BE2C E5 -  -  -  	push hl 
  723 D1:BE2D 21 00 00 00 	ld hl,0
  724 D1:BE31 22 FE BE D1 	ld (player_y_vel),hl 
  725 D1:BE35 2A 04 BF D1 	ld hl, (player_y_pos_prev) ;revert to previous y pos 
  726 D1:BE39 22 F8 BE D1 	ld (player_y_pos),hl 
  727 D1:BE3D E1 -  -  -  	pop hl 
  728 D1:BE3E -  -  -  -  	
  729 D1:BE3E 3A 07 BF D1 	ld a,(player_flags)
  730 D1:BE42 CB F7 -  -  	set 6,a  ;set ground flag 
  731 D1:BE44 32 07 BF D1 	ld (player_flags),a
  732 D1:BE48 -  -  -  -  	
  733 D1:BE48 C3 B6 BE D1 	jp check_col_skip_0 ;continue 
  734 D1:BE4C -  -  -  -  
  735 D1:BE4C -  -  -  -  
  736 D1:BE4C -  -  -  -  
  737 D1:BE4C -  -  -  -  
  738 D1:BE4C -  -  -  -  
  739 D1:BE4C -  -  -  -  collision_spikes:
  740 D1:BE4C E5 -  -  -  	push hl
  741 D1:BE4D -  -  -  -  	;player has collided with spikes 
  742 D1:BE4D CD 5C BE D1 	call spike_hit_bounce
  743 D1:BE51 3E 00 -  -  	ld a,0
  744 D1:BE53 32 0B BF D1 	ld (fall_num_bounces),a 
  745 D1:BE57 E1 -  -  -  	pop hl 
  746 D1:BE58 C3 B6 BE D1 	jp check_col_skip_0
  747 D1:BE5C -  -  -  -  
  748 D1:BE5C -  -  -  -  
  749 D1:BE5C -  -  -  -  spike_hit_bounce:
  750 D1:BE5C 21 80 00 00 	ld hl,$000080
  751 D1:BE60 22 FE BE D1 	ld (player_y_vel),hl 
  752 D1:BE64 CD E1 BE D1 	call random_val
  753 D1:BE68 CB 47 -  -  	bit 0, a 
  754 D1:BE6A C2 7F BE D1 	jp nz, spike_negative_bounce
  755 D1:BE6E 21 00 00 00 	ld hl,0
  756 D1:BE72 E6 60 -  -  	and %01100000 ;pull 2 bits of a for velocity
  757 D1:BE74 F6 10 -  -  	or  %00010000
  758 D1:BE76 6F -  -  -  	ld l,a 
  759 D1:BE77 22 FB BE D1 	ld (player_x_vel),hl
  760 D1:BE7B C3 8C BE D1 	jp spike_pos_bounce
  761 D1:BE7F -  -  -  -  spike_negative_bounce:
  762 D1:BE7F 21 FF FF FF 	ld hl,$ffffff
  763 D1:BE83 E6 60 -  -  	and %01100000 ;pull 2 bits of a for velocity
  764 D1:BE85 F6 8F -  -  	or  %10001111
  765 D1:BE87 6F -  -  -  	ld l,a 
  766 D1:BE88 22 FB BE D1 	ld (player_x_vel),hl
  767 D1:BE8C -  -  -  -  spike_pos_bounce:
  768 D1:BE8C 3A 07 BF D1 	ld a,(player_flags)
  769 D1:BE90 CB DF -  -  	set 3,a  ;set fall flag 
  770 D1:BE92 32 07 BF D1 	ld (player_flags),a 
  771 D1:BE96 -  -  -  -  	;Set spike hit height 
  772 D1:BE96 2A F8 BE D1 	ld hl, (player_y_pos)
  773 D1:BE9A 11 00 FF 00 	ld de, $00ff00 ;fall minimum of 256px 
  774 D1:BE9E ED 52 -  -  	sbc hl,de 
  775 D1:BEA0 D2 A8 BE D1 	jp nc, spike_bounce_min_height_threshold
  776 D1:BEA4 21 00 00 00 	ld hl,0
  777 D1:BEA8 -  -  -  -  spike_bounce_min_height_threshold:
  778 D1:BEA8 11 00 23 00 	ld de, $002300  ;minimum spike height threshold 
  779 D1:BEAC 19 -  -  -  	add hl,de 
  780 D1:BEAD 22 08 BF D1 	ld (spike_hit_height),hl 
  781 D1:BEB1 -  -  -  -  	
  782 D1:BEB1 C9 -  -  -  	ret 
  783 D1:BEB2 -  -  -  -  
  784 D1:BEB2 -  -  -  -  
  785 D1:BEB2 -  -  -  -  check_col_skip_4:
  786 D1:BEB2 23 -  -  -  	inc hl ;to height
  787 D1:BEB3 -  -  -  -  check_col_skip_3:
  788 D1:BEB3 23 -  -  -  	inc hl ;to xmax
  789 D1:BEB4 -  -  -  -  check_col_skip_2:	
  790 D1:BEB4 23 -  -  -  	inc hl ;to xmin
  791 D1:BEB5 -  -  -  -  check_col_skip_1:	
  792 D1:BEB5 23 -  -  -  	inc hl ;to flags
  793 D1:BEB6 -  -  -  -  check_col_skip_0:
  794 D1:BEB6 23 -  -  -  	inc hl ;to next element
  795 D1:BEB7 -  -  -  -  	
  796 D1:BEB7 37 -  -  -  	scf 
  797 D1:BEB8 -  -  -  -  check_col_lower_jump .equ $
  798 D1:BEB8 DA B8 BC D1 	jp c, check_collisions_same_loop
  799 D1:BEBC C3 E4 BC D1 	jp check_collisions_lower_loop
  800 D1:BEC0 -  -  -  -  
  801 D1:BEC0 -  -  -  -  
  802 D1:BEC0 -  -  -  -  
  803 D1:BEC0 -  -  -  -  reverse_x_vel:;bounce player off wall
  804 D1:BEC0 2A FB BE D1 	ld hl,(player_x_vel)
  805 D1:BEC4 EB -  -  -  	ex de,hl 
  806 D1:BEC5 21 00 00 00 	ld hl,0
  807 D1:BEC9 ED 52 -  -  	sbc hl, de  
  808 D1:BECB -  -  -  -  	
  809 D1:BECB 7C -  -  -  	ld a,h
  810 D1:BECC E6 80 -  -  	and %10000000
  811 D1:BECE CB 3C -  -  	srl h ;div by 2 
  812 D1:BED0 CB 1D -  -  	rr l 
  813 D1:BED2 B4 -  -  -  	or h ;keeps bit 7 the same 
  814 D1:BED3 67 -  -  -  	ld h,a 
  815 D1:BED4 -  -  -  -  
  816 D1:BED4 22 FB BE D1 	ld (player_x_vel),hl 
  817 D1:BED8 2A 01 BF D1 	ld hl, (player_x_pos_prev) ;revert to previous x pos 
  818 D1:BEDC 22 F5 BE D1 	ld (player_x_pos),hl 
  819 D1:BEE0 C9 -  -  -  	ret 
  820 D1:BEE1 -  -  -  -  
  821 D1:BEE1 -  -  -  -  
  822 D1:BEE1 -  -  -  -  
  823 D1:BEE1 -  -  -  -  random_val:
  824 D1:BEE1 3A F8 BE D1 	ld a, (player_y_pos)
  825 D1:BEE5 4F -  -  -  	ld c,a 
  826 D1:BEE6 3A 00 00 F2 	ld a,($F20000) ;fast timer 
  827 D1:BEEA A9 -  -  -  	xor c
  828 D1:BEEB C9 -  -  -  	ret 
  829 D1:BEEC -  -  -  -  
  830 D1:BEEC -  -  -  -  
  831 D1:BEEC -  -  -  -  
  832 D1:BEEC -  -  -  -  
  833 D1:BEEC -  -  -  -  player_sprite_table:
  834 D1:BEEC 65 14 D4 -  	.dl Frog_0_Slow
  835 D1:BEEF -  -  -  -  
  836 D1:BEEF -  -  -  -  player_sprite_table_offset:
  837 D1:BEEF 89 1D D4 -  	.dl Frog_0_Slow_O
  838 D1:BEF2 -  -  -  -  
  839 D1:BEF2 -  -  -  -  
  840 D1:BEF2 -  -  -  -  
  841 D1:BEF2 -  -  -  -  
  842 D1:BEF2 -  -  -  -  
  843 D1:BEF2 -  -  -  -  
  844 D1:BEF2 -  -  -  -  jump_strength_up:
  845 D1:BEF2 00 -  -  -  	.db 0 
  846 D1:BEF3 -  -  -  -  jump_strength_right:
  847 D1:BEF3 00 -  -  -  	.db 0 
  848 D1:BEF4 -  -  -  -  jump_charge_timer:
  849 D1:BEF4 00 -  -  -  	.db 0 
  850 D1:BEF5 -  -  -  -  
  851 D1:BEF5 -  -  -  -  	
  852 D1:BEF5 -  -  -  -  timer_max_val .equ 30
  853 D1:BEF5 -  -  -  -  
  854 D1:BEF5 -  -  -  -  player_collider_height .equ 19
  855 D1:BEF5 -  -  -  -  player_collider_width .equ 24 ;width -1 
  856 D1:BEF5 -  -  -  -  
  857 D1:BEF5 -  -  -  -  
  858 D1:BEF5 -  -  -  -  player_x_pos:
  859 D1:BEF5 00 00 00 -  	.dl 0 ; (MSB fullpixel, Fullpixels, subpixels)
  860 D1:BEF8 -  -  -  -  	
  861 D1:BEF8 -  -  -  -  player_y_pos:
  862 D1:BEF8 00 00 00 -  	.dl 0 ; (Frame #, Fullpixels, subpixels)
  863 D1:BEFB -  -  -  -  
  864 D1:BEFB -  -  -  -  player_x_vel:
  865 D1:BEFB 00 00 00 -  	.dl 0 ; (Unused, Fullpixels, subpixels)
  866 D1:BEFE -  -  -  -  	
  867 D1:BEFE -  -  -  -  player_y_vel:
  868 D1:BEFE 00 00 00 -  	.dl 0 ; (Unused, Fullpixels, subpixels)
  869 D1:BF01 -  -  -  -  
  870 D1:BF01 -  -  -  -  
  871 D1:BF01 -  -  -  -  player_x_pos_prev: ;x position before update, revert to this if collision 
  872 D1:BF01 00 00 00 -  	.dl 0 ; (MSB fullpixel, Fullpixels, subpixels)
  873 D1:BF04 -  -  -  -  	
  874 D1:BF04 -  -  -  -  player_y_pos_prev: ;y position before update, revert to this if collision :
  875 D1:BF04 00 00 00 -  	.dl 0 ; (Frame #, Fullpixels, subpixels)
  876 D1:BF07 -  -  -  -  
  877 D1:BF07 -  -  -  -  
  878 D1:BF07 -  -  -  -  
  879 D1:BF07 -  -  -  -  player_flags:
  880 D1:BF07 00 -  -  -  	.db %00000000 ; (7 = Any jump button held, 6 = on ground,5 = within semisolid, 4 = in semisolid last update, 3= isfalling)
  881 D1:BF08 -  -  -  -  	
  882 D1:BF08 -  -  -  -  spike_hit_height:
  883 D1:BF08 00 00 00 -  	.dl 0 ;Height where player can land after hitting spike
  884 D1:BF0B -  -  -  -  fall_num_bounces:
  885 D1:BF0B 00 -  -  -  	.db 0 ;Number of times player has had unlucky bounce
  886 D1:BF0C -  -  -  -  	
  887 D1:BF0C -  -  -  -  	
  888 D1:BF0C -  -  -  -  	
  889 D1:BF0C -  -  -  -  	
  890 D1:BF0C -  -  -  -  	
  891 D1:BF0C -  -  -  -  	
  892 D1:BF0C -  -  -  -  	
  893 D1:BF0C -  -  -  -  	
  894 D1:BF0C -  -  -  -  	
  895 D1:BF0C -  -  -  -  	
  896 D1:BF0C -  -  -  -  	
  897 D1:BF0C -  -  -  -  	
  898 D1:BF0C -  -  -  -  player_move_debug:
  899 D1:BF0C -  -  -  -  ;DEBUG MODE ============================================================================= 
  900 D1:BF0C 21 00 00 F5 	ld	hl,DI_Mode		; register for keypad mode
  901 D1:BF10 36 02 -  -  	ld	(hl),2			; set single scan mode
  902 D1:BF12 AF -  -  -  	xor	a,a
  903 D1:BF13 -  -  -  -  dbg_scan_wait:
  904 D1:BF13 BE -  -  -  	cp	a,(hl)			; wait for keypad idle mode
  905 D1:BF14 20 FD -  -  	jr	nz,dbg_scan_wait
  906 D1:BF16 -  -  -  -  	
  907 D1:BF16 3A 1A 00 F5 	ld a,(kbdG5)
  908 D1:BF1A CB 57 -  -  	bit kbit6,a 
  909 D1:BF1C C2 52 BF D1 	jp nz, player_move_debug_right
  910 D1:BF20 -  -  -  -  	
  911 D1:BF20 3A 16 00 F5 	ld a,(kbdG3)
  912 D1:BF24 CB 57 -  -  	bit kbit4,a 
  913 D1:BF26 C2 3F BF D1 	jp nz, player_move_debug_left
  914 D1:BF2A -  -  -  -  	
  915 D1:BF2A 3A 18 00 F5 	ld a,(kbdG4)
  916 D1:BF2E CB 4F -  -  	bit kbit2,a 
  917 D1:BF30 C2 76 BF D1 	jp nz, player_move_debug_down 
  918 D1:BF34 -  -  -  -  	
  919 D1:BF34 3A 18 00 F5 	ld a,(kbdG4)
  920 D1:BF38 CB 5F -  -  	bit kbit8,a 
  921 D1:BF3A C2 64 BF D1 	jp nz, player_move_debug_up
  922 D1:BF3E -  -  -  -  	
  923 D1:BF3E C9 -  -  -  	ret 
  924 D1:BF3F -  -  -  -  	
  925 D1:BF3F -  -  -  -  	
  926 D1:BF3F -  -  -  -  
  927 D1:BF3F -  -  -  -  
  928 D1:BF3F -  -  -  -  player_move_debug_left:
  929 D1:BF3F 2A F5 BE D1 	ld hl,(player_x_pos)
  930 D1:BF43 01 80 00 00 	ld bc, 128
  931 D1:BF47 ED 42 -  -  	sbc hl,bc 
  932 D1:BF49 22 F5 BE D1 	ld (player_x_pos),hl 
  933 D1:BF4D CD 9B BC D1 	call check_collisions
  934 D1:BF51 C9 -  -  -  	ret 
  935 D1:BF52 -  -  -  -  
  936 D1:BF52 -  -  -  -  player_move_debug_right:
  937 D1:BF52 2A F5 BE D1 	ld hl,(player_x_pos)
  938 D1:BF56 01 80 00 00 	ld bc, 128
  939 D1:BF5A 09 -  -  -  	add hl,bc 
  940 D1:BF5B 22 F5 BE D1 	ld (player_x_pos),hl 
  941 D1:BF5F CD 9B BC D1 	call check_collisions
  942 D1:BF63 C9 -  -  -  	ret 
  943 D1:BF64 -  -  -  -  
  944 D1:BF64 -  -  -  -  player_move_debug_up:
  945 D1:BF64 2A F8 BE D1 	ld hl,(player_y_pos)
  946 D1:BF68 01 80 00 00 	ld bc, 128
  947 D1:BF6C 09 -  -  -  	add hl,bc 
  948 D1:BF6D 22 F8 BE D1 	ld (player_y_pos),hl 
  949 D1:BF71 CD 9B BC D1 	call check_collisions
  950 D1:BF75 C9 -  -  -  	ret 
  951 D1:BF76 -  -  -  -  
  952 D1:BF76 -  -  -  -  player_move_debug_down:
  953 D1:BF76 2A F8 BE D1 	ld hl,(player_y_pos)
  954 D1:BF7A 01 80 00 00 	ld bc, 128
  955 D1:BF7E ED 42 -  -  	sbc hl,bc 
  956 D1:BF80 22 F8 BE D1 	ld (player_y_pos),hl 
  957 D1:BF84 CD 9B BC D1 	call check_collisions
  958 D1:BF88 C9 -  -  -  	ret
Listing for file "ascent.asm"
  559 D1:BF89 -  -  -  -  #include "sineFunc.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\sineFunc.txt"
    1 D1:BF89 -  -  -  -  
    2 D1:BF89 -  -  -  -  update_sine_vals:
    3 D1:BF89 01 00 00 00 	ld bc,0
    4 D1:BF8D -  -  -  -  	
    5 D1:BF8D 3A ED AB D1 	ld a, (frameCount+1);middle byte 
    6 D1:BF91 CB 3F -  -  	srl a ;put bit 0 to carry flag 
    7 D1:BF93 3A EC AB D1 	ld a, (frameCount)
    8 D1:BF97 1F -  -  -  	rra ;a holds frame counter/2, ~16 second timer
    9 D1:BF98 21 06 C0 D1 	ld hl,sine_modes_table
   10 D1:BF9C 08 -  -  -  	ex af,af' ;' ;in
   11 D1:BF9D 3E 14 -  -  	ld a,20
   12 D1:BF9F -  -  -  -  	
   13 D1:BF9F -  -  -  -  update_sine_loop:
   14 D1:BF9F 08 -  -  -  	ex af,af' ;' ;out
   15 D1:BFA0 F5 -  -  -  	push af ;frame count 
   16 D1:BFA1 ED 17 -  -  	ld de, (hl) ;de holds correct sine value table 
   17 D1:BFA3 23 -  -  -  	inc hl 
   18 D1:BFA4 23 -  -  -  	inc hl 
   19 D1:BFA5 23 -  -  -  	inc hl 
   20 D1:BFA6 E5 -  -  -  	push hl 
   21 D1:BFA7 CD E6 BF D1 	call sine_apply_amplitudes
   22 D1:BFAB E1 -  -  -  	pop hl
   23 D1:BFAC F1 -  -  -  	pop af 
   24 D1:BFAD -  -  -  -  	;a holds frame count 
   25 D1:BFAD ED 17 -  -  	ld de, (hl) ;de holds lin value table
   26 D1:BFAF 23 -  -  -  	inc hl 
   27 D1:BFB0 23 -  -  -  	inc hl 
   28 D1:BFB1 23 -  -  -  	inc hl 
   29 D1:BFB2 E5 -  -  -  	push hl 
   30 D1:BFB3 F5 -  -  -  	push af
   31 D1:BFB4 -  -  -  -  	;A holds frame count for linear curve
   32 D1:BFB4 CD ED BF D1 	call lin_apply_amplitudes
   33 D1:BFB8 F1 -  -  -  	pop af 
   34 D1:BFB9 E1 -  -  -  	pop hl
   35 D1:BFBA F5 -  -  -  	push af
   36 D1:BFBB ED 17 -  -  	ld de, (hl) ;de holds linrep value table
   37 D1:BFBD 23 -  -  -  	inc hl 
   38 D1:BFBE 23 -  -  -  	inc hl 
   39 D1:BFBF 23 -  -  -  	inc hl 
   40 D1:BFC0 CB 7F -  -  	bit 7,a 
   41 D1:BFC2 CA C8 BF D1 	jp z,update_sine_skip_rep
   42 D1:BFC6 EE FF -  -  	xor %11111111 ;if a >127, negate it to reverse the time 
   43 D1:BFC8 -  -  -  -  update_sine_skip_rep:
   44 D1:BFC8 E5 -  -  -  	push hl
   45 D1:BFC9 EB -  -  -  	ex de,hl 	
   46 D1:BFCA CD F0 BF D1 	call linrep_apply_amplitudes
   47 D1:BFCE E1 -  -  -  	pop hl
   48 D1:BFCF F1 -  -  -  	pop af 
   49 D1:BFD0 0E 40 -  -  	ld c,64 ;add quarter phase offset 
   50 D1:BFD2 81 -  -  -  	add a,c 
   51 D1:BFD3 08 -  -  -  	ex af,af' ;' ;in
   52 D1:BFD4 3D -  -  -  	dec a 
   53 D1:BFD5 C8 -  -  -  	ret z 
   54 D1:BFD6 4F -  -  -  	ld c,a
   55 D1:BFD7 E6 03 -  -  	and %00000011 ;check last 2 bits
   56 D1:BFD9 79 -  -  -  	ld a,c
   57 D1:BFDA C2 9F BF D1 	jp nz,update_sine_loop
   58 D1:BFDE -  -  -  -  	;otherwise, a is multiple of 4, multiply clock speed 
   59 D1:BFDE 08 -  -  -  	ex af, af' ;' ;out
   60 D1:BFDF CB 27 -  -  	sla a ;mult by 2 
   61 D1:BFE1 08 -  -  -  	ex af, af' ;' ;in
   62 D1:BFE2 C3 9F BF D1 	jp update_sine_loop
   63 D1:BFE6 -  -  -  -  	
   64 D1:BFE6 -  -  -  -  	
   65 D1:BFE6 -  -  -  -  	
   66 D1:BFE6 -  -  -  -  	
   67 D1:BFE6 -  -  -  -  	
   68 D1:BFE6 -  -  -  -  	
   69 D1:BFE6 -  -  -  -  sine_apply_amplitudes: ;a holds scaled frame count,de holds ptr to correct sine value table
   70 D1:BFE6 21 E6 C1 D1 	ld hl, sine
   71 D1:BFEA 4F -  -  -  	ld c,a 
   72 D1:BFEB 09 -  -  -  	add hl,bc 
   73 D1:BFEC 7E -  -  -  	ld a,(hl); a holds sine value 
   74 D1:BFED -  -  -  -  lin_apply_amplitudes:
   75 D1:BFED EB -  -  -  	ex de,hl 
   76 D1:BFEE CB 3F -  -  	srl a ;div 2 
   77 D1:BFF0 -  -  -  -  linrep_apply_amplitudes:
   78 D1:BFF0 CB 3F -  -  	srl a 
   79 D1:BFF2 CB 3F -  -  	srl a ;amplitude of 31 
   80 D1:BFF4 77 -  -  -  	ld (hl),a 
   81 D1:BFF5 23 -  -  -  	inc hl 
   82 D1:BFF6 CB 3F -  -  	srl a ;amplitude of 15 
   83 D1:BFF8 77 -  -  -  	ld (hl),a 
   84 D1:BFF9 23 -  -  -  	inc hl
   85 D1:BFFA CB 3F -  -  	srl a ;amplitude of 7 
   86 D1:BFFC 77 -  -  -  	ld (hl),a 
   87 D1:BFFD 23 -  -  -  	inc hl
   88 D1:BFFE CB 3F -  -  	srl a ;amplitude of 3 
   89 D1:C000 77 -  -  -  	ld (hl),a 
   90 D1:C001 23 -  -  -  	inc hl
   91 D1:C002 CB 3F -  -  	srl a ;amplitude of 1 
   92 D1:C004 77 -  -  -  	ld (hl),a
   93 D1:C005 C9 -  -  -  	ret 
   94 D1:C006 -  -  -  -  
   95 D1:C006 -  -  -  -  
   96 D1:C006 -  -  -  -  
   97 D1:C006 -  -  -  -  sine_modes_table:
   98 D1:C006 BA C0 D1 -  	.dl sine_05_1
   99 D1:C009 1E C1 D1 -  	.dl lin_05_1
  100 D1:C00C 82 C1 D1 -  	.dl linrep_05_1
  101 D1:C00F BF C0 D1 -  	.dl sine_05_2
  102 D1:C012 23 C1 D1 -  	.dl lin_05_2
  103 D1:C015 87 C1 D1 -  	.dl linrep_05_2
  104 D1:C018 C4 C0 D1 -  	.dl sine_05_3
  105 D1:C01B 28 C1 D1 -  	.dl lin_05_3
  106 D1:C01E 8C C1 D1 -  	.dl linrep_05_3
  107 D1:C021 C9 C0 D1 -  	.dl sine_05_4
  108 D1:C024 2D C1 D1 -  	.dl lin_05_4
  109 D1:C027 91 C1 D1 -  	.dl linrep_05_4
  110 D1:C02A -  -  -  -  	
  111 D1:C02A CE C0 D1 -  	.dl sine_1_1
  112 D1:C02D 32 C1 D1 -  	.dl lin_1_1
  113 D1:C030 96 C1 D1 -  	.dl linrep_1_1
  114 D1:C033 D3 C0 D1 -  	.dl sine_1_2
  115 D1:C036 37 C1 D1 -  	.dl lin_1_2
  116 D1:C039 9B C1 D1 -  	.dl linrep_1_2
  117 D1:C03C D8 C0 D1 -  	.dl sine_1_3
  118 D1:C03F 3C C1 D1 -  	.dl lin_1_3
  119 D1:C042 A0 C1 D1 -  	.dl linrep_1_3
  120 D1:C045 DD C0 D1 -  	.dl sine_1_4
  121 D1:C048 41 C1 D1 -  	.dl lin_1_4
  122 D1:C04B A5 C1 D1 -  	.dl linrep_1_4
  123 D1:C04E -  -  -  -  	
  124 D1:C04E E2 C0 D1 -  	.dl sine_2_1
  125 D1:C051 46 C1 D1 -  	.dl lin_2_1
  126 D1:C054 AA C1 D1 -  	.dl linrep_2_1
  127 D1:C057 E7 C0 D1 -  	.dl sine_2_2
  128 D1:C05A 4B C1 D1 -  	.dl lin_2_2
  129 D1:C05D AF C1 D1 -  	.dl linrep_2_2
  130 D1:C060 EC C0 D1 -  	.dl sine_2_3
  131 D1:C063 50 C1 D1 -  	.dl lin_2_3
  132 D1:C066 B4 C1 D1 -  	.dl linrep_2_3
  133 D1:C069 F1 C0 D1 -  	.dl sine_2_4
  134 D1:C06C 55 C1 D1 -  	.dl lin_2_4
  135 D1:C06F B9 C1 D1 -  	.dl linrep_2_4
  136 D1:C072 -  -  -  -  	
  137 D1:C072 F6 C0 D1 -  	.dl sine_4_1
  138 D1:C075 5A C1 D1 -  	.dl lin_4_1
  139 D1:C078 BE C1 D1 -  	.dl linrep_4_1
  140 D1:C07B FB C0 D1 -  	.dl sine_4_2
  141 D1:C07E 5F C1 D1 -  	.dl lin_4_2
  142 D1:C081 C3 C1 D1 -  	.dl linrep_4_2
  143 D1:C084 00 C1 D1 -  	.dl sine_4_3
  144 D1:C087 64 C1 D1 -  	.dl lin_4_3
  145 D1:C08A C8 C1 D1 -  	.dl linrep_4_3
  146 D1:C08D 05 C1 D1 -  	.dl sine_4_4
  147 D1:C090 69 C1 D1 -  	.dl lin_4_4
  148 D1:C093 CD C1 D1 -  	.dl linrep_4_4
  149 D1:C096 -  -  -  -  
  150 D1:C096 0A C1 D1 -  	.dl sine_8_1
  151 D1:C099 6E C1 D1 -  	.dl lin_8_1
  152 D1:C09C D2 C1 D1 -  	.dl linrep_8_1
  153 D1:C09F 0F C1 D1 -  	.dl sine_8_2
  154 D1:C0A2 73 C1 D1 -  	.dl lin_8_2
  155 D1:C0A5 D7 C1 D1 -  	.dl linrep_8_2
  156 D1:C0A8 14 C1 D1 -  	.dl sine_8_3
  157 D1:C0AB 78 C1 D1 -  	.dl lin_8_3
  158 D1:C0AE DC C1 D1 -  	.dl linrep_8_3
  159 D1:C0B1 19 C1 D1 -  	.dl sine_8_4
  160 D1:C0B4 7D C1 D1 -  	.dl lin_8_4
  161 D1:C0B7 E1 C1 D1 -  	.dl linrep_8_4
  162 D1:C0BA -  -  -  -  
  163 D1:C0BA -  -  -  -  
  164 D1:C0BA -  -  -  -  
  165 D1:C0BA -  -  -  -  
  166 D1:C0BA -  -  -  -  sine_05_1: ;half frequency, no phase shift
  167 D1:C0BA -  -  -  -  sine_05_31_1: ;freqMult, amplitude, phase 
  168 D1:C0BA 00 -  -  -  	.db 0  
  169 D1:C0BB -  -  -  -  sine_05_15_1: ;freqMult, amplitude, phase 
  170 D1:C0BB 00 -  -  -  	.db 0 
  171 D1:C0BC -  -  -  -  sine_05_7_1: ;freqMult, amplitude, phase 
  172 D1:C0BC 00 -  -  -  	.db 0 
  173 D1:C0BD -  -  -  -  sine_05_3_1: ;freqMult, amplitude, phase 
  174 D1:C0BD 00 -  -  -  	.db 0 
  175 D1:C0BE -  -  -  -  sine_05_1_1: ;freqMult, amplitude, phase 
  176 D1:C0BE 00 -  -  -  	.db 0 
  177 D1:C0BF -  -  -  -  
  178 D1:C0BF -  -  -  -  	
  179 D1:C0BF -  -  -  -  	
  180 D1:C0BF -  -  -  -  sine_05_2: ;half frequency, no phase shift 
  181 D1:C0BF -  -  -  -  sine_05_31_2: ;freqMult, amplitude, phase 
  182 D1:C0BF 00 -  -  -  	.db 0 
  183 D1:C0C0 -  -  -  -  sine_05_15_2: ;freqMult, amplitude, phase 
  184 D1:C0C0 00 -  -  -  	.db 0 
  185 D1:C0C1 -  -  -  -  sine_05_7_2: ;freqMult, amplitude, phase 
  186 D1:C0C1 00 -  -  -  	.db 0 
  187 D1:C0C2 -  -  -  -  sine_05_3_2: ;freqMult, amplitude, phase 
  188 D1:C0C2 00 -  -  -  	.db 0 
  189 D1:C0C3 -  -  -  -  sine_05_1_2: ;freqMult, amplitude, phase 
  190 D1:C0C3 00 -  -  -  	.db 0 
  191 D1:C0C4 -  -  -  -  
  192 D1:C0C4 -  -  -  -  	
  193 D1:C0C4 -  -  -  -  sine_05_3: ;half frequency, no phase shift
  194 D1:C0C4 -  -  -  -  sine_05_31_3: ;freqMult, amplitude, phase 
  195 D1:C0C4 00 -  -  -  	.db 0  
  196 D1:C0C5 -  -  -  -  sine_05_15_3: ;freqMult, amplitude, phase 
  197 D1:C0C5 00 -  -  -  	.db 0 
  198 D1:C0C6 -  -  -  -  sine_05_7_3: ;freqMult, amplitude, phase 
  199 D1:C0C6 00 -  -  -  	.db 0 
  200 D1:C0C7 -  -  -  -  sine_05_3_3: ;freqMult, amplitude, phase 
  201 D1:C0C7 00 -  -  -  	.db 0 
  202 D1:C0C8 -  -  -  -  sine_05_1_3: ;freqMult, amplitude, phase 
  203 D1:C0C8 00 -  -  -  	.db 0 
  204 D1:C0C9 -  -  -  -  
  205 D1:C0C9 -  -  -  -  
  206 D1:C0C9 -  -  -  -  sine_05_4: ;half frequency, no phase shift 
  207 D1:C0C9 -  -  -  -  sine_05_31_4: ;freqMult, amplitude, phase 
  208 D1:C0C9 00 -  -  -  	.db 0
  209 D1:C0CA -  -  -  -  sine_05_15_4: ;freqMult, amplitude, phase 
  210 D1:C0CA 00 -  -  -  	.db 0 
  211 D1:C0CB -  -  -  -  sine_05_7_4: ;freqMult, amplitude, phase 
  212 D1:C0CB 00 -  -  -  	.db 0 
  213 D1:C0CC -  -  -  -  sine_05_3_4: ;freqMult, amplitude, phase 
  214 D1:C0CC 00 -  -  -  	.db 0 
  215 D1:C0CD -  -  -  -  sine_05_1_4: ;freqMult, amplitude, phase 
  216 D1:C0CD 00 -  -  -  	.db 0 
  217 D1:C0CE -  -  -  -  
  218 D1:C0CE -  -  -  -  
  219 D1:C0CE -  -  -  -  	
  220 D1:C0CE -  -  -  -  sine_1_1: ;no freq mult, no phase shift
  221 D1:C0CE -  -  -  -  sine_1_31_1: ;freqMult, amplitude, phase 
  222 D1:C0CE 00 -  -  -  	.db 0  
  223 D1:C0CF -  -  -  -  sine_1_15_1: ;freqMult, amplitude, phase 
  224 D1:C0CF 00 -  -  -  	.db 0 
  225 D1:C0D0 -  -  -  -  sine_1_7_1: ;freqMult, amplitude, phase 
  226 D1:C0D0 00 -  -  -  	.db 0 
  227 D1:C0D1 -  -  -  -  sine_1_3_1: ;freqMult, amplitude, phase 
  228 D1:C0D1 00 -  -  -  	.db 0 
  229 D1:C0D2 -  -  -  -  sine_1_1_1: ;freqMult, amplitude, phase 
  230 D1:C0D2 00 -  -  -  	.db 0 
  231 D1:C0D3 -  -  -  -  
  232 D1:C0D3 -  -  -  -  	
  233 D1:C0D3 -  -  -  -  sine_1_2: ;no freq mult, no phase shift 
  234 D1:C0D3 -  -  -  -  sine_1_31_2: ;freqMult, amplitude, phase 
  235 D1:C0D3 00 -  -  -  	.db 0 
  236 D1:C0D4 -  -  -  -  sine_1_15_2: ;freqMult, amplitude, phase 
  237 D1:C0D4 00 -  -  -  	.db 0 
  238 D1:C0D5 -  -  -  -  sine_1_7_2: ;freqMult, amplitude, phase 
  239 D1:C0D5 00 -  -  -  	.db 0 
  240 D1:C0D6 -  -  -  -  sine_1_3_2: ;freqMult, amplitude, phase 
  241 D1:C0D6 00 -  -  -  	.db 0 
  242 D1:C0D7 -  -  -  -  sine_1_1_2: ;freqMult, amplitude, phase 
  243 D1:C0D7 00 -  -  -  	.db 0 
  244 D1:C0D8 -  -  -  -  
  245 D1:C0D8 -  -  -  -  sine_1_3: ;no freq mult, no phase shift 
  246 D1:C0D8 -  -  -  -  sine_1_31_3: ;freqMult, amplitude, phase 
  247 D1:C0D8 00 -  -  -  	.db 0 
  248 D1:C0D9 -  -  -  -  sine_1_15_3: ;freqMult, amplitude, phase 
  249 D1:C0D9 00 -  -  -  	.db 0 
  250 D1:C0DA -  -  -  -  sine_1_7_3: ;freqMult, amplitude, phase 
  251 D1:C0DA 00 -  -  -  	.db 0 
  252 D1:C0DB -  -  -  -  sine_1_3_3: ;freqMult, amplitude, phase 
  253 D1:C0DB 00 -  -  -  	.db 0 
  254 D1:C0DC -  -  -  -  sine_1_1_3: ;freqMult, amplitude, phase 
  255 D1:C0DC 00 -  -  -  	.db 0 
  256 D1:C0DD -  -  -  -  
  257 D1:C0DD -  -  -  -  	
  258 D1:C0DD -  -  -  -  sine_1_4: ;no freq mult, no phase shift
  259 D1:C0DD -  -  -  -  sine_1_31_4: ;freqMult, amplitude, phase 
  260 D1:C0DD 00 -  -  -  	.db 0  
  261 D1:C0DE -  -  -  -  sine_1_15_4: ;freqMult, amplitude, phase 
  262 D1:C0DE 00 -  -  -  	.db 0 
  263 D1:C0DF -  -  -  -  sine_1_7_4: ;freqMult, amplitude, phase 
  264 D1:C0DF 00 -  -  -  	.db 0 
  265 D1:C0E0 -  -  -  -  sine_1_3_4: ;freqMult, amplitude, phase 
  266 D1:C0E0 00 -  -  -  	.db 0 
  267 D1:C0E1 -  -  -  -  sine_1_1_4: ;freqMult, amplitude, phase 
  268 D1:C0E1 00 -  -  -  	.db 0 
  269 D1:C0E2 -  -  -  -  
  270 D1:C0E2 -  -  -  -  
  271 D1:C0E2 -  -  -  -  
  272 D1:C0E2 -  -  -  -  
  273 D1:C0E2 -  -  -  -  sine_2_1: ;double freq mult
  274 D1:C0E2 -  -  -  -  sine_2_31_1: ;freqMult, amplitude, phase 
  275 D1:C0E2 00 -  -  -  	.db 0 
  276 D1:C0E3 -  -  -  -  sine_2_15_1: ;freqMult, amplitude, phase 
  277 D1:C0E3 00 -  -  -  	.db 0 
  278 D1:C0E4 -  -  -  -  sine_2_7_1: ;freqMult, amplitude, phase 
  279 D1:C0E4 00 -  -  -  	.db 0 
  280 D1:C0E5 -  -  -  -  sine_2_3_1: ;freqMult, amplitude, phase 
  281 D1:C0E5 00 -  -  -  	.db 0 
  282 D1:C0E6 -  -  -  -  sine_2_1_1: ;freqMult, amplitude, phase 
  283 D1:C0E6 00 -  -  -  	.db 0 
  284 D1:C0E7 -  -  -  -  
  285 D1:C0E7 -  -  -  -  	
  286 D1:C0E7 -  -  -  -  sine_2_2: 
  287 D1:C0E7 -  -  -  -  sine_2_31_2: ;freqMult, amplitude, phase 
  288 D1:C0E7 00 -  -  -  	.db 0 
  289 D1:C0E8 -  -  -  -  sine_2_15_2: ;freqMult, amplitude, phase 
  290 D1:C0E8 00 -  -  -  	.db 0 
  291 D1:C0E9 -  -  -  -  sine_2_7_2: ;freqMult, amplitude, phase 
  292 D1:C0E9 00 -  -  -  	.db 0 
  293 D1:C0EA -  -  -  -  sine_2_3_2: ;freqMult, amplitude, phase 
  294 D1:C0EA 00 -  -  -  	.db 0 
  295 D1:C0EB -  -  -  -  sine_2_1_2: ;freqMult, amplitude, phase 
  296 D1:C0EB 00 -  -  -  	.db 0 
  297 D1:C0EC -  -  -  -  
  298 D1:C0EC -  -  -  -  	
  299 D1:C0EC -  -  -  -  sine_2_3: 
  300 D1:C0EC -  -  -  -  sine_2_31_3: ;freqMult, amplitude, phase 
  301 D1:C0EC 00 -  -  -  	.db 0 
  302 D1:C0ED -  -  -  -  sine_2_15_3: ;freqMult, amplitude, phase 
  303 D1:C0ED 00 -  -  -  	.db 0 
  304 D1:C0EE -  -  -  -  sine_2_7_3: ;freqMult, amplitude, phase 
  305 D1:C0EE 00 -  -  -  	.db 0 
  306 D1:C0EF -  -  -  -  sine_2_3_3: ;freqMult, amplitude, phase 
  307 D1:C0EF 00 -  -  -  	.db 0 
  308 D1:C0F0 -  -  -  -  sine_2_1_3: ;freqMult, amplitude, phase 
  309 D1:C0F0 00 -  -  -  	.db 0 
  310 D1:C0F1 -  -  -  -  
  311 D1:C0F1 -  -  -  -  	
  312 D1:C0F1 -  -  -  -  sine_2_4: 
  313 D1:C0F1 -  -  -  -  sine_2_31_4: ;freqMult, amplitude, phase 
  314 D1:C0F1 00 -  -  -  	.db 0	
  315 D1:C0F2 -  -  -  -  sine_2_15_4: ;freqMult, amplitude, phase 
  316 D1:C0F2 00 -  -  -  	.db 0 
  317 D1:C0F3 -  -  -  -  sine_2_7_4: ;freqMult, amplitude, phase 
  318 D1:C0F3 00 -  -  -  	.db 0 
  319 D1:C0F4 -  -  -  -  sine_2_3_4: ;freqMult, amplitude, phase 
  320 D1:C0F4 00 -  -  -  	.db 0 
  321 D1:C0F5 -  -  -  -  sine_2_1_4: ;freqMult, amplitude, phase 
  322 D1:C0F5 00 -  -  -  	.db 0 
  323 D1:C0F6 -  -  -  -  
  324 D1:C0F6 -  -  -  -  
  325 D1:C0F6 -  -  -  -  
  326 D1:C0F6 -  -  -  -  
  327 D1:C0F6 -  -  -  -  sine_4_1: ;double freq mult
  328 D1:C0F6 -  -  -  -  sine_4_31_1: ;freqMult, amplitude, phase 
  329 D1:C0F6 00 -  -  -  	.db 0 
  330 D1:C0F7 -  -  -  -  sine_4_15_1: ;freqMult, amplitude, phase 
  331 D1:C0F7 00 -  -  -  	.db 0 
  332 D1:C0F8 -  -  -  -  sine_4_7_1: ;freqMult, amplitude, phase 
  333 D1:C0F8 00 -  -  -  	.db 0 
  334 D1:C0F9 -  -  -  -  sine_4_3_1: ;freqMult, amplitude, phase 
  335 D1:C0F9 00 -  -  -  	.db 0 
  336 D1:C0FA -  -  -  -  sine_4_1_1: ;freqMult, amplitude, phase 
  337 D1:C0FA 00 -  -  -  	.db 0 
  338 D1:C0FB -  -  -  -  
  339 D1:C0FB -  -  -  -  	
  340 D1:C0FB -  -  -  -  sine_4_2: 
  341 D1:C0FB -  -  -  -  sine_4_31_2: ;freqMult, amplitude, phase 
  342 D1:C0FB 00 -  -  -  	.db 0
  343 D1:C0FC -  -  -  -  sine_4_15_2: ;freqMult, amplitude, phase 
  344 D1:C0FC 00 -  -  -  	.db 0 
  345 D1:C0FD -  -  -  -  sine_4_7_2: ;freqMult, amplitude, phase 
  346 D1:C0FD 00 -  -  -  	.db 0 
  347 D1:C0FE -  -  -  -  sine_4_3_2: ;freqMult, amplitude, phase 
  348 D1:C0FE 00 -  -  -  	.db 0 
  349 D1:C0FF -  -  -  -  sine_4_1_2: ;freqMult, amplitude, phase 
  350 D1:C0FF 00 -  -  -  	.db 0 
  351 D1:C100 -  -  -  -  
  352 D1:C100 -  -  -  -  	
  353 D1:C100 -  -  -  -  sine_4_3: 
  354 D1:C100 -  -  -  -  sine_4_31_3: ;freqMult, amplitude, phase 
  355 D1:C100 00 -  -  -  	.db 0 
  356 D1:C101 -  -  -  -  sine_4_15_3: ;freqMult, amplitude, phase 
  357 D1:C101 00 -  -  -  	.db 0 
  358 D1:C102 -  -  -  -  sine_4_7_3: ;freqMult, amplitude, phase 
  359 D1:C102 00 -  -  -  	.db 0 
  360 D1:C103 -  -  -  -  sine_4_3_3: ;freqMult, amplitude, phase 
  361 D1:C103 00 -  -  -  	.db 0 
  362 D1:C104 -  -  -  -  sine_4_1_3: ;freqMult, amplitude, phase 
  363 D1:C104 00 -  -  -  	.db 0 
  364 D1:C105 -  -  -  -  
  365 D1:C105 -  -  -  -  	
  366 D1:C105 -  -  -  -  sine_4_4: 
  367 D1:C105 -  -  -  -  sine_4_314: ;freqMult, amplitude, phase 
  368 D1:C105 00 -  -  -  	.db 0
  369 D1:C106 -  -  -  -  sine_4_15_4: ;freqMult, amplitude, phase 
  370 D1:C106 00 -  -  -  	.db 0 
  371 D1:C107 -  -  -  -  sine_4_7_4: ;freqMult, amplitude, phase 
  372 D1:C107 00 -  -  -  	.db 0 
  373 D1:C108 -  -  -  -  sine_4_3_4: ;freqMult, amplitude, phase 
  374 D1:C108 00 -  -  -  	.db 0 
  375 D1:C109 -  -  -  -  sine_4_1_4: ;freqMult, amplitude, phase 
  376 D1:C109 00 -  -  -  	.db 0 
  377 D1:C10A -  -  -  -  
  378 D1:C10A -  -  -  -  
  379 D1:C10A -  -  -  -  
  380 D1:C10A -  -  -  -  
  381 D1:C10A -  -  -  -  
  382 D1:C10A -  -  -  -  sine_8_1: ;double freq mult
  383 D1:C10A -  -  -  -  sine_8_31_1: ;freqMult, amplitude, phase 
  384 D1:C10A 00 -  -  -  	.db 0 
  385 D1:C10B -  -  -  -  sine_8_15_1: ;freqMult, amplitude, phase 
  386 D1:C10B 00 -  -  -  	.db 0 
  387 D1:C10C -  -  -  -  sine_8_7_1: ;freqMult, amplitude, phase 
  388 D1:C10C 00 -  -  -  	.db 0 
  389 D1:C10D -  -  -  -  sine_8_3_1: ;freqMult, amplitude, phase 
  390 D1:C10D 00 -  -  -  	.db 0 
  391 D1:C10E -  -  -  -  sine_8_1_1: ;freqMult, amplitude, phase 
  392 D1:C10E 00 -  -  -  	.db 0 
  393 D1:C10F -  -  -  -  
  394 D1:C10F -  -  -  -  	
  395 D1:C10F -  -  -  -  sine_8_2: 
  396 D1:C10F -  -  -  -  sine_8_31_2: ;freqMult, amplitude, phase 
  397 D1:C10F 00 -  -  -  	.db 0 
  398 D1:C110 -  -  -  -  sine_8_15_2: ;freqMult, amplitude, phase 
  399 D1:C110 00 -  -  -  	.db 0 
  400 D1:C111 -  -  -  -  sine_8_7_2: ;freqMult, amplitude, phase 
  401 D1:C111 00 -  -  -  	.db 0 
  402 D1:C112 -  -  -  -  sine_8_3_2: ;freqMult, amplitude, phase 
  403 D1:C112 00 -  -  -  	.db 0 
  404 D1:C113 -  -  -  -  sine_8_1_2: ;freqMult, amplitude, phase 
  405 D1:C113 00 -  -  -  	.db 0 
  406 D1:C114 -  -  -  -  
  407 D1:C114 -  -  -  -  	
  408 D1:C114 -  -  -  -  sine_8_3: 
  409 D1:C114 -  -  -  -  sine_8_313: ;freqMult, amplitude, phase 
  410 D1:C114 00 -  -  -  	.db 0 
  411 D1:C115 -  -  -  -  sine_8_15_3: ;freqMult, amplitude, phase 
  412 D1:C115 00 -  -  -  	.db 0 
  413 D1:C116 -  -  -  -  sine_8_7_3: ;freqMult, amplitude, phase 
  414 D1:C116 00 -  -  -  	.db 0 
  415 D1:C117 -  -  -  -  sine_8_3_3: ;freqMult, amplitude, phase 
  416 D1:C117 00 -  -  -  	.db 0 
  417 D1:C118 -  -  -  -  sine_8_1_3: ;freqMult, amplitude, phase 
  418 D1:C118 00 -  -  -  	.db 0 
  419 D1:C119 -  -  -  -  
  420 D1:C119 -  -  -  -  	
  421 D1:C119 -  -  -  -  sine_8_4: 
  422 D1:C119 -  -  -  -  sine_8_31_4: ;freqMult, amplitude, phase 
  423 D1:C119 00 -  -  -  	.db 0
  424 D1:C11A -  -  -  -  sine_8_15_4: ;freqMult, amplitude, phase 
  425 D1:C11A 00 -  -  -  	.db 0 
  426 D1:C11B -  -  -  -  sine_8_7_4: ;freqMult, amplitude, phase 
  427 D1:C11B 00 -  -  -  	.db 0 
  428 D1:C11C -  -  -  -  sine_8_3_4: ;freqMult, amplitude, phase 
  429 D1:C11C 00 -  -  -  	.db 0 
  430 D1:C11D -  -  -  -  sine_8_1_4: ;freqMult, amplitude, phase 
  431 D1:C11D 00 -  -  -  	.db 0 
  432 D1:C11E -  -  -  -  
  433 D1:C11E -  -  -  -  
  434 D1:C11E -  -  -  -  
  435 D1:C11E -  -  -  -  
  436 D1:C11E -  -  -  -  lin_05_1:
  437 D1:C11E -  -  -  -  lin_05_31_1:
  438 D1:C11E 00 -  -  -  	.db 0 
  439 D1:C11F -  -  -  -  lin_05_15_1:
  440 D1:C11F 00 -  -  -  	.db 0 
  441 D1:C120 -  -  -  -  lin_05_7_1:
  442 D1:C120 00 -  -  -  	.db 0 
  443 D1:C121 -  -  -  -  lin_05_3_1:
  444 D1:C121 00 -  -  -  	.db 0 
  445 D1:C122 -  -  -  -  lin_05_1_1:
  446 D1:C122 00 -  -  -  	.db 0 
  447 D1:C123 -  -  -  -  
  448 D1:C123 -  -  -  -  lin_05_2:
  449 D1:C123 -  -  -  -  lin_05_31_2:
  450 D1:C123 00 -  -  -  	.db 0 
  451 D1:C124 -  -  -  -  lin_05_15_2:
  452 D1:C124 00 -  -  -  	.db 0 
  453 D1:C125 -  -  -  -  lin_05_7_2:
  454 D1:C125 00 -  -  -  	.db 0 
  455 D1:C126 -  -  -  -  lin_05_3_2:
  456 D1:C126 00 -  -  -  	.db 0 
  457 D1:C127 -  -  -  -  lin_05_1_2:
  458 D1:C127 00 -  -  -  	.db 0 	
  459 D1:C128 -  -  -  -  	
  460 D1:C128 -  -  -  -  lin_05_3:
  461 D1:C128 -  -  -  -  lin_05_31_3:
  462 D1:C128 00 -  -  -  	.db 0 
  463 D1:C129 -  -  -  -  lin_05_15_3:
  464 D1:C129 00 -  -  -  	.db 0 
  465 D1:C12A -  -  -  -  lin_05_7_3:
  466 D1:C12A 00 -  -  -  	.db 0 
  467 D1:C12B -  -  -  -  lin_05_3_3:
  468 D1:C12B 00 -  -  -  	.db 0 
  469 D1:C12C -  -  -  -  lin_05_1_3:
  470 D1:C12C 00 -  -  -  	.db 0 	
  471 D1:C12D -  -  -  -  	
  472 D1:C12D -  -  -  -  lin_05_4:
  473 D1:C12D -  -  -  -  lin_05_31_4:
  474 D1:C12D 00 -  -  -  	.db 0 
  475 D1:C12E -  -  -  -  lin_05_15_4:
  476 D1:C12E 00 -  -  -  	.db 0 
  477 D1:C12F -  -  -  -  lin_05_7_4:
  478 D1:C12F 00 -  -  -  	.db 0 
  479 D1:C130 -  -  -  -  lin_05_3_4:
  480 D1:C130 00 -  -  -  	.db 0 
  481 D1:C131 -  -  -  -  lin_05_1_4:
  482 D1:C131 00 -  -  -  	.db 0 
  483 D1:C132 -  -  -  -  
  484 D1:C132 -  -  -  -  lin_1_1:
  485 D1:C132 -  -  -  -  lin_1_31_1:
  486 D1:C132 00 -  -  -  	.db 0 
  487 D1:C133 -  -  -  -  lin_1_15_1:
  488 D1:C133 00 -  -  -  	.db 0 
  489 D1:C134 -  -  -  -  lin_1_7_1:
  490 D1:C134 00 -  -  -  	.db 0 
  491 D1:C135 -  -  -  -  lin_1_3_1:
  492 D1:C135 00 -  -  -  	.db 0
  493 D1:C136 -  -  -  -  lin_1_1_1:
  494 D1:C136 00 -  -  -  	.db 0 	
  495 D1:C137 -  -  -  -  
  496 D1:C137 -  -  -  -  lin_1_2:
  497 D1:C137 -  -  -  -  lin_1_31_2:
  498 D1:C137 00 -  -  -  	.db 0 
  499 D1:C138 -  -  -  -  lin_1_15_2:
  500 D1:C138 00 -  -  -  	.db 0 
  501 D1:C139 -  -  -  -  lin_1_7_2:
  502 D1:C139 00 -  -  -  	.db 0 
  503 D1:C13A -  -  -  -  lin_1_3_2:
  504 D1:C13A 00 -  -  -  	.db 0 
  505 D1:C13B -  -  -  -  lin_1_1_2:
  506 D1:C13B 00 -  -  -  	.db 0 
  507 D1:C13C -  -  -  -  	
  508 D1:C13C -  -  -  -  lin_1_3:
  509 D1:C13C -  -  -  -  lin_1_31_3:
  510 D1:C13C 00 -  -  -  	.db 0 
  511 D1:C13D -  -  -  -  lin_1_15_3:
  512 D1:C13D 00 -  -  -  	.db 0 
  513 D1:C13E -  -  -  -  lin_1_7_3:
  514 D1:C13E 00 -  -  -  	.db 0 
  515 D1:C13F -  -  -  -  lin_1_3_3:
  516 D1:C13F 00 -  -  -  	.db 0 
  517 D1:C140 -  -  -  -  lin_1_1_3:
  518 D1:C140 00 -  -  -  	.db 0 
  519 D1:C141 -  -  -  -  	
  520 D1:C141 -  -  -  -  lin_1_4:
  521 D1:C141 -  -  -  -  lin_1_31_4:
  522 D1:C141 00 -  -  -  	.db 0 
  523 D1:C142 -  -  -  -  lin_1_15_4:
  524 D1:C142 00 -  -  -  	.db 0 
  525 D1:C143 -  -  -  -  lin_1_7_4:
  526 D1:C143 00 -  -  -  	.db 0 
  527 D1:C144 -  -  -  -  lin_1_3_4:
  528 D1:C144 00 -  -  -  	.db 0 
  529 D1:C145 -  -  -  -  lin_1_1_4:
  530 D1:C145 00 -  -  -  	.db 0 
  531 D1:C146 -  -  -  -  	
  532 D1:C146 -  -  -  -  lin_2_1:
  533 D1:C146 -  -  -  -  lin_2_31_1:
  534 D1:C146 00 -  -  -  	.db 0 
  535 D1:C147 -  -  -  -  lin_2_15_1:
  536 D1:C147 00 -  -  -  	.db 0 
  537 D1:C148 -  -  -  -  lin_2_7_1:
  538 D1:C148 00 -  -  -  	.db 0 
  539 D1:C149 -  -  -  -  lin_2_3_1:
  540 D1:C149 00 -  -  -  	.db 0 
  541 D1:C14A -  -  -  -  lin_2_1_1:
  542 D1:C14A 00 -  -  -  	.db 0
  543 D1:C14B -  -  -  -  
  544 D1:C14B -  -  -  -  lin_2_2:
  545 D1:C14B -  -  -  -  lin_2_31_2:
  546 D1:C14B 00 -  -  -  	.db 0 
  547 D1:C14C -  -  -  -  lin_2_15_2:
  548 D1:C14C 00 -  -  -  	.db 0 
  549 D1:C14D -  -  -  -  lin_2_7_2:
  550 D1:C14D 00 -  -  -  	.db 0 
  551 D1:C14E -  -  -  -  lin_2_3_2:
  552 D1:C14E 00 -  -  -  	.db 0 
  553 D1:C14F -  -  -  -  lin_2_1_2:
  554 D1:C14F 00 -  -  -  	.db 0 
  555 D1:C150 -  -  -  -  	
  556 D1:C150 -  -  -  -  lin_2_3:
  557 D1:C150 -  -  -  -  lin_2_31_3:
  558 D1:C150 00 -  -  -  	.db 0 
  559 D1:C151 -  -  -  -  lin_2_15_3:
  560 D1:C151 00 -  -  -  	.db 0 
  561 D1:C152 -  -  -  -  lin_2_7_3:
  562 D1:C152 00 -  -  -  	.db 0 
  563 D1:C153 -  -  -  -  lin_2_3_3:
  564 D1:C153 00 -  -  -  	.db 0 
  565 D1:C154 -  -  -  -  lin_2_1_3:
  566 D1:C154 00 -  -  -  	.db 0 
  567 D1:C155 -  -  -  -  	
  568 D1:C155 -  -  -  -  lin_2_4:
  569 D1:C155 -  -  -  -  lin_2_31_4:
  570 D1:C155 00 -  -  -  	.db 0 
  571 D1:C156 -  -  -  -  lin_2_15_4:
  572 D1:C156 00 -  -  -  	.db 0 
  573 D1:C157 -  -  -  -  lin_2_7_4:
  574 D1:C157 00 -  -  -  	.db 0 
  575 D1:C158 -  -  -  -  lin_2_3_4:
  576 D1:C158 00 -  -  -  	.db 0 
  577 D1:C159 -  -  -  -  lin_2_1_4:
  578 D1:C159 00 -  -  -  	.db 0 
  579 D1:C15A -  -  -  -  	
  580 D1:C15A -  -  -  -  lin_4_1:
  581 D1:C15A -  -  -  -  lin_4_31_1:
  582 D1:C15A 00 -  -  -  	.db 0 
  583 D1:C15B -  -  -  -  lin_4_15_1:
  584 D1:C15B 00 -  -  -  	.db 0 
  585 D1:C15C -  -  -  -  lin_4_7_1:
  586 D1:C15C 00 -  -  -  	.db 0 
  587 D1:C15D -  -  -  -  lin_4_3_1:
  588 D1:C15D 00 -  -  -  	.db 0 
  589 D1:C15E -  -  -  -  lin_4_1_1:
  590 D1:C15E 00 -  -  -  	.db 0 
  591 D1:C15F -  -  -  -  
  592 D1:C15F -  -  -  -  
  593 D1:C15F -  -  -  -  lin_4_2:
  594 D1:C15F -  -  -  -  lin_4_31_2:
  595 D1:C15F 00 -  -  -  	.db 0 
  596 D1:C160 -  -  -  -  lin_4_15_2:
  597 D1:C160 00 -  -  -  	.db 0 
  598 D1:C161 -  -  -  -  lin_4_7_2:
  599 D1:C161 00 -  -  -  	.db 0 
  600 D1:C162 -  -  -  -  lin_4_3_2:
  601 D1:C162 00 -  -  -  	.db 0 
  602 D1:C163 -  -  -  -  lin_4_1_2:
  603 D1:C163 00 -  -  -  	.db 0 
  604 D1:C164 -  -  -  -  	
  605 D1:C164 -  -  -  -  lin_4_3:
  606 D1:C164 -  -  -  -  lin_4_31_3:
  607 D1:C164 00 -  -  -  	.db 0 
  608 D1:C165 -  -  -  -  lin_4_15_3:
  609 D1:C165 00 -  -  -  	.db 0 
  610 D1:C166 -  -  -  -  lin_4_7_3:
  611 D1:C166 00 -  -  -  	.db 0 
  612 D1:C167 -  -  -  -  lin_4_3_3:
  613 D1:C167 00 -  -  -  	.db 0 
  614 D1:C168 -  -  -  -  lin_4_1_3:
  615 D1:C168 00 -  -  -  	.db 0 
  616 D1:C169 -  -  -  -  	
  617 D1:C169 -  -  -  -  lin_4_4:
  618 D1:C169 -  -  -  -  lin_4_31_4:
  619 D1:C169 00 -  -  -  	.db 0 
  620 D1:C16A -  -  -  -  lin_4_15_4:
  621 D1:C16A 00 -  -  -  	.db 0 
  622 D1:C16B -  -  -  -  lin_4_7_4:
  623 D1:C16B 00 -  -  -  	.db 0 
  624 D1:C16C -  -  -  -  lin_4_3_4:
  625 D1:C16C 00 -  -  -  	.db 0 
  626 D1:C16D -  -  -  -  lin_4_1_4:
  627 D1:C16D 00 -  -  -  	.db 0 
  628 D1:C16E -  -  -  -  	
  629 D1:C16E -  -  -  -  	
  630 D1:C16E -  -  -  -  lin_8_1:
  631 D1:C16E -  -  -  -  lin_8_31_1:
  632 D1:C16E 00 -  -  -  	.db 0 
  633 D1:C16F -  -  -  -  lin_8_15_1:
  634 D1:C16F 00 -  -  -  	.db 0 
  635 D1:C170 -  -  -  -  lin_8_7_1:
  636 D1:C170 00 -  -  -  	.db 0 
  637 D1:C171 -  -  -  -  lin_8_3_1:
  638 D1:C171 00 -  -  -  	.db 0 
  639 D1:C172 -  -  -  -  lin_8_1_1:
  640 D1:C172 00 -  -  -  	.db 0 
  641 D1:C173 -  -  -  -  
  642 D1:C173 -  -  -  -  lin_8_2:
  643 D1:C173 -  -  -  -  lin_8_31_2:
  644 D1:C173 00 -  -  -  	.db 0 
  645 D1:C174 -  -  -  -  lin_8_15_2:
  646 D1:C174 00 -  -  -  	.db 0 
  647 D1:C175 -  -  -  -  lin_8_7_2:
  648 D1:C175 00 -  -  -  	.db 0 
  649 D1:C176 -  -  -  -  lin_8_3_2:
  650 D1:C176 00 -  -  -  	.db 0 
  651 D1:C177 -  -  -  -  lin_8_1_2:
  652 D1:C177 00 -  -  -  	.db 0 
  653 D1:C178 -  -  -  -  	
  654 D1:C178 -  -  -  -  lin_8_3:
  655 D1:C178 -  -  -  -  lin_8_31_3:
  656 D1:C178 00 -  -  -  	.db 0 
  657 D1:C179 -  -  -  -  lin_8_15_3:
  658 D1:C179 00 -  -  -  	.db 0 
  659 D1:C17A -  -  -  -  lin_8_7_3:
  660 D1:C17A 00 -  -  -  	.db 0 
  661 D1:C17B -  -  -  -  lin_8_3_3:
  662 D1:C17B 00 -  -  -  	.db 0 
  663 D1:C17C -  -  -  -  lin_8_1_3:
  664 D1:C17C 00 -  -  -  	.db 0 
  665 D1:C17D -  -  -  -  	
  666 D1:C17D -  -  -  -  lin_8_4:
  667 D1:C17D -  -  -  -  lin_8_31_4:
  668 D1:C17D 00 -  -  -  	.db 0 
  669 D1:C17E -  -  -  -  lin_8_15_4:
  670 D1:C17E 00 -  -  -  	.db 0 
  671 D1:C17F -  -  -  -  lin_8_7_4:
  672 D1:C17F 00 -  -  -  	.db 0 
  673 D1:C180 -  -  -  -  lin_8_3_4:
  674 D1:C180 00 -  -  -  	.db 0 
  675 D1:C181 -  -  -  -  lin_8_1_4:
  676 D1:C181 00 -  -  -  	.db 0 
  677 D1:C182 -  -  -  -  
  678 D1:C182 -  -  -  -  
  679 D1:C182 -  -  -  -  
  680 D1:C182 -  -  -  -  
  681 D1:C182 -  -  -  -  
  682 D1:C182 -  -  -  -  linrep_05_1:
  683 D1:C182 -  -  -  -  linrep_05_31_1:
  684 D1:C182 00 -  -  -  	.db 0 
  685 D1:C183 -  -  -  -  linrep_05_15_1:
  686 D1:C183 00 -  -  -  	.db 0 
  687 D1:C184 -  -  -  -  linrep_05_7_1:
  688 D1:C184 00 -  -  -  	.db 0 
  689 D1:C185 -  -  -  -  linrep_05_3_1:
  690 D1:C185 00 -  -  -  	.db 0 
  691 D1:C186 -  -  -  -  linrep_05_1_1:
  692 D1:C186 00 -  -  -  	.db 0 
  693 D1:C187 -  -  -  -  
  694 D1:C187 -  -  -  -  linrep_05_2:
  695 D1:C187 -  -  -  -  linrep_05_31_2:
  696 D1:C187 00 -  -  -  	.db 0 
  697 D1:C188 -  -  -  -  linrep_05_15_2:
  698 D1:C188 00 -  -  -  	.db 0 
  699 D1:C189 -  -  -  -  linrep_05_7_2:
  700 D1:C189 00 -  -  -  	.db 0 
  701 D1:C18A -  -  -  -  linrep_05_3_2:
  702 D1:C18A 00 -  -  -  	.db 0 
  703 D1:C18B -  -  -  -  linrep_05_1_2:
  704 D1:C18B 00 -  -  -  	.db 0 	
  705 D1:C18C -  -  -  -  	
  706 D1:C18C -  -  -  -  linrep_05_3:
  707 D1:C18C -  -  -  -  linrep_05_31_3:
  708 D1:C18C 00 -  -  -  	.db 0 
  709 D1:C18D -  -  -  -  linrep_05_15_3:
  710 D1:C18D 00 -  -  -  	.db 0 
  711 D1:C18E -  -  -  -  linrep_05_7_3:
  712 D1:C18E 00 -  -  -  	.db 0 
  713 D1:C18F -  -  -  -  linrep_05_3_3:
  714 D1:C18F 00 -  -  -  	.db 0 
  715 D1:C190 -  -  -  -  linrep_05_1_3:
  716 D1:C190 00 -  -  -  	.db 0 	
  717 D1:C191 -  -  -  -  	
  718 D1:C191 -  -  -  -  linrep_05_4:
  719 D1:C191 -  -  -  -  linrep_05_31_4:
  720 D1:C191 00 -  -  -  	.db 0 
  721 D1:C192 -  -  -  -  linrep_05_15_4:
  722 D1:C192 00 -  -  -  	.db 0 
  723 D1:C193 -  -  -  -  linrep_05_7_4:
  724 D1:C193 00 -  -  -  	.db 0 
  725 D1:C194 -  -  -  -  linrep_05_3_4:
  726 D1:C194 00 -  -  -  	.db 0 
  727 D1:C195 -  -  -  -  linrep_05_1_4:
  728 D1:C195 00 -  -  -  	.db 0 
  729 D1:C196 -  -  -  -  
  730 D1:C196 -  -  -  -  linrep_1_1:
  731 D1:C196 -  -  -  -  linrep_1_31_1:
  732 D1:C196 00 -  -  -  	.db 0 
  733 D1:C197 -  -  -  -  linrep_1_15_1:
  734 D1:C197 00 -  -  -  	.db 0 
  735 D1:C198 -  -  -  -  linrep_1_7_1:
  736 D1:C198 00 -  -  -  	.db 0 
  737 D1:C199 -  -  -  -  linrep_1_3_1:
  738 D1:C199 00 -  -  -  	.db 0
  739 D1:C19A -  -  -  -  linrep_1_1_1:
  740 D1:C19A 00 -  -  -  	.db 0 	
  741 D1:C19B -  -  -  -  
  742 D1:C19B -  -  -  -  linrep_1_2:
  743 D1:C19B -  -  -  -  linrep_1_31_2:
  744 D1:C19B 00 -  -  -  	.db 0 
  745 D1:C19C -  -  -  -  linrep_1_15_2:
  746 D1:C19C 00 -  -  -  	.db 0 
  747 D1:C19D -  -  -  -  linrep_1_7_2:
  748 D1:C19D 00 -  -  -  	.db 0 
  749 D1:C19E -  -  -  -  linrep_1_3_2:
  750 D1:C19E 00 -  -  -  	.db 0 
  751 D1:C19F -  -  -  -  linrep_1_1_2:
  752 D1:C19F 00 -  -  -  	.db 0 
  753 D1:C1A0 -  -  -  -  	
  754 D1:C1A0 -  -  -  -  linrep_1_3:
  755 D1:C1A0 -  -  -  -  linrep_1_31_3:
  756 D1:C1A0 00 -  -  -  	.db 0 
  757 D1:C1A1 -  -  -  -  linrep_1_15_3:
  758 D1:C1A1 00 -  -  -  	.db 0 
  759 D1:C1A2 -  -  -  -  linrep_1_7_3:
  760 D1:C1A2 00 -  -  -  	.db 0 
  761 D1:C1A3 -  -  -  -  linrep_1_3_3:
  762 D1:C1A3 00 -  -  -  	.db 0 
  763 D1:C1A4 -  -  -  -  linrep_1_1_3:
  764 D1:C1A4 00 -  -  -  	.db 0 
  765 D1:C1A5 -  -  -  -  	
  766 D1:C1A5 -  -  -  -  linrep_1_4:
  767 D1:C1A5 -  -  -  -  linrep_1_31_4:
  768 D1:C1A5 00 -  -  -  	.db 0 
  769 D1:C1A6 -  -  -  -  linrep_1_15_4:
  770 D1:C1A6 00 -  -  -  	.db 0 
  771 D1:C1A7 -  -  -  -  linrep_1_7_4:
  772 D1:C1A7 00 -  -  -  	.db 0 
  773 D1:C1A8 -  -  -  -  linrep_1_3_4:
  774 D1:C1A8 00 -  -  -  	.db 0 
  775 D1:C1A9 -  -  -  -  linrep_1_1_4:
  776 D1:C1A9 00 -  -  -  	.db 0 
  777 D1:C1AA -  -  -  -  	
  778 D1:C1AA -  -  -  -  linrep_2_1:
  779 D1:C1AA -  -  -  -  linrep_2_31_1:
  780 D1:C1AA 00 -  -  -  	.db 0 
  781 D1:C1AB -  -  -  -  linrep_2_15_1:
  782 D1:C1AB 00 -  -  -  	.db 0 
  783 D1:C1AC -  -  -  -  linrep_2_7_1:
  784 D1:C1AC 00 -  -  -  	.db 0 
  785 D1:C1AD -  -  -  -  linrep_2_3_1:
  786 D1:C1AD 00 -  -  -  	.db 0 
  787 D1:C1AE -  -  -  -  linrep_2_1_1:
  788 D1:C1AE 00 -  -  -  	.db 0
  789 D1:C1AF -  -  -  -  
  790 D1:C1AF -  -  -  -  linrep_2_2:
  791 D1:C1AF -  -  -  -  linrep_2_31_2:
  792 D1:C1AF 00 -  -  -  	.db 0 
  793 D1:C1B0 -  -  -  -  linrep_2_15_2:
  794 D1:C1B0 00 -  -  -  	.db 0 
  795 D1:C1B1 -  -  -  -  linrep_2_7_2:
  796 D1:C1B1 00 -  -  -  	.db 0 
  797 D1:C1B2 -  -  -  -  linrep_2_3_2:
  798 D1:C1B2 00 -  -  -  	.db 0 
  799 D1:C1B3 -  -  -  -  linrep_2_1_2:
  800 D1:C1B3 00 -  -  -  	.db 0 
  801 D1:C1B4 -  -  -  -  	
  802 D1:C1B4 -  -  -  -  linrep_2_3:
  803 D1:C1B4 -  -  -  -  linrep_2_31_3:
  804 D1:C1B4 00 -  -  -  	.db 0 
  805 D1:C1B5 -  -  -  -  linrep_2_15_3:
  806 D1:C1B5 00 -  -  -  	.db 0 
  807 D1:C1B6 -  -  -  -  linrep_2_7_3:
  808 D1:C1B6 00 -  -  -  	.db 0 
  809 D1:C1B7 -  -  -  -  linrep_2_3_3:
  810 D1:C1B7 00 -  -  -  	.db 0 
  811 D1:C1B8 -  -  -  -  linrep_2_1_3:
  812 D1:C1B8 00 -  -  -  	.db 0 
  813 D1:C1B9 -  -  -  -  	
  814 D1:C1B9 -  -  -  -  linrep_2_4:
  815 D1:C1B9 -  -  -  -  linrep_2_31_4:
  816 D1:C1B9 00 -  -  -  	.db 0 
  817 D1:C1BA -  -  -  -  linrep_2_15_4:
  818 D1:C1BA 00 -  -  -  	.db 0 
  819 D1:C1BB -  -  -  -  linrep_2_7_4:
  820 D1:C1BB 00 -  -  -  	.db 0 
  821 D1:C1BC -  -  -  -  linrep_2_3_4:
  822 D1:C1BC 00 -  -  -  	.db 0 
  823 D1:C1BD -  -  -  -  linrep_2_1_4:
  824 D1:C1BD 00 -  -  -  	.db 0 
  825 D1:C1BE -  -  -  -  	
  826 D1:C1BE -  -  -  -  linrep_4_1:
  827 D1:C1BE -  -  -  -  linrep_4_31_1:
  828 D1:C1BE 00 -  -  -  	.db 0 
  829 D1:C1BF -  -  -  -  linrep_4_15_1:
  830 D1:C1BF 00 -  -  -  	.db 0 
  831 D1:C1C0 -  -  -  -  linrep_4_7_1:
  832 D1:C1C0 00 -  -  -  	.db 0 
  833 D1:C1C1 -  -  -  -  linrep_4_3_1:
  834 D1:C1C1 00 -  -  -  	.db 0 
  835 D1:C1C2 -  -  -  -  linrep_4_1_1:
  836 D1:C1C2 00 -  -  -  	.db 0 
  837 D1:C1C3 -  -  -  -  
  838 D1:C1C3 -  -  -  -  
  839 D1:C1C3 -  -  -  -  linrep_4_2:
  840 D1:C1C3 -  -  -  -  linrep_4_31_2:
  841 D1:C1C3 00 -  -  -  	.db 0 
  842 D1:C1C4 -  -  -  -  linrep_4_15_2:
  843 D1:C1C4 00 -  -  -  	.db 0 
  844 D1:C1C5 -  -  -  -  linrep_4_7_2:
  845 D1:C1C5 00 -  -  -  	.db 0 
  846 D1:C1C6 -  -  -  -  linrep_4_3_2:
  847 D1:C1C6 00 -  -  -  	.db 0 
  848 D1:C1C7 -  -  -  -  linrep_4_1_2:
  849 D1:C1C7 00 -  -  -  	.db 0 
  850 D1:C1C8 -  -  -  -  	
  851 D1:C1C8 -  -  -  -  linrep_4_3:
  852 D1:C1C8 -  -  -  -  linrep_4_31_3:
  853 D1:C1C8 00 -  -  -  	.db 0 
  854 D1:C1C9 -  -  -  -  linrep_4_15_3:
  855 D1:C1C9 00 -  -  -  	.db 0 
  856 D1:C1CA -  -  -  -  linrep_4_7_3:
  857 D1:C1CA 00 -  -  -  	.db 0 
  858 D1:C1CB -  -  -  -  linrep_4_3_3:
  859 D1:C1CB 00 -  -  -  	.db 0 
  860 D1:C1CC -  -  -  -  linrep_4_1_3:
  861 D1:C1CC 00 -  -  -  	.db 0 
  862 D1:C1CD -  -  -  -  	
  863 D1:C1CD -  -  -  -  linrep_4_4:
  864 D1:C1CD -  -  -  -  linrep_4_31_4:
  865 D1:C1CD 00 -  -  -  	.db 0 
  866 D1:C1CE -  -  -  -  linrep_4_15_4:
  867 D1:C1CE 00 -  -  -  	.db 0 
  868 D1:C1CF -  -  -  -  linrep_4_7_4:
  869 D1:C1CF 00 -  -  -  	.db 0 
  870 D1:C1D0 -  -  -  -  linrep_4_3_4:
  871 D1:C1D0 00 -  -  -  	.db 0 
  872 D1:C1D1 -  -  -  -  linrep_4_1_4:
  873 D1:C1D1 00 -  -  -  	.db 0 
  874 D1:C1D2 -  -  -  -  	
  875 D1:C1D2 -  -  -  -  	
  876 D1:C1D2 -  -  -  -  linrep_8_1:
  877 D1:C1D2 -  -  -  -  linrep_8_31_1:
  878 D1:C1D2 00 -  -  -  	.db 0 
  879 D1:C1D3 -  -  -  -  linrep_8_15_1:
  880 D1:C1D3 00 -  -  -  	.db 0 
  881 D1:C1D4 -  -  -  -  linrep_8_7_1:
  882 D1:C1D4 00 -  -  -  	.db 0 
  883 D1:C1D5 -  -  -  -  linrep_8_3_1:
  884 D1:C1D5 00 -  -  -  	.db 0 
  885 D1:C1D6 -  -  -  -  linrep_8_1_1:
  886 D1:C1D6 00 -  -  -  	.db 0 
  887 D1:C1D7 -  -  -  -  
  888 D1:C1D7 -  -  -  -  linrep_8_2:
  889 D1:C1D7 -  -  -  -  linrep_8_31_2:
  890 D1:C1D7 00 -  -  -  	.db 0 
  891 D1:C1D8 -  -  -  -  linrep_8_15_2:
  892 D1:C1D8 00 -  -  -  	.db 0 
  893 D1:C1D9 -  -  -  -  linrep_8_7_2:
  894 D1:C1D9 00 -  -  -  	.db 0 
  895 D1:C1DA -  -  -  -  linrep_8_3_2:
  896 D1:C1DA 00 -  -  -  	.db 0 
  897 D1:C1DB -  -  -  -  linrep_8_1_2:
  898 D1:C1DB 00 -  -  -  	.db 0 
  899 D1:C1DC -  -  -  -  	
  900 D1:C1DC -  -  -  -  linrep_8_3:
  901 D1:C1DC -  -  -  -  linrep_8_31_3:
  902 D1:C1DC 00 -  -  -  	.db 0 
  903 D1:C1DD -  -  -  -  linrep_8_15_3:
  904 D1:C1DD 00 -  -  -  	.db 0 
  905 D1:C1DE -  -  -  -  linrep_8_7_3:
  906 D1:C1DE 00 -  -  -  	.db 0 
  907 D1:C1DF -  -  -  -  linrep_8_3_3:
  908 D1:C1DF 00 -  -  -  	.db 0 
  909 D1:C1E0 -  -  -  -  linrep_8_1_3:
  910 D1:C1E0 00 -  -  -  	.db 0 
  911 D1:C1E1 -  -  -  -  	
  912 D1:C1E1 -  -  -  -  linrep_8_4:
  913 D1:C1E1 -  -  -  -  linrep_8_31_4:
  914 D1:C1E1 00 -  -  -  	.db 0 
  915 D1:C1E2 -  -  -  -  linrep_8_15_4:
  916 D1:C1E2 00 -  -  -  	.db 0 
  917 D1:C1E3 -  -  -  -  linrep_8_7_4:
  918 D1:C1E3 00 -  -  -  	.db 0 
  919 D1:C1E4 -  -  -  -  linrep_8_3_4:
  920 D1:C1E4 00 -  -  -  	.db 0 
  921 D1:C1E5 -  -  -  -  linrep_8_1_4:
  922 D1:C1E5 00 -  -  -  	.db 0 
  923 D1:C1E6 -  -  -  -  	
  924 D1:C1E6 -  -  -  -  	
  925 D1:C1E6 -  -  -  -  	
  926 D1:C1E6 -  -  -  -  
  927 D1:C1E6 -  -  -  -  
  928 D1:C1E6 -  -  -  -  sine:
  929 D1:C1E6 80 -  -  -  	.db 128
  930 D1:C1E7 83 -  -  -  	.db 131
  931 D1:C1E8 86 -  -  -  	.db 134
  932 D1:C1E9 89 -  -  -  	.db 137
  933 D1:C1EA 8C -  -  -  	.db 140
  934 D1:C1EB 8F -  -  -  	.db 143
  935 D1:C1EC 92 -  -  -  	.db 146
  936 D1:C1ED 95 -  -  -  	.db 149
  937 D1:C1EE 98 -  -  -  	.db 152
  938 D1:C1EF 9C -  -  -  	.db 156
  939 D1:C1F0 9F -  -  -  	.db 159
  940 D1:C1F1 A2 -  -  -  	.db 162
  941 D1:C1F2 A5 -  -  -  	.db 165
  942 D1:C1F3 A8 -  -  -  	.db 168
  943 D1:C1F4 AB -  -  -  	.db 171
  944 D1:C1F5 AE -  -  -  	.db 174
  945 D1:C1F6 B0 -  -  -  	.db 176
  946 D1:C1F7 B3 -  -  -  	.db 179
  947 D1:C1F8 B6 -  -  -  	.db 182
  948 D1:C1F9 B9 -  -  -  	.db 185
  949 D1:C1FA BC -  -  -  	.db 188
  950 D1:C1FB BF -  -  -  	.db 191
  951 D1:C1FC C1 -  -  -  	.db 193
  952 D1:C1FD C4 -  -  -  	.db 196
  953 D1:C1FE C7 -  -  -  	.db 199
  954 D1:C1FF C9 -  -  -  	.db 201
  955 D1:C200 CC -  -  -  	.db 204
  956 D1:C201 CE -  -  -  	.db 206
  957 D1:C202 D1 -  -  -  	.db 209
  958 D1:C203 D3 -  -  -  	.db 211
  959 D1:C204 D5 -  -  -  	.db 213
  960 D1:C205 D8 -  -  -  	.db 216
  961 D1:C206 DA -  -  -  	.db 218
  962 D1:C207 DC -  -  -  	.db 220
  963 D1:C208 DE -  -  -  	.db 222
  964 D1:C209 E0 -  -  -  	.db 224
  965 D1:C20A E2 -  -  -  	.db 226
  966 D1:C20B E4 -  -  -  	.db 228
  967 D1:C20C E6 -  -  -  	.db 230
  968 D1:C20D E8 -  -  -  	.db 232
  969 D1:C20E EA -  -  -  	.db 234
  970 D1:C20F EB -  -  -  	.db 235
  971 D1:C210 ED -  -  -  	.db 237
  972 D1:C211 EF -  -  -  	.db 239
  973 D1:C212 F0 -  -  -  	.db 240
  974 D1:C213 F2 -  -  -  	.db 242
  975 D1:C214 F3 -  -  -  	.db 243
  976 D1:C215 F4 -  -  -  	.db 244
  977 D1:C216 F6 -  -  -  	.db 246
  978 D1:C217 F7 -  -  -  	.db 247
  979 D1:C218 F8 -  -  -  	.db 248
  980 D1:C219 F9 -  -  -  	.db 249
  981 D1:C21A FA -  -  -  	.db 250
  982 D1:C21B FB -  -  -  	.db 251
  983 D1:C21C FB -  -  -  	.db 251
  984 D1:C21D FC -  -  -  	.db 252
  985 D1:C21E FD -  -  -  	.db 253
  986 D1:C21F FD -  -  -  	.db 253
  987 D1:C220 FE -  -  -  	.db 254
  988 D1:C221 FE -  -  -  	.db 254
  989 D1:C222 FE -  -  -  	.db 254
  990 D1:C223 FF -  -  -  	.db 255
  991 D1:C224 FF -  -  -  	.db 255
  992 D1:C225 FF -  -  -  	.db 255
  993 D1:C226 FF -  -  -  	.db 255
  994 D1:C227 FF -  -  -  	.db 255
  995 D1:C228 FF -  -  -  	.db 255
  996 D1:C229 FF -  -  -  	.db 255
  997 D1:C22A FE -  -  -  	.db 254
  998 D1:C22B FE -  -  -  	.db 254
  999 D1:C22C FD -  -  -  	.db 253
 1000 D1:C22D FD -  -  -  	.db 253
 1001 D1:C22E FC -  -  -  	.db 252
 1002 D1:C22F FC -  -  -  	.db 252
 1003 D1:C230 FB -  -  -  	.db 251
 1004 D1:C231 FA -  -  -  	.db 250
 1005 D1:C232 F9 -  -  -  	.db 249
 1006 D1:C233 F8 -  -  -  	.db 248
 1007 D1:C234 F7 -  -  -  	.db 247
 1008 D1:C235 F6 -  -  -  	.db 246
 1009 D1:C236 F5 -  -  -  	.db 245
 1010 D1:C237 F4 -  -  -  	.db 244
 1011 D1:C238 F2 -  -  -  	.db 242
 1012 D1:C239 F1 -  -  -  	.db 241
 1013 D1:C23A EF -  -  -  	.db 239
 1014 D1:C23B EE -  -  -  	.db 238
 1015 D1:C23C EC -  -  -  	.db 236
 1016 D1:C23D EB -  -  -  	.db 235
 1017 D1:C23E E9 -  -  -  	.db 233
 1018 D1:C23F E7 -  -  -  	.db 231
 1019 D1:C240 E5 -  -  -  	.db 229
 1020 D1:C241 E3 -  -  -  	.db 227
 1021 D1:C242 E1 -  -  -  	.db 225
 1022 D1:C243 DF -  -  -  	.db 223
 1023 D1:C244 DD -  -  -  	.db 221
 1024 D1:C245 DB -  -  -  	.db 219
 1025 D1:C246 D9 -  -  -  	.db 217
 1026 D1:C247 D7 -  -  -  	.db 215
 1027 D1:C248 D4 -  -  -  	.db 212
 1028 D1:C249 D2 -  -  -  	.db 210
 1029 D1:C24A CF -  -  -  	.db 207
 1030 D1:C24B CD -  -  -  	.db 205
 1031 D1:C24C CA -  -  -  	.db 202
 1032 D1:C24D C8 -  -  -  	.db 200
 1033 D1:C24E C5 -  -  -  	.db 197
 1034 D1:C24F C3 -  -  -  	.db 195
 1035 D1:C250 C0 -  -  -  	.db 192
 1036 D1:C251 BD -  -  -  	.db 189
 1037 D1:C252 BA -  -  -  	.db 186
 1038 D1:C253 B8 -  -  -  	.db 184
 1039 D1:C254 B5 -  -  -  	.db 181
 1040 D1:C255 B2 -  -  -  	.db 178
 1041 D1:C256 AF -  -  -  	.db 175
 1042 D1:C257 AC -  -  -  	.db 172
 1043 D1:C258 A9 -  -  -  	.db 169
 1044 D1:C259 A6 -  -  -  	.db 166
 1045 D1:C25A A3 -  -  -  	.db 163
 1046 D1:C25B A0 -  -  -  	.db 160
 1047 D1:C25C 9D -  -  -  	.db 157
 1048 D1:C25D 9A -  -  -  	.db 154
 1049 D1:C25E 97 -  -  -  	.db 151
 1050 D1:C25F 94 -  -  -  	.db 148
 1051 D1:C260 91 -  -  -  	.db 145
 1052 D1:C261 8E -  -  -  	.db 142
 1053 D1:C262 8A -  -  -  	.db 138
 1054 D1:C263 87 -  -  -  	.db 135
 1055 D1:C264 84 -  -  -  	.db 132
 1056 D1:C265 81 -  -  -  	.db 129
 1057 D1:C266 7E -  -  -  	.db 126
 1058 D1:C267 7B -  -  -  	.db 123
 1059 D1:C268 78 -  -  -  	.db 120
 1060 D1:C269 75 -  -  -  	.db 117
 1061 D1:C26A 71 -  -  -  	.db 113
 1062 D1:C26B 6E -  -  -  	.db 110
 1063 D1:C26C 6B -  -  -  	.db 107
 1064 D1:C26D 68 -  -  -  	.db 104
 1065 D1:C26E 65 -  -  -  	.db 101
 1066 D1:C26F 62 -  -  -  	.db 98
 1067 D1:C270 5F -  -  -  	.db 95
 1068 D1:C271 5C -  -  -  	.db 92
 1069 D1:C272 59 -  -  -  	.db 89
 1070 D1:C273 56 -  -  -  	.db 86
 1071 D1:C274 53 -  -  -  	.db 83
 1072 D1:C275 50 -  -  -  	.db 80
 1073 D1:C276 4D -  -  -  	.db 77
 1074 D1:C277 4A -  -  -  	.db 74
 1075 D1:C278 47 -  -  -  	.db 71
 1076 D1:C279 45 -  -  -  	.db 69
 1077 D1:C27A 42 -  -  -  	.db 66
 1078 D1:C27B 3F -  -  -  	.db 63
 1079 D1:C27C 3C -  -  -  	.db 60
 1080 D1:C27D 3A -  -  -  	.db 58
 1081 D1:C27E 37 -  -  -  	.db 55
 1082 D1:C27F 35 -  -  -  	.db 53
 1083 D1:C280 32 -  -  -  	.db 50
 1084 D1:C281 30 -  -  -  	.db 48
 1085 D1:C282 2D -  -  -  	.db 45
 1086 D1:C283 2B -  -  -  	.db 43
 1087 D1:C284 28 -  -  -  	.db 40
 1088 D1:C285 26 -  -  -  	.db 38
 1089 D1:C286 24 -  -  -  	.db 36
 1090 D1:C287 22 -  -  -  	.db 34
 1091 D1:C288 20 -  -  -  	.db 32
 1092 D1:C289 1E -  -  -  	.db 30
 1093 D1:C28A 1C -  -  -  	.db 28
 1094 D1:C28B 1A -  -  -  	.db 26
 1095 D1:C28C 18 -  -  -  	.db 24
 1096 D1:C28D 16 -  -  -  	.db 22
 1097 D1:C28E 14 -  -  -  	.db 20
 1098 D1:C28F 13 -  -  -  	.db 19
 1099 D1:C290 11 -  -  -  	.db 17
 1100 D1:C291 10 -  -  -  	.db 16
 1101 D1:C292 0E -  -  -  	.db 14
 1102 D1:C293 0D -  -  -  	.db 13
 1103 D1:C294 0B -  -  -  	.db 11
 1104 D1:C295 0A -  -  -  	.db 10
 1105 D1:C296 09 -  -  -  	.db 9
 1106 D1:C297 08 -  -  -  	.db 8
 1107 D1:C298 07 -  -  -  	.db 7
 1108 D1:C299 06 -  -  -  	.db 6
 1109 D1:C29A 05 -  -  -  	.db 5
 1110 D1:C29B 04 -  -  -  	.db 4
 1111 D1:C29C 03 -  -  -  	.db 3
 1112 D1:C29D 03 -  -  -  	.db 3
 1113 D1:C29E 02 -  -  -  	.db 2
 1114 D1:C29F 02 -  -  -  	.db 2
 1115 D1:C2A0 01 -  -  -  	.db 1
 1116 D1:C2A1 01 -  -  -  	.db 1
 1117 D1:C2A2 00 -  -  -  	.db 0
 1118 D1:C2A3 00 -  -  -  	.db 0
 1119 D1:C2A4 00 -  -  -  	.db 0
 1120 D1:C2A5 00 -  -  -  	.db 0
 1121 D1:C2A6 00 -  -  -  	.db 0
 1122 D1:C2A7 00 -  -  -  	.db 0
 1123 D1:C2A8 00 -  -  -  	.db 0
 1124 D1:C2A9 01 -  -  -  	.db 1
 1125 D1:C2AA 01 -  -  -  	.db 1
 1126 D1:C2AB 01 -  -  -  	.db 1
 1127 D1:C2AC 02 -  -  -  	.db 2
 1128 D1:C2AD 02 -  -  -  	.db 2
 1129 D1:C2AE 03 -  -  -  	.db 3
 1130 D1:C2AF 04 -  -  -  	.db 4
 1131 D1:C2B0 04 -  -  -  	.db 4
 1132 D1:C2B1 05 -  -  -  	.db 5
 1133 D1:C2B2 06 -  -  -  	.db 6
 1134 D1:C2B3 07 -  -  -  	.db 7
 1135 D1:C2B4 08 -  -  -  	.db 8
 1136 D1:C2B5 09 -  -  -  	.db 9
 1137 D1:C2B6 0B -  -  -  	.db 11
 1138 D1:C2B7 0C -  -  -  	.db 12
 1139 D1:C2B8 0D -  -  -  	.db 13
 1140 D1:C2B9 0F -  -  -  	.db 15
 1141 D1:C2BA 10 -  -  -  	.db 16
 1142 D1:C2BB 12 -  -  -  	.db 18
 1143 D1:C2BC 14 -  -  -  	.db 20
 1144 D1:C2BD 15 -  -  -  	.db 21
 1145 D1:C2BE 17 -  -  -  	.db 23
 1146 D1:C2BF 19 -  -  -  	.db 25
 1147 D1:C2C0 1B -  -  -  	.db 27
 1148 D1:C2C1 1D -  -  -  	.db 29
 1149 D1:C2C2 1F -  -  -  	.db 31
 1150 D1:C2C3 21 -  -  -  	.db 33
 1151 D1:C2C4 23 -  -  -  	.db 35
 1152 D1:C2C5 25 -  -  -  	.db 37
 1153 D1:C2C6 27 -  -  -  	.db 39
 1154 D1:C2C7 2A -  -  -  	.db 42
 1155 D1:C2C8 2C -  -  -  	.db 44
 1156 D1:C2C9 2E -  -  -  	.db 46
 1157 D1:C2CA 31 -  -  -  	.db 49
 1158 D1:C2CB 33 -  -  -  	.db 51
 1159 D1:C2CC 36 -  -  -  	.db 54
 1160 D1:C2CD 38 -  -  -  	.db 56
 1161 D1:C2CE 3B -  -  -  	.db 59
 1162 D1:C2CF 3E -  -  -  	.db 62
 1163 D1:C2D0 40 -  -  -  	.db 64
 1164 D1:C2D1 43 -  -  -  	.db 67
 1165 D1:C2D2 46 -  -  -  	.db 70
 1166 D1:C2D3 49 -  -  -  	.db 73
 1167 D1:C2D4 4C -  -  -  	.db 76
 1168 D1:C2D5 4F -  -  -  	.db 79
 1169 D1:C2D6 51 -  -  -  	.db 81
 1170 D1:C2D7 54 -  -  -  	.db 84
 1171 D1:C2D8 57 -  -  -  	.db 87
 1172 D1:C2D9 5A -  -  -  	.db 90
 1173 D1:C2DA 5D -  -  -  	.db 93
 1174 D1:C2DB 60 -  -  -  	.db 96
 1175 D1:C2DC 63 -  -  -  	.db 99
 1176 D1:C2DD 67 -  -  -  	.db 103
 1177 D1:C2DE 6A -  -  -  	.db 106
 1178 D1:C2DF 6D -  -  -  	.db 109
 1179 D1:C2E0 70 -  -  -  	.db 112
 1180 D1:C2E1 73 -  -  -  	.db 115
 1181 D1:C2E2 76 -  -  -  	.db 118
 1182 D1:C2E3 79 -  -  -  	.db 121
 1183 D1:C2E4 7C -  -  -  	.db 124
 1184 D1:C2E5 7F -  -  -  	.db 127
 1185 D1:C2E6 -  -  -  -  	
Listing for file "ascent.asm"
  560 D1:C2E6 -  -  -  -  #include "animations.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\animations.txt"
    1 D1:C2E6 -  -  -  -   
    2 D1:C2E6 -  -  -  -  update_animations:
    3 D1:C2E6 -  -  -  -  	;Will update all animations every frame. Not significant performance impact
    4 D1:C2E6 -  -  -  -  	
    5 D1:C2E6 -  -  -  -  	;POSITION
    6 D1:C2E6 -  -  -  -  	;load hl with data pointer (dataframe or sprite group)
    7 D1:C2E6 -  -  -  -  	;ld bc with number of bytes to target property
    8 D1:C2E6 -  -  -  -  	;add hl bc 
    9 D1:C2E6 -  -  -  -  
   10 D1:C2E6 -  -  -  -  	;ld a with desired sine freq,phase,and amplitude 
   11 D1:C2E6 -  -  -  -  	;add a,xx ;Base value
   12 D1:C2E6 -  -  -  -  	;ld (hl),a
   13 D1:C2E6 -  -  -  -  
   14 D1:C2E6 -  -  -  -  	;7 bytes per animated value
   15 D1:C2E6 08 -  -  -  	ex af, af' ;'
   16 D1:C2E7 21 CF EA D1 	ld hl,position_animation_data
   17 D1:C2EB 7E -  -  -  	ld a,(hl)
   18 D1:C2EC 23 -  -  -  	inc hl
   19 D1:C2ED -  -  -  -  update_animation_position_loop:
   20 D1:C2ED 08 -  -  -  	ex af, af' ;'
   21 D1:C2EE ED 17 -  -  	ld de,(hl);load address of property
   22 D1:C2F0 23 -  -  -  	inc hl
   23 D1:C2F1 23 -  -  -  	inc hl 
   24 D1:C2F2 23 -  -  -  	inc hl 
   25 D1:C2F3 ED 07 -  -  	ld bc,(hl) ;address of anim curve 
   26 D1:C2F5 23 -  -  -  	inc hl 
   27 D1:C2F6 23 -  -  -  	inc hl 
   28 D1:C2F7 23 -  -  -  	inc hl
   29 D1:C2F8 0A -  -  -  	ld a,(bc) ;value of anim curve
   30 D1:C2F9 4E -  -  -  	ld c, (hl) ;base value
   31 D1:C2FA 23 -  -  -  	inc hl
   32 D1:C2FB 81 -  -  -  	add a,c
   33 D1:C2FC 12 -  -  -  	ld (de),a 
   34 D1:C2FD 08 -  -  -  	ex af, af' ;'
   35 D1:C2FE 3D -  -  -  	dec a 
   36 D1:C2FF C2 ED C2 D1 	jp nz,update_animation_position_loop
   37 D1:C303 -  -  -  -  	
   38 D1:C303 -  -  -  -  	
   39 D1:C303 -  -  -  -  	
   40 D1:C303 11 00 00 00 	ld de,0 ;clear upper byte 
   41 D1:C307 08 -  -  -  	ex af, af' ;' ;in
   42 D1:C308 21 EF EB D1 	ld hl,sprite_animation_data
   43 D1:C30C 7E -  -  -  	ld a,(hl)
   44 D1:C30D 23 -  -  -  	inc hl
   45 D1:C30E -  -  -  -  update_animation_sprite_loop:
   46 D1:C30E 08 -  -  -  	ex af, af' ;' ;out
   47 D1:C30F ED 07 -  -  	ld bc,(hl) ;animation curve address
   48 D1:C311 23 -  -  -  	inc hl 
   49 D1:C312 23 -  -  -  	inc hl
   50 D1:C313 23 -  -  -  	inc hl
   51 D1:C314 0A -  -  -  	ld a,(bc) ;anim curve value (btwn 0 and 7)
   52 D1:C315 5F -  -  -  	ld e,a 
   53 D1:C316 19 -  -  -  	add hl,de ;jump to correct place
   54 D1:C317 ED 44 -  -  	neg ;a holds -curve value
   55 D1:C319 C6 08 -  -  	add a,8; a holds amt to jump to get past sprite table
   56 D1:C31B 5F -  -  -  	ld e,a 
   57 D1:C31C 7E -  -  -  	ld a,(hl);correct sprite index 
   58 D1:C31D 19 -  -  -  	add hl,de ;to address of target property
   59 D1:C31E ED 07 -  -  	ld bc,(hl)
   60 D1:C320 02 -  -  -  	ld (bc),a 
   61 D1:C321 23 -  -  -  	inc hl 
   62 D1:C322 23 -  -  -  	inc hl 
   63 D1:C323 23 -  -  -  	inc hl
   64 D1:C324 08 -  -  -  	ex af, af' ;' ;in
   65 D1:C325 3D -  -  -  	dec a 
   66 D1:C326 C2 0E C3 D1 	jp nz,update_animation_sprite_loop
   67 D1:C32A -  -  -  -  	
   68 D1:C32A -  -  -  -  	
   69 D1:C32A -  -  -  -  	;call write_a_to_ram
   70 D1:C32A C9 -  -  -  	ret 
   71 D1:C32B -  -  -  -  	
   72 D1:C32B -  -  -  -  	
   73 D1:C32B -  -  -  -  	
   74 D1:C32B -  -  -  -  	
   75 D1:C32B -  -  -  -  	;SPRITE
   76 D1:C32B -  -  -  -  	;ld hl with base data ptr
   77 D1:C32B -  -  -  -  	;ld bc with number of bytes to target property
   78 D1:C32B -  -  -  -  	
   79 D1:C32B -  -  -  -  
   80 D1:C32B -  -  -  -  ;position_animation_data: ;7 bytes per animation
   81 D1:C32B -  -  -  -  	;.db number of animations
   82 D1:C32B -  -  -  -  	;.dl address of target property
   83 D1:C32B -  -  -  -  	;.dl address of desired animation curve value (could use lookup table to reduce memory)
   84 D1:C32B -  -  -  -  	;.db base value 
   85 D1:C32B -  -  -  -  	;...
   86 D1:C32B -  -  -  -  	;.dl MG_Data_0 + 18 
   87 D1:C32B -  -  -  -  	;.dl lin_05_3_2
   88 D1:C32B -  -  -  -  	;.db 168
   89 D1:C32B -  -  -  -  	
   90 D1:C32B -  -  -  -  	
   91 D1:C32B -  -  -  -  
   92 D1:C32B -  -  -  -  ;sprite_animation_data: ;14 bytes per animation
   93 D1:C32B -  -  -  -  	;.db number of animations
   94 D1:C32B -  -  -  -  	;.dl address of desired animation curve value (could use lookup table to reduce memory)
   95 D1:C32B -  -  -  -  	;.db sprite frame 0 
   96 D1:C32B -  -  -  -  	;.db sprite frame 1
   97 D1:C32B -  -  -  -  	;.db sprite frame 2
   98 D1:C32B -  -  -  -  	;.db sprite frame 3
   99 D1:C32B -  -  -  -  	;.db sprite frame 4
  100 D1:C32B -  -  -  -  	;.db sprite frame 5
  101 D1:C32B -  -  -  -  	;.db sprite frame 6
  102 D1:C32B -  -  -  -  	;.db sprite frame 7
  103 D1:C32B -  -  -  -  	;.dl address of target property
  104 D1:C32B -  -  -  -  	;.dl sine_2_7_1
  105 D1:C32B -  -  -  -  	;.db 70
  106 D1:C32B -  -  -  -  	;.db 71
  107 D1:C32B -  -  -  -  	;.db 72
  108 D1:C32B -  -  -  -  	;.db 73
  109 D1:C32B -  -  -  -  	;.db 74
  110 D1:C32B -  -  -  -  	;.db 71
  111 D1:C32B -  -  -  -  	;.db 70
  112 D1:C32B -  -  -  -  	;.db 71
  113 D1:C32B -  -  -  -  	;.dl SG_TreeRow3 + 5
  114 D1:C32B -  -  -  -  	
  115 D1:C32B -  -  -  -  	
  116 D1:C32B -  -  -  -  	
  117 D1:C32B -  -  -  -  	
  118 D1:C32B -  -  -  -   
  119 D1:C32B -  -  -  -   
  120 D1:C32B -  -  -  -   
Listing for file "ascent.asm"
  561 D1:C32B -  -  -  -  ;#include "levelData.txt"
  562 D1:C32B -  -  -  -  ;#include "FGLevelData.txt"
  563 D1:C32B -  -  -  -  ;#include "testing/TestingCollisionData.txt"
  564 D1:C32B -  -  -  -  
  565 D1:C32B -  -  -  -  #include "generated/BG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\BG_Data.txt"
    1 D1:C32B -  -  -  -  BG_Data_frame_table:
    2 D1:C32B CB C3 D1 -  	.dl BG_Data_0
    3 D1:C32E BD C3 D1 -  	.dl BG_Data_1
    4 D1:C331 BB C3 D1 -  	.dl BG_Data_2
    5 D1:C334 B9 C3 D1 -  	.dl BG_Data_3
    6 D1:C337 B7 C3 D1 -  	.dl BG_Data_4
    7 D1:C33A B5 C3 D1 -  	.dl BG_Data_5
    8 D1:C33D B3 C3 D1 -  	.dl BG_Data_6
    9 D1:C340 B1 C3 D1 -  	.dl BG_Data_7
   10 D1:C343 AF C3 D1 -  	.dl BG_Data_8
   11 D1:C346 AD C3 D1 -  	.dl BG_Data_9
   12 D1:C349 AB C3 D1 -  	.dl BG_Data_10
   13 D1:C34C A9 C3 D1 -  	.dl BG_Data_11
   14 D1:C34F A7 C3 D1 -  	.dl BG_Data_12
   15 D1:C352 A5 C3 D1 -  	.dl BG_Data_13
   16 D1:C355 A3 C3 D1 -  	.dl BG_Data_14
   17 D1:C358 A1 C3 D1 -  	.dl BG_Data_15
   18 D1:C35B 9F C3 D1 -  	.dl BG_Data_16
   19 D1:C35E 9D C3 D1 -  	.dl BG_Data_17
   20 D1:C361 9B C3 D1 -  	.dl BG_Data_18
   21 D1:C364 99 C3 D1 -  	.dl BG_Data_19
   22 D1:C367 97 C3 D1 -  	.dl BG_Data_20
   23 D1:C36A 95 C3 D1 -  	.dl BG_Data_21
   24 D1:C36D 93 C3 D1 -  	.dl BG_Data_22
   25 D1:C370 91 C3 D1 -  	.dl BG_Data_23
   26 D1:C373 8F C3 D1 -  	.dl BG_Data_24
   27 D1:C376 8D C3 D1 -  	.dl BG_Data_25
   28 D1:C379 8B C3 D1 -  	.dl BG_Data_26
   29 D1:C37C 89 C3 D1 -  	.dl BG_Data_27
   30 D1:C37F 87 C3 D1 -  	.dl BG_Data_28
   31 D1:C382 85 C3 D1 -  	.dl BG_Data_29
   32 D1:C385 -  -  -  -  
   33 D1:C385 -  -  -  -  
   34 D1:C385 -  -  -  -  
   35 D1:C385 -  -  -  -  BG_Data_29:
   36 D1:C385 00 -  -  -  	.db 0
   37 D1:C386 00 -  -  -  	.db 0
   38 D1:C387 -  -  -  -  
   39 D1:C387 -  -  -  -  BG_Data_28:
   40 D1:C387 00 -  -  -  	.db 0
   41 D1:C388 00 -  -  -  	.db 0
   42 D1:C389 -  -  -  -  
   43 D1:C389 -  -  -  -  BG_Data_27:
   44 D1:C389 00 -  -  -  	.db 0
   45 D1:C38A 00 -  -  -  	.db 0
   46 D1:C38B -  -  -  -  
   47 D1:C38B -  -  -  -  BG_Data_26:
   48 D1:C38B 00 -  -  -  	.db 0
   49 D1:C38C 00 -  -  -  	.db 0
   50 D1:C38D -  -  -  -  
   51 D1:C38D -  -  -  -  BG_Data_25:
   52 D1:C38D 00 -  -  -  	.db 0
   53 D1:C38E 00 -  -  -  	.db 0
   54 D1:C38F -  -  -  -  
   55 D1:C38F -  -  -  -  BG_Data_24:
   56 D1:C38F 00 -  -  -  	.db 0
   57 D1:C390 00 -  -  -  	.db 0
   58 D1:C391 -  -  -  -  
   59 D1:C391 -  -  -  -  BG_Data_23:
   60 D1:C391 00 -  -  -  	.db 0
   61 D1:C392 00 -  -  -  	.db 0
   62 D1:C393 -  -  -  -  
   63 D1:C393 -  -  -  -  BG_Data_22:
   64 D1:C393 00 -  -  -  	.db 0
   65 D1:C394 00 -  -  -  	.db 0
   66 D1:C395 -  -  -  -  
   67 D1:C395 -  -  -  -  BG_Data_21:
   68 D1:C395 00 -  -  -  	.db 0
   69 D1:C396 00 -  -  -  	.db 0
   70 D1:C397 -  -  -  -  
   71 D1:C397 -  -  -  -  BG_Data_20:
   72 D1:C397 00 -  -  -  	.db 0
   73 D1:C398 00 -  -  -  	.db 0
   74 D1:C399 -  -  -  -  
   75 D1:C399 -  -  -  -  BG_Data_19:
   76 D1:C399 00 -  -  -  	.db 0
   77 D1:C39A 00 -  -  -  	.db 0
   78 D1:C39B -  -  -  -  
   79 D1:C39B -  -  -  -  BG_Data_18:
   80 D1:C39B 00 -  -  -  	.db 0
   81 D1:C39C 00 -  -  -  	.db 0
   82 D1:C39D -  -  -  -  
   83 D1:C39D -  -  -  -  BG_Data_17:
   84 D1:C39D 00 -  -  -  	.db 0
   85 D1:C39E 00 -  -  -  	.db 0
   86 D1:C39F -  -  -  -  
   87 D1:C39F -  -  -  -  BG_Data_16:
   88 D1:C39F 00 -  -  -  	.db 0
   89 D1:C3A0 00 -  -  -  	.db 0
   90 D1:C3A1 -  -  -  -  
   91 D1:C3A1 -  -  -  -  BG_Data_15:
   92 D1:C3A1 00 -  -  -  	.db 0
   93 D1:C3A2 00 -  -  -  	.db 0
   94 D1:C3A3 -  -  -  -  
   95 D1:C3A3 -  -  -  -  BG_Data_14:
   96 D1:C3A3 00 -  -  -  	.db 0
   97 D1:C3A4 00 -  -  -  	.db 0
   98 D1:C3A5 -  -  -  -  
   99 D1:C3A5 -  -  -  -  BG_Data_13:
  100 D1:C3A5 00 -  -  -  	.db 0
  101 D1:C3A6 00 -  -  -  	.db 0
  102 D1:C3A7 -  -  -  -  
  103 D1:C3A7 -  -  -  -  BG_Data_12:
  104 D1:C3A7 00 -  -  -  	.db 0
  105 D1:C3A8 00 -  -  -  	.db 0
  106 D1:C3A9 -  -  -  -  
  107 D1:C3A9 -  -  -  -  BG_Data_11:
  108 D1:C3A9 00 -  -  -  	.db 0
  109 D1:C3AA 00 -  -  -  	.db 0
  110 D1:C3AB -  -  -  -  
  111 D1:C3AB -  -  -  -  BG_Data_10:
  112 D1:C3AB 00 -  -  -  	.db 0
  113 D1:C3AC 00 -  -  -  	.db 0
  114 D1:C3AD -  -  -  -  
  115 D1:C3AD -  -  -  -  BG_Data_9:
  116 D1:C3AD 00 -  -  -  	.db 0
  117 D1:C3AE 00 -  -  -  	.db 0
  118 D1:C3AF -  -  -  -  
  119 D1:C3AF -  -  -  -  BG_Data_8:
  120 D1:C3AF 00 -  -  -  	.db 0
  121 D1:C3B0 00 -  -  -  	.db 0
  122 D1:C3B1 -  -  -  -  
  123 D1:C3B1 -  -  -  -  BG_Data_7:
  124 D1:C3B1 00 -  -  -  	.db 0
  125 D1:C3B2 00 -  -  -  	.db 0
  126 D1:C3B3 -  -  -  -  
  127 D1:C3B3 -  -  -  -  BG_Data_6:
  128 D1:C3B3 00 -  -  -  	.db 0
  129 D1:C3B4 00 -  -  -  	.db 0
  130 D1:C3B5 -  -  -  -  
  131 D1:C3B5 -  -  -  -  BG_Data_5:
  132 D1:C3B5 00 -  -  -  	.db 0
  133 D1:C3B6 00 -  -  -  	.db 0
  134 D1:C3B7 -  -  -  -  
  135 D1:C3B7 -  -  -  -  BG_Data_4:
  136 D1:C3B7 00 -  -  -  	.db 0
  137 D1:C3B8 00 -  -  -  	.db 0
  138 D1:C3B9 -  -  -  -  
  139 D1:C3B9 -  -  -  -  BG_Data_3:
  140 D1:C3B9 00 -  -  -  	.db 0
  141 D1:C3BA 00 -  -  -  	.db 0
  142 D1:C3BB -  -  -  -  
  143 D1:C3BB -  -  -  -  BG_Data_2:
  144 D1:C3BB 00 -  -  -  	.db 0
  145 D1:C3BC 00 -  -  -  	.db 0
  146 D1:C3BD -  -  -  -  
  147 D1:C3BD -  -  -  -  BG_Data_1:
  148 D1:C3BD 00 -  -  -  	.db 0
  149 D1:C3BE 03 -  -  -  	.db 3
  150 D1:C3BF 22 FF 7D 1B 	.db 34, 255, 125, 27  ;SG_Cloud1
  151 D1:C3C3 70 FF 76 1B 	.db 112, 255, 118, 27  ;SG_Cloud1
  152 D1:C3C7 A3 FF 15 1B 	.db 163, 255, 21, 27  ;SG_Cloud1
  153 D1:C3CB -  -  -  -  
  154 D1:C3CB -  -  -  -  BG_Data_0:
  155 D1:C3CB 00 -  -  -  	.db 0
  156 D1:C3CC 17 -  -  -  	.db 23
  157 D1:C3CD 55 FF 00 18 	.db 85, 255, 0, 24  ;SG_DarkGroundChunk
  158 D1:C3D1 4F FF 88 18 	.db 79, 255, 136, 24  ;SG_DarkGroundChunk
  159 D1:C3D5 55 FF 18 18 	.db 85, 255, 24, 24  ;SG_DarkGroundChunk
  160 D1:C3D9 50 FF 70 18 	.db 80, 255, 112, 24  ;SG_DarkGroundChunk
  161 D1:C3DD 81 FF 6F 1A 	.db 129, 255, 111, 26  ;SG_BGTree2
  162 D1:C3E1 81 FF 8E 1A 	.db 129, 255, 142, 26  ;SG_BGTree2
  163 D1:C3E5 88 FF 16 1A 	.db 136, 255, 22, 26  ;SG_BGTree2
  164 D1:C3E9 8D FF 0B 1A 	.db 141, 255, 11, 26  ;SG_BGTree2
  165 D1:C3ED 7C FF 86 19 	.db 124, 255, 134, 25  ;SG_BGTree1
  166 D1:C3F1 80 FF 80 19 	.db 128, 255, 128, 25  ;SG_BGTree1
  167 D1:C3F5 7F FF 77 19 	.db 127, 255, 119, 25  ;SG_BGTree1
  168 D1:C3F9 81 FF 1F 19 	.db 129, 255, 31, 25  ;SG_BGTree1
  169 D1:C3FD 26 FF 70 07 	.db 38, 255, 112, 7  ;SG_GroundChunk2
  170 D1:C401 84 FF 7F 1A 	.db 132, 255, 127, 26  ;SG_BGTree2
  171 D1:C405 26 FF 88 08 	.db 38, 255, 136, 8  ;SG_GroundChunk1
  172 D1:C409 2A FF 00 07 	.db 42, 255, 0, 7  ;SG_GroundChunk2
  173 D1:C40D 2D FF 18 08 	.db 45, 255, 24, 8  ;SG_GroundChunk1
  174 D1:C411 41 FF 18 07 	.db 65, 255, 24, 7  ;SG_GroundChunk2
  175 D1:C415 3C FF 88 07 	.db 60, 255, 136, 7  ;SG_GroundChunk2
  176 D1:C419 3D FF 70 08 	.db 61, 255, 112, 8  ;SG_GroundChunk1
  177 D1:C41D 43 FF 00 08 	.db 67, 255, 0, 8  ;SG_GroundChunk1
  178 D1:C421 84 FF 00 19 	.db 132, 255, 0, 25  ;SG_BGTree1
  179 D1:C425 F2 FF 02 1B 	.db 242, 255, 2, 27  ;SG_Cloud1
  180 D1:C429 -  -  -  -  
  181 D1:C429 -  -  -  -  
  182 D1:C429 -  -  -  -  
Listing for file "ascent.asm"
  566 D1:C429 -  -  -  -  #include "generated/MG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\MG_Data.txt"
    1 D1:C429 -  -  -  -  MG_Data_frame_table:
    2 D1:C429 35 C6 D1 -  	.dl MG_Data_0
    3 D1:C42C DF C5 D1 -  	.dl MG_Data_1
    4 D1:C42F 95 C5 D1 -  	.dl MG_Data_2
    5 D1:C432 47 C5 D1 -  	.dl MG_Data_3
    6 D1:C435 F5 C4 D1 -  	.dl MG_Data_4
    7 D1:C438 B3 C4 D1 -  	.dl MG_Data_5
    8 D1:C43B B1 C4 D1 -  	.dl MG_Data_6
    9 D1:C43E AF C4 D1 -  	.dl MG_Data_7
   10 D1:C441 AD C4 D1 -  	.dl MG_Data_8
   11 D1:C444 AB C4 D1 -  	.dl MG_Data_9
   12 D1:C447 A9 C4 D1 -  	.dl MG_Data_10
   13 D1:C44A A7 C4 D1 -  	.dl MG_Data_11
   14 D1:C44D A5 C4 D1 -  	.dl MG_Data_12
   15 D1:C450 A3 C4 D1 -  	.dl MG_Data_13
   16 D1:C453 A1 C4 D1 -  	.dl MG_Data_14
   17 D1:C456 9F C4 D1 -  	.dl MG_Data_15
   18 D1:C459 9D C4 D1 -  	.dl MG_Data_16
   19 D1:C45C 9B C4 D1 -  	.dl MG_Data_17
   20 D1:C45F 99 C4 D1 -  	.dl MG_Data_18
   21 D1:C462 97 C4 D1 -  	.dl MG_Data_19
   22 D1:C465 95 C4 D1 -  	.dl MG_Data_20
   23 D1:C468 93 C4 D1 -  	.dl MG_Data_21
   24 D1:C46B 91 C4 D1 -  	.dl MG_Data_22
   25 D1:C46E 8F C4 D1 -  	.dl MG_Data_23
   26 D1:C471 8D C4 D1 -  	.dl MG_Data_24
   27 D1:C474 8B C4 D1 -  	.dl MG_Data_25
   28 D1:C477 89 C4 D1 -  	.dl MG_Data_26
   29 D1:C47A 87 C4 D1 -  	.dl MG_Data_27
   30 D1:C47D 85 C4 D1 -  	.dl MG_Data_28
   31 D1:C480 83 C4 D1 -  	.dl MG_Data_29
   32 D1:C483 -  -  -  -  
   33 D1:C483 -  -  -  -  
   34 D1:C483 -  -  -  -  
   35 D1:C483 -  -  -  -  MG_Data_29:
   36 D1:C483 00 -  -  -  	.db 0
   37 D1:C484 00 -  -  -  	.db 0
   38 D1:C485 -  -  -  -  
   39 D1:C485 -  -  -  -  MG_Data_28:
   40 D1:C485 00 -  -  -  	.db 0
   41 D1:C486 00 -  -  -  	.db 0
   42 D1:C487 -  -  -  -  
   43 D1:C487 -  -  -  -  MG_Data_27:
   44 D1:C487 00 -  -  -  	.db 0
   45 D1:C488 00 -  -  -  	.db 0
   46 D1:C489 -  -  -  -  
   47 D1:C489 -  -  -  -  MG_Data_26:
   48 D1:C489 00 -  -  -  	.db 0
   49 D1:C48A 00 -  -  -  	.db 0
   50 D1:C48B -  -  -  -  
   51 D1:C48B -  -  -  -  MG_Data_25:
   52 D1:C48B 00 -  -  -  	.db 0
   53 D1:C48C 00 -  -  -  	.db 0
   54 D1:C48D -  -  -  -  
   55 D1:C48D -  -  -  -  MG_Data_24:
   56 D1:C48D 00 -  -  -  	.db 0
   57 D1:C48E 00 -  -  -  	.db 0
   58 D1:C48F -  -  -  -  
   59 D1:C48F -  -  -  -  MG_Data_23:
   60 D1:C48F 00 -  -  -  	.db 0
   61 D1:C490 00 -  -  -  	.db 0
   62 D1:C491 -  -  -  -  
   63 D1:C491 -  -  -  -  MG_Data_22:
   64 D1:C491 00 -  -  -  	.db 0
   65 D1:C492 00 -  -  -  	.db 0
   66 D1:C493 -  -  -  -  
   67 D1:C493 -  -  -  -  MG_Data_21:
   68 D1:C493 00 -  -  -  	.db 0
   69 D1:C494 00 -  -  -  	.db 0
   70 D1:C495 -  -  -  -  
   71 D1:C495 -  -  -  -  MG_Data_20:
   72 D1:C495 00 -  -  -  	.db 0
   73 D1:C496 00 -  -  -  	.db 0
   74 D1:C497 -  -  -  -  
   75 D1:C497 -  -  -  -  MG_Data_19:
   76 D1:C497 00 -  -  -  	.db 0
   77 D1:C498 00 -  -  -  	.db 0
   78 D1:C499 -  -  -  -  
   79 D1:C499 -  -  -  -  MG_Data_18:
   80 D1:C499 00 -  -  -  	.db 0
   81 D1:C49A 00 -  -  -  	.db 0
   82 D1:C49B -  -  -  -  
   83 D1:C49B -  -  -  -  MG_Data_17:
   84 D1:C49B 00 -  -  -  	.db 0
   85 D1:C49C 00 -  -  -  	.db 0
   86 D1:C49D -  -  -  -  
   87 D1:C49D -  -  -  -  MG_Data_16:
   88 D1:C49D 00 -  -  -  	.db 0
   89 D1:C49E 00 -  -  -  	.db 0
   90 D1:C49F -  -  -  -  
   91 D1:C49F -  -  -  -  MG_Data_15:
   92 D1:C49F 00 -  -  -  	.db 0
   93 D1:C4A0 00 -  -  -  	.db 0
   94 D1:C4A1 -  -  -  -  
   95 D1:C4A1 -  -  -  -  MG_Data_14:
   96 D1:C4A1 00 -  -  -  	.db 0
   97 D1:C4A2 00 -  -  -  	.db 0
   98 D1:C4A3 -  -  -  -  
   99 D1:C4A3 -  -  -  -  MG_Data_13:
  100 D1:C4A3 00 -  -  -  	.db 0
  101 D1:C4A4 00 -  -  -  	.db 0
  102 D1:C4A5 -  -  -  -  
  103 D1:C4A5 -  -  -  -  MG_Data_12:
  104 D1:C4A5 00 -  -  -  	.db 0
  105 D1:C4A6 00 -  -  -  	.db 0
  106 D1:C4A7 -  -  -  -  
  107 D1:C4A7 -  -  -  -  MG_Data_11:
  108 D1:C4A7 00 -  -  -  	.db 0
  109 D1:C4A8 00 -  -  -  	.db 0
  110 D1:C4A9 -  -  -  -  
  111 D1:C4A9 -  -  -  -  MG_Data_10:
  112 D1:C4A9 00 -  -  -  	.db 0
  113 D1:C4AA 00 -  -  -  	.db 0
  114 D1:C4AB -  -  -  -  
  115 D1:C4AB -  -  -  -  MG_Data_9:
  116 D1:C4AB 00 -  -  -  	.db 0
  117 D1:C4AC 00 -  -  -  	.db 0
  118 D1:C4AD -  -  -  -  
  119 D1:C4AD -  -  -  -  MG_Data_8:
  120 D1:C4AD 00 -  -  -  	.db 0
  121 D1:C4AE 00 -  -  -  	.db 0
  122 D1:C4AF -  -  -  -  
  123 D1:C4AF -  -  -  -  MG_Data_7:
  124 D1:C4AF 00 -  -  -  	.db 0
  125 D1:C4B0 00 -  -  -  	.db 0
  126 D1:C4B1 -  -  -  -  
  127 D1:C4B1 -  -  -  -  MG_Data_6:
  128 D1:C4B1 00 -  -  -  	.db 0
  129 D1:C4B2 00 -  -  -  	.db 0
  130 D1:C4B3 -  -  -  -  
  131 D1:C4B3 -  -  -  -  MG_Data_5:
  132 D1:C4B3 00 -  -  -  	.db 0
  133 D1:C4B4 10 -  -  -  	.db 16
  134 D1:C4B5 0F FF 1C 0C 	.db 15, 255, 28, 12  ;SG_TreeRow1
  135 D1:C4B9 FF FF 13 0C 	.db 255, 255, 19, 12  ;SG_TreeRow1
  136 D1:C4BD 9F FF 16 0C 	.db 159, 255, 22, 12  ;SG_TreeRow1
  137 D1:C4C1 1F FF 1B 0B 	.db 31, 255, 27, 11  ;SG_TreeRow5
  138 D1:C4C5 BF FF 14 0D 	.db 191, 255, 20, 13  ;SG_TreeRow2
  139 D1:C4C9 EF FF 14 0B 	.db 239, 255, 20, 11  ;SG_TreeRow5
  140 D1:C4CD 7F FF 18 0D 	.db 127, 255, 24, 13  ;SG_TreeRow2
  141 D1:C4D1 DF FF 13 0E 	.db 223, 255, 19, 14  ;SG_TreeRow4
  142 D1:C4D5 CF FF 13 0E 	.db 207, 255, 19, 14  ;SG_TreeRow4
  143 D1:C4D9 AF FF 15 0A 	.db 175, 255, 21, 10  ;SG_TreeRow3
  144 D1:C4DD 6F FF 19 0D 	.db 111, 255, 25, 13  ;SG_TreeRow2
  145 D1:C4E1 3F FF 19 0D 	.db 63, 255, 25, 13  ;SG_TreeRow2
  146 D1:C4E5 5F FF 18 0A 	.db 95, 255, 24, 10  ;SG_TreeRow3
  147 D1:C4E9 2F FF 1A 0E 	.db 47, 255, 26, 14  ;SG_TreeRow4
  148 D1:C4ED 8F FF 17 0B 	.db 143, 255, 23, 11  ;SG_TreeRow5
  149 D1:C4F1 4F FF 19 0B 	.db 79, 255, 25, 11  ;SG_TreeRow5
  150 D1:C4F5 -  -  -  -  
  151 D1:C4F5 -  -  -  -  MG_Data_4:
  152 D1:C4F5 00 -  -  -  	.db 0
  153 D1:C4F6 14 -  -  -  	.db 20
  154 D1:C4F7 0F FF 29 0C 	.db 15, 255, 41, 12  ;SG_TreeRow1
  155 D1:C4FB 4F FF 26 0B 	.db 79, 255, 38, 11  ;SG_TreeRow5
  156 D1:C4FF 8F FF 22 0B 	.db 143, 255, 34, 11  ;SG_TreeRow5
  157 D1:C503 3F FF 27 0E 	.db 63, 255, 39, 14  ;SG_TreeRow4
  158 D1:C507 2F FF 27 0E 	.db 47, 255, 39, 14  ;SG_TreeRow4
  159 D1:C50B 6F FF 24 0D 	.db 111, 255, 36, 13  ;SG_TreeRow2
  160 D1:C50F 9F FF 21 0E 	.db 159, 255, 33, 14  ;SG_TreeRow4
  161 D1:C513 CF FF 1E 0B 	.db 207, 255, 30, 11  ;SG_TreeRow5
  162 D1:C517 BF FF 1F 0E 	.db 191, 255, 31, 14  ;SG_TreeRow4
  163 D1:C51B FF FF 1D 0A 	.db 255, 255, 29, 10  ;SG_TreeRow3
  164 D1:C51F 1F FF 28 0A 	.db 31, 255, 40, 10  ;SG_TreeRow3
  165 D1:C523 5F FF 25 0C 	.db 95, 255, 37, 12  ;SG_TreeRow1
  166 D1:C527 7F FF 23 0C 	.db 127, 255, 35, 12  ;SG_TreeRow1
  167 D1:C52B AF FF 20 0C 	.db 175, 255, 32, 12  ;SG_TreeRow1
  168 D1:C52F EF FF 1E 0C 	.db 239, 255, 30, 12  ;SG_TreeRow1
  169 D1:C533 DF FF 1F 0D 	.db 223, 255, 31, 13  ;SG_TreeRow2
  170 D1:C537 CF FF 65 04 	.db 207, 255, 101, 4  ;SG_Branch5
  171 D1:C53B 2E FF 00 0F 	.db 46, 255, 0, 15  ;SG_Branch1
  172 D1:C53F C3 FF 54 16 	.db 195, 255, 84, 22  ;SG_BranchBase4
  173 D1:C543 E4 FF 69 04 	.db 228, 255, 105, 4  ;SG_Branch5
  174 D1:C547 -  -  -  -  
  175 D1:C547 -  -  -  -  MG_Data_3:
  176 D1:C547 00 -  -  -  	.db 0
  177 D1:C548 13 -  -  -  	.db 19
  178 D1:C549 0F FF 28 0B 	.db 15, 255, 40, 11  ;SG_TreeRow5
  179 D1:C54D 5F FF 26 0E 	.db 95, 255, 38, 14  ;SG_TreeRow4
  180 D1:C551 6F FF 25 0B 	.db 111, 255, 37, 11  ;SG_TreeRow5
  181 D1:C555 2F FF 28 0D 	.db 47, 255, 40, 13  ;SG_TreeRow2
  182 D1:C559 4F FF 27 0A 	.db 79, 255, 39, 10  ;SG_TreeRow3
  183 D1:C55D 7F FF 26 0A 	.db 127, 255, 38, 10  ;SG_TreeRow3
  184 D1:C561 8F FF 27 0D 	.db 143, 255, 39, 13  ;SG_TreeRow2
  185 D1:C565 BF FF 29 0D 	.db 191, 255, 41, 13  ;SG_TreeRow2
  186 D1:C569 9F FF 27 0A 	.db 159, 255, 39, 10  ;SG_TreeRow3
  187 D1:C56D EF FF 2A 0E 	.db 239, 255, 42, 14  ;SG_TreeRow4
  188 D1:C571 FF FF 2A 0A 	.db 255, 255, 42, 10  ;SG_TreeRow3
  189 D1:C575 1F FF 28 0A 	.db 31, 255, 40, 10  ;SG_TreeRow3
  190 D1:C579 3F FF 28 0C 	.db 63, 255, 40, 12  ;SG_TreeRow1
  191 D1:C57D AF FF 28 0C 	.db 175, 255, 40, 12  ;SG_TreeRow1
  192 D1:C581 CF FF 29 0C 	.db 207, 255, 41, 12  ;SG_TreeRow1
  193 D1:C585 DF FF 2A 0B 	.db 223, 255, 42, 11  ;SG_TreeRow5
  194 D1:C589 87 FF 02 01 	.db 135, 255, 2, 1  ;SG_Branch3
  195 D1:C58D 5D FF 6C 05 	.db 93, 255, 108, 5  ;SG_Branch6
  196 D1:C591 95 FF 1E 15 	.db 149, 255, 30, 21  ;SG_BranchBase2
  197 D1:C595 -  -  -  -  
  198 D1:C595 -  -  -  -  MG_Data_2:
  199 D1:C595 00 -  -  -  	.db 0
  200 D1:C596 12 -  -  -  	.db 18
  201 D1:C597 0F FF 22 0A 	.db 15, 255, 34, 10  ;SG_TreeRow3
  202 D1:C59B 4F FF 26 0E 	.db 79, 255, 38, 14  ;SG_TreeRow4
  203 D1:C59F 3F FF 25 0B 	.db 63, 255, 37, 11  ;SG_TreeRow5
  204 D1:C5A3 6F FF 28 0A 	.db 111, 255, 40, 10  ;SG_TreeRow3
  205 D1:C5A7 8F FF 2A 0B 	.db 143, 255, 42, 11  ;SG_TreeRow5
  206 D1:C5AB 9F FF 2B 0E 	.db 159, 255, 43, 14  ;SG_TreeRow4
  207 D1:C5AF AF FF 2A 0B 	.db 175, 255, 42, 11  ;SG_TreeRow5
  208 D1:C5B3 1F FF 23 0C 	.db 31, 255, 35, 12  ;SG_TreeRow1
  209 D1:C5B7 5F FF 27 0D 	.db 95, 255, 39, 13  ;SG_TreeRow2
  210 D1:C5BB CF FF 2A 0D 	.db 207, 255, 42, 13  ;SG_TreeRow2
  211 D1:C5BF DF FF 29 0E 	.db 223, 255, 41, 14  ;SG_TreeRow4
  212 D1:C5C3 FF FF 28 0A 	.db 255, 255, 40, 10  ;SG_TreeRow3
  213 D1:C5C7 2F FF 24 0C 	.db 47, 255, 36, 12  ;SG_TreeRow1
  214 D1:C5CB 7F FF 29 0C 	.db 127, 255, 41, 12  ;SG_TreeRow1
  215 D1:C5CF BF FF 2A 0C 	.db 191, 255, 42, 12  ;SG_TreeRow1
  216 D1:C5D3 EF FF 28 0C 	.db 239, 255, 40, 12  ;SG_TreeRow1
  217 D1:C5D7 78 FF 60 14 	.db 120, 255, 96, 20  ;SG_BranchBase3
  218 D1:C5DB A8 FF 72 02 	.db 168, 255, 114, 2  ;SG_Branch7
  219 D1:C5DF -  -  -  -  
  220 D1:C5DF -  -  -  -  MG_Data_1:
  221 D1:C5DF 00 -  -  -  	.db 0
  222 D1:C5E0 15 -  -  -  	.db 21
  223 D1:C5E1 0F FF 21 0B 	.db 15, 255, 33, 11  ;SG_TreeRow5
  224 D1:C5E5 5F FF 1F 0B 	.db 95, 255, 31, 11  ;SG_TreeRow5
  225 D1:C5E9 AF FF 1F 0B 	.db 175, 255, 31, 11  ;SG_TreeRow5
  226 D1:C5ED 2F FF 20 0E 	.db 47, 255, 32, 14  ;SG_TreeRow4
  227 D1:C5F1 3F FF 1F 0D 	.db 63, 255, 31, 13  ;SG_TreeRow2
  228 D1:C5F5 6F FF 1F 0D 	.db 111, 255, 31, 13  ;SG_TreeRow2
  229 D1:C5F9 9F FF 1F 0E 	.db 159, 255, 31, 14  ;SG_TreeRow4
  230 D1:C5FD DF FF 21 0E 	.db 223, 255, 33, 14  ;SG_TreeRow4
  231 D1:C601 7F FF 1F 0A 	.db 127, 255, 31, 10  ;SG_TreeRow3
  232 D1:C605 FF FF 22 0E 	.db 255, 255, 34, 14  ;SG_TreeRow4
  233 D1:C609 1F FF 20 0A 	.db 31, 255, 32, 10  ;SG_TreeRow3
  234 D1:C60D 4F FF 1F 0C 	.db 79, 255, 31, 12  ;SG_TreeRow1
  235 D1:C611 8F FF 1F 0C 	.db 143, 255, 31, 12  ;SG_TreeRow1
  236 D1:C615 BF FF 20 0C 	.db 191, 255, 32, 12  ;SG_TreeRow1
  237 D1:C619 CF FF 20 0C 	.db 207, 255, 32, 12  ;SG_TreeRow1
  238 D1:C61D EF FF 21 0A 	.db 239, 255, 33, 10  ;SG_TreeRow3
  239 D1:C621 A3 FF 52 13 	.db 163, 255, 82, 19  ;SG_Vines5
  240 D1:C625 D9 FF 60 02 	.db 217, 255, 96, 2  ;SG_Branch7
  241 D1:C629 AA FF 49 14 	.db 170, 255, 73, 20  ;SG_BranchBase3
  242 D1:C62D EF FF 06 06 	.db 239, 255, 6, 6  ;SG_Branch2
  243 D1:C631 A3 FF 4A 10 	.db 163, 255, 74, 16  ;SG_Vines2
  244 D1:C635 -  -  -  -  
  245 D1:C635 -  -  -  -  MG_Data_0:
  246 D1:C635 00 -  -  -  	.db 0
  247 D1:C636 21 -  -  -  	.db 33
  248 D1:C637 39 FF 88 07 	.db 57, 255, 136, 7  ;SG_GroundChunk2
  249 D1:C63B 3B FF 72 08 	.db 59, 255, 114, 8  ;SG_GroundChunk1
  250 D1:C63F 3B FF 16 07 	.db 59, 255, 22, 7  ;SG_GroundChunk2
  251 D1:C643 3C FF 00 08 	.db 60, 255, 0, 8  ;SG_GroundChunk1
  252 D1:C647 CF FF 1F 11 	.db 207, 255, 31, 17  ;SG_Vines6
  253 D1:C64B FF FF 22 0D 	.db 255, 255, 34, 13  ;SG_TreeRow2
  254 D1:C64F EF FF 23 0A 	.db 239, 255, 35, 10  ;SG_TreeRow3
  255 D1:C653 DF FF 22 0C 	.db 223, 255, 34, 12  ;SG_TreeRow1
  256 D1:C657 CF FF 23 0B 	.db 207, 255, 35, 11  ;SG_TreeRow5
  257 D1:C65B BF FF 22 0C 	.db 191, 255, 34, 12  ;SG_TreeRow1
  258 D1:C65F AF FF 22 0E 	.db 175, 255, 34, 14  ;SG_TreeRow4
  259 D1:C663 9F FF 22 0D 	.db 159, 255, 34, 13  ;SG_TreeRow2
  260 D1:C667 8F FF 23 0C 	.db 143, 255, 35, 12  ;SG_TreeRow1
  261 D1:C66B 7F FF 23 0A 	.db 127, 255, 35, 10  ;SG_TreeRow3
  262 D1:C66F 6F FF 23 0B 	.db 111, 255, 35, 11  ;SG_TreeRow5
  263 D1:C673 5F FF 22 0D 	.db 95, 255, 34, 13  ;SG_TreeRow2
  264 D1:C677 4F FF 22 0C 	.db 79, 255, 34, 12  ;SG_TreeRow1
  265 D1:C67B 3F FF 22 0B 	.db 63, 255, 34, 11  ;SG_TreeRow5
  266 D1:C67F 2F FF 22 0A 	.db 47, 255, 34, 10  ;SG_TreeRow3
  267 D1:C683 35 FF 12 09 	.db 53, 255, 18, 9  ;SG_Root1
  268 D1:C687 33 FF 86 09 	.db 51, 255, 134, 9  ;SG_Root1
  269 D1:C68B 3B FF 79 09 	.db 59, 255, 121, 9  ;SG_Root1
  270 D1:C68F 1F FF 88 07 	.db 31, 255, 136, 7  ;SG_GroundChunk2
  271 D1:C693 22 FF 78 07 	.db 34, 255, 120, 7  ;SG_GroundChunk2
  272 D1:C697 25 FF 60 08 	.db 37, 255, 96, 8  ;SG_GroundChunk1
  273 D1:C69B 24 FF 48 07 	.db 36, 255, 72, 7  ;SG_GroundChunk2
  274 D1:C69F 22 FF 00 07 	.db 34, 255, 0, 7  ;SG_GroundChunk2
  275 D1:C6A3 25 FF 30 08 	.db 37, 255, 48, 8  ;SG_GroundChunk1
  276 D1:C6A7 E9 FF 00 0F 	.db 233, 255, 0, 15  ;SG_Branch1
  277 D1:C6AB 23 FF 18 08 	.db 35, 255, 24, 8  ;SG_GroundChunk1
  278 D1:C6AF D1 FF 49 12 	.db 209, 255, 73, 18  ;SG_Vines7
  279 D1:C6B3 CF FF 17 10 	.db 207, 255, 23, 16  ;SG_Vines2
  280 D1:C6B7 DB 10 74 51 	.db 219, 16, 116, 81  ;Vine5_Slow
  281 D1:C6BB -  -  -  -  
  282 D1:C6BB -  -  -  -  
  283 D1:C6BB -  -  -  -  
Listing for file "ascent.asm"
  567 D1:C6BB -  -  -  -  #include "generated/MG2_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\MG2_Data.txt"
    1 D1:C6BB -  -  -  -  MG2_Data_frame_table:
    2 D1:C6BB 97 C7 D1 -  	.dl MG2_Data_0
    3 D1:C6BE 6D C7 D1 -  	.dl MG2_Data_1
    4 D1:C6C1 4F C7 D1 -  	.dl MG2_Data_2
    5 D1:C6C4 49 C7 D1 -  	.dl MG2_Data_3
    6 D1:C6C7 47 C7 D1 -  	.dl MG2_Data_4
    7 D1:C6CA 45 C7 D1 -  	.dl MG2_Data_5
    8 D1:C6CD 43 C7 D1 -  	.dl MG2_Data_6
    9 D1:C6D0 41 C7 D1 -  	.dl MG2_Data_7
   10 D1:C6D3 3F C7 D1 -  	.dl MG2_Data_8
   11 D1:C6D6 3D C7 D1 -  	.dl MG2_Data_9
   12 D1:C6D9 3B C7 D1 -  	.dl MG2_Data_10
   13 D1:C6DC 39 C7 D1 -  	.dl MG2_Data_11
   14 D1:C6DF 37 C7 D1 -  	.dl MG2_Data_12
   15 D1:C6E2 35 C7 D1 -  	.dl MG2_Data_13
   16 D1:C6E5 33 C7 D1 -  	.dl MG2_Data_14
   17 D1:C6E8 31 C7 D1 -  	.dl MG2_Data_15
   18 D1:C6EB 2F C7 D1 -  	.dl MG2_Data_16
   19 D1:C6EE 2D C7 D1 -  	.dl MG2_Data_17
   20 D1:C6F1 2B C7 D1 -  	.dl MG2_Data_18
   21 D1:C6F4 29 C7 D1 -  	.dl MG2_Data_19
   22 D1:C6F7 27 C7 D1 -  	.dl MG2_Data_20
   23 D1:C6FA 25 C7 D1 -  	.dl MG2_Data_21
   24 D1:C6FD 23 C7 D1 -  	.dl MG2_Data_22
   25 D1:C700 21 C7 D1 -  	.dl MG2_Data_23
   26 D1:C703 1F C7 D1 -  	.dl MG2_Data_24
   27 D1:C706 1D C7 D1 -  	.dl MG2_Data_25
   28 D1:C709 1B C7 D1 -  	.dl MG2_Data_26
   29 D1:C70C 19 C7 D1 -  	.dl MG2_Data_27
   30 D1:C70F 17 C7 D1 -  	.dl MG2_Data_28
   31 D1:C712 15 C7 D1 -  	.dl MG2_Data_29
   32 D1:C715 -  -  -  -  
   33 D1:C715 -  -  -  -  
   34 D1:C715 -  -  -  -  
   35 D1:C715 -  -  -  -  MG2_Data_29:
   36 D1:C715 00 -  -  -  	.db 0
   37 D1:C716 00 -  -  -  	.db 0
   38 D1:C717 -  -  -  -  
   39 D1:C717 -  -  -  -  MG2_Data_28:
   40 D1:C717 00 -  -  -  	.db 0
   41 D1:C718 00 -  -  -  	.db 0
   42 D1:C719 -  -  -  -  
   43 D1:C719 -  -  -  -  MG2_Data_27:
   44 D1:C719 00 -  -  -  	.db 0
   45 D1:C71A 00 -  -  -  	.db 0
   46 D1:C71B -  -  -  -  
   47 D1:C71B -  -  -  -  MG2_Data_26:
   48 D1:C71B 00 -  -  -  	.db 0
   49 D1:C71C 00 -  -  -  	.db 0
   50 D1:C71D -  -  -  -  
   51 D1:C71D -  -  -  -  MG2_Data_25:
   52 D1:C71D 00 -  -  -  	.db 0
   53 D1:C71E 00 -  -  -  	.db 0
   54 D1:C71F -  -  -  -  
   55 D1:C71F -  -  -  -  MG2_Data_24:
   56 D1:C71F 00 -  -  -  	.db 0
   57 D1:C720 00 -  -  -  	.db 0
   58 D1:C721 -  -  -  -  
   59 D1:C721 -  -  -  -  MG2_Data_23:
   60 D1:C721 00 -  -  -  	.db 0
   61 D1:C722 00 -  -  -  	.db 0
   62 D1:C723 -  -  -  -  
   63 D1:C723 -  -  -  -  MG2_Data_22:
   64 D1:C723 00 -  -  -  	.db 0
   65 D1:C724 00 -  -  -  	.db 0
   66 D1:C725 -  -  -  -  
   67 D1:C725 -  -  -  -  MG2_Data_21:
   68 D1:C725 00 -  -  -  	.db 0
   69 D1:C726 00 -  -  -  	.db 0
   70 D1:C727 -  -  -  -  
   71 D1:C727 -  -  -  -  MG2_Data_20:
   72 D1:C727 00 -  -  -  	.db 0
   73 D1:C728 00 -  -  -  	.db 0
   74 D1:C729 -  -  -  -  
   75 D1:C729 -  -  -  -  MG2_Data_19:
   76 D1:C729 00 -  -  -  	.db 0
   77 D1:C72A 00 -  -  -  	.db 0
   78 D1:C72B -  -  -  -  
   79 D1:C72B -  -  -  -  MG2_Data_18:
   80 D1:C72B 00 -  -  -  	.db 0
   81 D1:C72C 00 -  -  -  	.db 0
   82 D1:C72D -  -  -  -  
   83 D1:C72D -  -  -  -  MG2_Data_17:
   84 D1:C72D 00 -  -  -  	.db 0
   85 D1:C72E 00 -  -  -  	.db 0
   86 D1:C72F -  -  -  -  
   87 D1:C72F -  -  -  -  MG2_Data_16:
   88 D1:C72F 00 -  -  -  	.db 0
   89 D1:C730 00 -  -  -  	.db 0
   90 D1:C731 -  -  -  -  
   91 D1:C731 -  -  -  -  MG2_Data_15:
   92 D1:C731 00 -  -  -  	.db 0
   93 D1:C732 00 -  -  -  	.db 0
   94 D1:C733 -  -  -  -  
   95 D1:C733 -  -  -  -  MG2_Data_14:
   96 D1:C733 00 -  -  -  	.db 0
   97 D1:C734 00 -  -  -  	.db 0
   98 D1:C735 -  -  -  -  
   99 D1:C735 -  -  -  -  MG2_Data_13:
  100 D1:C735 00 -  -  -  	.db 0
  101 D1:C736 00 -  -  -  	.db 0
  102 D1:C737 -  -  -  -  
  103 D1:C737 -  -  -  -  MG2_Data_12:
  104 D1:C737 00 -  -  -  	.db 0
  105 D1:C738 00 -  -  -  	.db 0
  106 D1:C739 -  -  -  -  
  107 D1:C739 -  -  -  -  MG2_Data_11:
  108 D1:C739 00 -  -  -  	.db 0
  109 D1:C73A 00 -  -  -  	.db 0
  110 D1:C73B -  -  -  -  
  111 D1:C73B -  -  -  -  MG2_Data_10:
  112 D1:C73B 00 -  -  -  	.db 0
  113 D1:C73C 00 -  -  -  	.db 0
  114 D1:C73D -  -  -  -  
  115 D1:C73D -  -  -  -  MG2_Data_9:
  116 D1:C73D 00 -  -  -  	.db 0
  117 D1:C73E 00 -  -  -  	.db 0
  118 D1:C73F -  -  -  -  
  119 D1:C73F -  -  -  -  MG2_Data_8:
  120 D1:C73F 00 -  -  -  	.db 0
  121 D1:C740 00 -  -  -  	.db 0
  122 D1:C741 -  -  -  -  
  123 D1:C741 -  -  -  -  MG2_Data_7:
  124 D1:C741 00 -  -  -  	.db 0
  125 D1:C742 00 -  -  -  	.db 0
  126 D1:C743 -  -  -  -  
  127 D1:C743 -  -  -  -  MG2_Data_6:
  128 D1:C743 00 -  -  -  	.db 0
  129 D1:C744 00 -  -  -  	.db 0
  130 D1:C745 -  -  -  -  
  131 D1:C745 -  -  -  -  MG2_Data_5:
  132 D1:C745 00 -  -  -  	.db 0
  133 D1:C746 00 -  -  -  	.db 0
  134 D1:C747 -  -  -  -  
  135 D1:C747 -  -  -  -  MG2_Data_4:
  136 D1:C747 00 -  -  -  	.db 0
  137 D1:C748 00 -  -  -  	.db 0
  138 D1:C749 -  -  -  -  
  139 D1:C749 -  -  -  -  MG2_Data_3:
  140 D1:C749 00 -  -  -  	.db 0
  141 D1:C74A 01 -  -  -  	.db 1
  142 D1:C74B 23 13 4E 62 	.db 35, 19, 78, 98  ;Frog_0_Slow
  143 D1:C74F -  -  -  -  
  144 D1:C74F -  -  -  -  MG2_Data_2:
  145 D1:C74F 00 -  -  -  	.db 0
  146 D1:C750 07 -  -  -  	.db 7
  147 D1:C751 2A FF 35 17 	.db 42, 255, 53, 23  ;SG_CloudPlatform
  148 D1:C755 4A FF 5B 17 	.db 74, 255, 91, 23  ;SG_CloudPlatform
  149 D1:C759 5A FF 13 17 	.db 90, 255, 19, 23  ;SG_CloudPlatform
  150 D1:C75D 7A FF 3D 17 	.db 122, 255, 61, 23  ;SG_CloudPlatform
  151 D1:C761 A1 FF 2F 17 	.db 161, 255, 47, 23  ;SG_CloudPlatform
  152 D1:C765 C7 FF 14 17 	.db 199, 255, 20, 23  ;SG_CloudPlatform
  153 D1:C769 F0 FF 3F 17 	.db 240, 255, 63, 23  ;SG_CloudPlatform
  154 D1:C76D -  -  -  -  
  155 D1:C76D -  -  -  -  MG2_Data_1:
  156 D1:C76D 00 -  -  -  	.db 0
  157 D1:C76E 0A -  -  -  	.db 10
  158 D1:C76F 2B FF 64 17 	.db 43, 255, 100, 23  ;SG_CloudPlatform
  159 D1:C773 75 FF 40 17 	.db 117, 255, 64, 23  ;SG_CloudPlatform
  160 D1:C777 A0 FF 0E 17 	.db 160, 255, 14, 23  ;SG_CloudPlatform
  161 D1:C77B 13 FF 11 17 	.db 19, 255, 17, 23  ;SG_CloudPlatform
  162 D1:C77F 34 10 0D 61 	.db 52, 16, 13, 97  ;Clouds_2_Fast
  163 D1:C783 24 10 0D 61 	.db 36, 16, 13, 97  ;Clouds_2_Fast
  164 D1:C787 14 10 0D 61 	.db 20, 16, 13, 97  ;Clouds_2_Fast
  165 D1:C78B 4A FF 22 17 	.db 74, 255, 34, 23  ;SG_CloudPlatform
  166 D1:C78F B7 FF 30 17 	.db 183, 255, 48, 23  ;SG_CloudPlatform
  167 D1:C793 ED FF 3B 17 	.db 237, 255, 59, 23  ;SG_CloudPlatform
  168 D1:C797 -  -  -  -  
  169 D1:C797 -  -  -  -  MG2_Data_0:
  170 D1:C797 00 -  -  -  	.db 0
  171 D1:C798 09 -  -  -  	.db 9
  172 D1:C799 63 FF 05 17 	.db 99, 255, 5, 23  ;SG_CloudPlatform
  173 D1:C79D B6 FF 2A 17 	.db 182, 255, 42, 23  ;SG_CloudPlatform
  174 D1:C7A1 7F FF 6B 17 	.db 127, 255, 107, 23  ;SG_CloudPlatform
  175 D1:C7A5 59 FF 43 17 	.db 89, 255, 67, 23  ;SG_CloudPlatform
  176 D1:C7A9 D1 10 8D 61 	.db 209, 16, 141, 97  ;Clouds_2_Fast
  177 D1:C7AD C1 10 8D 61 	.db 193, 16, 141, 97  ;Clouds_2_Fast
  178 D1:C7B1 B1 10 8D 61 	.db 177, 16, 141, 97  ;Clouds_2_Fast
  179 D1:C7B5 E2 FF 42 17 	.db 226, 255, 66, 23  ;SG_CloudPlatform
  180 D1:C7B9 A0 FF 4C 17 	.db 160, 255, 76, 23  ;SG_CloudPlatform
  181 D1:C7BD -  -  -  -  
  182 D1:C7BD -  -  -  -  
  183 D1:C7BD -  -  -  -  
Listing for file "ascent.asm"
  568 D1:C7BD -  -  -  -  #include "generated/FG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\FG_Data.txt"
    1 D1:C7BD -  -  -  -  FG_Data_frame_table:
    2 D1:C7BD A5 C8 D1 -  	.dl FG_Data_0
    3 D1:C7C0 97 C8 D1 -  	.dl FG_Data_1
    4 D1:C7C3 8D C8 D1 -  	.dl FG_Data_2
    5 D1:C7C6 87 C8 D1 -  	.dl FG_Data_3
    6 D1:C7C9 81 C8 D1 -  	.dl FG_Data_4
    7 D1:C7CC 77 C8 D1 -  	.dl FG_Data_5
    8 D1:C7CF 71 C8 D1 -  	.dl FG_Data_6
    9 D1:C7D2 67 C8 D1 -  	.dl FG_Data_7
   10 D1:C7D5 59 C8 D1 -  	.dl FG_Data_8
   11 D1:C7D8 43 C8 D1 -  	.dl FG_Data_9
   12 D1:C7DB 3D C8 D1 -  	.dl FG_Data_10
   13 D1:C7DE 3B C8 D1 -  	.dl FG_Data_11
   14 D1:C7E1 39 C8 D1 -  	.dl FG_Data_12
   15 D1:C7E4 37 C8 D1 -  	.dl FG_Data_13
   16 D1:C7E7 35 C8 D1 -  	.dl FG_Data_14
   17 D1:C7EA 33 C8 D1 -  	.dl FG_Data_15
   18 D1:C7ED 31 C8 D1 -  	.dl FG_Data_16
   19 D1:C7F0 2F C8 D1 -  	.dl FG_Data_17
   20 D1:C7F3 2D C8 D1 -  	.dl FG_Data_18
   21 D1:C7F6 2B C8 D1 -  	.dl FG_Data_19
   22 D1:C7F9 29 C8 D1 -  	.dl FG_Data_20
   23 D1:C7FC 27 C8 D1 -  	.dl FG_Data_21
   24 D1:C7FF 25 C8 D1 -  	.dl FG_Data_22
   25 D1:C802 23 C8 D1 -  	.dl FG_Data_23
   26 D1:C805 21 C8 D1 -  	.dl FG_Data_24
   27 D1:C808 1F C8 D1 -  	.dl FG_Data_25
   28 D1:C80B 1D C8 D1 -  	.dl FG_Data_26
   29 D1:C80E 1B C8 D1 -  	.dl FG_Data_27
   30 D1:C811 19 C8 D1 -  	.dl FG_Data_28
   31 D1:C814 17 C8 D1 -  	.dl FG_Data_29
   32 D1:C817 -  -  -  -  
   33 D1:C817 -  -  -  -  
   34 D1:C817 -  -  -  -  
   35 D1:C817 -  -  -  -  FG_Data_29:
   36 D1:C817 00 -  -  -  	.db 0
   37 D1:C818 00 -  -  -  	.db 0
   38 D1:C819 -  -  -  -  
   39 D1:C819 -  -  -  -  FG_Data_28:
   40 D1:C819 00 -  -  -  	.db 0
   41 D1:C81A 00 -  -  -  	.db 0
   42 D1:C81B -  -  -  -  
   43 D1:C81B -  -  -  -  FG_Data_27:
   44 D1:C81B 00 -  -  -  	.db 0
   45 D1:C81C 00 -  -  -  	.db 0
   46 D1:C81D -  -  -  -  
   47 D1:C81D -  -  -  -  FG_Data_26:
   48 D1:C81D 00 -  -  -  	.db 0
   49 D1:C81E 00 -  -  -  	.db 0
   50 D1:C81F -  -  -  -  
   51 D1:C81F -  -  -  -  FG_Data_25:
   52 D1:C81F 00 -  -  -  	.db 0
   53 D1:C820 00 -  -  -  	.db 0
   54 D1:C821 -  -  -  -  
   55 D1:C821 -  -  -  -  FG_Data_24:
   56 D1:C821 00 -  -  -  	.db 0
   57 D1:C822 00 -  -  -  	.db 0
   58 D1:C823 -  -  -  -  
   59 D1:C823 -  -  -  -  FG_Data_23:
   60 D1:C823 00 -  -  -  	.db 0
   61 D1:C824 00 -  -  -  	.db 0
   62 D1:C825 -  -  -  -  
   63 D1:C825 -  -  -  -  FG_Data_22:
   64 D1:C825 00 -  -  -  	.db 0
   65 D1:C826 00 -  -  -  	.db 0
   66 D1:C827 -  -  -  -  
   67 D1:C827 -  -  -  -  FG_Data_21:
   68 D1:C827 00 -  -  -  	.db 0
   69 D1:C828 00 -  -  -  	.db 0
   70 D1:C829 -  -  -  -  
   71 D1:C829 -  -  -  -  FG_Data_20:
   72 D1:C829 00 -  -  -  	.db 0
   73 D1:C82A 00 -  -  -  	.db 0
   74 D1:C82B -  -  -  -  
   75 D1:C82B -  -  -  -  FG_Data_19:
   76 D1:C82B 00 -  -  -  	.db 0
   77 D1:C82C 00 -  -  -  	.db 0
   78 D1:C82D -  -  -  -  
   79 D1:C82D -  -  -  -  FG_Data_18:
   80 D1:C82D 00 -  -  -  	.db 0
   81 D1:C82E 00 -  -  -  	.db 0
   82 D1:C82F -  -  -  -  
   83 D1:C82F -  -  -  -  FG_Data_17:
   84 D1:C82F 00 -  -  -  	.db 0
   85 D1:C830 00 -  -  -  	.db 0
   86 D1:C831 -  -  -  -  
   87 D1:C831 -  -  -  -  FG_Data_16:
   88 D1:C831 00 -  -  -  	.db 0
   89 D1:C832 00 -  -  -  	.db 0
   90 D1:C833 -  -  -  -  
   91 D1:C833 -  -  -  -  FG_Data_15:
   92 D1:C833 00 -  -  -  	.db 0
   93 D1:C834 00 -  -  -  	.db 0
   94 D1:C835 -  -  -  -  
   95 D1:C835 -  -  -  -  FG_Data_14:
   96 D1:C835 00 -  -  -  	.db 0
   97 D1:C836 00 -  -  -  	.db 0
   98 D1:C837 -  -  -  -  
   99 D1:C837 -  -  -  -  FG_Data_13:
  100 D1:C837 00 -  -  -  	.db 0
  101 D1:C838 00 -  -  -  	.db 0
  102 D1:C839 -  -  -  -  
  103 D1:C839 -  -  -  -  FG_Data_12:
  104 D1:C839 00 -  -  -  	.db 0
  105 D1:C83A 00 -  -  -  	.db 0
  106 D1:C83B -  -  -  -  
  107 D1:C83B -  -  -  -  FG_Data_11:
  108 D1:C83B 00 -  -  -  	.db 0
  109 D1:C83C 00 -  -  -  	.db 0
  110 D1:C83D -  -  -  -  
  111 D1:C83D -  -  -  -  FG_Data_10:
  112 D1:C83D 00 -  -  -  	.db 0
  113 D1:C83E 01 -  -  -  	.db 1
  114 D1:C83F CA FF 80 01 	.db 202, 255, 128, 1  ;SG_Branch3
  115 D1:C843 -  -  -  -  
  116 D1:C843 -  -  -  -  FG_Data_9:
  117 D1:C843 00 -  -  -  	.db 0
  118 D1:C844 05 -  -  -  	.db 5
  119 D1:C845 D5 FF 72 03 	.db 213, 255, 114, 3  ;SG_Branch4
  120 D1:C849 B0 0E 00 29 	.db 176, 14, 0, 41  ;Branches_3_Fast
  121 D1:C84D B1 0E 09 2A 	.db 177, 14, 9, 42  ;Branches_2_Fast
  122 D1:C851 B1 0E 12 23 	.db 177, 14, 18, 35  ;Branches_4_Fast_F
  123 D1:C855 EA FF 13 02 	.db 234, 255, 19, 2  ;SG_Branch7
  124 D1:C859 -  -  -  -  
  125 D1:C859 -  -  -  -  FG_Data_8:
  126 D1:C859 00 -  -  -  	.db 0
  127 D1:C85A 03 -  -  -  	.db 3
  128 D1:C85B 7C 0E 97 27 	.db 124, 14, 151, 39  ;Branches_5_Fast
  129 D1:C85F 7C 0E 8E 28 	.db 124, 14, 142, 40  ;Branches_4_Fast
  130 D1:C863 BA FF 6E 06 	.db 186, 255, 110, 6  ;SG_Branch2
  131 D1:C867 -  -  -  -  
  132 D1:C867 -  -  -  -  FG_Data_7:
  133 D1:C867 00 -  -  -  	.db 0
  134 D1:C868 02 -  -  -  	.db 2
  135 D1:C869 87 FF 00 04 	.db 135, 255, 0, 4  ;SG_Branch5
  136 D1:C86D ED FF 00 05 	.db 237, 255, 0, 5  ;SG_Branch6
  137 D1:C871 -  -  -  -  
  138 D1:C871 -  -  -  -  FG_Data_6:
  139 D1:C871 00 -  -  -  	.db 0
  140 D1:C872 01 -  -  -  	.db 1
  141 D1:C873 64 FF 00 05 	.db 100, 255, 0, 5  ;SG_Branch6
  142 D1:C877 -  -  -  -  
  143 D1:C877 -  -  -  -  FG_Data_5:
  144 D1:C877 00 -  -  -  	.db 0
  145 D1:C878 02 -  -  -  	.db 2
  146 D1:C879 D7 FF 80 01 	.db 215, 255, 128, 1  ;SG_Branch3
  147 D1:C87D 5D FF 00 04 	.db 93, 255, 0, 4  ;SG_Branch5
  148 D1:C881 -  -  -  -  
  149 D1:C881 -  -  -  -  FG_Data_4:
  150 D1:C881 00 -  -  -  	.db 0
  151 D1:C882 01 -  -  -  	.db 1
  152 D1:C883 B5 FF 80 01 	.db 181, 255, 128, 1  ;SG_Branch3
  153 D1:C887 -  -  -  -  
  154 D1:C887 -  -  -  -  FG_Data_3:
  155 D1:C887 00 -  -  -  	.db 0
  156 D1:C888 01 -  -  -  	.db 1
  157 D1:C889 C1 FF 00 05 	.db 193, 255, 0, 5  ;SG_Branch6
  158 D1:C88D -  -  -  -  
  159 D1:C88D -  -  -  -  FG_Data_2:
  160 D1:C88D 00 -  -  -  	.db 0
  161 D1:C88E 02 -  -  -  	.db 2
  162 D1:C88F FB FF 72 03 	.db 251, 255, 114, 3  ;SG_Branch4
  163 D1:C893 93 FF 00 04 	.db 147, 255, 0, 4  ;SG_Branch5
  164 D1:C897 -  -  -  -  
  165 D1:C897 -  -  -  -  FG_Data_1:
  166 D1:C897 00 -  -  -  	.db 0
  167 D1:C898 03 -  -  -  	.db 3
  168 D1:C899 C9 FF 80 01 	.db 201, 255, 128, 1  ;SG_Branch3
  169 D1:C89D 87 FF 00 02 	.db 135, 255, 0, 2  ;SG_Branch7
  170 D1:C8A1 4B 0E 00 09 	.db 75, 14, 0, 9  ;Branches_9_Fast
  171 D1:C8A5 -  -  -  -  
  172 D1:C8A5 -  -  -  -  FG_Data_0:
  173 D1:C8A5 00 -  -  -  	.db 0
  174 D1:C8A6 05 -  -  -  	.db 5
  175 D1:C8A7 19 1A 94 01 	.db 25, 26, 148, 1  ;BigGrassBase_Fast
  176 D1:C8AB 1E 17 93 04 	.db 30, 23, 147, 4  ;BigGrassTop_Fast_F
  177 D1:C8AF 33 FF 00 00 	.db 51, 255, 0, 0  ;SG_GroundGrass
  178 D1:C8B3 33 FF 38 00 	.db 51, 255, 56, 0  ;SG_GroundGrass
  179 D1:C8B7 33 FF 5F 00 	.db 51, 255, 95, 0  ;SG_GroundGrass
  180 D1:C8BB -  -  -  -  
  181 D1:C8BB -  -  -  -  
  182 D1:C8BB -  -  -  -  
Listing for file "ascent.asm"
  569 D1:C8BB -  -  -  -  #include "generated/DecompressCalls.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\DecompressCalls.txt"
    1 D1:C8BB -  -  -  -  decompress_calls_table_up:
    2 D1:C8BB 22 CC D1 -  	.dl decompress_frame_up_0
    3 D1:C8BE E3 CD D1 -  	.dl decompress_frame_up_1
    4 D1:C8C1 E4 CD D1 -  	.dl decompress_frame_up_2
    5 D1:C8C4 01 CE D1 -  	.dl decompress_frame_up_3
    6 D1:C8C7 02 CE D1 -  	.dl decompress_frame_up_4
    7 D1:C8CA 18 CE D1 -  	.dl decompress_frame_up_5
    8 D1:C8CD 20 CE D1 -  	.dl decompress_frame_up_6
    9 D1:C8D0 21 CE D1 -  	.dl decompress_frame_up_7
   10 D1:C8D3 22 CE D1 -  	.dl decompress_frame_up_8
   11 D1:C8D6 23 CE D1 -  	.dl decompress_frame_up_9
   12 D1:C8D9 24 CE D1 -  	.dl decompress_frame_up_10
   13 D1:C8DC 25 CE D1 -  	.dl decompress_frame_up_11
   14 D1:C8DF 26 CE D1 -  	.dl decompress_frame_up_12
   15 D1:C8E2 27 CE D1 -  	.dl decompress_frame_up_13
   16 D1:C8E5 28 CE D1 -  	.dl decompress_frame_up_14
   17 D1:C8E8 29 CE D1 -  	.dl decompress_frame_up_15
   18 D1:C8EB 2A CE D1 -  	.dl decompress_frame_up_16
   19 D1:C8EE 2B CE D1 -  	.dl decompress_frame_up_17
   20 D1:C8F1 2C CE D1 -  	.dl decompress_frame_up_18
   21 D1:C8F4 2D CE D1 -  	.dl decompress_frame_up_19
   22 D1:C8F7 2E CE D1 -  	.dl decompress_frame_up_20
   23 D1:C8FA 2F CE D1 -  	.dl decompress_frame_up_21
   24 D1:C8FD 30 CE D1 -  	.dl decompress_frame_up_22
   25 D1:C900 31 CE D1 -  	.dl decompress_frame_up_23
   26 D1:C903 32 CE D1 -  	.dl decompress_frame_up_24
   27 D1:C906 33 CE D1 -  	.dl decompress_frame_up_25
   28 D1:C909 34 CE D1 -  	.dl decompress_frame_up_26
   29 D1:C90C 35 CE D1 -  	.dl decompress_frame_up_27
   30 D1:C90F 36 CE D1 -  	.dl decompress_frame_up_28
   31 D1:C912 37 CE D1 -  	.dl decompress_frame_up_29
   32 D1:C915 38 CE D1 -  	.dl decompress_frame_up_30
   33 D1:C918 39 CE D1 -  	.dl decompress_frame_up_31
   34 D1:C91B 3A CE D1 -  	.dl decompress_frame_up_32
   35 D1:C91E 3B CE D1 -  	.dl decompress_frame_up_33
   36 D1:C921 3C CE D1 -  	.dl decompress_frame_up_34
   37 D1:C924 3D CE D1 -  	.dl decompress_frame_up_35
   38 D1:C927 3E CE D1 -  	.dl decompress_frame_up_36
   39 D1:C92A 3F CE D1 -  	.dl decompress_frame_up_37
   40 D1:C92D 40 CE D1 -  	.dl decompress_frame_up_38
   41 D1:C930 41 CE D1 -  	.dl decompress_frame_up_39
   42 D1:C933 42 CE D1 -  	.dl decompress_frame_up_40
   43 D1:C936 43 CE D1 -  	.dl decompress_frame_up_41
   44 D1:C939 44 CE D1 -  	.dl decompress_frame_up_42
   45 D1:C93C 45 CE D1 -  	.dl decompress_frame_up_43
   46 D1:C93F 46 CE D1 -  	.dl decompress_frame_up_44
   47 D1:C942 47 CE D1 -  	.dl decompress_frame_up_45
   48 D1:C945 48 CE D1 -  	.dl decompress_frame_up_46
   49 D1:C948 49 CE D1 -  	.dl decompress_frame_up_47
   50 D1:C94B 4A CE D1 -  	.dl decompress_frame_up_48
   51 D1:C94E 4B CE D1 -  	.dl decompress_frame_up_49
   52 D1:C951 4C CE D1 -  	.dl decompress_frame_up_50
   53 D1:C954 4D CE D1 -  	.dl decompress_frame_up_51
   54 D1:C957 4E CE D1 -  	.dl decompress_frame_up_52
   55 D1:C95A 4F CE D1 -  	.dl decompress_frame_up_53
   56 D1:C95D 50 CE D1 -  	.dl decompress_frame_up_54
   57 D1:C960 51 CE D1 -  	.dl decompress_frame_up_55
   58 D1:C963 52 CE D1 -  	.dl decompress_frame_up_56
   59 D1:C966 53 CE D1 -  	.dl decompress_frame_up_57
   60 D1:C969 54 CE D1 -  	.dl decompress_frame_up_58
   61 D1:C96C 55 CE D1 -  	.dl decompress_frame_up_59
   62 D1:C96F 56 CE D1 -  	.dl decompress_frame_up_60
   63 D1:C972 57 CE D1 -  	.dl decompress_frame_up_61
   64 D1:C975 58 CE D1 -  	.dl decompress_frame_up_62
   65 D1:C978 59 CE D1 -  	.dl decompress_frame_up_63
   66 D1:C97B 5A CE D1 -  	.dl decompress_frame_up_64
   67 D1:C97E 5B CE D1 -  	.dl decompress_frame_up_65
   68 D1:C981 5C CE D1 -  	.dl decompress_frame_up_66
   69 D1:C984 5D CE D1 -  	.dl decompress_frame_up_67
   70 D1:C987 5E CE D1 -  	.dl decompress_frame_up_68
   71 D1:C98A 5F CE D1 -  	.dl decompress_frame_up_69
   72 D1:C98D 60 CE D1 -  	.dl decompress_frame_up_70
   73 D1:C990 61 CE D1 -  	.dl decompress_frame_up_71
   74 D1:C993 62 CE D1 -  	.dl decompress_frame_up_72
   75 D1:C996 63 CE D1 -  	.dl decompress_frame_up_73
   76 D1:C999 64 CE D1 -  	.dl decompress_frame_up_74
   77 D1:C99C 65 CE D1 -  	.dl decompress_frame_up_75
   78 D1:C99F 66 CE D1 -  	.dl decompress_frame_up_76
   79 D1:C9A2 67 CE D1 -  	.dl decompress_frame_up_77
   80 D1:C9A5 68 CE D1 -  	.dl decompress_frame_up_78
   81 D1:C9A8 69 CE D1 -  	.dl decompress_frame_up_79
   82 D1:C9AB 6A CE D1 -  	.dl decompress_frame_up_80
   83 D1:C9AE 6B CE D1 -  	.dl decompress_frame_up_81
   84 D1:C9B1 6C CE D1 -  	.dl decompress_frame_up_82
   85 D1:C9B4 6D CE D1 -  	.dl decompress_frame_up_83
   86 D1:C9B7 6E CE D1 -  	.dl decompress_frame_up_84
   87 D1:C9BA 6F CE D1 -  	.dl decompress_frame_up_85
   88 D1:C9BD 70 CE D1 -  	.dl decompress_frame_up_86
   89 D1:C9C0 71 CE D1 -  	.dl decompress_frame_up_87
   90 D1:C9C3 72 CE D1 -  	.dl decompress_frame_up_88
   91 D1:C9C6 73 CE D1 -  	.dl decompress_frame_up_89
   92 D1:C9C9 -  -  -  -  
   93 D1:C9C9 -  -  -  -  
   94 D1:C9C9 -  -  -  -  decompress_calls_table_down:
   95 D1:C9C9 74 CE D1 -  	.dl decompress_frame_down_0
   96 D1:C9CC 75 CE D1 -  	.dl decompress_frame_down_1
   97 D1:C9CF 76 CE D1 -  	.dl decompress_frame_down_2
   98 D1:C9D2 A8 CE D1 -  	.dl decompress_frame_down_3
   99 D1:C9D5 A9 CE D1 -  	.dl decompress_frame_down_4
  100 D1:C9D8 BF CE D1 -  	.dl decompress_frame_down_5
  101 D1:C9DB C0 CE D1 -  	.dl decompress_frame_down_6
  102 D1:C9DE 15 CF D1 -  	.dl decompress_frame_down_7
  103 D1:C9E1 16 CF D1 -  	.dl decompress_frame_down_8
  104 D1:C9E4 2C CF D1 -  	.dl decompress_frame_down_9
  105 D1:C9E7 2D CF D1 -  	.dl decompress_frame_down_10
  106 D1:C9EA 66 CF D1 -  	.dl decompress_frame_down_11
  107 D1:C9ED 91 CF D1 -  	.dl decompress_frame_down_12
  108 D1:C9F0 56 D0 D1 -  	.dl decompress_frame_down_13
  109 D1:C9F3 57 D0 D1 -  	.dl decompress_frame_down_14
  110 D1:C9F6 F9 D0 D1 -  	.dl decompress_frame_down_15
  111 D1:C9F9 FA D0 D1 -  	.dl decompress_frame_down_16
  112 D1:C9FC 72 D1 D1 -  	.dl decompress_frame_down_17
  113 D1:C9FF 73 D1 D1 -  	.dl decompress_frame_down_18
  114 D1:CA02 74 D1 D1 -  	.dl decompress_frame_down_19
  115 D1:CA05 75 D1 D1 -  	.dl decompress_frame_down_20
  116 D1:CA08 76 D1 D1 -  	.dl decompress_frame_down_21
  117 D1:CA0B 77 D1 D1 -  	.dl decompress_frame_down_22
  118 D1:CA0E 78 D1 D1 -  	.dl decompress_frame_down_23
  119 D1:CA11 79 D1 D1 -  	.dl decompress_frame_down_24
  120 D1:CA14 C0 D1 D1 -  	.dl decompress_frame_down_25
  121 D1:CA17 C1 D1 D1 -  	.dl decompress_frame_down_26
  122 D1:CA1A C2 D1 D1 -  	.dl decompress_frame_down_27
  123 D1:CA1D C3 D1 D1 -  	.dl decompress_frame_down_28
  124 D1:CA20 C4 D1 D1 -  	.dl decompress_frame_down_29
  125 D1:CA23 C5 D1 D1 -  	.dl decompress_frame_down_30
  126 D1:CA26 C6 D1 D1 -  	.dl decompress_frame_down_31
  127 D1:CA29 C7 D1 D1 -  	.dl decompress_frame_down_32
  128 D1:CA2C C8 D1 D1 -  	.dl decompress_frame_down_33
  129 D1:CA2F C9 D1 D1 -  	.dl decompress_frame_down_34
  130 D1:CA32 CA D1 D1 -  	.dl decompress_frame_down_35
  131 D1:CA35 CB D1 D1 -  	.dl decompress_frame_down_36
  132 D1:CA38 CC D1 D1 -  	.dl decompress_frame_down_37
  133 D1:CA3B CD D1 D1 -  	.dl decompress_frame_down_38
  134 D1:CA3E CE D1 D1 -  	.dl decompress_frame_down_39
  135 D1:CA41 CF D1 D1 -  	.dl decompress_frame_down_40
  136 D1:CA44 D0 D1 D1 -  	.dl decompress_frame_down_41
  137 D1:CA47 D1 D1 D1 -  	.dl decompress_frame_down_42
  138 D1:CA4A D2 D1 D1 -  	.dl decompress_frame_down_43
  139 D1:CA4D D3 D1 D1 -  	.dl decompress_frame_down_44
  140 D1:CA50 D4 D1 D1 -  	.dl decompress_frame_down_45
  141 D1:CA53 D5 D1 D1 -  	.dl decompress_frame_down_46
  142 D1:CA56 D6 D1 D1 -  	.dl decompress_frame_down_47
  143 D1:CA59 D7 D1 D1 -  	.dl decompress_frame_down_48
  144 D1:CA5C D8 D1 D1 -  	.dl decompress_frame_down_49
  145 D1:CA5F D9 D1 D1 -  	.dl decompress_frame_down_50
  146 D1:CA62 DA D1 D1 -  	.dl decompress_frame_down_51
  147 D1:CA65 DB D1 D1 -  	.dl decompress_frame_down_52
  148 D1:CA68 DC D1 D1 -  	.dl decompress_frame_down_53
  149 D1:CA6B DD D1 D1 -  	.dl decompress_frame_down_54
  150 D1:CA6E DE D1 D1 -  	.dl decompress_frame_down_55
  151 D1:CA71 DF D1 D1 -  	.dl decompress_frame_down_56
  152 D1:CA74 E0 D1 D1 -  	.dl decompress_frame_down_57
  153 D1:CA77 E1 D1 D1 -  	.dl decompress_frame_down_58
  154 D1:CA7A E2 D1 D1 -  	.dl decompress_frame_down_59
  155 D1:CA7D E3 D1 D1 -  	.dl decompress_frame_down_60
  156 D1:CA80 E4 D1 D1 -  	.dl decompress_frame_down_61
  157 D1:CA83 E5 D1 D1 -  	.dl decompress_frame_down_62
  158 D1:CA86 E6 D1 D1 -  	.dl decompress_frame_down_63
  159 D1:CA89 E7 D1 D1 -  	.dl decompress_frame_down_64
  160 D1:CA8C E8 D1 D1 -  	.dl decompress_frame_down_65
  161 D1:CA8F E9 D1 D1 -  	.dl decompress_frame_down_66
  162 D1:CA92 EA D1 D1 -  	.dl decompress_frame_down_67
  163 D1:CA95 EB D1 D1 -  	.dl decompress_frame_down_68
  164 D1:CA98 EC D1 D1 -  	.dl decompress_frame_down_69
  165 D1:CA9B ED D1 D1 -  	.dl decompress_frame_down_70
  166 D1:CA9E EE D1 D1 -  	.dl decompress_frame_down_71
  167 D1:CAA1 EF D1 D1 -  	.dl decompress_frame_down_72
  168 D1:CAA4 F0 D1 D1 -  	.dl decompress_frame_down_73
  169 D1:CAA7 F1 D1 D1 -  	.dl decompress_frame_down_74
  170 D1:CAAA F2 D1 D1 -  	.dl decompress_frame_down_75
  171 D1:CAAD F3 D1 D1 -  	.dl decompress_frame_down_76
  172 D1:CAB0 F4 D1 D1 -  	.dl decompress_frame_down_77
  173 D1:CAB3 F5 D1 D1 -  	.dl decompress_frame_down_78
  174 D1:CAB6 F6 D1 D1 -  	.dl decompress_frame_down_79
  175 D1:CAB9 F7 D1 D1 -  	.dl decompress_frame_down_80
  176 D1:CABC F8 D1 D1 -  	.dl decompress_frame_down_81
  177 D1:CABF F9 D1 D1 -  	.dl decompress_frame_down_82
  178 D1:CAC2 FA D1 D1 -  	.dl decompress_frame_down_83
  179 D1:CAC5 FB D1 D1 -  	.dl decompress_frame_down_84
  180 D1:CAC8 FC D1 D1 -  	.dl decompress_frame_down_85
  181 D1:CACB FD D1 D1 -  	.dl decompress_frame_down_86
  182 D1:CACE FE D1 D1 -  	.dl decompress_frame_down_87
  183 D1:CAD1 FF D1 D1 -  	.dl decompress_frame_down_88
  184 D1:CAD4 00 D2 D1 -  	.dl decompress_frame_down_89
  185 D1:CAD7 -  -  -  -  
  186 D1:CAD7 -  -  -  -  
  187 D1:CAD7 -  -  -  -  
  188 D1:CAD7 -  -  -  -  decompress_frame_up_pre2:
  189 D1:CAD7 00 -  -  -  	.db 0
  190 D1:CAD8 -  -  -  -  
  191 D1:CAD8 -  -  -  -  decompress_frame_up_pre1:
  192 D1:CAD8 2F -  -  -  	.db 47
  193 D1:CAD9 E4 DA D1 C0 
              01 D4 -  -  	.dl Branches_5, Branches_5_Fast
  194 D1:CADF 80 -  -  -  	.db %10000000
  195 D1:CAE0 42 DB D1 60 
              02 D4 -  -  	.dl Branches_3, Branches_3_Fast
  196 D1:CAE6 80 -  -  -  	.db %10000000
  197 D1:CAE7 A2 DB D1 08 
              03 D4 -  -  	.dl Branches_2, Branches_2_Fast
  198 D1:CAED 80 -  -  -  	.db %10000000
  199 D1:CAEE 3B E1 D1 B2 
              03 D4 -  -  	.dl Tree_11, Tree_11_Fast
  200 D1:CAF4 80 -  -  -  	.db %10000000
  201 D1:CAF5 CE E0 D1 B4 
              04 D4 -  -  	.dl Tree_5, Tree_5_Fast_F
  202 D1:CAFB A0 -  -  -  	.db %10100000
  203 D1:CAFC 91 DC D1 B6 
              05 D4 -  -  	.dl Tree_2, Tree_2_Fast_F
  204 D1:CB02 A0 -  -  -  	.db %10100000
  205 D1:CB03 3B E1 D1 B2 
              06 D4 -  -  	.dl Tree_11, Tree_11_Fast_F
  206 D1:CB09 A0 -  -  -  	.db %10100000
  207 D1:CB0A A8 E1 D1 B4 
              07 D4 -  -  	.dl Branches_1, Branches_1_Fast
  208 D1:CB10 80 -  -  -  	.db %10000000
  209 D1:CB11 03 E2 D1 4D 
              08 D4 -  -  	.dl Vine2, Vine2_Slow
  210 D1:CB17 00 -  -  -  	.db %00000000
  211 D1:CB18 27 E2 D1 ED 
              08 D4 -  -  	.dl VineVertical, VineVertical_Slow_O
  212 D1:CB1E 40 -  -  -  	.db %01000000
  213 D1:CB1F 27 E2 D1 99 
              09 D4 -  -  	.dl VineVertical, VineVertical_Slow
  214 D1:CB25 00 -  -  -  	.db %00000000
  215 D1:CB26 4D E2 D1 47 
              0A D4 -  -  	.dl Vine4, Vine4_Slow_F
  216 D1:CB2C 20 -  -  -  	.db %00100000
  217 D1:CB2D 4D E2 D1 07 
              0B D4 -  -  	.dl Vine4, Vine4_Slow_O_F
  218 D1:CB33 60 -  -  -  	.db %01100000
  219 D1:CB34 89 E2 D1 C7 
              0B D4 -  -  	.dl Vine5, Vine5_Slow_O_F
  220 D1:CB3A 60 -  -  -  	.db %01100000
  221 D1:CB3B C1 E2 D1 87 
              0C D4 -  -  	.dl Vine6, Vine6_Slow_O
  222 D1:CB41 40 -  -  -  	.db %01000000
  223 D1:CB42 ED E2 D1 2D 
              0D D4 -  -  	.dl Vine7, Vine7_Slow
  224 D1:CB48 00 -  -  -  	.db %00000000
  225 D1:CB49 89 E2 D1 B3 
              0D D4 -  -  	.dl Vine5, Vine5_Slow
  226 D1:CB4F 00 -  -  -  	.db %00000000
  227 D1:CB50 C1 E2 D1 71 
              0E D4 -  -  	.dl Vine6, Vine6_Slow
  228 D1:CB56 00 -  -  -  	.db %00000000
  229 D1:CB57 4D E2 D1 15 
              0F D4 -  -  	.dl Vine4, Vine4_Slow
  230 D1:CB5D 00 -  -  -  	.db %00000000
  231 D1:CB5E ED E2 D1 D5 
              0F D4 -  -  	.dl Vine7, Vine7_Slow_O
  232 D1:CB64 40 -  -  -  	.db %01000000
  233 D1:CB65 89 E2 D1 55 
              10 D4 -  -  	.dl Vine5, Vine5_Slow_O
  234 D1:CB6B 40 -  -  -  	.db %01000000
  235 D1:CB6C 4D E2 D1 13 
              11 D4 -  -  	.dl Vine4, Vine4_Slow_O
  236 D1:CB72 40 -  -  -  	.db %01000000
  237 D1:CB73 A8 E1 D1 D2 
              11 D4 -  -  	.dl Branches_1, Branches_1_Fast_F
  238 D1:CB79 A0 -  -  -  	.db %10100000
  239 D1:CB7A A2 DB D1 6A 
              12 D4 -  -  	.dl Branches_2, Branches_2_Fast_F
  240 D1:CB80 A0 -  -  -  	.db %10100000
  241 D1:CB81 E4 DA D1 14 
              13 D4 -  -  	.dl Branches_5, Branches_5_Fast_F
  242 D1:CB87 A0 -  -  -  	.db %10100000
  243 D1:CB88 66 E3 D1 B4 
              13 D4 -  -  	.dl Clouds_2, Clouds_2_Fast
  244 D1:CB8E 80 -  -  -  	.db %10000000
  245 D1:CB8F 8A E3 D1 65 
              14 D4 -  -  	.dl Frog_0, Frog_0_Slow
  246 D1:CB95 00 -  -  -  	.db %00000000
  247 D1:CB96 62 E4 D1 94 
              15 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast
  248 D1:CB9C 80 -  -  -  	.db %10000000
  249 D1:CB9D 62 E4 D1 1A 
              16 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast_F
  250 D1:CBA3 A0 -  -  -  	.db %10100000
  251 D1:CBA4 97 E4 D1 A0 
              16 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast
  252 D1:CBAA 80 -  -  -  	.db %10000000
  253 D1:CBAB 97 E4 D1 26 
              17 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast_F
  254 D1:CBB1 A0 -  -  -  	.db %10100000
  255 D1:CBB2 E5 E4 D1 AC 
              17 D4 -  -  	.dl Tree_16, Tree_16_Fast
  256 D1:CBB8 80 -  -  -  	.db %10000000
  257 D1:CBB9 FD E4 D1 01 
              18 D4 -  -  	.dl Tree_17, Tree_17_Slow
  258 D1:CBBF 00 -  -  -  	.db %00000000
  259 D1:CBC0 FD E4 D1 67 
              18 D4 -  -  	.dl Tree_17, Tree_17_Slow_O_F
  260 D1:CBC6 60 -  -  -  	.db %01100000
  261 D1:CBC7 0E E5 D1 CD 
              18 D4 -  -  	.dl Tree_18, Tree_18_Slow
  262 D1:CBCD 00 -  -  -  	.db %00000000
  263 D1:CBCE 0E E5 D1 31 
              19 D4 -  -  	.dl Tree_18, Tree_18_Slow_O_F
  264 D1:CBD4 60 -  -  -  	.db %01100000
  265 D1:CBD5 E5 E4 D1 96 
              19 D4 -  -  	.dl Tree_16, Tree_16_Fast_F
  266 D1:CBDB A0 -  -  -  	.db %10100000
  267 D1:CBDC 1F E5 D1 EC 
              19 D4 -  -  	.dl Clouds_0, Clouds_0_Fast
  268 D1:CBE2 80 -  -  -  	.db %10000000
  269 D1:CBE3 48 E5 D1 52 
              1A D4 -  -  	.dl Clouds_1, Clouds_1_Fast
  270 D1:CBE9 80 -  -  -  	.db %10000000
  271 D1:CBEA 6F E5 D1 B6 
              1A D4 -  -  	.dl Clouds_3, Clouds_3_Fast
  272 D1:CBF0 80 -  -  -  	.db %10000000
  273 D1:CBF1 9B E5 D1 22 
              1B D4 -  -  	.dl Clouds_4, Clouds_4_Fast
  274 D1:CBF7 80 -  -  -  	.db %10000000
  275 D1:CBF8 1F E5 D1 62 
              1B D4 -  -  	.dl Clouds_0, Clouds_0_Fast_F
  276 D1:CBFE A0 -  -  -  	.db %10100000
  277 D1:CBFF 48 E5 D1 C8 
              1B D4 -  -  	.dl Clouds_1, Clouds_1_Fast_F
  278 D1:CC05 A0 -  -  -  	.db %10100000
  279 D1:CC06 9B E5 D1 2C 
              1C D4 -  -  	.dl Clouds_4, Clouds_4_Fast_F
  280 D1:CC0C A0 -  -  -  	.db %10100000
  281 D1:CC0D 6F E5 D1 6C 
              1C D4 -  -  	.dl Clouds_3, Clouds_3_Fast_F
  282 D1:CC13 A0 -  -  -  	.db %10100000
  283 D1:CC14 66 E3 D1 D8 
              1C D4 -  -  	.dl Clouds_2, Clouds_2_Fast_F
  284 D1:CC1A A0 -  -  -  	.db %10100000
  285 D1:CC1B 8A E3 D1 89 
              1D D4 -  -  	.dl Frog_0, Frog_0_Slow_O
  286 D1:CC21 40 -  -  -  	.db %01000000
  287 D1:CC22 -  -  -  -  
  288 D1:CC22 -  -  -  -  decompress_frame_up_0:
  289 D1:CC22 40 -  -  -  	.db 64
  290 D1:CC23 FC D3 D1 B8 
              1E D4 -  -  	.dl BigGrassBase, BigGrassBase_Fast
  291 D1:CC29 80 -  -  -  	.db %10000000
  292 D1:CC2A 95 D4 D1 20 
              20 D4 -  -  	.dl BigGrassTop, BigGrassTop_Fast
  293 D1:CC30 80 -  -  -  	.db %10000000
  294 D1:CC31 FC D3 D1 15 
              21 D4 -  -  	.dl BigGrassBase, BigGrassBase_Slow_O
  295 D1:CC37 40 -  -  -  	.db %01000000
  296 D1:CC38 FC D3 D1 CC 
              22 D4 -  -  	.dl BigGrassBase, BigGrassBase_Fast_F
  297 D1:CC3E A0 -  -  -  	.db %10100000
  298 D1:CC3F 95 D4 D1 34 
              24 D4 -  -  	.dl BigGrassTop, BigGrassTop_Fast_F
  299 D1:CC45 A0 -  -  -  	.db %10100000
  300 D1:CC46 95 D4 D1 29 
              25 D4 -  -  	.dl BigGrassTop, BigGrassTop_Slow_O
  301 D1:CC4C 40 -  -  -  	.db %01000000
  302 D1:CC4D 10 D5 D1 63 
              26 D4 -  -  	.dl DualLeaf4, DualLeaf4_Slow
  303 D1:CC53 00 -  -  -  	.db %00000000
  304 D1:CC54 10 D5 D1 13 
              27 D4 -  -  	.dl DualLeaf4, DualLeaf4_Slow_F
  305 D1:CC5A 20 -  -  -  	.db %00100000
  306 D1:CC5B 4A D5 D1 C4 
              27 D4 -  -  	.dl DualLeaf3, DualLeaf3_Fast
  307 D1:CC61 80 -  -  -  	.db %10000000
  308 D1:CC62 80 D5 D1 3C 
              28 D4 -  -  	.dl Branches_10, Branches_10_Fast
  309 D1:CC68 80 -  -  -  	.db %10000000
  310 D1:CC69 CA D5 D1 B4 
              28 D4 -  -  	.dl Branches_9, Branches_9_Fast
  311 D1:CC6F 80 -  -  -  	.db %10000000
  312 D1:CC70 1A D6 D1 37 
              29 D4 -  -  	.dl Branches_16, Branches_16_Slow
  313 D1:CC76 00 -  -  -  	.db %00000000
  314 D1:CC77 47 D6 D1 A4 
              29 D4 -  -  	.dl Branches_13, Branches_13_Fast
  315 D1:CC7D 80 -  -  -  	.db %10000000
  316 D1:CC7E 65 D6 D1 D6 
              29 D4 -  -  	.dl Leaves1, Leaves1_Fast
  317 D1:CC84 80 -  -  -  	.db %10000000
  318 D1:CC85 1B D7 D1 EE 
              2A D4 -  -  	.dl DualLeaf1, DualLeaf1_Fast
  319 D1:CC8B 80 -  -  -  	.db %10000000
  320 D1:CC8C 46 D7 D1 5E 
              2B D4 -  -  	.dl DualLeaf2, DualLeaf2_Fast
  321 D1:CC92 80 -  -  -  	.db %10000000
  322 D1:CC93 46 D7 D1 CF 
              2B D4 -  -  	.dl DualLeaf2, DualLeaf2_Slow_O
  323 D1:CC99 40 -  -  -  	.db %01000000
  324 D1:CC9A 1B D7 D1 79 
              2C D4 -  -  	.dl DualLeaf1, DualLeaf1_Slow_O
  325 D1:CCA0 40 -  -  -  	.db %01000000
  326 D1:CCA1 75 D7 D1 21 
              2D D4 -  -  	.dl Branches_6, Branches_6_Slow
  327 D1:CCA7 00 -  -  -  	.db %00000000
  328 D1:CCA8 80 D5 D1 BE 
              2D D4 -  -  	.dl Branches_10, Branches_10_Fast_F
  329 D1:CCAE A0 -  -  -  	.db %10100000
  330 D1:CCAF BF D7 D1 36 
              2E D4 -  -  	.dl Branches_7, Branches_7_Fast
  331 D1:CCB5 80 -  -  -  	.db %10000000
  332 D1:CCB6 04 D8 D1 AF 
              2E D4 -  -  	.dl Branches_15, Branches_15_Slow
  333 D1:CCBC 00 -  -  -  	.db %00000000
  334 D1:CCBD 28 D8 D1 20 
              2F D4 -  -  	.dl Branches_8, Branches_8_Fast_F
  335 D1:CCC3 A0 -  -  -  	.db %10100000
  336 D1:CCC4 59 D8 D1 7E 
              2F D4 -  -  	.dl Branches_12, Branches_12_Fast
  337 D1:CCCA 80 -  -  -  	.db %10000000
  338 D1:CCCB 04 D8 D1 D9 
              2F D4 -  -  	.dl Branches_15, Branches_15_Slow_O_F
  339 D1:CCD1 60 -  -  -  	.db %01100000
  340 D1:CCD2 93 D8 D1 4A 
              30 D4 -  -  	.dl LeavesDark, LeavesDark_Fast
  341 D1:CCD8 80 -  -  -  	.db %10000000
  342 D1:CCD9 93 D8 D1 62 
              31 D4 -  -  	.dl LeavesDark, LeavesDark_Fast_F
  343 D1:CCDF A0 -  -  -  	.db %10100000
  344 D1:CCE0 12 D9 D1 7A 
              32 D4 -  -  	.dl Leaves2, Leaves2_Fast
  345 D1:CCE6 80 -  -  -  	.db %10000000
  346 D1:CCE7 12 D9 D1 66 
              33 D4 -  -  	.dl Leaves2, Leaves2_Fast_F
  347 D1:CCED A0 -  -  -  	.db %10100000
  348 D1:CCEE AA D9 D1 52 
              34 D4 -  -  	.dl LeavesLight, LeavesLight_Fast
  349 D1:CCF4 80 -  -  -  	.db %10000000
  350 D1:CCF5 28 D8 D1 6A 
              35 D4 -  -  	.dl Branches_8, Branches_8_Fast
  351 D1:CCFB 80 -  -  -  	.db %10000000
  352 D1:CCFC 29 DA D1 C8 
              35 D4 -  -  	.dl Branches_11, Branches_11_Fast_F
  353 D1:CD02 A0 -  -  -  	.db %10100000
  354 D1:CD03 1A D6 D1 2F 
              36 D4 -  -  	.dl Branches_16, Branches_16_Slow_O_F
  355 D1:CD09 60 -  -  -  	.db %01100000
  356 D1:CD0A 47 D6 D1 9C 
              36 D4 -  -  	.dl Branches_13, Branches_13_Fast_F
  357 D1:CD10 A0 -  -  -  	.db %10100000
  358 D1:CD11 67 DA D1 CD 
              36 D4 -  -  	.dl Branches_14, Branches_14_Slow
  359 D1:CD17 00 -  -  -  	.db %00000000
  360 D1:CD18 86 DA D1 3A 
              37 D4 -  -  	.dl Branches_4, Branches_4_Fast_F
  361 D1:CD1E A0 -  -  -  	.db %10100000
  362 D1:CD1F BF D7 D1 D8 
              37 D4 -  -  	.dl Branches_7, Branches_7_Fast_F
  363 D1:CD25 A0 -  -  -  	.db %10100000
  364 D1:CD26 59 D8 D1 52 
              38 D4 -  -  	.dl Branches_12, Branches_12_Fast_F
  365 D1:CD2C A0 -  -  -  	.db %10100000
  366 D1:CD2D 65 D6 D1 AE 
              38 D4 -  -  	.dl Leaves1, Leaves1_Fast_F
  367 D1:CD33 A0 -  -  -  	.db %10100000
  368 D1:CD34 02 DC D1 C6 
              39 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast_F
  369 D1:CD3A A0 -  -  -  	.db %10100000
  370 D1:CD3B 02 DC D1 78 
              3A D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast
  371 D1:CD41 80 -  -  -  	.db %10000000
  372 D1:CD42 47 DC D1 2A 
              3B D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast
  373 D1:CD48 80 -  -  -  	.db %10000000
  374 D1:CD49 47 DC D1 AA 
              3B D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast_F
  375 D1:CD4F A0 -  -  -  	.db %10100000
  376 D1:CD50 28 D8 D1 29 
              3C D4 -  -  	.dl Branches_8, Branches_8_Slow_O_F
  377 D1:CD56 60 -  -  -  	.db %01100000
  378 D1:CD57 CA D5 D1 B1 
              3C D4 -  -  	.dl Branches_9, Branches_9_Slow_O
  379 D1:CD5D 40 -  -  -  	.db %01000000
  380 D1:CD5E 91 DC D1 60 
              3D D4 -  -  	.dl Tree_2, Tree_2_Fast
  381 D1:CD64 80 -  -  -  	.db %10000000
  382 D1:CD65 FC DC D1 5C 
              3E D4 -  -  	.dl Tree_4, Tree_4_Fast
  383 D1:CD6B 80 -  -  -  	.db %10000000
  384 D1:CD6C 69 DD D1 5E 
              3F D4 -  -  	.dl Tree_7, Tree_7_Fast
  385 D1:CD72 80 -  -  -  	.db %10000000
  386 D1:CD73 D6 DD D1 60 
              40 D4 -  -  	.dl Tree_9, Tree_9_Fast
  387 D1:CD79 80 -  -  -  	.db %10000000
  388 D1:CD7A 43 DE D1 62 
              41 D4 -  -  	.dl Tree_6, Tree_6_Fast_F
  389 D1:CD80 A0 -  -  -  	.db %10100000
  390 D1:CD81 B0 DE D1 64 
              42 D4 -  -  	.dl Tree_3, Tree_3_Fast_F
  391 D1:CD87 A0 -  -  -  	.db %10100000
  392 D1:CD88 1D DF D1 66 
              43 D4 -  -  	.dl Tree_0, Tree_0_Fast_F
  393 D1:CD8E A0 -  -  -  	.db %10100000
  394 D1:CD8F B0 DE D1 62 
              44 D4 -  -  	.dl Tree_3, Tree_3_Fast
  395 D1:CD95 80 -  -  -  	.db %10000000
  396 D1:CD96 88 DF D1 64 
              45 D4 -  -  	.dl Tree_8, Tree_8_Fast
  397 D1:CD9C 80 -  -  -  	.db %10000000
  398 D1:CD9D D6 DD D1 66 
              46 D4 -  -  	.dl Tree_9, Tree_9_Fast_F
  399 D1:CDA3 A0 -  -  -  	.db %10100000
  400 D1:CDA4 88 DF D1 68 
              47 D4 -  -  	.dl Tree_8, Tree_8_Fast_F
  401 D1:CDAA A0 -  -  -  	.db %10100000
  402 D1:CDAB FC DC D1 6A 
              48 D4 -  -  	.dl Tree_4, Tree_4_Fast_F
  403 D1:CDB1 A0 -  -  -  	.db %10100000
  404 D1:CDB2 1D DF D1 6C 
              49 D4 -  -  	.dl Tree_0, Tree_0_Fast
  405 D1:CDB8 80 -  -  -  	.db %10000000
  406 D1:CDB9 43 DE D1 68 
              4A D4 -  -  	.dl Tree_6, Tree_6_Fast
  407 D1:CDBF 80 -  -  -  	.db %10000000
  408 D1:CDC0 F5 DF D1 6A 
              4B D4 -  -  	.dl Tree_10, Tree_10_Fast
  409 D1:CDC6 80 -  -  -  	.db %10000000
  410 D1:CDC7 69 DD D1 6C 
              4C D4 -  -  	.dl Tree_7, Tree_7_Fast_F
  411 D1:CDCD A0 -  -  -  	.db %10100000
  412 D1:CDCE 62 E0 D1 6E 
              4D D4 -  -  	.dl Tree_1, Tree_1_Fast_F
  413 D1:CDD4 A0 -  -  -  	.db %10100000
  414 D1:CDD5 62 E0 D1 6C 
              4E D4 -  -  	.dl Tree_1, Tree_1_Fast
  415 D1:CDDB 80 -  -  -  	.db %10000000
  416 D1:CDDC CE E0 D1 6A 
              4F D4 -  -  	.dl Tree_5, Tree_5_Fast
  417 D1:CDE2 80 -  -  -  	.db %10000000
  418 D1:CDE3 -  -  -  -  
  419 D1:CDE3 -  -  -  -  decompress_frame_up_1:
  420 D1:CDE3 00 -  -  -  	.db 0
  421 D1:CDE4 -  -  -  -  
  422 D1:CDE4 -  -  -  -  decompress_frame_up_2:
  423 D1:CDE4 04 -  -  -  	.db 4
  424 D1:CDE5 A8 E1 D1 6B 
              50 D4 -  -  	.dl Branches_1, Branches_1_Slow_O
  425 D1:CDEB 40 -  -  -  	.db %01000000
  426 D1:CDEC A2 DB D1 31 
              51 D4 -  -  	.dl Branches_2, Branches_2_Slow_O
  427 D1:CDF2 40 -  -  -  	.db %01000000
  428 D1:CDF3 86 DA D1 11 
              52 D4 -  -  	.dl Branches_4, Branches_4_Slow_O
  429 D1:CDF9 40 -  -  -  	.db %01000000
  430 D1:CDFA BF D7 D1 DD 
              52 D4 -  -  	.dl Branches_7, Branches_7_Slow_O
  431 D1:CE00 40 -  -  -  	.db %01000000
  432 D1:CE01 -  -  -  -  
  433 D1:CE01 -  -  -  -  decompress_frame_up_3:
  434 D1:CE01 00 -  -  -  	.db 0
  435 D1:CE02 -  -  -  -  
  436 D1:CE02 -  -  -  -  decompress_frame_up_4:
  437 D1:CE02 03 -  -  -  	.db 3
  438 D1:CE03 0E E3 D1 B8 
              1E D4 -  -  	.dl Branches_0, Branches_0_Fast_F
  439 D1:CE09 A0 -  -  -  	.db %10100000
  440 D1:CE0A 28 D8 D1 4F 
              1F D4 -  -  	.dl Branches_8, Branches_8_Slow_O
  441 D1:CE10 40 -  -  -  	.db %01000000
  442 D1:CE11 CA D5 D1 D8 
              1F D4 -  -  	.dl Branches_9, Branches_9_Fast_F
  443 D1:CE17 A0 -  -  -  	.db %10100000
  444 D1:CE18 -  -  -  -  
  445 D1:CE18 -  -  -  -  decompress_frame_up_5:
  446 D1:CE18 01 -  -  -  	.db 1
  447 D1:CE19 86 DA D1 5A 
              20 D4 -  -  	.dl Branches_4, Branches_4_Fast
  448 D1:CE1F 80 -  -  -  	.db %10000000
  449 D1:CE20 -  -  -  -  
  450 D1:CE20 -  -  -  -  decompress_frame_up_6:
  451 D1:CE20 00 -  -  -  	.db 0
  452 D1:CE21 -  -  -  -  
  453 D1:CE21 -  -  -  -  decompress_frame_up_7:
  454 D1:CE21 00 -  -  -  	.db 0
  455 D1:CE22 -  -  -  -  
  456 D1:CE22 -  -  -  -  decompress_frame_up_8:
  457 D1:CE22 00 -  -  -  	.db 0
  458 D1:CE23 -  -  -  -  
  459 D1:CE23 -  -  -  -  decompress_frame_up_9:
  460 D1:CE23 00 -  -  -  	.db 0
  461 D1:CE24 -  -  -  -  
  462 D1:CE24 -  -  -  -  decompress_frame_up_10:
  463 D1:CE24 00 -  -  -  	.db 0
  464 D1:CE25 -  -  -  -  
  465 D1:CE25 -  -  -  -  decompress_frame_up_11:
  466 D1:CE25 00 -  -  -  	.db 0
  467 D1:CE26 -  -  -  -  
  468 D1:CE26 -  -  -  -  decompress_frame_up_12:
  469 D1:CE26 00 -  -  -  	.db 0
  470 D1:CE27 -  -  -  -  
  471 D1:CE27 -  -  -  -  decompress_frame_up_13:
  472 D1:CE27 00 -  -  -  	.db 0
  473 D1:CE28 -  -  -  -  
  474 D1:CE28 -  -  -  -  decompress_frame_up_14:
  475 D1:CE28 00 -  -  -  	.db 0
  476 D1:CE29 -  -  -  -  
  477 D1:CE29 -  -  -  -  decompress_frame_up_15:
  478 D1:CE29 00 -  -  -  	.db 0
  479 D1:CE2A -  -  -  -  
  480 D1:CE2A -  -  -  -  decompress_frame_up_16:
  481 D1:CE2A 00 -  -  -  	.db 0
  482 D1:CE2B -  -  -  -  
  483 D1:CE2B -  -  -  -  decompress_frame_up_17:
  484 D1:CE2B 00 -  -  -  	.db 0
  485 D1:CE2C -  -  -  -  
  486 D1:CE2C -  -  -  -  decompress_frame_up_18:
  487 D1:CE2C 00 -  -  -  	.db 0
  488 D1:CE2D -  -  -  -  
  489 D1:CE2D -  -  -  -  decompress_frame_up_19:
  490 D1:CE2D 00 -  -  -  	.db 0
  491 D1:CE2E -  -  -  -  
  492 D1:CE2E -  -  -  -  decompress_frame_up_20:
  493 D1:CE2E 00 -  -  -  	.db 0
  494 D1:CE2F -  -  -  -  
  495 D1:CE2F -  -  -  -  decompress_frame_up_21:
  496 D1:CE2F 00 -  -  -  	.db 0
  497 D1:CE30 -  -  -  -  
  498 D1:CE30 -  -  -  -  decompress_frame_up_22:
  499 D1:CE30 00 -  -  -  	.db 0
  500 D1:CE31 -  -  -  -  
  501 D1:CE31 -  -  -  -  decompress_frame_up_23:
  502 D1:CE31 00 -  -  -  	.db 0
  503 D1:CE32 -  -  -  -  
  504 D1:CE32 -  -  -  -  decompress_frame_up_24:
  505 D1:CE32 00 -  -  -  	.db 0
  506 D1:CE33 -  -  -  -  
  507 D1:CE33 -  -  -  -  decompress_frame_up_25:
  508 D1:CE33 00 -  -  -  	.db 0
  509 D1:CE34 -  -  -  -  
  510 D1:CE34 -  -  -  -  decompress_frame_up_26:
  511 D1:CE34 00 -  -  -  	.db 0
  512 D1:CE35 -  -  -  -  
  513 D1:CE35 -  -  -  -  decompress_frame_up_27:
  514 D1:CE35 00 -  -  -  	.db 0
  515 D1:CE36 -  -  -  -  
  516 D1:CE36 -  -  -  -  decompress_frame_up_28:
  517 D1:CE36 00 -  -  -  	.db 0
  518 D1:CE37 -  -  -  -  
  519 D1:CE37 -  -  -  -  decompress_frame_up_29:
  520 D1:CE37 00 -  -  -  	.db 0
  521 D1:CE38 -  -  -  -  
  522 D1:CE38 -  -  -  -  decompress_frame_up_30:
  523 D1:CE38 00 -  -  -  	.db 0
  524 D1:CE39 -  -  -  -  
  525 D1:CE39 -  -  -  -  decompress_frame_up_31:
  526 D1:CE39 00 -  -  -  	.db 0
  527 D1:CE3A -  -  -  -  
  528 D1:CE3A -  -  -  -  decompress_frame_up_32:
  529 D1:CE3A 00 -  -  -  	.db 0
  530 D1:CE3B -  -  -  -  
  531 D1:CE3B -  -  -  -  decompress_frame_up_33:
  532 D1:CE3B 00 -  -  -  	.db 0
  533 D1:CE3C -  -  -  -  
  534 D1:CE3C -  -  -  -  decompress_frame_up_34:
  535 D1:CE3C 00 -  -  -  	.db 0
  536 D1:CE3D -  -  -  -  
  537 D1:CE3D -  -  -  -  decompress_frame_up_35:
  538 D1:CE3D 00 -  -  -  	.db 0
  539 D1:CE3E -  -  -  -  
  540 D1:CE3E -  -  -  -  decompress_frame_up_36:
  541 D1:CE3E 00 -  -  -  	.db 0
  542 D1:CE3F -  -  -  -  
  543 D1:CE3F -  -  -  -  decompress_frame_up_37:
  544 D1:CE3F 00 -  -  -  	.db 0
  545 D1:CE40 -  -  -  -  
  546 D1:CE40 -  -  -  -  decompress_frame_up_38:
  547 D1:CE40 00 -  -  -  	.db 0
  548 D1:CE41 -  -  -  -  
  549 D1:CE41 -  -  -  -  decompress_frame_up_39:
  550 D1:CE41 00 -  -  -  	.db 0
  551 D1:CE42 -  -  -  -  
  552 D1:CE42 -  -  -  -  decompress_frame_up_40:
  553 D1:CE42 00 -  -  -  	.db 0
  554 D1:CE43 -  -  -  -  
  555 D1:CE43 -  -  -  -  decompress_frame_up_41:
  556 D1:CE43 00 -  -  -  	.db 0
  557 D1:CE44 -  -  -  -  
  558 D1:CE44 -  -  -  -  decompress_frame_up_42:
  559 D1:CE44 00 -  -  -  	.db 0
  560 D1:CE45 -  -  -  -  
  561 D1:CE45 -  -  -  -  decompress_frame_up_43:
  562 D1:CE45 00 -  -  -  	.db 0
  563 D1:CE46 -  -  -  -  
  564 D1:CE46 -  -  -  -  decompress_frame_up_44:
  565 D1:CE46 00 -  -  -  	.db 0
  566 D1:CE47 -  -  -  -  
  567 D1:CE47 -  -  -  -  decompress_frame_up_45:
  568 D1:CE47 00 -  -  -  	.db 0
  569 D1:CE48 -  -  -  -  
  570 D1:CE48 -  -  -  -  decompress_frame_up_46:
  571 D1:CE48 00 -  -  -  	.db 0
  572 D1:CE49 -  -  -  -  
  573 D1:CE49 -  -  -  -  decompress_frame_up_47:
  574 D1:CE49 00 -  -  -  	.db 0
  575 D1:CE4A -  -  -  -  
  576 D1:CE4A -  -  -  -  decompress_frame_up_48:
  577 D1:CE4A 00 -  -  -  	.db 0
  578 D1:CE4B -  -  -  -  
  579 D1:CE4B -  -  -  -  decompress_frame_up_49:
  580 D1:CE4B 00 -  -  -  	.db 0
  581 D1:CE4C -  -  -  -  
  582 D1:CE4C -  -  -  -  decompress_frame_up_50:
  583 D1:CE4C 00 -  -  -  	.db 0
  584 D1:CE4D -  -  -  -  
  585 D1:CE4D -  -  -  -  decompress_frame_up_51:
  586 D1:CE4D 00 -  -  -  	.db 0
  587 D1:CE4E -  -  -  -  
  588 D1:CE4E -  -  -  -  decompress_frame_up_52:
  589 D1:CE4E 00 -  -  -  	.db 0
  590 D1:CE4F -  -  -  -  
  591 D1:CE4F -  -  -  -  decompress_frame_up_53:
  592 D1:CE4F 00 -  -  -  	.db 0
  593 D1:CE50 -  -  -  -  
  594 D1:CE50 -  -  -  -  decompress_frame_up_54:
  595 D1:CE50 00 -  -  -  	.db 0
  596 D1:CE51 -  -  -  -  
  597 D1:CE51 -  -  -  -  decompress_frame_up_55:
  598 D1:CE51 00 -  -  -  	.db 0
  599 D1:CE52 -  -  -  -  
  600 D1:CE52 -  -  -  -  decompress_frame_up_56:
  601 D1:CE52 00 -  -  -  	.db 0
  602 D1:CE53 -  -  -  -  
  603 D1:CE53 -  -  -  -  decompress_frame_up_57:
  604 D1:CE53 00 -  -  -  	.db 0
  605 D1:CE54 -  -  -  -  
  606 D1:CE54 -  -  -  -  decompress_frame_up_58:
  607 D1:CE54 00 -  -  -  	.db 0
  608 D1:CE55 -  -  -  -  
  609 D1:CE55 -  -  -  -  decompress_frame_up_59:
  610 D1:CE55 00 -  -  -  	.db 0
  611 D1:CE56 -  -  -  -  
  612 D1:CE56 -  -  -  -  decompress_frame_up_60:
  613 D1:CE56 00 -  -  -  	.db 0
  614 D1:CE57 -  -  -  -  
  615 D1:CE57 -  -  -  -  decompress_frame_up_61:
  616 D1:CE57 00 -  -  -  	.db 0
  617 D1:CE58 -  -  -  -  
  618 D1:CE58 -  -  -  -  decompress_frame_up_62:
  619 D1:CE58 00 -  -  -  	.db 0
  620 D1:CE59 -  -  -  -  
  621 D1:CE59 -  -  -  -  decompress_frame_up_63:
  622 D1:CE59 00 -  -  -  	.db 0
  623 D1:CE5A -  -  -  -  
  624 D1:CE5A -  -  -  -  decompress_frame_up_64:
  625 D1:CE5A 00 -  -  -  	.db 0
  626 D1:CE5B -  -  -  -  
  627 D1:CE5B -  -  -  -  decompress_frame_up_65:
  628 D1:CE5B 00 -  -  -  	.db 0
  629 D1:CE5C -  -  -  -  
  630 D1:CE5C -  -  -  -  decompress_frame_up_66:
  631 D1:CE5C 00 -  -  -  	.db 0
  632 D1:CE5D -  -  -  -  
  633 D1:CE5D -  -  -  -  decompress_frame_up_67:
  634 D1:CE5D 00 -  -  -  	.db 0
  635 D1:CE5E -  -  -  -  
  636 D1:CE5E -  -  -  -  decompress_frame_up_68:
  637 D1:CE5E 00 -  -  -  	.db 0
  638 D1:CE5F -  -  -  -  
  639 D1:CE5F -  -  -  -  decompress_frame_up_69:
  640 D1:CE5F 00 -  -  -  	.db 0
  641 D1:CE60 -  -  -  -  
  642 D1:CE60 -  -  -  -  decompress_frame_up_70:
  643 D1:CE60 00 -  -  -  	.db 0
  644 D1:CE61 -  -  -  -  
  645 D1:CE61 -  -  -  -  decompress_frame_up_71:
  646 D1:CE61 00 -  -  -  	.db 0
  647 D1:CE62 -  -  -  -  
  648 D1:CE62 -  -  -  -  decompress_frame_up_72:
  649 D1:CE62 00 -  -  -  	.db 0
  650 D1:CE63 -  -  -  -  
  651 D1:CE63 -  -  -  -  decompress_frame_up_73:
  652 D1:CE63 00 -  -  -  	.db 0
  653 D1:CE64 -  -  -  -  
  654 D1:CE64 -  -  -  -  decompress_frame_up_74:
  655 D1:CE64 00 -  -  -  	.db 0
  656 D1:CE65 -  -  -  -  
  657 D1:CE65 -  -  -  -  decompress_frame_up_75:
  658 D1:CE65 00 -  -  -  	.db 0
  659 D1:CE66 -  -  -  -  
  660 D1:CE66 -  -  -  -  decompress_frame_up_76:
  661 D1:CE66 00 -  -  -  	.db 0
  662 D1:CE67 -  -  -  -  
  663 D1:CE67 -  -  -  -  decompress_frame_up_77:
  664 D1:CE67 00 -  -  -  	.db 0
  665 D1:CE68 -  -  -  -  
  666 D1:CE68 -  -  -  -  decompress_frame_up_78:
  667 D1:CE68 00 -  -  -  	.db 0
  668 D1:CE69 -  -  -  -  
  669 D1:CE69 -  -  -  -  decompress_frame_up_79:
  670 D1:CE69 00 -  -  -  	.db 0
  671 D1:CE6A -  -  -  -  
  672 D1:CE6A -  -  -  -  decompress_frame_up_80:
  673 D1:CE6A 00 -  -  -  	.db 0
  674 D1:CE6B -  -  -  -  
  675 D1:CE6B -  -  -  -  decompress_frame_up_81:
  676 D1:CE6B 00 -  -  -  	.db 0
  677 D1:CE6C -  -  -  -  
  678 D1:CE6C -  -  -  -  decompress_frame_up_82:
  679 D1:CE6C 00 -  -  -  	.db 0
  680 D1:CE6D -  -  -  -  
  681 D1:CE6D -  -  -  -  decompress_frame_up_83:
  682 D1:CE6D 00 -  -  -  	.db 0
  683 D1:CE6E -  -  -  -  
  684 D1:CE6E -  -  -  -  decompress_frame_up_84:
  685 D1:CE6E 00 -  -  -  	.db 0
  686 D1:CE6F -  -  -  -  
  687 D1:CE6F -  -  -  -  decompress_frame_up_85:
  688 D1:CE6F 00 -  -  -  	.db 0
  689 D1:CE70 -  -  -  -  
  690 D1:CE70 -  -  -  -  decompress_frame_up_86:
  691 D1:CE70 00 -  -  -  	.db 0
  692 D1:CE71 -  -  -  -  
  693 D1:CE71 -  -  -  -  decompress_frame_up_87:
  694 D1:CE71 00 -  -  -  	.db 0
  695 D1:CE72 -  -  -  -  
  696 D1:CE72 -  -  -  -  decompress_frame_up_88:
  697 D1:CE72 00 -  -  -  	.db 0
  698 D1:CE73 -  -  -  -  
  699 D1:CE73 -  -  -  -  decompress_frame_up_89:
  700 D1:CE73 00 -  -  -  	.db 0
  701 D1:CE74 -  -  -  -  
  702 D1:CE74 -  -  -  -  
  703 D1:CE74 -  -  -  -  
  704 D1:CE74 -  -  -  -  decompress_frame_down_0:
  705 D1:CE74 00 -  -  -  	.db 0
  706 D1:CE75 -  -  -  -  
  707 D1:CE75 -  -  -  -  decompress_frame_down_1:
  708 D1:CE75 00 -  -  -  	.db 0
  709 D1:CE76 -  -  -  -  
  710 D1:CE76 -  -  -  -  decompress_frame_down_2:
  711 D1:CE76 07 -  -  -  	.db 7
  712 D1:CE77 FC D3 D1 B8 
              1E D4 -  -  	.dl BigGrassBase, BigGrassBase_Fast
  713 D1:CE7D 80 -  -  -  	.db %10000000
  714 D1:CE7E 95 D4 D1 20 
              20 D4 -  -  	.dl BigGrassTop, BigGrassTop_Fast
  715 D1:CE84 80 -  -  -  	.db %10000000
  716 D1:CE85 FC D3 D1 15 
              21 D4 -  -  	.dl BigGrassBase, BigGrassBase_Slow_O
  717 D1:CE8B 40 -  -  -  	.db %01000000
  718 D1:CE8C FC D3 D1 CC 
              22 D4 -  -  	.dl BigGrassBase, BigGrassBase_Fast_F
  719 D1:CE92 A0 -  -  -  	.db %10100000
  720 D1:CE93 95 D4 D1 34 
              24 D4 -  -  	.dl BigGrassTop, BigGrassTop_Fast_F
  721 D1:CE99 A0 -  -  -  	.db %10100000
  722 D1:CE9A 95 D4 D1 29 
              25 D4 -  -  	.dl BigGrassTop, BigGrassTop_Slow_O
  723 D1:CEA0 40 -  -  -  	.db %01000000
  724 D1:CEA1 10 D5 D1 13 
              27 D4 -  -  	.dl DualLeaf4, DualLeaf4_Slow_F
  725 D1:CEA7 20 -  -  -  	.db %00100000
  726 D1:CEA8 -  -  -  -  
  727 D1:CEA8 -  -  -  -  decompress_frame_down_3:
  728 D1:CEA8 00 -  -  -  	.db 0
  729 D1:CEA9 -  -  -  -  
  730 D1:CEA9 -  -  -  -  decompress_frame_down_4:
  731 D1:CEA9 03 -  -  -  	.db 3
  732 D1:CEAA 28 D8 D1 29 
              3C D4 -  -  	.dl Branches_8, Branches_8_Slow_O_F
  733 D1:CEB0 60 -  -  -  	.db %01100000
  734 D1:CEB1 ED E2 D1 2D 
              0D D4 -  -  	.dl Vine7, Vine7_Slow
  735 D1:CEB7 00 -  -  -  	.db %00000000
  736 D1:CEB8 4D E2 D1 15 
              0F D4 -  -  	.dl Vine4, Vine4_Slow
  737 D1:CEBE 00 -  -  -  	.db %00000000
  738 D1:CEBF -  -  -  -  
  739 D1:CEBF -  -  -  -  decompress_frame_down_5:
  740 D1:CEBF 00 -  -  -  	.db 0
  741 D1:CEC0 -  -  -  -  
  742 D1:CEC0 -  -  -  -  decompress_frame_down_6:
  743 D1:CEC0 0C -  -  -  	.db 12
  744 D1:CEC1 03 E2 D1 4D 
              08 D4 -  -  	.dl Vine2, Vine2_Slow
  745 D1:CEC7 00 -  -  -  	.db %00000000
  746 D1:CEC8 27 E2 D1 ED 
              08 D4 -  -  	.dl VineVertical, VineVertical_Slow_O
  747 D1:CECE 40 -  -  -  	.db %01000000
  748 D1:CECF 27 E2 D1 99 
              09 D4 -  -  	.dl VineVertical, VineVertical_Slow
  749 D1:CED5 00 -  -  -  	.db %00000000
  750 D1:CED6 4D E2 D1 47 
              0A D4 -  -  	.dl Vine4, Vine4_Slow_F
  751 D1:CEDC 20 -  -  -  	.db %00100000
  752 D1:CEDD 4D E2 D1 07 
              0B D4 -  -  	.dl Vine4, Vine4_Slow_O_F
  753 D1:CEE3 60 -  -  -  	.db %01100000
  754 D1:CEE4 89 E2 D1 C7 
              0B D4 -  -  	.dl Vine5, Vine5_Slow_O_F
  755 D1:CEEA 60 -  -  -  	.db %01100000
  756 D1:CEEB C1 E2 D1 87 
              0C D4 -  -  	.dl Vine6, Vine6_Slow_O
  757 D1:CEF1 40 -  -  -  	.db %01000000
  758 D1:CEF2 89 E2 D1 B3 
              0D D4 -  -  	.dl Vine5, Vine5_Slow
  759 D1:CEF8 00 -  -  -  	.db %00000000
  760 D1:CEF9 C1 E2 D1 71 
              0E D4 -  -  	.dl Vine6, Vine6_Slow
  761 D1:CEFF 00 -  -  -  	.db %00000000
  762 D1:CF00 ED E2 D1 D5 
              0F D4 -  -  	.dl Vine7, Vine7_Slow_O
  763 D1:CF06 40 -  -  -  	.db %01000000
  764 D1:CF07 89 E2 D1 55 
              10 D4 -  -  	.dl Vine5, Vine5_Slow_O
  765 D1:CF0D 40 -  -  -  	.db %01000000
  766 D1:CF0E 4D E2 D1 13 
              11 D4 -  -  	.dl Vine4, Vine4_Slow_O
  767 D1:CF14 40 -  -  -  	.db %01000000
  768 D1:CF15 -  -  -  -  
  769 D1:CF15 -  -  -  -  decompress_frame_down_7:
  770 D1:CF15 00 -  -  -  	.db 0
  771 D1:CF16 -  -  -  -  
  772 D1:CF16 -  -  -  -  decompress_frame_down_8:
  773 D1:CF16 03 -  -  -  	.db 3
  774 D1:CF17 A8 E1 D1 D2 
              11 D4 -  -  	.dl Branches_1, Branches_1_Fast_F
  775 D1:CF1D A0 -  -  -  	.db %10100000
  776 D1:CF1E A2 DB D1 6A 
              12 D4 -  -  	.dl Branches_2, Branches_2_Fast_F
  777 D1:CF24 A0 -  -  -  	.db %10100000
  778 D1:CF25 E4 DA D1 14 
              13 D4 -  -  	.dl Branches_5, Branches_5_Fast_F
  779 D1:CF2B A0 -  -  -  	.db %10100000
  780 D1:CF2C -  -  -  -  
  781 D1:CF2C -  -  -  -  decompress_frame_down_9:
  782 D1:CF2C 00 -  -  -  	.db 0
  783 D1:CF2D -  -  -  -  
  784 D1:CF2D -  -  -  -  decompress_frame_down_10:
  785 D1:CF2D 08 -  -  -  	.db 8
  786 D1:CF2E BF D7 D1 D8 
              37 D4 -  -  	.dl Branches_7, Branches_7_Fast_F
  787 D1:CF34 A0 -  -  -  	.db %10100000
  788 D1:CF35 59 D8 D1 52 
              38 D4 -  -  	.dl Branches_12, Branches_12_Fast_F
  789 D1:CF3B A0 -  -  -  	.db %10100000
  790 D1:CF3C 65 D6 D1 AE 
              38 D4 -  -  	.dl Leaves1, Leaves1_Fast_F
  791 D1:CF42 A0 -  -  -  	.db %10100000
  792 D1:CF43 86 DA D1 5A 
              20 D4 -  -  	.dl Branches_4, Branches_4_Fast
  793 D1:CF49 80 -  -  -  	.db %10000000
  794 D1:CF4A A8 E1 D1 6B 
              50 D4 -  -  	.dl Branches_1, Branches_1_Slow_O
  795 D1:CF50 40 -  -  -  	.db %01000000
  796 D1:CF51 A2 DB D1 31 
              51 D4 -  -  	.dl Branches_2, Branches_2_Slow_O
  797 D1:CF57 40 -  -  -  	.db %01000000
  798 D1:CF58 86 DA D1 11 
              52 D4 -  -  	.dl Branches_4, Branches_4_Slow_O
  799 D1:CF5E 40 -  -  -  	.db %01000000
  800 D1:CF5F BF D7 D1 DD 
              52 D4 -  -  	.dl Branches_7, Branches_7_Slow_O
  801 D1:CF65 40 -  -  -  	.db %01000000
  802 D1:CF66 -  -  -  -  
  803 D1:CF66 -  -  -  -  decompress_frame_down_11:
  804 D1:CF66 06 -  -  -  	.db 6
  805 D1:CF67 75 D7 D1 21 
              2D D4 -  -  	.dl Branches_6, Branches_6_Slow
  806 D1:CF6D 00 -  -  -  	.db %00000000
  807 D1:CF6E 28 D8 D1 20 
              2F D4 -  -  	.dl Branches_8, Branches_8_Fast_F
  808 D1:CF74 A0 -  -  -  	.db %10100000
  809 D1:CF75 59 D8 D1 7E 
              2F D4 -  -  	.dl Branches_12, Branches_12_Fast
  810 D1:CF7B 80 -  -  -  	.db %10000000
  811 D1:CF7C 93 D8 D1 62 
              31 D4 -  -  	.dl LeavesDark, LeavesDark_Fast_F
  812 D1:CF82 A0 -  -  -  	.db %10100000
  813 D1:CF83 12 D9 D1 66 
              33 D4 -  -  	.dl Leaves2, Leaves2_Fast_F
  814 D1:CF89 A0 -  -  -  	.db %10100000
  815 D1:CF8A 86 DA D1 3A 
              37 D4 -  -  	.dl Branches_4, Branches_4_Fast_F
  816 D1:CF90 A0 -  -  -  	.db %10100000
  817 D1:CF91 -  -  -  -  
  818 D1:CF91 -  -  -  -  decompress_frame_down_12:
  819 D1:CF91 1C -  -  -  	.db 28
  820 D1:CF92 10 D5 D1 63 
              26 D4 -  -  	.dl DualLeaf4, DualLeaf4_Slow
  821 D1:CF98 00 -  -  -  	.db %00000000
  822 D1:CF99 80 D5 D1 3C 
              28 D4 -  -  	.dl Branches_10, Branches_10_Fast
  823 D1:CF9F 80 -  -  -  	.db %10000000
  824 D1:CFA0 CA D5 D1 B4 
              28 D4 -  -  	.dl Branches_9, Branches_9_Fast
  825 D1:CFA6 80 -  -  -  	.db %10000000
  826 D1:CFA7 1A D6 D1 37 
              29 D4 -  -  	.dl Branches_16, Branches_16_Slow
  827 D1:CFAD 00 -  -  -  	.db %00000000
  828 D1:CFAE 47 D6 D1 A4 
              29 D4 -  -  	.dl Branches_13, Branches_13_Fast
  829 D1:CFB4 80 -  -  -  	.db %10000000
  830 D1:CFB5 65 D6 D1 D6 
              29 D4 -  -  	.dl Leaves1, Leaves1_Fast
  831 D1:CFBB 80 -  -  -  	.db %10000000
  832 D1:CFBC 1B D7 D1 EE 
              2A D4 -  -  	.dl DualLeaf1, DualLeaf1_Fast
  833 D1:CFC2 80 -  -  -  	.db %10000000
  834 D1:CFC3 46 D7 D1 CF 
              2B D4 -  -  	.dl DualLeaf2, DualLeaf2_Slow_O
  835 D1:CFC9 40 -  -  -  	.db %01000000
  836 D1:CFCA 1B D7 D1 79 
              2C D4 -  -  	.dl DualLeaf1, DualLeaf1_Slow_O
  837 D1:CFD0 40 -  -  -  	.db %01000000
  838 D1:CFD1 80 D5 D1 BE 
              2D D4 -  -  	.dl Branches_10, Branches_10_Fast_F
  839 D1:CFD7 A0 -  -  -  	.db %10100000
  840 D1:CFD8 BF D7 D1 36 
              2E D4 -  -  	.dl Branches_7, Branches_7_Fast
  841 D1:CFDE 80 -  -  -  	.db %10000000
  842 D1:CFDF 04 D8 D1 AF 
              2E D4 -  -  	.dl Branches_15, Branches_15_Slow
  843 D1:CFE5 00 -  -  -  	.db %00000000
  844 D1:CFE6 04 D8 D1 D9 
              2F D4 -  -  	.dl Branches_15, Branches_15_Slow_O_F
  845 D1:CFEC 60 -  -  -  	.db %01100000
  846 D1:CFED 12 D9 D1 7A 
              32 D4 -  -  	.dl Leaves2, Leaves2_Fast
  847 D1:CFF3 80 -  -  -  	.db %10000000
  848 D1:CFF4 AA D9 D1 52 
              34 D4 -  -  	.dl LeavesLight, LeavesLight_Fast
  849 D1:CFFA 80 -  -  -  	.db %10000000
  850 D1:CFFB 28 D8 D1 6A 
              35 D4 -  -  	.dl Branches_8, Branches_8_Fast
  851 D1:D001 80 -  -  -  	.db %10000000
  852 D1:D002 29 DA D1 C8 
              35 D4 -  -  	.dl Branches_11, Branches_11_Fast_F
  853 D1:D008 A0 -  -  -  	.db %10100000
  854 D1:D009 1A D6 D1 2F 
              36 D4 -  -  	.dl Branches_16, Branches_16_Slow_O_F
  855 D1:D00F 60 -  -  -  	.db %01100000
  856 D1:D010 47 D6 D1 9C 
              36 D4 -  -  	.dl Branches_13, Branches_13_Fast_F
  857 D1:D016 A0 -  -  -  	.db %10100000
  858 D1:D017 67 DA D1 CD 
              36 D4 -  -  	.dl Branches_14, Branches_14_Slow
  859 D1:D01D 00 -  -  -  	.db %00000000
  860 D1:D01E E4 DA D1 C0 
              01 D4 -  -  	.dl Branches_5, Branches_5_Fast
  861 D1:D024 80 -  -  -  	.db %10000000
  862 D1:D025 42 DB D1 60 
              02 D4 -  -  	.dl Branches_3, Branches_3_Fast
  863 D1:D02B 80 -  -  -  	.db %10000000
  864 D1:D02C A2 DB D1 08 
              03 D4 -  -  	.dl Branches_2, Branches_2_Fast
  865 D1:D032 80 -  -  -  	.db %10000000
  866 D1:D033 CA D5 D1 B1 
              3C D4 -  -  	.dl Branches_9, Branches_9_Slow_O
  867 D1:D039 40 -  -  -  	.db %01000000
  868 D1:D03A A8 E1 D1 B4 
              07 D4 -  -  	.dl Branches_1, Branches_1_Fast
  869 D1:D040 80 -  -  -  	.db %10000000
  870 D1:D041 0E E3 D1 B8 
              1E D4 -  -  	.dl Branches_0, Branches_0_Fast_F
  871 D1:D047 A0 -  -  -  	.db %10100000
  872 D1:D048 28 D8 D1 4F 
              1F D4 -  -  	.dl Branches_8, Branches_8_Slow_O
  873 D1:D04E 40 -  -  -  	.db %01000000
  874 D1:D04F CA D5 D1 D8 
              1F D4 -  -  	.dl Branches_9, Branches_9_Fast_F
  875 D1:D055 A0 -  -  -  	.db %10100000
  876 D1:D056 -  -  -  -  
  877 D1:D056 -  -  -  -  decompress_frame_down_13:
  878 D1:D056 00 -  -  -  	.db 0
  879 D1:D057 -  -  -  -  
  880 D1:D057 -  -  -  -  decompress_frame_down_14:
  881 D1:D057 17 -  -  -  	.db 23
  882 D1:D058 91 DC D1 60 
              3D D4 -  -  	.dl Tree_2, Tree_2_Fast
  883 D1:D05E 80 -  -  -  	.db %10000000
  884 D1:D05F FC DC D1 5C 
              3E D4 -  -  	.dl Tree_4, Tree_4_Fast
  885 D1:D065 80 -  -  -  	.db %10000000
  886 D1:D066 69 DD D1 5E 
              3F D4 -  -  	.dl Tree_7, Tree_7_Fast
  887 D1:D06C 80 -  -  -  	.db %10000000
  888 D1:D06D D6 DD D1 60 
              40 D4 -  -  	.dl Tree_9, Tree_9_Fast
  889 D1:D073 80 -  -  -  	.db %10000000
  890 D1:D074 43 DE D1 62 
              41 D4 -  -  	.dl Tree_6, Tree_6_Fast_F
  891 D1:D07A A0 -  -  -  	.db %10100000
  892 D1:D07B B0 DE D1 64 
              42 D4 -  -  	.dl Tree_3, Tree_3_Fast_F
  893 D1:D081 A0 -  -  -  	.db %10100000
  894 D1:D082 1D DF D1 66 
              43 D4 -  -  	.dl Tree_0, Tree_0_Fast_F
  895 D1:D088 A0 -  -  -  	.db %10100000
  896 D1:D089 B0 DE D1 62 
              44 D4 -  -  	.dl Tree_3, Tree_3_Fast
  897 D1:D08F 80 -  -  -  	.db %10000000
  898 D1:D090 88 DF D1 64 
              45 D4 -  -  	.dl Tree_8, Tree_8_Fast
  899 D1:D096 80 -  -  -  	.db %10000000
  900 D1:D097 D6 DD D1 66 
              46 D4 -  -  	.dl Tree_9, Tree_9_Fast_F
  901 D1:D09D A0 -  -  -  	.db %10100000
  902 D1:D09E 88 DF D1 68 
              47 D4 -  -  	.dl Tree_8, Tree_8_Fast_F
  903 D1:D0A4 A0 -  -  -  	.db %10100000
  904 D1:D0A5 FC DC D1 6A 
              48 D4 -  -  	.dl Tree_4, Tree_4_Fast_F
  905 D1:D0AB A0 -  -  -  	.db %10100000
  906 D1:D0AC 1D DF D1 6C 
              49 D4 -  -  	.dl Tree_0, Tree_0_Fast
  907 D1:D0B2 80 -  -  -  	.db %10000000
  908 D1:D0B3 43 DE D1 68 
              4A D4 -  -  	.dl Tree_6, Tree_6_Fast
  909 D1:D0B9 80 -  -  -  	.db %10000000
  910 D1:D0BA F5 DF D1 6A 
              4B D4 -  -  	.dl Tree_10, Tree_10_Fast
  911 D1:D0C0 80 -  -  -  	.db %10000000
  912 D1:D0C1 69 DD D1 6C 
              4C D4 -  -  	.dl Tree_7, Tree_7_Fast_F
  913 D1:D0C7 A0 -  -  -  	.db %10100000
  914 D1:D0C8 62 E0 D1 6E 
              4D D4 -  -  	.dl Tree_1, Tree_1_Fast_F
  915 D1:D0CE A0 -  -  -  	.db %10100000
  916 D1:D0CF 62 E0 D1 6C 
              4E D4 -  -  	.dl Tree_1, Tree_1_Fast
  917 D1:D0D5 80 -  -  -  	.db %10000000
  918 D1:D0D6 CE E0 D1 6A 
              4F D4 -  -  	.dl Tree_5, Tree_5_Fast
  919 D1:D0DC 80 -  -  -  	.db %10000000
  920 D1:D0DD 3B E1 D1 B2 
              03 D4 -  -  	.dl Tree_11, Tree_11_Fast
  921 D1:D0E3 80 -  -  -  	.db %10000000
  922 D1:D0E4 CE E0 D1 B4 
              04 D4 -  -  	.dl Tree_5, Tree_5_Fast_F
  923 D1:D0EA A0 -  -  -  	.db %10100000
  924 D1:D0EB 91 DC D1 B6 
              05 D4 -  -  	.dl Tree_2, Tree_2_Fast_F
  925 D1:D0F1 A0 -  -  -  	.db %10100000
  926 D1:D0F2 3B E1 D1 B2 
              06 D4 -  -  	.dl Tree_11, Tree_11_Fast_F
  927 D1:D0F8 A0 -  -  -  	.db %10100000
  928 D1:D0F9 -  -  -  -  
  929 D1:D0F9 -  -  -  -  decompress_frame_down_15:
  930 D1:D0F9 00 -  -  -  	.db 0
  931 D1:D0FA -  -  -  -  
  932 D1:D0FA -  -  -  -  decompress_frame_down_16:
  933 D1:D0FA 11 -  -  -  	.db 17
  934 D1:D0FB 4A D5 D1 C4 
              27 D4 -  -  	.dl DualLeaf3, DualLeaf3_Fast
  935 D1:D101 80 -  -  -  	.db %10000000
  936 D1:D102 46 D7 D1 5E 
              2B D4 -  -  	.dl DualLeaf2, DualLeaf2_Fast
  937 D1:D108 80 -  -  -  	.db %10000000
  938 D1:D109 93 D8 D1 4A 
              30 D4 -  -  	.dl LeavesDark, LeavesDark_Fast
  939 D1:D10F 80 -  -  -  	.db %10000000
  940 D1:D110 02 DC D1 C6 
              39 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast_F
  941 D1:D116 A0 -  -  -  	.db %10100000
  942 D1:D117 02 DC D1 78 
              3A D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast
  943 D1:D11D 80 -  -  -  	.db %10000000
  944 D1:D11E 47 DC D1 2A 
              3B D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast
  945 D1:D124 80 -  -  -  	.db %10000000
  946 D1:D125 47 DC D1 AA 
              3B D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast_F
  947 D1:D12B A0 -  -  -  	.db %10100000
  948 D1:D12C 62 E4 D1 94 
              15 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast
  949 D1:D132 80 -  -  -  	.db %10000000
  950 D1:D133 62 E4 D1 1A 
              16 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast_F
  951 D1:D139 A0 -  -  -  	.db %10100000
  952 D1:D13A 97 E4 D1 A0 
              16 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast
  953 D1:D140 80 -  -  -  	.db %10000000
  954 D1:D141 97 E4 D1 26 
              17 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast_F
  955 D1:D147 A0 -  -  -  	.db %10100000
  956 D1:D148 E5 E4 D1 AC 
              17 D4 -  -  	.dl Tree_16, Tree_16_Fast
  957 D1:D14E 80 -  -  -  	.db %10000000
  958 D1:D14F FD E4 D1 01 
              18 D4 -  -  	.dl Tree_17, Tree_17_Slow
  959 D1:D155 00 -  -  -  	.db %00000000
  960 D1:D156 FD E4 D1 67 
              18 D4 -  -  	.dl Tree_17, Tree_17_Slow_O_F
  961 D1:D15C 60 -  -  -  	.db %01100000
  962 D1:D15D 0E E5 D1 CD 
              18 D4 -  -  	.dl Tree_18, Tree_18_Slow
  963 D1:D163 00 -  -  -  	.db %00000000
  964 D1:D164 0E E5 D1 31 
              19 D4 -  -  	.dl Tree_18, Tree_18_Slow_O_F
  965 D1:D16A 60 -  -  -  	.db %01100000
  966 D1:D16B E5 E4 D1 96 
              19 D4 -  -  	.dl Tree_16, Tree_16_Fast_F
  967 D1:D171 A0 -  -  -  	.db %10100000
  968 D1:D172 -  -  -  -  
  969 D1:D172 -  -  -  -  decompress_frame_down_17:
  970 D1:D172 00 -  -  -  	.db 0
  971 D1:D173 -  -  -  -  
  972 D1:D173 -  -  -  -  decompress_frame_down_18:
  973 D1:D173 00 -  -  -  	.db 0
  974 D1:D174 -  -  -  -  
  975 D1:D174 -  -  -  -  decompress_frame_down_19:
  976 D1:D174 00 -  -  -  	.db 0
  977 D1:D175 -  -  -  -  
  978 D1:D175 -  -  -  -  decompress_frame_down_20:
  979 D1:D175 00 -  -  -  	.db 0
  980 D1:D176 -  -  -  -  
  981 D1:D176 -  -  -  -  decompress_frame_down_21:
  982 D1:D176 00 -  -  -  	.db 0
  983 D1:D177 -  -  -  -  
  984 D1:D177 -  -  -  -  decompress_frame_down_22:
  985 D1:D177 00 -  -  -  	.db 0
  986 D1:D178 -  -  -  -  
  987 D1:D178 -  -  -  -  decompress_frame_down_23:
  988 D1:D178 00 -  -  -  	.db 0
  989 D1:D179 -  -  -  -  
  990 D1:D179 -  -  -  -  decompress_frame_down_24:
  991 D1:D179 0A -  -  -  	.db 10
  992 D1:D17A 66 E3 D1 B4 
              13 D4 -  -  	.dl Clouds_2, Clouds_2_Fast
  993 D1:D180 80 -  -  -  	.db %10000000
  994 D1:D181 1F E5 D1 EC 
              19 D4 -  -  	.dl Clouds_0, Clouds_0_Fast
  995 D1:D187 80 -  -  -  	.db %10000000
  996 D1:D188 48 E5 D1 52 
              1A D4 -  -  	.dl Clouds_1, Clouds_1_Fast
  997 D1:D18E 80 -  -  -  	.db %10000000
  998 D1:D18F 6F E5 D1 B6 
              1A D4 -  -  	.dl Clouds_3, Clouds_3_Fast
  999 D1:D195 80 -  -  -  	.db %10000000
 1000 D1:D196 9B E5 D1 22 
              1B D4 -  -  	.dl Clouds_4, Clouds_4_Fast
 1001 D1:D19C 80 -  -  -  	.db %10000000
 1002 D1:D19D 1F E5 D1 62 
              1B D4 -  -  	.dl Clouds_0, Clouds_0_Fast_F
 1003 D1:D1A3 A0 -  -  -  	.db %10100000
 1004 D1:D1A4 48 E5 D1 C8 
              1B D4 -  -  	.dl Clouds_1, Clouds_1_Fast_F
 1005 D1:D1AA A0 -  -  -  	.db %10100000
 1006 D1:D1AB 9B E5 D1 2C 
              1C D4 -  -  	.dl Clouds_4, Clouds_4_Fast_F
 1007 D1:D1B1 A0 -  -  -  	.db %10100000
 1008 D1:D1B2 6F E5 D1 6C 
              1C D4 -  -  	.dl Clouds_3, Clouds_3_Fast_F
 1009 D1:D1B8 A0 -  -  -  	.db %10100000
 1010 D1:D1B9 66 E3 D1 D8 
              1C D4 -  -  	.dl Clouds_2, Clouds_2_Fast_F
 1011 D1:D1BF A0 -  -  -  	.db %10100000
 1012 D1:D1C0 -  -  -  -  
 1013 D1:D1C0 -  -  -  -  decompress_frame_down_25:
 1014 D1:D1C0 00 -  -  -  	.db 0
 1015 D1:D1C1 -  -  -  -  
 1016 D1:D1C1 -  -  -  -  decompress_frame_down_26:
 1017 D1:D1C1 00 -  -  -  	.db 0
 1018 D1:D1C2 -  -  -  -  
 1019 D1:D1C2 -  -  -  -  decompress_frame_down_27:
 1020 D1:D1C2 00 -  -  -  	.db 0
 1021 D1:D1C3 -  -  -  -  
 1022 D1:D1C3 -  -  -  -  decompress_frame_down_28:
 1023 D1:D1C3 00 -  -  -  	.db 0
 1024 D1:D1C4 -  -  -  -  
 1025 D1:D1C4 -  -  -  -  decompress_frame_down_29:
 1026 D1:D1C4 00 -  -  -  	.db 0
 1027 D1:D1C5 -  -  -  -  
 1028 D1:D1C5 -  -  -  -  decompress_frame_down_30:
 1029 D1:D1C5 00 -  -  -  	.db 0
 1030 D1:D1C6 -  -  -  -  
 1031 D1:D1C6 -  -  -  -  decompress_frame_down_31:
 1032 D1:D1C6 00 -  -  -  	.db 0
 1033 D1:D1C7 -  -  -  -  
 1034 D1:D1C7 -  -  -  -  decompress_frame_down_32:
 1035 D1:D1C7 00 -  -  -  	.db 0
 1036 D1:D1C8 -  -  -  -  
 1037 D1:D1C8 -  -  -  -  decompress_frame_down_33:
 1038 D1:D1C8 00 -  -  -  	.db 0
 1039 D1:D1C9 -  -  -  -  
 1040 D1:D1C9 -  -  -  -  decompress_frame_down_34:
 1041 D1:D1C9 00 -  -  -  	.db 0
 1042 D1:D1CA -  -  -  -  
 1043 D1:D1CA -  -  -  -  decompress_frame_down_35:
 1044 D1:D1CA 00 -  -  -  	.db 0
 1045 D1:D1CB -  -  -  -  
 1046 D1:D1CB -  -  -  -  decompress_frame_down_36:
 1047 D1:D1CB 00 -  -  -  	.db 0
 1048 D1:D1CC -  -  -  -  
 1049 D1:D1CC -  -  -  -  decompress_frame_down_37:
 1050 D1:D1CC 00 -  -  -  	.db 0
 1051 D1:D1CD -  -  -  -  
 1052 D1:D1CD -  -  -  -  decompress_frame_down_38:
 1053 D1:D1CD 00 -  -  -  	.db 0
 1054 D1:D1CE -  -  -  -  
 1055 D1:D1CE -  -  -  -  decompress_frame_down_39:
 1056 D1:D1CE 00 -  -  -  	.db 0
 1057 D1:D1CF -  -  -  -  
 1058 D1:D1CF -  -  -  -  decompress_frame_down_40:
 1059 D1:D1CF 00 -  -  -  	.db 0
 1060 D1:D1D0 -  -  -  -  
 1061 D1:D1D0 -  -  -  -  decompress_frame_down_41:
 1062 D1:D1D0 00 -  -  -  	.db 0
 1063 D1:D1D1 -  -  -  -  
 1064 D1:D1D1 -  -  -  -  decompress_frame_down_42:
 1065 D1:D1D1 00 -  -  -  	.db 0
 1066 D1:D1D2 -  -  -  -  
 1067 D1:D1D2 -  -  -  -  decompress_frame_down_43:
 1068 D1:D1D2 00 -  -  -  	.db 0
 1069 D1:D1D3 -  -  -  -  
 1070 D1:D1D3 -  -  -  -  decompress_frame_down_44:
 1071 D1:D1D3 00 -  -  -  	.db 0
 1072 D1:D1D4 -  -  -  -  
 1073 D1:D1D4 -  -  -  -  decompress_frame_down_45:
 1074 D1:D1D4 00 -  -  -  	.db 0
 1075 D1:D1D5 -  -  -  -  
 1076 D1:D1D5 -  -  -  -  decompress_frame_down_46:
 1077 D1:D1D5 00 -  -  -  	.db 0
 1078 D1:D1D6 -  -  -  -  
 1079 D1:D1D6 -  -  -  -  decompress_frame_down_47:
 1080 D1:D1D6 00 -  -  -  	.db 0
 1081 D1:D1D7 -  -  -  -  
 1082 D1:D1D7 -  -  -  -  decompress_frame_down_48:
 1083 D1:D1D7 00 -  -  -  	.db 0
 1084 D1:D1D8 -  -  -  -  
 1085 D1:D1D8 -  -  -  -  decompress_frame_down_49:
 1086 D1:D1D8 00 -  -  -  	.db 0
 1087 D1:D1D9 -  -  -  -  
 1088 D1:D1D9 -  -  -  -  decompress_frame_down_50:
 1089 D1:D1D9 00 -  -  -  	.db 0
 1090 D1:D1DA -  -  -  -  
 1091 D1:D1DA -  -  -  -  decompress_frame_down_51:
 1092 D1:D1DA 00 -  -  -  	.db 0
 1093 D1:D1DB -  -  -  -  
 1094 D1:D1DB -  -  -  -  decompress_frame_down_52:
 1095 D1:D1DB 00 -  -  -  	.db 0
 1096 D1:D1DC -  -  -  -  
 1097 D1:D1DC -  -  -  -  decompress_frame_down_53:
 1098 D1:D1DC 00 -  -  -  	.db 0
 1099 D1:D1DD -  -  -  -  
 1100 D1:D1DD -  -  -  -  decompress_frame_down_54:
 1101 D1:D1DD 00 -  -  -  	.db 0
 1102 D1:D1DE -  -  -  -  
 1103 D1:D1DE -  -  -  -  decompress_frame_down_55:
 1104 D1:D1DE 00 -  -  -  	.db 0
 1105 D1:D1DF -  -  -  -  
 1106 D1:D1DF -  -  -  -  decompress_frame_down_56:
 1107 D1:D1DF 00 -  -  -  	.db 0
 1108 D1:D1E0 -  -  -  -  
 1109 D1:D1E0 -  -  -  -  decompress_frame_down_57:
 1110 D1:D1E0 00 -  -  -  	.db 0
 1111 D1:D1E1 -  -  -  -  
 1112 D1:D1E1 -  -  -  -  decompress_frame_down_58:
 1113 D1:D1E1 00 -  -  -  	.db 0
 1114 D1:D1E2 -  -  -  -  
 1115 D1:D1E2 -  -  -  -  decompress_frame_down_59:
 1116 D1:D1E2 00 -  -  -  	.db 0
 1117 D1:D1E3 -  -  -  -  
 1118 D1:D1E3 -  -  -  -  decompress_frame_down_60:
 1119 D1:D1E3 00 -  -  -  	.db 0
 1120 D1:D1E4 -  -  -  -  
 1121 D1:D1E4 -  -  -  -  decompress_frame_down_61:
 1122 D1:D1E4 00 -  -  -  	.db 0
 1123 D1:D1E5 -  -  -  -  
 1124 D1:D1E5 -  -  -  -  decompress_frame_down_62:
 1125 D1:D1E5 00 -  -  -  	.db 0
 1126 D1:D1E6 -  -  -  -  
 1127 D1:D1E6 -  -  -  -  decompress_frame_down_63:
 1128 D1:D1E6 00 -  -  -  	.db 0
 1129 D1:D1E7 -  -  -  -  
 1130 D1:D1E7 -  -  -  -  decompress_frame_down_64:
 1131 D1:D1E7 00 -  -  -  	.db 0
 1132 D1:D1E8 -  -  -  -  
 1133 D1:D1E8 -  -  -  -  decompress_frame_down_65:
 1134 D1:D1E8 00 -  -  -  	.db 0
 1135 D1:D1E9 -  -  -  -  
 1136 D1:D1E9 -  -  -  -  decompress_frame_down_66:
 1137 D1:D1E9 00 -  -  -  	.db 0
 1138 D1:D1EA -  -  -  -  
 1139 D1:D1EA -  -  -  -  decompress_frame_down_67:
 1140 D1:D1EA 00 -  -  -  	.db 0
 1141 D1:D1EB -  -  -  -  
 1142 D1:D1EB -  -  -  -  decompress_frame_down_68:
 1143 D1:D1EB 00 -  -  -  	.db 0
 1144 D1:D1EC -  -  -  -  
 1145 D1:D1EC -  -  -  -  decompress_frame_down_69:
 1146 D1:D1EC 00 -  -  -  	.db 0
 1147 D1:D1ED -  -  -  -  
 1148 D1:D1ED -  -  -  -  decompress_frame_down_70:
 1149 D1:D1ED 00 -  -  -  	.db 0
 1150 D1:D1EE -  -  -  -  
 1151 D1:D1EE -  -  -  -  decompress_frame_down_71:
 1152 D1:D1EE 00 -  -  -  	.db 0
 1153 D1:D1EF -  -  -  -  
 1154 D1:D1EF -  -  -  -  decompress_frame_down_72:
 1155 D1:D1EF 00 -  -  -  	.db 0
 1156 D1:D1F0 -  -  -  -  
 1157 D1:D1F0 -  -  -  -  decompress_frame_down_73:
 1158 D1:D1F0 00 -  -  -  	.db 0
 1159 D1:D1F1 -  -  -  -  
 1160 D1:D1F1 -  -  -  -  decompress_frame_down_74:
 1161 D1:D1F1 00 -  -  -  	.db 0
 1162 D1:D1F2 -  -  -  -  
 1163 D1:D1F2 -  -  -  -  decompress_frame_down_75:
 1164 D1:D1F2 00 -  -  -  	.db 0
 1165 D1:D1F3 -  -  -  -  
 1166 D1:D1F3 -  -  -  -  decompress_frame_down_76:
 1167 D1:D1F3 00 -  -  -  	.db 0
 1168 D1:D1F4 -  -  -  -  
 1169 D1:D1F4 -  -  -  -  decompress_frame_down_77:
 1170 D1:D1F4 00 -  -  -  	.db 0
 1171 D1:D1F5 -  -  -  -  
 1172 D1:D1F5 -  -  -  -  decompress_frame_down_78:
 1173 D1:D1F5 00 -  -  -  	.db 0
 1174 D1:D1F6 -  -  -  -  
 1175 D1:D1F6 -  -  -  -  decompress_frame_down_79:
 1176 D1:D1F6 00 -  -  -  	.db 0
 1177 D1:D1F7 -  -  -  -  
 1178 D1:D1F7 -  -  -  -  decompress_frame_down_80:
 1179 D1:D1F7 00 -  -  -  	.db 0
 1180 D1:D1F8 -  -  -  -  
 1181 D1:D1F8 -  -  -  -  decompress_frame_down_81:
 1182 D1:D1F8 00 -  -  -  	.db 0
 1183 D1:D1F9 -  -  -  -  
 1184 D1:D1F9 -  -  -  -  decompress_frame_down_82:
 1185 D1:D1F9 00 -  -  -  	.db 0
 1186 D1:D1FA -  -  -  -  
 1187 D1:D1FA -  -  -  -  decompress_frame_down_83:
 1188 D1:D1FA 00 -  -  -  	.db 0
 1189 D1:D1FB -  -  -  -  
 1190 D1:D1FB -  -  -  -  decompress_frame_down_84:
 1191 D1:D1FB 00 -  -  -  	.db 0
 1192 D1:D1FC -  -  -  -  
 1193 D1:D1FC -  -  -  -  decompress_frame_down_85:
 1194 D1:D1FC 00 -  -  -  	.db 0
 1195 D1:D1FD -  -  -  -  
 1196 D1:D1FD -  -  -  -  decompress_frame_down_86:
 1197 D1:D1FD 00 -  -  -  	.db 0
 1198 D1:D1FE -  -  -  -  
 1199 D1:D1FE -  -  -  -  decompress_frame_down_87:
 1200 D1:D1FE 00 -  -  -  	.db 0
 1201 D1:D1FF -  -  -  -  
 1202 D1:D1FF -  -  -  -  decompress_frame_down_88:
 1203 D1:D1FF 00 -  -  -  	.db 0
 1204 D1:D200 -  -  -  -  
 1205 D1:D200 -  -  -  -  decompress_frame_down_89:
 1206 D1:D200 02 -  -  -  	.db 2
 1207 D1:D201 8A E3 D1 65 
              14 D4 -  -  	.dl Frog_0, Frog_0_Slow
 1208 D1:D207 00 -  -  -  	.db %00000000
 1209 D1:D208 8A E3 D1 89 
              1D D4 -  -  	.dl Frog_0, Frog_0_Slow_O
 1210 D1:D20E 40 -  -  -  	.db %01000000
Listing for file "ascent.asm"
  570 D1:D20F -  -  -  -  #include "generated/Palette_Setup.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Palette_Setup.txt"
    1 D1:D20F -  -  -  -  setup_palette_1:
    2 D1:D20F 21 00 02 E3 	ld hl,mpLcdPalette
    3 D1:D213 3E C2 -  -  	ld a,%11000010
    4 D1:D215 77 -  -  -  	ld (hl),a 
    5 D1:D216 23 -  -  -  	inc hl
    6 D1:D217 3E 20 -  -  	ld a,%00100000
    7 D1:D219 77 -  -  -  	ld (hl),a 
    8 D1:D21A 23 -  -  -  	inc hl
    9 D1:D21B 3E 24 -  -  	ld a,%00100100
   10 D1:D21D 77 -  -  -  	ld (hl),a 
   11 D1:D21E 23 -  -  -  	inc hl
   12 D1:D21F 3E 39 -  -  	ld a,%00111001
   13 D1:D221 77 -  -  -  	ld (hl),a 
   14 D1:D222 23 -  -  -  	inc hl
   15 D1:D223 3E 85 -  -  	ld a,%10000101
   16 D1:D225 77 -  -  -  	ld (hl),a 
   17 D1:D226 23 -  -  -  	inc hl
   18 D1:D227 3E 4D -  -  	ld a,%01001101
   19 D1:D229 77 -  -  -  	ld (hl),a 
   20 D1:D22A 23 -  -  -  	inc hl
   21 D1:D22B 3E E6 -  -  	ld a,%11100110
   22 D1:D22D 77 -  -  -  	ld (hl),a 
   23 D1:D22E 23 -  -  -  	inc hl
   24 D1:D22F 3E E1 -  -  	ld a,%11100001
   25 D1:D231 77 -  -  -  	ld (hl),a 
   26 D1:D232 23 -  -  -  	inc hl
   27 D1:D233 3E 2A -  -  	ld a,%00101010
   28 D1:D235 77 -  -  -  	ld (hl),a 
   29 D1:D236 23 -  -  -  	inc hl
   30 D1:D237 3E 2E -  -  	ld a,%00101110
   31 D1:D239 77 -  -  -  	ld (hl),a 
   32 D1:D23A 23 -  -  -  	inc hl
   33 D1:D23B 3E 65 -  -  	ld a,%01100101
   34 D1:D23D 77 -  -  -  	ld (hl),a 
   35 D1:D23E 23 -  -  -  	inc hl
   36 D1:D23F 3E 95 -  -  	ld a,%10010101
   37 D1:D241 77 -  -  -  	ld (hl),a 
   38 D1:D242 23 -  -  -  	inc hl
   39 D1:D243 3E FE -  -  	ld a,%11111110
   40 D1:D245 77 -  -  -  	ld (hl),a 
   41 D1:D246 23 -  -  -  	inc hl
   42 D1:D247 3E 73 -  -  	ld a,%01110011
   43 D1:D249 77 -  -  -  	ld (hl),a 
   44 D1:D24A 23 -  -  -  	inc hl
   45 D1:D24B 3E BC -  -  	ld a,%10111100
   46 D1:D24D 77 -  -  -  	ld (hl),a 
   47 D1:D24E 23 -  -  -  	inc hl
   48 D1:D24F 3E 5B -  -  	ld a,%01011011
   49 D1:D251 77 -  -  -  	ld (hl),a 
   50 D1:D252 23 -  -  -  	inc hl
   51 D1:D253 3E 8E -  -  	ld a,%10001110
   52 D1:D255 77 -  -  -  	ld (hl),a 
   53 D1:D256 23 -  -  -  	inc hl
   54 D1:D257 3E 4F -  -  	ld a,%01001111
   55 D1:D259 77 -  -  -  	ld (hl),a 
   56 D1:D25A 23 -  -  -  	inc hl
   57 D1:D25B 3E 20 -  -  	ld a,%00100000
   58 D1:D25D 77 -  -  -  	ld (hl),a 
   59 D1:D25E 23 -  -  -  	inc hl
   60 D1:D25F 3E 80 -  -  	ld a,%10000000
   61 D1:D261 77 -  -  -  	ld (hl),a 
   62 D1:D262 23 -  -  -  	inc hl
   63 D1:D263 3E 1F -  -  	ld a,%00011111
   64 D1:D265 77 -  -  -  	ld (hl),a 
   65 D1:D266 23 -  -  -  	inc hl
   66 D1:D267 3E 81 -  -  	ld a,%10000001
   67 D1:D269 77 -  -  -  	ld (hl),a 
   68 D1:D26A 23 -  -  -  	inc hl
   69 D1:D26B 3E 00 -  -  	ld a,%00000000
   70 D1:D26D 77 -  -  -  	ld (hl),a 
   71 D1:D26E 23 -  -  -  	inc hl
   72 D1:D26F 3E 00 -  -  	ld a,%00000000
   73 D1:D271 77 -  -  -  	ld (hl),a 
   74 D1:D272 23 -  -  -  	inc hl
   75 D1:D273 3E 1F -  -  	ld a,%00011111
   76 D1:D275 77 -  -  -  	ld (hl),a 
   77 D1:D276 23 -  -  -  	inc hl
   78 D1:D277 3E 81 -  -  	ld a,%10000001
   79 D1:D279 77 -  -  -  	ld (hl),a 
   80 D1:D27A 23 -  -  -  	inc hl
   81 D1:D27B 3E 1F -  -  	ld a,%00011111
   82 D1:D27D 77 -  -  -  	ld (hl),a 
   83 D1:D27E 23 -  -  -  	inc hl
   84 D1:D27F 3E 81 -  -  	ld a,%10000001
   85 D1:D281 77 -  -  -  	ld (hl),a 
   86 D1:D282 23 -  -  -  	inc hl
   87 D1:D283 3E C6 -  -  	ld a,%11000110
   88 D1:D285 77 -  -  -  	ld (hl),a 
   89 D1:D286 23 -  -  -  	inc hl
   90 D1:D287 3E 98 -  -  	ld a,%10011000
   91 D1:D289 77 -  -  -  	ld (hl),a 
   92 D1:D28A 23 -  -  -  	inc hl
   93 D1:D28B 3E 95 -  -  	ld a,%10010101
   94 D1:D28D 77 -  -  -  	ld (hl),a 
   95 D1:D28E 23 -  -  -  	inc hl
   96 D1:D28F 3E 99 -  -  	ld a,%10011001
   97 D1:D291 77 -  -  -  	ld (hl),a 
   98 D1:D292 23 -  -  -  	inc hl
   99 D1:D293 C9 -  -  -  	ret 
Listing for file "ascent.asm"
  571 D1:D294 -  -  -  -  #include "generated/Sprite_Tables.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Tables.txt"
    1 D1:D294 -  -  -  -  Sprite_Table_Table:
    2 D1:D294 9A D2 D1 -  	.dl Sprite_Table_0
    3 D1:D297 FC D3 D1 -  	.dl Sprite_Table_1
    4 D1:D29A -  -  -  -  
    5 D1:D29A -  -  -  -  
    6 D1:D29A -  -  -  -  Sprite_Table_0:
    7 D1:D29A 15 21 D4 -  	.dl BigGrassBase_Slow_O
    8 D1:D29D B8 1E D4 -  	.dl BigGrassBase_Fast
    9 D1:D2A0 CC 22 D4 -  	.dl BigGrassBase_Fast_F
   10 D1:D2A3 20 20 D4 -  	.dl BigGrassTop_Fast
   11 D1:D2A6 34 24 D4 -  	.dl BigGrassTop_Fast_F
   12 D1:D2A9 29 25 D4 -  	.dl BigGrassTop_Slow_O
   13 D1:D2AC 63 26 D4 -  	.dl DualLeaf4_Slow
   14 D1:D2AF 13 27 D4 -  	.dl DualLeaf4_Slow_F
   15 D1:D2B2 C4 27 D4 -  	.dl DualLeaf3_Fast
   16 D1:D2B5 B4 28 D4 -  	.dl Branches_9_Fast
   17 D1:D2B8 A4 29 D4 -  	.dl Branches_13_Fast
   18 D1:D2BB 3C 28 D4 -  	.dl Branches_10_Fast
   19 D1:D2BE 37 29 D4 -  	.dl Branches_16_Slow
   20 D1:D2C1 D6 29 D4 -  	.dl Leaves1_Fast
   21 D1:D2C4 EE 2A D4 -  	.dl DualLeaf1_Fast
   22 D1:D2C7 5E 2B D4 -  	.dl DualLeaf2_Fast
   23 D1:D2CA CF 2B D4 -  	.dl DualLeaf2_Slow_O
   24 D1:D2CD 79 2C D4 -  	.dl DualLeaf1_Slow_O
   25 D1:D2D0 52 34 D4 -  	.dl LeavesLight_Fast
   26 D1:D2D3 4A 30 D4 -  	.dl LeavesDark_Fast
   27 D1:D2D6 CD 36 D4 -  	.dl Branches_14_Slow
   28 D1:D2D9 D9 2F D4 -  	.dl Branches_15_Slow_O_F
   29 D1:D2DC 6A 35 D4 -  	.dl Branches_8_Fast
   30 D1:D2DF AF 2E D4 -  	.dl Branches_15_Slow
   31 D1:D2E2 C8 35 D4 -  	.dl Branches_11_Fast_F
   32 D1:D2E5 9C 36 D4 -  	.dl Branches_13_Fast_F
   33 D1:D2E8 BE 2D D4 -  	.dl Branches_10_Fast_F
   34 D1:D2EB 66 33 D4 -  	.dl Leaves2_Fast_F
   35 D1:D2EE 7A 32 D4 -  	.dl Leaves2_Fast
   36 D1:D2F1 62 31 D4 -  	.dl LeavesDark_Fast_F
   37 D1:D2F4 7E 2F D4 -  	.dl Branches_12_Fast
   38 D1:D2F7 21 2D D4 -  	.dl Branches_6_Slow
   39 D1:D2FA 36 2E D4 -  	.dl Branches_7_Fast
   40 D1:D2FD 20 2F D4 -  	.dl Branches_8_Fast_F
   41 D1:D300 2F 36 D4 -  	.dl Branches_16_Slow_O_F
   42 D1:D303 3A 37 D4 -  	.dl Branches_4_Fast_F
   43 D1:D306 D8 37 D4 -  	.dl Branches_7_Fast_F
   44 D1:D309 52 38 D4 -  	.dl Branches_12_Fast_F
   45 D1:D30C AE 38 D4 -  	.dl Leaves1_Fast_F
   46 D1:D30F C0 01 D4 -  	.dl Branches_5_Fast
   47 D1:D312 5A 20 D4 -  	.dl Branches_4_Fast
   48 D1:D315 60 02 D4 -  	.dl Branches_3_Fast
   49 D1:D318 08 03 D4 -  	.dl Branches_2_Fast
   50 D1:D31B C6 39 D4 -  	.dl GroundDirtFull_Fast_F
   51 D1:D31E 78 3A D4 -  	.dl GroundDirtFull_Fast
   52 D1:D321 2A 3B D4 -  	.dl GroundDirtMound_Fast
   53 D1:D324 AA 3B D4 -  	.dl GroundDirtMound_Fast_F
   54 D1:D327 29 3C D4 -  	.dl Branches_8_Slow_O_F
   55 D1:D32A B1 3C D4 -  	.dl Branches_9_Slow_O
   56 D1:D32D 60 3D D4 -  	.dl Tree_2_Fast
   57 D1:D330 5C 3E D4 -  	.dl Tree_4_Fast
   58 D1:D333 5E 3F D4 -  	.dl Tree_7_Fast
   59 D1:D336 60 40 D4 -  	.dl Tree_9_Fast
   60 D1:D339 62 41 D4 -  	.dl Tree_6_Fast_F
   61 D1:D33C 64 42 D4 -  	.dl Tree_3_Fast_F
   62 D1:D33F 66 43 D4 -  	.dl Tree_0_Fast_F
   63 D1:D342 62 44 D4 -  	.dl Tree_3_Fast
   64 D1:D345 64 45 D4 -  	.dl Tree_8_Fast
   65 D1:D348 66 46 D4 -  	.dl Tree_9_Fast_F
   66 D1:D34B 68 47 D4 -  	.dl Tree_8_Fast_F
   67 D1:D34E 6A 48 D4 -  	.dl Tree_4_Fast_F
   68 D1:D351 6C 49 D4 -  	.dl Tree_0_Fast
   69 D1:D354 68 4A D4 -  	.dl Tree_6_Fast
   70 D1:D357 6A 4B D4 -  	.dl Tree_10_Fast
   71 D1:D35A 6C 4C D4 -  	.dl Tree_7_Fast_F
   72 D1:D35D 6E 4D D4 -  	.dl Tree_1_Fast_F
   73 D1:D360 6C 4E D4 -  	.dl Tree_1_Fast
   74 D1:D363 6A 4F D4 -  	.dl Tree_5_Fast
   75 D1:D366 B2 03 D4 -  	.dl Tree_11_Fast
   76 D1:D369 B4 04 D4 -  	.dl Tree_5_Fast_F
   77 D1:D36C B6 05 D4 -  	.dl Tree_2_Fast_F
   78 D1:D36F B2 06 D4 -  	.dl Tree_11_Fast_F
   79 D1:D372 B4 07 D4 -  	.dl Branches_1_Fast
   80 D1:D375 4D 08 D4 -  	.dl Vine2_Slow
   81 D1:D378 ED 08 D4 -  	.dl VineVertical_Slow_O
   82 D1:D37B 99 09 D4 -  	.dl VineVertical_Slow
   83 D1:D37E 47 0A D4 -  	.dl Vine4_Slow_F
   84 D1:D381 07 0B D4 -  	.dl Vine4_Slow_O_F
   85 D1:D384 C7 0B D4 -  	.dl Vine5_Slow_O_F
   86 D1:D387 87 0C D4 -  	.dl Vine6_Slow_O
   87 D1:D38A 2D 0D D4 -  	.dl Vine7_Slow
   88 D1:D38D B3 0D D4 -  	.dl Vine5_Slow
   89 D1:D390 71 0E D4 -  	.dl Vine6_Slow
   90 D1:D393 15 0F D4 -  	.dl Vine4_Slow
   91 D1:D396 D5 0F D4 -  	.dl Vine7_Slow_O
   92 D1:D399 55 10 D4 -  	.dl Vine5_Slow_O
   93 D1:D39C 13 11 D4 -  	.dl Vine4_Slow_O
   94 D1:D39F D2 11 D4 -  	.dl Branches_1_Fast_F
   95 D1:D3A2 6A 12 D4 -  	.dl Branches_2_Fast_F
   96 D1:D3A5 14 13 D4 -  	.dl Branches_5_Fast_F
   97 D1:D3A8 6B 50 D4 -  	.dl Branches_1_Slow_O
   98 D1:D3AB 31 51 D4 -  	.dl Branches_2_Slow_O
   99 D1:D3AE 11 52 D4 -  	.dl Branches_4_Slow_O
  100 D1:D3B1 DD 52 D4 -  	.dl Branches_7_Slow_O
  101 D1:D3B4 B8 1E D4 -  	.dl Branches_0_Fast_F
  102 D1:D3B7 4F 1F D4 -  	.dl Branches_8_Slow_O
  103 D1:D3BA D8 1F D4 -  	.dl Branches_9_Fast_F
  104 D1:D3BD B4 13 D4 -  	.dl Clouds_2_Fast
  105 D1:D3C0 65 14 D4 -  	.dl Frog_0_Slow
  106 D1:D3C3 94 15 D4 -  	.dl GroundDirtDark_Fast
  107 D1:D3C6 1A 16 D4 -  	.dl GroundDirtDark_Fast_F
  108 D1:D3C9 A0 16 D4 -  	.dl GroundHumpDark_Fast
  109 D1:D3CC 26 17 D4 -  	.dl GroundHumpDark_Fast_F
  110 D1:D3CF AC 17 D4 -  	.dl Tree_16_Fast
  111 D1:D3D2 01 18 D4 -  	.dl Tree_17_Slow
  112 D1:D3D5 67 18 D4 -  	.dl Tree_17_Slow_O_F
  113 D1:D3D8 CD 18 D4 -  	.dl Tree_18_Slow
  114 D1:D3DB 31 19 D4 -  	.dl Tree_18_Slow_O_F
  115 D1:D3DE 96 19 D4 -  	.dl Tree_16_Fast_F
  116 D1:D3E1 EC 19 D4 -  	.dl Clouds_0_Fast
  117 D1:D3E4 52 1A D4 -  	.dl Clouds_1_Fast
  118 D1:D3E7 B6 1A D4 -  	.dl Clouds_3_Fast
  119 D1:D3EA 22 1B D4 -  	.dl Clouds_4_Fast
  120 D1:D3ED 62 1B D4 -  	.dl Clouds_0_Fast_F
  121 D1:D3F0 C8 1B D4 -  	.dl Clouds_1_Fast_F
  122 D1:D3F3 2C 1C D4 -  	.dl Clouds_4_Fast_F
  123 D1:D3F6 6C 1C D4 -  	.dl Clouds_3_Fast_F
  124 D1:D3F9 D8 1C D4 -  	.dl Clouds_2_Fast_F
  125 D1:D3FC -  -  -  -  
  126 D1:D3FC -  -  -  -  Sprite_Table_1:
  127 D1:D3FC -  -  -  -  
Listing for file "ascent.asm"
  572 D1:D3FC -  -  -  -  #include "generated/Sprite_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Data.txt"
    1 D1:D3FC -  -  -  -  BigGrassBase:
    2 D1:D3FC 10 -  -  -  	.db %00010000
    3 D1:D3FD 18 1A -  -  	.db 24, 26
    4 D1:D3FF 3F FF FC 3F 
              FF FC 3F FF 	.db %00111111, %11111111, %11111100, %00111111, %11111111, %11111100, %00111111, %11111111
    5 D1:D407 FC 3F FF FC 
              3F FF FC 3F 	.db %11111100, %00111111, %11111111, %11111100, %00111111, %11111111, %11111100, %00111111
    6 D1:D40F FF FC 3F FF 
              FC 3F FF FC 	.db %11111111, %11111100, %00111111, %11111111, %11111100, %00111111, %11111111, %11111100
    7 D1:D417 3F FF FC 3F 
              FF FC 3F FF 	.db %00111111, %11111111, %11111100, %00111111, %11111111, %11111100, %00111111, %11111111
    8 D1:D41F FC 3F FF FC 
              3F FF FC FF 	.db %11111100, %00111111, %11111111, %11111100, %00111111, %11111111, %11111100, %11111111
    9 D1:D427 FF FC FF FF 
              FC FF FF FC 	.db %11111111, %11111100, %11111111, %11111111, %11111100, %11111111, %11111111, %11111100
   10 D1:D42F FF FF FC FF 
              FF FC FF FF 	.db %11111111, %11111111, %11111100, %11111111, %11111111, %11111100, %11111111, %11111111
   11 D1:D437 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   12 D1:D43F FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   13 D1:D447 FF FF FF FF 
              FF FF -  -  	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   14 D1:D44D -  -  -  -  
   15 D1:D44D 54 -  -  -  	.db %01010100
   16 D1:D44E -  -  -  -  
   17 D1:D44E 1F C7 42 F8 
              F8 1F 57 42 	.db %00011111, %11000111, %01000010, %11111000, %11111000, %00011111, %01010111, %01000010
   18 D1:D456 F8 F8 1F 57 
              42 F8 F8 1F 	.db %11111000, %11111000, %00011111, %01010111, %01000010, %11111000, %11111000, %00011111
   19 D1:D45E 1F 42 E8 F8 
              1F 1F 42 EB 	.db %00011111, %01000010, %11101000, %11111000, %00011111, %00011111, %01000010, %11101011
   20 D1:D466 F8 1F 1F 42 
              F3 F8 5F 9F 	.db %11111000, %00011111, %00011111, %01000010, %11110011, %11111000, %01011111, %10011111
   21 D1:D46E 40 FE FE 05 
              F1 F4 2F EF 	.db %01000000, %11111110, %11111110, %00000101, %11110001, %11110100, %00101111, %11101111
   22 D1:D476 E0 5F BF 42 
              FD FE 17 FB 	.db %11100000, %01011111, %10111111, %01000010, %11111101, %11111110, %00010111, %11111011
   23 D1:D47E F4 0B FF F8 
              17 FF F4 0F 	.db %11110100, %00001011, %11111111, %11111000, %00010111, %11111111, %11110100, %00001111
   24 D1:D486 FF FA 17 FF 
              FD 0B FF FE 	.db %11111111, %11111010, %00010111, %11111111, %11111101, %00001011, %11111111, %11111110
   25 D1:D48E 17 FF FD 0B 
              FF FE 00 -  	.db %00010111, %11111111, %11111101, %00001011, %11111111, %11111110, %00000000
   26 D1:D495 -  -  -  -  
   27 D1:D495 -  -  -  -  
   28 D1:D495 -  -  -  -  BigGrassTop:
   29 D1:D495 10 -  -  -  	.db %00010000
   30 D1:D496 1A 17 -  -  	.db 26, 23
   31 D1:D498 00 00 FC 00 
              00 FF 00 00 	.db %00000000, %00000000, %11111100, %00000000, %00000000, %11111111, %00000000, %00000000
   32 D1:D4A0 FF F0 00 FF 
              FF 00 3F FF 	.db %11111111, %11110000, %00000000, %11111111, %11111111, %00000000, %00111111, %11111111
   33 D1:D4A8 C0 3F FF C0 
              0F FF F0 0F 	.db %11000000, %00111111, %11111111, %11000000, %00001111, %11111111, %11110000, %00001111
   34 D1:D4B0 FF F0 03 FF 
              FC 00 FF FF 	.db %11111111, %11110000, %00000011, %11111111, %11111100, %00000000, %11111111, %11111111
   35 D1:D4B8 00 FF FF 00 
              3F FF C0 0F 	.db %00000000, %11111111, %11111111, %00000000, %00111111, %11111111, %11000000, %00001111
   36 D1:D4C0 FF F0 0F FF 
              FC 03 FF FC 	.db %11111111, %11110000, %00001111, %11111111, %11111100, %00000011, %11111111, %11111100
   37 D1:D4C8 00 FF FF 00 
              3F FF C0 3F 	.db %00000000, %11111111, %11111111, %00000000, %00111111, %11111111, %11000000, %00111111
   38 D1:D4D0 FF F0 0F FF 
              F0 03 FF FC 	.db %11111111, %11110000, %00001111, %11111111, %11110000, %00000011, %11111111, %11111100
   39 D1:D4D8 00 FF FF 00 
              3F FF C0 0F 	.db %00000000, %11111111, %11111111, %00000000, %00111111, %11111111, %11000000, %00001111
   40 D1:D4E0 FF F0 00 -  	.db %11111111, %11110000, %00000000
   41 D1:D4E3 -  -  -  -  
   42 D1:D4E3 45 -  -  -  	.db %01000101
   43 D1:D4E4 -  -  -  -  
   44 D1:D4E4 56 A9 43 6A 
              12 94 30 E8 	.db %01010110, %10101001, %01000011, %01101010, %00010010, %10010100, %00110000, %11101000
   45 D1:D4EC 30 50 60 E8 
              10 50 30 A0 	.db %00110000, %01010000, %01100000, %11101000, %00010000, %01010000, %00110000, %10100000
   46 D1:D4F4 61 78 30 B0 
              69 60 52 F4 	.db %01100001, %01111000, %00110000, %10110000, %01101001, %01100000, %01010010, %11110100
   47 D1:D4FC 30 FC 0A 5C 
              18 38 34 5E 	.db %00110000, %11111100, %00001010, %01011100, %00011000, %00111000, %00110100, %01011110
   48 D1:D504 06 2F 03 57 
              03 8E 07 16 	.db %00000110, %00101111, %00000011, %01010111, %00000011, %10001110, %00000111, %00010110
   49 D1:D50C 8A AF 07 1C 	.db %10001010, %10101111, %00000111, %00011100
   50 D1:D510 -  -  -  -  
   51 D1:D510 -  -  -  -  
   52 D1:D510 -  -  -  -  DualLeaf4:
   53 D1:D510 10 -  -  -  	.db %00010000
   54 D1:D511 0E 13 -  -  	.db 14, 19
   55 D1:D513 00 3C 03 F0 
              3F C0 FF 03 	.db %00000000, %00111100, %00000011, %11110000, %00111111, %11000000, %11111111, %00000011
   56 D1:D51B FC 3F F0 FF 
              CF FC 3F C3 	.db %11111100, %00111111, %11110000, %11111111, %11001111, %11111100, %00111111, %11000011
   57 D1:D523 FF 0F F0 3F 
              00 FF 03 FF 	.db %11111111, %00001111, %11110000, %00111111, %00000000, %11111111, %00000011, %11111111
   58 D1:D52B 07 FF 0F FC 
              3F F0 3F C0 	.db %00000111, %11111111, %00001111, %11111100, %00111111, %11110000, %00111111, %11000000
   59 D1:D533 3F 00 -  -  	.db %00111111, %00000000
   60 D1:D535 -  -  -  -  
   61 D1:D535 45 -  -  -  	.db %01000101
   62 D1:D536 -  -  -  -  
   63 D1:D536 10 81 42 C5 
              C3 F1 7C 2F 	.db %00010000, %10000001, %01000010, %11000101, %11000011, %11110001, %01111100, %00101111
   64 D1:D53E 37 13 E9 F4 
              E8 E0 3C 06 	.db %00110111, %00010011, %11101001, %11110100, %11101000, %11100000, %00111100, %00000110
   65 D1:D546 A1 D4 7E 7E 	.db %10100001, %11010100, %01111110, %01111110
   66 D1:D54A -  -  -  -  
   67 D1:D54A -  -  -  -  
   68 D1:D54A -  -  -  -  DualLeaf3:
   69 D1:D54A 10 -  -  -  	.db %00010000
   70 D1:D54B 16 0B -  -  	.db 22, 11
   71 D1:D54D F0 00 FF F0 
              0F FF F0 3F 	.db %11110000, %00000000, %11111111, %11110000, %00001111, %11111111, %11110000, %00111111
   72 D1:D555 CF F3 FF 3F 
              CF F0 FF FF 	.db %11001111, %11110011, %11111111, %00111111, %11001111, %11110000, %11111111, %11111111
   73 D1:D55D C0 FF FF 03 
              FF F0 0F FF 	.db %11000000, %11111111, %11111111, %00000011, %11111111, %11110000, %00001111, %11111111
   74 D1:D565 00 0F FC 00 
              0F F0 00 -  	.db %00000000, %00001111, %11111100, %00000000, %00001111, %11110000, %00000000
   75 D1:D56C -  -  -  -  
   76 D1:D56C 45 -  -  -  	.db %01000101
   77 D1:D56D -  -  -  -  
   78 D1:D56D 00 10 00 F0 
              06 E0 05 F6 	.db %00000000, %00010000, %00000000, %11110000, %00000110, %11100000, %00000101, %11110110
   79 D1:D575 02 F9 01 7E 
              82 FF 55 FE 	.db %00000010, %11111001, %00000001, %01111110, %10000010, %11111111, %01010101, %11111110
   80 D1:D57D FF FF FF -  	.db %11111111, %11111111, %11111111
   81 D1:D580 -  -  -  -  
   82 D1:D580 -  -  -  -  
   83 D1:D580 -  -  -  -  Branches_10:
   84 D1:D580 20 -  -  -  	.db %00100000
   85 D1:D581 12 0E -  -  	.db 18, 14
   86 D1:D583 00 0F C0 0F 
              F0 0F FC 03 	.db %00000000, %00001111, %11000000, %00001111, %11110000, %00001111, %11111100, %00000011
   87 D1:D58B FF 03 FF C3 
              FF F3 FF FF 	.db %11111111, %00000011, %11111111, %11000011, %11111111, %11110011, %11111111, %11111111
   88 D1:D593 FF FC FF FC 
              3F FC 0F FC 	.db %11111111, %11111100, %11111111, %11111100, %00111111, %11111100, %00001111, %11111100
   89 D1:D59B 03 FC 00 FF 
              00 33 00 00 	.db %00000011, %11111100, %00000000, %11111111, %00000000, %00110011, %00000000, %00000000
   90 D1:D5A3 -  -  -  -  
   91 D1:D5A3 01 23 -  -  	.db %00000001, %00100011
   92 D1:D5A5 -  -  -  -  
   93 D1:D5A5 04 60 46 F0 
              15 BE 14 2D 	.db %00000100, %01100000, %01000110, %11110000, %00010101, %10111110, %00010100, %00101101
   94 D1:D5AD 50 15 E5 00 
              55 39 55 04 	.db %01010000, %00010101, %11100101, %00000000, %01010101, %00111001, %01010101, %00000100
   95 D1:D5B5 4A A9 10 01 
              5A D8 40 55 	.db %01001010, %10101001, %00010000, %00000001, %01011010, %11011000, %01000000, %01010101
   96 D1:D5BD 2F 85 01 4E 
              25 0B E8 50 	.db %00101111, %10000101, %00000001, %01001110, %00100101, %00001011, %11101000, %01010000
   97 D1:D5C5 A9 10 50 40 
              00 -  -  -  	.db %10101001, %00010000, %01010000, %01000000, %00000000
   98 D1:D5CA -  -  -  -  
   99 D1:D5CA -  -  -  -  
  100 D1:D5CA -  -  -  -  Branches_9:
  101 D1:D5CA 20 -  -  -  	.db %00100000
  102 D1:D5CB 12 0E -  -  	.db 18, 14
  103 D1:D5CD 00 30 C0 3F 
              F0 0F FC 0F 	.db %00000000, %00110000, %11000000, %00111111, %11110000, %00001111, %11111100, %00001111
  104 D1:D5D5 FF 0F FF FF 
              FF FF FF FF 	.db %11111111, %00001111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  105 D1:D5DD FF FF FF FF 
              FF FF CF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11001111, %11111111
  106 D1:D5E5 03 FF 00 FF 
              00 0C 00 00 	.db %00000011, %11111111, %00000000, %11111111, %00000000, %00001100, %00000000, %00000000
  107 D1:D5ED -  -  -  -  
  108 D1:D5ED 01 23 -  -  	.db %00000001, %00100011
  109 D1:D5EF -  -  -  -  
  110 D1:D5EF 00 00 00 51 
              51 40 06 50 	.db %00000000, %00000000, %00000000, %01010001, %01010001, %01000000, %00000110, %01010000
  111 D1:D5F7 55 04 58 AA 
              A0 01 51 FB 	.db %01010101, %00000100, %01011000, %10101010, %10100000, %00000001, %01010001, %11111011
  112 D1:D5FF BF 05 45 B9 
              65 05 05 BA 	.db %10111111, %00000101, %01000101, %10111001, %01100101, %00000101, %00000101, %10111010
  113 D1:D607 50 11 BF BE 
              50 55 06 A9 	.db %01010000, %00010001, %10111111, %10111110, %01010000, %01010101, %00000110, %10101001
  114 D1:D60F 44 40 00 14 
              15 05 15 40 	.db %01000100, %01000000, %00000000, %00010100, %00010101, %00000101, %00010101, %01000000
  115 D1:D617 04 00 00 -  	.db %00000100, %00000000, %00000000
  116 D1:D61A -  -  -  -  
  117 D1:D61A -  -  -  -  
  118 D1:D61A -  -  -  -  Branches_16:
  119 D1:D61A 20 -  -  -  	.db %00100000
  120 D1:D61B 0D 0D -  -  	.db 13, 13
  121 D1:D61D 07 F8 3F 83 
              FC 1F C0 FC 	.db %00000111, %11111000, %00111111, %10000011, %11111100, %00011111, %11000000, %11111100
  122 D1:D625 0F C0 7C 07 
              C0 3C 03 C0 	.db %00001111, %11000000, %01111100, %00000111, %11000000, %00111100, %00000011, %11000000
  123 D1:D62D 1E 01 E0 0C 
              00 00 -  -  	.db %00011110, %00000001, %11100000, %00001100, %00000000, %00000000
  124 D1:D633 -  -  -  -  
  125 D1:D633 01 23 -  -  	.db %00000001, %00100011
  126 D1:D635 -  -  -  -  
  127 D1:D635 16 A4 12 D0 
              43 50 6C 00 	.db %00010110, %10100100, %00010010, %11010000, %01000011, %01010000, %01101100, %00000000
  128 D1:D63D 94 0A 01 40 
              64 24 18 14 	.db %10010100, %00001010, %00000001, %01000000, %01100100, %00100100, %00011000, %00010100
  129 D1:D645 10 00 -  -  	.db %00010000, %00000000
  130 D1:D647 -  -  -  -  
  131 D1:D647 -  -  -  -  
  132 D1:D647 -  -  -  -  Branches_13:
  133 D1:D647 20 -  -  -  	.db %00100000
  134 D1:D648 0E 06 -  -  	.db 14, 6
  135 D1:D64A 00 0C 33 FF 
              FF FF FF 3F 	.db %00000000, %00001100, %00110011, %11111111, %11111111, %11111111, %11111111, %00111111
  136 D1:D652 FC 03 F0 -  	.db %11111100, %00000011, %11110000
  137 D1:D655 -  -  -  -  
  138 D1:D655 01 20 -  -  	.db %00000001, %00100000
  139 D1:D657 -  -  -  -  
  140 D1:D657 00 00 10 00 
              01 59 08 45 	.db %00000000, %00000000, %00010000, %00000000, %00000001, %01011001, %00001000, %01000101
  141 D1:D65F AA 50 00 15 
              60 00 -  -  	.db %10101010, %01010000, %00000000, %00010101, %01100000, %00000000
  142 D1:D665 -  -  -  -  
  143 D1:D665 -  -  -  -  
  144 D1:D665 -  -  -  -  Leaves1:
  145 D1:D665 20 -  -  -  	.db %00100000
  146 D1:D666 1A 15 -  -  	.db 26, 21
  147 D1:D668 00 0F 00 00 
              0F FC 00 3F 	.db %00000000, %00001111, %00000000, %00000000, %00001111, %11111100, %00000000, %00111111
  148 D1:D670 FF C0 0F FF 
              FC 0F FF FF 	.db %11111111, %11000000, %00001111, %11111111, %11111100, %00001111, %11111111, %11111111
  149 D1:D678 03 FF FF C3 
              FF FF F0 FF 	.db %00000011, %11111111, %11111111, %11000011, %11111111, %11111111, %11110000, %11111111
  150 D1:D680 FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  151 D1:D688 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  152 D1:D690 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  153 D1:D698 FF FF FF FF 
              3F FF FF CF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111, %11001111
  154 D1:D6A0 FF FF C0 3F 
              FF F0 0F FF 	.db %11111111, %11111111, %11000000, %00111111, %11111111, %11110000, %00001111, %11111111
  155 D1:D6A8 F0 00 FF F0 
              00 -  -  -  	.db %11110000, %00000000, %11111111, %11110000, %00000000
  156 D1:D6AD -  -  -  -  
  157 D1:D6AD 48 50 -  -  	.db %01001000, %01010000
  158 D1:D6AF -  -  -  -  
  159 D1:D6AF 10 04 40 01 
              11 11 00 04 	.db %00010000, %00000100, %01000000, %00000001, %00010001, %00010001, %00000000, %00000100
  160 D1:D6B7 44 40 00 00 
              01 00 00 00 	.db %01000100, %01000000, %00000000, %00000000, %00000001, %00000000, %00000000, %00000000
  161 D1:D6BF 44 00 00 00 
              01 10 00 22 	.db %01000100, %00000000, %00000000, %00000000, %00000001, %00010000, %00000000, %00100010
  162 D1:D6C7 00 00 00 00 
              20 88 80 00 	.db %00000000, %00000000, %00000000, %00000000, %00100000, %10001000, %10000000, %00000000
  163 D1:D6CF 00 00 8A A2 
              00 08 88 00 	.db %00000000, %00000000, %10001010, %10100010, %00000000, %00001000, %10001000, %00000000
  164 D1:D6D7 08 A2 82 22 
              22 20 02 28 	.db %00001000, %10100010, %10000010, %00100010, %00100010, %00100000, %00000010, %00101000
  165 D1:D6DF AA 88 88 88 
              08 8A 2A 2A 	.db %10101010, %10001000, %10001000, %10001000, %00001000, %10001010, %00101010, %00101010
  166 D1:D6E7 AA AA 88 2A 
              8A AA AA AA 	.db %10101010, %10101010, %10001000, %00101010, %10001010, %10101010, %10101010, %10101010
  167 D1:D6EF AA 8A AA AA 
              AA AA AA A8 	.db %10101010, %10001010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101000
  168 D1:D6F7 AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  169 D1:D6FF AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  170 D1:D707 AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  171 D1:D70F AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  172 D1:D717 AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010
  173 D1:D71B -  -  -  -  
  174 D1:D71B -  -  -  -  
  175 D1:D71B -  -  -  -  DualLeaf1:
  176 D1:D71B 10 -  -  -  	.db %00010000
  177 D1:D71C 10 0C -  -  	.db 16, 12
  178 D1:D71E 03 C0 0F F0 
              3F FC 3F FC 	.db %00000011, %11000000, %00001111, %11110000, %00111111, %11111100, %00111111, %11111100
  179 D1:D726 FF FF FF 3F 
              FC 3F FC 3F 	.db %11111111, %11111111, %11111111, %00111111, %11111100, %00111111, %11111100, %00111111
  180 D1:D72E FC 0F F0 0F 
              F0 0F C0 0C 	.db %11111100, %00001111, %11110000, %00001111, %11110000, %00001111, %11000000, %00001100
  181 D1:D736 -  -  -  -  
  182 D1:D736 45 -  -  -  	.db %01000101
  183 D1:D737 -  -  -  -  
  184 D1:D737 01 40 A8 17 
              40 BF 00 FA 	.db %00000001, %01000000, %10101000, %00010111, %01000000, %10111111, %00000000, %11111010
  185 D1:D73F 05 D0 BF 17 
              C7 E7 D7 -  	.db %00000101, %11010000, %10111111, %00010111, %11000111, %11100111, %11010111
  186 D1:D746 -  -  -  -  
  187 D1:D746 -  -  -  -  
  188 D1:D746 -  -  -  -  DualLeaf2:
  189 D1:D746 10 -  -  -  	.db %00010000
  190 D1:D747 12 0C -  -  	.db 18, 12
  191 D1:D749 03 C0 00 FC 
              00 FF 00 FF 	.db %00000011, %11000000, %00000000, %11111100, %00000000, %11111111, %00000000, %11111111
  192 D1:D751 F0 3F FF 0F 
              CF CF F3 FF 	.db %11110000, %00111111, %11111111, %00001111, %11001111, %11001111, %11110011, %11111111
  193 D1:D759 F0 3F FC 0F 
              FF 00 FF C0 	.db %11110000, %00111111, %11111100, %00001111, %11111111, %00000000, %11111111, %11000000
  194 D1:D761 3F C0 03 -  	.db %00111111, %11000000, %00000011
  195 D1:D764 -  -  -  -  
  196 D1:D764 45 -  -  -  	.db %01000101
  197 D1:D765 -  -  -  -  
  198 D1:D765 02 05 02 E0 
              5F 85 F4 2F 	.db %00000010, %00000101, %00000010, %11100000, %01011111, %10000101, %11110100, %00101111
  199 D1:D76D E8 2F 45 FE 
              5E 8F D3 C0 	.db %11101000, %00101111, %01000101, %11111110, %01011110, %10001111, %11010011, %11000000
  200 D1:D775 -  -  -  -  
  201 D1:D775 -  -  -  -  
  202 D1:D775 -  -  -  -  Branches_6:
  203 D1:D775 20 -  -  -  	.db %00100000
  204 D1:D776 12 0B -  -  	.db 18, 11
  205 D1:D778 37 3F 3F FF 
              FF FF FF FF 	.db %00110111, %00111111, %00111111, %11111111, %11111111, %11111111, %11111111, %11111111
  206 D1:D780 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  207 D1:D788 FF FF FF FF 
              FC FF F0 00 	.db %11111111, %11111111, %11111111, %11111111, %11111100, %11111111, %11110000, %00000000
  208 D1:D790 0C -  -  -  	.db %00001100
  209 D1:D791 -  -  -  -  
  210 D1:D791 01 23 -  -  	.db %00000001, %00100011
  211 D1:D793 -  -  -  -  
  212 D1:D793 00 00 00 14 
              00 15 40 10 	.db %00000000, %00000000, %00000000, %00010100, %00000000, %00010101, %01000000, %00010000
  213 D1:D79B 05 44 01 55 
              94 41 55 15 	.db %00000101, %01000100, %00000001, %01010101, %10010100, %01000001, %01010101, %00010101
  214 D1:D7A3 2D CA 86 99 
              AA E6 BF FF 	.db %00101101, %11001010, %10000110, %10011001, %10101010, %11100110, %10111111, %11111111
  215 D1:D7AB FF C8 59 15 
              A6 A8 16 15 	.db %11111111, %11001000, %01011001, %00010101, %10100110, %10101000, %00010110, %00010101
  216 D1:D7B3 01 54 15 41 
              55 00 14 00 	.db %00000001, %01010100, %00010101, %01000001, %01010101, %00000000, %00010100, %00000000
  217 D1:D7BB 00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000
  218 D1:D7BF -  -  -  -  
  219 D1:D7BF -  -  -  -  
  220 D1:D7BF -  -  -  -  Branches_7:
  221 D1:D7BF 20 -  -  -  	.db %00100000
  222 D1:D7C0 12 0A -  -  	.db 18, 10
  223 D1:D7C2 FF 3C FF FF 
              FF FF FF FF 	.db %11111111, %00111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  224 D1:D7CA FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  225 D1:D7D2 FF FF FF F3 
              C3 C0 F0 -  	.db %11111111, %11111111, %11111111, %11110011, %11000011, %11000000, %11110000
  226 D1:D7D9 -  -  -  -  
  227 D1:D7D9 01 23 -  -  	.db %00000001, %00100011
  228 D1:D7DB -  -  -  -  
  229 D1:D7DB 00 00 00 00 
              55 40 01 00 	.db %00000000, %00000000, %00000000, %00000000, %01010101, %01000000, %00000001, %00000000
  230 D1:D7E3 90 01 55 45 
              51 15 55 05 	.db %10010000, %00000001, %01010101, %01000101, %01010001, %00010101, %01010101, %00000101
  231 D1:D7EB 00 AB FA 9D 
              FA AF AA FB 	.db %00000000, %10101011, %11111010, %10011101, %11111010, %10101111, %10101010, %11111011
  232 D1:D7F3 AA BF 05 51 
              55 51 55 44 	.db %10101010, %10111111, %00000101, %01010001, %01010101, %01010001, %01010101, %01000100
  233 D1:D7FB 15 10 44 00 
              00 00 05 00 	.db %00010101, %00010000, %01000100, %00000000, %00000000, %00000000, %00000101, %00000000
  234 D1:D803 00 -  -  -  	.db %00000000
  235 D1:D804 -  -  -  -  
  236 D1:D804 -  -  -  -  
  237 D1:D804 -  -  -  -  Branches_15:
  238 D1:D804 20 -  -  -  	.db %00100000
  239 D1:D805 09 0E -  -  	.db 9, 14
  240 D1:D807 80 60 38 1E 
              07 C3 F1 FE 	.db %10000000, %01100000, %00111000, %00011110, %00000111, %11000011, %11110001, %11111110
  241 D1:D80F 7F 1F 87 C1 
              E0 F0 18 0C 	.db %01111111, %00011111, %10000111, %11000001, %11100000, %11110000, %00011000, %00001100
  242 D1:D817 -  -  -  -  
  243 D1:D817 01 23 -  -  	.db %00000001, %00100011
  244 D1:D819 -  -  -  -  
  245 D1:D819 00 01 01 00 
              64 00 84 01 	.db %00000000, %00000001, %00000001, %00000000, %01100100, %00000000, %10000100, %00000001
  246 D1:D821 A1 06 90 6C 
              68 10 40 -  	.db %10100001, %00000110, %10010000, %01101100, %01101000, %00010000, %01000000
  247 D1:D828 -  -  -  -  
  248 D1:D828 -  -  -  -  
  249 D1:D828 -  -  -  -  Branches_8:
  250 D1:D828 20 -  -  -  	.db %00100000
  251 D1:D829 0A 0E -  -  	.db 10, 14
  252 D1:D82B 03 C3 F3 FC 
              FF 3F FF FF 	.db %00000011, %11000011, %11110011, %11111100, %11111111, %00111111, %11111111, %11111111
  253 D1:D833 FF FF FF 3F 
              CF F3 F0 F0 	.db %11111111, %11111111, %11111111, %00111111, %11001111, %11110011, %11110000, %11110000
  254 D1:D83B 3C 00 -  -  	.db %00111100, %00000000
  255 D1:D83D -  -  -  -  
  256 D1:D83D 01 23 -  -  	.db %00000001, %00100011
  257 D1:D83F -  -  -  -  
  258 D1:D83F 06 00 60 12 
              90 5B 51 1A 	.db %00000110, %00000000, %01100000, %00010010, %10010000, %01011011, %01010001, %00011010
  259 D1:D847 50 51 94 11 
              F9 45 6E 50 	.db %01010000, %01010001, %10010100, %00010001, %11111001, %01000101, %01101110, %01010000
  260 D1:D84F 4B 84 5E 54 
              B8 50 A1 01 	.db %01001011, %10000100, %01011110, %01010100, %10111000, %01010000, %10100001, %00000001
  261 D1:D857 44 40 -  -  	.db %01000100, %01000000
  262 D1:D859 -  -  -  -  
  263 D1:D859 -  -  -  -  
  264 D1:D859 -  -  -  -  Branches_12:
  265 D1:D859 20 -  -  -  	.db %00100000
  266 D1:D85A 12 0A -  -  	.db 18, 10
  267 D1:D85C 00 00 C0 3F 
              F0 FF FF FF 	.db %00000000, %00000000, %11000000, %00111111, %11110000, %11111111, %11111111, %11111111
  268 D1:D864 FF FF FF FF 
              FF FF FF FC 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111100
  269 D1:D86C 0F FF 00 0F 
              C0 00 F0 -  	.db %00001111, %11111111, %00000000, %00001111, %11000000, %00000000, %11110000
  270 D1:D873 -  -  -  -  
  271 D1:D873 01 23 -  -  	.db %00000001, %00100011
  272 D1:D875 -  -  -  -  
  273 D1:D875 00 00 00 00 
              05 54 50 01 	.db %00000000, %00000000, %00000000, %00000000, %00000101, %01010100, %01010000, %00000001
  274 D1:D87D 45 04 16 3A 
              5F 2A F8 F2 	.db %01000101, %00000100, %00010110, %00111010, %01011111, %00101010, %11111000, %11110010
  275 D1:D885 12 9A C5 6A 
              00 00 15 06 	.db %00010010, %10011010, %11000101, %01101010, %00000000, %00000000, %00010101, %00000110
  276 D1:D88D 90 00 14 10 
              14 00 -  -  	.db %10010000, %00000000, %00010100, %00010000, %00010100, %00000000
  277 D1:D893 -  -  -  -  
  278 D1:D893 -  -  -  -  
  279 D1:D893 -  -  -  -  LeavesDark:
  280 D1:D893 10 -  -  -  	.db %00010000
  281 D1:D894 1A 15 -  -  	.db 26, 21
  282 D1:D896 00 0F 00 00 
              0F FC 00 3F 	.db %00000000, %00001111, %00000000, %00000000, %00001111, %11111100, %00000000, %00111111
  283 D1:D89E FF C0 0F FF 
              FC 0F FF FF 	.db %11111111, %11000000, %00001111, %11111111, %11111100, %00001111, %11111111, %11111111
  284 D1:D8A6 03 FF FF C3 
              FF FF F0 FF 	.db %00000011, %11111111, %11111111, %11000011, %11111111, %11111111, %11110000, %11111111
  285 D1:D8AE FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  286 D1:D8B6 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  287 D1:D8BE FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  288 D1:D8C6 FF FF FF FF 
              3F FF FF CF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111, %11001111
  289 D1:D8CE FF FF C0 3F 
              FF F0 0F FF 	.db %11111111, %11111111, %11000000, %00111111, %11111111, %11110000, %00001111, %11111111
  290 D1:D8D6 F0 00 FF F0 
              00 -  -  -  	.db %11110000, %00000000, %11111111, %11110000, %00000000
  291 D1:D8DB -  -  -  -  
  292 D1:D8DB 54 -  -  -  	.db %01010100
  293 D1:D8DC -  -  -  -  
  294 D1:D8DC 4A A1 54 02 
              A9 40 55 20 	.db %01001010, %10100001, %01010100, %00000010, %10101001, %01000000, %01010101, %00100000
  295 D1:D8E4 0A 24 80 02 
              20 02 20 10 	.db %00001010, %00100100, %10000000, %00000010, %00100000, %00000010, %00100000, %00010000
  296 D1:D8EC 00 84 40 00 
              00 00 00 00 	.db %00000000, %10000100, %01000000, %00000000, %00000000, %00000000, %00000000, %00000000
  297 D1:D8F4 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  298 D1:D8FC 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  299 D1:D904 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  300 D1:D90C 00 00 00 00 
              00 00 -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  301 D1:D912 -  -  -  -  
  302 D1:D912 -  -  -  -  
  303 D1:D912 -  -  -  -  Leaves2:
  304 D1:D912 20 -  -  -  	.db %00100000
  305 D1:D913 1A 12 -  -  	.db 26, 18
  306 D1:D915 0F 00 00 0F 
              F0 0F 03 FC 	.db %00001111, %00000000, %00000000, %00001111, %11110000, %00001111, %00000011, %11111100
  307 D1:D91D 0F F3 FF FF 
              FC FF FF FF 	.db %00001111, %11110011, %11111111, %11111111, %11111100, %11111111, %11111111, %11111111
  308 D1:D925 3F FF FF FF 
              FF FF FF FF 	.db %00111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  309 D1:D92D FF FF FF FF 
              FF CF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11001111, %11111111, %11111111
  310 D1:D935 F3 FF FF F0 
              FF FF FC 3F 	.db %11110011, %11111111, %11111111, %11110000, %11111111, %11111111, %11111100, %00111111
  311 D1:D93D FF FF 0F FF 
              FF 00 FF FF 	.db %11111111, %11111111, %00001111, %11111111, %11111111, %00000000, %11111111, %11111111
  312 D1:D945 C0 3F FF F0 
              03 FF F0 00 	.db %11000000, %00111111, %11111111, %11110000, %00000011, %11111111, %11110000, %00000000
  313 D1:D94D 0F F0 00 -  	.db %00001111, %11110000, %00000000
  314 D1:D950 -  -  -  -  
  315 D1:D950 48 50 -  -  	.db %01001000, %01010000
  316 D1:D952 -  -  -  -  
  317 D1:D952 00 01 00 00 
              04 40 01 00 	.db %00000000, %00000001, %00000000, %00000000, %00000100, %01000000, %00000001, %00000000
  318 D1:D95A 01 11 00 00 
              14 40 00 40 	.db %00000001, %00010001, %00000000, %00000000, %00010100, %01000000, %00000000, %01000000
  319 D1:D962 00 00 04 10 
              00 00 00 00 	.db %00000000, %00000000, %00000100, %00010000, %00000000, %00000000, %00000000, %00000000
  320 D1:D96A 11 00 00 00 
              00 00 00 00 	.db %00010001, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  321 D1:D972 00 A2 00 02 
              88 80 02 0A 	.db %00000000, %10100010, %00000000, %00000010, %10001000, %10000000, %00000010, %00001010
  322 D1:D97A 88 0A 8A A2 
              20 88 A2 28 	.db %10001000, %00001010, %10001010, %10100010, %00100000, %10001000, %10100010, %00101000
  323 D1:D982 AA AA 88 8A 
              A8 A2 AA AA 	.db %10101010, %10101010, %10001000, %10001010, %10101000, %10100010, %10101010, %10101010
  324 D1:D98A A2 2A AA AA 
              AA AA AA AA 	.db %10100010, %00101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  325 D1:D992 AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  326 D1:D99A AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  327 D1:D9A2 AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  328 D1:D9AA -  -  -  -  
  329 D1:D9AA -  -  -  -  
  330 D1:D9AA -  -  -  -  LeavesLight:
  331 D1:D9AA 10 -  -  -  	.db %00010000
  332 D1:D9AB 1A 15 -  -  	.db 26, 21
  333 D1:D9AD 00 0F 00 00 
              0F FC 00 3F 	.db %00000000, %00001111, %00000000, %00000000, %00001111, %11111100, %00000000, %00111111
  334 D1:D9B5 FF C0 0F FF 
              FC 0F FF FF 	.db %11111111, %11000000, %00001111, %11111111, %11111100, %00001111, %11111111, %11111111
  335 D1:D9BD 03 FF FF C3 
              FF FF F0 FF 	.db %00000011, %11111111, %11111111, %11000011, %11111111, %11111111, %11110000, %11111111
  336 D1:D9C5 FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  337 D1:D9CD FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  338 D1:D9D5 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  339 D1:D9DD FF FF FF FF 
              3F FF FF CF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111, %11001111
  340 D1:D9E5 FF FF C0 3F 
              FF F0 0F FF 	.db %11111111, %11111111, %11000000, %00111111, %11111111, %11110000, %00001111, %11111111
  341 D1:D9ED F0 00 FF F0 
              00 -  -  -  	.db %11110000, %00000000, %11111111, %11110000, %00000000
  342 D1:D9F2 -  -  -  -  
  343 D1:D9F2 48 -  -  -  	.db %01001000
  344 D1:D9F3 -  -  -  -  
  345 D1:D9F3 4A A1 54 02 
              A9 40 55 20 	.db %01001010, %10100001, %01010100, %00000010, %10101001, %01000000, %01010101, %00100000
  346 D1:D9FB 0A 24 80 02 
              20 02 20 10 	.db %00001010, %00100100, %10000000, %00000010, %00100000, %00000010, %00100000, %00010000
  347 D1:DA03 00 84 40 00 
              00 00 00 00 	.db %00000000, %10000100, %01000000, %00000000, %00000000, %00000000, %00000000, %00000000
  348 D1:DA0B 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  349 D1:DA13 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  350 D1:DA1B 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  351 D1:DA23 00 00 00 00 
              00 00 -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  352 D1:DA29 -  -  -  -  
  353 D1:DA29 -  -  -  -  
  354 D1:DA29 -  -  -  -  Branches_11:
  355 D1:DA29 20 -  -  -  	.db %00100000
  356 D1:DA2A 12 0A -  -  	.db 18, 10
  357 D1:DA2C 00 03 C3 CF 
              FF FF FF FF 	.db %00000000, %00000011, %11000011, %11001111, %11111111, %11111111, %11111111, %11111111
  358 D1:DA34 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  359 D1:DA3C FF FF 03 F3 
              C0 00 30 -  	.db %11111111, %11111111, %00000011, %11110011, %11000000, %00000000, %00110000
  360 D1:DA43 -  -  -  -  
  361 D1:DA43 01 32 -  -  	.db %00000001, %00110010
  362 D1:DA45 -  -  -  -  
  363 D1:DA45 00 00 00 15 
              00 00 05 44 	.db %00000000, %00000000, %00000000, %00010101, %00000000, %00000000, %00000101, %01000100
  364 D1:DA4D 15 65 55 04 
              10 FB FA 3F 	.db %00010101, %01100101, %01010101, %00000100, %00010000, %11111011, %11111010, %00111111
  365 D1:DA55 FF B7 D3 FB 
              EA BE 15 54 	.db %11111111, %10110111, %11010011, %11111011, %11101010, %10111110, %00010101, %01010100
  366 D1:DA5D 14 15 E0 00 
              14 10 15 00 	.db %00010100, %00010101, %11100000, %00000000, %00010100, %00010000, %00010101, %00000000
  367 D1:DA65 00 10 -  -  	.db %00000000, %00010000
  368 D1:DA67 -  -  -  -  
  369 D1:DA67 -  -  -  -  
  370 D1:DA67 -  -  -  -  Branches_14:
  371 D1:DA67 20 -  -  -  	.db %00100000
  372 D1:DA68 06 0E -  -  	.db 6, 14
  373 D1:DA6A 30 C3 0C 39 
              E7 9E FF FF 	.db %00110000, %11000011, %00001100, %00111001, %11100111, %10011110, %11111111, %11111111
  374 D1:DA72 FF FF F0 -  	.db %11111111, %11111111, %11110000
  375 D1:DA75 -  -  -  -  
  376 D1:DA75 01 23 -  -  	.db %00000001, %00100011
  377 D1:DA77 -  -  -  -  
  378 D1:DA77 00 00 10 20 
              20 20 1D 06 	.db %00000000, %00000000, %00010000, %00100000, %00100000, %00100000, %00011101, %00000110
  379 D1:DA7F 90 65 06 10 
              59 07 90 -  	.db %10010000, %01100101, %00000110, %00010000, %01011001, %00000111, %10010000
  380 D1:DA86 -  -  -  -  
  381 D1:DA86 -  -  -  -  
  382 D1:DA86 -  -  -  -  Branches_4:
  383 D1:DA86 20 -  -  -  	.db %00100000
  384 D1:DA87 12 0E -  -  	.db 18, 14
  385 D1:DA89 00 03 CF FF 
              FF FF FF FF 	.db %00000000, %00000011, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111
  386 D1:DA91 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  387 D1:DA99 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  388 D1:DAA1 FF FF FF 3F 
              FF C0 FF 30 	.db %11111111, %11111111, %11111111, %00111111, %11111111, %11000000, %11111111, %00110000
  389 D1:DAA9 -  -  -  -  
  390 D1:DAA9 01 23 -  -  	.db %00000001, %00100011
  391 D1:DAAB -  -  -  -  
  392 D1:DAAB 00 00 00 00 
              00 00 50 45 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %01010000, %01000101
  393 D1:DAB3 01 55 50 00 
              25 00 14 16 	.db %00000001, %01010101, %01010000, %00000000, %00100101, %00000000, %00010100, %00010110
  394 D1:DABB 11 45 5A 19 
              2A AA 58 3F 	.db %00010001, %01000101, %01011010, %00011001, %00101010, %10101010, %01011000, %00111111
  395 D1:DAC3 AA AA AF FE 
              BD FF DF E2 	.db %10101010, %10101010, %10101111, %11111110, %10111101, %11111111, %11011111, %11100010
  396 D1:DACB 55 64 02 AA 
              60 00 05 50 	.db %01010101, %01100100, %00000010, %10101010, %01100000, %00000000, %00000101, %01010000
  397 D1:DAD3 54 15 54 00 
              00 00 00 05 	.db %01010100, %00010101, %01010100, %00000000, %00000000, %00000000, %00000000, %00000101
  398 D1:DADB 10 55 00 00 
              00 00 00 00 	.db %00010000, %01010101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  399 D1:DAE3 00 -  -  -  	.db %00000000
  400 D1:DAE4 -  -  -  -  
  401 D1:DAE4 -  -  -  -  
  402 D1:DAE4 -  -  -  -  Branches_5:
  403 D1:DAE4 20 -  -  -  	.db %00100000
  404 D1:DAE5 12 0E -  -  	.db 18, 14
  405 D1:DAE7 00 C0 CF FF 
              FF FF FF FF 	.db %00000000, %11000000, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111
  406 D1:DAEF FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  407 D1:DAF7 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  408 D1:DAFF FF FF FF 3F 
              FF C3 C3 F0 	.db %11111111, %11111111, %11111111, %00111111, %11111111, %11000011, %11000011, %11110000
  409 D1:DB07 -  -  -  -  
  410 D1:DB07 01 23 -  -  	.db %00000001, %00100011
  411 D1:DB09 -  -  -  -  
  412 D1:DB09 00 00 00 00 
              01 00 05 05 	.db %00000000, %00000000, %00000000, %00000000, %00000001, %00000000, %00000101, %00000101
  413 D1:DB11 41 41 45 40 
              00 01 15 45 	.db %01000001, %01000001, %01000101, %01000000, %00000000, %00000001, %00010101, %01000101
  414 D1:DB19 55 45 65 A5 
              AA 66 AA FA 	.db %01010101, %01000101, %01100101, %10100101, %10101010, %01100110, %10101010, %11111010
  415 D1:DB21 F9 FF BF FE 
              AA F6 BA 99 	.db %11111001, %11111111, %10111111, %11111110, %10101010, %11110110, %10111010, %10011001
  416 D1:DB29 50 55 55 55 
              51 50 00 01 	.db %01010000, %01010101, %01010101, %01010101, %01010001, %01010000, %00000000, %00000001
  417 D1:DB31 54 51 41 50 
              00 00 01 40 	.db %01010100, %01010001, %01000001, %01010000, %00000000, %00000000, %00000001, %01000000
  418 D1:DB39 15 45 00 00 
              00 00 00 00 	.db %00010101, %01000101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  419 D1:DB41 00 -  -  -  	.db %00000000
  420 D1:DB42 -  -  -  -  
  421 D1:DB42 -  -  -  -  
  422 D1:DB42 -  -  -  -  Branches_3:
  423 D1:DB42 20 -  -  -  	.db %00100000
  424 D1:DB43 12 0E -  -  	.db 18, 14
  425 D1:DB45 0F CF FF FF 
              FF FF FF FF 	.db %00001111, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  426 D1:DB4D FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  427 D1:DB55 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  428 D1:DB5D FF FF FF FF 
              3F FF 00 F0 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %00000000, %11110000
  429 D1:DB65 -  -  -  -  
  430 D1:DB65 01 23 -  -  	.db %00000001, %00100011
  431 D1:DB67 -  -  -  -  
  432 D1:DB67 00 00 00 00 
              50 00 15 55 	.db %00000000, %00000000, %00000000, %00000000, %01010000, %00000000, %00010101, %01010101
  433 D1:DB6F 50 15 00 00 
              00 00 00 65 	.db %01010000, %00010101, %00000000, %00000000, %00000000, %00000000, %00000000, %01100101
  434 D1:DB77 05 98 A2 55 
              05 AA 32 AA 	.db %00000101, %10011000, %10100010, %01010101, %00000101, %10101010, %00110010, %10101010
  435 D1:DB7F BD 4B FF FF 
              FF BF EA 95 	.db %10111101, %01001011, %11111111, %11111111, %11111111, %10111111, %11101010, %10010101
  436 D1:DB87 5E AA E6 55 
              A9 55 6A 56 	.db %01011110, %10101010, %11100110, %01010101, %10101001, %01010101, %01101010, %01010110
  437 D1:DB8F 40 12 50 00 
              00 50 01 54 	.db %01000000, %00010010, %01010000, %00000000, %00000000, %01010000, %00000001, %01010100
  438 D1:DB97 15 54 00 15 
              40 00 00 00 	.db %00010101, %01010100, %00000000, %00010101, %01000000, %00000000, %00000000, %00000000
  439 D1:DB9F 40 00 00 -  	.db %01000000, %00000000, %00000000
  440 D1:DBA2 -  -  -  -  
  441 D1:DBA2 -  -  -  -  
  442 D1:DBA2 -  -  -  -  Branches_2:
  443 D1:DBA2 20 -  -  -  	.db %00100000
  444 D1:DBA3 12 0E -  -  	.db 18, 14
  445 D1:DBA5 0F C3 FF FF 
              FF FF FF FF 	.db %00001111, %11000011, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  446 D1:DBAD FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  447 D1:DBB5 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  448 D1:DBBD FF FF FF FF 
              FF F3 0F 30 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11110011, %00001111, %00110000
  449 D1:DBC5 -  -  -  -  
  450 D1:DBC5 01 32 -  -  	.db %00000001, %00110010
  451 D1:DBC7 -  -  -  -  
  452 D1:DBC7 00 00 00 00 
              50 00 00 05 	.db %00000000, %00000000, %00000000, %00000000, %01010000, %00000000, %00000000, %00000101
  453 D1:DBCF 54 15 55 45 
              40 00 00 00 	.db %01010100, %00010101, %01010101, %01000101, %01000000, %00000000, %00000000, %00000000
  454 D1:DBD7 55 55 14 05 
              59 FF FD 55 	.db %01010101, %01010101, %00010100, %00000101, %01011001, %11111111, %11111101, %01010101
  455 D1:DBDF 47 EA AA AE 
              FF EF FF F6 	.db %01000111, %11101010, %10101010, %10101110, %11111111, %11101111, %11111111, %11110110
  456 D1:DBE7 AA AA 5D 07 
              F4 FF F5 55 	.db %10101010, %10101010, %01011101, %00000111, %11110100, %11111111, %11110101, %01010101
  457 D1:DBEF 05 55 75 15 
              15 55 00 00 	.db %00000101, %01010101, %01110101, %00010101, %00010101, %01010101, %00000000, %00000000
  458 D1:DBF7 01 00 05 50 
              00 40 05 50 	.db %00000001, %00000000, %00000101, %01010000, %00000000, %01000000, %00000101, %01010000
  459 D1:DBFF 00 00 00 -  	.db %00000000, %00000000, %00000000
  460 D1:DC02 -  -  -  -  
  461 D1:DC02 -  -  -  -  
  462 D1:DC02 -  -  -  -  GroundDirtFull:
  463 D1:DC02 24 -  -  -  	.db %00100100
  464 D1:DC03 10 10 -  -  	.db 16, 16
  465 D1:DC05 15 00 -  -  	.db %00010101, %00000000
  466 D1:DC07 -  -  -  -  
  467 D1:DC07 04 00 00 00 
              04 00 00 00 	.db %00000100, %00000000, %00000000, %00000000, %00000100, %00000000, %00000000, %00000000
  468 D1:DC0F AA AA 40 4A 
              21 12 10 24 	.db %10101010, %10101010, %01000000, %01001010, %00100001, %00010010, %00010000, %00100100
  469 D1:DC17 01 01 00 04 
              44 2A A8 10 	.db %00000001, %00000001, %00000000, %00000100, %01000100, %00101010, %10101000, %00010000
  470 D1:DC1F 10 A5 0A 80 
              04 00 00 A1 	.db %00010000, %10100101, %00001010, %10000000, %00000100, %00000000, %00000000, %10100001
  471 D1:DC27 84 40 00 61 
              10 10 00 10 	.db %10000100, %01000000, %00000000, %01100001, %00010000, %00010000, %00000000, %00010000
  472 D1:DC2F 0A AA 94 00 
              29 10 12 84 	.db %00001010, %10101010, %10010100, %00000000, %00101001, %00010000, %00010010, %10000100
  473 D1:DC37 10 00 42 84 
              01 29 00 80 	.db %00010000, %00000000, %01000010, %10000100, %00000001, %00101001, %00000000, %10000000
  474 D1:DC3F 04 A1 40 8A 
              A0 00 00 00 	.db %00000100, %10100001, %01000000, %10001010, %10100000, %00000000, %00000000, %00000000
  475 D1:DC47 -  -  -  -  
  476 D1:DC47 -  -  -  -  
  477 D1:DC47 -  -  -  -  GroundDirtMound:
  478 D1:DC47 20 -  -  -  	.db %00100000
  479 D1:DC48 10 0C -  -  	.db 16, 12
  480 D1:DC4A 0F F0 3F FC 
              FF FF FF FF 	.db %00001111, %11110000, %00111111, %11111100, %11111111, %11111111, %11111111, %11111111
  481 D1:DC52 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  482 D1:DC5A FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  483 D1:DC62 -  -  -  -  
  484 D1:DC62 01 50 -  -  	.db %00000001, %01010000
  485 D1:DC64 -  -  -  -  
  486 D1:DC64 00 00 05 55 
              50 05 56 59 	.db %00000000, %00000000, %00000101, %01010101, %01010000, %00000101, %01010110, %01011001
  487 D1:DC6C 50 55 96 5A 
              55 55 9A 56 	.db %01010000, %01010101, %10010110, %01011010, %01010101, %01010101, %10011010, %01010110
  488 D1:DC74 56 A5 54 00 
              01 59 55 65 	.db %01010110, %10100101, %01010100, %00000000, %00000001, %01011001, %01010101, %01100101
  489 D1:DC7C 50 00 15 69 
              55 15 59 59 	.db %01010000, %00000000, %00010101, %01101001, %01010101, %00010101, %01011001, %01011001
  490 D1:DC84 65 56 50 05 
              66 55 41 41 	.db %01100101, %01010110, %01010000, %00000101, %01100110, %01010101, %01000001, %01000001
  491 D1:DC8C A6 65 95 55 
              95 -  -  -  	.db %10100110, %01100101, %10010101, %01010101, %10010101
  492 D1:DC91 -  -  -  -  
  493 D1:DC91 -  -  -  -  
  494 D1:DC91 -  -  -  -  Tree_2:
  495 D1:DC91 10 -  -  -  	.db %00010000
  496 D1:DC92 1A 10 -  -  	.db 26, 16
  497 D1:DC94 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  498 D1:DC9C FF FF FF FF 
              FF 3F FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  499 D1:DCA4 CF FF FF F3 
              FF FF FC FF 	.db %11001111, %11111111, %11111111, %11110011, %11111111, %11111111, %11111100, %11111111
  500 D1:DCAC FF FF 3F FF 
              FF CF FF FF 	.db %11111111, %11111111, %00111111, %11111111, %11111111, %11001111, %11111111, %11111111
  501 D1:DCB4 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  502 D1:DCBC FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  503 D1:DCC4 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  504 D1:DCC8 -  -  -  -  
  505 D1:DCC8 01 -  -  -  	.db %00000001
  506 D1:DCC9 -  -  -  -  
  507 D1:DCC9 01 12 40 80 
              4C DD 30 33 	.db %00000001, %00010010, %01000000, %10000000, %01001100, %11011101, %00110000, %00110011
  508 D1:DCD1 27 CC 02 51 
              E4 02 59 D9 	.db %00100111, %11001100, %00000010, %01010001, %11100100, %00000010, %01011001, %11011001
  509 D1:DCD9 08 69 D9 01 
              69 9B 07 69 	.db %00001000, %01101001, %11011001, %00000001, %01101001, %10011011, %00000111, %01101001
  510 D1:DCE1 1E 03 70 3E 
              03 D2 3E 00 	.db %00011110, %00000011, %01110000, %00111110, %00000011, %11010010, %00111110, %00000000
  511 D1:DCE9 A5 5C 80 F9 
              75 60 1C 6D 	.db %10100101, %01011100, %10000000, %11111001, %01110101, %01100000, %00011100, %01101101
  512 D1:DCF1 18 01 1B 86 
              02 46 69 41 	.db %00011000, %00000001, %00011011, %10000110, %00000010, %01000110, %01101001, %01000001
  513 D1:DCF9 91 82 40 -  	.db %10010001, %10000010, %01000000
  514 D1:DCFC -  -  -  -  
  515 D1:DCFC -  -  -  -  
  516 D1:DCFC -  -  -  -  Tree_4:
  517 D1:DCFC 24 -  -  -  	.db %00100100
  518 D1:DCFD 1A 10 -  -  	.db 26, 16
  519 D1:DCFF 01 20 -  -  	.db %00000001, %00100000
  520 D1:DD01 -  -  -  -  
  521 D1:DD01 14 45 40 15 
              54 25 61 44 	.db %00010100, %01000101, %01000000, %00010101, %01010100, %00100101, %01100001, %01000100
  522 D1:DD09 14 05 55 00 
              41 11 01 45 	.db %00010100, %00000101, %01010101, %00000000, %01000001, %00010001, %00000001, %01000101
  523 D1:DD11 50 54 24 21 
              10 00 95 05 	.db %01010000, %01010100, %00100100, %00100001, %00010000, %00000000, %10010101, %00000101
  524 D1:DD19 41 41 11 00 
              09 10 94 15 	.db %01000001, %01000001, %00010001, %00000000, %00001001, %00010000, %10010100, %00010101
  525 D1:DD21 11 11 00 95 
              09 49 45 10 	.db %00010001, %00010001, %00000000, %10010101, %00001001, %01001001, %01000101, %00010000
  526 D1:DD29 01 09 50 94 
              95 51 00 50 	.db %00000001, %00001001, %01010000, %10010100, %10010101, %01010001, %00000000, %01010000
  527 D1:DD31 95 09 49 45 
              40 45 09 40 	.db %10010101, %00001001, %01001001, %01000101, %01000000, %01000101, %00001001, %01000000
  528 D1:DD39 90 95 54 01 
              50 A4 05 05 	.db %10010000, %10010101, %01010100, %00000001, %01010000, %10100100, %00000101, %00000101
  529 D1:DD41 54 44 45 0A 
              42 50 55 00 	.db %01010100, %01000100, %01000101, %00001010, %01000010, %01010000, %01010101, %00000000
  530 D1:DD49 10 54 14 95 
              41 02 04 11 	.db %00010000, %01010100, %00010100, %10010101, %01000001, %00000010, %00000100, %00010001
  531 D1:DD51 52 49 51 00 
              20 51 11 10 	.db %01010010, %01001001, %01010001, %00000000, %00100000, %01010001, %00010001, %00010000
  532 D1:DD59 91 50 A5 05 
              11 12 15 54 	.db %10010001, %01010000, %10100101, %00000101, %00010001, %00010010, %00010101, %01010100
  533 D1:DD61 09 54 04 51 
              01 54 40 25 	.db %00001001, %01010100, %00000100, %01010001, %00000001, %01010100, %01000000, %00100101
  534 D1:DD69 -  -  -  -  
  535 D1:DD69 -  -  -  -  
  536 D1:DD69 -  -  -  -  Tree_7:
  537 D1:DD69 24 -  -  -  	.db %00100100
  538 D1:DD6A 1A 10 -  -  	.db 26, 16
  539 D1:DD6C 10 23 -  -  	.db %00010000, %00100011
  540 D1:DD6E -  -  -  -  
  541 D1:DD6E 10 05 08 28 
              85 28 81 62 	.db %00010000, %00000101, %00001000, %00101000, %10000101, %00101000, %10000001, %01100010
  542 D1:DD76 5A 08 88 5C 
              BA 05 81 60 	.db %01011010, %00001000, %10001000, %01011100, %10111010, %00000101, %10000001, %01100000
  543 D1:DD7E 88 95 CA B1 
              58 06 A0 49 	.db %10001000, %10010101, %11001010, %10110001, %01011000, %00000110, %10100000, %01001001
  544 D1:DD86 62 89 51 68 
              48 60 16 2A 	.db %01100010, %10001001, %01010001, %01101000, %01001000, %01100000, %00010110, %00101010
  545 D1:DD8E 54 15 80 87 
              85 EA 96 00 	.db %01010100, %00010101, %10000000, %10000111, %10000101, %11101010, %10010110, %00000000
  546 D1:DD96 58 82 29 72 
              A1 C0 05 68 	.db %01011000, %10000010, %00101001, %01110010, %10100001, %11000000, %00000101, %01101000
  547 D1:DD9E 2A 9E 22 1E 
              18 56 22 A5 	.db %00101010, %10011110, %00100010, %00011110, %00011000, %01010110, %00100010, %10100101
  548 D1:DDA6 67 25 80 01 
              62 A9 55 72 	.db %01100111, %00100101, %10000000, %00000001, %01100010, %10101001, %01010101, %01110010
  549 D1:DDAE 5A 06 15 8A 
              56 95 97 81 	.db %01011010, %00000110, %00010101, %10001010, %01010110, %10010101, %10010111, %10000001
  550 D1:DDB6 00 51 25 A0 
              59 E5 00 15 	.db %00000000, %01010001, %00100101, %10100000, %01011001, %11100101, %00000000, %00010101
  551 D1:DDBE D2 02 A1 58 
              50 41 60 89 	.db %11010010, %00000010, %10100001, %01011000, %01010000, %01000001, %01100000, %10001001
  552 D1:DDC6 28 97 96 10 
              16 08 A2 89 	.db %00101000, %10010111, %10010110, %00010000, %00010110, %00001000, %10100010, %10001001
  553 D1:DDCE 7B 81 81 62 
              08 22 94 20 	.db %01111011, %10000001, %10000001, %01100010, %00001000, %00100010, %10010100, %00100000
  554 D1:DDD6 -  -  -  -  
  555 D1:DDD6 -  -  -  -  
  556 D1:DDD6 -  -  -  -  Tree_9:
  557 D1:DDD6 24 -  -  -  	.db %00100100
  558 D1:DDD7 1A 10 -  -  	.db 26, 16
  559 D1:DDD9 20 31 -  -  	.db %00100000, %00110001
  560 D1:DDDB -  -  -  -  
  561 D1:DDDB 14 95 0A A8 
              A8 35 B3 49 	.db %00010100, %10010101, %00001010, %10101000, %10101000, %00110101, %10110011, %01001001
  562 D1:DDE3 D2 28 A8 8C 
              58 A0 56 EA 	.db %11010010, %00101000, %10101000, %10001100, %01011000, %10100000, %01010110, %11101010
  563 D1:DDEB AA C8 CD 82 
              17 B8 AA AC 	.db %10101010, %11001000, %11001101, %10000010, %00010111, %10111000, %10101010, %10101100
  564 D1:DDF3 83 5B 25 6E 
              CA A8 23 35 	.db %10000011, %01011011, %00100101, %01101110, %11001010, %10101000, %00100011, %00110101
  565 D1:DDFB 88 68 2C 8A 
              A3 8D 60 C6 	.db %10001000, %01101000, %00101100, %10001010, %10100011, %10001101, %01100000, %11000110
  566 D1:DE03 C2 7A AB 0B 
              5A 0B 34 25 	.db %11000010, %01111010, %10101011, %00001011, %01011010, %00001011, %00110100, %00100101
  567 D1:DE0B AA B0 85 0A 
              23 79 52 AA 	.db %10101010, %10110000, %10000101, %00001010, %00100011, %01111001, %01010010, %10101010
  568 D1:DE13 21 63 BE 1E 
              21 68 AA 14 	.db %00100001, %01100011, %10111110, %00011110, %00100001, %01101000, %10101010, %00010100
  569 D1:DE1B 00 71 20 A5 
              EA B5 08 55 	.db %00000000, %01110001, %00100000, %10100101, %11101010, %10110101, %00001000, %01010101
  570 D1:DE23 80 88 16 2B 
              68 34 5E 20 	.db %10000000, %10001000, %00010110, %00101011, %01101000, %00110100, %01011110, %00100000
  571 D1:DE2B AB 48 AA 8D 
              CD A4 22 A2 	.db %10101011, %01001000, %10101010, %10001101, %11001101, %10100100, %00100010, %10100010
  572 D1:DE33 8A 0F 5E D7 
              96 2A 28 88 	.db %10001010, %00001111, %01011110, %11010111, %10010110, %00101010, %00101000, %10001000
  573 D1:DE3B D7 81 79 42 
              AA A8 8D 63 	.db %11010111, %10000001, %01111001, %01000010, %10101010, %10101000, %10001101, %01100011
  574 D1:DE43 -  -  -  -  
  575 D1:DE43 -  -  -  -  
  576 D1:DE43 -  -  -  -  Tree_6:
  577 D1:DE43 24 -  -  -  	.db %00100100
  578 D1:DE44 1A 10 -  -  	.db 26, 16
  579 D1:DE46 01 23 -  -  	.db %00000001, %00100011
  580 D1:DE48 -  -  -  -  
  581 D1:DE48 06 50 5A A5 
              80 A9 98 15 	.db %00000110, %01010000, %01011010, %10100101, %10000000, %10101001, %10011000, %00010101
  582 D1:DE50 0A 9A 49 29 
              9B 49 50 99 	.db %00001010, %10011010, %01001001, %00101001, %10011011, %01001001, %01010000, %10011001
  583 D1:DE58 61 83 50 85 
              59 43 66 48 	.db %01100001, %10000011, %01010000, %10000101, %01011001, %01000011, %01100110, %01001000
  584 D1:DE60 A4 02 15 54 
              2A 69 96 83 	.db %10100100, %00000010, %00010101, %01010100, %00101010, %01101001, %10010110, %10000011
  585 D1:DE68 80 45 00 9A 
              A9 A4 39 41 	.db %10000000, %01000101, %00000000, %10011010, %10101001, %10100100, %00111001, %01000001
  586 D1:DE70 41 0B 69 99 
              42 A4 94 90 	.db %01000001, %00001011, %01101001, %10011001, %01000010, %10100100, %10010100, %10010000
  587 D1:DE78 06 9A 58 19 
              55 05 04 A6 	.db %00000110, %10011010, %01011000, %00011001, %01010101, %00000101, %00000100, %10100110
  588 D1:DE80 66 43 54 42 
              A5 4D A6 55 	.db %01100110, %01000011, %01010100, %01000010, %10100101, %01001101, %10100110, %01010101
  589 D1:DE88 37 50 95 65 
              69 89 92 75 	.db %00110111, %01010000, %10010101, %01100101, %01101001, %10001001, %10010010, %01110101
  590 D1:DE90 29 69 96 54 
              DA 04 55 54 	.db %00101001, %01101001, %10010110, %01010100, %11011010, %00000100, %01010101, %01010100
  591 D1:DE98 98 66 4D 10 
              05 59 05 96 	.db %10011000, %01100110, %01001101, %00010000, %00000101, %01011001, %00000101, %10010110
  592 D1:DEA0 68 29 0A 41 
              42 69 96 50 	.db %01101000, %00101001, %00001010, %01000001, %01000010, %01101001, %10010110, %01010000
  593 D1:DEA8 D6 64 94 25 
              56 65 42 EA 	.db %11010110, %01100100, %10010100, %00100101, %01010110, %01100101, %01000010, %11101010
  594 D1:DEB0 -  -  -  -  
  595 D1:DEB0 -  -  -  -  
  596 D1:DEB0 -  -  -  -  Tree_3:
  597 D1:DEB0 24 -  -  -  	.db %00100100
  598 D1:DEB1 1A 10 -  -  	.db 26, 16
  599 D1:DEB3 10 20 -  -  	.db %00010000, %00100000
  600 D1:DEB5 -  -  -  -  
  601 D1:DEB5 05 11 05 00 
              05 80 01 45 	.db %00000101, %00010001, %00000101, %00000000, %00000101, %10000000, %00000001, %01000101
  602 D1:DEBD 11 48 45 51 
              40 11 45 10 	.db %00010001, %01001000, %01000101, %01010001, %01000000, %00010001, %01000101, %00010000
  603 D1:DEC5 84 58 16 01 
              54 40 54 01 	.db %10000100, %01011000, %00010110, %00000001, %01010100, %01000000, %01010100, %00000001
  604 D1:DECD 85 64 55 14 
              01 40 18 56 	.db %10000101, %01100100, %01010101, %00010100, %00000001, %01000000, %00011000, %01010110
  605 D1:DED5 04 55 50 56 
              41 85 60 51 	.db %00000100, %01010101, %01010000, %01010110, %01000001, %10000101, %01100000, %01010001
  606 D1:DEDD 51 05 60 14 
              56 05 55 10 	.db %01010001, %00000101, %01100000, %00010100, %01010110, %00000101, %01010101, %00010000
  607 D1:DEE5 56 01 41 60 
              54 51 04 58 	.db %01010110, %00000001, %01000001, %01100000, %01010100, %01010001, %00000100, %01011000
  608 D1:DEED 54 16 85 41 
              14 05 85 40 	.db %01010100, %00010110, %10000101, %01000001, %00010100, %00000101, %10000101, %01000000
  609 D1:DEF5 58 45 10 50 
              58 50 01 64 	.db %01011000, %01000101, %00010000, %01010000, %01011000, %01010000, %00000001, %01100100
  610 D1:DEFD 41 10 05 95 
              05 05 44 10 	.db %01000001, %00010000, %00000101, %10010101, %00000101, %00000101, %01000100, %00010000
  611 D1:DF05 14 55 51 50 
              65 51 01 61 	.db %00010100, %01010101, %01010001, %01010000, %01100101, %01010001, %00000001, %01100001
  612 D1:DF0D 54 15 00 11 
              10 16 04 05 	.db %01010100, %00010101, %00000000, %00010001, %00010000, %00010110, %00000100, %00000101
  613 D1:DF15 61 01 15 41 
              60 00 56 00 	.db %01100001, %00000001, %00010101, %01000001, %01100000, %00000000, %01010110, %00000000
  614 D1:DF1D -  -  -  -  
  615 D1:DF1D -  -  -  -  
  616 D1:DF1D -  -  -  -  Tree_0:
  617 D1:DF1D 10 -  -  -  	.db %00010000
  618 D1:DF1E 1A 10 -  -  	.db 26, 16
  619 D1:DF20 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  620 D1:DF28 FF FF FF FF 
              FF 3F FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  621 D1:DF30 CF FF FF F3 
              FF FF FC FF 	.db %11001111, %11111111, %11111111, %11110011, %11111111, %11111111, %11111100, %11111111
  622 D1:DF38 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  623 D1:DF40 FF FF FF FC 
              FF FF FF 3F 	.db %11111111, %11111111, %11111111, %11111100, %11111111, %11111111, %11111111, %00111111
  624 D1:DF48 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  625 D1:DF50 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  626 D1:DF54 -  -  -  -  
  627 D1:DF54 01 -  -  -  	.db %00000001
  628 D1:DF55 -  -  -  -  
  629 D1:DF55 00 9A 4A 80 
              26 02 90 1A 	.db %00000000, %10011010, %01001010, %10000000, %00100110, %00000010, %10010000, %00011010
  630 D1:DF5D 40 A4 05 9A 
              71 08 AB 73 	.db %01000000, %10100100, %00000101, %10011010, %01110001, %00001000, %10101011, %01110011
  631 D1:DF65 08 AB 74 09 
              5B 77 02 9A 	.db %00001000, %10101011, %01110100, %00001001, %01011011, %01110111, %00000010, %10011010
  632 D1:DF6D 75 00 B2 1D 
              00 BF 57 40 	.db %01110101, %00000000, %10110010, %00011101, %00000000, %10111111, %01010111, %01000000
  633 D1:DF75 2B 56 10 2B 
              5F 18 01 9F 	.db %00101011, %01010110, %00010000, %00101011, %01011111, %00011000, %00000001, %10011111
  634 D1:DF7D 0C 00 23 83 
              01 22 E2 40 	.db %00001100, %00000000, %00100011, %10000011, %00000001, %00100010, %11100010, %01000000
  635 D1:DF85 66 2A A0 -  	.db %01100110, %00101010, %10100000
  636 D1:DF88 -  -  -  -  
  637 D1:DF88 -  -  -  -  
  638 D1:DF88 -  -  -  -  Tree_8:
  639 D1:DF88 24 -  -  -  	.db %00100100
  640 D1:DF89 1A 10 -  -  	.db 26, 16
  641 D1:DF8B 10 23 -  -  	.db %00010000, %00100011
  642 D1:DF8D -  -  -  -  
  643 D1:DF8D 10 05 62 22 
              85 20 80 40 	.db %00010000, %00000101, %01100010, %00100010, %10000101, %00100000, %10000000, %01000000
  644 D1:DF95 56 82 A0 52 
              2A 06 01 52 	.db %01010110, %10000010, %10100000, %01010010, %00101010, %00000110, %00000001, %01010010
  645 D1:DF9D 28 25 E0 B8 
              60 21 18 8A 	.db %00101000, %00100101, %11100000, %10111000, %01100000, %00100001, %00011000, %10001010
  646 D1:DFA5 5E 22 08 12 
              15 8A A1 62 	.db %01011110, %00100010, %00001000, %00010010, %00010101, %10001010, %10100001, %01100010
  647 D1:DFAD 80 04 21 57 
              0A 85 43 00 	.db %10000000, %00000100, %00100001, %01010111, %00001010, %10000101, %01000011, %00000000
  648 D1:DFB5 00 11 78 A9 
              17 80 60 02 	.db %00000000, %00010001, %01111000, %10101001, %00010111, %10000000, %01100000, %00000010
  649 D1:DFBD 15 A0 89 7A 
              05 A0 08 57 	.db %00010101, %10100000, %10001001, %01111010, %00000101, %10100000, %00001000, %01010111
  650 D1:DFC5 A2 00 80 15 
              05 84 57 0A 	.db %10100010, %00000000, %10000000, %00010101, %00000101, %10000100, %01010111, %00001010
  651 D1:DFCD A6 00 19 5A 
              95 5C 82 55 	.db %10100110, %00000000, %00011001, %01011010, %10010101, %01011100, %10000010, %01010101
  652 D1:DFD5 01 57 08 85 
              7A A5 14 15 	.db %00000001, %01010111, %00001000, %10000101, %01111010, %10100101, %00010100, %00010101
  653 D1:DFDD A2 AA 16 A0 
              61 41 68 22 	.db %10100010, %10101010, %00010110, %10100000, %01100001, %01000001, %01101000, %00100010
  654 D1:DFE5 A1 56 96 08 
              16 06 22 21 	.db %10100001, %01010110, %10010110, %00001000, %00010110, %00000110, %00100010, %00100001
  655 D1:DFED 71 61 01 60 
              22 0A 56 1E 	.db %01110001, %01100001, %00000001, %01100000, %00100010, %00001010, %01010110, %00011110
  656 D1:DFF5 -  -  -  -  
  657 D1:DFF5 -  -  -  -  
  658 D1:DFF5 -  -  -  -  Tree_10:
  659 D1:DFF5 24 -  -  -  	.db %00100100
  660 D1:DFF6 1A 10 -  -  	.db 26, 16
  661 D1:DFF8 12 03 -  -  	.db %00010010, %00000011
  662 D1:DFFA -  -  -  -  
  663 D1:DFFA 19 2A 77 FD 
              DD FA D7 9E 	.db %00011001, %00101010, %01110111, %11111101, %11011101, %11111010, %11010111, %10011110
  664 D1:E002 25 FF F7 DC 
              AC 65 2B 7F 	.db %00100101, %11111111, %11110111, %11011100, %10101100, %01100101, %00101011, %01111111
  665 D1:E00A F7 5D D8 C2 
              94 BF 7F FC 	.db %11110111, %01011101, %11011000, %11000010, %10010100, %10111111, %01111111, %11111100
  666 D1:E012 5F 21 79 77 
              DF FF 2D D6 	.db %01011111, %00100001, %01111001, %01110111, %11011111, %11111111, %00101101, %11010110
  667 D1:E01A 31 A5 7D FF 
              DF DD 55 38 	.db %00110001, %10100101, %01111101, %11111111, %11011111, %11011101, %01010101, %00111000
  668 D1:E022 D7 C7 7D F5 
              73 54 AD 77 	.db %11010111, %11000111, %01111101, %11110101, %01110011, %01010100, %10101101, %01110111
  669 D1:E02A FF FF 75 5D 
              59 D7 73 F7 	.db %11111111, %11111111, %01110101, %01011101, %01011001, %11010111, %01110011, %11110111
  670 D1:E032 61 47 A6 B4 
              77 7F F6 1D 	.db %01100001, %01000111, %10100110, %10110100, %01110111, %01111111, %11110110, %00011101
  671 D1:E03A F9 60 05 D7 
              FF E8 7A 0A 	.db %11111001, %01100000, %00000101, %11010111, %11111111, %11101000, %01111010, %00001010
  672 D1:E042 35 2D 7F FD 
              A8 AA 95 18 	.db %00110101, %00101101, %01111111, %11111101, %10101000, %10101010, %10010101, %00011000
  673 D1:E04A 1F FF CE A8 
              A1 96 95 FD 	.db %00011111, %11111111, %11001110, %10101000, %10100001, %10010110, %10010101, %11111101
  674 D1:E052 FD F2 12 6D 
              6B 5F FF DF 	.db %11111101, %11110010, %00010010, %01101101, %01101011, %01011111, %11111111, %11011111
  675 D1:E05A E1 52 8E B7 
              F7 DD 5E B1 	.db %11100001, %01010010, %10001110, %10110111, %11110111, %11011101, %01011110, %10110001
  676 D1:E062 -  -  -  -  
  677 D1:E062 -  -  -  -  
  678 D1:E062 -  -  -  -  Tree_1:
  679 D1:E062 10 -  -  -  	.db %00010000
  680 D1:E063 1A 10 -  -  	.db 26, 16
  681 D1:E065 FF FF FF FF 
              FF FF F3 FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11110011, %11111111
  682 D1:E06D FF FC FF FF 
              FF 3F FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  683 D1:E075 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  684 D1:E07D FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  685 D1:E085 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  686 D1:E08D FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  687 D1:E095 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  688 D1:E099 -  -  -  -  
  689 D1:E099 01 -  -  -  	.db %00000001
  690 D1:E09A -  -  -  -  
  691 D1:E09A 01 00 48 80 
              69 35 30 4A 	.db %00000001, %00000000, %01001000, %10000000, %01101001, %00110101, %00110000, %01001010
  692 D1:E0A2 27 20 48 C6 
              61 D5 C6 60 	.db %00100111, %00100000, %01001000, %11000110, %01100001, %11010101, %11000110, %01100000
  693 D1:E0AA E7 73 AC 29 
              DC E9 0B 55 	.db %11100111, %01110011, %10101100, %00101001, %11011100, %11101001, %00001011, %01010101
  694 D1:E0B2 5A 44 FE 58 
              80 2B 92 28 	.db %01011010, %01000100, %11111110, %01011000, %10000000, %00101011, %10010010, %00101000
  695 D1:E0BA 0E C2 82 03 
              B0 74 C1 2D 	.db %00001110, %11000010, %10000010, %00000011, %10110000, %01110100, %11000001, %00101101
  696 D1:E0C2 5F 10 09 73 
              E4 0A 5C F2 	.db %01011111, %00010000, %00001001, %01110011, %11100100, %00001010, %01011100, %11110010
  697 D1:E0CA 04 92 3C 80 	.db %00000100, %10010010, %00111100, %10000000
  698 D1:E0CE -  -  -  -  
  699 D1:E0CE -  -  -  -  
  700 D1:E0CE -  -  -  -  Tree_5:
  701 D1:E0CE 24 -  -  -  	.db %00100100
  702 D1:E0CF 1A 10 -  -  	.db 26, 16
  703 D1:E0D1 10 20 -  -  	.db %00010000, %00100000
  704 D1:E0D3 -  -  -  -  
  705 D1:E0D3 11 10 15 00 
              05 40 01 15 	.db %00010001, %00010000, %00010101, %00000000, %00000101, %01000000, %00000001, %00010101
  706 D1:E0DB 05 50 04 56 
              00 15 44 41 	.db %00000101, %01010000, %00000100, %01010110, %00000000, %00010101, %01000100, %01000001
  707 D1:E0E3 60 05 60 61 
              04 55 16 04 	.db %01100000, %00000101, %01100000, %01100001, %00000100, %01010101, %00010110, %00000100
  708 D1:E0EB 50 06 11 41 
              60 60 05 81 	.db %01010000, %00000110, %00010001, %01000001, %01100000, %01100000, %00000101, %10000001
  709 D1:E0F3 45 44 56 08 
              00 50 10 54 	.db %01000101, %01000100, %01010110, %00001000, %00000000, %01010000, %00010000, %01010100
  710 D1:E0FB 45 60 00 16 
              05 80 44 44 	.db %01000101, %01100000, %00000000, %00010110, %00000101, %10000000, %01000100, %01000100
  711 D1:E103 10 15 80 58 
              15 44 41 04 	.db %00010000, %00010101, %10000000, %01011000, %00010101, %01000100, %01000001, %00000100
  712 D1:E10B 58 05 01 55 
              46 01 54 00 	.db %01011000, %00000101, %00000001, %01010101, %01000110, %00000001, %01010100, %00000000
  713 D1:E113 10 15 54 58 
              45 81 01 45 	.db %00010000, %00010101, %01010100, %01011000, %01000101, %10000001, %00000001, %01000101
  714 D1:E11B 45 45 05 60 
              00 04 50 44 	.db %01000101, %01000101, %00000101, %01100000, %00000000, %00000100, %01010000, %01000100
  715 D1:E123 19 5A 04 40 
              45 40 51 95 	.db %00011001, %01011010, %00000100, %01000000, %01000101, %01000000, %01010001, %10010101
  716 D1:E12B A0 16 10 45 
              11 01 58 04 	.db %10100000, %00010110, %00010000, %01000101, %00010001, %00000001, %01011000, %00000100
  717 D1:E133 68 14 51 10 
              14 00 15 80 	.db %01101000, %00010100, %01010001, %00010000, %00010100, %00000000, %00010101, %10000000
  718 D1:E13B -  -  -  -  
  719 D1:E13B -  -  -  -  
  720 D1:E13B -  -  -  -  Tree_11:
  721 D1:E13B 24 -  -  -  	.db %00100100
  722 D1:E13C 1A 10 -  -  	.db 26, 16
  723 D1:E13E 20 13 -  -  	.db %00100000, %00010011
  724 D1:E140 -  -  -  -  
  725 D1:E140 10 95 33 CF 
              30 C5 C3 42 	.db %00010000, %10010101, %00110011, %11001111, %00110000, %11000101, %11000011, %01000010
  726 D1:E148 43 F3 F3 FF 
              58 37 97 FC 	.db %01000011, %11110011, %11110011, %11111111, %01011000, %00110111, %10010111, %11111100
  727 D1:E150 F3 6F 35 B3 
              E5 7F FC C6 	.db %11110011, %01101111, %00110101, %10110011, %11100101, %01111111, %11111100, %11000110
  728 D1:E158 3F 6E 3F 55 
              FF F9 4C D5 	.db %00111111, %01101110, %00111111, %01010101, %11111111, %11111001, %01001100, %11010101
  729 D1:E160 30 B7 97 FE 
              50 CD 6F C9 	.db %00110000, %10110111, %10010111, %11111110, %01010000, %11001101, %01101111, %11001001
  730 D1:E168 48 F3 96 C3 
              58 C8 54 CF 	.db %01001000, %11110011, %10010110, %11000011, %01011000, %11001000, %01010100, %11001111
  731 D1:E170 C5 6C CE 3C 
              15 CC F1 5B 	.db %11000101, %01101100, %11001110, %00111100, %00010101, %11001100, %11110001, %01011011
  732 D1:E178 FC C3 05 50 
              CC 56 CE FC 	.db %11111100, %11000011, %00000101, %01010000, %11001100, %01010110, %11001110, %11111100
  733 D1:E180 DB 59 43 DA 
              FF E8 CE 5C 	.db %11011011, %01011001, %01000011, %11011010, %11111111, %11101000, %11001110, %01011100
  734 D1:E188 94 31 FF FF 
              94 F5 C1 43 	.db %10010100, %00110001, %11111111, %11111111, %10010100, %11110101, %11000001, %01000011
  735 D1:E190 3F FF F9 73 
              11 25 33 CF 	.db %00111111, %11111111, %11111001, %01110011, %00010001, %00100101, %00110011, %11001111
  736 D1:E198 FC A5 3C 10 
              50 FF CC CE 	.db %11111100, %10100101, %00111100, %00010000, %01010000, %11111111, %11001100, %11001110
  737 D1:E1A0 5C C9 69 7F 
              33 F0 CD 4F 	.db %01011100, %11001001, %01101001, %01111111, %00110011, %11110000, %11001101, %01001111
  738 D1:E1A8 -  -  -  -  
  739 D1:E1A8 -  -  -  -  
  740 D1:E1A8 -  -  -  -  Branches_1:
  741 D1:E1A8 20 -  -  -  	.db %00100000
  742 D1:E1A9 12 0E -  -  	.db 18, 14
  743 D1:E1AB 3F 00 3F FC 
              0F FF F3 FF 	.db %00111111, %00000000, %00111111, %11111100, %00001111, %11111111, %11110011, %11111111
  744 D1:E1B3 FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  745 D1:E1BB FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  746 D1:E1C3 F3 FF FC FF 
              FC 3C FC 00 	.db %11110011, %11111111, %11111100, %11111111, %11111100, %00111100, %11111100, %00000000
  747 D1:E1CB -  -  -  -  
  748 D1:E1CB 01 23 -  -  	.db %00000001, %00100011
  749 D1:E1CD -  -  -  -  
  750 D1:E1CD 00 00 05 00 
              05 55 55 00 	.db %00000000, %00000000, %00000101, %00000000, %00000101, %01010101, %01010101, %00000000
  751 D1:E1D5 00 50 15 44 
              05 45 52 94 	.db %00000000, %01010000, %00010101, %01000100, %00000101, %01000101, %01010010, %10010100
  752 D1:E1DD 40 4A AA 95 
              84 0A AE AB 	.db %01000000, %01001010, %10101010, %10010101, %10000100, %00001010, %10101110, %10101011
  753 D1:E1E5 F5 50 FF FF 
              EA A0 02 AA 	.db %11110101, %01010000, %11111111, %11111111, %11101010, %10100000, %00000010, %10101010
  754 D1:E1ED A6 54 00 A1 
              15 40 14 00 	.db %10100110, %01010100, %00000000, %10100001, %00010101, %01000000, %00010100, %00000000
  755 D1:E1F5 05 45 44 01 
              45 50 00 00 	.db %00000101, %01000101, %01000100, %00000001, %01000101, %01010000, %00000000, %00000000
  756 D1:E1FD 00 00 00 00 
              00 00 -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  757 D1:E203 -  -  -  -  
  758 D1:E203 -  -  -  -  
  759 D1:E203 -  -  -  -  Vine2:
  760 D1:E203 10 -  -  -  	.db %00010000
  761 D1:E204 0B 10 -  -  	.db 11, 16
  762 D1:E206 00 60 1C 07 
              89 C3 F8 2E 	.db %00000000, %01100000, %00011100, %00000111, %10001001, %11000011, %11111000, %00101110
  763 D1:E20E 01 C0 7E CE 
              DF 80 70 0E 	.db %00000001, %11000000, %01111110, %11001110, %11011111, %10000000, %01110000, %00001110
  764 D1:E216 81 F8 3B 3F 
              06 E0 -  -  	.db %10000001, %11111000, %00111011, %00111111, %00000110, %11100000
  765 D1:E21C -  -  -  -  
  766 D1:E21C 45 -  -  -  	.db %01000101
  767 D1:E21D -  -  -  -  
  768 D1:E21D 01 88 33 27 
              8F 01 B9 EF 	.db %00000001, %10001000, %00110011, %00100111, %10001111, %00000001, %10111001, %11101111
  769 D1:E225 04 60 -  -  	.db %00000100, %01100000
  770 D1:E227 -  -  -  -  
  771 D1:E227 -  -  -  -  
  772 D1:E227 -  -  -  -  VineVertical:
  773 D1:E227 10 -  -  -  	.db %00010000
  774 D1:E228 0A 12 -  -  	.db 10, 18
  775 D1:E22A 0E 03 80 E0 
              3B 0F DB F7 	.db %00001110, %00000011, %10000000, %11100000, %00111011, %00001111, %11011011, %11110111
  776 D1:E232 E9 F0 1C 07 
              0F D3 7E 1D 	.db %11101001, %11110000, %00011100, %00000111, %00001111, %11010011, %01111110, %00011101
  777 D1:E23A 07 05 C3 F0 
              5C 07 00 -  	.db %00000111, %00000101, %11000011, %11110000, %01011100, %00000111, %00000000
  778 D1:E241 -  -  -  -  
  779 D1:E241 45 -  -  -  	.db %01000101
  780 D1:E242 -  -  -  -  
  781 D1:E242 2D 9D F0 F0 
              E3 2C 18 F9 	.db %00101101, %10011101, %11110000, %11110000, %11100011, %00101100, %00011000, %11111001
  782 D1:E24A B1 0C C8 -  	.db %10110001, %00001100, %11001000
  783 D1:E24D -  -  -  -  
  784 D1:E24D -  -  -  -  
  785 D1:E24D -  -  -  -  Vine4:
  786 D1:E24D 10 -  -  -  	.db %00010000
  787 D1:E24E 13 12 -  -  	.db 19, 18
  788 D1:E250 00 18 E0 03 
              FC 00 0F 80 	.db %00000000, %00011000, %11100000, %00000011, %11111100, %00000000, %00001111, %10000000
  789 D1:E258 03 C0 20 F0 
              06 3F 80 FF 	.db %00000011, %11000000, %00100000, %11110000, %00000110, %00111111, %10000000, %11111111
  790 D1:E260 70 07 C0 01 
              F0 00 7C 00 	.db %01110000, %00000111, %11000000, %00000001, %11110000, %00000000, %01111100, %00000000
  791 D1:E268 6F 80 0F 98 
              00 E7 00 1C 	.db %01101111, %10000000, %00001111, %10011000, %00000000, %11100111, %00000000, %00011100
  792 D1:E270 60 07 80 01 
              E0 00 78 00 	.db %01100000, %00000111, %10000000, %00000001, %11100000, %00000000, %01111000, %00000000
  793 D1:E278 1E 00 00 -  	.db %00011110, %00000000, %00000000
  794 D1:E27B -  -  -  -  
  795 D1:E27B 45 -  -  -  	.db %01000101
  796 D1:E27C -  -  -  -  
  797 D1:E27C 08 3A D4 61 
              F0 3E 52 94 	.db %00001000, %00111010, %11010100, %01100001, %11110000, %00111110, %01010010, %10010100
  798 D1:E284 78 F3 DE E6 
              66 -  -  -  	.db %01111000, %11110011, %11011110, %11100110, %01100110
  799 D1:E289 -  -  -  -  
  800 D1:E289 -  -  -  -  
  801 D1:E289 -  -  -  -  Vine5:
  802 D1:E289 10 -  -  -  	.db %00010000
  803 D1:E28A 13 10 -  -  	.db 19, 16
  804 D1:E28C 00 00 40 00 
              0C 00 C3 80 	.db %00000000, %00000000, %01000000, %00000000, %00001100, %00000000, %11000011, %10000000
  805 D1:E294 1D F0 00 FC 
              00 3F 0C 1F 	.db %00011101, %11110000, %00000000, %11111100, %00000000, %00111111, %00001100, %00011111
  806 D1:E29C C1 CF F0 1B 
              FF 01 FC 73 	.db %11000001, %11001111, %11110000, %00011011, %11111111, %00000001, %11111100, %01110011
  807 D1:E2A4 FE 0C 7F E0 
              0F E6 00 80 	.db %11111110, %00001100, %01111111, %11100000, %00001111, %11100110, %00000000, %10000000
  808 D1:E2AC C0 30 00 06 
              00 00 -  -  	.db %11000000, %00110000, %00000000, %00000110, %00000000, %00000000
  809 D1:E2B2 -  -  -  -  
  810 D1:E2B2 54 -  -  -  	.db %01010100
  811 D1:E2B3 -  -  -  -  
  812 D1:E2B3 1C F8 E3 8F 
              47 E0 F0 0E 	.db %00011100, %11111000, %11100011, %10001111, %01000111, %11100000, %11110000, %00001110
  813 D1:E2BB 83 E8 6A 00 
              00 00 -  -  	.db %10000011, %11101000, %01101010, %00000000, %00000000, %00000000
  814 D1:E2C1 -  -  -  -  
  815 D1:E2C1 -  -  -  -  
  816 D1:E2C1 -  -  -  -  Vine6:
  817 D1:E2C1 10 -  -  -  	.db %00010000
  818 D1:E2C2 15 0A -  -  	.db 21, 10
  819 D1:E2C4 30 08 01 80 
              E0 08 06 01 	.db %00110000, %00001000, %00000001, %10000000, %11100000, %00001000, %00000110, %00000001
  820 D1:E2CC C1 E1 FF FF 
              FF FF FF FF 	.db %11000001, %11100001, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  821 D1:E2D4 FF FF C4 08 
              06 60 E0 62 	.db %11111111, %11111111, %11000100, %00001000, %00000110, %01100000, %11100000, %01100010
  822 D1:E2DC 03 03 00 -  	.db %00000011, %00000011, %00000000
  823 D1:E2DF -  -  -  -  
  824 D1:E2DF 45 -  -  -  	.db %01000101
  825 D1:E2E0 -  -  -  -  
  826 D1:E2E0 00 00 00 00 
              00 0E 5B AB 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001110, %01011011, %10101011
  827 D1:E2E8 FF FF FF FF 
              F8 -  -  -  	.db %11111111, %11111111, %11111111, %11111111, %11111000
  828 D1:E2ED -  -  -  -  
  829 D1:E2ED -  -  -  -  
  830 D1:E2ED -  -  -  -  Vine7:
  831 D1:E2ED 10 -  -  -  	.db %00010000
  832 D1:E2EE 0F 0A -  -  	.db 15, 10
  833 D1:E2F0 06 01 9C 03 
              B0 1F C0 F7 	.db %00000110, %00000001, %10011100, %00000011, %10110000, %00011111, %11000000, %11110111
  834 D1:E2F8 E3 E7 FF 8F 
              FE 39 F4 60 	.db %11100011, %11100111, %11111111, %10001111, %11111110, %00111001, %11110100, %01100000
  835 D1:E300 0E 00 1C -  	.db %00001110, %00000000, %00011100
  836 D1:E303 -  -  -  -  
  837 D1:E303 45 -  -  -  	.db %01000101
  838 D1:E304 -  -  -  -  
  839 D1:E304 01 83 03 E0 
              FC 1F FF FF 	.db %00000001, %10000011, %00000011, %11100000, %11111100, %00011111, %11111111, %11111111
  840 D1:E30C FF C0 -  -  	.db %11111111, %11000000
  841 D1:E30E -  -  -  -  
  842 D1:E30E -  -  -  -  
  843 D1:E30E -  -  -  -  Branches_0:
  844 D1:E30E 20 -  -  -  	.db %00100000
  845 D1:E30F 12 0E -  -  	.db 18, 14
  846 D1:E311 CC 00 3F CF 
              0F FF F3 FF 	.db %11001100, %00000000, %00111111, %11001111, %00001111, %11111111, %11110011, %11111111
  847 D1:E319 FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  848 D1:E321 FF FF FF FF 
              3F FF CF FF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11001111, %11111111
  849 D1:E329 F3 FF F0 FF 
              FC 3F 30 00 	.db %11110011, %11111111, %11110000, %11111111, %11111100, %00111111, %00110000, %00000000
  850 D1:E331 -  -  -  -  
  851 D1:E331 01 23 -  -  	.db %00000001, %00100011
  852 D1:E333 -  -  -  -  
  853 D1:E333 00 00 00 00 
              15 40 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00010101, %01000000, %00000000, %00000000
  854 D1:E33B 40 51 45 40 
              04 00 00 10 	.db %01000000, %01010001, %01000101, %01000000, %00000100, %00000000, %00000000, %00010000
  855 D1:E343 05 45 5A 01 
              10 BA AA F5 	.db %00000101, %01000101, %01011010, %00000001, %00010000, %10111010, %10101010, %11110101
  856 D1:E34B 41 0F FF FA 
              95 10 AA AA 	.db %01000001, %00001111, %11111111, %11111010, %10010101, %00010000, %10101010, %10101010
  857 D1:E353 55 04 55 51 
              44 00 00 05 	.db %01010101, %00000100, %01010101, %01010001, %01000100, %00000000, %00000000, %00000101
  858 D1:E35B 40 40 00 50 
              14 05 40 00 	.db %01000000, %01000000, %00000000, %01010000, %00010100, %00000101, %01000000, %00000000
  859 D1:E363 00 00 00 -  	.db %00000000, %00000000, %00000000
  860 D1:E366 -  -  -  -  
  861 D1:E366 -  -  -  -  
  862 D1:E366 -  -  -  -  Clouds_2:
  863 D1:E366 14 -  -  -  	.db %00010100
  864 D1:E367 10 10 -  -  	.db 16, 16
  865 D1:E369 67 -  -  -  	.db %01100111
  866 D1:E36A -  -  -  -  
  867 D1:E36A 00 00 00 00 
              00 08 40 0E 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001000, %01000000, %00001110
  868 D1:E372 B0 C3 1F 80 
              00 00 00 00 	.db %10110000, %11000011, %00011111, %10000000, %00000000, %00000000, %00000000, %00000000
  869 D1:E37A 60 02 80 01 
              01 F0 20 1E 	.db %01100000, %00000010, %10000000, %00000001, %00000001, %11110000, %00100000, %00011110
  870 D1:E382 30 00 1F 08 
              01 F8 00 00 	.db %00110000, %00000000, %00011111, %00001000, %00000001, %11111000, %00000000, %00000000
  871 D1:E38A -  -  -  -  
  872 D1:E38A -  -  -  -  
  873 D1:E38A -  -  -  -  Frog_0:
  874 D1:E38A 40 -  -  -  	.db %01000000
  875 D1:E38B 19 13 -  -  	.db 25, 19
  876 D1:E38D 00 0F FE 00 
              1F FF 80 3F 	.db %00000000, %00001111, %11111110, %00000000, %00011111, %11111111, %10000000, %00111111
  877 D1:E395 FF E0 3F FF 
              F0 3F FF F8 	.db %11111111, %11100000, %00111111, %11111111, %11110000, %00111111, %11111111, %11111000
  878 D1:E39D 7F FF FC 7F 
              FF FE FF FF 	.db %01111111, %11111111, %11111100, %01111111, %11111111, %11111110, %11111111, %11111111
  879 D1:E3A5 FF 7F FF FF 
              FF FF FF BF 	.db %11111111, %01111111, %11111111, %11111111, %11111111, %11111111, %11111111, %10111111
  880 D1:E3AD FF FF DF FF 
              FF 8F FF FF 	.db %11111111, %11111111, %11011111, %11111111, %11111111, %10001111, %11111111, %11111111
  881 D1:E3B5 87 FF FF C3 
              FF FF F1 FF 	.db %10000111, %11111111, %11111111, %11000011, %11111111, %11111111, %11110001, %11111111
  882 D1:E3BD FF FC FF FF 
              FE 7F FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111110, %01111111, %11111111, %11111111
  883 D1:E3C5 1F FF FF 80 	.db %00011111, %11111111, %11111111, %10000000
  884 D1:E3C9 -  -  -  -  
  885 D1:E3C9 95 46 80 00 	.db %10010101, %01000110, %10000000, %00000000
  886 D1:E3CD -  -  -  -  
  887 D1:E3CD 00 00 00 00 
              00 09 24 92 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001001, %00100100, %10010010
  888 D1:E3D5 48 00 02 4A 
              49 24 89 00 	.db %01001000, %00000000, %00000010, %01001010, %01001001, %00100100, %10001001, %00000000
  889 D1:E3DD 02 4A 49 26 
              4A 44 80 09 	.db %00000010, %01001010, %01001001, %00100110, %01001010, %01000100, %10000000, %00001001
  890 D1:E3E5 49 14 93 25 
              24 40 00 94 	.db %01001001, %00010100, %10010011, %00100101, %00100100, %01000000, %00000000, %10010100
  891 D1:E3ED 91 45 26 DA 
              48 80 09 29 	.db %10010001, %01000101, %00100110, %11011010, %01001000, %10000000, %00001001, %00101001
  892 D1:E3F5 14 92 49 24 
              89 20 00 4A 	.db %00010100, %10010010, %01001001, %00100100, %10001001, %00100000, %00000000, %01001010
  893 D1:E3FD 48 A4 92 48 
              92 64 20 12 	.db %01001000, %10100100, %10010010, %01001000, %10010010, %01100100, %00100000, %00010010
  894 D1:E405 52 29 24 92 
              92 49 21 00 	.db %01010010, %00101001, %00100100, %10010010, %10010010, %01001001, %00100001, %00000000
  895 D1:E40D 02 52 49 24 
              A4 92 49 21 	.db %00000010, %01010010, %01001001, %00100100, %10100100, %10010010, %01001001, %00100001
  896 D1:E415 20 12 92 48 
              C9 24 92 13 	.db %00100000, %00010010, %10010010, %01001000, %11001001, %00100100, %10010010, %00010011
  897 D1:E41D 08 00 12 92 
              49 19 24 90 	.db %00001000, %00000000, %00010010, %10010010, %01001001, %00011001, %00100100, %10010000
  898 D1:E425 A4 40 04 A4 
              92 46 49 21 	.db %10100100, %01000000, %00000100, %10100100, %10010010, %01000110, %01001001, %00100001
  899 D1:E42D 49 10 0A 29 
              24 8C 92 14 	.db %01001001, %00010000, %00001010, %00101001, %00100100, %10001100, %10010010, %00010100
  900 D1:E435 92 20 12 8A 
              44 99 21 49 	.db %10010010, %00100000, %00010010, %10001010, %01000100, %10011001, %00100001, %01001001
  901 D1:E43D 22 40 04 94 
              92 48 C2 52 	.db %00100010, %01000000, %00000100, %10010100, %10010010, %01001000, %11000010, %01010010
  902 D1:E445 25 22 00 25 
              14 92 48 82 	.db %00100101, %00100010, %00000000, %00100101, %00010100, %10010010, %01001000, %10000010
  903 D1:E44D 52 49 22 00 
              24 92 49 20 	.db %01010010, %01001001, %00100010, %00000000, %00100100, %10010010, %01001001, %00100000
  904 D1:E455 02 49 24 90 
              00 00 00 00 	.db %00000010, %01001001, %00100100, %10010000, %00000000, %00000000, %00000000, %00000000
  905 D1:E45D 00 00 00 00 
              00 -  -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000
  906 D1:E462 -  -  -  -  
  907 D1:E462 -  -  -  -  
  908 D1:E462 -  -  -  -  GroundDirtDark:
  909 D1:E462 24 -  -  -  	.db %00100100
  910 D1:E463 10 0C -  -  	.db 16, 12
  911 D1:E465 01 50 -  -  	.db %00000001, %01010000
  912 D1:E467 -  -  -  -  
  913 D1:E467 00 00 00 00 
              00 00 00 04 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000100
  914 D1:E46F 58 08 00 01 
              08 08 25 40 	.db %01011000, %00001000, %00000000, %00000001, %00001000, %00001000, %00100101, %01000000
  915 D1:E477 00 00 20 54 
              01 50 00 08 	.db %00000000, %00000000, %00100000, %01010100, %00000001, %01010000, %00000000, %00001000
  916 D1:E47F 00 14 00 08 
              20 00 00 00 	.db %00000000, %00010100, %00000000, %00001000, %00100000, %00000000, %00000000, %00000000
  917 D1:E487 20 00 50 00 
              52 12 05 05 	.db %00100000, %00000000, %01010000, %00000000, %01010010, %00010010, %00000101, %00000101
  918 D1:E48F 02 44 80 40 
              00 00 00 00 	.db %00000010, %01000100, %10000000, %01000000, %00000000, %00000000, %00000000, %00000000
  919 D1:E497 -  -  -  -  
  920 D1:E497 -  -  -  -  
  921 D1:E497 -  -  -  -  GroundHumpDark:
  922 D1:E497 20 -  -  -  	.db %00100000
  923 D1:E498 10 0D -  -  	.db 16, 13
  924 D1:E49A 03 F0 0F FC 
              3F FC FF FF 	.db %00000011, %11110000, %00001111, %11111100, %00111111, %11111100, %11111111, %11111111
  925 D1:E4A2 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  926 D1:E4AA FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  927 D1:E4B2 FF FF -  -  	.db %11111111, %11111111
  928 D1:E4B4 -  -  -  -  
  929 D1:E4B4 10 50 -  -  	.db %00010000, %01010000
  930 D1:E4B6 -  -  -  -  
  931 D1:E4B6 00 00 55 40 
              01 55 54 05 	.db %00000000, %00000000, %01010101, %01000000, %00000001, %01010101, %01010100, %00000101
  932 D1:E4BE 55 56 50 95 
              59 56 55 95 	.db %01010101, %01010110, %01010000, %10010101, %01011001, %01010110, %01010101, %10010101
  933 D1:E4C6 59 05 59 51 
              59 50 09 44 	.db %01011001, %00000101, %01011001, %01010001, %01011001, %01010000, %00001001, %01000100
  934 D1:E4CE 05 55 55 56 
              55 56 55 56 	.db %00000101, %01010101, %01010101, %01010110, %01010101, %01010110, %01010101, %01010110
  935 D1:E4D6 95 49 55 45 
              94 18 15 11 	.db %10010101, %01001001, %01010101, %01000101, %10010100, %00011000, %00010101, %00010001
  936 D1:E4DE 56 55 54 55 
              59 55 55 -  	.db %01010110, %01010101, %01010100, %01010101, %01011001, %01010101, %01010101
  937 D1:E4E5 -  -  -  -  
  938 D1:E4E5 -  -  -  -  
  939 D1:E4E5 -  -  -  -  Tree_16:
  940 D1:E4E5 08 -  -  -  	.db %00001000
  941 D1:E4E6 0A 10 -  -  	.db 10, 16
  942 D1:E4E8 3C 0F 03 C0 
              F0 3C 0F 0F 	.db %00111100, %00001111, %00000011, %11000000, %11110000, %00111100, %00001111, %00001111
  943 D1:E4F0 C0 F0 3C 0F 
              03 FC FC 3C 	.db %11000000, %11110000, %00111100, %00001111, %00000011, %11111100, %11111100, %00111100
  944 D1:E4F8 0F 03 C0 F0 	.db %00001111, %00000011, %11000000, %11110000
  945 D1:E4FC -  -  -  -  
  946 D1:E4FC 00 -  -  -  	.db %00000000
  947 D1:E4FD -  -  -  -  
  948 D1:E4FD -  -  -  -  
  949 D1:E4FD -  -  -  -  
  950 D1:E4FD -  -  -  -  Tree_17:
  951 D1:E4FD 08 -  -  -  	.db %00001000
  952 D1:E4FE 07 0E -  -  	.db 7, 14
  953 D1:E500 0C 18 77 E1 
              C3 0F 9E 70 	.db %00001100, %00011000, %01110111, %11100001, %11000011, %00001111, %10011110, %01110000
  954 D1:E508 E3 C7 0C 18 
              00 -  -  -  	.db %11100011, %11000111, %00001100, %00011000, %00000000
  955 D1:E50D -  -  -  -  
  956 D1:E50D 00 -  -  -  	.db %00000000
  957 D1:E50E -  -  -  -  
  958 D1:E50E -  -  -  -  
  959 D1:E50E -  -  -  -  
  960 D1:E50E -  -  -  -  Tree_18:
  961 D1:E50E 08 -  -  -  	.db %00001000
  962 D1:E50F 07 0E -  -  	.db 7, 14
  963 D1:E511 18 30 C7 83 
              06 0C 1C 1E 	.db %00011000, %00110000, %11000111, %10000011, %00000110, %00001100, %00011100, %00011110
  964 D1:E519 30 60 C1 83 
              00 -  -  -  	.db %00110000, %01100000, %11000001, %10000011, %00000000
  965 D1:E51E -  -  -  -  
  966 D1:E51E 00 -  -  -  	.db %00000000
  967 D1:E51F -  -  -  -  
  968 D1:E51F -  -  -  -  
  969 D1:E51F -  -  -  -  
  970 D1:E51F -  -  -  -  Clouds_0:
  971 D1:E51F 10 -  -  -  	.db %00010000
  972 D1:E520 10 0A -  -  	.db 16, 10
  973 D1:E522 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  974 D1:E52A FF FF FF FF 
              FF FF 3F FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111
  975 D1:E532 0F CC 03 00 	.db %00001111, %11001100, %00000011, %00000000
  976 D1:E536 -  -  -  -  
  977 D1:E536 67 -  -  -  	.db %01100111
  978 D1:E537 -  -  -  -  
  979 D1:E537 00 40 31 84 
              13 1C 0E 20 	.db %00000000, %01000000, %00110001, %10000100, %00010011, %00011100, %00001110, %00100000
  980 D1:E53F 00 00 E0 00 
              F0 77 F3 FF 	.db %00000000, %00000000, %11100000, %00000000, %11110000, %01110111, %11110011, %11111111
  981 D1:E547 FF -  -  -  	.db %11111111
  982 D1:E548 -  -  -  -  
  983 D1:E548 -  -  -  -  
  984 D1:E548 -  -  -  -  Clouds_1:
  985 D1:E548 10 -  -  -  	.db %00010000
  986 D1:E549 0C 0E -  -  	.db 12, 14
  987 D1:E54B 03 F0 FF 3F 
              F3 FF FF FF 	.db %00000011, %11110000, %11111111, %00111111, %11110011, %11111111, %11111111, %11111111
  988 D1:E553 FF 3F F0 FF 
              0F F0 FF 0F 	.db %11111111, %00111111, %11110000, %11111111, %00001111, %11110000, %11111111, %00001111
  989 D1:E55B F0 3F 00 F0 
              03 -  -  -  	.db %11110000, %00111111, %00000000, %11110000, %00000011
  990 D1:E560 -  -  -  -  
  991 D1:E560 76 -  -  -  	.db %01110110
  992 D1:E561 -  -  -  -  
  993 D1:E561 3C 7C 3B 3E 
              47 F0 37 C5 	.db %00111100, %01111100, %00111011, %00111110, %01000111, %11110000, %00110111, %11000101
  994 D1:E569 F6 73 B1 F0 
              70 40 -  -  	.db %11110110, %01110011, %10110001, %11110000, %01110000, %01000000
  995 D1:E56F -  -  -  -  
  996 D1:E56F -  -  -  -  
  997 D1:E56F -  -  -  -  Clouds_3:
  998 D1:E56F 10 -  -  -  	.db %00010000
  999 D1:E570 10 0B -  -  	.db 16, 11
 1000 D1:E572 03 00 0F C0 
              3F C0 FF F3 	.db %00000011, %00000000, %00001111, %11000000, %00111111, %11000000, %11111111, %11110011
 1001 D1:E57A FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1002 D1:E582 FF FF FF FF 
              FF FF -  -  	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1003 D1:E588 -  -  -  -  
 1004 D1:E588 76 -  -  -  	.db %01110110
 1005 D1:E589 -  -  -  -  
 1006 D1:E589 00 0C 07 80 
              FF 03 FF C6 	.db %00000000, %00001100, %00000111, %10000000, %11111111, %00000011, %11111111, %11000110
 1007 D1:E591 7F FF 3C FB 
              83 E7 FF FF 	.db %01111111, %11111111, %00111100, %11111011, %10000011, %11100111, %11111111, %11111111
 1008 D1:E599 FF FC -  -  	.db %11111111, %11111100
 1009 D1:E59B -  -  -  -  
 1010 D1:E59B -  -  -  -  
 1011 D1:E59B -  -  -  -  Clouds_4:
 1012 D1:E59B 10 -  -  -  	.db %00010000
 1013 D1:E59C 08 0A -  -  	.db 8, 10
 1014 D1:E59E 03 0F 3F 3F 
              FF FF FF FF 	.db %00000011, %00001111, %00111111, %00111111, %11111111, %11111111, %11111111, %11111111
 1015 D1:E5A6 FF FF -  -  	.db %11111111, %11111111
 1016 D1:E5A8 -  -  -  -  
 1017 D1:E5A8 76 -  -  -  	.db %01110110
 1018 D1:E5A9 -  -  -  -  
 1019 D1:E5A9 00 11 C3 C7 
              C5 CE 4F CF 	.db %00000000, %00010001, %11000011, %11000111, %11000101, %11001110, %01001111, %11001111
 1020 D1:E5B1 C0 -  -  -  	.db %11000000
 1021 D1:E5B2 -  -  -  -  
 1022 D1:E5B2 -  -  -  -  
Listing for file "ascent.asm"
  573 D1:E5B2 -  -  -  -  #include "generated/SpriteEquates.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\SpriteEquates.txt"
    1 D1:E5B2 -  -  -  -  Branches_5_Fast .equ 13894080 ; vRam + 0 - 160
    2 D1:E5B2 -  -  -  -  Branches_3_Fast .equ 13894240 ; vRam + 160 - 327
    3 D1:E5B2 -  -  -  -  Branches_2_Fast .equ 13894408 ; vRam + 328 - 497
    4 D1:E5B2 -  -  -  -  Tree_11_Fast .equ 13894578 ; vRam + 498 - 755
    5 D1:E5B2 -  -  -  -  Tree_5_Fast_F .equ 13894836 ; vRam + 756 - 1013
    6 D1:E5B2 -  -  -  -  Tree_2_Fast_F .equ 13895094 ; vRam + 1014 - 1265
    7 D1:E5B2 -  -  -  -  Tree_11_Fast_F .equ 13895346 ; vRam + 1266 - 1523
    8 D1:E5B2 -  -  -  -  Branches_1_Fast .equ 13895604 ; vRam + 1524 - 1676
    9 D1:E5B2 -  -  -  -  Vine2_Slow .equ 13895757 ; vRam + 1677 - 1836
   10 D1:E5B2 -  -  -  -  VineVertical_Slow_O .equ 13895917 ; vRam + 1837 - 2008
   11 D1:E5B2 -  -  -  -  VineVertical_Slow .equ 13896089 ; vRam + 2009 - 2182
   12 D1:E5B2 -  -  -  -  Vine4_Slow_F .equ 13896263 ; vRam + 2183 - 2374
   13 D1:E5B2 -  -  -  -  Vine4_Slow_O_F .equ 13896455 ; vRam + 2375 - 2567
   14 D1:E5B2 -  -  -  -  Vine5_Slow_O_F .equ 13896647 ; vRam + 2567 - 2758
   15 D1:E5B2 -  -  -  -  Vine6_Slow_O .equ 13896839 ; vRam + 2759 - 2925
   16 D1:E5B2 -  -  -  -  Vine7_Slow .equ 13897005 ; vRam + 2925 - 3058
   17 D1:E5B2 -  -  -  -  Vine5_Slow .equ 13897139 ; vRam + 3059 - 3248
   18 D1:E5B2 -  -  -  -  Vine6_Slow .equ 13897329 ; vRam + 3249 - 3413
   19 D1:E5B2 -  -  -  -  Vine4_Slow .equ 13897493 ; vRam + 3413 - 3605
   20 D1:E5B2 -  -  -  -  Vine7_Slow_O .equ 13897685 ; vRam + 3605 - 3733
   21 D1:E5B2 -  -  -  -  Vine5_Slow_O .equ 13897813 ; vRam + 3733 - 3922
   22 D1:E5B2 -  -  -  -  Vine4_Slow_O .equ 13898003 ; vRam + 3923 - 4113
   23 D1:E5B2 -  -  -  -  Branches_1_Fast_F .equ 13898194 ; vRam + 4114 - 4266
   24 D1:E5B2 -  -  -  -  Branches_2_Fast_F .equ 13898346 ; vRam + 4266 - 4435
   25 D1:E5B2 -  -  -  -  Branches_5_Fast_F .equ 13898516 ; vRam + 4436 - 4596
   26 D1:E5B2 -  -  -  -  Clouds_2_Fast .equ 13898676 ; vRam + 4596 - 4773
   27 D1:E5B2 -  -  -  -  Frog_0_Slow .equ 13898853 ; vRam + 4773 - 5076
   28 D1:E5B2 -  -  -  -  GroundDirtDark_Fast .equ 13899156 ; vRam + 5076 - 5209
   29 D1:E5B2 -  -  -  -  GroundDirtDark_Fast_F .equ 13899290 ; vRam + 5210 - 5343
   30 D1:E5B2 -  -  -  -  GroundHumpDark_Fast .equ 13899424 ; vRam + 5344 - 5478
   31 D1:E5B2 -  -  -  -  GroundHumpDark_Fast_F .equ 13899558 ; vRam + 5478 - 5612
   32 D1:E5B2 -  -  -  -  Tree_16_Fast .equ 13899692 ; vRam + 5612 - 5697
   33 D1:E5B2 -  -  -  -  Tree_17_Slow .equ 13899777 ; vRam + 5697 - 5798
   34 D1:E5B2 -  -  -  -  Tree_17_Slow_O_F .equ 13899879 ; vRam + 5799 - 5900
   35 D1:E5B2 -  -  -  -  Tree_18_Slow .equ 13899981 ; vRam + 5901 - 6001
   36 D1:E5B2 -  -  -  -  Tree_18_Slow_O_F .equ 13900081 ; vRam + 6001 - 6101
   37 D1:E5B2 -  -  -  -  Tree_16_Fast_F .equ 13900182 ; vRam + 6102 - 6187
   38 D1:E5B2 -  -  -  -  Clouds_0_Fast .equ 13900268 ; vRam + 6188 - 6289
   39 D1:E5B2 -  -  -  -  Clouds_1_Fast .equ 13900370 ; vRam + 6290 - 6389
   40 D1:E5B2 -  -  -  -  Clouds_3_Fast .equ 13900470 ; vRam + 6390 - 6497
   41 D1:E5B2 -  -  -  -  Clouds_4_Fast .equ 13900578 ; vRam + 6498 - 6562
   42 D1:E5B2 -  -  -  -  Clouds_0_Fast_F .equ 13900642 ; vRam + 6562 - 6663
   43 D1:E5B2 -  -  -  -  Clouds_1_Fast_F .equ 13900744 ; vRam + 6664 - 6763
   44 D1:E5B2 -  -  -  -  Clouds_4_Fast_F .equ 13900844 ; vRam + 6764 - 6828
   45 D1:E5B2 -  -  -  -  Clouds_3_Fast_F .equ 13900908 ; vRam + 6828 - 6935
   46 D1:E5B2 -  -  -  -  Clouds_2_Fast_F .equ 13901016 ; vRam + 6936 - 7113
   47 D1:E5B2 -  -  -  -  Frog_0_Slow_O .equ 13901193 ; vRam + 7113 - 7416
   48 D1:E5B2 -  -  -  -  BigGrassBase_Fast .equ 13901496 ; vRam + 7416 - 7776
   49 D1:E5B2 -  -  -  -  BigGrassTop_Fast .equ 13901856 ; vRam + 7776 - 8021
   50 D1:E5B2 -  -  -  -  BigGrassBase_Slow_O .equ 13902101 ; vRam + 8021 - 8459
   51 D1:E5B2 -  -  -  -  BigGrassBase_Fast_F .equ 13902540 ; vRam + 8460 - 8820
   52 D1:E5B2 -  -  -  -  BigGrassTop_Fast_F .equ 13902900 ; vRam + 8820 - 9065
   53 D1:E5B2 -  -  -  -  BigGrassTop_Slow_O .equ 13903145 ; vRam + 9065 - 9379
   54 D1:E5B2 -  -  -  -  DualLeaf4_Slow .equ 13903459 ; vRam + 9379 - 9555
   55 D1:E5B2 -  -  -  -  DualLeaf4_Slow_F .equ 13903635 ; vRam + 9555 - 9731
   56 D1:E5B2 -  -  -  -  DualLeaf3_Fast .equ 13903812 ; vRam + 9732 - 9852
   57 D1:E5B2 -  -  -  -  Branches_10_Fast .equ 13903932 ; vRam + 9852 - 9971
   58 D1:E5B2 -  -  -  -  Branches_9_Fast .equ 13904052 ; vRam + 9972 - 10102
   59 D1:E5B2 -  -  -  -  Branches_16_Slow .equ 13904183 ; vRam + 10103 - 10211
   60 D1:E5B2 -  -  -  -  Branches_13_Fast .equ 13904292 ; vRam + 10212 - 10261
   61 D1:E5B2 -  -  -  -  Leaves1_Fast .equ 13904342 ; vRam + 10262 - 10542
   62 D1:E5B2 -  -  -  -  DualLeaf1_Fast .equ 13904622 ; vRam + 10542 - 10653
   63 D1:E5B2 -  -  -  -  DualLeaf2_Fast .equ 13904734 ; vRam + 10654 - 10766
   64 D1:E5B2 -  -  -  -  DualLeaf2_Slow_O .equ 13904847 ; vRam + 10767 - 10936
   65 D1:E5B2 -  -  -  -  DualLeaf1_Slow_O .equ 13905017 ; vRam + 10937 - 11105
   66 D1:E5B2 -  -  -  -  Branches_6_Slow .equ 13905185 ; vRam + 11105 - 11262
   67 D1:E5B2 -  -  -  -  Branches_10_Fast_F .equ 13905342 ; vRam + 11262 - 11381
   68 D1:E5B2 -  -  -  -  Branches_7_Fast .equ 13905462 ; vRam + 11382 - 11503
   69 D1:E5B2 -  -  -  -  Branches_15_Slow .equ 13905583 ; vRam + 11503 - 11615
   70 D1:E5B2 -  -  -  -  Branches_8_Fast_F .equ 13905696 ; vRam + 11616 - 11710
   71 D1:E5B2 -  -  -  -  Branches_12_Fast .equ 13905790 ; vRam + 11710 - 11801
   72 D1:E5B2 -  -  -  -  Branches_15_Slow_O_F .equ 13905881 ; vRam + 11801 - 11913
   73 D1:E5B2 -  -  -  -  LeavesDark_Fast .equ 13905994 ; vRam + 11914 - 12194
   74 D1:E5B2 -  -  -  -  LeavesDark_Fast_F .equ 13906274 ; vRam + 12194 - 12474
   75 D1:E5B2 -  -  -  -  Leaves2_Fast .equ 13906554 ; vRam + 12474 - 12709
   76 D1:E5B2 -  -  -  -  Leaves2_Fast_F .equ 13906790 ; vRam + 12710 - 12945
   77 D1:E5B2 -  -  -  -  LeavesLight_Fast .equ 13907026 ; vRam + 12946 - 13226
   78 D1:E5B2 -  -  -  -  Branches_8_Fast .equ 13907306 ; vRam + 13226 - 13320
   79 D1:E5B2 -  -  -  -  Branches_11_Fast_F .equ 13907400 ; vRam + 13320 - 13423
   80 D1:E5B2 -  -  -  -  Branches_16_Slow_O_F .equ 13907503 ; vRam + 13423 - 13531
   81 D1:E5B2 -  -  -  -  Branches_13_Fast_F .equ 13907612 ; vRam + 13532 - 13581
   82 D1:E5B2 -  -  -  -  Branches_14_Slow .equ 13907661 ; vRam + 13581 - 13689
   83 D1:E5B2 -  -  -  -  Branches_4_Fast_F .equ 13907770 ; vRam + 13690 - 13848
   84 D1:E5B2 -  -  -  -  Branches_7_Fast_F .equ 13907928 ; vRam + 13848 - 13969
   85 D1:E5B2 -  -  -  -  Branches_12_Fast_F .equ 13908050 ; vRam + 13970 - 14061
   86 D1:E5B2 -  -  -  -  Leaves1_Fast_F .equ 13908142 ; vRam + 14062 - 14342
   87 D1:E5B2 -  -  -  -  GroundDirtFull_Fast_F .equ 13908422 ; vRam + 14342 - 14519
   88 D1:E5B2 -  -  -  -  GroundDirtFull_Fast .equ 13908600 ; vRam + 14520 - 14697
   89 D1:E5B2 -  -  -  -  GroundDirtMound_Fast .equ 13908778 ; vRam + 14698 - 14825
   90 D1:E5B2 -  -  -  -  GroundDirtMound_Fast_F .equ 13908906 ; vRam + 14826 - 14953
   91 D1:E5B2 -  -  -  -  Branches_8_Slow_O_F .equ 13909033 ; vRam + 14953 - 15089
   92 D1:E5B2 -  -  -  -  Branches_9_Slow_O .equ 13909169 ; vRam + 15089 - 15264
   93 D1:E5B2 -  -  -  -  Tree_2_Fast .equ 13909344 ; vRam + 15264 - 15515
   94 D1:E5B2 -  -  -  -  Tree_4_Fast .equ 13909596 ; vRam + 15516 - 15773
   95 D1:E5B2 -  -  -  -  Tree_7_Fast .equ 13909854 ; vRam + 15774 - 16031
   96 D1:E5B2 -  -  -  -  Tree_9_Fast .equ 13910112 ; vRam + 16032 - 16289
   97 D1:E5B2 -  -  -  -  Tree_6_Fast_F .equ 13910370 ; vRam + 16290 - 16547
   98 D1:E5B2 -  -  -  -  Tree_3_Fast_F .equ 13910628 ; vRam + 16548 - 16805
   99 D1:E5B2 -  -  -  -  Tree_0_Fast_F .equ 13910886 ; vRam + 16806 - 17057
  100 D1:E5B2 -  -  -  -  Tree_3_Fast .equ 13911138 ; vRam + 17058 - 17315
  101 D1:E5B2 -  -  -  -  Tree_8_Fast .equ 13911396 ; vRam + 17316 - 17573
  102 D1:E5B2 -  -  -  -  Tree_9_Fast_F .equ 13911654 ; vRam + 17574 - 17831
  103 D1:E5B2 -  -  -  -  Tree_8_Fast_F .equ 13911912 ; vRam + 17832 - 18089
  104 D1:E5B2 -  -  -  -  Tree_4_Fast_F .equ 13912170 ; vRam + 18090 - 18347
  105 D1:E5B2 -  -  -  -  Tree_0_Fast .equ 13912428 ; vRam + 18348 - 18599
  106 D1:E5B2 -  -  -  -  Tree_6_Fast .equ 13912680 ; vRam + 18600 - 18857
  107 D1:E5B2 -  -  -  -  Tree_10_Fast .equ 13912938 ; vRam + 18858 - 19115
  108 D1:E5B2 -  -  -  -  Tree_7_Fast_F .equ 13913196 ; vRam + 19116 - 19373
  109 D1:E5B2 -  -  -  -  Tree_1_Fast_F .equ 13913454 ; vRam + 19374 - 19628
  110 D1:E5B2 -  -  -  -  Tree_1_Fast .equ 13913708 ; vRam + 19628 - 19882
  111 D1:E5B2 -  -  -  -  Tree_5_Fast .equ 13913962 ; vRam + 19882 - 20139
  112 D1:E5B2 -  -  -  -  Branches_1_Slow_O .equ 13914219 ; vRam + 20139 - 20336
  113 D1:E5B2 -  -  -  -  Branches_2_Slow_O .equ 13914417 ; vRam + 20337 - 20560
  114 D1:E5B2 -  -  -  -  Branches_4_Slow_O .equ 13914641 ; vRam + 20561 - 20764
  115 D1:E5B2 -  -  -  -  Branches_7_Slow_O .equ 13914845 ; vRam + 20765 - 20928
  116 D1:E5B2 -  -  -  -  Branches_0_Fast_F .equ 13901496 ; vRam + 7416 - 7567
  117 D1:E5B2 -  -  -  -  Branches_8_Slow_O .equ 13901647 ; vRam + 7567 - 7703
  118 D1:E5B2 -  -  -  -  Branches_9_Fast_F .equ 13901784 ; vRam + 7704 - 7834
  119 D1:E5B2 -  -  -  -  Branches_4_Fast .equ 13901914 ; vRam + 7834 - 7992
Listing for file "ascent.asm"
  574 D1:E5B2 -  -  -  -  #include "generated/Sprite_Groups.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Groups.txt"
    1 D1:E5B2 -  -  -  -  Sprite_Groups:
    2 D1:E5B2 06 E6 D1 -  	.dl SG_GroundGrass
    3 D1:E5B5 48 E6 D1 -  	.dl SG_Branch3
    4 D1:E5B8 66 E6 D1 -  	.dl SG_Branch7
    5 D1:E5BB B8 E6 D1 -  	.dl SG_Branch4
    6 D1:E5BE 0E E7 D1 -  	.dl SG_Branch5
    7 D1:E5C1 5C E7 D1 -  	.dl SG_Branch6
    8 D1:E5C4 92 E7 D1 -  	.dl SG_Branch2
    9 D1:E5C7 E0 E7 D1 -  	.dl SG_GroundChunk2
   10 D1:E5CA FA E7 D1 -  	.dl SG_GroundChunk1
   11 D1:E5CD 18 E8 D1 -  	.dl SG_Root1
   12 D1:E5D0 26 E8 D1 -  	.dl SG_TreeRow3
   13 D1:E5D3 44 E8 D1 -  	.dl SG_TreeRow5
   14 D1:E5D6 62 E8 D1 -  	.dl SG_TreeRow1
   15 D1:E5D9 80 E8 D1 -  	.dl SG_TreeRow2
   16 D1:E5DC 9E E8 D1 -  	.dl SG_TreeRow4
   17 D1:E5DF BC E8 D1 -  	.dl SG_Branch1
   18 D1:E5E2 FA E8 D1 -  	.dl SG_Vines2
   19 D1:E5E5 0C E9 D1 -  	.dl SG_Vines6
   20 D1:E5E8 22 E9 D1 -  	.dl SG_Vines7
   21 D1:E5EB 38 E9 D1 -  	.dl SG_Vines5
   22 D1:E5EE 5E E9 D1 -  	.dl SG_BranchBase3
   23 D1:E5F1 70 E9 D1 -  	.dl SG_BranchBase2
   24 D1:E5F4 8A E9 D1 -  	.dl SG_BranchBase4
   25 D1:E5F7 9C E9 D1 -  	.dl SG_CloudPlatform
   26 D1:E5FA AE E9 D1 -  	.dl SG_DarkGroundChunk
   27 D1:E5FD CC E9 D1 -  	.dl SG_BGTree1
   28 D1:E600 EE E9 D1 -  	.dl SG_BGTree2
   29 D1:E603 10 EA D1 -  	.dl SG_Cloud1
   30 D1:E606 -  -  -  -  
   31 D1:E606 -  -  -  -  
   32 D1:E606 -  -  -  -  
   33 D1:E606 -  -  -  -  SG_GroundGrass:
   34 D1:E606 00 -  -  -  	.db 0
   35 D1:E607 10 -  -  -  	.db 16
   36 D1:E608 1A 1A 09 00 	.db 26, 26, 9, 0  ;BigGrassBase_Slow_O
   37 D1:E60C 1A 1A 20 01 	.db 26, 26, 32, 1  ;BigGrassBase_Fast
   38 D1:E610 1A 1A 2C 02 	.db 26, 26, 44, 2  ;BigGrassBase_Fast_F
   39 D1:E614 1A 1A 00 01 	.db 26, 26, 0, 1  ;BigGrassBase_Fast
   40 D1:E618 03 17 02 03 	.db 3, 23, 2, 3  ;BigGrassTop_Fast
   41 D1:E61C 1A 1A 13 01 	.db 26, 26, 19, 1  ;BigGrassBase_Fast
   42 D1:E620 03 17 15 03 	.db 3, 23, 21, 3  ;BigGrassTop_Fast
   43 D1:E624 03 17 07 04 	.db 3, 23, 7, 4  ;BigGrassTop_Fast_F
   44 D1:E628 04 17 1D 04 	.db 4, 23, 29, 4  ;BigGrassTop_Fast_F
   45 D1:E62C 03 17 28 04 	.db 3, 23, 40, 4  ;BigGrassTop_Fast_F
   46 D1:E630 1D 17 19 04 	.db 29, 23, 25, 4  ;BigGrassTop_Fast_F
   47 D1:E634 1D 17 08 05 	.db 29, 23, 8, 5  ;BigGrassTop_Slow_O
   48 D1:E638 1D 17 34 03 	.db 29, 23, 52, 3  ;BigGrassTop_Fast
   49 D1:E63C 0A 13 34 06 	.db 10, 19, 52, 6  ;DualLeaf4_Slow
   50 D1:E640 00 13 13 07 	.db 0, 19, 19, 7  ;DualLeaf4_Slow_F
   51 D1:E644 21 0B 26 08 	.db 33, 11, 38, 8  ;DualLeaf3_Fast
   52 D1:E648 -  -  -  -  
   53 D1:E648 -  -  -  -  SG_Branch3:
   54 D1:E648 00 -  -  -  	.db 0
   55 D1:E649 07 -  -  -  	.db 7
   56 D1:E64A 00 0E 17 09 	.db 0, 14, 23, 9  ;Branches_9_Fast
   57 D1:E64E 0E 06 08 0A 	.db 14, 6, 8, 10  ;Branches_13_Fast
   58 D1:E652 07 0E 0F 0B 	.db 7, 14, 15, 11  ;Branches_10_Fast
   59 D1:E656 12 0D 0D 0C 	.db 18, 13, 13, 12  ;Branches_16_Slow
   60 D1:E65A 05 15 00 0D 	.db 5, 21, 0, 13  ;Leaves1_Fast
   61 D1:E65E 1D 0C 0A 11 	.db 29, 12, 10, 17  ;DualLeaf1_Fast
   62 D1:E662 01 0B 0F 08 	.db 1, 11, 15, 8  ;DualLeaf3_Fast
   63 D1:E666 -  -  -  -  
   64 D1:E666 -  -  -  -  SG_Branch7:
   65 D1:E666 00 -  -  -  	.db 0
   66 D1:E667 14 -  -  -  	.db 20
   67 D1:E668 00 15 0A 12 	.db 0, 21, 10, 18  ;LeavesLight_Fast
   68 D1:E66C 05 15 15 12 	.db 5, 21, 21, 18  ;LeavesLight_Fast
   69 D1:E670 21 15 18 13 	.db 33, 21, 24, 19  ;LeavesDark_Fast
   70 D1:E674 12 15 00 13 	.db 18, 21, 0, 19  ;LeavesDark_Fast
   71 D1:E678 28 15 08 13 	.db 40, 21, 8, 19  ;LeavesDark_Fast
   72 D1:E67C 19 0E 1A 14 	.db 25, 14, 26, 20  ;Branches_14_Slow
   73 D1:E680 14 0E 0D 15 	.db 20, 14, 13, 21  ;Branches_15_Slow_O_F
   74 D1:E684 36 0E 03 16 	.db 54, 14, 3, 22  ;Branches_8_Fast
   75 D1:E688 15 0E 07 17 	.db 21, 14, 7, 23  ;Branches_15_Slow
   76 D1:E68C 23 0A 13 18 	.db 35, 10, 19, 24  ;Branches_11_Fast_F
   77 D1:E690 25 06 1C 19 	.db 37, 6, 28, 25  ;Branches_13_Fast_F
   78 D1:E694 26 0E 0B 0B 	.db 38, 14, 11, 11  ;Branches_10_Fast
   79 D1:E698 2E 0E 08 16 	.db 46, 14, 8, 22  ;Branches_8_Fast
   80 D1:E69C 1D 0E 0B 1A 	.db 29, 14, 11, 26  ;Branches_10_Fast_F
   81 D1:E6A0 27 12 11 1B 	.db 39, 18, 17, 27  ;Leaves2_Fast_F
   82 D1:E6A4 22 12 02 1C 	.db 34, 18, 2, 28  ;Leaves2_Fast
   83 D1:E6A8 10 15 0E 0D 	.db 16, 21, 14, 13  ;Leaves1_Fast
   84 D1:E6AC 10 15 1C 0D 	.db 16, 21, 28, 13  ;Leaves1_Fast
   85 D1:E6B0 08 15 05 0D 	.db 8, 21, 5, 13  ;Leaves1_Fast
   86 D1:E6B4 39 0C 05 0E 	.db 57, 12, 5, 14  ;DualLeaf1_Fast
   87 D1:E6B8 -  -  -  -  
   88 D1:E6B8 -  -  -  -  SG_Branch4:
   89 D1:E6B8 00 -  -  -  	.db 0
   90 D1:E6B9 15 -  -  -  	.db 21
   91 D1:E6BA 3F 15 0C 0D 	.db 63, 21, 12, 13  ;Leaves1_Fast
   92 D1:E6BE 00 15 0F 12 	.db 0, 21, 15, 18  ;LeavesLight_Fast
   93 D1:E6C2 05 15 1B 12 	.db 5, 21, 27, 18  ;LeavesLight_Fast
   94 D1:E6C6 0E 12 12 1C 	.db 14, 18, 18, 28  ;Leaves2_Fast
   95 D1:E6CA 0D 15 06 0D 	.db 13, 21, 6, 13  ;Leaves1_Fast
   96 D1:E6CE 1C 15 00 1D 	.db 28, 21, 0, 29  ;LeavesDark_Fast_F
   97 D1:E6D2 1A 15 18 1D 	.db 26, 21, 24, 29  ;LeavesDark_Fast_F
   98 D1:E6D6 2C 0A 11 1E 	.db 44, 10, 17, 30  ;Branches_12_Fast
   99 D1:E6DA 25 0E 19 15 	.db 37, 14, 25, 21  ;Branches_15_Slow_O_F
  100 D1:E6DE 20 15 08 13 	.db 32, 21, 8, 19  ;LeavesDark_Fast
  101 D1:E6E2 18 15 0F 13 	.db 24, 21, 15, 19  ;LeavesDark_Fast
  102 D1:E6E6 41 0E 11 17 	.db 65, 14, 17, 23  ;Branches_15_Slow
  103 D1:E6EA 40 0E 15 0B 	.db 64, 14, 21, 11  ;Branches_10_Fast
  104 D1:E6EE 11 12 1E 1B 	.db 17, 18, 30, 27  ;Leaves2_Fast_F
  105 D1:E6F2 36 0E 1D 1A 	.db 54, 14, 29, 26  ;Branches_10_Fast_F
  106 D1:E6F6 3D 0B 25 1F 	.db 61, 11, 37, 31  ;Branches_6_Slow
  107 D1:E6FA 4C 0D 11 0C 	.db 76, 13, 17, 12  ;Branches_16_Slow
  108 D1:E6FE 3E 0A 1C 20 	.db 62, 10, 28, 32  ;Branches_7_Fast
  109 D1:E702 2F 0E 1A 21 	.db 47, 14, 26, 33  ;Branches_8_Fast_F
  110 D1:E706 37 12 06 1C 	.db 55, 18, 6, 28  ;Leaves2_Fast
  111 D1:E70A 4E 15 07 0D 	.db 78, 21, 7, 13  ;Leaves1_Fast
  112 D1:E70E -  -  -  -  
  113 D1:E70E -  -  -  -  SG_Branch5:
  114 D1:E70E 00 -  -  -  	.db 0
  115 D1:E70F 13 -  -  -  	.db 19
  116 D1:E710 1E 15 08 13 	.db 30, 21, 8, 19  ;LeavesDark_Fast
  117 D1:E714 00 15 09 12 	.db 0, 21, 9, 18  ;LeavesLight_Fast
  118 D1:E718 43 15 0C 13 	.db 67, 21, 12, 19  ;LeavesDark_Fast
  119 D1:E71C 09 12 00 1C 	.db 9, 18, 0, 28  ;Leaves2_Fast
  120 D1:E720 0A 12 10 1C 	.db 10, 18, 16, 28  ;Leaves2_Fast
  121 D1:E724 33 0A 00 20 	.db 51, 10, 0, 32  ;Branches_7_Fast
  122 D1:E728 2C 0E 09 16 	.db 44, 14, 9, 22  ;Branches_8_Fast
  123 D1:E72C 34 0A 0B 18 	.db 52, 10, 11, 24  ;Branches_11_Fast_F
  124 D1:E730 11 0E 1A 15 	.db 17, 14, 26, 21  ;Branches_15_Slow_O_F
  125 D1:E734 35 06 14 19 	.db 53, 6, 20, 25  ;Branches_13_Fast_F
  126 D1:E738 1E 0E 0D 14 	.db 30, 14, 13, 20  ;Branches_14_Slow
  127 D1:E73C 24 0E 0D 15 	.db 36, 14, 13, 21  ;Branches_15_Slow_O_F
  128 D1:E740 16 15 10 13 	.db 22, 21, 16, 19  ;LeavesDark_Fast
  129 D1:E744 12 15 04 13 	.db 18, 21, 4, 19  ;LeavesDark_Fast
  130 D1:E748 41 0D 0D 22 	.db 65, 13, 13, 34  ;Branches_16_Slow_O_F
  131 D1:E74C 38 0E 08 1A 	.db 56, 14, 8, 26  ;Branches_10_Fast_F
  132 D1:E750 37 0C 15 0F 	.db 55, 12, 21, 15  ;DualLeaf2_Fast
  133 D1:E754 2B 13 19 06 	.db 43, 19, 25, 6  ;DualLeaf4_Slow
  134 D1:E758 45 15 12 0D 	.db 69, 21, 18, 13  ;Leaves1_Fast
  135 D1:E75C -  -  -  -  
  136 D1:E75C -  -  -  -  SG_Branch6:
  137 D1:E75C 00 -  -  -  	.db 0
  138 D1:E75D 0D -  -  -  	.db 13
  139 D1:E75E 2F 15 15 13 	.db 47, 21, 21, 19  ;LeavesDark_Fast
  140 D1:E762 00 15 09 12 	.db 0, 21, 9, 18  ;LeavesLight_Fast
  141 D1:E766 26 15 11 0D 	.db 38, 21, 17, 13  ;Leaves1_Fast
  142 D1:E76A 25 0E 00 23 	.db 37, 14, 0, 35  ;Branches_4_Fast_F
  143 D1:E76E 26 0A 09 24 	.db 38, 10, 9, 36  ;Branches_7_Fast_F
  144 D1:E772 21 0E 12 09 	.db 33, 14, 18, 9  ;Branches_9_Fast
  145 D1:E776 20 0A 1B 25 	.db 32, 10, 27, 37  ;Branches_12_Fast_F
  146 D1:E77A 0B 15 05 0D 	.db 11, 21, 5, 13  ;Leaves1_Fast
  147 D1:E77E 18 13 22 06 	.db 24, 19, 34, 6  ;DualLeaf4_Slow
  148 D1:E782 19 0E 0E 14 	.db 25, 14, 14, 20  ;Branches_14_Slow
  149 D1:E786 29 0D 16 22 	.db 41, 13, 22, 34  ;Branches_16_Slow_O_F
  150 D1:E78A 0C 15 0F 26 	.db 12, 21, 15, 38  ;Leaves1_Fast_F
  151 D1:E78E 2E 12 1C 1C 	.db 46, 18, 28, 28  ;Leaves2_Fast
  152 D1:E792 -  -  -  -  
  153 D1:E792 -  -  -  -  SG_Branch2:
  154 D1:E792 00 -  -  -  	.db 0
  155 D1:E793 13 -  -  -  	.db 19
  156 D1:E794 00 15 09 12 	.db 0, 21, 9, 18  ;LeavesLight_Fast
  157 D1:E798 01 15 15 12 	.db 1, 21, 21, 18  ;LeavesLight_Fast
  158 D1:E79C 0A 15 1C 26 	.db 10, 21, 28, 38  ;Leaves1_Fast_F
  159 D1:E7A0 0D 15 06 26 	.db 13, 21, 6, 38  ;Leaves1_Fast_F
  160 D1:E7A4 0B 15 10 0D 	.db 11, 21, 16, 13  ;Leaves1_Fast
  161 D1:E7A8 3C 0E 1D 21 	.db 60, 14, 29, 33  ;Branches_8_Fast_F
  162 D1:E7AC 35 0E 19 21 	.db 53, 14, 25, 33  ;Branches_8_Fast_F
  163 D1:E7B0 2D 0E 12 1A 	.db 45, 14, 18, 26  ;Branches_10_Fast_F
  164 D1:E7B4 30 0E 1C 0B 	.db 48, 14, 28, 11  ;Branches_10_Fast
  165 D1:E7B8 29 0E 1E 17 	.db 41, 14, 30, 23  ;Branches_15_Slow
  166 D1:E7BC 2F 06 25 19 	.db 47, 6, 37, 25  ;Branches_13_Fast_F
  167 D1:E7C0 27 13 2A 06 	.db 39, 19, 42, 6  ;DualLeaf4_Slow
  168 D1:E7C4 19 15 16 13 	.db 25, 21, 22, 19  ;LeavesDark_Fast
  169 D1:E7C8 17 15 00 13 	.db 23, 21, 0, 19  ;LeavesDark_Fast
  170 D1:E7CC 1D 15 0C 13 	.db 29, 21, 12, 19  ;LeavesDark_Fast
  171 D1:E7D0 34 0D 11 0C 	.db 52, 13, 17, 12  ;Branches_16_Slow
  172 D1:E7D4 28 0E 23 15 	.db 40, 14, 35, 21  ;Branches_15_Slow_O_F
  173 D1:E7D8 3A 12 0C 1C 	.db 58, 18, 12, 28  ;Leaves2_Fast
  174 D1:E7DC 1C 12 22 1C 	.db 28, 18, 34, 28  ;Leaves2_Fast
  175 D1:E7E0 -  -  -  -  
  176 D1:E7E0 -  -  -  -  SG_GroundChunk2:
  177 D1:E7E0 00 -  -  -  	.db 0
  178 D1:E7E1 06 -  -  -  	.db 6
  179 D1:E7E2 0E 10 00 2B 	.db 14, 16, 0, 43  ;GroundDirtFull_Fast_F
  180 D1:E7E6 0F 10 08 2C 	.db 15, 16, 8, 44  ;GroundDirtFull_Fast
  181 D1:E7EA 0E 10 10 2B 	.db 14, 16, 16, 43  ;GroundDirtFull_Fast_F
  182 D1:E7EE 02 0C 00 2D 	.db 2, 12, 0, 45  ;GroundDirtMound_Fast
  183 D1:E7F2 03 0C 08 2D 	.db 3, 12, 8, 45  ;GroundDirtMound_Fast
  184 D1:E7F6 02 0C 10 2D 	.db 2, 12, 16, 45  ;GroundDirtMound_Fast
  185 D1:E7FA -  -  -  -  
  186 D1:E7FA -  -  -  -  SG_GroundChunk1:
  187 D1:E7FA 00 -  -  -  	.db 0
  188 D1:E7FB 07 -  -  -  	.db 7
  189 D1:E7FC 10 10 00 2C 	.db 16, 16, 0, 44  ;GroundDirtFull_Fast
  190 D1:E800 0F 10 08 2C 	.db 15, 16, 8, 44  ;GroundDirtFull_Fast
  191 D1:E804 0E 10 10 2B 	.db 14, 16, 16, 43  ;GroundDirtFull_Fast_F
  192 D1:E808 02 0C 10 2D 	.db 2, 12, 16, 45  ;GroundDirtMound_Fast
  193 D1:E80C 03 0C 08 2D 	.db 3, 12, 8, 45  ;GroundDirtMound_Fast
  194 D1:E810 04 0C 00 2E 	.db 4, 12, 0, 46  ;GroundDirtMound_Fast_F
  195 D1:E814 00 0C 0C 2D 	.db 0, 12, 12, 45  ;GroundDirtMound_Fast
  196 D1:E818 -  -  -  -  
  197 D1:E818 -  -  -  -  SG_Root1:
  198 D1:E818 00 -  -  -  	.db 0
  199 D1:E819 03 -  -  -  	.db 3
  200 D1:E81A 06 0E 00 16 	.db 6, 14, 0, 22  ;Branches_8_Fast
  201 D1:E81E 03 0E 0D 2F 	.db 3, 14, 13, 47  ;Branches_8_Slow_O_F
  202 D1:E822 00 0E 04 30 	.db 0, 14, 4, 48  ;Branches_9_Slow_O
  203 D1:E826 -  -  -  -  
  204 D1:E826 -  -  -  -  SG_TreeRow3:
  205 D1:E826 00 -  -  -  	.db 0
  206 D1:E827 07 -  -  -  	.db 7
  207 D1:E828 00 10 00 31 	.db 0, 16, 0, 49  ;Tree_2_Fast
  208 D1:E82C 00 10 0D 32 	.db 0, 16, 13, 50  ;Tree_4_Fast
  209 D1:E830 00 10 1A 33 	.db 0, 16, 26, 51  ;Tree_7_Fast
  210 D1:E834 00 10 27 34 	.db 0, 16, 39, 52  ;Tree_9_Fast
  211 D1:E838 00 10 34 35 	.db 0, 16, 52, 53  ;Tree_6_Fast_F
  212 D1:E83C 00 10 41 36 	.db 0, 16, 65, 54  ;Tree_3_Fast_F
  213 D1:E840 00 10 4E 37 	.db 0, 16, 78, 55  ;Tree_0_Fast_F
  214 D1:E844 -  -  -  -  
  215 D1:E844 -  -  -  -  SG_TreeRow5:
  216 D1:E844 00 -  -  -  	.db 0
  217 D1:E845 07 -  -  -  	.db 7
  218 D1:E846 00 10 00 31 	.db 0, 16, 0, 49  ;Tree_2_Fast
  219 D1:E84A 00 10 0D 38 	.db 0, 16, 13, 56  ;Tree_3_Fast
  220 D1:E84E 00 10 1A 39 	.db 0, 16, 26, 57  ;Tree_8_Fast
  221 D1:E852 00 10 27 3A 	.db 0, 16, 39, 58  ;Tree_9_Fast_F
  222 D1:E856 00 10 34 3B 	.db 0, 16, 52, 59  ;Tree_8_Fast_F
  223 D1:E85A 00 10 41 3C 	.db 0, 16, 65, 60  ;Tree_4_Fast_F
  224 D1:E85E 00 10 4E 37 	.db 0, 16, 78, 55  ;Tree_0_Fast_F
  225 D1:E862 -  -  -  -  
  226 D1:E862 -  -  -  -  SG_TreeRow1:
  227 D1:E862 00 -  -  -  	.db 0
  228 D1:E863 07 -  -  -  	.db 7
  229 D1:E864 00 10 00 3D 	.db 0, 16, 0, 61  ;Tree_0_Fast
  230 D1:E868 00 10 0D 38 	.db 0, 16, 13, 56  ;Tree_3_Fast
  231 D1:E86C 00 10 1A 3E 	.db 0, 16, 26, 62  ;Tree_6_Fast
  232 D1:E870 00 10 27 3F 	.db 0, 16, 39, 63  ;Tree_10_Fast
  233 D1:E874 00 10 34 40 	.db 0, 16, 52, 64  ;Tree_7_Fast_F
  234 D1:E878 00 10 41 3C 	.db 0, 16, 65, 60  ;Tree_4_Fast_F
  235 D1:E87C 00 10 4E 41 	.db 0, 16, 78, 65  ;Tree_1_Fast_F
  236 D1:E880 -  -  -  -  
  237 D1:E880 -  -  -  -  SG_TreeRow2:
  238 D1:E880 00 -  -  -  	.db 0
  239 D1:E881 07 -  -  -  	.db 7
  240 D1:E882 00 10 00 42 	.db 0, 16, 0, 66  ;Tree_1_Fast
  241 D1:E886 00 10 0D 43 	.db 0, 16, 13, 67  ;Tree_5_Fast
  242 D1:E88A 00 10 1A 39 	.db 0, 16, 26, 57  ;Tree_8_Fast
  243 D1:E88E 00 10 27 44 	.db 0, 16, 39, 68  ;Tree_11_Fast
  244 D1:E892 00 10 34 3B 	.db 0, 16, 52, 59  ;Tree_8_Fast_F
  245 D1:E896 00 10 41 45 	.db 0, 16, 65, 69  ;Tree_5_Fast_F
  246 D1:E89A 00 10 4E 46 	.db 0, 16, 78, 70  ;Tree_2_Fast_F
  247 D1:E89E -  -  -  -  
  248 D1:E89E -  -  -  -  SG_TreeRow4:
  249 D1:E89E 00 -  -  -  	.db 0
  250 D1:E89F 07 -  -  -  	.db 7
  251 D1:E8A0 00 10 00 3D 	.db 0, 16, 0, 61  ;Tree_0_Fast
  252 D1:E8A4 00 10 0D 43 	.db 0, 16, 13, 67  ;Tree_5_Fast
  253 D1:E8A8 00 10 1A 3E 	.db 0, 16, 26, 62  ;Tree_6_Fast
  254 D1:E8AC 00 10 27 47 	.db 0, 16, 39, 71  ;Tree_11_Fast_F
  255 D1:E8B0 00 10 34 35 	.db 0, 16, 52, 53  ;Tree_6_Fast_F
  256 D1:E8B4 00 10 41 36 	.db 0, 16, 65, 54  ;Tree_3_Fast_F
  257 D1:E8B8 00 10 4E 41 	.db 0, 16, 78, 65  ;Tree_1_Fast_F
  258 D1:E8BC -  -  -  -  
  259 D1:E8BC -  -  -  -  SG_Branch1:
  260 D1:E8BC 00 -  -  -  	.db 0
  261 D1:E8BD 0F -  -  -  	.db 15
  262 D1:E8BE 19 0E 34 48 	.db 25, 14, 52, 72  ;Branches_1_Fast
  263 D1:E8C2 19 0E 2C 2A 	.db 25, 14, 44, 42  ;Branches_2_Fast
  264 D1:E8C6 1A 0E 23 29 	.db 26, 14, 35, 41  ;Branches_3_Fast
  265 D1:E8CA 1B 0E 1A 27 	.db 27, 14, 26, 39  ;Branches_5_Fast
  266 D1:E8CE 1D 0A 11 20 	.db 29, 10, 17, 32  ;Branches_7_Fast
  267 D1:E8D2 07 15 11 0D 	.db 7, 21, 17, 13  ;Leaves1_Fast
  268 D1:E8D6 00 12 0A 1C 	.db 0, 18, 10, 28  ;Leaves2_Fast
  269 D1:E8DA 1C 15 07 13 	.db 28, 21, 7, 19  ;LeavesDark_Fast
  270 D1:E8DE 1F 0E 22 16 	.db 31, 14, 34, 22  ;Branches_8_Fast
  271 D1:E8E2 14 0E 17 17 	.db 20, 14, 23, 23  ;Branches_15_Slow
  272 D1:E8E6 05 15 02 12 	.db 5, 21, 2, 18  ;LeavesLight_Fast
  273 D1:E8EA 29 0D 1F 0C 	.db 41, 13, 31, 12  ;Branches_16_Slow
  274 D1:E8EE 13 15 00 0D 	.db 19, 21, 0, 13  ;Leaves1_Fast
  275 D1:E8F2 32 0C 1C 0F 	.db 50, 12, 28, 15  ;DualLeaf2_Fast
  276 D1:E8F6 0D 15 09 0D 	.db 13, 21, 9, 13  ;Leaves1_Fast
  277 D1:E8FA -  -  -  -  
  278 D1:E8FA -  -  -  -  SG_Vines2:
  279 D1:E8FA 00 -  -  -  	.db 0
  280 D1:E8FB 04 -  -  -  	.db 4
  281 D1:E8FC 00 10 03 49 	.db 0, 16, 3, 73  ;Vine2_Slow
  282 D1:E900 10 12 02 4A 	.db 16, 18, 2, 74  ;VineVertical_Slow_O
  283 D1:E904 22 12 02 4B 	.db 34, 18, 2, 75  ;VineVertical_Slow
  284 D1:E908 33 0C 00 11 	.db 51, 12, 0, 17  ;DualLeaf2_Fast
  285 D1:E90C -  -  -  -  
  286 D1:E90C -  -  -  -  SG_Vines6:
  287 D1:E90C 00 -  -  -  	.db 0
  288 D1:E90D 05 -  -  -  	.db 5
  289 D1:E90E 00 12 00 4C 	.db 0, 18, 0, 76  ;Vine4_Slow_F
  290 D1:E912 0F 12 07 4D 	.db 15, 18, 7, 77  ;Vine4_Slow_O_F
  291 D1:E916 1F 10 0F 4E 	.db 31, 16, 15, 78  ;Vine5_Slow_O_F
  292 D1:E91A 26 0A 18 4F 	.db 38, 10, 24, 79  ;Vine6_Slow_O
  293 D1:E91E 28 0A 23 50 	.db 40, 10, 35, 80  ;Vine7_Slow
  294 D1:E922 -  -  -  -  
  295 D1:E922 -  -  -  -  SG_Vines7:
  296 D1:E922 00 -  -  -  	.db 0
  297 D1:E923 05 -  -  -  	.db 5
  298 D1:E924 21 10 00 51 	.db 33, 16, 0, 81  ;Vine5_Slow
  299 D1:E928 1F 0A 08 52 	.db 31, 10, 8, 82  ;Vine6_Slow
  300 D1:E92C 18 10 12 51 	.db 24, 16, 18, 81  ;Vine5_Slow
  301 D1:E930 0F 10 1A 51 	.db 15, 16, 26, 81  ;Vine5_Slow
  302 D1:E934 00 12 22 53 	.db 0, 18, 34, 83  ;Vine4_Slow
  303 D1:E938 -  -  -  -  
  304 D1:E938 -  -  -  -  SG_Vines5:
  305 D1:E938 00 -  -  -  	.db 0
  306 D1:E939 09 -  -  -  	.db 9
  307 D1:E93A 00 12 00 4C 	.db 0, 18, 0, 76  ;Vine4_Slow_F
  308 D1:E93E 11 12 07 4D 	.db 17, 18, 7, 77  ;Vine4_Slow_O_F
  309 D1:E942 21 10 0F 4E 	.db 33, 16, 15, 78  ;Vine5_Slow_O_F
  310 D1:E946 28 0A 19 52 	.db 40, 10, 25, 82  ;Vine6_Slow
  311 D1:E94A 2A 0A 23 54 	.db 42, 10, 35, 84  ;Vine7_Slow_O
  312 D1:E94E 22 10 2A 55 	.db 34, 16, 42, 85  ;Vine5_Slow_O
  313 D1:E952 21 0A 32 4F 	.db 33, 10, 50, 79  ;Vine6_Slow_O
  314 D1:E956 1A 10 3D 51 	.db 26, 16, 61, 81  ;Vine5_Slow
  315 D1:E95A 0C 12 44 56 	.db 12, 18, 68, 86  ;Vine4_Slow_O
  316 D1:E95E -  -  -  -  
  317 D1:E95E -  -  -  -  SG_BranchBase3:
  318 D1:E95E 00 -  -  -  	.db 0
  319 D1:E95F 04 -  -  -  	.db 4
  320 D1:E960 0B 0E 00 57 	.db 11, 14, 0, 87  ;Branches_1_Fast_F
  321 D1:E964 0A 0E 09 58 	.db 10, 14, 9, 88  ;Branches_2_Fast_F
  322 D1:E968 09 0E 12 59 	.db 9, 14, 18, 89  ;Branches_5_Fast_F
  323 D1:E96C 00 0E 0E 14 	.db 0, 14, 14, 20  ;Branches_14_Slow
  324 D1:E970 -  -  -  -  
  325 D1:E970 -  -  -  -  SG_BranchBase2:
  326 D1:E970 00 -  -  -  	.db 0
  327 D1:E971 06 -  -  -  	.db 6
  328 D1:E972 00 0E 2A 5A 	.db 0, 14, 42, 90  ;Branches_1_Slow_O
  329 D1:E976 01 0E 21 5B 	.db 1, 14, 33, 91  ;Branches_2_Slow_O
  330 D1:E97A 02 0E 18 5C 	.db 2, 14, 24, 92  ;Branches_4_Slow_O
  331 D1:E97E 04 0E 06 30 	.db 4, 14, 6, 48  ;Branches_9_Slow_O
  332 D1:E982 04 0A 0F 5D 	.db 4, 10, 15, 93  ;Branches_7_Slow_O
  333 D1:E986 0B 0E 00 0B 	.db 11, 14, 0, 11  ;Branches_10_Fast
  334 D1:E98A -  -  -  -  
  335 D1:E98A -  -  -  -  SG_BranchBase4:
  336 D1:E98A 00 -  -  -  	.db 0
  337 D1:E98B 04 -  -  -  	.db 4
  338 D1:E98C 0D 0E 00 5E 	.db 13, 14, 0, 94  ;Branches_0_Fast_F
  339 D1:E990 07 0E 08 5F 	.db 7, 14, 8, 95  ;Branches_8_Slow_O
  340 D1:E994 12 0E 09 60 	.db 18, 14, 9, 96  ;Branches_9_Fast_F
  341 D1:E998 00 0E 0C 30 	.db 0, 14, 12, 48  ;Branches_9_Slow_O
  342 D1:E99C -  -  -  -  
  343 D1:E99C -  -  -  -  SG_CloudPlatform:
  344 D1:E99C 00 -  -  -  	.db 0
  345 D1:E99D 04 -  -  -  	.db 4
  346 D1:E99E 00 10 00 61 	.db 0, 16, 0, 97  ;Clouds_2_Fast
  347 D1:E9A2 00 10 08 61 	.db 0, 16, 8, 97  ;Clouds_2_Fast
  348 D1:E9A6 00 10 10 61 	.db 0, 16, 16, 97  ;Clouds_2_Fast
  349 D1:E9AA 00 10 18 61 	.db 0, 16, 24, 97  ;Clouds_2_Fast
  350 D1:E9AE -  -  -  -  
  351 D1:E9AE -  -  -  -  SG_DarkGroundChunk:
  352 D1:E9AE 00 -  -  -  	.db 0
  353 D1:E9AF 07 -  -  -  	.db 7
  354 D1:E9B0 11 0C 00 63 	.db 17, 12, 0, 99  ;GroundDirtDark_Fast
  355 D1:E9B4 11 0C 08 63 	.db 17, 12, 8, 99  ;GroundDirtDark_Fast
  356 D1:E9B8 10 0C 10 64 	.db 16, 12, 16, 100  ;GroundDirtDark_Fast_F
  357 D1:E9BC 05 0D 00 65 	.db 5, 13, 0, 101  ;GroundHumpDark_Fast
  358 D1:E9C0 05 0D 08 65 	.db 5, 13, 8, 101  ;GroundHumpDark_Fast
  359 D1:E9C4 04 0D 10 66 	.db 4, 13, 16, 102  ;GroundHumpDark_Fast_F
  360 D1:E9C8 00 0D 0C 66 	.db 0, 13, 12, 102  ;GroundHumpDark_Fast_F
  361 D1:E9CC -  -  -  -  
  362 D1:E9CC -  -  -  -  SG_BGTree1:
  363 D1:E9CC 00 -  -  -  	.db 0
  364 D1:E9CD 08 -  -  -  	.db 8
  365 D1:E9CE 03 15 00 13 	.db 3, 21, 0, 19  ;LeavesDark_Fast
  366 D1:E9D2 1B 10 0B 67 	.db 27, 16, 11, 103  ;Tree_16_Fast
  367 D1:E9D6 0F 0E 0E 68 	.db 15, 14, 14, 104  ;Tree_17_Slow
  368 D1:E9DA 11 0E 09 69 	.db 17, 14, 9, 105  ;Tree_17_Slow_O_F
  369 D1:E9DE 2B 10 0B 67 	.db 43, 16, 11, 103  ;Tree_16_Fast
  370 D1:E9E2 25 0E 08 69 	.db 37, 14, 8, 105  ;Tree_17_Slow_O_F
  371 D1:E9E6 00 15 0C 13 	.db 0, 21, 12, 19  ;LeavesDark_Fast
  372 D1:E9EA 1F 0B 03 08 	.db 31, 11, 3, 8  ;DualLeaf3_Fast
  373 D1:E9EE -  -  -  -  
  374 D1:E9EE -  -  -  -  SG_BGTree2:
  375 D1:E9EE 00 -  -  -  	.db 0
  376 D1:E9EF 08 -  -  -  	.db 8
  377 D1:E9F0 37 0E 0B 6A 	.db 55, 14, 11, 106  ;Tree_18_Slow
  378 D1:E9F4 37 0E 05 68 	.db 55, 14, 5, 104  ;Tree_17_Slow
  379 D1:E9F8 37 0E 06 6B 	.db 55, 14, 6, 107  ;Tree_18_Slow_O_F
  380 D1:E9FC 2A 10 05 6C 	.db 42, 16, 5, 108  ;Tree_16_Fast_F
  381 D1:EA00 1A 10 06 67 	.db 26, 16, 6, 103  ;Tree_16_Fast
  382 D1:EA04 11 0E 06 6A 	.db 17, 14, 6, 106  ;Tree_18_Slow
  383 D1:EA08 00 15 00 13 	.db 0, 21, 0, 19  ;LeavesDark_Fast
  384 D1:EA0C 33 0C 09 0F 	.db 51, 12, 9, 15  ;DualLeaf2_Fast
  385 D1:EA10 -  -  -  -  
  386 D1:EA10 -  -  -  -  SG_Cloud1:
  387 D1:EA10 00 -  -  -  	.db 0
  388 D1:EA11 0D -  -  -  	.db 13
  389 D1:EA12 14 0A 06 6D 	.db 20, 10, 6, 109  ;Clouds_0_Fast
  390 D1:EA16 0D 0E 00 6E 	.db 13, 14, 0, 110  ;Clouds_1_Fast
  391 D1:EA1A 00 0B 07 6F 	.db 0, 11, 7, 111  ;Clouds_3_Fast
  392 D1:EA1E 03 0A 03 70 	.db 3, 10, 3, 112  ;Clouds_4_Fast
  393 D1:EA22 08 10 06 61 	.db 8, 16, 6, 97  ;Clouds_2_Fast
  394 D1:EA26 14 0A 0E 6D 	.db 20, 10, 14, 109  ;Clouds_0_Fast
  395 D1:EA2A 13 0A 14 71 	.db 19, 10, 20, 113  ;Clouds_0_Fast_F
  396 D1:EA2E 0B 0E 1C 72 	.db 11, 14, 28, 114  ;Clouds_1_Fast_F
  397 D1:EA32 03 0A 1B 73 	.db 3, 10, 27, 115  ;Clouds_4_Fast_F
  398 D1:EA36 01 0B 0F 74 	.db 1, 11, 15, 116  ;Clouds_3_Fast_F
  399 D1:EA3A 01 0B 15 6F 	.db 1, 11, 21, 111  ;Clouds_3_Fast
  400 D1:EA3E 06 10 14 61 	.db 6, 16, 20, 97  ;Clouds_2_Fast
  401 D1:EA42 06 10 0C 75 	.db 6, 16, 12, 117  ;Clouds_2_Fast_F
  402 D1:EA46 -  -  -  -  
  403 D1:EA46 -  -  -  -  
  404 D1:EA46 -  -  -  -  
Listing for file "ascent.asm"
  575 D1:EA46 -  -  -  -  #include "generated/Collision_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Collision_Data.txt"
    1 D1:EA46 -  -  -  -  Collision_Data_Frame_Table: 
    2 D1:EA46 A5 EA D1 -  	.dl collision_data_0
    3 D1:EA49 7C EA D1 -  	.dl collision_data_1
    4 D1:EA4C 58 EA D1 -  	.dl collision_data_2
    5 D1:EA4F 52 EA D1 -  	.dl collision_data_3
    6 D1:EA52 -  -  -  -  
    7 D1:EA52 -  -  -  -  
    8 D1:EA52 -  -  -  -  collision_data_3:
    9 D1:EA52 01 -  -  -  	.db 1
   10 D1:EA53 11 12 59 4E 
              40 -  -  -  	.db 17,18,89,78,%01000000
   11 D1:EA58 -  -  -  -  
   12 D1:EA58 -  -  -  -  
   13 D1:EA58 -  -  -  -  collision_data_2:
   14 D1:EA58 07 -  -  -  	.db 7
   15 D1:EA59 1B 0F 54 35 
              80 -  -  -  	.db 27,15,84,53,%10000000
   16 D1:EA5E 3B 0F 7A 5B 
              80 -  -  -  	.db 59,15,122,91,%10000000
   17 D1:EA63 4B 0F 32 13 
              80 -  -  -  	.db 75,15,50,19,%10000000
   18 D1:EA68 6B 0F 5C 3D 
              80 -  -  -  	.db 107,15,92,61,%10000000
   19 D1:EA6D 92 0F 4E 2F 
              80 -  -  -  	.db 146,15,78,47,%10000000
   20 D1:EA72 B8 0F 33 14 
              80 -  -  -  	.db 184,15,51,20,%10000000
   21 D1:EA77 E1 0F 5E 3F 
              80 -  -  -  	.db 225,15,94,63,%10000000
   22 D1:EA7C -  -  -  -  
   23 D1:EA7C -  -  -  -  
   24 D1:EA7C -  -  -  -  collision_data_1:
   25 D1:EA7C 08 -  -  -  	.db 8
   26 D1:EA7D 1C 0F 83 64 
              00 -  -  -  	.db 28,15,131,100,%00000000
   27 D1:EA82 66 0F 5F 40 
              00 -  -  -  	.db 102,15,95,64,%00000000
   28 D1:EA87 91 0F 2D 0E 
              00 -  -  -  	.db 145,15,45,14,%00000000
   29 D1:EA8C 04 0F 30 11 
              80 -  -  -  	.db 4,15,48,17,%10000000
   30 D1:EA91 05 2F 14 0D 
              00 -  -  -  	.db 5,47,20,13,%00000000
   31 D1:EA96 3B 0F 41 22 
              80 -  -  -  	.db 59,15,65,34,%10000000
   32 D1:EA9B A8 0F 4F 30 
              80 -  -  -  	.db 168,15,79,48,%10000000
   33 D1:EAA0 DE 0F 5A 3B 
              80 -  -  -  	.db 222,15,90,59,%10000000
   34 D1:EAA5 -  -  -  -  
   35 D1:EAA5 -  -  -  -  
   36 D1:EAA5 -  -  -  -  collision_data_0:
   37 D1:EAA5 08 -  -  -  	.db 8
   38 D1:EAA6 18 01 9F 00 
              00 -  -  -  	.db 24,1,159,0,%00000000
   39 D1:EAAB 54 0F 24 05 
              00 -  -  -  	.db 84,15,36,5,%00000000
   40 D1:EAB0 A7 0F 49 2A 
              00 -  -  -  	.db 167,15,73,42,%00000000
   41 D1:EAB5 70 0F 8A 6B 
              00 -  -  -  	.db 112,15,138,107,%00000000
   42 D1:EABA 4A 0F 62 43 
              80 -  -  -  	.db 74,15,98,67,%10000000
   43 D1:EABF A2 2F 94 8D 
              00 -  -  -  	.db 162,47,148,141,%00000000
   44 D1:EAC4 D3 0F 61 42 
              80 -  -  -  	.db 211,15,97,66,%10000000
   45 D1:EAC9 91 0F 6B 4C 
              80 -  -  -  	.db 145,15,107,76,%10000000
   46 D1:EACE -  -  -  -  
   47 D1:EACE 00 -  -  -  	.db 0 ;Terminate Data
Listing for file "ascent.asm"
  576 D1:EACF -  -  -  -  #include "generated/Animation_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Animation_Data.txt"
    1 D1:EACF -  -  -  -  position_animation_data:
    2 D1:EACF 29 -  -  -  	.db 41
    3 D1:EAD0 1A E6 D1 -  	.dl SG_GroundGrass + 20
    4 D1:EAD3 F0 C0 D1 -  	.dl sine_2_1_3
    5 D1:EAD6 02 -  -  -  	.db 2
    6 D1:EAD7 28 E6 D1 -  	.dl SG_GroundGrass + 34
    7 D1:EADA EB C0 D1 -  	.dl sine_2_1_2
    8 D1:EADD 04 -  -  -  	.db 4
    9 D1:EADE 32 E6 D1 -  	.dl SG_GroundGrass + 44
   10 D1:EAE1 04 C1 D1 -  	.dl sine_4_1_3
   11 D1:EAE4 19 -  -  -  	.db 25
   12 D1:EAE5 3C E6 D1 -  	.dl SG_GroundGrass + 54
   13 D1:EAE8 13 C1 D1 -  	.dl sine_8_1_2
   14 D1:EAEB 0A -  -  -  	.db 10
   15 D1:EAEC 5A E6 D1 -  	.dl SG_Branch3 + 18
   16 D1:EAEF E6 C0 D1 -  	.dl sine_2_1_1
   17 D1:EAF2 05 -  -  -  	.db 5
   18 D1:EAF3 A2 E6 D1 -  	.dl SG_Branch7 + 60
   19 D1:EAF6 F5 C0 D1 -  	.dl sine_2_1_4
   20 D1:EAF9 11 -  -  -  	.db 17
   21 D1:EAFA A8 E6 D1 -  	.dl SG_Branch7 + 66
   22 D1:EAFD FF C0 D1 -  	.dl sine_4_1_2
   23 D1:EB00 10 -  -  -  	.db 16
   24 D1:EB01 AC E6 D1 -  	.dl SG_Branch7 + 70
   25 D1:EB04 DC C0 D1 -  	.dl sine_1_1_3
   26 D1:EB07 10 -  -  -  	.db 16
   27 D1:EB08 B0 E6 D1 -  	.dl SG_Branch7 + 74
   28 D1:EB0B FA C0 D1 -  	.dl sine_4_1_1
   29 D1:EB0E 08 -  -  -  	.db 8
   30 D1:EB0F BA E6 D1 -  	.dl SG_Branch4 + 2
   31 D1:EB12 EF C0 D1 -  	.dl sine_2_3_3
   32 D1:EB15 3F -  -  -  	.db 63
   33 D1:EB16 C0 E6 D1 -  	.dl SG_Branch4 + 8
   34 D1:EB19 FA C0 D1 -  	.dl sine_4_1_1
   35 D1:EB1C 0F -  -  -  	.db 15
   36 D1:EB1D CC E6 D1 -  	.dl SG_Branch4 + 20
   37 D1:EB20 FA C0 D1 -  	.dl sine_4_1_1
   38 D1:EB23 06 -  -  -  	.db 6
   39 D1:EB24 1C E7 D1 -  	.dl SG_Branch5 + 14
   40 D1:EB27 E6 C0 D1 -  	.dl sine_2_1_1
   41 D1:EB2A 09 -  -  -  	.db 9
   42 D1:EB2B 46 E7 D1 -  	.dl SG_Branch5 + 56
   43 D1:EB2E F0 C0 D1 -  	.dl sine_2_1_3
   44 D1:EB31 04 -  -  -  	.db 4
   45 D1:EB32 62 E7 D1 -  	.dl SG_Branch6 + 6
   46 D1:EB35 F0 C0 D1 -  	.dl sine_2_1_3
   47 D1:EB38 00 -  -  -  	.db 0
   48 D1:EB39 7A E7 D1 -  	.dl SG_Branch6 + 30
   49 D1:EB3C FA C0 D1 -  	.dl sine_4_1_1
   50 D1:EB3F 0B -  -  -  	.db 11
   51 D1:EB40 8A E7 D1 -  	.dl SG_Branch6 + 46
   52 D1:EB43 FF C0 D1 -  	.dl sine_4_1_2
   53 D1:EB46 0C -  -  -  	.db 12
   54 D1:EB47 90 E7 D1 -  	.dl SG_Branch6 + 52
   55 D1:EB4A E6 C0 D1 -  	.dl sine_2_1_1
   56 D1:EB4D 1C -  -  -  	.db 28
   57 D1:EB4E 94 E7 D1 -  	.dl SG_Branch2 + 2
   58 D1:EB51 FA C0 D1 -  	.dl sine_4_1_1
   59 D1:EB54 00 -  -  -  	.db 0
   60 D1:EB55 98 E7 D1 -  	.dl SG_Branch2 + 6
   61 D1:EB58 EB C0 D1 -  	.dl sine_2_1_2
   62 D1:EB5B 01 -  -  -  	.db 1
   63 D1:EB5C DA E7 D1 -  	.dl SG_Branch2 + 72
   64 D1:EB5F F0 C0 D1 -  	.dl sine_2_1_3
   65 D1:EB62 0C -  -  -  	.db 12
   66 D1:EB63 D6 E8 D1 -  	.dl SG_Branch1 + 26
   67 D1:EB66 04 C1 D1 -  	.dl sine_4_1_3
   68 D1:EB69 00 -  -  -  	.db 0
   69 D1:EB6A EE E8 D1 -  	.dl SG_Branch1 + 50
   70 D1:EB6D FF C0 D1 -  	.dl sine_4_1_2
   71 D1:EB70 13 -  -  -  	.db 19
   72 D1:EB71 F8 E8 D1 -  	.dl SG_Branch1 + 60
   73 D1:EB74 D2 C0 D1 -  	.dl sine_1_1_1
   74 D1:EB77 09 -  -  -  	.db 9
   75 D1:EB78 12 E9 D1 -  	.dl SG_Vines6 + 6
   76 D1:EB7B EA C0 D1 -  	.dl sine_2_3_2
   77 D1:EB7E 0F -  -  -  	.db 15
   78 D1:EB7F 16 E9 D1 -  	.dl SG_Vines6 + 10
   79 D1:EB82 EA C0 D1 -  	.dl sine_2_3_2
   80 D1:EB85 1F -  -  -  	.db 31
   81 D1:EB86 1A E9 D1 -  	.dl SG_Vines6 + 14
   82 D1:EB89 EA C0 D1 -  	.dl sine_2_3_2
   83 D1:EB8C 26 -  -  -  	.db 38
   84 D1:EB8D 1E E9 D1 -  	.dl SG_Vines6 + 18
   85 D1:EB90 EA C0 D1 -  	.dl sine_2_3_2
   86 D1:EB93 28 -  -  -  	.db 40
   87 D1:EB94 24 E9 D1 -  	.dl SG_Vines7 + 2
   88 D1:EB97 EA C0 D1 -  	.dl sine_2_3_2
   89 D1:EB9A 21 -  -  -  	.db 33
   90 D1:EB9B 28 E9 D1 -  	.dl SG_Vines7 + 6
   91 D1:EB9E EA C0 D1 -  	.dl sine_2_3_2
   92 D1:EBA1 1F -  -  -  	.db 31
   93 D1:EBA2 2C E9 D1 -  	.dl SG_Vines7 + 10
   94 D1:EBA5 EA C0 D1 -  	.dl sine_2_3_2
   95 D1:EBA8 18 -  -  -  	.db 24
   96 D1:EBA9 30 E9 D1 -  	.dl SG_Vines7 + 14
   97 D1:EBAC EB C0 D1 -  	.dl sine_2_1_2
   98 D1:EBAF 0F -  -  -  	.db 15
   99 D1:EBB0 3A E9 D1 -  	.dl SG_Vines5 + 2
  100 D1:EBB3 0E C1 D1 -  	.dl sine_8_1_1
  101 D1:EBB6 00 -  -  -  	.db 0
  102 D1:EBB7 3E E9 D1 -  	.dl SG_Vines5 + 6
  103 D1:EBBA 13 C1 D1 -  	.dl sine_8_1_2
  104 D1:EBBD 11 -  -  -  	.db 17
  105 D1:EBBE 42 E9 D1 -  	.dl SG_Vines5 + 10
  106 D1:EBC1 18 C1 D1 -  	.dl sine_8_1_3
  107 D1:EBC4 21 -  -  -  	.db 33
  108 D1:EBC5 46 E9 D1 -  	.dl SG_Vines5 + 14
  109 D1:EBC8 1D C1 D1 -  	.dl sine_8_1_4
  110 D1:EBCB 28 -  -  -  	.db 40
  111 D1:EBCC 4A E9 D1 -  	.dl SG_Vines5 + 18
  112 D1:EBCF 0E C1 D1 -  	.dl sine_8_1_1
  113 D1:EBD2 2A -  -  -  	.db 42
  114 D1:EBD3 4E E9 D1 -  	.dl SG_Vines5 + 22
  115 D1:EBD6 13 C1 D1 -  	.dl sine_8_1_2
  116 D1:EBD9 22 -  -  -  	.db 34
  117 D1:EBDA 52 E9 D1 -  	.dl SG_Vines5 + 26
  118 D1:EBDD 18 C1 D1 -  	.dl sine_8_1_3
  119 D1:EBE0 21 -  -  -  	.db 33
  120 D1:EBE1 56 E9 D1 -  	.dl SG_Vines5 + 30
  121 D1:EBE4 1D C1 D1 -  	.dl sine_8_1_4
  122 D1:EBE7 1A -  -  -  	.db 26
  123 D1:EBE8 5A E9 D1 -  	.dl SG_Vines5 + 34
  124 D1:EBEB 0E C1 D1 -  	.dl sine_8_1_1
  125 D1:EBEE 0C -  -  -  	.db 12
  126 D1:EBEF -  -  -  -  
  127 D1:EBEF -  -  -  -  
  128 D1:EBEF -  -  -  -  
  129 D1:EBEF -  -  -  -  sprite_animation_data:
  130 D1:EBEF 03 -  -  -  	.db 3
  131 D1:EBF0 6B C1 D1 -  	.dl lin_4_7_4
  132 D1:EBF3 0E -  -  -  	.db 14
  133 D1:EBF4 0F -  -  -  	.db 15
  134 D1:EBF5 10 -  -  -  	.db 16
  135 D1:EBF6 11 -  -  -  	.db 17
  136 D1:EBF7 0E -  -  -  	.db 14
  137 D1:EBF8 0F -  -  -  	.db 15
  138 D1:EBF9 0E -  -  -  	.db 14
  139 D1:EBFA 11 -  -  -  	.db 17
  140 D1:EBFB 61 E6 D1 -  	.dl SG_Branch3 + 25
  141 D1:EBFE 61 C1 D1 -  	.dl lin_4_7_2
  142 D1:EC01 4B -  -  -  	.db 75
  143 D1:EC02 4A -  -  -  	.db 74
  144 D1:EC03 4A -  -  -  	.db 74
  145 D1:EC04 4B -  -  -  	.db 75
  146 D1:EC05 4B -  -  -  	.db 75
  147 D1:EC06 4B -  -  -  	.db 75
  148 D1:EC07 4A -  -  -  	.db 74
  149 D1:EC08 4B -  -  -  	.db 75
  150 D1:EC09 07 E9 D1 -  	.dl SG_Vines2 + 13
  151 D1:EC0C 61 C1 D1 -  	.dl lin_4_7_2
  152 D1:EC0F 0F -  -  -  	.db 15
  153 D1:EC10 0F -  -  -  	.db 15
  154 D1:EC11 0E -  -  -  	.db 14
  155 D1:EC12 11 -  -  -  	.db 17
  156 D1:EC13 10 -  -  -  	.db 16
  157 D1:EC14 0E -  -  -  	.db 14
  158 D1:EC15 0F -  -  -  	.db 15
  159 D1:EC16 11 -  -  -  	.db 17
  160 D1:EC17 0B E9 D1 -  	.dl SG_Vines2 + 17
Listing for file "ascent.asm"
  577 D1:EC1A -  -  -  -  
  578 D1:EC1A -  -  -  -  ;#include "testing/SpriteGroups.txt"
  579 D1:EC1A -  -  -  -  ;#include "TestingSpriteData.txt"
  580 D1:EC1A -  -  -  -  ;#include "TestGeneratedSpriteData.txt"
  581 D1:EC1A -  -  -  -  ;#include "Sprite_Data.txt"
  582 D1:EC1A -  -  -  -  ;#include "FG_Data.txt"
  583 D1:EC1A -  -  -  -  ;#include "MG_Data.txt"
  584 D1:EC1A -  -  -  -  ;#include "BG_Data.txt"
  585 D1:EC1A -  -  -  -  ;#include "Palette_Setup.txt"
  586 D1:EC1A -  -  -  -  ;#include "Equates.txt"
  587 D1:EC1A -  -  -  -  ;#include "Decompress_Calls.txt"
  588 D1:EC1A -  -  -  -  ;#include "Sprite_Tables.txt"
  589 D1:EC1A -  -  -  -  ;#include "TestingBGData.txt"
  590 D1:EC1A -  -  -  -  ;#include "TestingFGData.txt"
  591 D1:EC1A -  -  -  -  
  592 D1:EC1A -  -  -  -  
