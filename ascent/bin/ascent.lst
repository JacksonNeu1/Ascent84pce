    1 00:0000 -  -  -  -  
    2 00:0000 -  -  -  -  #include "includes\ti84pce.inc"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\includes\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "ascent.asm"
    3 00:0000 -  -  -  -  
    4 00:0000 -  -  -  -   .assume ADL=1
    5 00:0000 -  -  -  -   .org userMem-2
    6 D1:A87F EF 7B -  -   .db tExtTok,tAsm84CeCmp
    7 D1:A881 -  -  -  -  
    8 D1:A881 -  -  -  -  
    9 D1:A881 -  -  -  -  
   10 D1:A881 -  -  -  -  ;0E30000h + 0200h
   11 D1:A881 -  -  -  -  
   12 D1:A881 CD 28 08 02 	call _homeup
   13 D1:A885 CD 10 08 02 	call _ClrScrnFull
   14 D1:A889 -  -  -  -  
   15 D1:A889 CD 48 08 02 	call _RunIndicOff		; turn off run indicator
   16 D1:A88D F3 -  -  -  	di			
   17 D1:A88E -  -  -  -  	
   18 D1:A88E -  -  -  -  	
   19 D1:A88E CD C5 D3 D1 	call setup_palette_1
   20 D1:A892 -  -  -  -  
   21 D1:A892 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255
   22 D1:A896 3E 25 -  -  	ld	a,lcdBpp4
   23 D1:A898 32 18 00 E3 	ld (mpLcdCtrl),a	
   24 D1:A89C -  -  -  -  
   25 D1:A89C -  -  -  -  
   26 D1:A89C -  -  -  -  
   27 D1:A89C -  -  -  -  
   28 D1:A89C -  -  -  -  	;call sdcomp_set_fast
   29 D1:A89C -  -  -  -  	;call sdcomp_set_flip
   30 D1:A89C -  -  -  -  	;call sdcomp_reset_offset
   31 D1:A89C -  -  -  -  	;ld hl, Tree_5 
   32 D1:A89C -  -  -  -  	;ld de, Tree_5_Fast_F_0
   33 D1:A89C -  -  -  -  	;call sdcomp_set_2bpc
   34 D1:A89C -  -  -  -  	;call sprite_decompress
   35 D1:A89C -  -  -  -  	
   36 D1:A89C -  -  -  -  	;call sdcomp_set_fast
   37 D1:A89C -  -  -  -  	;call sdcomp_reset_flip
   38 D1:A89C -  -  -  -  	;call sdcomp_reset_offset
   39 D1:A89C -  -  -  -  	;ld hl, Moss_0 
   40 D1:A89C -  -  -  -  	;ld de, Moss_0_Fast_0
   41 D1:A89C -  -  -  -  	;call sprite_decompress
   42 D1:A89C -  -  -  -  	
   43 D1:A89C -  -  -  -  	;call prgmpause
   44 D1:A89C -  -  -  -  	;call prgmpause
   45 D1:A89C -  -  -  -  
   46 D1:A89C 21 00 00 00 	ld hl,0
   47 D1:A8A0 22 D2 AB D1 	ld (cam_pos),hl
   48 D1:A8A4 22 D5 AB D1 	ld (bg_cam_pos),hl
   49 D1:A8A8 -  -  -  -  	
   50 D1:A8A8 -  -  -  -  	
   51 D1:A8A8 3E 02 -  -  	ld a,%00000010;disable, 32768hz
   52 D1:A8AA 32 30 00 F2 	ld ($F20030),a	
   53 D1:A8AE -  -  -  -  	
   54 D1:A8AE CD 91 B8 D1 	call setup_decompress_queue
   55 D1:A8B2 -  -  -  -  	
   56 D1:A8B2 -  -  -  -  	;Decompress sprites in preframes for setup
   57 D1:A8B2 21 F7 CA D1 	ld hl,decompress_frame_up_pre2 
   58 D1:A8B6 CD 97 B9 D1 	call cfdc_direct_add_decompress_frame
   59 D1:A8BA CD DE B8 D1 	call continue_decompressions ;Run decompression (Will finish as timer has not started)
   60 D1:A8BE 21 29 CB D1 	ld hl,decompress_frame_up_pre1
   61 D1:A8C2 CD 97 B9 D1 	call cfdc_direct_add_decompress_frame
   62 D1:A8C6 CD DE B8 D1 	call continue_decompressions ;Run decompression (Will finish as timer has not started)
   63 D1:A8CA -  -  -  -  	
   64 D1:A8CA -  -  -  -  	;call draw_fg
   65 D1:A8CA -  -  -  -  	
   66 D1:A8CA 3E 00 -  -  	ld a,0
   67 D1:A8CC CD 89 B9 D1 	call cfdc_cam_move_up ;need to skip here for frame 0
   68 D1:A8D0 -  -  -  -  	
   69 D1:A8D0 -  -  -  -  	;call prgmpause
   70 D1:A8D0 -  -  -  -  
   71 D1:A8D0 CD DE B8 D1 	call continue_decompressions
   72 D1:A8D4 -  -  -  -  	
   73 D1:A8D4 -  -  -  -  	;call prgmpause
   74 D1:A8D4 00 -  -  -  	nop ;This needs to be here for some reason
   75 D1:A8D5 -  -  -  -  ;	call decompress_calls
   76 D1:A8D5 -  -  -  -  	
   77 D1:A8D5 -  -  -  -  
   78 D1:A8D5 -  -  -  -  	
   79 D1:A8D5 -  -  -  -  	;gen purp timers
   80 D1:A8D5 -  -  -  -  		; 76543210	
   81 D1:A8D5 3E 03 -  -  	ld a,%00000011;enable, 32768hz
   82 D1:A8D7 32 30 00 F2 	ld ($F20030),a
   83 D1:A8DB -  -  -  -  	;	  fedcba98
   84 D1:A8DB 3E 02 -  -  	ld a,%00000010;count up
   85 D1:A8DD 32 31 00 F2 	ld ($F20031),a
   86 D1:A8E1 -  -  -  -  	
   87 D1:A8E1 21 00 2C D5 	ld hl,vRam + (160*240*2)
   88 D1:A8E5 22 D8 AB D1 	ld (draw_buffer),hl
   89 D1:A8E9 21 00 C2 D5 	ld hl,vRam + (160*240*3)
   90 D1:A8ED 22 10 00 E3 	ld (mpLcdBase),hl
   91 D1:A8F1 -  -  -  -  	
   92 D1:A8F1 -  -  -  -  	
   93 D1:A8F1 21 00 E3 00 	ld hl,$00E300
   94 D1:A8F5 22 23 BE D1 	ld (player_x_pos),hl 
   95 D1:A8F9 21 00 EE 00 	ld hl,$00EE00
   96 D1:A8FD 22 26 BE D1 	ld (player_y_pos),hl 
   97 D1:A901 -  -  -  -  	
   98 D1:A901 -  -  -  -  
   99 D1:A901 -  -  -  -  	;ld hl,BG_buffer+(160*5)
  100 D1:A901 -  -  -  -  	;ld (dbgl_vram_line_start),hl
  101 D1:A901 -  -  -  -  
  102 D1:A901 -  -  -  -  	;ld hl,BG_Data_1
  103 D1:A901 -  -  -  -  	;ld a,10
  104 D1:A901 -  -  -  -  	;call draw_bg_line
  105 D1:A901 -  -  -  -  	
  106 D1:A901 -  -  -  -  	
  107 D1:A901 -  -  -  -  	;call prgmpause
  108 D1:A901 -  -  -  -  
  109 D1:A901 -  -  -  -  	;call draw_mg
  110 D1:A901 -  -  -  -  
  111 D1:A901 CD 2B AD D1 	call setup_bg ;after initial decompressions and cam setup
  112 D1:A905 -  -  -  -  	;call prgmpause
  113 D1:A905 -  -  -  -  	;call prgmpause
  114 D1:A905 -  -  -  -  main_loop:
  115 D1:A905 -  -  -  -  
  116 D1:A905 -  -  -  -  	
  117 D1:A905 -  -  -  -  
  118 D1:A905 -  -  -  -  	;clear timer
  119 D1:A905 3E 00 -  -  	ld a,0
  120 D1:A907 32 00 00 F2 	ld ($F20000),a;32768hz
  121 D1:A90B 32 01 00 F2 	ld ($F20001),a;128hz
  122 D1:A90F 32 02 00 F2 	ld ($F20002),a;0.5hz
  123 D1:A913 32 03 00 F2 	ld ($F20003),a
  124 D1:A917 -  -  -  -  	
  125 D1:A917 -  -  -  -  	;Instructions here 
  126 D1:A917 -  -  -  -  	
  127 D1:A917 -  -  -  -  	
  128 D1:A917 -  -  -  -  	;call input_cam_up
  129 D1:A917 C3 B7 B9 D1 	jp get_inputs
  130 D1:A91B -  -  -  -  get_inputs_return:
  131 D1:A91B -  -  -  -  	;call move_bg Draw BG calls MoveBg
  132 D1:A91B -  -  -  -  	;call player_move_debug
  133 D1:A91B CD 83 BA D1 	call player_update
  134 D1:A91F CD C0 BC D1 	call check_collisions
  135 D1:A923 -  -  -  -  	
  136 D1:A923 CD B3 BE D1 	call update_sine_vals
  137 D1:A927 3A 86 C0 D1 	ld a,(lin_4_7_1)
  138 D1:A92B -  -  -  -  	;call write_a_to_ram
  139 D1:A92B -  -  -  -  	
  140 D1:A92B CD 10 C2 D1 	call update_animations
  141 D1:A92F -  -  -  -  	
  142 D1:A92F -  -  -  -  	
  143 D1:A92F CD 3B AC D1 	call draw_bg
  144 D1:A933 -  -  -  -  
  145 D1:A933 -  -  -  -  	
  146 D1:A933 -  -  -  -  	
  147 D1:A933 -  -  -  -  	;TEsting
  148 D1:A933 21 00 00 00 	ld hl,0
  149 D1:A937 3A 00 00 F2 	ld a,($F20000);32768hz
  150 D1:A93B 6F -  -  -  	ld l,a
  151 D1:A93C 3A 01 00 F2 	ld a,($F20001);128hz 
  152 D1:A940 67 -  -  -  	ld h,a
  153 D1:A941 CB 3C -  -  	srl h ;div by 8
  154 D1:A943 CB 1D -  -  	rr l 
  155 D1:A945 CB 3C -  -  	srl h
  156 D1:A947 CB 1D -  -  	rr l 
  157 D1:A949 CB 3C -  -  	srl h
  158 D1:A94B CB 1D -  -  	rr l 
  159 D1:A94D 7D -  -  -  	ld a,l
  160 D1:A94E 32 DF AB D1 	ld (draw_bg_time),a
  161 D1:A952 -  -  -  -  	
  162 D1:A952 -  -  -  -  	;TEST CLEAR BUFFER
  163 D1:A952 -  -  -  -  	;ld hl,BG_buffer
  164 D1:A952 -  -  -  -  	;ld de,(draw_buffer)
  165 D1:A952 -  -  -  -  	;ld bc, 160*240
  166 D1:A952 -  -  -  -  	;ldir
  167 D1:A952 -  -  -  -  	
  168 D1:A952 CD 43 B5 D1 	call draw_mg
  169 D1:A956 -  -  -  -  	
  170 D1:A956 CD 61 B5 D1 	call draw_mg2
  171 D1:A95A -  -  -  -  	
  172 D1:A95A -  -  -  -  	
  173 D1:A95A CD 02 BC D1 	call player_draw 
  174 D1:A95E -  -  -  -  	
  175 D1:A95E -  -  -  -  	;TEsting
  176 D1:A95E 21 00 00 00 	ld hl,0
  177 D1:A962 3A 00 00 F2 	ld a,($F20000);32768hz
  178 D1:A966 6F -  -  -  	ld l,a
  179 D1:A967 3A 01 00 F2 	ld a,($F20001);128hz 
  180 D1:A96B 67 -  -  -  	ld h,a
  181 D1:A96C CB 3C -  -  	srl h ;div by 8
  182 D1:A96E CB 1D -  -  	rr l 
  183 D1:A970 CB 3C -  -  	srl h
  184 D1:A972 CB 1D -  -  	rr l 
  185 D1:A974 CB 3C -  -  	srl h
  186 D1:A976 CB 1D -  -  	rr l 
  187 D1:A978 7D -  -  -  	ld a,l
  188 D1:A979 32 E0 AB D1 	ld (draw_mg_time),a
  189 D1:A97D -  -  -  -  	
  190 D1:A97D CD 7F B5 D1 	call draw_fg
  191 D1:A981 -  -  -  -  	;Leaves_4_Slow_1 has issue
  192 D1:A981 -  -  -  -  	;Need to fix indexing of decompress segments
  193 D1:A981 -  -  -  -  	
  194 D1:A981 -  -  -  -  	;Sprite groups must all use the same load index of a given sprite, as they pull from same data
  195 D1:A981 -  -  -  -  	
  196 D1:A981 -  -  -  -  	
  197 D1:A981 -  -  -  -  	
  198 D1:A981 -  -  -  -  	;TEsting
  199 D1:A981 21 00 00 00 	ld hl,0
  200 D1:A985 3A 00 00 F2 	ld a,($F20000);32768hz
  201 D1:A989 6F -  -  -  	ld l,a
  202 D1:A98A 3A 01 00 F2 	ld a,($F20001);128hz 
  203 D1:A98E 67 -  -  -  	ld h,a
  204 D1:A98F CB 3C -  -  	srl h ;div by 8
  205 D1:A991 CB 1D -  -  	rr l 
  206 D1:A993 CB 3C -  -  	srl h
  207 D1:A995 CB 1D -  -  	rr l 
  208 D1:A997 CB 3C -  -  	srl h
  209 D1:A999 CB 1D -  -  	rr l 
  210 D1:A99B 7D -  -  -  	ld a,l
  211 D1:A99C 32 E1 AB D1 	ld (draw_fg_time),a
  212 D1:A9A0 -  -  -  -  	
  213 D1:A9A0 21 00 00 00 	ld hl,0
  214 D1:A9A4 -  -  -  -  	
  215 D1:A9A4 -  -  -  -  	; for debug longest frame draw time
  216 D1:A9A4 3A 00 00 F2 	ld a,($F20000)
  217 D1:A9A8 6F -  -  -  	ld l,a
  218 D1:A9A9 3A 01 00 F2 	ld a,($F20001);128hz 
  219 D1:A9AD 67 -  -  -  	ld h,a
  220 D1:A9AE E5 -  -  -  	push hl
  221 D1:A9AF ED 4B E3 AB 
              D1 -  -  -  	ld bc,(longestFrame)
  222 D1:A9B4 ED 42 -  -  	sbc hl,bc 
  223 D1:A9B6 DA C8 A9 D1 	jp c,longest_frame_skip
  224 D1:A9BA -  -  -  -  	
  225 D1:A9BA E1 -  -  -  	pop hl 
  226 D1:A9BB E5 -  -  -  	push hl 
  227 D1:A9BC 22 E3 AB D1 	ld (longestFrame),hl 
  228 D1:A9C0 2A D2 AB D1 	ld hl,(cam_pos)
  229 D1:A9C4 22 E6 AB D1 	ld (longestFramePos),hl
  230 D1:A9C8 -  -  -  -  longest_frame_skip:
  231 D1:A9C8 E1 -  -  -  	pop hl 
  232 D1:A9C9 -  -  -  -  	
  233 D1:A9C9 -  -  -  -  	;Add to frame counter
  234 D1:A9C9 2A EC AB D1 	ld hl,(frameCount)
  235 D1:A9CD 23 -  -  -  	inc hl
  236 D1:A9CE 22 EC AB D1 	ld (frameCount),hl
  237 D1:A9D2 -  -  -  -  	
  238 D1:A9D2 -  -  -  -  
  239 D1:A9D2 -  -  -  -  	
  240 D1:A9D2 -  -  -  -  	;check if lcd has drawn first frame
  241 D1:A9D2 -  -  -  -  
  242 D1:A9D2 CD 6E B9 D1 	call check_for_decompress_calls
  243 D1:A9D6 -  -  -  -  	;Sprite decompression will occur here
  244 D1:A9D6 CD DE B8 D1 	call continue_decompressions
  245 D1:A9DA -  -  -  -  	
  246 D1:A9DA -  -  -  -  	;TEsting
  247 D1:A9DA 21 00 00 00 	ld hl,0
  248 D1:A9DE 3A 00 00 F2 	ld a,($F20000);32768hz
  249 D1:A9E2 6F -  -  -  	ld l,a
  250 D1:A9E3 3A 01 00 F2 	ld a,($F20001);128hz 
  251 D1:A9E7 67 -  -  -  	ld h,a
  252 D1:A9E8 CB 3C -  -  	srl h ;div by 4
  253 D1:A9EA CB 1D -  -  	rr l 
  254 D1:A9EC CB 3C -  -  	srl h
  255 D1:A9EE CB 1D -  -  	rr l 
  256 D1:A9F0 CB 3C -  -  	srl h
  257 D1:A9F2 CB 1D -  -  	rr l 
  258 D1:A9F4 7D -  -  -  	ld a,l
  259 D1:A9F5 32 E2 AB D1 	ld (decompress_time),a
  260 D1:A9F9 -  -  -  -  
  261 D1:A9F9 -  -  -  -  
  262 D1:A9F9 -  -  -  -  	
  263 D1:A9F9 -  -  -  -  
  264 D1:A9F9 -  -  -  -  	;Draw time bar at top of screen 
  265 D1:A9F9 2A D8 AB D1 	ld hl, (draw_buffer)
  266 D1:A9FD 01 00 00 00 	ld bc,0 
  267 D1:AA01 3A E2 AB D1 	ld a,(decompress_time)
  268 D1:AA05 4F -  -  -  	ld c,a 
  269 D1:AA06 3E 55 -  -  	ld a, $55
  270 D1:AA08 CD E0 10 02 	call _MemSet
  271 D1:AA0C -  -  -  -  	
  272 D1:AA0C 2A D8 AB D1 	ld hl, (draw_buffer)
  273 D1:AA10 01 00 00 00 	ld bc,0 
  274 D1:AA14 3A E1 AB D1 	ld a,(draw_fg_time)
  275 D1:AA18 4F -  -  -  	ld c,a 
  276 D1:AA19 3E 44 -  -  	ld a, $44
  277 D1:AA1B CD E0 10 02 	call _MemSet
  278 D1:AA1F -  -  -  -  	
  279 D1:AA1F 2A D8 AB D1 	ld hl, (draw_buffer)
  280 D1:AA23 01 00 00 00 	ld bc,0 
  281 D1:AA27 3A E0 AB D1 	ld a,(draw_mg_time)
  282 D1:AA2B 4F -  -  -  	ld c,a 
  283 D1:AA2C 3E 33 -  -  	ld a, $33
  284 D1:AA2E CD E0 10 02 	call _MemSet
  285 D1:AA32 -  -  -  -  
  286 D1:AA32 2A D8 AB D1 	ld hl, (draw_buffer)
  287 D1:AA36 01 00 00 00 	ld bc,0 
  288 D1:AA3A 3A DF AB D1 	ld a,(draw_bg_time)
  289 D1:AA3E 4F -  -  -  	ld c,a 
  290 D1:AA3F 3E 22 -  -  	ld a, $22
  291 D1:AA41 CD E0 10 02 	call _MemSet
  292 D1:AA45 -  -  -  -  	
  293 D1:AA45 -  -  -  -  	
  294 D1:AA45 -  -  -  -  	
  295 D1:AA45 2A D8 AB D1 	ld hl, (draw_buffer)
  296 D1:AA49 01 88 00 00 	ld bc, 136  ; =1000/4 /2 for 2pix/bit 
  297 D1:AA4D 09 -  -  -  	add hl,bc 
  298 D1:AA4E 3E 55 -  -  	ld a,$55
  299 D1:AA50 77 -  -  -  	ld (hl),a 
  300 D1:AA51 -  -  -  -  	
  301 D1:AA51 -  -  -  -  	
  302 D1:AA51 -  -  -  -  	;Again for thick line
  303 D1:AA51 -  -  -  -  	
  304 D1:AA51 2A D8 AB D1 	ld hl, (draw_buffer)
  305 D1:AA55 01 A0 00 00 	ld bc,160
  306 D1:AA59 09 -  -  -  	add hl,bc 
  307 D1:AA5A 3A E2 AB D1 	ld a,(decompress_time)
  308 D1:AA5E 4F -  -  -  	ld c,a 
  309 D1:AA5F 3E 55 -  -  	ld a, $55
  310 D1:AA61 CD E0 10 02 	call _MemSet
  311 D1:AA65 -  -  -  -  	
  312 D1:AA65 2A D8 AB D1 	ld hl, (draw_buffer)
  313 D1:AA69 01 A0 00 00 	ld bc,160
  314 D1:AA6D 09 -  -  -  	add hl,bc 
  315 D1:AA6E 3A E1 AB D1 	ld a,(draw_fg_time)
  316 D1:AA72 4F -  -  -  	ld c,a 
  317 D1:AA73 3E 44 -  -  	ld a, $44
  318 D1:AA75 CD E0 10 02 	call _MemSet
  319 D1:AA79 -  -  -  -  	
  320 D1:AA79 2A D8 AB D1 	ld hl, (draw_buffer)
  321 D1:AA7D 01 A0 00 00 	ld bc,160
  322 D1:AA81 09 -  -  -  	add hl,bc
  323 D1:AA82 3A E0 AB D1 	ld a,(draw_mg_time)
  324 D1:AA86 4F -  -  -  	ld c,a 
  325 D1:AA87 3E 33 -  -  	ld a, $33
  326 D1:AA89 CD E0 10 02 	call _MemSet
  327 D1:AA8D -  -  -  -  
  328 D1:AA8D 2A D8 AB D1 	ld hl, (draw_buffer)
  329 D1:AA91 01 A0 00 00 	ld bc,160
  330 D1:AA95 09 -  -  -  	add hl,bc
  331 D1:AA96 3A DF AB D1 	ld a,(draw_bg_time)
  332 D1:AA9A 4F -  -  -  	ld c,a 
  333 D1:AA9B 3E 22 -  -  	ld a, $22
  334 D1:AA9D CD E0 10 02 	call _MemSet
  335 D1:AAA1 -  -  -  -  	
  336 D1:AAA1 2A D8 AB D1 	ld hl, (draw_buffer)
  337 D1:AAA5 01 28 01 00 	ld bc,296
  338 D1:AAA9 09 -  -  -  	add hl,bc 
  339 D1:AAAA 3E 55 -  -  	ld a,$55
  340 D1:AAAC 77 -  -  -  	ld (hl),a 
  341 D1:AAAD -  -  -  -  	
  342 D1:AAAD -  -  -  -  	
  343 D1:AAAD -  -  -  -  
  344 D1:AAAD -  -  -  -  
  345 D1:AAAD -  -  -  -  	
  346 D1:AAAD -  -  -  -  
  347 D1:AAAD -  -  -  -  	;swap draw buffers
  348 D1:AAAD 2A 10 00 E3 	ld hl,(mpLcdBase)
  349 D1:AAB1 ED 5B D8 AB 
              D1 -  -  -  	ld de,(draw_buffer)
  350 D1:AAB6 ED 53 10 00 
              E3 -  -  -  	ld (mpLcdBase),de
  351 D1:AABB 22 D8 AB D1 	ld (draw_buffer),hl
  352 D1:AABF -  -  -  -  
  353 D1:AABF -  -  -  -  
  354 D1:AABF -  -  -  -  	;wait until finished drawing second frame
  355 D1:AABF -  -  -  -  	;Need to check clock here, there wont always be decompression to wait for
  356 D1:AABF -  -  -  -  main_clock_check_loop:
  357 D1:AABF 3A 01 00 F2 	ld a,($F20001);128hz clock
  358 D1:AAC3 FE 03 -  -  	cp %00000011 ;check if reached 3 
  359 D1:AAC5 DA BF AA D1 	jp c,main_clock_check_loop ;msb <= 2, can continue  
  360 D1:AAC9 3A 00 00 F2 	ld a,($F20000);32768hz clock
  361 D1:AACD FE E8 -  -  	cp %11101000;check if reached value 
  362 D1:AACF DA BF AA D1 	jp c,main_clock_check_loop ;msb = 3 and lsb < value, can continue
  363 D1:AAD3 -  -  -  -  	
  364 D1:AAD3 -  -  -  -  
  365 D1:AAD3 -  -  -  -  
  366 D1:AAD3 -  -  -  -  clear_int:      
  367 D1:AAD3 21 28 00 E3     ld hl, mpLcdIcr
  368 D1:AAD7 CB D6 -  -      set 2, (hl)            ; clear interrupt
  369 D1:AAD9 21 20 00 E3     ld hl, mpLcdRis
  370 D1:AADD -  -  -  -  wait_int:
  371 D1:AADD CB 56 -  -      bit 2, (hl)
  372 D1:AADF 28 FC -  -      jr z, wait_int  
  373 D1:AAE1 -  -  -  -  
  374 D1:AAE1 -  -  -  -  
  375 D1:AAE1 21 00 00 00 	ld hl,0
  376 D1:AAE5 -  -  -  -  	
  377 D1:AAE5 3A 02 00 F2 	ld a,($F20002)
  378 D1:AAE9 67 -  -  -  	ld h,a
  379 D1:AAEA 3A 01 00 F2 	ld a,($F20001)
  380 D1:AAEE 6F -  -  -  	ld l,a
  381 D1:AAEF ED 4B E9 AB 
              D1 -  -  -  	ld bc,(totalTime)
  382 D1:AAF4 09 -  -  -  	add hl,bc 
  383 D1:AAF5 22 E9 AB D1 	ld (totalTime),hl 
  384 D1:AAF9 -  -  -  -  	
  385 D1:AAF9 -  -  -  -  	
  386 D1:AAF9 -  -  -  -  	
  387 D1:AAF9 -  -  -  -  	
  388 D1:AAF9 -  -  -  -  
  389 D1:AAF9 -  -  -  -  	
  390 D1:AAF9 -  -  -  -  
  391 D1:AAF9 C2 05 A9 D1 	jp nz,main_loop
  392 D1:AAFD -  -  -  -  		
  393 D1:AAFD -  -  -  -  	;print debug times 
  394 D1:AAFD 21 00 00 D4 	ld hl,vRam
  395 D1:AB01 22 10 00 E3 	ld (mpLcdBase),hl
  396 D1:AB05 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  397 D1:AB09 3E 2D -  -  	ld	a,lcdBpp16
  398 D1:AB0B 32 18 00 E3 	ld (mpLcdCtrl),a
  399 D1:AB0F -  -  -  -  	
  400 D1:AB0F 3E 00 -  -  	ld a,0
  401 D1:AB11 32 95 05 D0 	ld (curRow),a
  402 D1:AB15 32 96 05 D0 	ld (curCol),a
  403 D1:AB19 2A E3 AB D1 	ld hl,(longestFrame)
  404 D1:AB1D CD E0 1E 02 	call _DispHL
  405 D1:AB21 3E 01 -  -  	ld a,1
  406 D1:AB23 32 95 05 D0 	ld (curRow),a
  407 D1:AB27 3E 00 -  -  	ld a,0
  408 D1:AB29 32 96 05 D0 	ld (curCol),a
  409 D1:AB2D 2A E6 AB D1 	ld hl,(longestFramePos)
  410 D1:AB31 CD E0 1E 02 	call _DispHL
  411 D1:AB35 3E 02 -  -  	ld a,2
  412 D1:AB37 32 95 05 D0 	ld (curRow),a
  413 D1:AB3B 3E 00 -  -  	ld a,0
  414 D1:AB3D 32 96 05 D0 	ld (curCol),a
  415 D1:AB41 2A E9 AB D1 	ld hl,(totalTime)
  416 D1:AB45 CD E0 1E 02 	call _DispHL
  417 D1:AB49 3E 03 -  -  	ld a,3
  418 D1:AB4B 32 95 05 D0 	ld (curRow),a
  419 D1:AB4F 3E 00 -  -  	ld a,0
  420 D1:AB51 32 96 05 D0 	ld (curCol),a
  421 D1:AB55 2A EC AB D1 	ld hl,(frameCount)
  422 D1:AB59 CD E0 1E 02 	call _DispHL
  423 D1:AB5D -  -  -  -  	
  424 D1:AB5D CD C1 AB D1 	call prgmpause
  425 D1:AB61 CD C1 AB D1 	call prgmpause
  426 D1:AB65 -  -  -  -  	
  427 D1:AB65 -  -  -  -  	
  428 D1:AB65 -  -  -  -  exit_prgm:
  429 D1:AB65 21 00 00 D4 	ld hl,vRam
  430 D1:AB69 22 10 00 E3 	ld (mpLcdBase),hl
  431 D1:AB6D CD 10 08 02 	call _ClrScrnFull
  432 D1:AB71 3E 2D -  -  	ld	a,lcdBpp16
  433 D1:AB73 32 18 00 E3 	ld	(mpLcdCtrl),a
  434 D1:AB77 CD 3C 1A 02 	call _DrawStatusBar
  435 D1:AB7B -  -  -  -  	
  436 D1:AB7B FB -  -  -  	ei				; reset screen back to normal
  437 D1:AB7C C9 -  -  -  	ret			; return to os
  438 D1:AB7D -  -  -  -  
  439 D1:AB7D -  -  -  -  
  440 D1:AB7D -  -  -  -  printHL:;=================REMOVE
  441 D1:AB7D E5 -  -  -  	push hl
  442 D1:AB7E 21 00 00 D4 	ld hl,vRam
  443 D1:AB82 22 10 00 E3 	ld (mpLcdBase),hl
  444 D1:AB86 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  445 D1:AB8A 3E 2D -  -  	ld	a,lcdBpp16
  446 D1:AB8C 32 18 00 E3 	ld (mpLcdCtrl),a
  447 D1:AB90 E1 -  -  -  	pop hl
  448 D1:AB91 CD E0 1E 02 	call _DispHL
  449 D1:AB95 FB -  -  -  	ei
  450 D1:AB96 CD 8C 0D 02 	call _GetKey
  451 D1:AB9A F3 -  -  -  	di
  452 D1:AB9B C3 65 AB D1 	jp exit_prgm
  453 D1:AB9F -  -  -  -  
  454 D1:AB9F -  -  -  -  
  455 D1:AB9F -  -  -  -  write_a_to_ram:
  456 D1:AB9F F5 -  -  -  	push af 
  457 D1:ABA0 E5 -  -  -  	push hl 
  458 D1:ABA1 -  -  -  -  write_a_to_ram_addr .equ $ + 1 
  459 D1:ABA1 21 00 60 D4 	ld hl, $d46000
  460 D1:ABA5 77 -  -  -  	ld (hl),a 
  461 D1:ABA6 23 -  -  -  	inc hl 
  462 D1:ABA7 22 A2 AB D1 	ld (write_a_to_ram_addr),hl 
  463 D1:ABAB E1 -  -  -  	pop hl 
  464 D1:ABAC F1 -  -  -  	pop af 
  465 D1:ABAD C9 -  -  -  	ret 
  466 D1:ABAE -  -  -  -  	
  467 D1:ABAE -  -  -  -  write_hl_to_ram:
  468 D1:ABAE E5 -  -  -  	push hl 
  469 D1:ABAF D5 -  -  -  	push de 
  470 D1:ABB0 EB -  -  -  	ex de,hl
  471 D1:ABB1 2A A2 AB D1 	ld hl,(write_a_to_ram_addr)
  472 D1:ABB5 ED 1F -  -  	ld (hl),de 
  473 D1:ABB7 23 -  -  -  	inc hl
  474 D1:ABB8 23 -  -  -  	inc hl
  475 D1:ABB9 23 -  -  -  	inc hl
  476 D1:ABBA 22 A2 AB D1 	ld (write_a_to_ram_addr),hl
  477 D1:ABBE D1 -  -  -  	pop de 
  478 D1:ABBF E1 -  -  -  	pop hl
  479 D1:ABC0 C9 -  -  -  	ret 
  480 D1:ABC1 -  -  -  -  
  481 D1:ABC1 -  -  -  -  prgmpause: ;for testing, interrupts code until key pressed. will destroy af register
  482 D1:ABC1 F5 -  -  -  	push af
  483 D1:ABC2 D5 -  -  -  	push de 
  484 D1:ABC3 E5 -  -  -  	push hl 
  485 D1:ABC4 08 -  -  -  	ex af,af';'
  486 D1:ABC5 F5 -  -  -  	push af 
  487 D1:ABC6 FB -  -  -  	ei
  488 D1:ABC7 CD 8C 0D 02 	call _GetKey
  489 D1:ABCB F3 -  -  -  	di
  490 D1:ABCC F1 -  -  -  	pop af 
  491 D1:ABCD 08 -  -  -  	ex af,af';'
  492 D1:ABCE E1 -  -  -  	pop hl 
  493 D1:ABCF D1 -  -  -  	pop de 
  494 D1:ABD0 F1 -  -  -  	pop af
  495 D1:ABD1 C9 -  -  -  	ret
  496 D1:ABD2 -  -  -  -  
  497 D1:ABD2 -  -  -  -  cam_pos:;y position of lowest visible line in fg layer
  498 D1:ABD2 00 00 00 -  	.dl 0
  499 D1:ABD5 -  -  -  -  bg_cam_pos: ;y position of lowest visible line in bg layer (= cam pos / 8)
  500 D1:ABD5 00 00 00 -  	.dl 0
  501 D1:ABD8 -  -  -  -  
  502 D1:ABD8 -  -  -  -  
  503 D1:ABD8 -  -  -  -  draw_buffer:;where new frame is drawn before lcd pointer is swapped 
  504 D1:ABD8 00 2C D5 -  	.dl $d52c00
  505 D1:ABDB -  -  -  -  	
  506 D1:ABDB -  -  -  -  BG_draw_buffer: ;Address of the uppermost line of the background buffer. This is where new lines of bg are drawn to 
  507 D1:ABDB 00 00 00 -  	.dl 0
  508 D1:ABDE -  -  -  -  BG_buffer .equ vram + (160*240) ;Start of BG buffer 
  509 D1:ABDE -  -  -  -  
  510 D1:ABDE -  -  -  -  
  511 D1:ABDE -  -  -  -  ;d40000 = Decompressed sprite data
  512 D1:ABDE -  -  -  -  ;d49600 = BG buffer
  513 D1:ABDE -  -  -  -  ;d52c00 = Frame draw buffer 1 
  514 D1:ABDE -  -  -  -  ;d5c200 = frame draw buffer 2
  515 D1:ABDE -  -  -  -  
  516 D1:ABDE -  -  -  -  ;pixelShadow .equ $D031F6 
  517 D1:ABDE -  -  -  -  
  518 D1:ABDE -  -  -  -  move_bg_time:
  519 D1:ABDE 00 -  -  -  	.db 0
  520 D1:ABDF -  -  -  -  draw_bg_time:
  521 D1:ABDF 00 -  -  -  	.db 0
  522 D1:ABE0 -  -  -  -  draw_mg_time:
  523 D1:ABE0 00 -  -  -  	.db 0
  524 D1:ABE1 -  -  -  -  draw_fg_time:
  525 D1:ABE1 00 -  -  -  	.db 0
  526 D1:ABE2 -  -  -  -  decompress_time:
  527 D1:ABE2 00 -  -  -  	.db 0
  528 D1:ABE3 -  -  -  -  
  529 D1:ABE3 -  -  -  -  
  530 D1:ABE3 -  -  -  -  longestFrame:
  531 D1:ABE3 00 00 00 -  	.dl 0
  532 D1:ABE6 -  -  -  -  longestFramePos:
  533 D1:ABE6 00 00 00 -  	.dl 0
  534 D1:ABE9 -  -  -  -  totalTime:
  535 D1:ABE9 00 00 00 -  	.dl 0
  536 D1:ABEC -  -  -  -  frameCount:
  537 D1:ABEC 00 00 00 -  	.dl 0
  538 D1:ABEF -  -  -  -  hasLagged:
  539 D1:ABEF 00 00 00 -  	.dl 0
  540 D1:ABF2 -  -  -  -  
  541 D1:ABF2 -  -  -  -  sd_test_a:
  542 D1:ABF2 00 00 00 -  	.dl 0 
  543 D1:ABF5 -  -  -  -  
  544 D1:ABF5 -  -  -  -  
  545 D1:ABF5 -  -  -  -  
  546 D1:ABF5 -  -  -  -  
  547 D1:ABF5 -  -  -  -  
  548 D1:ABF5 -  -  -  -  
  549 D1:ABF5 -  -  -  -  #include "timeTesting.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\timeTesting.txt"
    1 D1:ABF5 -  -  -  -  
    2 D1:ABF5 -  -  -  -  
    3 D1:ABF5 -  -  -  -  
    4 D1:ABF5 -  -  -  -  time_test_start:
    5 D1:ABF5 -  -  -  -  
    6 D1:ABF5 -  -  -  -  		; 76543210	
    7 D1:ABF5 3E 03 -  -  	ld a,%00000011;enable, 32768hz
    8 D1:ABF7 32 30 00 F2 	ld ($F20030),a
    9 D1:ABFB -  -  -  -  	;	  fedcba98
   10 D1:ABFB 3E 02 -  -  	ld a,%00000010;count up
   11 D1:ABFD 32 31 00 F2 	ld ($F20031),a
   12 D1:AC01 3E 00 -  -  	ld a,0
   13 D1:AC03 32 00 00 F2 	ld ($F20000),a
   14 D1:AC07 32 01 00 F2 	ld ($F20001),a
   15 D1:AC0B 32 02 00 F2 	ld ($F20002),a
   16 D1:AC0F 32 03 00 F2 	ld ($F20003),a
   17 D1:AC13 -  -  -  -  	
   18 D1:AC13 21 2C 01 00 	ld hl,300
   19 D1:AC17 -  -  -  -  	
   20 D1:AC17 -  -  -  -  time_testing_loop:
   21 D1:AC17 E5 -  -  -  	push hl
   22 D1:AC18 01 E8 03 00 	ld bc,1000
   23 D1:AC1C -  -  -  -  time_testing_loop_2:
   24 D1:AC1C C5 -  -  -  	push bc
   25 D1:AC1D -  -  -  -  	;instruction here
   26 D1:AC1D -  -  -  -  	
   27 D1:AC1D -  -  -  -  	
   28 D1:AC1D -  -  -  -  	;Instruction end
   29 D1:AC1D C1 -  -  -  	pop bc
   30 D1:AC1E 0B -  -  -  	dec bc
   31 D1:AC1F 79 -  -  -  	ld a,c
   32 D1:AC20 B0 -  -  -  	or b
   33 D1:AC21 C2 1C AC D1 	jp nz,time_testing_loop_2
   34 D1:AC25 E1 -  -  -  	pop hl
   35 D1:AC26 2B -  -  -  	dec hl
   36 D1:AC27 7D -  -  -  	ld a,l
   37 D1:AC28 B4 -  -  -  	or h
   38 D1:AC29 C2 17 AC D1 	jp nz,time_testing_loop
   39 D1:AC2D -  -  -  -  	
   40 D1:AC2D 3A 01 00 F2 	ld a,($F20001);128hz
   41 D1:AC31 6F -  -  -  	ld l,a
   42 D1:AC32 3A 02 00 F2 	ld a,($F20002);0.5hz
   43 D1:AC36 67 -  -  -  	ld h,a
   44 D1:AC37 C3 7D AB D1 	jp printHL;div by 128 for time
   45 D1:AC3B -  -  -  -  	
   46 D1:AC3B -  -  -  -  
   47 D1:AC3B -  -  -  -  ;60fps = .0166sec/f	
   48 D1:AC3B -  -  -  -  
   49 D1:AC3B -  -  -  -  ;1000 ldir in vram of 160*240 bytes
   50 D1:AC3B -  -  -  -  ;6.8sec, .0068 sec/instruction   0.4 of a frame
   51 D1:AC3B -  -  -  -  
   52 D1:AC3B -  -  -  -  
   53 D1:AC3B -  -  -  -  ;10,000 draw 1 bg line very complex 
   54 D1:AC3B -  -  -  -  ;9 sec  .07 of frame/instruction
   55 D1:AC3B -  -  -  -  
   56 D1:AC3B -  -  -  -  ;300k draw slow sprite 12*5 px complex
   57 D1:AC3B -  -  -  -  ;16.4RT, 14.8CLK
   58 D1:AC3B -  -  -  -  ;.00328 frames/sprite, 4.19 frames / screen
   59 D1:AC3B -  -  -  -  ;.24 screens/frame
   60 D1:AC3B -  -  -  -  
   61 D1:AC3B -  -  -  -  
   62 D1:AC3B -  -  -  -  ;300k slow sprite best case 12*5px
   63 D1:AC3B -  -  -  -  ;8.75RT 7.6clk
   64 D1:AC3B -  -  -  -  ;.00175 frames/spr 2.24 frames/screen
   65 D1:AC3B -  -  -  -  ;.446 screens/frame
   66 D1:AC3B -  -  -  -  
   67 D1:AC3B -  -  -  -  
   68 D1:AC3B -  -  -  -  
   69 D1:AC3B -  -  -  -  ;1,000,000 fast fg sprite 20*4 px
   70 D1:AC3B -  -  -  -  ;22.15RT,20.35clk
   71 D1:AC3B -  -  -  -  ;.00133 frames/spr 1.275 frames/screen
   72 D1:AC3B -  -  -  -  ;.78 screens/frame
   73 D1:AC3B -  -  -  -  
   74 D1:AC3B -  -  -  -  
   75 D1:AC3B -  -  -  -  ;for 60% of screen with fg sprites in 1 frame
   76 D1:AC3B -  -  -  -  ;.6 = .78*fast + .44*(1-fast)
   77 D1:AC3B -  -  -  -  ;.47 = FAST
   78 D1:AC3B -  -  -  -  
   79 D1:AC3B -  -  -  -  ;50% fast sprites, 50% slow sprites
   80 D1:AC3B -  -  -  -  
   81 D1:AC3B -  -  -  -  
   82 D1:AC3B -  -  -  -  
   83 D1:AC3B -  -  -  -  
   84 D1:AC3B -  -  -  -  
   85 D1:AC3B -  -  -  -  
   86 D1:AC3B -  -  -  -  
   87 D1:AC3B -  -  -  -  
   88 D1:AC3B -  -  -  -  
Listing for file "ascent.asm"
  550 D1:AC3B -  -  -  -  #include "drawBGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawBGSprite.txt"
    1 D1:AC3B -  -  -  -  
    2 D1:AC3B -  -  -  -  
    3 D1:AC3B -  -  -  -  BGMaxSpriteHeight .equ 120
    4 D1:AC3B -  -  -  -  
    5 D1:AC3B -  -  -  -  
    6 D1:AC3B -  -  -  -  draw_bg:; function for drawing background buffer to the draw buffer, clearing the frame for fg sprites to be drawn over 
    7 D1:AC3B CD 6F AC D1 	call move_bg
    8 D1:AC3F 21 00 2C D5 	ld hl,$d52c00;BG_buffer_end
    9 D1:AC43 ED 4B DB AB 
              D1 -  -  -  	ld bc,(BG_draw_buffer)
   10 D1:AC48 37 -  -  -  	scf 
   11 D1:AC49 3F -  -  -  	ccf 
   12 D1:AC4A ED 42 -  -  	sbc hl,bc ;get number of bytes from the loop point in the buffer to end of the buffer 
   13 D1:AC4C E5 -  -  -  	push hl 
   14 D1:AC4D C1 -  -  -  	pop bc	;put into bc for ldir 
   15 D1:AC4E 2A DB AB D1 	ld hl,(BG_draw_buffer)
   16 D1:AC52 ED 5B D8 AB 
              D1 -  -  -  	ld de,(draw_buffer)
   17 D1:AC57 ED B0 -  -  	ldir
   18 D1:AC59 2A DB AB D1 	ld hl,(BG_draw_buffer) ;loop point in buffer
   19 D1:AC5D 01 00 96 D4 	ld bc,BG_buffer ;start of buffer
   20 D1:AC61 37 -  -  -  	scf 
   21 D1:AC62 3F -  -  -  	ccf 
   22 D1:AC63 ED 42 -  -  	sbc hl,bc ;number of bytes from start to loop point 
   23 D1:AC65 C8 -  -  -  	ret z ;if bg buffer line is at top of buffer, no second ldir
   24 D1:AC66 E5 -  -  -  	push hl 
   25 D1:AC67 C1 -  -  -  	pop bc
   26 D1:AC68 21 00 96 D4 	ld hl,BG_buffer 
   27 D1:AC6C ED B0 -  -  	ldir 
   28 D1:AC6E C9 -  -  -  	ret 
   29 D1:AC6F -  -  -  -  	
   30 D1:AC6F -  -  -  -  	
   31 D1:AC6F -  -  -  -  ;function for moving the backgrond buffer. checks if camera has moved since the buffer was last updated.
   32 D1:AC6F -  -  -  -  ;if so will draw new lines of the bg buffer to move it up or down until it is in the correct position
   33 D1:AC6F -  -  -  -  move_bg:
   34 D1:AC6F 2A D2 AB D1 	ld hl,(cam_pos);load cam pos 
   35 D1:AC73 -  -  -  -  	;call write_hl_to_ram
   36 D1:AC73 CB 3C -  -  	srl h
   37 D1:AC75 CB 1D -  -  	rr l
   38 D1:AC77 CB 3C -  -  	srl h
   39 D1:AC79 CB 1D -  -  	rr l
   40 D1:AC7B CB 3C -  -  	srl h
   41 D1:AC7D CB 1D -  -  	rr l	;div by 8 to get location of BG layer
   42 D1:AC7F -  -  -  -  	;hl holds bg cam pos, lowest visible line of bg layer 
   43 D1:AC7F ED 4B D5 AB 
              D1 -  -  -  	ld bc,(bg_cam_pos);previous BG cam location 
   44 D1:AC84 37 -  -  -  	scf
   45 D1:AC85 3F -  -  -  	ccf
   46 D1:AC86 ED 42 -  -  	sbc hl,bc ;compare to the updated location
   47 D1:AC88 C8 -  -  -  	ret z ;if 0, the bg buffer does not need to be moved 
   48 D1:AC89 DA 95 AC D1 	jp c,move_bg_down ;if previous cam pos id above current pos, screen has moved down, go to move bg down 1 line
   49 D1:AC8D CD E4 AC D1 	call inc_bg ;otherwise, screen has moved up, need to move bg up 1 line
   50 D1:AC91 C3 6F AC D1 	jp move_bg ;repeat until bg is in correct pos
   51 D1:AC95 -  -  -  -  move_bg_down:
   52 D1:AC95 CD 9D AC D1 	call dec_bg
   53 D1:AC99 C3 6F AC D1 	jp move_bg ;repeat until bg is in correct pos
   54 D1:AC9D -  -  -  -  
   55 D1:AC9D -  -  -  -  
   56 D1:AC9D -  -  -  -  dec_bg:;move bg cam down 1px 
   57 D1:AC9D -  -  -  -  
   58 D1:AC9D -  -  -  -  	
   59 D1:AC9D -  -  -  -  	;Testibng
   60 D1:AC9D -  -  -  -  	;ld a,$AD
   61 D1:AC9D -  -  -  -  	;call write_a_to_ram
   62 D1:AC9D -  -  -  -  	
   63 D1:AC9D -  -  -  -  
   64 D1:AC9D -  -  -  -  	;write on draw buffer line 
   65 D1:AC9D 2A DB AB D1 	ld hl,(BG_draw_buffer) ;topmost line of bg buffer will be overwritten with new bottom line 
   66 D1:ACA1 22 F0 AD D1 	ld (dbgl_vram_line_start),hl 
   67 D1:ACA5 -  -  -  -  	
   68 D1:ACA5 2A D5 AB D1 	ld hl,(bg_cam_pos)
   69 D1:ACA9 2B -  -  -  	dec hl ;dec bg cam pos by 1 
   70 D1:ACAA 22 D5 AB D1 	ld (bg_cam_pos),hl 
   71 D1:ACAE -  -  -  -  	
   72 D1:ACAE 01 00 00 00 	ld bc,0 ;clear bc reg
   73 D1:ACB2 4C -  -  -  	ld c,h;bottom y value msb 
   74 D1:ACB3 7D -  -  -  	ld a,l ;bottom y value lsb 
   75 D1:ACB4 21 53 C2 D1 	ld hl,BG_Data_frame_table
   76 D1:ACB8 0C -  -  -  	inc c 
   77 D1:ACB9 09 -  -  -  	add hl,bc 
   78 D1:ACBA 09 -  -  -  	add hl,bc 
   79 D1:ACBB 09 -  -  -  	add hl,bc ;add 3*frame number to get to correct frame pointer
   80 D1:ACBC ED 27 -  -  	ld hl,(hl) ;hl now points to bg frame data 
   81 D1:ACBE CD 82 AD D1 	call draw_bg_line
   82 D1:ACC2 -  -  -  -  	
   83 D1:ACC2 -  -  -  -  
   84 D1:ACC2 -  -  -  -  	;move buffer pos
   85 D1:ACC2 2A DB AB D1 	ld hl,(BG_draw_buffer)
   86 D1:ACC6 01 60 2B D5 	ld bc,$d52b60;BG_buffer_end, start of last line of vram buffer 
   87 D1:ACCA 37 -  -  -  	scf 
   88 D1:ACCB 3F -  -  -  	ccf 
   89 D1:ACCC ED 42 -  -  	sbc hl,bc ;compare to current line 
   90 D1:ACCE 2A DB AB D1 	ld hl,(BG_draw_buffer)
   91 D1:ACD2 C2 DA AC D1 	jp nz,dec_bg_bottom_skip
   92 D1:ACD6 21 60 95 D4 	ld hl,$d49560;1 row above top of bg buffer 
   93 D1:ACDA -  -  -  -  dec_bg_bottom_skip:
   94 D1:ACDA 01 A0 00 00 	ld bc,160 
   95 D1:ACDE 09 -  -  -  	add hl,bc
   96 D1:ACDF 22 DB AB D1 	ld (BG_draw_buffer),hl 
   97 D1:ACE3 C9 -  -  -  	ret
   98 D1:ACE4 -  -  -  -  
   99 D1:ACE4 -  -  -  -  
  100 D1:ACE4 -  -  -  -  inc_bg:;move cam up 
  101 D1:ACE4 -  -  -  -  
  102 D1:ACE4 -  -  -  -  	
  103 D1:ACE4 -  -  -  -  	;Testibng
  104 D1:ACE4 -  -  -  -  	;ld a,$00
  105 D1:ACE4 -  -  -  -  	;call write_a_to_ram
  106 D1:ACE4 -  -  -  -  	;call prgmpause
  107 D1:ACE4 -  -  -  -  
  108 D1:ACE4 2A DB AB D1 	ld hl,(BG_draw_buffer)
  109 D1:ACE8 01 00 96 D4 	ld bc,BG_buffer
  110 D1:ACEC 37 -  -  -  	scf 
  111 D1:ACED 3F -  -  -  	ccf 
  112 D1:ACEE ED 42 -  -  	sbc hl,bc ;compare current drawing line to top of bg buffer 
  113 D1:ACF0 2A DB AB D1 	ld hl,(BG_draw_buffer)
  114 D1:ACF4 C2 FC AC D1 	jp nz,inc_bg_top_skip ;if they are not equal, continue
  115 D1:ACF8 21 00 2C D5 	ld hl,$d52c00;otherwise need to wrap back to bottom of buffer, set hl to 1 below bottom of bg buffer 
  116 D1:ACFC -  -  -  -  inc_bg_top_skip:
  117 D1:ACFC 01 A0 00 00 	ld bc,160 
  118 D1:AD00 37 -  -  -  	scf
  119 D1:AD01 3F -  -  -  	ccf 
  120 D1:AD02 ED 42 -  -  	sbc hl,bc ;move up line, hl now points to line drawing location in vram 
  121 D1:AD04 22 DB AB D1 	ld (BG_draw_buffer),hl 
  122 D1:AD08 22 F0 AD D1 	ld (dbgl_vram_line_start),hl 
  123 D1:AD0C 2A D5 AB D1 	ld hl,(bg_cam_pos)
  124 D1:AD10 23 -  -  -  	inc hl 
  125 D1:AD11 22 D5 AB D1 	ld (bg_cam_pos),hl ;incremnet cam pos 
  126 D1:AD15 -  -  -  -  	;call write_hl_to_ram
  127 D1:AD15 01 EF 00 00 	ld bc,239
  128 D1:AD19 09 -  -  -  	add hl,bc ;gets uppermost visible line y value in bg layer
  129 D1:AD1A 4C -  -  -  	ld c,h;cam pos msb 
  130 D1:AD1B 7D -  -  -  	ld a,l ;a holds line number in target frame 
  131 D1:AD1C 21 53 C2 D1 	ld hl,BG_Data_frame_table
  132 D1:AD20 0C -  -  -  	inc c ;inc to get to upper frame 
  133 D1:AD21 09 -  -  -  	add hl,bc 
  134 D1:AD22 09 -  -  -  	add hl,bc 
  135 D1:AD23 09 -  -  -  	add hl,bc 
  136 D1:AD24 ED 27 -  -  	ld hl,(hl)
  137 D1:AD26 CD 82 AD D1 	call draw_bg_line
  138 D1:AD2A C9 -  -  -  	ret
  139 D1:AD2B -  -  -  -  	
  140 D1:AD2B -  -  -  -  
  141 D1:AD2B -  -  -  -  
  142 D1:AD2B -  -  -  -  
  143 D1:AD2B -  -  -  -  
  144 D1:AD2B -  -  -  -  setup_bg: ;Draws entire BG buffer when loading game 
  145 D1:AD2B 2A D2 AB D1 	ld hl,(cam_pos)
  146 D1:AD2F CB 3C -  -  	srl h
  147 D1:AD31 CB 1D -  -  	rr l
  148 D1:AD33 CB 3C -  -  	srl h
  149 D1:AD35 CB 1D -  -  	rr l ;div by 4
  150 D1:AD37 -  -  -  -  	;hl holds bg cam pos 
  151 D1:AD37 22 D5 AB D1 	ld (bg_cam_pos),hl
  152 D1:AD3B -  -  -  -  	
  153 D1:AD3B 01 EF 00 00 	ld bc,239
  154 D1:AD3F 09 -  -  -  	add hl,bc;hl holds y position of uppermost visible line in bg layer 
  155 D1:AD40 -  -  -  -  	
  156 D1:AD40 23 -  -  -  	inc hl;to be dec in loop
  157 D1:AD41 E5 -  -  -  	push hl ;save uppermost line y val
  158 D1:AD42 21 00 96 D4 	ld hl,BG_buffer ;start of bg drawing buffer 
  159 D1:AD46 22 DB AB D1 	ld (BG_draw_buffer),hl ;set current bg line drawing location 
  160 D1:AD4A E5 -  -  -  	push hl 
  161 D1:AD4B -  -  -  -  	
  162 D1:AD4B 3E F0 -  -  	ld a,240 ;num loops
  163 D1:AD4D 32 75 AD D1 	ld (setup_bg_loop_count),a
  164 D1:AD51 -  -  -  -  setup_bg_loop:
  165 D1:AD51 -  -  -  -  
  166 D1:AD51 E1 -  -  -  	pop hl;vram draw pos, next line of bg drawn here 
  167 D1:AD52 22 F0 AD D1 	ld (dbgl_vram_line_start),hl ;set drawing pos 
  168 D1:AD56 01 A0 00 00 	ld bc,160
  169 D1:AD5A 09 -  -  -  	add hl,bc 
  170 D1:AD5B EB -  -  -  	ex de,hl ;put next vram pos in de 
  171 D1:AD5C E1 -  -  -  	pop hl;uppermost line y val
  172 D1:AD5D 2B -  -  -  	dec hl ;dec line y value (move to next lowest line)
  173 D1:AD5E E5 -  -  -  	push hl;push uppermost line y val
  174 D1:AD5F D5 -  -  -  	push de ;push vram pos 
  175 D1:AD60 01 00 00 00 	ld bc,0
  176 D1:AD64 4C -  -  -  	ld c,h;cam pos msb 
  177 D1:AD65 7D -  -  -  	ld a,l ;a holds line number in current frame 
  178 D1:AD66 21 53 C2 D1 	ld hl,BG_Data_frame_table
  179 D1:AD6A 0C -  -  -  	inc c ;add 1 to get to upper frame
  180 D1:AD6B 09 -  -  -  	add hl,bc 
  181 D1:AD6C 09 -  -  -  	add hl,bc 
  182 D1:AD6D 09 -  -  -  	add hl,bc 
  183 D1:AD6E ED 27 -  -  	ld hl,(hl) ;hl now points to upper frame data 
  184 D1:AD70 CD 82 AD D1 	call draw_bg_line ;hl pts to upper frame data, a = line num in target frame
  185 D1:AD74 -  -  -  -  	
  186 D1:AD74 -  -  -  -  setup_bg_loop_count .equ $ + 1
  187 D1:AD74 3E 00 -  -  	ld a,0
  188 D1:AD76 3D -  -  -  	dec a ;dec loop counter
  189 D1:AD77 32 75 AD D1 	ld (setup_bg_loop_count),a
  190 D1:AD7B C2 51 AD D1 	jp nz,setup_bg_loop 
  191 D1:AD7F E1 -  -  -  	pop hl ;pop vram pos 
  192 D1:AD80 E1 -  -  -  	pop hl ;pop current line number 
  193 D1:AD81 C9 -  -  -  	ret 
  194 D1:AD82 -  -  -  -  
  195 D1:AD82 -  -  -  -  
  196 D1:AD82 -  -  -  -  
  197 D1:AD82 -  -  -  -  
  198 D1:AD82 -  -  -  -  
  199 D1:AD82 -  -  -  -  
  200 D1:AD82 -  -  -  -  ;hl = upper data frame, a = line number in target frame
  201 D1:AD82 -  -  -  -  ;for drawing BG, only 1 line is drawn at a time.
  202 D1:AD82 -  -  -  -  ;therefore only check sprites in the above frame that may extend downwards, 
  203 D1:AD82 -  -  -  -  ;and the sprites in the target frame which contains the y position of the line being drawn
  204 D1:AD82 -  -  -  -  ;set dbgl_vram_line_start before calling 
  205 D1:AD82 -  -  -  -  draw_bg_line:
  206 D1:AD82 -  -  -  -  	
  207 D1:AD82 -  -  -  -  	
  208 D1:AD82 32 CE AD D1 	ld (dbgl_line_num),a ;write line num to required positions 
  209 D1:AD86 32 B2 B5 D1 	ld (dfgs_cam_height_1), a ;Used to check if upper frame should be considered
  210 D1:AD8A ED 44 -  -  	neg 
  211 D1:AD8C 32 BA AD D1 	ld (dbgl_lines_to_top_of_target_frame),a 
  212 D1:AD90 -  -  -  -  	
  213 D1:AD90 E5 -  -  -  	push hl ;upper frame sprite table pointer 
  214 D1:AD91 3E FF -  -  	ld a,$FF ;Set all of line to FF to clear it with color 16
  215 D1:AD93 01 A0 00 00 	ld bc,160
  216 D1:AD97 2A F0 AD D1 	ld hl,(dbgl_vram_line_start) ;Drawing address of line 
  217 D1:AD9B CD E0 10 02 	call _MemSet ;Clear all of line 
  218 D1:AD9F E1 -  -  -  	pop hl ;return upper frame ptr 
  219 D1:ADA0 -  -  -  -  
  220 D1:ADA0 -  -  -  -  	
  221 D1:ADA0 3E DA -  -  	ld a,%11011010;jp c
  222 D1:ADA2 32 E4 B5 D1 	ld (dfgs_bg_mode_1),a 
  223 D1:ADA6 32 48 B6 D1 	ld (dfgs_bg_mode_2),a 
  224 D1:ADAA -  -  -  -  	
  225 D1:ADAA 3E FF -  -  	ld a,255;
  226 D1:ADAC 32 E1 B6 D1 	ld (dfgs_cam_height_3),a ;Will skip drawing of lower frame
  227 D1:ADB0 32 FB B6 D1 	ld (dfgs_cam_height_4),a
  228 D1:ADB4 -  -  -  -  	
  229 D1:ADB4 -  -  -  -  
  230 D1:ADB4 -  -  -  -  	
  231 D1:ADB4 CD 99 B5 D1 	call draw_fg_sprites
  232 D1:ADB8 -  -  -  -  	
  233 D1:ADB8 C9 -  -  -  	ret
  234 D1:ADB9 -  -  -  -  	
  235 D1:ADB9 -  -  -  -  
  236 D1:ADB9 -  -  -  -  
  237 D1:ADB9 -  -  -  -  	;a = y value of sprite in upper frame, hl pts to height
  238 D1:ADB9 -  -  -  -  dbgl_draw_upper_sprite:	
  239 D1:ADB9 -  -  -  -  
  240 D1:ADB9 -  -  -  -  	;push af 
  241 D1:ADB9 -  -  -  -  	;call write_a_to_ram
  242 D1:ADB9 -  -  -  -  	;ld a,(hl)
  243 D1:ADB9 -  -  -  -  	;call write_a_to_ram
  244 D1:ADB9 -  -  -  -  	;ld a,$BC
  245 D1:ADB9 -  -  -  -  	;call write_a_to_ram
  246 D1:ADB9 -  -  -  -  	;pop af
  247 D1:ADB9 -  -  -  -  	
  248 D1:ADB9 -  -  -  -  	;call write_hl_to_ram
  249 D1:ADB9 -  -  -  -  	
  250 D1:ADB9 -  -  -  -  	;call prgmpause
  251 D1:ADB9 -  -  -  -  
  252 D1:ADB9 -  -  -  -  dbgl_lines_to_top_of_target_frame .equ $ + 1
  253 D1:ADB9 C6 00 -  -  	add a,0 ;a holds line number in sprite to draw (0 indexed)
  254 D1:ADBB -  -  -  -  	;call write_a_to_ram
  255 D1:ADBB DA C9 AD D1 	jp c,dbgl_upper_skip_sprite ; if line to draw >255, skip (happens if sprite has large y val)
  256 D1:ADBF BE -  -  -  	cp (hl) ;compare to sprite height 
  257 D1:ADC0 D2 C9 AD D1 	jp nc, dbgl_upper_skip_sprite; Skip drawing, sprite does not extend to target line 
  258 D1:ADC4 -  -  -  -  	;Sprite is to be drawn, a holds line number 
  259 D1:ADC4 CD E1 AD D1 	call dbgl_setup_and_draw ;draw sprite line 
  260 D1:ADC8 -  -  -  -  	;hl pts to next sprite y
  261 D1:ADC8 C9 -  -  -  	ret
  262 D1:ADC9 -  -  -  -  	
  263 D1:ADC9 -  -  -  -  dbgl_upper_skip_sprite:
  264 D1:ADC9 23 -  -  -  	inc hl ;to x 
  265 D1:ADCA 23 -  -  -  	inc hl ;to index 
  266 D1:ADCB 23 -  -  -  	inc hl ;to next y
  267 D1:ADCC C9 -  -  -  	ret
  268 D1:ADCD -  -  -  -  	
  269 D1:ADCD -  -  -  -  
  270 D1:ADCD -  -  -  -  	;a holds y in frame, (hl) = height
  271 D1:ADCD -  -  -  -  dbgl_draw_lower_sprite:
  272 D1:ADCD -  -  -  -  	
  273 D1:ADCD -  -  -  -  	;call write_a_to_ram
  274 D1:ADCD -  -  -  -  	;call prgmpause
  275 D1:ADCD -  -  -  -  	;call write_hl_to_ram
  276 D1:ADCD -  -  -  -  	
  277 D1:ADCD -  -  -  -  	;call prgmpause
  278 D1:ADCD -  -  -  -  	
  279 D1:ADCD -  -  -  -  dbgl_line_num .equ $ + 1
  280 D1:ADCD D6 00 -  -  	sub 0;subtract line num 
  281 D1:ADCF DA DD AD D1 	jp c, dbgl_lower_skip_sprite ;if carry, line number was above sprite y pos 
  282 D1:ADD3 -  -  -  -  	;if a is 0, we draw first line of sprite, if a is 1, draw second... a holds line num of sprite to draw (0 indexed) 
  283 D1:ADD3 BE -  -  -  	cp (hl) ;compare to sprite height
  284 D1:ADD4 D2 DD AD D1 	jp nc, dbgl_lower_skip_sprite; Skip drawing, sprite does not extend to target line 
  285 D1:ADD8 -  -  -  -  	
  286 D1:ADD8 -  -  -  -  	;Sprite is to be drawn, a holds line number 
  287 D1:ADD8 CD E1 AD D1 	call dbgl_setup_and_draw ;draw sprite line 
  288 D1:ADDC -  -  -  -  	;hl pts to next y
  289 D1:ADDC C9 -  -  -  	ret
  290 D1:ADDD -  -  -  -  	
  291 D1:ADDD -  -  -  -  dbgl_lower_skip_sprite:
  292 D1:ADDD -  -  -  -  
  293 D1:ADDD -  -  -  -  	;ld a,$AA 
  294 D1:ADDD -  -  -  -  	;call write_a_to_ram
  295 D1:ADDD -  -  -  -  	;call prgmpause
  296 D1:ADDD -  -  -  -  	
  297 D1:ADDD 23 -  -  -  	inc hl ;to x 
  298 D1:ADDE 23 -  -  -  	inc hl ;to index 
  299 D1:ADDF 23 -  -  -  	inc hl ;to y
  300 D1:ADE0 C9 -  -  -  	ret
  301 D1:ADE1 -  -  -  -  
  302 D1:ADE1 -  -  -  -  
  303 D1:ADE1 -  -  -  -  
  304 D1:ADE1 -  -  -  -  
  305 D1:ADE1 -  -  -  -  ;a holds 0 indexed line num of sprite, (hl) = height ,bc,de = 0
  306 D1:ADE1 -  -  -  -  ;returns hl holds next y val
  307 D1:ADE1 -  -  -  -  dbgl_setup_and_draw:
  308 D1:ADE1 -  -  -  -  
  309 D1:ADE1 -  -  -  -  	;push af 
  310 D1:ADE1 -  -  -  -  	;ld a,$AB 
  311 D1:ADE1 -  -  -  -  	;call write_a_to_ram
  312 D1:ADE1 -  -  -  -  	;call write_hl_to_ram
  313 D1:ADE1 -  -  -  -  	;pop af 
  314 D1:ADE1 -  -  -  -  	;call write_a_to_ram
  315 D1:ADE1 -  -  -  -  	
  316 D1:ADE1 -  -  -  -  	;call prgmpause
  317 D1:ADE1 -  -  -  -  
  318 D1:ADE1 01 00 00 00 	ld bc,0
  319 D1:ADE5 11 00 00 00 	ld de,0
  320 D1:ADE9 -  -  -  -  	
  321 D1:ADE9 23 -  -  -  	inc hl;to x pos
  322 D1:ADEA 5E -  -  -  	ld e,(hl);e holds x pos 
  323 D1:ADEB 23 -  -  -  	inc hl 
  324 D1:ADEC 4E -  -  -  	ld c,(hl);sprite index 
  325 D1:ADED 23 -  -  -  	inc hl ;next y
  326 D1:ADEE E5 -  -  -  	push hl ;save location in data 
  327 D1:ADEF -  -  -  -  dbgl_vram_line_start .equ $ + 1	
  328 D1:ADEF 21 00 00 00 	ld hl,0
  329 D1:ADF3 19 -  -  -  	add hl,de;add x pos
  330 D1:ADF4 -  -  -  -  dbgl_sg_x_origin .equ $ + 1
  331 D1:ADF4 1E 00 -  -  	ld e,0 
  332 D1:ADF6 19 -  -  -  	add hl,de;add x pos
  333 D1:ADF7 -  -  -  -  	
  334 D1:ADF7 EB -  -  -  	ex de,hl;put vram pos into de 
  335 D1:ADF8 -  -  -  -  	
  336 D1:ADF8 26 A0 -  -  	ld h,160
  337 D1:ADFA 6F -  -  -  	ld l,a ;number of lines to subtract 
  338 D1:ADFB ED 6C -  -  	mlt hl;bytes to subtract from vram
  339 D1:ADFD 37 -  -  -  	scf 
  340 D1:ADFE 3F -  -  -  	ccf
  341 D1:ADFF EB -  -  -  	ex de,hl;hl holds initial vram pos, de is lines to subtract  
  342 D1:AE00 ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  343 D1:AE02 EB -  -  -  	ex de,hl;put in de
  344 D1:AE03 -  -  -  -  	
  345 D1:AE03 -  -  -  -  dbgl_sprite_pointers .equ $ + 1
  346 D1:AE03 21 00 00 00 	ld hl,0
  347 D1:AE07 09 -  -  -  	add hl,bc
  348 D1:AE08 09 -  -  -  	add hl,bc 
  349 D1:AE09 09 -  -  -  	add hl,bc ;hl points to sprite data pointer 
  350 D1:AE0A ED 27 -  -  	ld hl,(hl);hl holds sprite data
  351 D1:AE0C -  -  -  -  
  352 D1:AE0C -  -  -  -  
  353 D1:AE0C CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  354 D1:AE0E CA 1A AE D1 	jp z,dbgl_fast_sprite ;if even address, fast sprite 
  355 D1:AE12 CD EC AE D1 	call draw_slow_sprite_single_line
  356 D1:AE16 C3 1E AE D1 	jp dbgl_slow_sprite
  357 D1:AE1A -  -  -  -  dbgl_fast_sprite:
  358 D1:AE1A CD 6E AE D1 	call draw_fast_sprite_single_line
  359 D1:AE1E -  -  -  -  dbgl_slow_sprite:
  360 D1:AE1E -  -  -  -  	
  361 D1:AE1E 11 00 00 00 	ld de,0;clear de 
  362 D1:AE22 01 00 00 00 	ld bc,0
  363 D1:AE26 E1 -  -  -  	pop hl;back to data
  364 D1:AE27 C9 -  -  -  	ret
  365 D1:AE28 -  -  -  -  	
  366 D1:AE28 -  -  -  -  
  367 D1:AE28 -  -  -  -  
  368 D1:AE28 -  -  -  -  
  369 D1:AE28 -  -  -  -  
  370 D1:AE28 -  -  -  -  
  371 D1:AE28 -  -  -  -  
  372 D1:AE28 -  -  -  -  
  373 D1:AE28 -  -  -  -  
  374 D1:AE28 -  -  -  -  
  375 D1:AE28 -  -  -  -  
  376 D1:AE28 -  -  -  -  
  377 D1:AE28 -  -  -  -  
  378 D1:AE28 -  -  -  -  
  379 D1:AE28 -  -  -  -  
  380 D1:AE28 -  -  -  -  
  381 D1:AE28 -  -  -  -  
  382 D1:AE28 -  -  -  -  
  383 D1:AE28 -  -  -  -  
Listing for file "ascent.asm"
  551 D1:AE28 -  -  -  -  #include "drawFGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFGSprite.txt"
    1 D1:AE28 -  -  -  -  
    2 D1:AE28 -  -  -  -  ;hl = data, a = lines to draw. returns a = num loops to draw, hl = 1 before first gap length
    3 D1:AE28 -  -  -  -  setup_sprite_bottom_cut:
    4 D1:AE28 1B -  -  -  	dec de
    5 D1:AE29 01 00 00 00 	ld bc,0 ;clear bc
    6 D1:AE2D 4F -  -  -  	ld c,a;c = lines to draw
    7 D1:AE2E E5 -  -  -  	push hl ;save data 
    8 D1:AE2F 09 -  -  -  	add hl,bc
    9 D1:AE30 7E -  -  -  	ld a,(hl);num loops to draw
   10 D1:AE31 E1 -  -  -  	pop hl ;return to start of data
   11 D1:AE32 4E -  -  -  	ld c,(hl) ;height
   12 D1:AE33 09 -  -  -  	add hl,bc ;hl now points to 1 before first gap length
   13 D1:AE34 C9 -  -  -  	ret 
   14 D1:AE35 -  -  -  -  
   15 D1:AE35 -  -  -  -  setup_sprite_top_cut:
   16 D1:AE35 1B -  -  -  	dec de ;move to correct vram pos 
   17 D1:AE36 01 00 00 00 	ld bc,0
   18 D1:AE3A 4F -  -  -  	ld c,a ;lines to skip (1 indexed)
   19 D1:AE3B D5 -  -  -  	push de
   20 D1:AE3C 11 00 00 00 	ld de,0
   21 D1:AE40 E5 -  -  -  	push hl
   22 D1:AE41 5E -  -  -  	ld e,(hl);height
   23 D1:AE42 09 -  -  -  	add hl,bc;hl points to num skip loops 
   24 D1:AE43 4E -  -  -  	ld c,(hl);c holds num skip loops
   25 D1:AE44 E1 -  -  -  	pop hl;start of data
   26 D1:AE45 19 -  -  -  	add hl,de
   27 D1:AE46 46 -  -  -  	ld b,(hl);total number of loops
   28 D1:AE47 23 -  -  -  	inc hl;hl is pixel data
   29 D1:AE48 D1 -  -  -  	pop de;back to vram
   30 D1:AE49 79 -  -  -  	ld a,c;loops to skip
   31 D1:AE4A C9 -  -  -  	ret 
   32 D1:AE4B -  -  -  -  
   33 D1:AE4B -  -  -  -  ;hl = data, a = line number to draw. returns a = c = number of loops to skip, b = loops to skip + loops to draw. HL = gap length  
   34 D1:AE4B -  -  -  -  setup_sprite_single_line: ;sets up for single line drawing mode 
   35 D1:AE4B 1B -  -  -  	dec de
   36 D1:AE4C 01 00 00 00 	ld bc,0
   37 D1:AE50 4F -  -  -  	ld c,a ;line to draw
   38 D1:AE51 D5 -  -  -  	push de ;save vram 
   39 D1:AE52 11 00 00 00 	ld de,0
   40 D1:AE56 E5 -  -  -  	push hl
   41 D1:AE57 5E -  -  -  	ld e,(hl);height
   42 D1:AE58 09 -  -  -  	add hl,bc;hl points to num skip loops 
   43 D1:AE59 4E -  -  -  	ld c,(hl);c holds num skip loops
   44 D1:AE5A 23 -  -  -  	inc hl 
   45 D1:AE5B 46 -  -  -  	ld b,(hl);b holds num loops after drawn line 
   46 D1:AE5C E1 -  -  -  	pop hl;start of data
   47 D1:AE5D 19 -  -  -  	add hl,de
   48 D1:AE5E 23 -  -  -  	inc hl;hl is pixel data points to gap length 
   49 D1:AE5F D1 -  -  -  	pop de;back to vram
   50 D1:AE60 79 -  -  -  	ld a,c;loops to skip
   51 D1:AE61 C9 -  -  -  	ret 
   52 D1:AE62 -  -  -  -  
   53 D1:AE62 -  -  -  -  
   54 D1:AE62 -  -  -  -  
   55 D1:AE62 -  -  -  -  draw_fast_sprite_bottom_cut_from_line:
   56 D1:AE62 3C -  -  -  	inc a 
   57 D1:AE63 -  -  -  -  ;de = vram , hl = data, a = number lines to draw
   58 D1:AE63 -  -  -  -  draw_fast_sprite_bottom_cut:
   59 D1:AE63 CD 28 AE D1 	call setup_sprite_bottom_cut
   60 D1:AE67 23 -  -  -  	inc hl ;hl points to gap length 
   61 D1:AE68 4E -  -  -  	ld c,(hl);load alpha length
   62 D1:AE69 EB -  -  -  	ex de,hl;hl is vram, de is data
   63 D1:AE6A C3 B1 AE D1 	jp dfgs_loop
   64 D1:AE6E -  -  -  -  
   65 D1:AE6E -  -  -  -  
   66 D1:AE6E -  -  -  -  ;de = vram , hl = data, a = line to draw (starting from 0)
   67 D1:AE6E -  -  -  -  draw_fast_sprite_single_line:
   68 D1:AE6E B7 -  -  -  	or a 
   69 D1:AE6F CA 62 AE D1 	jp z,draw_fast_sprite_bottom_cut_from_line ; if a is 0, same as drawing bottom cut
   70 D1:AE73 -  -  -  -  	;we know a is not 0 here 
   71 D1:AE73 CD 4B AE D1 	call setup_sprite_single_line
   72 D1:AE77 -  -  -  -  	
   73 D1:AE77 C5 -  -  -  	push bc;save total and skipped loops
   74 D1:AE78 01 00 00 00 	ld bc,0
   75 D1:AE7C -  -  -  -  	
   76 D1:AE7C C3 89 AE D1 	jp draw_fast_sprite_top_loop 
   77 D1:AE80 -  -  -  -  
   78 D1:AE80 -  -  -  -  
   79 D1:AE80 -  -  -  -  
   80 D1:AE80 -  -  -  -  ;de = vram , hl = data, a = top lines to skip (1 indexed)
   81 D1:AE80 -  -  -  -  draw_fast_sprite_top_cut:
   82 D1:AE80 CD 35 AE D1 	call setup_sprite_top_cut
   83 D1:AE84 C5 -  -  -  	push bc ;save total and skipped loops 
   84 D1:AE85 01 00 00 00 	ld bc,0 
   85 D1:AE89 -  -  -  -  	
   86 D1:AE89 -  -  -  -  draw_fast_sprite_top_loop:; need to follow through gap and drawn lengths to find start of drawing
   87 D1:AE89 4E -  -  -  	ld c,(hl);load with first gap length	
   88 D1:AE8A EB -  -  -  	ex de,hl;hl is vram
   89 D1:AE8B 09 -  -  -  	add hl,bc
   90 D1:AE8C EB -  -  -  	ex de,hl;hl is data
   91 D1:AE8D 23 -  -  -  	inc hl
   92 D1:AE8E 4E -  -  -  	ld c,(hl);ldir length
   93 D1:AE8F 09 -  -  -  	add hl,bc;add ldir length
   94 D1:AE90 EB -  -  -  	ex de,hl;hl is vram
   95 D1:AE91 09 -  -  -  	add hl,bc;add ldir length
   96 D1:AE92 13 -  -  -  	inc de
   97 D1:AE93 EB -  -  -  	ex de,hl;hl is data
   98 D1:AE94 3D -  -  -  	dec a
   99 D1:AE95 C2 89 AE D1 	jp nz,draw_fast_sprite_top_loop
  100 D1:AE99 -  -  -  -  	
  101 D1:AE99 -  -  -  -  	
  102 D1:AE99 C1 -  -  -  	pop bc ;b is total loops, c is skipped loops 
  103 D1:AE9A 78 -  -  -  	ld a,b
  104 D1:AE9B 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
  105 D1:AE9C -  -  -  -  		
  106 D1:AE9C 01 00 00 00 	ld bc,0
  107 D1:AEA0 4E -  -  -  	ld c,(hl);load c with gap length
  108 D1:AEA1 EB -  -  -  	ex de,hl ;setup for loop 
  109 D1:AEA2 C3 B1 AE D1 	jp dfgs_loop
  110 D1:AEA6 -  -  -  -  
  111 D1:AEA6 -  -  -  -  
  112 D1:AEA6 -  -  -  -  ;de = vram , hl = data
  113 D1:AEA6 -  -  -  -  draw_fast_sprite_full:
  114 D1:AEA6 1B -  -  -  	dec de
  115 D1:AEA7 01 00 00 00 	ld bc,0
  116 D1:AEAB 4E -  -  -  	ld c,(hl);height
  117 D1:AEAC 09 -  -  -  	add hl,bc
  118 D1:AEAD 7E -  -  -  	ld a,(hl);total loops
  119 D1:AEAE 23 -  -  -  	inc hl
  120 D1:AEAF 4E -  -  -  	ld c,(hl);first gap length
  121 D1:AEB0 EB -  -  -  	ex de,hl
  122 D1:AEB1 -  -  -  -  ;a = num loops, c = alphaLength,hl = vram
  123 D1:AEB1 -  -  -  -  dfgs_loop:;gap, colors
  124 D1:AEB1 09 -  -  -  	add hl,bc;add alpha length
  125 D1:AEB2 EB -  -  -  	ex de,hl;swap, hl is data, de is vram
  126 D1:AEB3 23 -  -  -  	inc hl
  127 D1:AEB4 4E -  -  -  	ld c,(hl);get ldir length
  128 D1:AEB5 23 -  -  -  	inc hl
  129 D1:AEB6 ED B0 -  -  	ldir
  130 D1:AEB8 4E -  -  -  	ld c,(hl);load c with next alpha length
  131 D1:AEB9 EB -  -  -  	ex de,hl;swap, hl is vram
  132 D1:AEBA 3D -  -  -  	dec a
  133 D1:AEBB C2 B1 AE D1 	jp nz,dfgs_loop
  134 D1:AEBF C9 -  -  -  	ret
  135 D1:AEC0 -  -  -  -  	
  136 D1:AEC0 -  -  -  -  	
  137 D1:AEC0 -  -  -  -  	
  138 D1:AEC0 -  -  -  -  	
  139 D1:AEC0 -  -  -  -  
  140 D1:AEC0 -  -  -  -  
  141 D1:AEC0 -  -  -  -  ;hl = data, de = vram
  142 D1:AEC0 -  -  -  -  draw_slow_sprite_full:
  143 D1:AEC0 01 00 00 00 	ld bc,0
  144 D1:AEC4 4E -  -  -  	ld c,(hl);height
  145 D1:AEC5 09 -  -  -  	add hl,bc
  146 D1:AEC6 7E -  -  -  	ld a,(hl);num loops
  147 D1:AEC7 1B -  -  -  	dec de ;correct vram pos 
  148 D1:AEC8 D9 -  -  -  	exx;into shadow 
  149 D1:AEC9 47 -  -  -  	ld b,a ;number of loops
  150 D1:AECA -  -  -  -  	;hl = (gap length) -1 de = vram-1 b' = loops
  151 D1:AECA -  -  -  -  dsfgs_line_loop:
  152 D1:AECA D9 -  -  -  	exx;out of shadow
  153 D1:AECB 23 -  -  -  	inc hl;gap length
  154 D1:AECC 4E -  -  -  	ld c,(hl);gap length
  155 D1:AECD EB -  -  -  	ex de,hl;hl is vram
  156 D1:AECE 09 -  -  -  	add hl,bc;add aplha gap
  157 D1:AECF EB -  -  -  	ex de,hl;hl is data
  158 D1:AED0 23 -  -  -  	inc hl;hl points to single pix mask
  159 D1:AED1 1A -  -  -  	ld a,(de);vram data
  160 D1:AED2 A6 -  -  -  	and (hl)
  161 D1:AED3 23 -  -  -  	inc hl;pixel data
  162 D1:AED4 B6 -  -  -  	or (hl)
  163 D1:AED5 12 -  -  -  	ld (de),a
  164 D1:AED6 23 -  -  -  	inc hl;ldir length
  165 D1:AED7 -  -  -  -  	
  166 D1:AED7 13 -  -  -  	inc de;move to next pixel
  167 D1:AED8 -  -  -  -  	
  168 D1:AED8 7E -  -  -  	ld a,(hl);ldir length
  169 D1:AED9 23 -  -  -  	inc hl;data
  170 D1:AEDA 4F -  -  -  	ld c,a
  171 D1:AEDB B7 -  -  -  	or a
  172 D1:AEDC CA E2 AE D1 	jp z,dsfgs_ldir_skip
  173 D1:AEE0 ED B0 -  -  	ldir
  174 D1:AEE2 -  -  -  -  dsfgs_ldir_skip:
  175 D1:AEE2 1A -  -  -  	ld a,(de);vram data
  176 D1:AEE3 A6 -  -  -  	and (hl)
  177 D1:AEE4 23 -  -  -  	inc hl;pixel data
  178 D1:AEE5 B6 -  -  -  	or (hl)
  179 D1:AEE6 12 -  -  -  	ld (de),a
  180 D1:AEE7 -  -  -  -  	
  181 D1:AEE7 D9 -  -  -  	exx ;into shadow
  182 D1:AEE8 10 E0 -  -  	djnz dsfgs_line_loop
  183 D1:AEEA D9 -  -  -  	exx ;out 
  184 D1:AEEB C9 -  -  -  	ret
  185 D1:AEEC -  -  -  -  
  186 D1:AEEC -  -  -  -  
  187 D1:AEEC -  -  -  -  
  188 D1:AEEC -  -  -  -  ;de = vram , hl = data, a = line to draw (from 0)
  189 D1:AEEC -  -  -  -  draw_slow_sprite_single_line:
  190 D1:AEEC -  -  -  -  
  191 D1:AEEC B7 -  -  -  	or a 
  192 D1:AEED CA 2A AF D1 	jp z,draw_slow_sprite_bottom_cut_from_line ; if a is 0, same as drawing bottom cut
  193 D1:AEF1 -  -  -  -  	;we know a is not 0 here
  194 D1:AEF1 CD 4B AE D1 	call setup_sprite_single_line
  195 D1:AEF5 C5 -  -  -  	push bc;save total and skipped loops
  196 D1:AEF6 01 00 00 00 	ld bc,0
  197 D1:AEFA -  -  -  -  	
  198 D1:AEFA C3 07 AF D1 	jp slow_sprite_data_traverse 
  199 D1:AEFE -  -  -  -  	
  200 D1:AEFE -  -  -  -  
  201 D1:AEFE -  -  -  -  ;de = vram , hl = data, a = top lines to skip (from 1)
  202 D1:AEFE -  -  -  -  draw_slow_sprite_top_cut:
  203 D1:AEFE CD 35 AE D1 	call setup_sprite_top_cut
  204 D1:AF02 C5 -  -  -  	push bc;save total and skipped loops
  205 D1:AF03 01 00 00 00 	ld bc,0
  206 D1:AF07 -  -  -  -  ;hl = data start, a = num loops to skip, bc = 0
  207 D1:AF07 -  -  -  -  slow_sprite_data_traverse:
  208 D1:AF07 4E -  -  -  	ld c,(hl);gap length
  209 D1:AF08 EB -  -  -  	ex de,hl;hl is vram
  210 D1:AF09 09 -  -  -  	add hl,bc
  211 D1:AF0A EB -  -  -  	ex de,hl
  212 D1:AF0B -  -  -  -  	
  213 D1:AF0B 23 -  -  -  	inc hl ;inc past leading pixels
  214 D1:AF0C 23 -  -  -  	inc hl
  215 D1:AF0D 23 -  -  -  	inc hl;ldir length
  216 D1:AF0E 4E -  -  -  	ld c,(hl)
  217 D1:AF0F 09 -  -  -  	add hl,bc
  218 D1:AF10 EB -  -  -  	ex de,hl
  219 D1:AF11 09 -  -  -  	add hl,bc
  220 D1:AF12 EB -  -  -  	ex de,hl
  221 D1:AF13 13 -  -  -  	inc de;inc for leading pix 
  222 D1:AF14 23 -  -  -  	inc hl;inc past ending pixels
  223 D1:AF15 23 -  -  -  	inc hl
  224 D1:AF16 23 -  -  -  	inc hl;gap length
  225 D1:AF17 -  -  -  -  	
  226 D1:AF17 3D -  -  -  	dec a 
  227 D1:AF18 C2 07 AF D1 	jp nz,slow_sprite_data_traverse
  228 D1:AF1C -  -  -  -  
  229 D1:AF1C -  -  -  -  
  230 D1:AF1C C1 -  -  -  	pop bc ;b is total loops, c is skipped loops 
  231 D1:AF1D 78 -  -  -  	ld a,b
  232 D1:AF1E 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
  233 D1:AF1F 01 00 00 00 	ld bc,0;clear bc 
  234 D1:AF23 2B -  -  -  	dec hl	;hl points to 1 before gaplength
  235 D1:AF24 D9 -  -  -  	exx ;toshadow
  236 D1:AF25 47 -  -  -  	ld b,a 
  237 D1:AF26 C3 CA AE D1 	jp dsfgs_line_loop
  238 D1:AF2A -  -  -  -  	
  239 D1:AF2A -  -  -  -  	
  240 D1:AF2A -  -  -  -  	
  241 D1:AF2A -  -  -  -  draw_slow_sprite_bottom_cut_from_line:
  242 D1:AF2A 3C -  -  -  	inc a 
  243 D1:AF2B -  -  -  -  ;de = vram , hl = data, a = number lines to draw
  244 D1:AF2B -  -  -  -  draw_slow_sprite_bottom_cut:
  245 D1:AF2B -  -  -  -  
  246 D1:AF2B CD 28 AE D1 	call setup_sprite_bottom_cut
  247 D1:AF2F -  -  -  -  	;a = loops to draw, hl = 1 before gap length 
  248 D1:AF2F D9 -  -  -  	exx ;toshadow
  249 D1:AF30 47 -  -  -  	ld b,a
  250 D1:AF31 C3 CA AE D1 	jp dsfgs_line_loop
  251 D1:AF35 -  -  -  -  
  252 D1:AF35 -  -  -  -  
  253 D1:AF35 -  -  -  -  
  254 D1:AF35 -  -  -  -  
  255 D1:AF35 -  -  -  -  
  256 D1:AF35 -  -  -  -  
  257 D1:AF35 -  -  -  -  
  258 D1:AF35 -  -  -  -  
  259 D1:AF35 -  -  -  -  
  260 D1:AF35 -  -  -  -  
  261 D1:AF35 -  -  -  -  
  262 D1:AF35 -  -  -  -  
  263 D1:AF35 -  -  -  -  
  264 D1:AF35 -  -  -  -  
  265 D1:AF35 -  -  -  -  
  266 D1:AF35 -  -  -  -  
  267 D1:AF35 -  -  -  -  
  268 D1:AF35 -  -  -  -  
  269 D1:AF35 -  -  -  -  
  270 D1:AF35 -  -  -  -  
  271 D1:AF35 -  -  -  -  
  272 D1:AF35 -  -  -  -  
  273 D1:AF35 -  -  -  -  
  274 D1:AF35 -  -  -  -  
  275 D1:AF35 -  -  -  -  
  276 D1:AF35 -  -  -  -  
  277 D1:AF35 -  -  -  -  
  278 D1:AF35 -  -  -  -  
  279 D1:AF35 -  -  -  -  
  280 D1:AF35 -  -  -  -  
  281 D1:AF35 -  -  -  -  
  282 D1:AF35 -  -  -  -  
  283 D1:AF35 -  -  -  -  
  284 D1:AF35 -  -  -  -  
  285 D1:AF35 -  -  -  -  
  286 D1:AF35 -  -  -  -  
  287 D1:AF35 -  -  -  -   
  288 D1:AF35 -  -  -  -  
  289 D1:AF35 -  -  -  -  
  290 D1:AF35 -  -  -  -  
  291 D1:AF35 -  -  -  -  
  292 D1:AF35 -  -  -  -  
  293 D1:AF35 -  -  -  -  
  294 D1:AF35 -  -  -  -  
  295 D1:AF35 -  -  -  -  
  296 D1:AF35 -  -  -  -  
  297 D1:AF35 -  -  -  -  
  298 D1:AF35 -  -  -  -  
  299 D1:AF35 -  -  -  -  
  300 D1:AF35 -  -  -  -  
  301 D1:AF35 -  -  -  -  
  302 D1:AF35 -  -  -  -  
  303 D1:AF35 -  -  -  -  
  304 D1:AF35 -  -  -  -  
  305 D1:AF35 -  -  -  -  
  306 D1:AF35 -  -  -  -  
  307 D1:AF35 -  -  -  -  
  308 D1:AF35 -  -  -  -  
  309 D1:AF35 -  -  -  -  
  310 D1:AF35 -  -  -  -  
  311 D1:AF35 -  -  -  -  
  312 D1:AF35 -  -  -  -  
  313 D1:AF35 -  -  -  -  
  314 D1:AF35 -  -  -  -  
  315 D1:AF35 -  -  -  -  
  316 D1:AF35 -  -  -  -  
  317 D1:AF35 -  -  -  -  
  318 D1:AF35 -  -  -  -  
  319 D1:AF35 -  -  -  -  
  320 D1:AF35 -  -  -  -  
  321 D1:AF35 -  -  -  -  
  322 D1:AF35 -  -  -  -  
  323 D1:AF35 -  -  -  -  
  324 D1:AF35 -  -  -  -  
  325 D1:AF35 -  -  -  -  
  326 D1:AF35 -  -  -  -  
  327 D1:AF35 -  -  -  -  
  328 D1:AF35 -  -  -  -  
  329 D1:AF35 -  -  -  -  
  330 D1:AF35 -  -  -  -  
  331 D1:AF35 -  -  -  -  
  332 D1:AF35 -  -  -  -  
  333 D1:AF35 -  -  -  -  
  334 D1:AF35 -  -  -  -  
  335 D1:AF35 -  -  -  -  
  336 D1:AF35 -  -  -  -  
  337 D1:AF35 -  -  -  -  
  338 D1:AF35 -  -  -  -  
  339 D1:AF35 -  -  -  -  
  340 D1:AF35 -  -  -  -  
  341 D1:AF35 -  -  -  -  
  342 D1:AF35 -  -  -  -  
  343 D1:AF35 -  -  -  -  	
  344 D1:AF35 -  -  -  -  	
Listing for file "ascent.asm"
  552 D1:AF35 -  -  -  -  #include "BetterSpriteDecompress.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\BetterSpriteDecompress.txt"
    1 D1:AF35 -  -  -  -  
    2 D1:AF35 -  -  -  -  
    3 D1:AF35 -  -  -  -  
    4 D1:AF35 -  -  -  -  
    5 D1:AF35 -  -  -  -  
    6 D1:AF35 -  -  -  -  
    7 D1:AF35 -  -  -  -  
    8 D1:AF35 -  -  -  -  
    9 D1:AF35 -  -  -  -  ;REGISTER USEAGE
   10 D1:AF35 -  -  -  -  ;HL = sprite color data byte
   11 D1:AF35 -  -  -  -  ;C = bit selector for color data 
   12 D1:AF35 -  -  -  -  ;HL' = alpha data byte
   13 D1:AF35 -  -  -  -  ;C' = bit selector for alpha data
   14 D1:AF35 -  -  -  -  ;DE = output sprite data location
   15 D1:AF35 -  -  -  -  ;DE' = loops/line write location 
   16 D1:AF35 -  -  -  -  ;A' = alpha bits remaining to read in row
   17 D1:AF35 -  -  -  -  
   18 D1:AF35 -  -  -  -  ;SETUP ----------------
   19 D1:AF35 -  -  -  -  ;SET UP BPC MODE AND ALPHA/NOALPHA
   20 D1:AF35 -  -  -  -  ;write height or width(BG) data to decompressed sprite 
   21 D1:AF35 -  -  -  -  ;GET PER SPRITE PALETTE DATA
   22 D1:AF35 -  -  -  -  ;set registers to point to correct locations for decompression
   23 D1:AF35 -  -  -  -  ;------------
   24 D1:AF35 -  -  -  -  
   25 D1:AF35 -  -  -  -  ;GO TO EITHER FAST, SLOW, or BG SPRITE ALGORITHMS
   26 D1:AF35 -  -  -  -  
   27 D1:AF35 -  -  -  -  
   28 D1:AF35 -  -  -  -  ;FAST / SLOW ROUTINE ---------------------------
   29 D1:AF35 -  -  -  -  ;Parse through alpha data, count number of 00 pairs (gap length)
   30 D1:AF35 -  -  -  -  ;IF FAST, GOTO LDIR ROUTINE
   31 D1:AF35 -  -  -  -  ;leading pixel(s), either 11, 01, 10 in alpha data. 
   32 D1:AF35 -  -  -  -  ;write pixel mask and color data
   33 D1:AF35 -  -  -  -  
   34 D1:AF35 -  -  -  -  ;LDIR ROUTINE
   35 D1:AF35 -  -  -  -  ;Count number of 11 pairs in alpha data (LDIR length)
   36 D1:AF35 -  -  -  -  ;if slow and alpha data ends with 00, the last 11 pair becomes trailing pixels
   37 D1:AF35 -  -  -  -  ;Write LDIR length to sprite data 
   38 D1:AF35 -  -  -  -  ;Write LDIR pixel data (if nonzero)
   39 D1:AF35 -  -  -  -  ;IF FAST, GOTO END
   40 D1:AF35 -  -  -  -  
   41 D1:AF35 -  -  -  -  ;trailing pixels
   42 D1:AF35 -  -  -  -  ;11,10,01 in alpha data 
   43 D1:AF35 -  -  -  -  
   44 D1:AF35 -  -  -  -  ;END AND RESTART
   45 D1:AF35 -  -  -  -  ;Increment loops/line counter
   46 D1:AF35 -  -  -  -  ;check if end of line and write loops/line
   47 D1:AF35 -  -  -  -  
   48 D1:AF35 -  -  -  -  ;store registers and check if interrupt is required
   49 D1:AF35 -  -  -  -  ;if interruption required, return to main loop to draw next frame
   50 D1:AF35 -  -  -  -  ;otherwise return to start of loop
   51 D1:AF35 -  -  -  -  
   52 D1:AF35 -  -  -  -  ;
   53 D1:AF35 -  -  -  -  
   54 D1:AF35 -  -  -  -  
   55 D1:AF35 -  -  -  -  
   56 D1:AF35 -  -  -  -  
   57 D1:AF35 -  -  -  -  
   58 D1:AF35 -  -  -  -  
   59 D1:AF35 -  -  -  -  ;rotates c and incs hl if needed to point to next bit. can be flipped to dec bit 
   60 D1:AF35 -  -  -  -  sdcomp_next_in_bitstream:
   61 D1:AF35 -  -  -  -  sdcomp_flip_bitstream .equ $ + 1
   62 D1:AF35 CB 09 -  -  	rrc c;rlc flip
   63 D1:AF37 D0 -  -  -  	ret nc
   64 D1:AF38 -  -  -  -  sdcomp_flip_bitstream_2 .equ $
   65 D1:AF38 23 -  -  -  	inc hl;dec hl flip
   66 D1:AF39 C9 -  -  -  	ret
   67 D1:AF3A -  -  -  -  
   68 D1:AF3A -  -  -  -  ;ALPHA HELPER FUNCS ================================================================================================	
   69 D1:AF3A -  -  -  -  
   70 D1:AF3A -  -  -  -  ;IN SHADOW
   71 D1:AF3A -  -  -  -  ;HL POINTS TO PIXEL ALPHA DATA
   72 D1:AF3A -  -  -  -  ;C IS BITMASK
   73 D1:AF3A -  -  -  -  ;RETURNS 0 OR nonzero IN A 
   74 D1:AF3A -  -  -  -  ;If final alpha bit in line is read, writes loop/line data, ...
   75 D1:AF3A -  -  -  -  ; sets some flags, decrements remaining lines, traverses sprite data if flip, returns the read data 
   76 D1:AF3A -  -  -  -  ; next call returns first bit in next row  
   77 D1:AF3A -  -  -  -  sdcomp_get_next_alpha:
   78 D1:AF3A -  -  -  -  	;ld a,$A2;test 
   79 D1:AF3A -  -  -  -  	;call write_a_to_ram
   80 D1:AF3A 79 -  -  -  	ld a,c 
   81 D1:AF3B -  -  -  -  	;call write_a_to_ram 
   82 D1:AF3B 7E -  -  -  	ld a,(hl)
   83 D1:AF3C -  -  -  -  	;call write_a_to_ram
   84 D1:AF3C -  -  -  -  	
   85 D1:AF3C 37 -  -  -  	scf 
   86 D1:AF3D -  -  -  -  sdcomp_end_of_line_alp .equ $
   87 D1:AF3D DA 4A AF D1 	jp c, sdcomp_end_of_line_alp_skip
   88 D1:AF41 -  -  -  -  
   89 D1:AF41 -  -  -  -  	;ld a,$A3
   90 D1:AF41 -  -  -  -  	;call write_a_to_ram 
   91 D1:AF41 -  -  -  -  	
   92 D1:AF41 3E D2 -  -  	ld a, %11010010 ;jp nc 
   93 D1:AF43 32 AD AF D1 	ld (sdcomp_end_vitrual_zero_read),a 
   94 D1:AF47 -  -  -  -  	
   95 D1:AF47 3E 00 -  -  	ld a,0
   96 D1:AF49 C9 -  -  -  	ret ;returns virtual 0, outside of data range 
   97 D1:AF4A -  -  -  -  
   98 D1:AF4A -  -  -  -  sdcomp_end_of_line_alp_skip:
   99 D1:AF4A -  -  -  -  	
  100 D1:AF4A -  -  -  -  	
  101 D1:AF4A -  -  -  -  	
  102 D1:AF4A -  -  -  -  ;MUST BE RESET EVERY ROW
  103 D1:AF4A 37 -  -  -  	scf
  104 D1:AF4B -  -  -  -  sdcomp_bit_offset .equ $ ;jp nc for offset
  105 D1:AF4B DA 58 AF D1 	jp c,sdcomp_bit_offset_skip
  106 D1:AF4F 3E DA -  -  	ld a,%11011010;jp c 
  107 D1:AF51 32 4B AF D1 	ld (sdcomp_bit_offset),a
  108 D1:AF55 -  -  -  -  	;ld a,$A9
  109 D1:AF55 -  -  -  -  	;call write_a_to_ram
  110 D1:AF55 3E 00 -  -  	ld a,0
  111 D1:AF57 C9 -  -  -  	ret ;return 0 first bit
  112 D1:AF58 -  -  -  -  sdcomp_bit_offset_skip:;skip bit offset
  113 D1:AF58 -  -  -  -  		
  114 D1:AF58 -  -  -  -  	;ld a,$EF
  115 D1:AF58 -  -  -  -  	;call write_a_to_ram
  116 D1:AF58 7E -  -  -  	ld a,(hl)
  117 D1:AF59 -  -  -  -  	;push af 
  118 D1:AF59 -  -  -  -  	;call write_a_to_ram
  119 D1:AF59 -  -  -  -  	;ld a,c
  120 D1:AF59 -  -  -  -  	;call write_a_to_ram
  121 D1:AF59 -  -  -  -  	;pop af 
  122 D1:AF59 -  -  -  -  	
  123 D1:AF59 -  -  -  -  	
  124 D1:AF59 A1 -  -  -  	and c 
  125 D1:AF5A CD 35 AF D1 	call sdcomp_next_in_bitstream;incs bitstream
  126 D1:AF5E -  -  -  -  	;a holds data to return
  127 D1:AF5E -  -  -  -  	;call write_a_to_ram
  128 D1:AF5E 37 -  -  -  	scf 
  129 D1:AF5F -  -  -  -  sdcomp_no_alpha_1 .equ $;Load a with 1 if no alpha
  130 D1:AF5F DA 65 AF D1 	jp c,sdcomp_no_alpha_1_skip
  131 D1:AF63 3E 01 -  -  	ld a,1
  132 D1:AF65 -  -  -  -  sdcomp_no_alpha_1_skip:
  133 D1:AF65 -  -  -  -  	
  134 D1:AF65 -  -  -  -  	
  135 D1:AF65 08 -  -  -  	ex af,af' ;';into shadow
  136 D1:AF66 3D -  -  -  	dec a 
  137 D1:AF67 -  -  -  -  	;call write_a_to_ram
  138 D1:AF67 C2 93 AF D1 	jp nz, sdcomp_end_of_line_skip
  139 D1:AF6B -  -  -  -  	
  140 D1:AF6B -  -  -  -  	;HAve read last bit in line  
  141 D1:AF6B -  -  -  -  	
  142 D1:AF6B -  -  -  -  	;ld a,$AC;Test
  143 D1:AF6B -  -  -  -  	;call write_a_to_ram;Test
  144 D1:AF6B -  -  -  -  	;Decrement lines remaining in sprite
  145 D1:AF6B -  -  -  -  sdcomp_lines_remaining .equ $ + 1
  146 D1:AF6B 3E 00 -  -  	ld a,0
  147 D1:AF6D 3D -  -  -  	dec a 
  148 D1:AF6E 32 6C AF D1 	ld (sdcomp_lines_remaining),a
  149 D1:AF72 -  -  -  -  	;call write_a_to_ram
  150 D1:AF72 C2 7C AF D1 	jp nz,sdcomp_set_end_flag_skip
  151 D1:AF76 -  -  -  -  	;end of last line reached 
  152 D1:AF76 3E DA -  -  	ld a,%11011010;jp c
  153 D1:AF78 32 F2 B1 D1 	ld (sdcomp_end_reached_flag) , a ;set end reached flag to indicate sprite is done decompressing TODO 
  154 D1:AF7C -  -  -  -  	;ld a,$E9
  155 D1:AF7C -  -  -  -  	;call write_a_to_ram;TEST 
  156 D1:AF7C -  -  -  -  sdcomp_set_end_flag_skip:
  157 D1:AF7C -  -  -  -  	
  158 D1:AF7C -  -  -  -  
  159 D1:AF7C -  -  -  -  	
  160 D1:AF7C 3E D2 -  -  	ld a, %11010010 ;jp nc 
  161 D1:AF7E 32 CD B1 D1 	ld (sdcomp_end_of_line_gaplength),a
  162 D1:AF82 32 3D AF D1 	ld (sdcomp_end_of_line_alp),a
  163 D1:AF86 -  -  -  -  	;ld (sdcomp_write_loops_per_line_flag),a 
  164 D1:AF86 37 -  -  -  	scf ;Set offset bit for next line
  165 D1:AF87 -  -  -  -  sdcomp_offset_1 .equ $
  166 D1:AF87 DA 91 AF D1 	jp c,sdcomp_offset_1_skip
  167 D1:AF8B 3E D2 -  -  	ld a, %11010010 ;jp nc 
  168 D1:AF8D 32 4B AF D1 	ld (sdcomp_bit_offset),a
  169 D1:AF91 -  -  -  -  sdcomp_offset_1_skip:
  170 D1:AF91 -  -  -  -  	
  171 D1:AF91 -  -  -  -  sdcomp_sprite_width_2 .equ $+1
  172 D1:AF91 3E 00 -  -  	ld a,0 ;Return sprite width to a'
  173 D1:AF93 -  -  -  -  	
  174 D1:AF93 -  -  -  -  	;call write_a_to_ram
  175 D1:AF93 -  -  -  -  	
  176 D1:AF93 -  -  -  -  sdcomp_end_of_line_skip:
  177 D1:AF93 08 -  -  -  	ex af,af' ;' ;out
  178 D1:AF94 -  -  -  -  	
  179 D1:AF94 -  -  -  -  	;push af ;testing
  180 D1:AF94 -  -  -  -  	;ld a,$A0
  181 D1:AF94 -  -  -  -  	;call write_a_to_ram
  182 D1:AF94 -  -  -  -  	;pop af 
  183 D1:AF94 -  -  -  -  	;call write_a_to_ram
  184 D1:AF94 -  -  -  -  	
  185 D1:AF94 C9 -  -  -  	ret 
  186 D1:AF95 -  -  -  -  	
  187 D1:AF95 -  -  -  -  
  188 D1:AF95 -  -  -  -  
  189 D1:AF95 -  -  -  -  ;in shadow,returns a $FF,$0F,$F0,$00
  190 D1:AF95 -  -  -  -  sdcomp_get_next_alpha_pair:
  191 D1:AF95 -  -  -  -  	;ld a,$A1
  192 D1:AF95 -  -  -  -  	;call write_a_to_ram
  193 D1:AF95 -  -  -  -  	
  194 D1:AF95 -  -  -  -  	;ld a,c ;test
  195 D1:AF95 -  -  -  -  	;call write_a_to_ram 
  196 D1:AF95 -  -  -  -  	;ld a,(hl) ;test
  197 D1:AF95 -  -  -  -  	;call write_a_to_ram
  198 D1:AF95 -  -  -  -  	
  199 D1:AF95 3E DA -  -  	ld a,%11011010;jp c 
  200 D1:AF97 32 AD AF D1 	ld(sdcomp_end_vitrual_zero_read),a ;reset vitrual zero read flag
  201 D1:AF9B -  -  -  -  	
  202 D1:AF9B CD 3A AF D1 	call sdcomp_get_next_alpha
  203 D1:AF9F B7 -  -  -  	or a 
  204 D1:AFA0 CA AA AF D1 	jp z,sdcomp_get_next_alpha_pair0
  205 D1:AFA4 3E F0 -  -  	ld a,$F0;FIRST BIT WAS 1
  206 D1:AFA6 -  -  -  -  	;call write_a_to_ram
  207 D1:AFA6 C3 B9 AF D1 	jp sdcomp_get_next_alpha_pair1
  208 D1:AFAA -  -  -  -  sdcomp_get_next_alpha_pair0:
  209 D1:AFAA 3E 00 -  -  	ld a,0
  210 D1:AFAC -  -  -  -  	
  211 D1:AFAC 37 -  -  -  	scf 
  212 D1:AFAD -  -  -  -  sdcomp_end_vitrual_zero_read .equ $
  213 D1:AFAD DA B9 AF D1 	jp c,sdcomp_get_next_alpha_pair1
  214 D1:AFB1 F5 -  -  -  	push af 
  215 D1:AFB2 -  -  -  -  	;This gets triggered when we have read a vitrual 0 (outside of line) as the first bit in an alpha pair 
  216 D1:AFB2 -  -  -  -  	
  217 D1:AFB2 3E 3D -  -  	ld a,%00111101 ;dec a 
  218 D1:AFB4 32 D4 B1 D1 	ld (sdcomp_dec_gap_btwn_rows),a 
  219 D1:AFB8 -  -  -  -  	;We should subtract 1 from the next interline gap length whenever a virtual 00 is read.
  220 D1:AFB8 -  -  -  -  	;ld a,$A4
  221 D1:AFB8 -  -  -  -  	;call write_a_to_ram
  222 D1:AFB8 F1 -  -  -  	pop af 
  223 D1:AFB9 -  -  -  -  	
  224 D1:AFB9 -  -  -  -  sdcomp_get_next_alpha_pair1:
  225 D1:AFB9 -  -  -  -  
  226 D1:AFB9 -  -  -  -  	
  227 D1:AFB9 32 CF AF D1 	ld (sdcomp_get_next_alpha_pair_or),a 
  228 D1:AFBD -  -  -  -  	
  229 D1:AFBD CD 3A AF D1 	call sdcomp_get_next_alpha
  230 D1:AFC1 B7 -  -  -  	or a 
  231 D1:AFC2 CA CC AF D1 	jp z,sdcomp_get_next_alpha_pair2
  232 D1:AFC6 3E 0F -  -  	ld a,$0F;SECOND BIT WAS 1
  233 D1:AFC8 C3 CE AF D1 	jp sdcomp_get_next_alpha_pair3
  234 D1:AFCC -  -  -  -  sdcomp_get_next_alpha_pair2:
  235 D1:AFCC 3E 00 -  -  	ld a,0;SECOND BIT WAS 0
  236 D1:AFCE -  -  -  -  sdcomp_get_next_alpha_pair3:	
  237 D1:AFCE -  -  -  -  sdcomp_get_next_alpha_pair_or .equ $ + 1
  238 D1:AFCE F6 00 -  -  	or 0;OR WITH FIRST BIT 
  239 D1:AFD0 -  -  -  -  	
  240 D1:AFD0 C9 -  -  -  	ret 
  241 D1:AFD1 -  -  -  -  	
  242 D1:AFD1 -  -  -  -  ;COLOR HELPER FUNCS =================================================================================================
  243 D1:AFD1 -  -  -  -  
  244 D1:AFD1 -  -  -  -  ;not in shadow, returns a = color0000
  245 D1:AFD1 -  -  -  -  sdcomp_get_next_color_leading_nibble:
  246 D1:AFD1 CD DA AF D1 	call sdcomp_get_next_color
  247 D1:AFD5 0F -  -  -  	rrca 
  248 D1:AFD6 0F -  -  -  	rrca 
  249 D1:AFD7 0F -  -  -  	rrca 
  250 D1:AFD8 0F -  -  -  	rrca
  251 D1:AFD9 C9 -  -  -  	ret 
  252 D1:AFDA -  -  -  -  
  253 D1:AFDA -  -  -  -  
  254 D1:AFDA -  -  -  -  
  255 D1:AFDA -  -  -  -  ;bit orders
  256 D1:AFDA -  -  -  -  ;	noflip   flip 
  257 D1:AFDA -  -  -  -  ;4bpp 3210 	 0123
  258 D1:AFDA -  -  -  -  ;3bpp 210	 012
  259 D1:AFDA -  -  -  -  ;2bpp 10	 01
  260 D1:AFDA -  -  -  -  ;1bpp 0		 0
  261 D1:AFDA -  -  -  -  
  262 D1:AFDA -  -  -  -  ;not in shadow, returns a = 0000color
  263 D1:AFDA -  -  -  -  sdcomp_get_next_color:
  264 D1:AFDA D5 -  -  -  	push de ;save data write location
  265 D1:AFDB 1E 00 -  -  	ld e,0;E will store the final color data
  266 D1:AFDD -  -  -  -  	
  267 D1:AFDD 37 -  -  -  	scf
  268 D1:AFDE -  -  -  -  sdcomp_0bpc .equ $ ;if sprite is 0bpc, skip reading bitstream, set to jp c 
  269 D1:AFDE D2 28 B0 D1 	jp nc,sdcomp_get_color_from_index
  270 D1:AFE2 -  -  -  -  	
  271 D1:AFE2 -  -  -  -  	;ld a,$C1
  272 D1:AFE2 -  -  -  -  	;call write_a_to_ram
  273 D1:AFE2 -  -  -  -  	
  274 D1:AFE2 7E -  -  -  	ld a,(hl) ;read next bit 
  275 D1:AFE3 -  -  -  -  	;call write_a_to_ram ;TEST
  276 D1:AFE3 A1 -  -  -  	and c
  277 D1:AFE4 -  -  -  -  	;call write_a_to_ram ;TEST
  278 D1:AFE4 CD 35 AF D1 	call sdcomp_next_in_bitstream  ;inc bitstream 
  279 D1:AFE8 B7 -  -  -  	or a
  280 D1:AFE9 CA EF AF D1 	jp z,sdcomp_get_color_data_set_skip_1
  281 D1:AFED -  -  -  -  sdcomp_color_bit_0 .equ $ + 1 
  282 D1:AFED CB CB -  -  	set 1,e  ;set bit of e reg to color, 0 for flip, else depends on bpc 
  283 D1:AFEF -  -  -  -  sdcomp_get_color_data_set_skip_1:
  284 D1:AFEF -  -  -  -  	
  285 D1:AFEF 37 -  -  -  	scf
  286 D1:AFF0 -  -  -  -  sdcomp_1bpc .equ $
  287 D1:AFF0 D2 28 B0 D1 	jp nc,sdcomp_get_color_from_index ;if 1bpc jump to end 
  288 D1:AFF4 -  -  -  -  
  289 D1:AFF4 -  -  -  -  	;ld a,$C2
  290 D1:AFF4 -  -  -  -  	;call write_a_to_ram
  291 D1:AFF4 -  -  -  -  	
  292 D1:AFF4 7E -  -  -  	ld a,(hl)
  293 D1:AFF5 -  -  -  -  	;call write_a_to_ram ;TEST
  294 D1:AFF5 A1 -  -  -  	and c 
  295 D1:AFF6 -  -  -  -  	;call write_a_to_ram ;TEST
  296 D1:AFF6 CD 35 AF D1 	call sdcomp_next_in_bitstream
  297 D1:AFFA B7 -  -  -  	or a
  298 D1:AFFB CA 01 B0 D1 	jp z,sdcomp_get_color_data_set_skip_2
  299 D1:AFFF -  -  -  -  sdcomp_color_bit_1 .equ $ + 1 	
  300 D1:AFFF CB C3 -  -  	set 0,e ;store next bit of color data in e  
  301 D1:B001 -  -  -  -  sdcomp_get_color_data_set_skip_2:
  302 D1:B001 -  -  -  -  	
  303 D1:B001 37 -  -  -  	scf
  304 D1:B002 -  -  -  -  sdcomp_2bpc .equ $ ;if 2bpc jump to end
  305 D1:B002 D2 28 B0 D1 	jp nc,sdcomp_get_color_from_index
  306 D1:B006 -  -  -  -  	
  307 D1:B006 7E -  -  -  	ld a,(hl)
  308 D1:B007 A1 -  -  -  	and c 
  309 D1:B008 CD 35 AF D1 	call sdcomp_next_in_bitstream
  310 D1:B00C B7 -  -  -  	or a
  311 D1:B00D CA 13 B0 D1 	jp z,sdcomp_get_color_data_set_skip_3
  312 D1:B011 -  -  -  -  sdcomp_color_bit_2 .equ $ + 1 
  313 D1:B011 CB D3 -  -  	set 2,e 
  314 D1:B013 -  -  -  -  sdcomp_get_color_data_set_skip_3:
  315 D1:B013 -  -  -  -  	
  316 D1:B013 37 -  -  -  	scf
  317 D1:B014 -  -  -  -  sdcomp_3bpc .equ $
  318 D1:B014 D2 28 B0 D1 	jp nc,sdcomp_get_color_from_index	
  319 D1:B018 -  -  -  -  
  320 D1:B018 -  -  -  -  ;4bpp, interpret as color data, not indexed	
  321 D1:B018 7E -  -  -  	ld a,(hl)
  322 D1:B019 A1 -  -  -  	and c 
  323 D1:B01A CD 35 AF D1 	call sdcomp_next_in_bitstream
  324 D1:B01E B7 -  -  -  	or a
  325 D1:B01F CA 25 B0 D1 	jp z,sdcomp_get_color_data_set_skip_4
  326 D1:B023 -  -  -  -  sdcomp_color_bit_3 .equ $ + 1 
  327 D1:B023 CB DB -  -  	set 3,e 
  328 D1:B025 -  -  -  -  sdcomp_get_color_data_set_skip_4:
  329 D1:B025 -  -  -  -  ;4bpp, interpret as color data, not indexed
  330 D1:B025 7B -  -  -  	ld a,e 
  331 D1:B026 D1 -  -  -  	pop de 
  332 D1:B027 C9 -  -  -  	ret 
  333 D1:B028 -  -  -  -  
  334 D1:B028 -  -  -  -  sdcomp_get_color_from_index: ; e holds index of color data, 1-8
  335 D1:B028 -  -  -  -  	
  336 D1:B028 -  -  -  -  	;ld a,$DD
  337 D1:B028 -  -  -  -  	;call write_a_to_ram
  338 D1:B028 -  -  -  -  	;ld a,e 
  339 D1:B028 -  -  -  -  	;call write_a_to_ram
  340 D1:B028 -  -  -  -  	
  341 D1:B028 -  -  -  -  	
  342 D1:B028 CB 53 -  -  	bit 2,e 
  343 D1:B02A CA 4C B0 D1 	jp z, sdcomp_get_color_from_index_2l
  344 D1:B02E -  -  -  -  	
  345 D1:B02E -  -  -  -  	;Bit 2 = 1 
  346 D1:B02E CB 4B -  -  	bit 1,e 
  347 D1:B030 CA 40 B0 D1 	jp z,sdcomp_get_color_from_index_2h1l
  348 D1:B034 -  -  -  -  
  349 D1:B034 -  -  -  -  	;bit 2 = 1 1 = 1
  350 D1:B034 -  -  -  -  sdcomp_indexed_color_data_4 .equ $ + 1	
  351 D1:B034 3E 00 -  -  	ld a,0
  352 D1:B036 CB 43 -  -  	bit 0,e 
  353 D1:B038 CA 6E B0 D1 	jp z,sdcomp_get_color_from_index_msn
  354 D1:B03C C3 6A B0 D1 	jp sdcomp_get_color_from_index_lsn
  355 D1:B040 -  -  -  -  
  356 D1:B040 -  -  -  -  sdcomp_get_color_from_index_2h1l:
  357 D1:B040 -  -  -  -  	;2 = 1 1 = 0 
  358 D1:B040 -  -  -  -  sdcomp_indexed_color_data_3 .equ $ + 1	
  359 D1:B040 3E 00 -  -  	ld a,0
  360 D1:B042 CB 43 -  -  	bit 0,e 
  361 D1:B044 CA 6E B0 D1 	jp z,sdcomp_get_color_from_index_msn
  362 D1:B048 C3 6A B0 D1 	jp sdcomp_get_color_from_index_lsn
  363 D1:B04C -  -  -  -  	
  364 D1:B04C -  -  -  -  sdcomp_get_color_from_index_2l:
  365 D1:B04C -  -  -  -  	;bit 2 was 0 
  366 D1:B04C CB 4B -  -  	bit 1,e 
  367 D1:B04E CA 5E B0 D1 	jp z,sdcomp_get_color_from_index_2l1l
  368 D1:B052 -  -  -  -  	
  369 D1:B052 -  -  -  -  	;bit 2 = 0 1 = 1
  370 D1:B052 -  -  -  -  sdcomp_indexed_color_data_2 .equ $ + 1	
  371 D1:B052 3E 00 -  -  	ld a,0
  372 D1:B054 CB 43 -  -  	bit 0,e 
  373 D1:B056 CA 6E B0 D1 	jp z,sdcomp_get_color_from_index_msn
  374 D1:B05A C3 6A B0 D1 	jp sdcomp_get_color_from_index_lsn
  375 D1:B05E -  -  -  -  	
  376 D1:B05E -  -  -  -  sdcomp_get_color_from_index_2l1l:
  377 D1:B05E -  -  -  -  	;bit 2 =0  1 = 0
  378 D1:B05E -  -  -  -  sdcomp_indexed_color_data_1 .equ $ + 1	
  379 D1:B05E 3E 00 -  -  	ld a,0
  380 D1:B060 -  -  -  -  	
  381 D1:B060 CB 43 -  -  	bit 0,e 
  382 D1:B062 CA 6E B0 D1 	jp z,sdcomp_get_color_from_index_msn
  383 D1:B066 C3 6A B0 D1 	jp sdcomp_get_color_from_index_lsn
  384 D1:B06A -  -  -  -  sdcomp_get_color_from_index_lsn:
  385 D1:B06A E6 0F -  -  	and %00001111;and with least significant nibble 
  386 D1:B06C D1 -  -  -  	pop de 
  387 D1:B06D -  -  -  -  	
  388 D1:B06D -  -  -  -  	;push af 
  389 D1:B06D -  -  -  -  	;ld a,$C0
  390 D1:B06D -  -  -  -  	;call write_a_to_ram
  391 D1:B06D -  -  -  -  	;pop af 
  392 D1:B06D -  -  -  -  	;call write_a_to_ram
  393 D1:B06D -  -  -  -  	
  394 D1:B06D C9 -  -  -  	ret 
  395 D1:B06E -  -  -  -  	
  396 D1:B06E -  -  -  -  sdcomp_get_color_from_index_msn:
  397 D1:B06E E6 F0 -  -  	and %11110000;and with most significant nibble 
  398 D1:B070 0F -  -  -  	rrca 
  399 D1:B071 0F -  -  -  	rrca 
  400 D1:B072 0F -  -  -  	rrca 
  401 D1:B073 0F -  -  -  	rrca 
  402 D1:B074 D1 -  -  -  	pop de 
  403 D1:B075 -  -  -  -  	
  404 D1:B075 -  -  -  -  	;push af 
  405 D1:B075 -  -  -  -  	;ld a,$C0
  406 D1:B075 -  -  -  -  	;call write_a_to_ram
  407 D1:B075 -  -  -  -  	;pop af 
  408 D1:B075 -  -  -  -  	;call write_a_to_ram
  409 D1:B075 -  -  -  -  	
  410 D1:B075 C9 -  -  -  	ret 
  411 D1:B076 -  -  -  -  
  412 D1:B076 -  -  -  -  
  413 D1:B076 -  -  -  -  
  414 D1:B076 -  -  -  -  ;function for traversing sprite data for reversed sprites.
  415 D1:B076 -  -  -  -  ;Reads forward through alpha and color data to end of line, so that it can then be read backwards 
  416 D1:B076 -  -  -  -  ;in shadow ,destroys a
  417 D1:B076 -  -  -  -  sdcomp_traverse_line_data:
  418 D1:B076 D9 -  -  -  	exx ;OUT 
  419 D1:B077 -  -  -  -  sdcomp_color_data_line_end_byte .equ $ + 1
  420 D1:B077 21 00 00 00 	ld hl,0 ;load end of previous color data line 
  421 D1:B07B -  -  -  -  sdcomp_color_data_line_end_mask .equ $ + 1
  422 D1:B07B 0E 00 -  -  	ld c,0 ;load end of previous color data line
  423 D1:B07D D9 -  -  -  	exx;toshadow 
  424 D1:B07E -  -  -  -  	
  425 D1:B07E -  -  -  -  	;load end of previous alpha data line 
  426 D1:B07E -  -  -  -  sdcomp_alpha_data_line_end_byte .equ $ + 1
  427 D1:B07E 21 00 00 00 	ld hl,0
  428 D1:B082 -  -  -  -  sdcomp_alpha_data_line_end_mask .equ $ + 1
  429 D1:B082 0E 00 -  -  	ld c,0
  430 D1:B084 -  -  -  -  sdcomp_traverse_initial:
  431 D1:B084 D5 -  -  -  	push de
  432 D1:B085 -  -  -  -  sdcomp_sprite_width .equ $ + 1
  433 D1:B085 1E 00 -  -  	ld e, 0
  434 D1:B087 -  -  -  -  	;e holds sprite width 
  435 D1:B087 -  -  -  -  	
  436 D1:B087 -  -  -  -  	;Read forward through alpha data and inc color pointer if alpha is 1 
  437 D1:B087 -  -  -  -  sdcomp_traverse_line_data_loop:
  438 D1:B087 CB 09 -  -  	rrc c 
  439 D1:B089 D2 8E B0 D1 	jp nc,sdcomp_traverse_line_data_alpha_inc_skip ;if not reached end of byte, skip
  440 D1:B08D 23 -  -  -  	inc hl ;have reached end of alpha byte, inc hl 
  441 D1:B08E -  -  -  -  sdcomp_traverse_line_data_alpha_inc_skip:
  442 D1:B08E 7E -  -  -  	ld a,(hl)
  443 D1:B08F A1 -  -  -  	and c ;read alpha data 
  444 D1:B090 -  -  -  -  sdcomp_no_alpha_3 .equ $ ;jp c for no alpha sprites to always inc color 
  445 D1:B090 CA A6 B0 D1 	jp z,sdcomp_traverse_line_data_color_skip;if no alpha skip incrementing color. 
  446 D1:B094 D9 -  -  -  	exx;out of shadow 
  447 D1:B095 -  -  -  -  
  448 D1:B095 CB 09 -  -  	rrc c ;rotate mask
  449 D1:B097 -  -  -  -  sdcomp_traverse_2bpp .equ $ + 1
  450 D1:B097 CB 0F -  -  	rrc a ;replace with rrc c for 2bpc (not nop because rrc c is 2 byte operation)
  451 D1:B099 -  -  -  -  sdcomp_traverse_3bpp .equ $ + 1
  452 D1:B099 CB 0F -  -  	rrc a;rrc c for 3bpc
  453 D1:B09B -  -  -  -  sdcomp_traverse_4bpp .equ $ + 1
  454 D1:B09B CB 0F -  -  	rrc a;rrc c for 4 bpc 
  455 D1:B09D -  -  -  -  	
  456 D1:B09D -  -  -  -  	;check if end of byte was reached during rotations
  457 D1:B09D 79 -  -  -  	ld a,c
  458 D1:B09E -  -  -  -  sdcomp_traverse_bit_check .equ $ + 1
  459 D1:B09E E6 F0 -  -  	and %11110000 ; 4bpc = 11110000 3bpc = 11100000, 2bpc 11000000 1bpc 10000000 TODO 
  460 D1:B0A0 CA A5 B0 D1 	jp z,sdcomp_traverse_line_data_color_inc_skip
  461 D1:B0A4 23 -  -  -  	inc hl ;inc hl if end of byte was reached 
  462 D1:B0A5 -  -  -  -  sdcomp_traverse_line_data_color_inc_skip:
  463 D1:B0A5 D9 -  -  -  	exx ;toshadow
  464 D1:B0A6 -  -  -  -  sdcomp_traverse_line_data_color_skip:
  465 D1:B0A6 1D -  -  -  	dec e ;e holds sprite width 
  466 D1:B0A7 C2 87 B0 D1 	jp nz,sdcomp_traverse_line_data_loop ;loop until end of line reached 
  467 D1:B0AB D1 -  -  -  	pop de  ;back to write location 
  468 D1:B0AC -  -  -  -  	;set new end of line pointers 
  469 D1:B0AC -  -  -  -  	
  470 D1:B0AC -  -  -  -  	;ld a,$BB 
  471 D1:B0AC -  -  -  -  	;call write_a_to_ram 
  472 D1:B0AC -  -  -  -  	;ld a,(hl) 
  473 D1:B0AC -  -  -  -  	;call write_a_to_ram 
  474 D1:B0AC -  -  -  -  	;ld a,c 
  475 D1:B0AC -  -  -  -  	;call write_a_to_ram 
  476 D1:B0AC -  -  -  -  	
  477 D1:B0AC -  -  -  -  	
  478 D1:B0AC 22 7F B0 D1 	ld (sdcomp_alpha_data_line_end_byte),hl
  479 D1:B0B0 79 -  -  -  	ld a,c
  480 D1:B0B1 32 83 B0 D1 	ld (sdcomp_alpha_data_line_end_mask),a
  481 D1:B0B5 D9 -  -  -  	exx ;out
  482 D1:B0B6 22 78 B0 D1 	ld (sdcomp_color_data_line_end_byte),hl
  483 D1:B0BA 79 -  -  -  	ld a,c 
  484 D1:B0BB 32 7C B0 D1 	ld (sdcomp_color_data_line_end_mask),a
  485 D1:B0BF -  -  -  -  	
  486 D1:B0BF -  -  -  -  	;ld a,(hl) 
  487 D1:B0BF -  -  -  -  	;call write_a_to_ram 
  488 D1:B0BF -  -  -  -  	;ld a,c 
  489 D1:B0BF -  -  -  -  	;call write_a_to_ram 
  490 D1:B0BF -  -  -  -  	
  491 D1:B0BF D9 -  -  -  	exx;to shadow 
  492 D1:B0C0 C9 -  -  -  	ret
  493 D1:B0C1 -  -  -  -  
  494 D1:B0C1 -  -  -  -  
  495 D1:B0C1 -  -  -  -  
  496 D1:B0C1 -  -  -  -  
  497 D1:B0C1 -  -  -  -  
  498 D1:B0C1 -  -  -  -  ;hl/c is color data, de is ldir write pos, b' is ldir length, not in shadow 
  499 D1:B0C1 -  -  -  -  sdcomp_write_ldir_data_loop:
  500 D1:B0C1 CD DA AF D1 	call sdcomp_get_next_color
  501 D1:B0C5 47 -  -  -  	ld b,a;first pixel
  502 D1:B0C6 CD D1 AF D1 	call sdcomp_get_next_color_leading_nibble
  503 D1:B0CA B0 -  -  -  	or b
  504 D1:B0CB -  -  -  -  	
  505 D1:B0CB -  -  -  -  	
  506 D1:B0CB 12 -  -  -  	ld (de),a;write color data
  507 D1:B0CC 13 -  -  -  	inc de
  508 D1:B0CD D9 -  -  -  	exx;to shadow
  509 D1:B0CE 05 -  -  -  	dec b;ldir length counter
  510 D1:B0CF D9 -  -  -  	exx
  511 D1:B0D0 C2 C1 B0 D1 	jp nz,sdcomp_write_ldir_data_loop
  512 D1:B0D4 C9 -  -  -  	ret
  513 D1:B0D5 -  -  -  -  	
  514 D1:B0D5 -  -  -  -  
  515 D1:B0D5 -  -  -  -  ;Not in shadow, a holds alpha data pair, writes color and mask data to output 
  516 D1:B0D5 -  -  -  -  sdcomp_write_leading_or_end_pixels:
  517 D1:B0D5 D5 -  -  -  	push de ;output location	
  518 D1:B0D6 47 -  -  -  	ld b,a;save for later
  519 D1:B0D7 CB 67 -  -  	bit 4,a ;check if first pixel has color 
  520 D1:B0D9 3E 00 -  -  	ld a,0
  521 D1:B0DB 16 FF -  -  	ld d,%11111111;pixel data mask assuming no colors 
  522 D1:B0DD CA E7 B0 D1 	jp z,sdcomp_leading_pixel_first_skip
  523 D1:B0E1 -  -  -  -  	;has first color
  524 D1:B0E1 16 F0 -  -  	ld d,%11110000;save second pixel of bg 
  525 D1:B0E3 CD DA AF D1 	call sdcomp_get_next_color
  526 D1:B0E7 -  -  -  -  sdcomp_leading_pixel_first_skip:
  527 D1:B0E7 -  -  -  -  	;a is either $00 or $0color1
  528 D1:B0E7 -  -  -  -  	
  529 D1:B0E7 1E FF -  -  	ld e,%11111111;assuming no colors
  530 D1:B0E9 -  -  -  -  	
  531 D1:B0E9 CB 40 -  -  	bit 0,b;check second pixel alpha
  532 D1:B0EB 47 -  -  -  	ld b,a;save for later 
  533 D1:B0EC 3E 00 -  -  	ld a,0
  534 D1:B0EE CA F8 B0 D1 	jp z,sdcomp_leading_pixel_second_skip;
  535 D1:B0F2 -  -  -  -  	;has second color 
  536 D1:B0F2 CD D1 AF D1 	call sdcomp_get_next_color_leading_nibble
  537 D1:B0F6 -  -  -  -  	;a = color2 0 
  538 D1:B0F6 1E 0F -  -  	ld e,%00001111;save first pixel of bg
  539 D1:B0F8 -  -  -  -  	
  540 D1:B0F8 -  -  -  -  sdcomp_leading_pixel_second_skip:
  541 D1:B0F8 -  -  -  -  	;a is either 00 or c2 0 
  542 D1:B0F8 -  -  -  -  	;b is either 00 or 0 c1 
  543 D1:B0F8 B0 -  -  -  	or b 
  544 D1:B0F9 47 -  -  -  	ld b,a;final color data
  545 D1:B0FA 7A -  -  -  	ld a,d 
  546 D1:B0FB A3 -  -  -  	and e ;final mask data 
  547 D1:B0FC -  -  -  -  	
  548 D1:B0FC D1 -  -  -  	pop de;return to pointer 
  549 D1:B0FD -  -  -  -  	
  550 D1:B0FD 12 -  -  -  	ld (de),a;write mask data 
  551 D1:B0FE 13 -  -  -  	inc de 
  552 D1:B0FF 78 -  -  -  	ld a,b;color data 
  553 D1:B100 12 -  -  -  	ld (de),a;write color data 
  554 D1:B101 -  -  -  -  	
  555 D1:B101 -  -  -  -  	
  556 D1:B101 -  -  -  -  	
  557 D1:B101 -  -  -  -  	;call write_a_to_ram
  558 D1:B101 -  -  -  -  	
  559 D1:B101 13 -  -  -  	inc de 
  560 D1:B102 C9 -  -  -  	ret 
  561 D1:B103 -  -  -  -  
  562 D1:B103 -  -  -  -  
  563 D1:B103 -  -  -  -  
  564 D1:B103 -  -  -  -  ;ENTRY POINT 
  565 D1:B103 -  -  -  -  
  566 D1:B103 -  -  -  -  
  567 D1:B103 -  -  -  -  ;hl = sprite data start, de = main data decompress location
  568 D1:B103 -  -  -  -  sprite_decompress:
  569 D1:B103 -  -  -  -  
  570 D1:B103 -  -  -  -  
  571 D1:B103 -  -  -  -  	;SETUP ===========================================================================================================
  572 D1:B103 -  -  -  -  
  573 D1:B103 -  -  -  -  	;SET UP BPC MODE AND ALPHA/NOALPHA
  574 D1:B103 -  -  -  -  
  575 D1:B103 -  -  -  -  	;HL pointing to flags registers
  576 D1:B103 -  -  -  -  	;TODO set up bpc and alpha modes, Sprite type and offset. Write conditional jumps where needed
  577 D1:B103 -  -  -  -  	;set bpc mode 
  578 D1:B103 CB 7E -  -  	bit 7,(hl)
  579 D1:B105 C4 D3 B3 D1 	call nz,sdcomp_set_4bpc
  580 D1:B109 CB 76 -  -  	bit 6,(hl)
  581 D1:B10B C4 70 B3 D1 	call nz,sdcomp_set_3bpc 
  582 D1:B10F CB 6E -  -  	bit 5,(hl)
  583 D1:B111 C4 1D B3 D1 	call nz,sdcomp_set_2bpc 
  584 D1:B115 CB 66 -  -  	bit 4,(hl)
  585 D1:B117 C4 E8 B2 D1 	call nz,sdcomp_set_1bpc 
  586 D1:B11B CB 5E -  -  	bit 3,(hl)
  587 D1:B11D C4 CD B2 D1 	call nz,sdcomp_set_0bpc 
  588 D1:B121 CB 56 -  -  	bit 2,(hl)
  589 D1:B123 C4 3A B4 D1 	call nz,sdcomp_set_noalpha
  590 D1:B127 CB 56 -  -  	bit 2,(hl)
  591 D1:B129 CC 4B B4 D1 	call z,sdcomp_reset_noalpha
  592 D1:B12D -  -  -  -  	
  593 D1:B12D -  -  -  -  	
  594 D1:B12D 3E 00 -  -  	ld a,0
  595 D1:B12F 32 5B B2 D1 	ld (sdcomp_loops_per_line_counter),a ;reset loops counter
  596 D1:B133 3E DA -  -  	ld a,%11011010;jp c 
  597 D1:B135 32 AD AF D1 	ld(sdcomp_end_vitrual_zero_read),a ;reset vitrual zero read flag
  598 D1:B139 -  -  -  -  	;write height or width(BG) data to decompressed sprite 
  599 D1:B139 -  -  -  -  	
  600 D1:B139 23 -  -  -  	inc hl ;hl points to width in px 
  601 D1:B13A -  -  -  -  	
  602 D1:B13A -  -  -  -  	
  603 D1:B13A 7E -  -  -  	ld a,(hl) 
  604 D1:B13B 32 86 B0 D1 	ld (sdcomp_sprite_width),a ;TODO set width in required locations
  605 D1:B13F 32 92 AF D1 	ld (sdcomp_sprite_width_2),a
  606 D1:B143 47 -  -  -  	ld b,a;width
  607 D1:B144 08 -  -  -  	ex af,af' ;'
  608 D1:B145 78 -  -  -  	ld a,b;Number of alpha bits remaining in row
  609 D1:B146 08 -  -  -  	ex af,af' ;' 
  610 D1:B147 -  -  -  -  
  611 D1:B147 -  -  -  -  
  612 D1:B147 -  -  -  -  sdcomp_offset_2 .equ $ 
  613 D1:B147 00 -  -  -  	nop ;replace with inc b for offset 
  614 D1:B148 -  -  -  -  
  615 D1:B148 -  -  -  -  	;Calculate number of bytes to skip between rows for gap length  
  616 D1:B148 04 -  -  -  	inc b ;round up on odd sprites
  617 D1:B149 CB 38 -  -  	srl b;divide by 2
  618 D1:B14B -  -  -  -  	
  619 D1:B14B -  -  -  -  	
  620 D1:B14B 3E A0 -  -  	ld a,160
  621 D1:B14D 90 -  -  -  	sub b ;a holds 160 - (width in pairs)
  622 D1:B14E 32 D2 B1 D1 	ld (sdcomp_gap_btwn_rows),a 
  623 D1:B152 -  -  -  -  	
  624 D1:B152 -  -  -  -  	;call write_a_to_ram
  625 D1:B152 -  -  -  -  	;ld a,$BE
  626 D1:B152 -  -  -  -  	;call write_a_to_ram
  627 D1:B152 -  -  -  -  	;ld a,b 
  628 D1:B152 -  -  -  -  	;call write_a_to_ram
  629 D1:B152 -  -  -  -  	
  630 D1:B152 -  -  -  -  	
  631 D1:B152 7E -  -  -  	ld a,(hl);load width again
  632 D1:B153 -  -  -  -  	
  633 D1:B153 47 -  -  -  	ld b,a 
  634 D1:B154 -  -  -  -  	
  635 D1:B154 -  -  -  -  
  636 D1:B154 23 -  -  -  	inc hl ;hl points to height 
  637 D1:B155 7E -  -  -  	ld a,(hl);height
  638 D1:B156 32 6C AF D1 	ld (sdcomp_lines_remaining),a ;write height to lines remaining counter
  639 D1:B15A -  -  -  -  	
  640 D1:B15A -  -  -  -  	
  641 D1:B15A -  -  -  -  
  642 D1:B15A 12 -  -  -  	ld (de), a ;write height to first byte of sprite data 
  643 D1:B15B 13 -  -  -  	inc de 
  644 D1:B15C -  -  -  -  	
  645 D1:B15C 23 -  -  -  	inc hl ;HL points to start of alpha data 
  646 D1:B15D -  -  -  -  
  647 D1:B15D E5 -  -  -  	push hl ;Save alpha data 
  648 D1:B15E -  -  -  -  	
  649 D1:B15E -  -  -  -  	
  650 D1:B15E -  -  -  -  	;Need to find start of color data
  651 D1:B15E -  -  -  -  	;at this point a = height, b = width 
  652 D1:B15E -  -  -  -  	
  653 D1:B15E 37 -  -  -  	scf
  654 D1:B15F -  -  -  -  	
  655 D1:B15F -  -  -  -  sdcomp_no_alpha_2 .equ $
  656 D1:B15F D2 78 B1 D1 	jp nc,sdcomp_no_alpha_2_skip ; if no alpha skip this part
  657 D1:B163 -  -  -  -  	
  658 D1:B163 -  -  -  -  	;need to find number of pixels, div by 8 and skip that many bytes
  659 D1:B163 -  -  -  -  	
  660 D1:B163 E5 -  -  -  	push hl
  661 D1:B164 67 -  -  -  	ld h,a;height
  662 D1:B165 68 -  -  -  	ld l,b;width
  663 D1:B166 ED 6C -  -  	mlt hl;number of pixels
  664 D1:B168 -  -  -  -  	;rounds up to nearest multiple of 8
  665 D1:B168 2B -  -  -  	dec hl
  666 D1:B169 CB 3C -  -  	srl h
  667 D1:B16B CB 1D -  -  	rr l
  668 D1:B16D CB 3C -  -  	srl h
  669 D1:B16F CB 1D -  -  	rr l 
  670 D1:B171 CB 3C -  -  	srl h 
  671 D1:B173 CB 1D -  -  	rr l 
  672 D1:B175 23 -  -  -  	inc hl 
  673 D1:B176 C1 -  -  -  	pop bc ;initial hl location
  674 D1:B177 -  -  -  -  	;add number of bytes to skip 
  675 D1:B177 09 -  -  -  	add hl,bc ;HL points to start of color data 
  676 D1:B178 -  -  -  -  	
  677 D1:B178 -  -  -  -  	
  678 D1:B178 -  -  -  -  	
  679 D1:B178 -  -  -  -  sdcomp_no_alpha_2_skip:
  680 D1:B178 -  -  -  -  
  681 D1:B178 -  -  -  -  	
  682 D1:B178 -  -  -  -  	;HL POINTING TO COLOR PALETTE DATA
  683 D1:B178 -  -  -  -  
  684 D1:B178 -  -  -  -  	
  685 D1:B178 47 -  -  -  	ld b,a ;save for after
  686 D1:B179 -  -  -  -  	;GET LOCAL PALETTE DATA
  687 D1:B179 -  -  -  -  	
  688 D1:B179 37 -  -  -  	scf 
  689 D1:B17A -  -  -  -  sdcomp_1bpc_1 .equ $ 
  690 D1:B17A D2 84 B1 D1 	jp nc,sdcomp_1bpc_1_skip ;skip if not 1bpc or 2bpc or 3bpc
  691 D1:B17E -  -  -  -  	
  692 D1:B17E 7E -  -  -  	ld a,(hl);color data 	
  693 D1:B17F 32 5F B0 D1 	ld (sdcomp_indexed_color_data_1),a 
  694 D1:B183 23 -  -  -  	inc hl 
  695 D1:B184 -  -  -  -  	
  696 D1:B184 -  -  -  -  sdcomp_1bpc_1_skip:	
  697 D1:B184 -  -  -  -  
  698 D1:B184 -  -  -  -  
  699 D1:B184 37 -  -  -  	scf 
  700 D1:B185 -  -  -  -  sdcomp_2bpc_1 .equ $ 
  701 D1:B185 D2 8F B1 D1 	jp nc,sdcomp_2bpc_1_skip ;skip if not 2bpc or 3bpc
  702 D1:B189 -  -  -  -  	
  703 D1:B189 7E -  -  -  	ld a,(hl);color data 
  704 D1:B18A 32 53 B0 D1 	ld (sdcomp_indexed_color_data_2),a 
  705 D1:B18E 23 -  -  -  	inc hl 
  706 D1:B18F -  -  -  -  	
  707 D1:B18F -  -  -  -  sdcomp_2bpc_1_skip:	
  708 D1:B18F -  -  -  -  
  709 D1:B18F -  -  -  -  
  710 D1:B18F 37 -  -  -  	scf 
  711 D1:B190 -  -  -  -  sdcomp_3bpc_1 .equ $ 
  712 D1:B190 DA A0 B1 D1 	jp c,sdcomp_3bpc_1_skip ;skip if not 3bpc
  713 D1:B194 -  -  -  -  	
  714 D1:B194 7E -  -  -  	ld a,(hl);color data 
  715 D1:B195 32 41 B0 D1 	ld (sdcomp_indexed_color_data_3),a 
  716 D1:B199 23 -  -  -  	inc hl 
  717 D1:B19A 7E -  -  -  	ld a,(hl);color data 
  718 D1:B19B 32 35 B0 D1 	ld (sdcomp_indexed_color_data_4),a 
  719 D1:B19F 23 -  -  -  	inc hl 
  720 D1:B1A0 -  -  -  -  	
  721 D1:B1A0 -  -  -  -  sdcomp_3bpc_1_skip:	
  722 D1:B1A0 -  -  -  -  
  723 D1:B1A0 -  -  -  -  	
  724 D1:B1A0 D5 -  -  -  	push de ;loops/line data location
  725 D1:B1A1 EB -  -  -  	ex de,hl
  726 D1:B1A2 78 -  -  -  	ld a,b
  727 D1:B1A3 01 00 00 00 	ld bc,0
  728 D1:B1A7 4F -  -  -  	ld c,a;height 
  729 D1:B1A8 09 -  -  -  	add hl,bc
  730 D1:B1A9 EB -  -  -  	ex de,hl;de points to data write location
  731 D1:B1AA -  -  -  -  	
  732 D1:B1AA -  -  -  -  	
  733 D1:B1AA D9 -  -  -  	exx;in to shadow
  734 D1:B1AB D1 -  -  -  	pop de 
  735 D1:B1AC E1 -  -  -  	pop hl ;alpha data stored from earlier
  736 D1:B1AD 0E 80 -  -  	ld c,%10000000;alpha mask
  737 D1:B1AF D9 -  -  -  	exx;out 
  738 D1:B1B0 0E 80 -  -  	ld c,%10000000;color mask
  739 D1:B1B2 -  -  -  -  	
  740 D1:B1B2 -  -  -  -  	;HL now points to pixel color data 
  741 D1:B1B2 -  -  -  -  	;HL' points to pixel alpha data 
  742 D1:B1B2 -  -  -  -  	;C holds color mask
  743 D1:B1B2 -  -  -  -  	;C' holds alpha mask
  744 D1:B1B2 -  -  -  -  	;DE' holds loops/line output data location
  745 D1:B1B2 -  -  -  -  	;DE holds main data output location
  746 D1:B1B2 -  -  -  -  	;A holds height
  747 D1:B1B2 -  -  -  -  	;A' holds bits remaining in row
  748 D1:B1B2 -  -  -  -  
  749 D1:B1B2 -  -  -  -  
  750 D1:B1B2 37 -  -  -  	scf 
  751 D1:B1B3 -  -  -  -  sdcomp_flip_setup .equ $
  752 D1:B1B3 DA C3 B1 D1 	jp c,sdcomp_find_gap_length;continue if no flip
  753 D1:B1B7 -  -  -  -  
  754 D1:B1B7 -  -  -  -  	
  755 D1:B1B7 2B -  -  -  	dec hl;dec color pointer
  756 D1:B1B8 0E 01 -  -  	ld c, %00000001
  757 D1:B1BA D9 -  -  -  	exx;to shadow 
  758 D1:B1BB 2B -  -  -  	dec hl;dec alpha pointer
  759 D1:B1BC 0E 01 -  -  	ld c, %00000001;alpha mask
  760 D1:B1BE CD 84 B0 D1 	call sdcomp_traverse_initial
  761 D1:B1C2 D9 -  -  -  	exx ;out of shadow 
  762 D1:B1C3 -  -  -  -  	
  763 D1:B1C3 -  -  -  -  	
  764 D1:B1C3 -  -  -  -  
  765 D1:B1C3 -  -  -  -  	;TODO jump to BG routine here
  766 D1:B1C3 -  -  -  -  	;END SETUP ======================================================================================================
  767 D1:B1C3 -  -  -  -  	
  768 D1:B1C3 -  -  -  -  	
  769 D1:B1C3 -  -  -  -  sdcomp_find_gap_length:
  770 D1:B1C3 -  -  -  -  	
  771 D1:B1C3 -  -  -  -  	
  772 D1:B1C3 -  -  -  -  	
  773 D1:B1C3 -  -  -  -  ;If virtual 0 was read as the start of an alpha pair, remove 1 from next gap length 
  774 D1:B1C3 -  -  -  -  ;this will occur if:
  775 D1:B1C3 -  -  -  -  ;Starting pixels are at the end of line, eg :00000001. ldir length = 0 as virtual 0s are read. interline length should be reduced by 1 
  776 D1:B1C3 -  -  -  -  ;
  777 D1:B1C3 -  -  -  -  ;if during ldir search, line data ends in 11, followed by virtual 00. In this case the 11 is the ending pixels if slow sprite, so gap length should not be reduced
  778 D1:B1C3 -  -  -  -  ; This is done from the addition of 1 gap length whenever the 11->00 case occurs, canceling the interline reduction due to reading vitrual 00. 
  779 D1:B1C3 -  -  -  -  	
  780 D1:B1C3 D9 -  -  -  	exx ;to shadow
  781 D1:B1C4 -  -  -  -  	
  782 D1:B1C4 -  -  -  -  sdcomp_add_1_gap_length .equ $ + 1
  783 D1:B1C4 06 00 -  -  	ld b,0;00 pairs found 
  784 D1:B1C6 3E 00 -  -  	ld a,0 ;reset
  785 D1:B1C8 32 C5 B1 D1 	ld (sdcomp_add_1_gap_length),a 
  786 D1:B1CC -  -  -  -  
  787 D1:B1CC -  -  -  -  sdcomp_find_gap_length_loop:
  788 D1:B1CC -  -  -  -  
  789 D1:B1CC 37 -  -  -  	scf 
  790 D1:B1CD -  -  -  -  sdcomp_end_of_line_gaplength .equ $ 
  791 D1:B1CD DA F6 B1 D1 	jp c, sdcomp_end_of_line_gaplength_skip
  792 D1:B1D1 -  -  -  -  	
  793 D1:B1D1 -  -  -  -  	;We have reached the end of the alpha data, add between line gap length 
  794 D1:B1D1 -  -  -  -  sdcomp_gap_btwn_rows .equ $ + 1
  795 D1:B1D1 3E 00 -  -  	ld a,0
  796 D1:B1D3 80 -  -  -  	add a,b 
  797 D1:B1D4 -  -  -  -  sdcomp_dec_gap_btwn_rows .equ $ 	
  798 D1:B1D4 00 -  -  -  	nop ;replace with dec a to decrease gap length 
  799 D1:B1D5 47 -  -  -  	ld b,a 
  800 D1:B1D6 3E 00 -  -  	ld a,%00000000 ;nop 
  801 D1:B1D8 32 D4 B1 D1 	ld (sdcomp_dec_gap_btwn_rows),a ;reset dec gap
  802 D1:B1DC 3E DA -  -  	ld a,%11011010;jp c
  803 D1:B1DE 32 3D AF D1 	ld (sdcomp_end_of_line_alp),a ;Reset virtual zero flag, reading alpha data will now be the next line 
  804 D1:B1E2 32 CD B1 D1 	ld (sdcomp_end_of_line_gaplength),a ;Reset flag for adding interline gaplength 
  805 D1:B1E6 -  -  -  -  	
  806 D1:B1E6 37 -  -  -  	scf
  807 D1:B1E7 -  -  -  -  sdcomp_flip_traverse .equ $
  808 D1:B1E7 D4 76 B0 D1 	call nc,sdcomp_traverse_line_data ;call line data traverse if flip
  809 D1:B1EB -  -  -  -  		
  810 D1:B1EB -  -  -  -  	;Write loops/line data as we have reached a gap btwn lines 
  811 D1:B1EB 3A 5B B2 D1 	ld a,(sdcomp_loops_per_line_counter)
  812 D1:B1EF 12 -  -  -  	ld (de),a ;write loops/line data 
  813 D1:B1F0 13 -  -  -  	inc de
  814 D1:B1F1 -  -  -  -  	
  815 D1:B1F1 -  -  -  -  	
  816 D1:B1F1 37 -  -  -  	scf 
  817 D1:B1F2 -  -  -  -  sdcomp_end_reached_flag .equ $;check if end of sprite reached
  818 D1:B1F2 D2 C4 B2 D1 	jp nc,sdcomp_end
  819 D1:B1F6 -  -  -  -  
  820 D1:B1F6 -  -  -  -  	
  821 D1:B1F6 -  -  -  -  sdcomp_end_of_line_gaplength_skip:
  822 D1:B1F6 CD 95 AF D1 	call sdcomp_get_next_alpha_pair
  823 D1:B1FA -  -  -  -  	;call write_a_to_ram
  824 D1:B1FA 04 -  -  -  	inc b 
  825 D1:B1FB -  -  -  -  
  826 D1:B1FB -  -  -  -  	;push af ;TEST
  827 D1:B1FB -  -  -  -  	;ld a,$AB;TEST
  828 D1:B1FB -  -  -  -  	;call write_a_to_ram
  829 D1:B1FB -  -  -  -  	
  830 D1:B1FB -  -  -  -  	;call write_a_to_ram
  831 D1:B1FB -  -  -  -  	;pop af ;TEST
  832 D1:B1FB -  -  -  -  	
  833 D1:B1FB B7 -  -  -  	or a
  834 D1:B1FC CA CC B1 D1 	jp z,sdcomp_find_gap_length_loop
  835 D1:B200 -  -  -  -  	
  836 D1:B200 -  -  -  -  ;END OF GAP LENGTH LOOP =====================	
  837 D1:B200 -  -  -  -  	
  838 D1:B200 F5 -  -  -  	push af; save leading pixel alpha data 
  839 D1:B201 -  -  -  -  	;B holds number of 00 pairs + 1
  840 D1:B201 -  -  -  -  	
  841 D1:B201 -  -  -  -  	;ld a,$AA ;test
  842 D1:B201 -  -  -  -  	;call write_a_to_ram
  843 D1:B201 -  -  -  -  	;ld a,b ;test
  844 D1:B201 -  -  -  -  	;call write_a_to_ram
  845 D1:B201 -  -  -  -  	
  846 D1:B201 -  -  -  -  	
  847 D1:B201 -  -  -  -  	
  848 D1:B201 -  -  -  -  	;Write gap length data to output
  849 D1:B201 78 -  -  -  	ld a,b 
  850 D1:B202 D9 -  -  -  	exx;out of shadow 
  851 D1:B203 12 -  -  -  	ld (de),a;GAP LENGTH 
  852 D1:B204 13 -  -  -  	inc de 
  853 D1:B205 D9 -  -  -  	exx;into shadow 	
  854 D1:B206 -  -  -  -  	
  855 D1:B206 -  -  -  -  	
  856 D1:B206 -  -  -  -  ;LEADING PIXELS ===================================================================================================
  857 D1:B206 F1 -  -  -  	pop af ;a holds leading pixel pair alpha data (FF,0F,F0)
  858 D1:B207 -  -  -  -  	
  859 D1:B207 37 -  -  -  	scf 
  860 D1:B208 -  -  -  -  sdcomp_fast_1 .equ $ 
  861 D1:B208 D2 12 B2 D1 	jp nc, sdcomp_ldir_start 
  862 D1:B20C -  -  -  -  	
  863 D1:B20C D9 -  -  -  	exx;out of shadow
  864 D1:B20D CD D5 B0 D1 	call sdcomp_write_leading_or_end_pixels
  865 D1:B211 D9 -  -  -  	exx;into shadow 
  866 D1:B212 -  -  -  -  	
  867 D1:B212 -  -  -  -  
  868 D1:B212 -  -  -  -  	
  869 D1:B212 -  -  -  -  ;LDIR ==============================================================================================================	
  870 D1:B212 -  -  -  -  	;Count number of 11 pairs for LDIR section
  871 D1:B212 -  -  -  -  	;If end of line reached we know last pixels must be the ending pair
  872 D1:B212 -  -  -  -  	;
  873 D1:B212 -  -  -  -  	
  874 D1:B212 -  -  -  -  	;If ending is 11 -> 00 
  875 D1:B212 -  -  -  -  	;11 pair will need to become ending pixels if slow sprite
  876 D1:B212 -  -  -  -  	;Will need to reduce b by 1 
  877 D1:B212 -  -  -  -  	
  878 D1:B212 -  -  -  -  	;If ending is 11 ->01/10
  879 D1:B212 -  -  -  -  	;last pair wil become ending pixels, dont reduce b 
  880 D1:B212 -  -  -  -  	
  881 D1:B212 -  -  -  -  sdcomp_ldir_start:
  882 D1:B212 -  -  -  -  
  883 D1:B212 -  -  -  -  ;	ld a, %11010010 ;jp nc 
  884 D1:B212 -  -  -  -  ;	ld (sdcomp_end_of_line_2) , a ;reset end of line flag 
  885 D1:B212 -  -  -  -  
  886 D1:B212 06 00 -  -  	ld b,0; will hold number of 11 pairs found
  887 D1:B214 -  -  -  -  sdcomp_ldir_loop:
  888 D1:B214 CD 95 AF D1 	call sdcomp_get_next_alpha_pair ;get alpha data
  889 D1:B218 04 -  -  -  	inc b 
  890 D1:B219 -  -  -  -  	
  891 D1:B219 -  -  -  -  	;push af 
  892 D1:B219 -  -  -  -  	;ld a,$DE 
  893 D1:B219 -  -  -  -  	;call write_a_to_ram
  894 D1:B219 -  -  -  -  	;pop af
  895 D1:B219 -  -  -  -  	;call write_a_to_ram
  896 D1:B219 -  -  -  -  	
  897 D1:B219 -  -  -  -  ;	scf 
  898 D1:B219 -  -  -  -  ;sdcomp_end_of_line_2 .equ $ ;set when end of line reached 
  899 D1:B219 -  -  -  -  ;	jp nc, sdcomp_ldir_loop_end;If read last in line
  900 D1:B219 -  -  -  -  	
  901 D1:B219 EE FF -  -  	xor %11111111 ;flip all bits  (CPL does not set flags :(  )
  902 D1:B21B CA 14 B2 D1 	jp z, sdcomp_ldir_loop; if a is 0 means a was $FF 
  903 D1:B21F 2F -  -  -  	cpl ; flip back 
  904 D1:B220 -  -  -  -  sdcomp_ldir_loop_end:
  905 D1:B220 -  -  -  -  
  906 D1:B220 -  -  -  -  	
  907 D1:B220 -  -  -  -  	;at this point b holds # 11 pairs +1 
  908 D1:B220 37 -  -  -  	scf 
  909 D1:B221 -  -  -  -  sdcomp_fast_2 .equ $ 
  910 D1:B221 D2 3C B2 D1 	jp nc,sdcomp_ldir_write ;jump before dec b because we have read first 11 pair in searching for gaplength 
  911 D1:B225 -  -  -  -  
  912 D1:B225 -  -  -  -  	
  913 D1:B225 -  -  -  -  	
  914 D1:B225 05 -  -  -  	dec b ;b holds # 11 pairs 
  915 D1:B226 CA 4F B2 D1 	jp z,sdcomp_no_ldir;no pairs found,no ldir length
  916 D1:B22A B7 -  -  -  	or a
  917 D1:B22B C2 3C B2 D1 	jp nz,sdcomp_ldir_write;ends not in 00, has single ending pixel
  918 D1:B22F -  -  -  -  	
  919 D1:B22F -  -  -  -  	;ends in 11 -> 00,ending pixels will be 11 if slow sprite. If fast, jump to ldir write here 
  920 D1:B22F -  -  -  -  	
  921 D1:B22F -  -  -  -  	;ld a,$DF
  922 D1:B22F -  -  -  -  	;call write_a_to_ram
  923 D1:B22F -  -  -  -  	
  924 D1:B22F -  -  -  -  	;must add 1 to next gap length, have already read first 00
  925 D1:B22F -  -  -  -  	;for the case with virtual 00, this cancels the decrease in gap length 
  926 D1:B22F 3E 01 -  -  	ld a,1;start w 1 gap len
  927 D1:B231 32 C5 B1 D1 	ld (sdcomp_add_1_gap_length),a 
  928 D1:B235 3E FF -  -  	ld a,$ff;ending pixels 11
  929 D1:B237 -  -  -  -  	
  930 D1:B237 05 -  -  -  	dec b;reduce length by 1, final pair is end pixels
  931 D1:B238 CA 4F B2 D1 	jp z,sdcomp_no_ldir;no ldir length,ending pixels is 11 
  932 D1:B23C -  -  -  -  	;b holds ldir length 
  933 D1:B23C -  -  -  -  	
  934 D1:B23C -  -  -  -  
  935 D1:B23C -  -  -  -  ;b holds ldir length, a holds ending pixels
  936 D1:B23C -  -  -  -  sdcomp_ldir_write:
  937 D1:B23C -  -  -  -  
  938 D1:B23C -  -  -  -  	;b holds 11 pairs found 
  939 D1:B23C -  -  -  -  	
  940 D1:B23C -  -  -  -  	;push af;TEST
  941 D1:B23C -  -  -  -  	;ld a,$DA 
  942 D1:B23C -  -  -  -  	;call write_a_to_ram
  943 D1:B23C -  -  -  -  	;ld a,b 
  944 D1:B23C -  -  -  -  	;call write_a_to_ram
  945 D1:B23C -  -  -  -  	;pop af ;TEST
  946 D1:B23C -  -  -  -  
  947 D1:B23C F5 -  -  -  	push af;save ending pixels
  948 D1:B23D 78 -  -  -  	ld a,b
  949 D1:B23E D9 -  -  -  	exx ;out 
  950 D1:B23F 12 -  -  -  	ld (de),a;write ldir length
  951 D1:B240 13 -  -  -  	inc de 
  952 D1:B241 CD C1 B0 D1 	call sdcomp_write_ldir_data_loop
  953 D1:B245 -  -  -  -  
  954 D1:B245 F1 -  -  -  	pop af;return ending pixels
  955 D1:B246 -  -  -  -  	
  956 D1:B246 37 -  -  -  	scf
  957 D1:B247 -  -  -  -  sdcomp_fast_3 .equ $ 
  958 D1:B247 D2 5A B2 D1 	jp nc,sdcomp_inc_loops_per_line ;skip ending pixels
  959 D1:B24B -  -  -  -  	
  960 D1:B24B C3 56 B2 D1 	jp sdcomp_write_end_pixels
  961 D1:B24F -  -  -  -  sdcomp_no_ldir:;no ldir length, a holds ending pixels,00,10,01,11
  962 D1:B24F -  -  -  -  
  963 D1:B24F -  -  -  -  
  964 D1:B24F -  -  -  -  	;push af ;TEST
  965 D1:B24F -  -  -  -  	;ld a,$DB
  966 D1:B24F -  -  -  -  	;call write_a_to_ram
  967 D1:B24F -  -  -  -  	;pop af ;TEST
  968 D1:B24F -  -  -  -  	;call write_a_to_ram
  969 D1:B24F -  -  -  -  
  970 D1:B24F F5 -  -  -  	push af;save end pixels
  971 D1:B250 -  -  -  -  	
  972 D1:B250 D9 -  -  -  	exx;out of shadow
  973 D1:B251 3E 00 -  -  	ld a,0
  974 D1:B253 12 -  -  -  	ld (de),a ;write 0 as ldir length
  975 D1:B254 13 -  -  -  	inc de 
  976 D1:B255 F1 -  -  -  	pop af;return ending pixels
  977 D1:B256 -  -  -  -  
  978 D1:B256 -  -  -  -  ;WRITE ENDING PIXELS ======================================================================================
  979 D1:B256 -  -  -  -  
  980 D1:B256 -  -  -  -  sdcomp_write_end_pixels:
  981 D1:B256 -  -  -  -  ;not in shadow
  982 D1:B256 -  -  -  -  	
  983 D1:B256 -  -  -  -  	;test
  984 D1:B256 -  -  -  -  	;push af 
  985 D1:B256 -  -  -  -  	;ld a,$E0
  986 D1:B256 -  -  -  -  	;call write_a_to_ram
  987 D1:B256 -  -  -  -  	;pop af 
  988 D1:B256 -  -  -  -  	
  989 D1:B256 -  -  -  -  
  990 D1:B256 CD D5 B0 D1 	call sdcomp_write_leading_or_end_pixels
  991 D1:B25A -  -  -  -  	
  992 D1:B25A -  -  -  -  	
  993 D1:B25A -  -  -  -  ;sdcomp_test_lines_stop .equ $ + 1 
  994 D1:B25A -  -  -  -  	;ld a,2
  995 D1:B25A -  -  -  -  	;dec a 
  996 D1:B25A -  -  -  -  	;jp z,sdcomp_end
  997 D1:B25A -  -  -  -  	;ld (sdcomp_test_lines_stop),a 
  998 D1:B25A -  -  -  -  
  999 D1:B25A -  -  -  -  sdcomp_inc_loops_per_line:	
 1000 D1:B25A -  -  -  -  	;INC LOOP/LINE count
 1001 D1:B25A -  -  -  -  sdcomp_loops_per_line_counter .equ $ + 1
 1002 D1:B25A 3E 00 -  -  	ld a,0;inc number of loops
 1003 D1:B25C 3C -  -  -  	inc a 
 1004 D1:B25D 32 5B B2 D1 	ld (sdcomp_loops_per_line_counter),a
 1005 D1:B261 -  -  -  -  
 1006 D1:B261 -  -  -  -  
 1007 D1:B261 -  -  -  -  	;jp sdcomp_find_gap_length ;TESTING REMOVE
 1008 D1:B261 -  -  -  -  	
 1009 D1:B261 -  -  -  -  	;Check the timer to see if we need to begin rendering next frame 
 1010 D1:B261 -  -  -  -  	;1090 cycles @ 32768hz ~= 1 frame (1/30s)
 1011 D1:B261 -  -  -  -  	;Should stop decompressions at 1000 cycles?
 1012 D1:B261 -  -  -  -  	; = %00000011, 11101000
 1013 D1:B261 -  -  -  -  sdcomp_clock_check_loop:
 1014 D1:B261 3A 01 00 F2 	ld a,($F20001);128hz clock
 1015 D1:B265 FE 03 -  -  	cp %00000011 ;check if reached 3 
 1016 D1:B267 DA C3 B1 D1 	jp c,sdcomp_find_gap_length ;msb <= 2, can continue  
 1017 D1:B26B 3A 00 00 F2 	ld a,($F20000);32768hz clock
 1018 D1:B26F FE E8 -  -  	cp %11101000;check if reached value 
 1019 D1:B271 DA C3 B1 D1 	jp c,sdcomp_find_gap_length ;msb = 3 and lsb < value, can continue
 1020 D1:B275 -  -  -  -  	
 1021 D1:B275 -  -  -  -  	;Past clock threshold, need to stop decompressions
 1022 D1:B275 -  -  -  -  
 1023 D1:B275 -  -  -  -  
 1024 D1:B275 -  -  -  -  	;TODO can prob not need to save (a) register
 1025 D1:B275 -  -  -  -  sdcomp_interrupt:
 1026 D1:B275 -  -  -  -  
 1027 D1:B275 -  -  -  -  
 1028 D1:B275 -  -  -  -  	;not in shadow 
 1029 D1:B275 22 A1 B2 D1 	ld (sdcomp_cont_hl),hl 
 1030 D1:B279 EB -  -  -  	ex de,hl
 1031 D1:B27A 22 A5 B2 D1 	ld (sdcomp_cont_de),hl 
 1032 D1:B27E C5 -  -  -  	push bc
 1033 D1:B27F E1 -  -  -  	pop hl
 1034 D1:B280 22 A9 B2 D1 	ld (sdcomp_cont_bc),hl
 1035 D1:B284 32 AD B2 D1 	ld (sdcomp_cont_a),a 
 1036 D1:B288 D9 -  -  -  	exx 
 1037 D1:B289 08 -  -  -  	ex af,af' ;'
 1038 D1:B28A 22 B1 B2 D1 	ld (sdcomp_cont_hlP),hl 
 1039 D1:B28E EB -  -  -  	ex de,hl
 1040 D1:B28F 22 B5 B2 D1 	ld (sdcomp_cont_deP),hl 
 1041 D1:B293 C5 -  -  -  	push bc 
 1042 D1:B294 E1 -  -  -  	pop hl
 1043 D1:B295 22 B9 B2 D1 	ld (sdcomp_cont_bcP),hl
 1044 D1:B299 32 BD B2 D1 	ld (sdcomp_cont_aP),a 
 1045 D1:B29D -  -  -  -  	
 1046 D1:B29D -  -  -  -  	
 1047 D1:B29D -  -  -  -  	;ld a, $AA
 1048 D1:B29D -  -  -  -  	;call write_a_to_ram
 1049 D1:B29D -  -  -  -  	
 1050 D1:B29D 3E 01 -  -  	ld a,1 ;Return 1 if interrupted
 1051 D1:B29F C9 -  -  -  	ret 
 1052 D1:B2A0 -  -  -  -  	
 1053 D1:B2A0 -  -  -  -  sdcomp_continue:
 1054 D1:B2A0 -  -  -  -  	;not in shadow 
 1055 D1:B2A0 -  -  -  -  sdcomp_cont_hl .equ $ + 1
 1056 D1:B2A0 21 00 00 00 	ld hl,0
 1057 D1:B2A4 -  -  -  -  sdcomp_cont_de .equ $ + 1
 1058 D1:B2A4 11 00 00 00 	ld de,0
 1059 D1:B2A8 -  -  -  -  sdcomp_cont_bc .equ $ + 1
 1060 D1:B2A8 01 00 00 00 	ld bc,0
 1061 D1:B2AC -  -  -  -  sdcomp_cont_a .equ $ + 1
 1062 D1:B2AC 3E 00 -  -  	ld a,0
 1063 D1:B2AE D9 -  -  -  	exx 
 1064 D1:B2AF 08 -  -  -  	ex af,af' ;'
 1065 D1:B2B0 -  -  -  -  sdcomp_cont_hlP .equ $ + 1
 1066 D1:B2B0 21 00 00 00 	ld hl,0
 1067 D1:B2B4 -  -  -  -  sdcomp_cont_deP .equ $ + 1
 1068 D1:B2B4 11 00 00 00 	ld de,0
 1069 D1:B2B8 -  -  -  -  sdcomp_cont_bcP .equ $ + 1
 1070 D1:B2B8 01 00 00 00 	ld bc,0
 1071 D1:B2BC -  -  -  -  sdcomp_cont_aP .equ $ + 1
 1072 D1:B2BC 3E 00 -  -  	ld a,0	
 1073 D1:B2BE -  -  -  -  	
 1074 D1:B2BE D9 -  -  -  	exx ;out of shadow 
 1075 D1:B2BF 08 -  -  -  	ex af,af' ;'
 1076 D1:B2C0 -  -  -  -  
 1077 D1:B2C0 C3 C3 B1 D1 	jp sdcomp_find_gap_length
 1078 D1:B2C4 -  -  -  -  
 1079 D1:B2C4 -  -  -  -  	
 1080 D1:B2C4 -  -  -  -  
 1081 D1:B2C4 -  -  -  -  sdcomp_end:
 1082 D1:B2C4 -  -  -  -  	
 1083 D1:B2C4 -  -  -  -  	;ld a,$69
 1084 D1:B2C4 -  -  -  -  	;call write_a_to_ram
 1085 D1:B2C4 -  -  -  -  	
 1086 D1:B2C4 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1087 D1:B2C6 32 F2 B1 D1 	ld (sdcomp_end_reached_flag),a 
 1088 D1:B2CA -  -  -  -  	
 1089 D1:B2CA 3E 00 -  -  	ld a,0 ;return 0 if finished decompressing 
 1090 D1:B2CC C9 -  -  -  	ret 
 1091 D1:B2CD -  -  -  -  
 1092 D1:B2CD -  -  -  -  
 1093 D1:B2CD -  -  -  -  ;bit orders
 1094 D1:B2CD -  -  -  -  ;	noflip   flip 
 1095 D1:B2CD -  -  -  -  ;4bpp 3210 	 0123
 1096 D1:B2CD -  -  -  -  ;3bpp 210	 012
 1097 D1:B2CD -  -  -  -  ;2bpp 10	 01
 1098 D1:B2CD -  -  -  -  ;1bpp 0		 0
 1099 D1:B2CD -  -  -  -  
 1100 D1:B2CD -  -  -  -  
 1101 D1:B2CD -  -  -  -  sdcomp_set_0bpc:
 1102 D1:B2CD 3E DA -  -  	ld a,%11011010;jp c
 1103 D1:B2CF 32 DE AF D1 	ld (sdcomp_0bpc),a
 1104 D1:B2D3 -  -  -  -  	
 1105 D1:B2D3 32 85 B1 D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
 1106 D1:B2D7 32 90 B1 D1 	ld (sdcomp_3bpc_1),a 
 1107 D1:B2DB -  -  -  -  	
 1108 D1:B2DB 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1109 D1:B2DD 32 7A B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1110 D1:B2E1 3E 00 -  -  	ld a,%00000000
 1111 D1:B2E3 32 9F B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1112 D1:B2E7 C9 -  -  -  	ret 
 1113 D1:B2E8 -  -  -  -  	
 1114 D1:B2E8 -  -  -  -  sdcomp_set_1bpc:
 1115 D1:B2E8 3E D2 -  -  	ld a,%11010010;jp nc
 1116 D1:B2EA 32 DE AF D1 	ld (sdcomp_0bpc),a
 1117 D1:B2EE 3E DA -  -  	ld a,%11011010;jp c
 1118 D1:B2F0 32 F0 AF D1 	ld (sdcomp_1bpc),a
 1119 D1:B2F4 -  -  -  -  	
 1120 D1:B2F4 32 85 B1 D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
 1121 D1:B2F8 32 90 B1 D1 	ld (sdcomp_3bpc_1),a 
 1122 D1:B2FC -  -  -  -  	
 1123 D1:B2FC 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1124 D1:B2FE 32 7A B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1125 D1:B302 -  -  -  -  	
 1126 D1:B302 -  -  -  -  	
 1127 D1:B302 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1128 D1:B304 32 EE AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1129 D1:B308 -  -  -  -  	
 1130 D1:B308 3E 80 -  -  	ld a,%10000000
 1131 D1:B30A 32 9F B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1132 D1:B30E -  -  -  -  	
 1133 D1:B30E 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1134 D1:B310 32 98 B0 D1 	ld (sdcomp_traverse_2bpp),a
 1135 D1:B314 32 9A B0 D1 	ld (sdcomp_traverse_3bpp),a
 1136 D1:B318 32 9C B0 D1 	ld (sdcomp_traverse_4bpp),a
 1137 D1:B31C C9 -  -  -  	ret 
 1138 D1:B31D -  -  -  -  
 1139 D1:B31D -  -  -  -  sdcomp_set_2bpc:
 1140 D1:B31D 3E D2 -  -  	ld a,%11010010;jp nc
 1141 D1:B31F 32 DE AF D1 	ld (sdcomp_0bpc),a
 1142 D1:B323 32 F0 AF D1 	ld (sdcomp_1bpc),a
 1143 D1:B327 -  -  -  -  	
 1144 D1:B327 3E DA -  -  	ld a,%11011010;jp c
 1145 D1:B329 32 02 B0 D1 	ld (sdcomp_2bpc),a
 1146 D1:B32D -  -  -  -  	
 1147 D1:B32D 32 90 B1 D1 	ld (sdcomp_3bpc_1),a ;for setting local pallete data
 1148 D1:B331 -  -  -  -  	
 1149 D1:B331 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1150 D1:B333 32 7A B1 D1 	ld (sdcomp_1bpc_1),a;for setting local pallete data
 1151 D1:B337 32 85 B1 D1 	ld (sdcomp_2bpc_1),a 
 1152 D1:B33B -  -  -  -  	
 1153 D1:B33B 37 -  -  -  	scf 
 1154 D1:B33C -  -  -  -  sdcomp_flip_2bpc .equ $ 
 1155 D1:B33C D2 4D B3 D1 	jp nc, sdcomp_2bpc_flip
 1156 D1:B340 -  -  -  -  	
 1157 D1:B340 3E CB -  -  	ld a,%11001011 ;set 1,e
 1158 D1:B342 32 EE AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1159 D1:B346 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1160 D1:B348 32 00 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1161 D1:B34C -  -  -  -  	
 1162 D1:B34C C9 -  -  -  	ret 
 1163 D1:B34D -  -  -  -  	
 1164 D1:B34D -  -  -  -  sdcomp_2bpc_flip:
 1165 D1:B34D 3E CB -  -  	ld a,%11001011 ;set 1,e
 1166 D1:B34F 32 00 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1167 D1:B353 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1168 D1:B355 32 EE AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1169 D1:B359 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1170 D1:B35B 32 98 B0 D1 	ld (sdcomp_traverse_2bpp),a
 1171 D1:B35F -  -  -  -  
 1172 D1:B35F 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1173 D1:B361 32 9A B0 D1 	ld (sdcomp_traverse_3bpp),a
 1174 D1:B365 32 9C B0 D1 	ld (sdcomp_traverse_4bpp),a
 1175 D1:B369 -  -  -  -  	
 1176 D1:B369 3E C0 -  -  	ld a,%11000000
 1177 D1:B36B 32 9F B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1178 D1:B36F C9 -  -  -  	ret 
 1179 D1:B370 -  -  -  -  
 1180 D1:B370 -  -  -  -  
 1181 D1:B370 -  -  -  -  sdcomp_set_3bpc:
 1182 D1:B370 -  -  -  -  	
 1183 D1:B370 3E D2 -  -  	ld a,%11010010;jp nc
 1184 D1:B372 32 DE AF D1 	ld (sdcomp_0bpc),a
 1185 D1:B376 32 F0 AF D1 	ld (sdcomp_1bpc),a
 1186 D1:B37A 32 02 B0 D1 	ld (sdcomp_2bpc),a
 1187 D1:B37E -  -  -  -  	
 1188 D1:B37E 3E DA -  -  	ld a,%11011010;jp c
 1189 D1:B380 32 14 B0 D1 	ld (sdcomp_3bpc),a
 1190 D1:B384 -  -  -  -  	
 1191 D1:B384 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1192 D1:B386 32 7A B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1193 D1:B38A 32 85 B1 D1 	ld (sdcomp_2bpc_1),a 
 1194 D1:B38E 32 90 B1 D1 	ld (sdcomp_3bpc_1),a 
 1195 D1:B392 -  -  -  -  	
 1196 D1:B392 37 -  -  -  	scf 
 1197 D1:B393 -  -  -  -  sdcomp_flip_3bpc .equ $ 
 1198 D1:B393 D2 AA B3 D1 	jp nc, sdcomp_3bpc_flip	
 1199 D1:B397 -  -  -  -  	
 1200 D1:B397 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1201 D1:B399 32 EE AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1202 D1:B39D 3E CB -  -  	ld a,%11001011 ;set 1,e
 1203 D1:B39F 32 00 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1204 D1:B3A3 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1205 D1:B3A5 32 12 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1206 D1:B3A9 -  -  -  -  	
 1207 D1:B3A9 C9 -  -  -  	ret 
 1208 D1:B3AA -  -  -  -  	
 1209 D1:B3AA -  -  -  -  sdcomp_3bpc_flip:
 1210 D1:B3AA 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1211 D1:B3AC 32 12 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1212 D1:B3B0 3E CB -  -  	ld a,%11001011 ;set 1,e
 1213 D1:B3B2 32 00 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1214 D1:B3B6 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1215 D1:B3B8 32 EE AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1216 D1:B3BC -  -  -  -  	
 1217 D1:B3BC 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1218 D1:B3BE 32 98 B0 D1 	ld (sdcomp_traverse_2bpp),a 
 1219 D1:B3C2 32 9A B0 D1 	ld (sdcomp_traverse_3bpp),a 
 1220 D1:B3C6 -  -  -  -  	
 1221 D1:B3C6 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1222 D1:B3C8 32 9C B0 D1 	ld (sdcomp_traverse_4bpp),a
 1223 D1:B3CC -  -  -  -  	
 1224 D1:B3CC 3E E0 -  -  	ld a,%11100000
 1225 D1:B3CE 32 9F B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1226 D1:B3D2 -  -  -  -  	
 1227 D1:B3D2 C9 -  -  -  	ret 
 1228 D1:B3D3 -  -  -  -  
 1229 D1:B3D3 -  -  -  -  sdcomp_set_4bpc:
 1230 D1:B3D3 -  -  -  -  
 1231 D1:B3D3 3E D2 -  -  	ld a,%11010010;jp nc
 1232 D1:B3D5 32 DE AF D1 	ld (sdcomp_0bpc),a
 1233 D1:B3D9 32 F0 AF D1 	ld (sdcomp_1bpc),a
 1234 D1:B3DD 32 02 B0 D1 	ld (sdcomp_2bpc),a
 1235 D1:B3E1 -  -  -  -  
 1236 D1:B3E1 3E DA -  -  	ld a,%11011010;jp c
 1237 D1:B3E3 -  -  -  -  
 1238 D1:B3E3 32 7A B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1239 D1:B3E7 32 85 B1 D1 	ld (sdcomp_2bpc_1),a 
 1240 D1:B3EB 32 90 B1 D1 	ld (sdcomp_3bpc_1),a 
 1241 D1:B3EF -  -  -  -  	
 1242 D1:B3EF 37 -  -  -  	scf 
 1243 D1:B3F0 -  -  -  -  sdcomp_flip_4bpc .equ $ 
 1244 D1:B3F0 D2 0D B4 D1 	jp nc, sdcomp_4bpc_flip	
 1245 D1:B3F4 3E DB -  -  	ld a,%11011011 ;set 3,e
 1246 D1:B3F6 32 EE AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1247 D1:B3FA 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1248 D1:B3FC 32 00 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1249 D1:B400 3E CB -  -  	ld a,%11001011 ;set 1,e
 1250 D1:B402 32 12 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1251 D1:B406 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1252 D1:B408 32 24 B0 D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
 1253 D1:B40C C9 -  -  -  	ret 
 1254 D1:B40D -  -  -  -  sdcomp_4bpc_flip:
 1255 D1:B40D 3E DB -  -  	ld a,%11011011 ;set 3,e
 1256 D1:B40F 32 24 B0 D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
 1257 D1:B413 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1258 D1:B415 32 12 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1259 D1:B419 3E CB -  -  	ld a,%11001011 ;set 1,e
 1260 D1:B41B 32 00 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1261 D1:B41F 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1262 D1:B421 32 EE AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1263 D1:B425 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1264 D1:B427 32 98 B0 D1 	ld (sdcomp_traverse_2bpp),a 
 1265 D1:B42B 32 9A B0 D1 	ld (sdcomp_traverse_3bpp),a 
 1266 D1:B42F 32 9C B0 D1 	ld (sdcomp_traverse_4bpp),a 
 1267 D1:B433 -  -  -  -  	
 1268 D1:B433 3E F0 -  -  	ld a,%11110000
 1269 D1:B435 32 9F B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1270 D1:B439 -  -  -  -  	
 1271 D1:B439 C9 -  -  -  	ret 
 1272 D1:B43A -  -  -  -  	
 1273 D1:B43A -  -  -  -  	
 1274 D1:B43A -  -  -  -  sdcomp_set_noalpha:
 1275 D1:B43A 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1276 D1:B43C 32 5F AF D1 	ld (sdcomp_no_alpha_1),a 
 1277 D1:B440 3E DA -  -  	ld a,%11011010;jp c
 1278 D1:B442 32 5F B1 D1 	ld (sdcomp_no_alpha_2),a 
 1279 D1:B446 32 90 B0 D1 	ld (sdcomp_no_alpha_3),a 
 1280 D1:B44A C9 -  -  -  	ret
 1281 D1:B44B -  -  -  -  	
 1282 D1:B44B -  -  -  -  sdcomp_reset_noalpha:
 1283 D1:B44B -  -  -  -  
 1284 D1:B44B 3E DA -  -  	ld a,%11011010;jp c
 1285 D1:B44D 32 5F AF D1 	ld (sdcomp_no_alpha_1),a 
 1286 D1:B451 3E D2 -  -  	ld a, %11010010 ;jp nc
 1287 D1:B453 32 5F B1 D1 	ld (sdcomp_no_alpha_2),a 
 1288 D1:B457 3E CA -  -  	ld a, %11001010 ;jp z
 1289 D1:B459 32 90 B0 D1 	ld (sdcomp_no_alpha_3),a 
 1290 D1:B45D C9 -  -  -  	ret
 1291 D1:B45E -  -  -  -  
 1292 D1:B45E -  -  -  -  
 1293 D1:B45E -  -  -  -  sdcomp_set_offset:
 1294 D1:B45E 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1295 D1:B460 32 87 AF D1 	ld (sdcomp_offset_1),a 
 1296 D1:B464 32 4B AF D1 	ld (sdcomp_bit_offset),a 
 1297 D1:B468 3E 04 -  -  	ld a,%00000100 ;inc b 
 1298 D1:B46A 32 47 B1 D1 	ld (sdcomp_offset_2),a 
 1299 D1:B46E -  -  -  -  	
 1300 D1:B46E C9 -  -  -  	ret 
 1301 D1:B46F -  -  -  -  
 1302 D1:B46F -  -  -  -  sdcomp_reset_offset:
 1303 D1:B46F 3E DA -  -  	ld a,%11011010;jp c
 1304 D1:B471 32 87 AF D1 	ld (sdcomp_offset_1),a 
 1305 D1:B475 32 4B AF D1 	ld (sdcomp_bit_offset),a 
 1306 D1:B479 3E 00 -  -  	ld a,%00000000 ;nop
 1307 D1:B47B 32 47 B1 D1 	ld (sdcomp_offset_2),a 
 1308 D1:B47F C9 -  -  -  	ret 
 1309 D1:B480 -  -  -  -  	
 1310 D1:B480 -  -  -  -  sdcomp_set_flip:
 1311 D1:B480 3E 01 -  -  	ld a, %00000001 ;rlc c 
 1312 D1:B482 32 36 AF D1 	ld (sdcomp_flip_bitstream),a
 1313 D1:B486 3E 2B -  -  	ld a, %00101011 ;dec hl 
 1314 D1:B488 32 38 AF D1 	ld (sdcomp_flip_bitstream_2),a 
 1315 D1:B48C 3E DC -  -  	ld a, %11011100 ;call c 
 1316 D1:B48E 32 E7 B1 D1 	ld (sdcomp_flip_traverse),a 
 1317 D1:B492 -  -  -  -  	
 1318 D1:B492 3E DA -  -  	ld a,%11011010;jp c
 1319 D1:B494 32 3C B3 D1 	ld (sdcomp_flip_2bpc),a
 1320 D1:B498 32 93 B3 D1 	ld (sdcomp_flip_3bpc),a
 1321 D1:B49C 32 F0 B3 D1 	ld (sdcomp_flip_4bpc),a
 1322 D1:B4A0 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1323 D1:B4A2 32 B3 B1 D1 	ld (sdcomp_flip_setup),a 
 1324 D1:B4A6 -  -  -  -  	
 1325 D1:B4A6 C9 -  -  -  	ret 
 1326 D1:B4A7 -  -  -  -  
 1327 D1:B4A7 -  -  -  -  sdcomp_reset_flip:
 1328 D1:B4A7 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1329 D1:B4A9 32 36 AF D1 	ld (sdcomp_flip_bitstream),a
 1330 D1:B4AD 3E 23 -  -  	ld a, %00100011 ;inc hl 
 1331 D1:B4AF 32 38 AF D1 	ld (sdcomp_flip_bitstream_2),a 
 1332 D1:B4B3 3E D4 -  -  	ld a, %11010100 ;call nc 
 1333 D1:B4B5 32 E7 B1 D1 	ld (sdcomp_flip_traverse),a 
 1334 D1:B4B9 -  -  -  -  	
 1335 D1:B4B9 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1336 D1:B4BB 32 3C B3 D1 	ld (sdcomp_flip_2bpc),a
 1337 D1:B4BF 32 93 B3 D1 	ld (sdcomp_flip_3bpc),a
 1338 D1:B4C3 32 F0 B3 D1 	ld (sdcomp_flip_4bpc),a
 1339 D1:B4C7 3E DA -  -  	ld a,%11011010;jp c
 1340 D1:B4C9 32 B3 B1 D1 	ld (sdcomp_flip_setup),a 
 1341 D1:B4CD C9 -  -  -  	ret 
 1342 D1:B4CE -  -  -  -  
 1343 D1:B4CE -  -  -  -  
 1344 D1:B4CE -  -  -  -  sdcomp_set_fast:
 1345 D1:B4CE 3E DA -  -  	ld a,%11011010;jp c
 1346 D1:B4D0 32 08 B2 D1 	ld(sdcomp_fast_1),a 
 1347 D1:B4D4 32 21 B2 D1 	ld(sdcomp_fast_2),a 
 1348 D1:B4D8 32 47 B2 D1 	ld(sdcomp_fast_3),a 
 1349 D1:B4DC -  -  -  -  	
 1350 D1:B4DC C9 -  -  -  	ret 
 1351 D1:B4DD -  -  -  -  
 1352 D1:B4DD -  -  -  -  sdcomp_reset_fast:
 1353 D1:B4DD 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1354 D1:B4DF 32 08 B2 D1 	ld(sdcomp_fast_1),a 
 1355 D1:B4E3 32 21 B2 D1 	ld(sdcomp_fast_2),a 
 1356 D1:B4E7 32 47 B2 D1 	ld(sdcomp_fast_3),a 
 1357 D1:B4EB -  -  -  -  	
 1358 D1:B4EB C9 -  -  -  	ret 
 1359 D1:B4EC -  -  -  -  
 1360 D1:B4EC -  -  -  -  
 1361 D1:B4EC -  -  -  -  
 1362 D1:B4EC -  -  -  -  
 1363 D1:B4EC -  -  -  -  
 1364 D1:B4EC -  -  -  -  
Listing for file "ascent.asm"
  553 D1:B4EC -  -  -  -  #include "drawFG.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFG.txt"
    1 D1:B4EC -  -  -  -  
    2 D1:B4EC -  -  -  -  FGMaxSpriteHeight .equ 120
    3 D1:B4EC -  -  -  -  
    4 D1:B4EC -  -  -  -  draw_fg_setup:
    5 D1:B4EC 3E D2 -  -  	ld a, %11010010 ;jp nc
    6 D1:B4EE 32 E4 B5 D1 	ld (dfgs_bg_mode_1),a 
    7 D1:B4F2 32 48 B6 D1 	ld (dfgs_bg_mode_2),a 
    8 D1:B4F6 -  -  -  -  
    9 D1:B4F6 2A D8 AB D1 	ld hl,(draw_buffer)
   10 D1:B4FA 22 F4 B5 D1 	ld (dfgs_vram_top_1),hl
   11 D1:B4FE 22 A9 B6 D1 	ld (dfgs_vram_top_2),hl
   12 D1:B502 01 00 96 00 	ld bc,160*240
   13 D1:B506 09 -  -  -  	add hl,bc
   14 D1:B507 22 64 B6 D1 	ld (dfgs_vram_bottom_1),hl 
   15 D1:B50B 22 84 B6 D1 	ld (dfgs_vram_bottom_2),hl 
   16 D1:B50F 22 10 B7 D1 	ld (dfgs_vram_bottom_3),hl 
   17 D1:B513 22 30 B7 D1 	ld (dfgs_vram_bottom_4),hl 
   18 D1:B517 C9 -  -  -  	ret 
   19 D1:B518 -  -  -  -  
   20 D1:B518 -  -  -  -  
   21 D1:B518 -  -  -  -  draw_fg_setup_2:
   22 D1:B518 01 EF 00 00 	ld bc,239
   23 D1:B51C 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of fg layer
   24 D1:B51D 7D -  -  -  	ld a,l ;lsb cam pos, = line number in middle frame
   25 D1:B51E 32 B2 B5 D1 	ld (dfgs_cam_height_1),a
   26 D1:B522 32 4D B6 D1 	ld (dfgs_cam_height_2),a ;y value in dataframe of uppermost line of viewport
   27 D1:B526 32 E1 B6 D1 	ld (dfgs_cam_height_3),a
   28 D1:B52A 32 FB B6 D1 	ld (dfgs_cam_height_4),a	
   29 D1:B52E ED 44 -  -  	neg 
   30 D1:B530 32 E9 B5 D1 	ld (dfgs_viewport_to_upper_frame),a ;1 = top line of VP is top line of middle frame
   31 D1:B534 ED 44 -  -  	neg 
   32 D1:B536 D6 EF -  -  	sub 239
   33 D1:B538 32 04 B7 D1 	ld (dfgs_viewport_bottom_y),a
   34 D1:B53C -  -  -  -  	
   35 D1:B53C 01 00 00 00 	ld bc,0
   36 D1:B540 4C -  -  -  	ld c,h;msb ccam pos 
   37 D1:B541 0C -  -  -  	inc c 
   38 D1:B542 -  -  -  -  	
   39 D1:B542 C9 -  -  -  	ret 
   40 D1:B543 -  -  -  -  
   41 D1:B543 -  -  -  -  draw_mg:
   42 D1:B543 -  -  -  -  
   43 D1:B543 CD EC B4 D1 	call draw_fg_setup
   44 D1:B547 -  -  -  -  	
   45 D1:B547 2A D2 AB D1 	ld hl,(cam_pos)
   46 D1:B54B CB 3C -  -  	srl h ;div by 2
   47 D1:B54D CB 1D -  -  	rr l 
   48 D1:B54F -  -  -  -  	
   49 D1:B54F CD 18 B5 D1 	call draw_fg_setup_2
   50 D1:B553 -  -  -  -  
   51 D1:B553 21 81 C3 D1 	ld hl,MG_Data_frame_table
   52 D1:B557 09 -  -  -  	add hl,bc
   53 D1:B558 09 -  -  -  	add hl,bc 
   54 D1:B559 09 -  -  -  	add hl,bc 	
   55 D1:B55A ED 27 -  -  	ld hl,(hl);upper frame 
   56 D1:B55C -  -  -  -  	
   57 D1:B55C CD 99 B5 D1 	call draw_fg_sprites
   58 D1:B560 C9 -  -  -  	ret
   59 D1:B561 -  -  -  -  
   60 D1:B561 -  -  -  -  draw_mg2:
   61 D1:B561 -  -  -  -  
   62 D1:B561 CD EC B4 D1 	call draw_fg_setup
   63 D1:B565 -  -  -  -  	
   64 D1:B565 2A D2 AB D1 	ld hl,(cam_pos)
   65 D1:B569 CB 3C -  -  	srl h ;div by 2
   66 D1:B56B CB 1D -  -  	rr l 
   67 D1:B56D -  -  -  -  	
   68 D1:B56D CD 18 B5 D1 	call draw_fg_setup_2
   69 D1:B571 -  -  -  -  
   70 D1:B571 21 B3 C6 D1 	ld hl,MG2_Data_frame_table
   71 D1:B575 09 -  -  -  	add hl,bc
   72 D1:B576 09 -  -  -  	add hl,bc 
   73 D1:B577 09 -  -  -  	add hl,bc 	
   74 D1:B578 ED 27 -  -  	ld hl,(hl);upper frame 
   75 D1:B57A -  -  -  -  
   76 D1:B57A CD 99 B5 D1 	call draw_fg_sprites
   77 D1:B57E C9 -  -  -  	ret
   78 D1:B57F -  -  -  -  	
   79 D1:B57F -  -  -  -  
   80 D1:B57F -  -  -  -  draw_fg:
   81 D1:B57F -  -  -  -  
   82 D1:B57F CD EC B4 D1 	call draw_fg_setup
   83 D1:B583 -  -  -  -  	
   84 D1:B583 2A D2 AB D1 	ld hl,(cam_pos)
   85 D1:B587 -  -  -  -  	
   86 D1:B587 CD 18 B5 D1 	call draw_fg_setup_2
   87 D1:B58B -  -  -  -  	
   88 D1:B58B 21 81 C7 D1 	ld hl,FG_Data_frame_table
   89 D1:B58F 09 -  -  -  	add hl,bc
   90 D1:B590 09 -  -  -  	add hl,bc 
   91 D1:B591 09 -  -  -  	add hl,bc 	
   92 D1:B592 ED 27 -  -  	ld hl,(hl);upper frame 
   93 D1:B594 -  -  -  -  
   94 D1:B594 CD 99 B5 D1 	call draw_fg_sprites
   95 D1:B598 C9 -  -  -  	ret
   96 D1:B599 -  -  -  -  
   97 D1:B599 -  -  -  -  
   98 D1:B599 -  -  -  -  ; Upper Frame =======================================================================================================
   99 D1:B599 -  -  -  -  ; Upper Frame =======================================================================================================
  100 D1:B599 -  -  -  -  ;hl = upper frame data
  101 D1:B599 -  -  -  -   
  102 D1:B599 -  -  -  -  ;load cam height 123,vram top 12 vram bottom 1234
  103 D1:B599 -  -  -  -  draw_fg_sprites:
  104 D1:B599 -  -  -  -  	;UPPER FRAME, bottom of upper frame is not on screen, bottom of mid frame is on screen bottom of lower is not on screen
  105 D1:B599 CD 7A B8 D1 	call sprite_table_from_index
  106 D1:B59D ED 53 71 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de ;write sprite table ptr to required locations 
  107 D1:B5A2 ED 53 B3 B7 
              D1 -  -  -  	ld (dfgs_sprite_pointers_2),de 
  108 D1:B5A7 ED 53 04 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  109 D1:B5AC -  -  -  -  	
  110 D1:B5AC 11 00 00 00 	ld de,0
  111 D1:B5B0 23 -  -  -  	inc hl;past data table 
  112 D1:B5B1 -  -  -  -  	;hl is number of elements
  113 D1:B5B1 -  -  -  -  	
  114 D1:B5B1 -  -  -  -  	
  115 D1:B5B1 -  -  -  -  	;if cam is far below upper frame, can skip upper frame 
  116 D1:B5B1 -  -  -  -  dfgs_cam_height_1 .equ $ + 1
  117 D1:B5B1 3E 00 -  -  	ld a,0 
  118 D1:B5B3 FE 78 -  -  	cp FGMaxSpriteHeight
  119 D1:B5B5 D2 C7 B5 D1 	jp nc, dfgs_do_upper_loop
  120 D1:B5B9 -  -  -  -  	;cam too low for upper frame sprites to be drawn
  121 D1:B5B9 01 00 00 00 	ld bc,0
  122 D1:B5BD 4E -  -  -  	ld c,(hl) ;bc holds number of elements
  123 D1:B5BE 09 -  -  -  	add hl,bc 
  124 D1:B5BF 09 -  -  -  	add hl,bc 
  125 D1:B5C0 09 -  -  -  	add hl,bc 
  126 D1:B5C1 09 -  -  -  	add hl,bc;hl points to end of current frame data 
  127 D1:B5C2 23 -  -  -  	inc hl;start of next frame
  128 D1:B5C3 C3 13 B6 D1 	jp dfgs_mid_start ;skip upper loop
  129 D1:B5C7 -  -  -  -  	
  130 D1:B5C7 -  -  -  -  	
  131 D1:B5C7 -  -  -  -  dfgs_do_upper_loop:	
  132 D1:B5C7 08 -  -  -  	ex af,af' ;'
  133 D1:B5C8 -  -  -  -  	
  134 D1:B5C8 7E -  -  -  	ld a,(hl);number of elements
  135 D1:B5C9 -  -  -  -  	;TESTING
  136 D1:B5C9 -  -  -  -  	;call write_a_to_ram
  137 D1:B5C9 -  -  -  -  	;call prgmpause
  138 D1:B5C9 -  -  -  -  	;TESTING
  139 D1:B5C9 -  -  -  -  	
  140 D1:B5C9 3C -  -  -  	inc a ;to be decd later
  141 D1:B5CA 08 -  -  -  	ex af,af' ;'
  142 D1:B5CB 23 -  -  -  	inc hl;hl points to first sprite in upper frame  
  143 D1:B5CC -  -  -  -  
  144 D1:B5CC -  -  -  -  dfgs_upper_loop:;Want to check for sprites in upper frame that extend to lower frame 
  145 D1:B5CC -  -  -  -  
  146 D1:B5CC 08 -  -  -  	ex af,af';'
  147 D1:B5CD 3D -  -  -  	dec a ;dec number of elements
  148 D1:B5CE -  -  -  -  	;call write_a_to_ram
  149 D1:B5CE CA 13 B6 D1 	jp z,dfgs_mid_start 
  150 D1:B5D2 08 -  -  -  	ex af,af';'
  151 D1:B5D3 -  -  -  -  
  152 D1:B5D3 7E -  -  -  	ld a,(hl);sprite y value 
  153 D1:B5D4 23 -  -  -  	inc hl ;to height
  154 D1:B5D5 -  -  -  -  	
  155 D1:B5D5 -  -  -  -  	;call write_a_to_ram
  156 D1:B5D5 -  -  -  -  	;call prgmpause
  157 D1:B5D5 CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  158 D1:B5D7 C2 7A B7 D1 	jp nz, dfgs_sg_upper ;goto group loop 
  159 D1:B5DB -  -  -  -  	
  160 D1:B5DB -  -  -  -  	;otherwise single sprite, call draw routine 
  161 D1:B5DB CD E3 B5 D1 	call dfgs_draw_upper_sprite
  162 D1:B5DF -  -  -  -  	
  163 D1:B5DF C3 CC B5 D1 	jp dfgs_upper_loop
  164 D1:B5E3 -  -  -  -  	
  165 D1:B5E3 -  -  -  -  
  166 D1:B5E3 -  -  -  -  ;Can be used for normal sprites and in sprite groups 
  167 D1:B5E3 -  -  -  -  ;a holds y pos in upper frame, hl pts to sprite height 
  168 D1:B5E3 -  -  -  -  dfgs_draw_upper_sprite:
  169 D1:B5E3 -  -  -  -  
  170 D1:B5E3 37 -  -  -  	scf 
  171 D1:B5E4 -  -  -  -  dfgs_bg_mode_1 .equ $ 
  172 D1:B5E4 D2 B9 AD D1 	jp nc, dbgl_draw_upper_sprite ;if bg mode go to bg draw routine
  173 D1:B5E8 -  -  -  -  
  174 D1:B5E8 -  -  -  -  
  175 D1:B5E8 -  -  -  -  dfgs_viewport_to_upper_frame .equ $ + 1
  176 D1:B5E8 C6 00 -  -  	add a,0 ;a now holds number of lines to skip in current sprite (1 indexed)
  177 D1:B5EA -  -  -  -  	;call write_a_to_ram
  178 D1:B5EA DA 0F B6 D1 	jp c, dfgs_upper_skip ;if sprite has large y pos, can carry over
  179 D1:B5EE BE -  -  -  	cp (hl) ;compare to sprite height 
  180 D1:B5EF D2 0F B6 D1 	jp nc, dfgs_upper_skip ;skips drawing too many lines, sprite is not on screen
  181 D1:B5F3 -  -  -  -  	;a holds number of lines to skip drawing
  182 D1:B5F3 -  -  -  -  
  183 D1:B5F3 -  -  -  -  dfgs_vram_top_1 .equ $ + 1 
  184 D1:B5F3 11 00 00 00 	ld de,0;load top of vram 
  185 D1:B5F7 E5 -  -  -  	push hl ;save height ptr
  186 D1:B5F8 CD 57 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  187 D1:B5FC -  -  -  -  	
  188 D1:B5FC CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  189 D1:B5FE CA 0A B6 D1 	jp z,dfgs_upper_fast
  190 D1:B602 CD FE AE D1 	call draw_slow_sprite_top_cut
  191 D1:B606 C3 0E B6 D1 	jp dfgs_upper_skip_2
  192 D1:B60A -  -  -  -  dfgs_upper_fast:
  193 D1:B60A CD 80 AE D1 	call draw_fast_sprite_top_cut
  194 D1:B60E -  -  -  -  dfgs_upper_skip_2:
  195 D1:B60E E1 -  -  -  	pop hl ;hl holds (height)
  196 D1:B60F -  -  -  -  	
  197 D1:B60F -  -  -  -  
  198 D1:B60F -  -  -  -  dfgs_upper_skip:
  199 D1:B60F -  -  -  -  
  200 D1:B60F 23 -  -  -  	inc hl ;to x
  201 D1:B610 23 -  -  -  	inc hl ;to index 
  202 D1:B611 23 -  -  -  	inc hl;to y 
  203 D1:B612 -  -  -  -  	
  204 D1:B612 C9 -  -  -  	ret ;end of dfgs_draw_upper_sprite
  205 D1:B613 -  -  -  -  	
  206 D1:B613 -  -  -  -  	;ld a,$AA
  207 D1:B613 -  -  -  -  	;call write_a_to_ram
  208 D1:B613 -  -  -  -  	;call prgmpause
  209 D1:B613 -  -  -  -  	
  210 D1:B613 -  -  -  -  
  211 D1:B613 -  -  -  -  ;MIDDLE FRAME ====================================================================================================
  212 D1:B613 -  -  -  -  	
  213 D1:B613 -  -  -  -  dfgs_mid_start:;MIDDLE FRAME, can be top cut, no cut, or bottom cut ===============================================
  214 D1:B613 -  -  -  -  	
  215 D1:B613 -  -  -  -  	;call prgmpause
  216 D1:B613 -  -  -  -  	
  217 D1:B613 CD 7A B8 D1 	call sprite_table_from_index
  218 D1:B617 ED 53 71 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  219 D1:B61C ED 53 FD B7 
              D1 -  -  -  	ld (dfgs_sprite_pointers_3),de 
  220 D1:B621 ED 53 04 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  221 D1:B626 11 00 00 00 	ld de,0
  222 D1:B62A 23 -  -  -  	inc hl;past sprite table ptr
  223 D1:B62B 08 -  -  -  	ex af,af' ;'
  224 D1:B62C 7E -  -  -  	ld a,(hl);number of elements
  225 D1:B62D 3C -  -  -  	inc a 
  226 D1:B62E 08 -  -  -  	ex af,af' ;'
  227 D1:B62F -  -  -  -  	
  228 D1:B62F 23 -  -  -  	inc hl ;to first y val 
  229 D1:B630 -  -  -  -  dfgs_mid_loop:
  230 D1:B630 -  -  -  -  	
  231 D1:B630 08 -  -  -  	ex af,af';'
  232 D1:B631 3D -  -  -  	dec a 
  233 D1:B632 CA C8 B6 D1 	jp z,dfgs_lower_start ;check for end of data
  234 D1:B636 -  -  -  -  	
  235 D1:B636 08 -  -  -  	ex af,af';'
  236 D1:B637 -  -  -  -  
  237 D1:B637 -  -  -  -  	;ld a, $AB
  238 D1:B637 -  -  -  -  	;call write_a_to_ram
  239 D1:B637 -  -  -  -  
  240 D1:B637 7E -  -  -  	ld a,(hl);y val of sprite in dataframe
  241 D1:B638 -  -  -  -  	;call write_a_to_ram
  242 D1:B638 23 -  -  -  	inc hl ;to height
  243 D1:B639 -  -  -  -  	
  244 D1:B639 CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  245 D1:B63B C2 C4 B7 D1 	jp nz, dfgs_sg_mid ;goto group loop 
  246 D1:B63F -  -  -  -  	
  247 D1:B63F -  -  -  -  	;otherwise, draw single sprite 
  248 D1:B63F CD 47 B6 D1 	call dfgs_draw_mid_sprite
  249 D1:B643 -  -  -  -  
  250 D1:B643 -  -  -  -  	
  251 D1:B643 C3 30 B6 D1 	jp dfgs_mid_loop
  252 D1:B647 -  -  -  -  	
  253 D1:B647 -  -  -  -  	
  254 D1:B647 -  -  -  -  	
  255 D1:B647 -  -  -  -  	;a = ypos in mid frame, hl pts to height
  256 D1:B647 -  -  -  -  dfgs_draw_mid_sprite:	
  257 D1:B647 -  -  -  -  	
  258 D1:B647 37 -  -  -  	scf 
  259 D1:B648 -  -  -  -  dfgs_bg_mode_2 .equ $ 
  260 D1:B648 D2 CD AD D1 	jp nc, dbgl_draw_lower_sprite ;if bg mode go to bg draw routine
  261 D1:B64C -  -  -  -  
  262 D1:B64C -  -  -  -  	;call write_a_to_ram
  263 D1:B64C -  -  -  -  	
  264 D1:B64C -  -  -  -  dfgs_cam_height_2 .equ $ + 1 ;y value in dataframe of uppermost line of viewport
  265 D1:B64C D6 00 -  -  	sub 0;subtract cam pos
  266 D1:B64E -  -  -  -  	;call write_a_to_ram
  267 D1:B64E -  -  -  -  
  268 D1:B64E CA 56 B6 D1 	jp z, dfgs_mid_sprite_topline ;check case where sprite is on top line of viewport
  269 D1:B652 D2 A3 B6 D1 	jp nc, dfgs_mid_sprite_above ; carried, sprite is above viewport boundary, a holds num lines to skip
  270 D1:B656 -  -  -  -  dfgs_mid_sprite_topline:
  271 D1:B656 -  -  -  -  
  272 D1:B656 -  -  -  -  	;Sprite is below viewport bound, either full or bottom cut 
  273 D1:B656 -  -  -  -  	
  274 D1:B656 -  -  -  -  	;a = sprite y - cam pos 
  275 D1:B656 3D -  -  -  	dec a ;for case where sprite pos = cam pos
  276 D1:B657 C6 F0 -  -  	add a,240 
  277 D1:B659 -  -  -  -  
  278 D1:B659 D2 7F B6 D1 	jp nc, dfgs_mid_skip
  279 D1:B65D -  -  -  -  	;a holds y pos above bottom of vp (0 indexed )
  280 D1:B65D 3C -  -  -  	inc a 
  281 D1:B65E -  -  -  -  	
  282 D1:B65E -  -  -  -  	
  283 D1:B65E -  -  -  -  	
  284 D1:B65E BE -  -  -  	cp (hl) ;compare to sprite height 
  285 D1:B65F DA 83 B6 D1 	jp c, dfgs_mid_bottom_cut ;height > lines to draw, bottom is cut off 
  286 D1:B663 -  -  -  -  	;otherwise, draw full sprite 
  287 D1:B663 -  -  -  -  	
  288 D1:B663 -  -  -  -  dfgs_vram_bottom_1 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  289 D1:B663 11 00 00 00 	ld de,0;load bottom of vram 
  290 D1:B667 E5 -  -  -  	push hl ;save height ptr
  291 D1:B668 CD 57 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  292 D1:B66C -  -  -  -  	
  293 D1:B66C CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  294 D1:B66E CA 7A B6 D1 	jp z,dfgs_mid_full_fast
  295 D1:B672 CD C0 AE D1 	call draw_slow_sprite_full
  296 D1:B676 C3 7E B6 D1 	jp dfgs_mid_skip_1
  297 D1:B67A -  -  -  -  dfgs_mid_full_fast:
  298 D1:B67A CD A6 AE D1 	call draw_fast_sprite_full
  299 D1:B67E -  -  -  -  dfgs_mid_skip_1:
  300 D1:B67E E1 -  -  -  	pop hl ;hl holds (height)
  301 D1:B67F -  -  -  -  	
  302 D1:B67F -  -  -  -  	
  303 D1:B67F -  -  -  -  dfgs_mid_skip:;sprite is entirely above or below cam pos 
  304 D1:B67F 23 -  -  -  	inc hl ;x
  305 D1:B680 23 -  -  -  	inc hl ;index 
  306 D1:B681 23 -  -  -  	inc hl;to y 
  307 D1:B682 -  -  -  -  	
  308 D1:B682 -  -  -  -  	
  309 D1:B682 -  -  -  -  	
  310 D1:B682 C9 -  -  -  	ret
  311 D1:B683 -  -  -  -  	
  312 D1:B683 -  -  -  -  
  313 D1:B683 -  -  -  -  dfgs_mid_bottom_cut:
  314 D1:B683 -  -  -  -  dfgs_vram_bottom_2 .equ $ + 1  ;Bottom Cut SPRITE, a = lines above bottom of viewport
  315 D1:B683 11 00 00 00 	ld de,0;load bottom of vram 
  316 D1:B687 E5 -  -  -  	push hl ;save height ptr
  317 D1:B688 CD 57 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  318 D1:B68C -  -  -  -  	
  319 D1:B68C CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  320 D1:B68E CA 9A B6 D1 	jp z,dfgs_mid_bcut_fast
  321 D1:B692 CD 2B AF D1 	call draw_slow_sprite_bottom_cut
  322 D1:B696 C3 9E B6 D1 	jp dfgs_mid_skip_2
  323 D1:B69A -  -  -  -  dfgs_mid_bcut_fast:
  324 D1:B69A CD 63 AE D1 	call draw_fast_sprite_bottom_cut
  325 D1:B69E -  -  -  -  dfgs_mid_skip_2:
  326 D1:B69E E1 -  -  -  	pop hl ;hl holds (height)
  327 D1:B69F C3 7F B6 D1 	jp dfgs_mid_skip
  328 D1:B6A3 -  -  -  -  
  329 D1:B6A3 -  -  -  -  dfgs_mid_sprite_above:
  330 D1:B6A3 -  -  -  -  	
  331 D1:B6A3 -  -  -  -  	;a holds lines to skip 
  332 D1:B6A3 BE -  -  -  	cp (hl) ;compare to height
  333 D1:B6A4 D2 7F B6 D1 	jp nc, dfgs_mid_skip ;skip sprite, entirely above viewport
  334 D1:B6A8 -  -  -  -  
  335 D1:B6A8 -  -  -  -  dfgs_vram_top_2 .equ $ + 1
  336 D1:B6A8 11 00 00 00 	ld de,0;top of vram 
  337 D1:B6AC E5 -  -  -  	push hl ;save height ptr
  338 D1:B6AD CD 57 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  339 D1:B6B1 -  -  -  -  	
  340 D1:B6B1 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  341 D1:B6B3 CA BF B6 D1 	jp z,dfgs_mid_tcut_fast
  342 D1:B6B7 CD FE AE D1 	call draw_slow_sprite_top_cut
  343 D1:B6BB C3 C3 B6 D1 	jp dfgs_mid_skip_3
  344 D1:B6BF -  -  -  -  dfgs_mid_tcut_fast:
  345 D1:B6BF CD 80 AE D1 	call draw_fast_sprite_top_cut
  346 D1:B6C3 -  -  -  -  dfgs_mid_skip_3:
  347 D1:B6C3 E1 -  -  -  	pop hl ;hl holds (height)
  348 D1:B6C4 C3 7F B6 D1 	jp dfgs_mid_skip
  349 D1:B6C8 -  -  -  -  	
  350 D1:B6C8 -  -  -  -  	
  351 D1:B6C8 -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================		
  352 D1:B6C8 -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================	
  353 D1:B6C8 -  -  -  -  dfgs_lower_start:
  354 D1:B6C8 -  -  -  -  	
  355 D1:B6C8 CD 7A B8 D1 	call sprite_table_from_index
  356 D1:B6CC ED 53 71 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  357 D1:B6D1 ED 53 46 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_4),de
  358 D1:B6D6 11 00 00 00 	ld de,0
  359 D1:B6DA 23 -  -  -  	inc hl;past data table 
  360 D1:B6DB -  -  -  -  	
  361 D1:B6DB 08 -  -  -  	ex af,af' ;'
  362 D1:B6DC 7E -  -  -  	ld a,(hl);number of elements
  363 D1:B6DD 3C -  -  -  	inc a 
  364 D1:B6DE 08 -  -  -  	ex af,af' ;'
  365 D1:B6DF 23 -  -  -  	inc hl
  366 D1:B6E0 -  -  -  -  	
  367 D1:B6E0 -  -  -  -  
  368 D1:B6E0 -  -  -  -  dfgs_cam_height_3 .equ $ + 1 
  369 D1:B6E0 3E 00 -  -  	ld a, 0
  370 D1:B6E2 D6 EF -  -  	sub 239
  371 D1:B6E4 D0 -  -  -  	ret nc;if bottom frame is offscreen 
  372 D1:B6E5 -  -  -  -  
  373 D1:B6E5 -  -  -  -  	;a holds y value of viewport bottom line in lower frame 
  374 D1:B6E5 -  -  -  -  	
  375 D1:B6E5 -  -  -  -  
  376 D1:B6E5 -  -  -  -  dfgs_lower_loop:
  377 D1:B6E5 -  -  -  -  
  378 D1:B6E5 08 -  -  -  	ex af,af';'
  379 D1:B6E6 3D -  -  -  	dec a 
  380 D1:B6E7 C8 -  -  -  	ret z
  381 D1:B6E8 08 -  -  -  	ex af,af';'
  382 D1:B6E9 -  -  -  -  	
  383 D1:B6E9 7E -  -  -  	ld a,(hl);y
  384 D1:B6EA -  -  -  -  	;call write_a_to_ram
  385 D1:B6EA 23 -  -  -  	inc hl ;inc to height
  386 D1:B6EB -  -  -  -  	
  387 D1:B6EB CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  388 D1:B6ED C2 0E B8 D1 	jp nz, dfgs_sg_lower ;goto group loop 
  389 D1:B6F1 -  -  -  -  	
  390 D1:B6F1 -  -  -  -  	;otherwise, draw single sprite 
  391 D1:B6F1 CD F9 B6 D1 	call dfgs_draw_lower_sprite
  392 D1:B6F5 -  -  -  -  	
  393 D1:B6F5 C3 E5 B6 D1 	jp dfgs_lower_loop
  394 D1:B6F9 -  -  -  -  
  395 D1:B6F9 -  -  -  -  	
  396 D1:B6F9 -  -  -  -  dfgs_draw_lower_sprite: ;a = ypos, hl pts to height
  397 D1:B6F9 -  -  -  -  	
  398 D1:B6F9 -  -  -  -  
  399 D1:B6F9 -  -  -  -  	;call write_a_to_ram
  400 D1:B6F9 47 -  -  -  	ld b,a ;save
  401 D1:B6FA -  -  -  -  dfgs_cam_height_4 .equ $ + 1 
  402 D1:B6FA 3E 00 -  -  	ld a, 0 ;check if bottom frame is in VP at all
  403 D1:B6FC D6 EF -  -  	sub 239
  404 D1:B6FE D2 2B B7 D1 	jp nc,dfgs_lower_skip
  405 D1:B702 78 -  -  -  	ld a,b
  406 D1:B703 -  -  -  -  dfgs_viewport_bottom_y .equ $ + 1
  407 D1:B703 D6 00 -  -  	sub 0;subtract y val of viewport bottom
  408 D1:B705 -  -  -  -  
  409 D1:B705 DA 2B B7 D1 	jp c,dfgs_lower_skip;sprite below screen
  410 D1:B709 -  -  -  -  	
  411 D1:B709 -  -  -  -  	;push af 
  412 D1:B709 -  -  -  -  	;ld a,$A0
  413 D1:B709 -  -  -  -  	;call write_a_to_ram
  414 D1:B709 -  -  -  -  	;pop af
  415 D1:B709 -  -  -  -  	
  416 D1:B709 -  -  -  -  	
  417 D1:B709 3C -  -  -  	inc a
  418 D1:B70A -  -  -  -  	;a holds number of lines to draw 
  419 D1:B70A BE -  -  -  	cp (hl) ;compare to sprite height 
  420 D1:B70B DA 2F B7 D1 	jp c, dfgs_lower_bottom_cut ;bottom is below viewport 
  421 D1:B70F -  -  -  -  	
  422 D1:B70F -  -  -  -  	;draw full sprite 
  423 D1:B70F -  -  -  -  dfgs_vram_bottom_3 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  424 D1:B70F 11 00 00 00 	ld de,0;load bottom of vram 
  425 D1:B713 E5 -  -  -  	push hl ;save height ptr
  426 D1:B714 CD 57 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  427 D1:B718 -  -  -  -  	
  428 D1:B718 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  429 D1:B71A CA 26 B7 D1 	jp z,dfgs_lower_full_fast
  430 D1:B71E CD C0 AE D1 	call draw_slow_sprite_full
  431 D1:B722 C3 2A B7 D1 	jp dfgs_lower_skip_1
  432 D1:B726 -  -  -  -  dfgs_lower_full_fast:
  433 D1:B726 CD A6 AE D1 	call draw_fast_sprite_full
  434 D1:B72A -  -  -  -  dfgs_lower_skip_1:
  435 D1:B72A E1 -  -  -  	pop hl ;hl holds (height)
  436 D1:B72B -  -  -  -  
  437 D1:B72B -  -  -  -  	
  438 D1:B72B -  -  -  -  dfgs_lower_skip:;sprite offscreen
  439 D1:B72B 23 -  -  -  	inc hl ;x 
  440 D1:B72C 23 -  -  -  	inc hl ;index 
  441 D1:B72D 23 -  -  -  	inc hl;to y 
  442 D1:B72E -  -  -  -  	;call write_a_to_ram
  443 D1:B72E -  -  -  -  	;ld a,$AD
  444 D1:B72E -  -  -  -  	;call write_a_to_ram
  445 D1:B72E C9 -  -  -  	ret
  446 D1:B72F -  -  -  -  	
  447 D1:B72F -  -  -  -  dfgs_lower_bottom_cut: 
  448 D1:B72F -  -  -  -  dfgs_vram_bottom_4 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  449 D1:B72F 11 00 00 00 	ld de,0;load bottom of vram 
  450 D1:B733 E5 -  -  -  	push hl ;save height ptr
  451 D1:B734 CD 57 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  452 D1:B738 -  -  -  -  	
  453 D1:B738 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  454 D1:B73A CA 46 B7 D1 	jp z,dfgs_lower_bcut_fast ;even= fast
  455 D1:B73E CD 2B AF D1 	call draw_slow_sprite_bottom_cut
  456 D1:B742 C3 4A B7 D1 	jp dfgs_lower_skip_2
  457 D1:B746 -  -  -  -  dfgs_lower_bcut_fast:
  458 D1:B746 CD 63 AE D1 	call draw_fast_sprite_bottom_cut
  459 D1:B74A -  -  -  -  dfgs_lower_skip_2:
  460 D1:B74A E1 -  -  -  	pop hl ;hl holds (height)
  461 D1:B74B C3 2B B7 D1 	jp dfgs_lower_skip
  462 D1:B74F -  -  -  -  	
  463 D1:B74F -  -  -  -  
  464 D1:B74F -  -  -  -  ;===================================================================================================================
  465 D1:B74F -  -  -  -  ;SPRITE GROUPS =====================================================================================================
  466 D1:B74F -  -  -  -  
  467 D1:B74F -  -  -  -  dfgs_sg_setup:
  468 D1:B74F 23 -  -  -  	inc hl ;hl points to xPos of sprite group 
  469 D1:B750 7E -  -  -  	ld a,(hl)
  470 D1:B751 32 6B B8 D1 	ld (dfgs_sg_x_origin),a 
  471 D1:B755 32 F5 AD D1 	ld (dbgl_sg_x_origin),a
  472 D1:B759 -  -  -  -  	;call write_a_to_ram
  473 D1:B759 01 00 00 00 	ld bc,0
  474 D1:B75D 23 -  -  -  	inc hl ; index 
  475 D1:B75E 4E -  -  -  	ld c,(hl) ;sprite group index 
  476 D1:B75F -  -  -  -  
  477 D1:B75F 21 55 E6 D1 	ld hl, Sprite_Groups
  478 D1:B763 -  -  -  -  	;ld c,0 ;TESTING
  479 D1:B763 -  -  -  -  
  480 D1:B763 09 -  -  -  	add hl,bc 
  481 D1:B764 09 -  -  -  	add hl,bc 
  482 D1:B765 09 -  -  -  	add hl,bc 
  483 D1:B766 -  -  -  -  	
  484 D1:B766 -  -  -  -  	;hl now points to correct sprite group ptr 
  485 D1:B766 ED 27 -  -  	ld hl, (hl)	
  486 D1:B768 -  -  -  -  	;hl pts to sprite table for this group 
  487 D1:B768 -  -  -  -  
  488 D1:B768 CD 7A B8 D1 	call sprite_table_from_index
  489 D1:B76C ED 53 71 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1), de ;NEed to undo after loop is done 
  490 D1:B771 ED 53 04 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  491 D1:B776 23 -  -  -  	inc hl ;to num sprites 
  492 D1:B777 -  -  -  -  
  493 D1:B777 7E -  -  -  	ld a,(hl) ;num sprites in group
  494 D1:B778 23 -  -  -  	inc hl;first sprite y 
  495 D1:B779 C9 -  -  -  	ret
  496 D1:B77A -  -  -  -  	
  497 D1:B77A -  -  -  -  	;Sprite group in upper frame. a holds y pos of sprite group. HL points to height (unused)
  498 D1:B77A -  -  -  -  dfgs_sg_upper:	
  499 D1:B77A 32 88 B7 D1 	ld (dfgs_sg_upper_y_origin),a
  500 D1:B77E E5 -  -  -  	push hl ;save frame data location (height ptr)
  501 D1:B77F CD 4F B7 D1 	call dfgs_sg_setup ;returns with a = num sprites
  502 D1:B783 -  -  -  -   
  503 D1:B783 32 9C B7 D1 	ld (dfgs_sg_upper_count),a 
  504 D1:B787 -  -  -  -  	
  505 D1:B787 -  -  -  -  dfgs_sg_upper_loop:
  506 D1:B787 -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  507 D1:B787 -  -  -  -  	;if no carry, sprite is still in upper frame, a holds pos in upper frame 
  508 D1:B787 -  -  -  -  	;if carry sprite is entirely in mid frame, a holds y pos in mid frame 
  509 D1:B787 -  -  -  -  dfgs_sg_upper_y_origin .equ $ + 1 
  510 D1:B787 3E 00 -  -  	ld a, 0
  511 D1:B789 96 -  -  -  	sub a,(hl)
  512 D1:B78A -  -  -  -  	;call write_a_to_ram
  513 D1:B78A 23 -  -  -  	inc hl ;to height
  514 D1:B78B D2 97 B7 D1 	jp nc, dfgs_sg_upper_draw_upper
  515 D1:B78F -  -  -  -  	
  516 D1:B78F CD 47 B6 D1 	call dfgs_draw_mid_sprite
  517 D1:B793 C3 9B B7 D1 	jp dfgs_sg_upper_continue
  518 D1:B797 -  -  -  -  	;otherwise, sprite is entirely in mid frame, a holds y pos in mid frame
  519 D1:B797 -  -  -  -  	
  520 D1:B797 -  -  -  -  	
  521 D1:B797 -  -  -  -  dfgs_sg_upper_draw_upper:
  522 D1:B797 CD E3 B5 D1 	call dfgs_draw_upper_sprite
  523 D1:B79B -  -  -  -  dfgs_sg_upper_continue:
  524 D1:B79B -  -  -  -  dfgs_sg_upper_count .equ $ + 1
  525 D1:B79B 3E 00 -  -  	ld a, 0
  526 D1:B79D 3D -  -  -  	dec a 
  527 D1:B79E 32 9C B7 D1 	ld (dfgs_sg_upper_count),a 
  528 D1:B7A2 C2 87 B7 D1 	jp nz, dfgs_sg_upper_loop 
  529 D1:B7A6 -  -  -  -  	;otherwise, end of sprite group 
  530 D1:B7A6 32 6B B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  531 D1:B7AA 32 F5 AD D1 	ld (dbgl_sg_x_origin),a
  532 D1:B7AE E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  533 D1:B7AF 23 -  -  -  	inc hl
  534 D1:B7B0 23 -  -  -  	inc hl
  535 D1:B7B1 23 -  -  -  	inc hl ;to y pos of next sprite
  536 D1:B7B2 -  -  -  -  dfgs_sprite_pointers_2 .equ $ + 1
  537 D1:B7B2 11 00 00 00 	ld de, 0
  538 D1:B7B6 ED 53 71 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  539 D1:B7BB ED 53 04 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  540 D1:B7C0 C3 CC B5 D1 	jp dfgs_upper_loop
  541 D1:B7C4 -  -  -  -  	
  542 D1:B7C4 -  -  -  -  
  543 D1:B7C4 -  -  -  -  
  544 D1:B7C4 -  -  -  -  ;SG MID =========================================================================================================
  545 D1:B7C4 -  -  -  -  	;Sprite group in middle frame. a holds y pos of sprite group. HL points to height (unused)
  546 D1:B7C4 -  -  -  -  dfgs_sg_mid:	
  547 D1:B7C4 E5 -  -  -  	push hl
  548 D1:B7C5 32 D2 B7 D1 	ld (dfgs_sg_mid_y_origin),a
  549 D1:B7C9 CD 4F B7 D1 	call dfgs_sg_setup 
  550 D1:B7CD -  -  -  -  	
  551 D1:B7CD 32 E6 B7 D1 	ld (dfgs_sg_mid_count),a
  552 D1:B7D1 -  -  -  -  	
  553 D1:B7D1 -  -  -  -  dfgs_sg_mid_loop:
  554 D1:B7D1 -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  555 D1:B7D1 -  -  -  -  	;if no carry, sprite is still in mid frame, a holds pos in mid frame 
  556 D1:B7D1 -  -  -  -  	;if carry sprite is entirely in lower frame, a holds y pos in lower frame 
  557 D1:B7D1 -  -  -  -  dfgs_sg_mid_y_origin .equ $ + 1 
  558 D1:B7D1 3E 00 -  -  	ld a, 0
  559 D1:B7D3 96 -  -  -  	sub a,(hl)
  560 D1:B7D4 23 -  -  -  	inc hl ;to height
  561 D1:B7D5 D2 E1 B7 D1 	jp nc, dfgs_sg_mid_draw_mid
  562 D1:B7D9 -  -  -  -  	
  563 D1:B7D9 CD F9 B6 D1 	call dfgs_draw_lower_sprite
  564 D1:B7DD C3 E5 B7 D1 	jp dfgs_sg_mid_continue
  565 D1:B7E1 -  -  -  -  
  566 D1:B7E1 -  -  -  -  		
  567 D1:B7E1 -  -  -  -  dfgs_sg_mid_draw_mid:
  568 D1:B7E1 CD 47 B6 D1 	call dfgs_draw_mid_sprite
  569 D1:B7E5 -  -  -  -  dfgs_sg_mid_continue:
  570 D1:B7E5 -  -  -  -  dfgs_sg_mid_count .equ $ + 1
  571 D1:B7E5 3E 00 -  -  	ld a, 0
  572 D1:B7E7 3D -  -  -  	dec a 
  573 D1:B7E8 32 E6 B7 D1 	ld (dfgs_sg_mid_count),a 
  574 D1:B7EC C2 D1 B7 D1 	jp nz, dfgs_sg_mid_loop 
  575 D1:B7F0 -  -  -  -  	;otherwise, end of sprite group 
  576 D1:B7F0 32 6B B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  577 D1:B7F4 32 F5 AD D1 	ld (dbgl_sg_x_origin),a 
  578 D1:B7F8 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  579 D1:B7F9 23 -  -  -  	inc hl
  580 D1:B7FA 23 -  -  -  	inc hl
  581 D1:B7FB 23 -  -  -  	inc hl ;to y pos of next sprite
  582 D1:B7FC -  -  -  -  dfgs_sprite_pointers_3 .equ $ + 1
  583 D1:B7FC 11 00 00 00 	ld de, 0
  584 D1:B800 ED 53 71 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  585 D1:B805 ED 53 04 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  586 D1:B80A C3 30 B6 D1 	jp dfgs_mid_loop
  587 D1:B80E -  -  -  -  	
  588 D1:B80E -  -  -  -  	
  589 D1:B80E -  -  -  -  ;SG Lower =========================================================================================================
  590 D1:B80E -  -  -  -  	;Sprite group in lower frame. a holds y pos of sprite group. HL points to height (unused)
  591 D1:B80E -  -  -  -  dfgs_sg_lower:	
  592 D1:B80E 32 1C B8 D1 	ld (dfgs_sg_lower_y_origin),a
  593 D1:B812 E5 -  -  -  	push hl
  594 D1:B813 CD 4F B7 D1 	call dfgs_sg_setup 
  595 D1:B817 32 2F B8 D1 	ld (dfgs_sg_lower_count),a
  596 D1:B81B -  -  -  -  	;call write_a_to_ram
  597 D1:B81B -  -  -  -  dfgs_sg_lower_loop:
  598 D1:B81B -  -  -  -  
  599 D1:B81B -  -  -  -  	;call prgmpause
  600 D1:B81B -  -  -  -  
  601 D1:B81B -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  602 D1:B81B -  -  -  -  	;if no carry, sprite is still in lower frame, a holds pos in lower frame 
  603 D1:B81B -  -  -  -  	;if carry sprite is offscreen
  604 D1:B81B -  -  -  -  dfgs_sg_lower_y_origin .equ $ + 1 
  605 D1:B81B 3E 00 -  -  	ld a, 0
  606 D1:B81D 96 -  -  -  	sub a,(hl)
  607 D1:B81E -  -  -  -  	;call write_a_to_ram
  608 D1:B81E 23 -  -  -  	inc hl ;to height
  609 D1:B81F D2 2A B8 D1 	jp nc, dfgs_sg_lower_draw_lower
  610 D1:B823 -  -  -  -  	
  611 D1:B823 23 -  -  -  	inc hl 
  612 D1:B824 23 -  -  -  	inc hl
  613 D1:B825 23 -  -  -  	inc hl 
  614 D1:B826 C3 2E B8 D1 	jp dfgs_sg_lower_continue
  615 D1:B82A -  -  -  -  	;otherwise, sprite is entirely below lower frame, skip
  616 D1:B82A -  -  -  -  	
  617 D1:B82A -  -  -  -  	
  618 D1:B82A -  -  -  -  dfgs_sg_lower_draw_lower:
  619 D1:B82A CD F9 B6 D1 	call dfgs_draw_lower_sprite
  620 D1:B82E -  -  -  -  dfgs_sg_lower_continue:
  621 D1:B82E -  -  -  -  dfgs_sg_lower_count .equ $ + 1
  622 D1:B82E 3E 00 -  -  	ld a, 0
  623 D1:B830 -  -  -  -  	;call write_a_to_ram
  624 D1:B830 3D -  -  -  	dec a 
  625 D1:B831 32 2F B8 D1 	ld (dfgs_sg_lower_count),a 
  626 D1:B835 C2 1B B8 D1 	jp nz, dfgs_sg_lower_loop 
  627 D1:B839 -  -  -  -  	;otherwise, end of sprite group 
  628 D1:B839 32 6B B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  629 D1:B83D 32 F5 AD D1 	ld (dbgl_sg_x_origin),a 
  630 D1:B841 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  631 D1:B842 23 -  -  -  	inc hl
  632 D1:B843 23 -  -  -  	inc hl
  633 D1:B844 23 -  -  -  	inc hl ;to y pos of next sprite
  634 D1:B845 -  -  -  -  dfgs_sprite_pointers_4 .equ $ + 1
  635 D1:B845 11 00 00 00 	ld de, 0
  636 D1:B849 ED 53 71 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  637 D1:B84E ED 53 04 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  638 D1:B853 C3 E5 B6 D1 	jp dfgs_lower_loop
  639 D1:B857 -  -  -  -  	
  640 D1:B857 -  -  -  -  	
  641 D1:B857 -  -  -  -  	
  642 D1:B857 -  -  -  -  	
  643 D1:B857 -  -  -  -  ;a holds distance from bottom of screen, starting from 1, or for top cut dist above screen = num lines to skip 
  644 D1:B857 -  -  -  -  ;(hl) = height 	
  645 D1:B857 -  -  -  -  ;de = initial vram, top for top cut, otherwise bottom
  646 D1:B857 -  -  -  -  
  647 D1:B857 -  -  -  -  ;Subtracts a lines from de (initial vram pos),
  648 D1:B857 -  -  -  -  ;returns hl = sprite data, de = new vram position
  649 D1:B857 -  -  -  -  dfgs_setup_draw:
  650 D1:B857 23 -  -  -  	inc hl ;x pos 
  651 D1:B858 01 00 00 00 	ld bc,0
  652 D1:B85C 4E -  -  -  	ld c,(hl); x pos
  653 D1:B85D 23 -  -  -  	inc hl;to index
  654 D1:B85E E5 -  -  -  	push hl;save sprite index 
  655 D1:B85F 26 A0 -  -  	ld h,160
  656 D1:B861 6F -  -  -  	ld l,a ;number of lines to subtract 
  657 D1:B862 ED 6C -  -  	mlt hl;subtract from vram
  658 D1:B864 37 -  -  -  	scf 
  659 D1:B865 3F -  -  -  	ccf
  660 D1:B866 EB -  -  -  	ex de,hl;hl holds initial vram pos, de is lines to subtract  
  661 D1:B867 ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  662 D1:B869 09 -  -  -  	add hl,bc;add x pos ;hl now holds sprite draw start pos 
  663 D1:B86A -  -  -  -  dfgs_sg_x_origin .equ $ + 1 ;
  664 D1:B86A 0E 00 -  -  	ld c, 0
  665 D1:B86C 09 -  -  -  	add hl,bc;add sprite group x pos offset (if applicable)
  666 D1:B86D EB -  -  -  	ex de,hl;put in de
  667 D1:B86E E1 -  -  -  	pop hl;back to frame data 
  668 D1:B86F 4E -  -  -  	ld c,(hl);sprite index
  669 D1:B870 -  -  -  -  dfgs_sprite_pointers_1 .equ $ + 1	
  670 D1:B870 21 00 00 00 	ld hl,0 ;load sprite table 
  671 D1:B874 09 -  -  -  	add hl,bc
  672 D1:B875 09 -  -  -  	add hl,bc 
  673 D1:B876 09 -  -  -  	add hl,bc;move to sprite ptr
  674 D1:B877 -  -  -  -  	;call prgmpause
  675 D1:B877 ED 27 -  -  	ld hl,(hl);hl holds sprite data, if even = fast sprite 
  676 D1:B879 -  -  -  -  
  677 D1:B879 C9 -  -  -  	ret
  678 D1:B87A -  -  -  -  
  679 D1:B87A -  -  -  -  	;hl pts to sprite table index, returns de = sprite table ptr
  680 D1:B87A -  -  -  -  	
  681 D1:B87A -  -  -  -  sprite_table_from_index:
  682 D1:B87A E5 -  -  -  	push hl ;save 
  683 D1:B87B 11 00 00 00 	ld de,0
  684 D1:B87F 5E -  -  -  	ld e,(hl) ;e holds table index
  685 D1:B880 21 4A D4 D1 	ld hl,Sprite_Table_Table
  686 D1:B884 19 -  -  -  	add hl,de 
  687 D1:B885 19 -  -  -  	add hl,de 
  688 D1:B886 19 -  -  -  	add hl,de ;inc to correct table
  689 D1:B887 ED 17 -  -  	ld de,(hl)
  690 D1:B889 -  -  -  -  	
  691 D1:B889 -  -  -  -  
  692 D1:B889 -  -  -  -  	
  693 D1:B889 -  -  -  -  	;call prgmpause Seems to work
  694 D1:B889 -  -  -  -  	
  695 D1:B889 E1 -  -  -  	pop hl 
  696 D1:B88A C9 -  -  -  	ret 
  697 D1:B88B -  -  -  -  	
  698 D1:B88B -  -  -  -  
  699 D1:B88B -  -  -  -  
  700 D1:B88B -  -  -  -  	
  701 D1:B88B -  -  -  -  	
  702 D1:B88B -  -  -  -  	
  703 D1:B88B -  -  -  -  	
  704 D1:B88B -  -  -  -  	
  705 D1:B88B -  -  -  -  	
  706 D1:B88B -  -  -  -  	
  707 D1:B88B -  -  -  -  	
  708 D1:B88B -  -  -  -  	
  709 D1:B88B -  -  -  -  	
Listing for file "ascent.asm"
  554 D1:B88B -  -  -  -  #include "SpriteDecompressManager.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\SpriteDecompressManager.txt"
    1 D1:B88B -  -  -  -  
    2 D1:B88B -  -  -  -  
    3 D1:B88B -  -  -  -  decompress_queue_start .equ vram
    4 D1:B88B -  -  -  -  
    5 D1:B88B -  -  -  -  decompress_queue_end .equ vram + (7*64) ;Max queue length of 64
    6 D1:B88B -  -  -  -  
    7 D1:B88B -  -  -  -  decompress_tail_ptr:
    8 D1:B88B 06 00 D4 -  	.dl decompress_queue_start + 6  ;points to sprite being currently decompressed (parameters byte)
    9 D1:B88E -  -  -  -  
   10 D1:B88E -  -  -  -  decompress_head_ptr: ;points to where next element will be added to queue
   11 D1:B88E 00 00 D4 -  	.dl decompress_queue_start
   12 D1:B891 -  -  -  -  
   13 D1:B891 -  -  -  -  ;Decompress queue format
   14 D1:B891 -  -  -  -  ; .dl Sprite data ptr, decompress location, parameters (7 = fast, 6 = offset, 5 = flip, 4 =started decompressing 3 = finished decompressing )
   15 D1:B891 -  -  -  -  
   16 D1:B891 -  -  -  -  setup_decompress_queue: ;clears memory in queue
   17 D1:B891 3E FF -  -  	ld a,$FF
   18 D1:B893 01 C0 01 00 	ld bc, 7*64
   19 D1:B897 21 00 00 D4 	ld hl, decompress_queue_start
   20 D1:B89B 22 8E B8 D1 	ld (decompress_head_ptr),hl 
   21 D1:B89F CD E0 10 02 	call _MemSet
   22 D1:B8A3 21 06 00 D4 	ld hl, decompress_queue_start + 6
   23 D1:B8A7 22 8B B8 D1 	ld (decompress_tail_ptr),hl 
   24 D1:B8AB 3E 00 -  -  	ld a,0 
   25 D1:B8AD 32 B6 B9 D1 	ld (last_decompressed_cam_pos),a
   26 D1:B8B1 C9 -  -  -  	ret 
   27 D1:B8B2 -  -  -  -  
   28 D1:B8B2 -  -  -  -  ;bc = sprite data ptr, de = decompress location, a = params
   29 D1:B8B2 -  -  -  -  ;adds sprite to queue
   30 D1:B8B2 -  -  -  -  add_to_decompress_queue:
   31 D1:B8B2 2A 8E B8 D1 	ld hl, (decompress_head_ptr)
   32 D1:B8B6 ED 0F -  -  	ld (hl), bc 
   33 D1:B8B8 23 -  -  -  	inc hl
   34 D1:B8B9 23 -  -  -  	inc hl 
   35 D1:B8BA 23 -  -  -  	inc hl 
   36 D1:B8BB -  -  -  -  
   37 D1:B8BB ED 1F -  -  	ld (hl),de
   38 D1:B8BD -  -  -  -  	
   39 D1:B8BD 23 -  -  -  	inc hl 
   40 D1:B8BE 23 -  -  -  	inc hl 
   41 D1:B8BF 23 -  -  -  	inc hl 
   42 D1:B8C0 -  -  -  -  	
   43 D1:B8C0 77 -  -  -  	ld (hl), a 
   44 D1:B8C1 23 -  -  -  	inc hl ;start of next element 
   45 D1:B8C2 -  -  -  -  	
   46 D1:B8C2 E5 -  -  -  	push hl 
   47 D1:B8C3 11 C0 01 D4 	ld de, decompress_queue_end
   48 D1:B8C7 37 -  -  -  	scf
   49 D1:B8C8 3F -  -  -  	ccf
   50 D1:B8C9 ED 52 -  -  	sbc hl,de ;check if we have reached end of queue to wrap around
   51 D1:B8CB E1 -  -  -  	pop hl
   52 D1:B8CC CA D5 B8 D1 	jp z, a2dq_back_to_start
   53 D1:B8D0 -  -  -  -  	
   54 D1:B8D0 22 8E B8 D1 	ld (decompress_head_ptr),hl
   55 D1:B8D4 -  -  -  -  	;ld a,$AB ;testing
   56 D1:B8D4 -  -  -  -  	;call write_a_to_ram
   57 D1:B8D4 C9 -  -  -  	ret
   58 D1:B8D5 -  -  -  -  	
   59 D1:B8D5 -  -  -  -  a2dq_back_to_start:
   60 D1:B8D5 -  -  -  -  	;ld a,$AA ;testing
   61 D1:B8D5 -  -  -  -  	;call write_a_to_ram
   62 D1:B8D5 -  -  -  -  
   63 D1:B8D5 21 00 00 D4 	ld hl,decompress_queue_start
   64 D1:B8D9 22 8E B8 D1 	ld (decompress_head_ptr),hl
   65 D1:B8DD C9 -  -  -  	ret
   66 D1:B8DE -  -  -  -  	
   67 D1:B8DE -  -  -  -  	
   68 D1:B8DE -  -  -  -  
   69 D1:B8DE -  -  -  -  
   70 D1:B8DE -  -  -  -  ;Runs after frame has been rendered. Checks through decompress queue and continues sprite decompressions
   71 D1:B8DE -  -  -  -  	;if has ended, return. at end of queue
   72 D1:B8DE -  -  -  -  	;if not started, begin decompression and set start flag
   73 D1:B8DE -  -  -  -  	;if has started, but not ended, continue decompression 
   74 D1:B8DE -  -  -  -  	;if started and ended, move to next element 
   75 D1:B8DE -  -  -  -  continue_decompressions:
   76 D1:B8DE 2A 8B B8 D1 	ld hl, (decompress_tail_ptr)
   77 D1:B8E2 7E -  -  -  	ld a,(hl) ;decompress params 
   78 D1:B8E3 CB 5F -  -  	bit 3,a 
   79 D1:B8E5 C0 -  -  -  	ret nz ;sprite is done decompressing, at end of queue 
   80 D1:B8E6 -  -  -  -  	
   81 D1:B8E6 -  -  -  -  	;testing
   82 D1:B8E6 -  -  -  -  	;push af
   83 D1:B8E6 -  -  -  -  	;ld a,$55
   84 D1:B8E6 -  -  -  -  	;call write_a_to_ram
   85 D1:B8E6 -  -  -  -  	;pop af
   86 D1:B8E6 -  -  -  -  	
   87 D1:B8E6 -  -  -  -  	
   88 D1:B8E6 -  -  -  -  	
   89 D1:B8E6 -  -  -  -  	
   90 D1:B8E6 CB 67 -  -  	bit 4,a
   91 D1:B8E8 CA 24 B9 D1 	jp z, cd_begin_decompression
   92 D1:B8EC -  -  -  -  	
   93 D1:B8EC -  -  -  -  	;has started,not ended 
   94 D1:B8EC CD A0 B2 D1 	call sdcomp_continue 
   95 D1:B8F0 B7 -  -  -  	or a 
   96 D1:B8F1 C0 -  -  -  	ret nz ;sprite not yet done decompressing 
   97 D1:B8F2 -  -  -  -  
   98 D1:B8F2 -  -  -  -  cd_done_decompressing:
   99 D1:B8F2 -  -  -  -  	;sprite finished decompressing
  100 D1:B8F2 2A 8B B8 D1 	ld hl, (decompress_tail_ptr)	
  101 D1:B8F6 CB DE -  -  	set 3,(hl) ;set finished flag
  102 D1:B8F8 11 07 00 00 	ld de,7 
  103 D1:B8FC 19 -  -  -  	add hl,de ;points to next element in queue
  104 D1:B8FD -  -  -  -  	
  105 D1:B8FD E5 -  -  -  	push hl 
  106 D1:B8FE 11 C0 01 D4 	ld de, decompress_queue_end
  107 D1:B902 37 -  -  -  	scf
  108 D1:B903 3F -  -  -  	ccf
  109 D1:B904 ED 52 -  -  	sbc hl,de ;check if need to wrap to start of queue
  110 D1:B906 E1 -  -  -  	pop hl
  111 D1:B907 D2 13 B9 D1 	jp nc, cd_back_to_start
  112 D1:B90B 22 8B B8 D1 	ld (decompress_tail_ptr),hl
  113 D1:B90F C3 DE B8 D1 	jp continue_decompressions ;Move on to next sprite 
  114 D1:B913 -  -  -  -  	
  115 D1:B913 -  -  -  -  cd_back_to_start:
  116 D1:B913 21 00 00 D4 	ld hl,decompress_queue_start
  117 D1:B917 11 06 00 00 	ld de,6 ;tail points to the parameters byte
  118 D1:B91B 19 -  -  -  	add hl,de
  119 D1:B91C 22 8B B8 D1 	ld (decompress_tail_ptr),hl
  120 D1:B920 C3 DE B8 D1 	jp continue_decompressions ;Move on to next sprite 
  121 D1:B924 -  -  -  -  
  122 D1:B924 -  -  -  -  cd_begin_decompression:
  123 D1:B924 -  -  -  -  
  124 D1:B924 -  -  -  -  	;testing
  125 D1:B924 -  -  -  -  	;push af 
  126 D1:B924 -  -  -  -  	;ld a,$AA
  127 D1:B924 -  -  -  -  	;call write_a_to_ram
  128 D1:B924 -  -  -  -  	;pop af
  129 D1:B924 -  -  -  -  	
  130 D1:B924 -  -  -  -  	;setup and begin decompressing
  131 D1:B924 CB E6 -  -  	set 4,(hl) ;set start flag
  132 D1:B926 F5 -  -  -  	push af 
  133 D1:B927 CB 7F -  -  	bit 7,a 
  134 D1:B929 C4 CE B4 D1 	call nz, sdcomp_set_fast
  135 D1:B92D F1 -  -  -  	pop af 
  136 D1:B92E -  -  -  -  	
  137 D1:B92E F5 -  -  -  	push af 
  138 D1:B92F CB 7F -  -  	bit 7,a 
  139 D1:B931 CC DD B4 D1 	call z, sdcomp_reset_fast
  140 D1:B935 F1 -  -  -  	pop af 
  141 D1:B936 -  -  -  -  	
  142 D1:B936 F5 -  -  -  	push af 
  143 D1:B937 CB 77 -  -  	bit 6,a 
  144 D1:B939 C4 5E B4 D1 	call nz, sdcomp_set_offset
  145 D1:B93D F1 -  -  -  	pop af 
  146 D1:B93E -  -  -  -  	
  147 D1:B93E F5 -  -  -  	push af 
  148 D1:B93F CB 77 -  -  	bit 6,a 
  149 D1:B941 CC 6F B4 D1 	call z, sdcomp_reset_offset
  150 D1:B945 F1 -  -  -  	pop af 
  151 D1:B946 -  -  -  -  	
  152 D1:B946 F5 -  -  -  	push af 
  153 D1:B947 CB 6F -  -  	bit 5,a 
  154 D1:B949 C4 80 B4 D1 	call nz, sdcomp_set_flip
  155 D1:B94D F1 -  -  -  	pop af 
  156 D1:B94E -  -  -  -  	
  157 D1:B94E F5 -  -  -  	push af 
  158 D1:B94F CB 6F -  -  	bit 5,a 
  159 D1:B951 CC A7 B4 D1 	call z, sdcomp_reset_flip
  160 D1:B955 F1 -  -  -  	pop af 
  161 D1:B956 -  -  -  -  	
  162 D1:B956 2A 8B B8 D1 	ld hl, (decompress_tail_ptr) ;may be unnessecary
  163 D1:B95A -  -  -  -  	
  164 D1:B95A 2B -  -  -  	dec hl 
  165 D1:B95B 2B -  -  -  	dec hl 
  166 D1:B95C 2B -  -  -  	dec hl 
  167 D1:B95D ED 17 -  -  	ld de,(hl) ;load decompress location
  168 D1:B95F -  -  -  -  
  169 D1:B95F 2B -  -  -  	dec hl 
  170 D1:B960 2B -  -  -  	dec hl 
  171 D1:B961 2B -  -  -  	dec hl 
  172 D1:B962 ED 27 -  -  	ld hl,(hl) ;load sprite data ptr
  173 D1:B964 -  -  -  -  
  174 D1:B964 CD 03 B1 D1 	call sprite_decompress
  175 D1:B968 B7 -  -  -  	or a 
  176 D1:B969 C0 -  -  -  	ret nz ;sprite not yet done decompressing 
  177 D1:B96A C3 F2 B8 D1 	jp cd_done_decompressing
  178 D1:B96E -  -  -  -  
  179 D1:B96E -  -  -  -  
  180 D1:B96E -  -  -  -  ;Checks to see if cam has moved to a new frame and decompressions need to be added to queue
  181 D1:B96E -  -  -  -  check_for_decompress_calls:
  182 D1:B96E 3A B6 B9 D1 	ld a, (last_decompressed_cam_pos)
  183 D1:B972 47 -  -  -  	ld b,a ;put last decompressed pos in b
  184 D1:B973 3A D3 AB D1 	ld a, (cam_pos + 1) ;Current frame cam is in
  185 D1:B977 32 B6 B9 D1 	ld (last_decompressed_cam_pos),a ;store this frame as the last decompressed frame 
  186 D1:B97B -  -  -  -  	;need to check if cam has moved up or down since last time
  187 D1:B97B B8 -  -  -  	cp a,b 
  188 D1:B97C -  -  -  -  	
  189 D1:B97C -  -  -  -  	
  190 D1:B97C C8 -  -  -  	ret z ;if same, no new things to add to queue 
  191 D1:B97D D2 89 B9 D1 	jp nc, cfdc_cam_move_up ;camera has moved up since last time 
  192 D1:B981 -  -  -  -  	
  193 D1:B981 -  -  -  -  	;cam has moved down since last time 
  194 D1:B981 21 E9 C9 D1 	ld hl, decompress_calls_table_down
  195 D1:B985 C3 8D B9 D1 	jp cfdc_add_calls_to_queue
  196 D1:B989 -  -  -  -  	
  197 D1:B989 -  -  -  -  	
  198 D1:B989 -  -  -  -  cfdc_cam_move_up:
  199 D1:B989 21 DB C8 D1 	ld hl, decompress_calls_table_up
  200 D1:B98D -  -  -  -  
  201 D1:B98D -  -  -  -  	;a = cam frame, hl = decompress call table (up or down)
  202 D1:B98D -  -  -  -  cfdc_add_calls_to_queue:
  203 D1:B98D -  -  -  -  
  204 D1:B98D -  -  -  -  	;call write_a_to_ram
  205 D1:B98D -  -  -  -  
  206 D1:B98D 01 00 00 00 	ld bc,0
  207 D1:B991 4F -  -  -  	ld c,a
  208 D1:B992 09 -  -  -  	add hl,bc 
  209 D1:B993 09 -  -  -  	add hl,bc 
  210 D1:B994 09 -  -  -  	add hl,bc 
  211 D1:B995 ED 27 -  -  	ld hl,(hl) ;hl now points to correct decompress frame 
  212 D1:B997 -  -  -  -  cfdc_direct_add_decompress_frame:
  213 D1:B997 -  -  -  -  
  214 D1:B997 08 -  -  -  	ex af,af' ;'
  215 D1:B998 7E -  -  -  	ld a,(hl) ;a' holds num elements 
  216 D1:B999 -  -  -  -  	
  217 D1:B999 -  -  -  -  	;call write_a_to_ram
  218 D1:B999 -  -  -  -  	
  219 D1:B999 -  -  -  -  	;call prgmpause
  220 D1:B999 -  -  -  -  	
  221 D1:B999 3C -  -  -  	inc a ;to be decd later
  222 D1:B99A 08 -  -  -  	ex af,af' ;'
  223 D1:B99B -  -  -  -  	
  224 D1:B99B 23 -  -  -  	inc hl ;points to first sprite data 
  225 D1:B99C -  -  -  -  cfdc_add_to_queue_loop:
  226 D1:B99C 08 -  -  -  	ex af,af' ;'
  227 D1:B99D -  -  -  -  	;call write_a_to_ram
  228 D1:B99D 3D -  -  -  	dec a ;account for cases where frame has 0 elements 
  229 D1:B99E C8 -  -  -  	ret z
  230 D1:B99F 08 -  -  -  	ex af,af' ;'
  231 D1:B9A0 ED 07 -  -  	ld bc ,(hl) ;load sprite data 
  232 D1:B9A2 23 -  -  -  	inc hl 
  233 D1:B9A3 23 -  -  -  	inc hl
  234 D1:B9A4 23 -  -  -  	inc hl 
  235 D1:B9A5 ED 17 -  -  	ld de,(hl) ;load decomp location 
  236 D1:B9A7 23 -  -  -  	inc hl 
  237 D1:B9A8 23 -  -  -  	inc hl
  238 D1:B9A9 23 -  -  -  	inc hl 
  239 D1:B9AA 7E -  -  -  	ld a,(hl) ;ld params
  240 D1:B9AB 23 -  -  -  	inc hl 
  241 D1:B9AC E5 -  -  -  	push hl
  242 D1:B9AD CD B2 B8 D1 	call add_to_decompress_queue
  243 D1:B9B1 E1 -  -  -  	pop hl
  244 D1:B9B2 C3 9C B9 D1 	jp cfdc_add_to_queue_loop
  245 D1:B9B6 -  -  -  -  	
  246 D1:B9B6 -  -  -  -  	
  247 D1:B9B6 -  -  -  -  
  248 D1:B9B6 -  -  -  -  
  249 D1:B9B6 -  -  -  -  last_decompressed_cam_pos:
  250 D1:B9B6 00 -  -  -  	.db 0 ;camera frame last time checking for decomp was called 
  251 D1:B9B7 -  -  -  -  	
  252 D1:B9B7 -  -  -  -  	
  253 D1:B9B7 -  -  -  -  
  254 D1:B9B7 -  -  -  -  
  255 D1:B9B7 -  -  -  -  
  256 D1:B9B7 -  -  -  -  
  257 D1:B9B7 -  -  -  -  
  258 D1:B9B7 -  -  -  -  
  259 D1:B9B7 -  -  -  -  
  260 D1:B9B7 -  -  -  -  
  261 D1:B9B7 -  -  -  -  
  262 D1:B9B7 -  -  -  -  
  263 D1:B9B7 -  -  -  -  
  264 D1:B9B7 -  -  -  -  
  265 D1:B9B7 -  -  -  -  
  266 D1:B9B7 -  -  -  -  
  267 D1:B9B7 -  -  -  -  
  268 D1:B9B7 -  -  -  -  
  269 D1:B9B7 -  -  -  -  
  270 D1:B9B7 -  -  -  -  
  271 D1:B9B7 -  -  -  -  
  272 D1:B9B7 -  -  -  -  
  273 D1:B9B7 -  -  -  -  
  274 D1:B9B7 -  -  -  -  
  275 D1:B9B7 -  -  -  -  
  276 D1:B9B7 -  -  -  -  
  277 D1:B9B7 -  -  -  -  
Listing for file "ascent.asm"
  555 D1:B9B7 -  -  -  -  #include "getInputs.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\getInputs.txt"
    1 D1:B9B7 -  -  -  -  
    2 D1:B9B7 -  -  -  -  
    3 D1:B9B7 -  -  -  -  
    4 D1:B9B7 -  -  -  -  get_inputs:
    5 D1:B9B7 21 00 00 F5 	ld	hl,DI_Mode		; register for keypad mode
    6 D1:B9BB 36 02 -  -  	ld	(hl),2			; set single scan mode
    7 D1:B9BD -  -  -  -  
    8 D1:B9BD AF -  -  -  	xor	a,a
    9 D1:B9BE -  -  -  -  scan_wait:
   10 D1:B9BE BE -  -  -  	cp	a,(hl)			; wait for keypad idle mode
   11 D1:B9BF 20 FD -  -  	jr	nz,scan_wait
   12 D1:B9C1 -  -  -  -  	
   13 D1:B9C1 -  -  -  -  	; https://wikiti.brandonw.net/index.php?title=84PCE:Ports:A000
   14 D1:B9C1 -  -  -  -  	
   15 D1:B9C1 3A 1E 00 F5 	ld	a,(kbdG7) ; $F5001E
   16 D1:B9C5 CB 5F -  -   	bit	kbitUp,a
   17 D1:B9C7 F5 -  -  -  	push af 
   18 D1:B9C8 C2 F5 B9 D1 	jp nz, input_cam_up
   19 D1:B9CC F1 -  -  -  	pop af 
   20 D1:B9CD -  -  -  -  	
   21 D1:B9CD CB 47 -  -  	bit	kbitDown,a
   22 D1:B9CF C2 15 BA D1 	jp nz, input_cam_down
   23 D1:B9D3 -  -  -  -  
   24 D1:B9D3 -  -  -  -  
   25 D1:B9D3 3A 1C 00 F5 	ld a,(kbdG6)
   26 D1:B9D7 CB 77 -  -  	bit kbitClear,a
   27 D1:B9D9 C2 65 AB D1 	jp nz,exit_prgm
   28 D1:B9DD -  -  -  -  	
   29 D1:B9DD 3A 1A 00 F5 	ld a,(kbdG5)
   30 D1:B9E1 CB 57 -  -  	bit kbit6,a 
   31 D1:B9E3 C4 5C BA D1 	call nz, charge_jump_right
   32 D1:B9E7 -  -  -  -  	
   33 D1:B9E7 3A 16 00 F5 	ld a,(kbdG3)
   34 D1:B9EB CB 57 -  -  	bit kbit4,a 
   35 D1:B9ED C4 35 BA D1 	call nz, charge_jump_left
   36 D1:B9F1 -  -  -  -  	
   37 D1:B9F1 -  -  -  -  
   38 D1:B9F1 C3 1B A9 D1 	jp get_inputs_return
   39 D1:B9F5 -  -  -  -  	
   40 D1:B9F5 -  -  -  -  	
   41 D1:B9F5 -  -  -  -  input_cam_up:
   42 D1:B9F5 -  -  -  -  	;Move cam
   43 D1:B9F5 2A D2 AB D1 	ld hl,(cam_pos)
   44 D1:B9F9 -  -  -  -  	
   45 D1:B9F9 E5 -  -  -  	push hl 
   46 D1:B9FA 01 C4 09 00 	ld bc,2500
   47 D1:B9FE ED 42 -  -  	sbc hl,bc 
   48 D1:BA00 E1 -  -  -  	pop hl 
   49 D1:BA01 D2 1B A9 D1 	jp nc, get_inputs_return
   50 D1:BA05 -  -  -  -  	
   51 D1:BA05 23 -  -  -  	inc hl
   52 D1:BA06 23 -  -  -  	inc hl
   53 D1:BA07 23 -  -  -  	inc hl
   54 D1:BA08 23 -  -  -  	inc hl
   55 D1:BA09 23 -  -  -  	inc hl
   56 D1:BA0A 23 -  -  -  	inc hl
   57 D1:BA0B 23 -  -  -  	inc hl
   58 D1:BA0C 23 -  -  -  	inc hl
   59 D1:BA0D -  -  -  -  	
   60 D1:BA0D 22 D2 AB D1 	ld (cam_pos),hl
   61 D1:BA11 C3 1B A9 D1 	jp get_inputs_return
   62 D1:BA15 -  -  -  -  
   63 D1:BA15 -  -  -  -  
   64 D1:BA15 -  -  -  -  input_cam_down:
   65 D1:BA15 -  -  -  -  	;Move cam
   66 D1:BA15 2A D2 AB D1 	ld hl,(cam_pos)
   67 D1:BA19 -  -  -  -  	
   68 D1:BA19 -  -  -  -  	
   69 D1:BA19 E5 -  -  -  	push hl 
   70 D1:BA1A 01 0A 00 00 	ld bc,10 
   71 D1:BA1E ED 42 -  -  	sbc hl,bc 
   72 D1:BA20 E1 -  -  -  	pop hl 
   73 D1:BA21 DA 1B A9 D1 	jp c, get_inputs_return
   74 D1:BA25 -  -  -  -  	
   75 D1:BA25 2B -  -  -  	dec hl
   76 D1:BA26 2B -  -  -  	dec hl
   77 D1:BA27 2B -  -  -  	dec hl
   78 D1:BA28 2B -  -  -  	dec hl
   79 D1:BA29 2B -  -  -  	dec hl
   80 D1:BA2A 2B -  -  -  	dec hl
   81 D1:BA2B 2B -  -  -  	dec hl
   82 D1:BA2C 2B -  -  -  	dec hl
   83 D1:BA2D -  -  -  -  	
   84 D1:BA2D -  -  -  -  	
   85 D1:BA2D -  -  -  -  	
   86 D1:BA2D -  -  -  -  	
   87 D1:BA2D -  -  -  -  	
   88 D1:BA2D 22 D2 AB D1 	ld (cam_pos),hl
   89 D1:BA31 C3 1B A9 D1 	jp get_inputs_return
   90 D1:BA35 -  -  -  -  	
   91 D1:BA35 -  -  -  -  	
   92 D1:BA35 -  -  -  -  	
Listing for file "ascent.asm"
  556 D1:BA35 -  -  -  -  #include "PlayerController.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\PlayerController.txt"
    1 D1:BA35 -  -  -  -  
    2 D1:BA35 -  -  -  -  
    3 D1:BA35 -  -  -  -  
    4 D1:BA35 -  -  -  -  charge_jump_left:
    5 D1:BA35 -  -  -  -  	;Decrease jump right strength if it > -127 
    6 D1:BA35 -  -  -  -  	;Increase jump up strength 
    7 D1:BA35 -  -  -  -  	;Do nothing if jump left timer is above max value 
    8 D1:BA35 3A 35 BE D1 	ld a,(player_flags)
    9 D1:BA39 CB FF -  -  	set 7, a 
   10 D1:BA3B 32 35 BE D1 	ld (player_flags),a 
   11 D1:BA3F -  -  -  -  	
   12 D1:BA3F 3A 22 BE D1 	ld a,(jump_charge_timer)
   13 D1:BA43 FE 1E -  -  	cp timer_max_val
   14 D1:BA45 D2 5B BA D1 	jp nc, cjl_skip
   15 D1:BA49 3A 21 BE D1 	ld a,(jump_strength_right)
   16 D1:BA4D 3D -  -  -  	dec a 
   17 D1:BA4E 32 21 BE D1 	ld (jump_strength_right),a
   18 D1:BA52 3A 20 BE D1 	ld a,(jump_strength_up)
   19 D1:BA56 3C -  -  -  	inc a 
   20 D1:BA57 32 20 BE D1 	ld (jump_strength_up),a
   21 D1:BA5B -  -  -  -  
   22 D1:BA5B -  -  -  -  cjl_skip:
   23 D1:BA5B C9 -  -  -  	ret 
   24 D1:BA5C -  -  -  -  
   25 D1:BA5C -  -  -  -  
   26 D1:BA5C -  -  -  -  charge_jump_right:
   27 D1:BA5C -  -  -  -  	;Increase jump right strength if it < 127 
   28 D1:BA5C -  -  -  -  	;Increase jump up strength 
   29 D1:BA5C -  -  -  -  	;Do nothing if jump  timer is above max value 
   30 D1:BA5C -  -  -  -  	
   31 D1:BA5C 3A 35 BE D1 	ld a,(player_flags)
   32 D1:BA60 CB FF -  -  	set 7, a 
   33 D1:BA62 32 35 BE D1 	ld (player_flags),a 
   34 D1:BA66 3A 22 BE D1 	ld a,(jump_charge_timer)
   35 D1:BA6A FE 1E -  -  	cp timer_max_val
   36 D1:BA6C D2 82 BA D1 	jp nc, cjr_skip
   37 D1:BA70 3A 21 BE D1 	ld a,(jump_strength_right)
   38 D1:BA74 3C -  -  -  	inc a
   39 D1:BA75 32 21 BE D1 	ld (jump_strength_right),a
   40 D1:BA79 3A 20 BE D1 	ld a,(jump_strength_up)
   41 D1:BA7D 3C -  -  -  	inc a 
   42 D1:BA7E 32 20 BE D1 	ld (jump_strength_up),a	
   43 D1:BA82 -  -  -  -  cjr_skip:
   44 D1:BA82 C9 -  -  -  	ret 
   45 D1:BA83 -  -  -  -  
   46 D1:BA83 -  -  -  -  
   47 D1:BA83 -  -  -  -  
   48 D1:BA83 -  -  -  -  player_update: ;Should be called after inputs
   49 D1:BA83 -  -  -  -  
   50 D1:BA83 3A 35 BE D1 	ld a,(player_flags)
   51 D1:BA87 CB 7F -  -  	bit 7,a ;jump key  flag 
   52 D1:BA89 CA A0 BA D1 	jp z, pu_try_jump
   53 D1:BA8D -  -  -  -  	
   54 D1:BA8D CB BF -  -  	res 7,a ;Reset jump hold check 
   55 D1:BA8F 32 35 BE D1 	ld (player_flags),a 
   56 D1:BA93 -  -  -  -  	;Jump key is held, charge jump
   57 D1:BA93 3A 22 BE D1 	ld a,(jump_charge_timer)
   58 D1:BA97 3C -  -  -  	inc a 
   59 D1:BA98 32 22 BE D1 	ld (jump_charge_timer),a
   60 D1:BA9C -  -  -  -  	;Jumps can be charged in air, for immediate jump
   61 D1:BA9C -  -  -  -  	
   62 D1:BA9C C3 3C BB D1 	jp pu_physics
   63 D1:BAA0 -  -  -  -  	
   64 D1:BAA0 -  -  -  -  pu_try_jump:
   65 D1:BAA0 -  -  -  -  	;no jump keys held this frame. If jump timer > 0 and on ground, then jump 
   66 D1:BAA0 -  -  -  -  	
   67 D1:BAA0 CB 77 -  -  	bit 6,a ;ground check 
   68 D1:BAA2 CA 2E BB D1 	jp z, pu_no_jump ;if not on ground, cant jump
   69 D1:BAA6 3A 22 BE D1 	ld a,(jump_charge_timer)
   70 D1:BAAA B7 -  -  -  	or a 
   71 D1:BAAB CA 2E BB D1 	jp z,pu_no_jump ;jump timers are 0 = no jump
   72 D1:BAAF -  -  -  -  	
   73 D1:BAAF FE 08 -  -  	cp 8;if timer < 8 set to min strength 
   74 D1:BAB1 D2 DC BA D1 	jp nc, pu_jump_notmin
   75 D1:BAB5 -  -  -  -  	
   76 D1:BAB5 -  -  -  -  	;This is the minimum jump player can do 
   77 D1:BAB5 3A 21 BE D1 	ld a,(jump_strength_right)
   78 D1:BAB9 CB 7F -  -  	bit 7,a 
   79 D1:BABB C2 CA BA D1 	jp nz, pu_min_jump_left 
   80 D1:BABF B7 -  -  -  	or a 
   81 D1:BAC0 CA CC BA D1 	jp z, pu_min_jump_up 
   82 D1:BAC4 3E 08 -  -  	ld a,8 
   83 D1:BAC6 C3 CC BA D1 	jp pu_min_jump_up
   84 D1:BACA -  -  -  -  pu_min_jump_left:
   85 D1:BACA 3E F8 -  -  	ld a, -8
   86 D1:BACC -  -  -  -  pu_min_jump_up:
   87 D1:BACC 32 21 BE D1 	ld (jump_strength_right),a 
   88 D1:BAD0 -  -  -  -  	
   89 D1:BAD0 3E 0A -  -  	ld a,10 
   90 D1:BAD2 32 20 BE D1 	ld (jump_strength_up),a 
   91 D1:BAD6 -  -  -  -  	
   92 D1:BAD6 -  -  -  -  	
   93 D1:BAD6 3E 55 -  -  	ld a,$55
   94 D1:BAD8 CD 9F AB D1 	call write_a_to_ram
   95 D1:BADC -  -  -  -  	
   96 D1:BADC -  -  -  -  	;Player is on ground and should execute a jump 
   97 D1:BADC -  -  -  -  pu_jump_notmin:
   98 D1:BADC -  -  -  -  	
   99 D1:BADC 21 00 00 00 	ld hl,0 
  100 D1:BAE0 3A 20 BE D1 	ld a,(jump_strength_up)
  101 D1:BAE4 6F -  -  -  	ld l,a
  102 D1:BAE5 CD 9F AB D1 	call write_a_to_ram
  103 D1:BAE9 -  -  -  -  	
  104 D1:BAE9 CB 25 -  -  	sla l ;mult by 2 
  105 D1:BAEB CB 14 -  -  	rl h 
  106 D1:BAED CB 25 -  -  	sla l ;mult by 2 
  107 D1:BAEF CB 14 -  -  	rl h 
  108 D1:BAF1 -  -  -  -  
  109 D1:BAF1 22 2C BE D1 	ld (player_y_vel),hl 
  110 D1:BAF5 CD AE AB D1 	call write_hl_to_ram
  111 D1:BAF9 -  -  -  -  	
  112 D1:BAF9 3A 21 BE D1 	ld a,(jump_strength_right)
  113 D1:BAFD CD 9F AB D1 	call write_a_to_ram
  114 D1:BB01 CB 7F -  -  	bit 7, a 
  115 D1:BB03 C2 0F BB D1 	jp nz, pu_left_jump 
  116 D1:BB07 -  -  -  -  	;right jump 
  117 D1:BB07 21 00 00 00 	ld hl,0
  118 D1:BB0B C3 13 BB D1 	jp pu_jump_cont
  119 D1:BB0F -  -  -  -  pu_left_jump:	
  120 D1:BB0F 21 FF FF FF 	ld hl, $ffffff ;makes x vel negative 
  121 D1:BB13 -  -  -  -  pu_jump_cont:
  122 D1:BB13 6F -  -  -  	ld l,a 
  123 D1:BB14 CB 25 -  -  	sla l ;mult by 2 
  124 D1:BB16 CB 14 -  -  	rl h 
  125 D1:BB18 CB 25 -  -  	sla l ;mult by 2 
  126 D1:BB1A CB 14 -  -  	rl h 
  127 D1:BB1C -  -  -  -  	
  128 D1:BB1C 22 29 BE D1 	ld (player_x_vel),hl 
  129 D1:BB20 CD AE AB D1 	call write_hl_to_ram
  130 D1:BB24 -  -  -  -  	;Clear ground flag 
  131 D1:BB24 3A 35 BE D1 	ld a,(player_flags)
  132 D1:BB28 CB B7 -  -  	res 6, a 
  133 D1:BB2A 32 35 BE D1 	ld (player_flags),a 
  134 D1:BB2E -  -  -  -  	
  135 D1:BB2E -  -  -  -  pu_no_jump:	
  136 D1:BB2E -  -  -  -  	;reset jump timers 
  137 D1:BB2E 3E 00 -  -  	ld a,0 
  138 D1:BB30 32 22 BE D1 	ld (jump_charge_timer),a 
  139 D1:BB34 32 21 BE D1 	ld (jump_strength_right),a 
  140 D1:BB38 32 20 BE D1 	ld (jump_strength_up),a
  141 D1:BB3C -  -  -  -  	
  142 D1:BB3C -  -  -  -  	
  143 D1:BB3C -  -  -  -  	
  144 D1:BB3C -  -  -  -  	
  145 D1:BB3C -  -  -  -  	
  146 D1:BB3C -  -  -  -  	
  147 D1:BB3C -  -  -  -  pu_physics:
  148 D1:BB3C -  -  -  -  
  149 D1:BB3C -  -  -  -  	;Execute player physics update and check for collisions 
  150 D1:BB3C -  -  -  -  	;Run multiple times, 4 steps per frame? 
  151 D1:BB3C -  -  -  -  	;Move up first, then check collision, then move side and check again 
  152 D1:BB3C -  -  -  -  
  153 D1:BB3C 3E 10 -  -  	ld a,16 ;num physics loops 
  154 D1:BB3E 32 43 BB D1 	ld (pu_physics_count),a 
  155 D1:BB42 -  -  -  -  	
  156 D1:BB42 -  -  -  -  pu_physics_loop:
  157 D1:BB42 -  -  -  -  
  158 D1:BB42 -  -  -  -  pu_physics_count .equ $ + 1
  159 D1:BB42 3E 00 -  -  	ld a,0
  160 D1:BB44 3D -  -  -  	dec a 
  161 D1:BB45 CA D7 BB D1 	jp z, pu_physics_end
  162 D1:BB49 32 43 BB D1 	ld (pu_physics_count),a
  163 D1:BB4D -  -  -  -  	
  164 D1:BB4D 3A 35 BE D1 	ld a,(player_flags)
  165 D1:BB51 -  -  -  -  	
  166 D1:BB51 CB AF -  -  	res 5,a ;reset in semisolid flag 
  167 D1:BB53 32 35 BE D1 	ld (player_flags),a 
  168 D1:BB57 CB 77 -  -  	bit 6,a 
  169 D1:BB59 C2 42 BB D1 	jp nz,pu_physics_loop ;If on ground, no need to do physics 
  170 D1:BB5D -  -  -  -  	
  171 D1:BB5D -  -  -  -  	
  172 D1:BB5D -  -  -  -  
  173 D1:BB5D -  -  -  -  ;Y POS UPDATE
  174 D1:BB5D -  -  -  -  
  175 D1:BB5D 2A 2C BE D1 	ld hl, (player_y_vel) 	
  176 D1:BB61 EB -  -  -  	ex de,hl 
  177 D1:BB62 2A 26 BE D1 	ld hl, (player_y_pos) 
  178 D1:BB66 19 -  -  -  	add hl,de ;add y vel to y pos 
  179 D1:BB67 22 26 BE D1 	ld (player_y_pos),hl 
  180 D1:BB6B -  -  -  -  	
  181 D1:BB6B -  -  -  -  	;check for vertical collisions here 
  182 D1:BB6B 3E DA -  -  	ld a,%11011010;jp c
  183 D1:BB6D 32 59 BD D1 	ld (collision_check_vertical),a
  184 D1:BB71 CD C0 BC D1 	call check_collisions
  185 D1:BB75 -  -  -  -  	
  186 D1:BB75 -  -  -  -  	;Temp ground check
  187 D1:BB75 2A 26 BE D1 	ld hl, (player_y_pos) 
  188 D1:BB79 11 00 20 00 	ld de, $002000
  189 D1:BB7D ED 52 -  -  	sbc hl,de 
  190 D1:BB7F D2 95 BB D1 	jp nc, pu_update_x_pos 
  191 D1:BB83 -  -  -  -  
  192 D1:BB83 -  -  -  -  pu_ground_hit:
  193 D1:BB83 21 00 20 00 	ld hl,$002000 ;TEMP 
  194 D1:BB87 22 26 BE D1 	ld (player_y_pos),hl 
  195 D1:BB8B 3A 35 BE D1 	ld a,(player_flags)
  196 D1:BB8F CB F7 -  -  	set 6,a 
  197 D1:BB91 32 35 BE D1 	ld (player_flags),a 
  198 D1:BB95 -  -  -  -  
  199 D1:BB95 -  -  -  -  pu_update_x_pos:
  200 D1:BB95 -  -  -  -  
  201 D1:BB95 -  -  -  -  ;X POS UPDATE
  202 D1:BB95 2A 29 BE D1 	ld hl, (player_x_vel) 
  203 D1:BB99 EB -  -  -  	ex de,hl 
  204 D1:BB9A 2A 23 BE D1 	ld hl, (player_x_pos) 
  205 D1:BB9E 19 -  -  -  	add hl,de ;add x vel to x pos 
  206 D1:BB9F 22 23 BE D1 	ld (player_x_pos),hl 
  207 D1:BBA3 -  -  -  -  	
  208 D1:BBA3 -  -  -  -  	;TODO check horizontal collisoins 
  209 D1:BBA3 3E D2 -  -  	ld a, %11010010 ;jp nc 
  210 D1:BBA5 32 59 BD D1 	ld (collision_check_vertical),a
  211 D1:BBA9 CD C0 BC D1 	call check_collisions
  212 D1:BBAD -  -  -  -  	
  213 D1:BBAD -  -  -  -  	;Set previous position 
  214 D1:BBAD 2A 26 BE D1 	ld hl, (player_y_pos)
  215 D1:BBB1 22 32 BE D1 	ld (player_y_pos_prev), hl 
  216 D1:BBB5 2A 23 BE D1 	ld hl, (player_x_pos)
  217 D1:BBB9 22 2F BE D1 	ld (player_x_pos_prev), hl 
  218 D1:BBBD -  -  -  -  	
  219 D1:BBBD 3A 35 BE D1 	ld a,(player_flags)
  220 D1:BBC1 CB 6F -  -  	bit 5,a ;in semisolid flag 
  221 D1:BBC3 CA CD BB D1 	jp z, pu_no_semisolid
  222 D1:BBC7 CB E7 -  -  	set 4,a	
  223 D1:BBC9 C3 CF BB D1 	jp pu_prev_semisolid
  224 D1:BBCD -  -  -  -  pu_no_semisolid:
  225 D1:BBCD CB A7 -  -  	res 4,a 
  226 D1:BBCF -  -  -  -  pu_prev_semisolid:
  227 D1:BBCF 32 35 BE D1 	ld (player_flags),a 
  228 D1:BBD3 -  -  -  -  	
  229 D1:BBD3 C3 42 BB D1 	jp pu_physics_loop
  230 D1:BBD7 -  -  -  -  	;Apply gravity and terminal v check after loop 
  231 D1:BBD7 -  -  -  -  	
  232 D1:BBD7 -  -  -  -  pu_physics_end:
  233 D1:BBD7 -  -  -  -  	;Apply gravity 
  234 D1:BBD7 2A 2C BE D1 	ld hl,(player_y_vel)
  235 D1:BBDB CB 7C -  -  	bit 7,h  ;Check if vel is negative
  236 D1:BBDD CA EC BB D1 	jp z,pu_apply_gravity
  237 D1:BBE1 -  -  -  -  	
  238 D1:BBE1 E5 -  -  -  	push hl 
  239 D1:BBE2 -  -  -  -  	;check foor terminal vel 
  240 D1:BBE2 11 00 0F 00 	ld de, $000f00 ;15px per frame
  241 D1:BBE6 19 -  -  -  	add hl,de ;terminal V is negative
  242 D1:BBE7 E1 -  -  -  	pop hl 
  243 D1:BBE8 D2 F9 BB D1 	jp nc, pu_terminal_vel
  244 D1:BBEC -  -  -  -  pu_apply_gravity:
  245 D1:BBEC 11 0D 00 00 	ld de,13 ;GRAVITY CONSTANT
  246 D1:BBF0 37 -  -  -  	scf 
  247 D1:BBF1 3F -  -  -  	ccf ;reset carry flag 
  248 D1:BBF2 ED 52 -  -  	sbc hl,de 
  249 D1:BBF4 22 2C BE D1 	ld (player_y_vel),hl
  250 D1:BBF8 -  -  -  -  
  251 D1:BBF8 C9 -  -  -  	ret 
  252 D1:BBF9 -  -  -  -  pu_terminal_vel:
  253 D1:BBF9 21 00 F1 FF 	ld hl, $fff100 ;-15 px per frame
  254 D1:BBFD 22 2C BE D1 	ld (player_y_vel),hl
  255 D1:BC01 -  -  -  -  
  256 D1:BC01 C9 -  -  -  	ret 
  257 D1:BC02 -  -  -  -  
  258 D1:BC02 -  -  -  -  
  259 D1:BC02 -  -  -  -  
  260 D1:BC02 -  -  -  -  
  261 D1:BC02 -  -  -  -  player_draw:
  262 D1:BC02 -  -  -  -  ;Draw sprite and reset any flags 
  263 D1:BC02 -  -  -  -  
  264 D1:BC02 -  -  -  -  	;Todo Logic for choosing sprite index 
  265 D1:BC02 3E 00 -  -  	ld a,0 
  266 D1:BC04 32 BB BC D1 	ld (player_sprite_index),a 
  267 D1:BC08 3E 13 -  -  	ld a, 19
  268 D1:BC0A 32 75 BC D1 	ld (pd_sprite_height_1),a 
  269 D1:BC0E 32 94 BC D1 	ld (pd_sprite_height_2),a 
  270 D1:BC12 -  -  -  -  	
  271 D1:BC12 -  -  -  -  	
  272 D1:BC12 -  -  -  -  	;ld x pos
  273 D1:BC12 3A 24 BE D1 	ld a, (player_x_pos + 1) ;fullpixel byte
  274 D1:BC16 -  -  -  -  
  275 D1:BC16 CB 47 -  -  	bit 0, a ;least fullpixel bit 
  276 D1:BC18 CA 25 BC D1 	jp z, pd_even_px 
  277 D1:BC1C ED 5B 1D BE 
              D1 -  -  -  	ld de, (player_sprite_table_offset)
  278 D1:BC21 C3 2A BC D1 	jp pd_set_sprite_table
  279 D1:BC25 -  -  -  -  pd_even_px:
  280 D1:BC25 ED 5B 1A BE 
              D1 -  -  -  	ld de, (player_sprite_table)
  281 D1:BC2A -  -  -  -  pd_set_sprite_table:
  282 D1:BC2A ED 53 B7 BC 
              D1 -  -  -  	ld (pd_sprite_table), de 
  283 D1:BC2F -  -  -  -  	
  284 D1:BC2F CB 3F -  -  	srl a ;div by 2
  285 D1:BC31 47 -  -  -  	ld b,a 
  286 D1:BC32 3A 25 BE D1 	ld a,(player_x_pos+2);MSB fullpixel 
  287 D1:BC36 0F -  -  -  	rrca ;Move bit 0 to bit 7
  288 D1:BC37 B0 -  -  -  	or b 
  289 D1:BC38 -  -  -  -  
  290 D1:BC38 -  -  -  -  	
  291 D1:BC38 32 B3 BC D1 	ld (pd_xpos_full),a 
  292 D1:BC3C -  -  -  -  	
  293 D1:BC3C -  -  -  -  	;call write_a_to_ram
  294 D1:BC3C -  -  -  -  	
  295 D1:BC3C 21 00 00 00 	ld hl,0 
  296 D1:BC40 3A 28 BE D1 	ld a,(player_y_pos + 2) ;MSB
  297 D1:BC44 67 -  -  -  	ld h,a 
  298 D1:BC45 3A 27 BE D1 	ld a, (player_y_pos + 1) ;middle bit (fullpixel LSB)
  299 D1:BC49 6F -  -  -  	ld l,a 
  300 D1:BC4A -  -  -  -  
  301 D1:BC4A EB -  -  -  	ex de,hl 
  302 D1:BC4B 2A D2 AB D1 	ld hl,(cam_pos)
  303 D1:BC4F CB 3C -  -  	srl h ;div by 2
  304 D1:BC51 CB 1D -  -  	rr l 
  305 D1:BC53 01 EF 00 00 	ld bc,239
  306 D1:BC57 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of fg layer
  307 D1:BC58 37 -  -  -  	scf 
  308 D1:BC59 3F -  -  -  	ccf 
  309 D1:BC5A -  -  -  -  	;Uppermost vp line - player y  = lines below top to draw player 
  310 D1:BC5A ED 52 -  -  	sbc hl,de 
  311 D1:BC5C -  -  -  -  	;call write_hl_to_ram
  312 D1:BC5C DA 8C BC D1 	jp c, pd_top_cut
  313 D1:BC60 -  -  -  -  	
  314 D1:BC60 7C -  -  -  	ld a,h 
  315 D1:BC61 -  -  -  -  	
  316 D1:BC61 B7 -  -  -  	or a 
  317 D1:BC62 C0 -  -  -  	ret nz ;player is > 256 px below cam 
  318 D1:BC63 -  -  -  -  	
  319 D1:BC63 7D -  -  -  	ld a,l 
  320 D1:BC64 -  -  -  -  	;a holds lines below vp top to draw player
  321 D1:BC64 47 -  -  -  	ld b,a 
  322 D1:BC65 3E F0 -  -  	ld a,240
  323 D1:BC67 90 -  -  -  	sub a,b ;lines above bottom of VP 
  324 D1:BC68 D8 -  -  -  	ret c ;player below VP 
  325 D1:BC69 -  -  -  -  
  326 D1:BC69 -  -  -  -  	
  327 D1:BC69 ED 5B D8 AB 
              D1 -  -  -  	ld de, (draw_buffer)
  328 D1:BC6E 21 00 96 00 	ld hl, 240*160
  329 D1:BC72 19 -  -  -  	add hl,de 
  330 D1:BC73 EB -  -  -  	ex de,hl ;DE hlds VP bottom 
  331 D1:BC74 -  -  -  -  	
  332 D1:BC74 -  -  -  -  pd_sprite_height_1 .equ $ + 1
  333 D1:BC74 FE 00 -  -  	cp 0 
  334 D1:BC76 DA 83 BC D1 	jp c, pd_bottom_cut 
  335 D1:BC7A -  -  -  -  
  336 D1:BC7A -  -  -  -  	;Otherwise, no top or bottm cut
  337 D1:BC7A -  -  -  -  	;a holds lines above bottom VP 
  338 D1:BC7A CD A4 BC D1 	call pd_setup_draw
  339 D1:BC7E -  -  -  -  	
  340 D1:BC7E -  -  -  -  
  341 D1:BC7E -  -  -  -  	;call prgmpause
  342 D1:BC7E -  -  -  -  	
  343 D1:BC7E CD C0 AE D1 	call draw_slow_sprite_full
  344 D1:BC82 -  -  -  -  	
  345 D1:BC82 -  -  -  -  	
  346 D1:BC82 C9 -  -  -  	ret
  347 D1:BC83 -  -  -  -  
  348 D1:BC83 -  -  -  -  pd_bottom_cut:
  349 D1:BC83 -  -  -  -  	;a holds lines to draw
  350 D1:BC83 -  -  -  -  	;DE holds vram bottom 
  351 D1:BC83 CD A4 BC D1 	call pd_setup_draw
  352 D1:BC87 CD 2B AF D1 	call draw_slow_sprite_bottom_cut
  353 D1:BC8B -  -  -  -  	
  354 D1:BC8B -  -  -  -  	;push af 
  355 D1:BC8B -  -  -  -  	;ld a,$33
  356 D1:BC8B -  -  -  -  	;call write_a_to_ram 
  357 D1:BC8B -  -  -  -  	;pop af 
  358 D1:BC8B -  -  -  -  	
  359 D1:BC8B C9 -  -  -  	ret 
  360 D1:BC8C -  -  -  -  	
  361 D1:BC8C -  -  -  -  
  362 D1:BC8C -  -  -  -  pd_top_cut:
  363 D1:BC8C -  -  -  -  	;call write_hl_to_ram
  364 D1:BC8C -  -  -  -  	;push af 
  365 D1:BC8C -  -  -  -  	;ld a,$44
  366 D1:BC8C -  -  -  -  	;call write_a_to_ram 
  367 D1:BC8C -  -  -  -  	;pop af 
  368 D1:BC8C -  -  -  -  
  369 D1:BC8C 7C -  -  -  	ld a,h ;Upper byte after subtraction, check for chase where player > 256 px above cam to prevent overflow errors
  370 D1:BC8D EE FF -  -  	xor %11111111 ;flip all bits 
  371 D1:BC8F C0 -  -  -  	ret nz ;player is > 256 px above cam 
  372 D1:BC90 -  -  -  -  	
  373 D1:BC90 -  -  -  -   
  374 D1:BC90 -  -  -  -  	
  375 D1:BC90 7D -  -  -  	ld a,l ;lines below VP
  376 D1:BC91 ED 44 -  -  	neg 
  377 D1:BC93 -  -  -  -  
  378 D1:BC93 -  -  -  -  	;a holds lines above vp top = lines to cut 
  379 D1:BC93 -  -  -  -  pd_sprite_height_2 .equ $ + 1 
  380 D1:BC93 FE 00 -  -  	cp 0 ; compare to height 
  381 D1:BC95 D0 -  -  -  	ret nc 
  382 D1:BC96 -  -  -  -  
  383 D1:BC96 ED 5B D8 AB 
              D1 -  -  -  	ld de,(draw_buffer)
  384 D1:BC9B CD A4 BC D1 	call pd_setup_draw ;Setup draw pos 
  385 D1:BC9F -  -  -  -  	
  386 D1:BC9F -  -  -  -  	;bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  387 D1:BC9F -  -  -  -  	;jp z,pd_top_cut_fast
  388 D1:BC9F CD FE AE D1 	call draw_slow_sprite_top_cut ;for now assume all sprites are slow
  389 D1:BCA3 -  -  -  -  	
  390 D1:BCA3 -  -  -  -  	;jp pd_top_cut_slow
  391 D1:BCA3 -  -  -  -  ;pd_top_cut_fast:
  392 D1:BCA3 -  -  -  -  	;call draw_fast_sprite_top_cut
  393 D1:BCA3 -  -  -  -  ;pd_top_cut_slow:
  394 D1:BCA3 -  -  -  -  	
  395 D1:BCA3 C9 -  -  -  	ret 
  396 D1:BCA4 -  -  -  -  	
  397 D1:BCA4 -  -  -  -  
  398 D1:BCA4 -  -  -  -  
  399 D1:BCA4 -  -  -  -  
  400 D1:BCA4 -  -  -  -  pd_setup_draw:
  401 D1:BCA4 -  -  -  -  	;A holds lines above bottom (or top) line of VP 
  402 D1:BCA4 -  -  -  -  	;DE holds VP top or bottom
  403 D1:BCA4 26 A0 -  -  	ld h,160
  404 D1:BCA6 6F -  -  -  	ld l,a ;Num lines to subtract
  405 D1:BCA7 ED 6C -  -  	mlt hl 
  406 D1:BCA9 37 -  -  -  	scf 
  407 D1:BCAA 3F -  -  -  	ccf 
  408 D1:BCAB EB -  -  -  	ex de,hl ;De holds lines to subtract, hl holds vram pos 
  409 D1:BCAC ED 52 -  -  	sbc hl,de 
  410 D1:BCAE 01 00 00 00 	ld bc,0 
  411 D1:BCB2 -  -  -  -  pd_xpos_full .equ $ + 1 
  412 D1:BCB2 0E 00 -  -  	ld c, 0 ;ld x pos 
  413 D1:BCB4 09 -  -  -  	add hl,bc 
  414 D1:BCB5 EB -  -  -  	ex de,hl 
  415 D1:BCB6 -  -  -  -  pd_sprite_table .equ $ + 1 
  416 D1:BCB6 21 00 00 00 	ld hl,0 ;Load sprite table (offset or even)
  417 D1:BCBA -  -  -  -  
  418 D1:BCBA -  -  -  -  player_sprite_index .equ $ + 1 
  419 D1:BCBA 0E 00 -  -  	ld c,0 ;load sprite index 
  420 D1:BCBC 09 -  -  -  	add hl,bc 
  421 D1:BCBD 09 -  -  -  	add hl,bc 
  422 D1:BCBE 09 -  -  -  	add hl,bc 
  423 D1:BCBF -  -  -  -  	;HL holds sprite data, de holds draw pos 
  424 D1:BCBF C9 -  -  -  	ret 
  425 D1:BCC0 -  -  -  -  
  426 D1:BCC0 -  -  -  -  
  427 D1:BCC0 -  -  -  -  
  428 D1:BCC0 -  -  -  -  
  429 D1:BCC0 -  -  -  -  check_collisions:
  430 D1:BCC0 3A 28 BE D1 	ld a,(player_y_pos+2) ;Frame Number
  431 D1:BCC4 01 00 00 00 	ld bc,0 
  432 D1:BCC8 21 56 EB D1 	ld hl, Collision_Data_frame_table
  433 D1:BCCC 4F -  -  -  	ld c,a 
  434 D1:BCCD 09 -  -  -  	add hl,bc ;add frame num 
  435 D1:BCCE 09 -  -  -  	add hl,bc ;add frame num 
  436 D1:BCCF 09 -  -  -  	add hl,bc ;add frame num 
  437 D1:BCD0 ED 27 -  -  	ld hl,(hl)
  438 D1:BCD2 -  -  -  -  	
  439 D1:BCD2 3E DA -  -  	ld a,%11011010;jp c
  440 D1:BCD4 32 12 BE D1 	ld(check_col_lower_jump),a 
  441 D1:BCD8 -  -  -  -  	
  442 D1:BCD8 -  -  -  -  	;hl points to collision data for this frame 
  443 D1:BCD8 08 -  -  -  	ex af,af' ;' 
  444 D1:BCD9 7E -  -  -  	ld a,(hl) ;ld number of elements 
  445 D1:BCDA 3C -  -  -  	inc a ;for 0 case
  446 D1:BCDB 08 -  -  -  	ex af,af' ;' 
  447 D1:BCDC 23 -  -  -  	inc hl ;to first element
  448 D1:BCDD -  -  -  -  
  449 D1:BCDD -  -  -  -  check_collisions_same_loop:
  450 D1:BCDD -  -  -  -  	;hl pts to ymin of collider 
  451 D1:BCDD 08 -  -  -  	ex af,af' ;'
  452 D1:BCDE 3D -  -  -  	dec a 
  453 D1:BCDF CA FE BC D1 	jp z, check_collisions_lower
  454 D1:BCE3 08 -  -  -  	ex af,af';' 
  455 D1:BCE4 -  -  -  -  	;Collider bottom is in same frame as player 
  456 D1:BCE4 3A 27 BE D1 	ld a,(player_y_pos + 1)
  457 D1:BCE8 96 -  -  -  	sub a,(hl); sub y pos of collider 
  458 D1:BCE9 -  -  -  -  	;call write_a_to_ram
  459 D1:BCE9 DA 0C BE D1 	jp c, check_col_skip_4 
  460 D1:BCED 23 -  -  -  	inc hl; to height 
  461 D1:BCEE -  -  -  -  	;Player top is above bottom of collider 
  462 D1:BCEE -  -  -  -  	;a holds # pixels above bottom of collider (0 indexed)	
  463 D1:BCEE 0E 13 -  -  	ld c,player_collider_height
  464 D1:BCF0 -  -  -  -  	;call write_a_to_ram
  465 D1:BCF0 91 -  -  -  	sub a,c
  466 D1:BCF1 DA 27 BD D1 	jp c, check_col_y_collision
  467 D1:BCF5 96 -  -  -  	sub (hl); cokmpare to collider height -1 
  468 D1:BCF6 DA 27 BD D1 	jp c,check_col_y_collision
  469 D1:BCFA -  -  -  -  	;Otherwise no collision 	
  470 D1:BCFA C3 0D BE D1 	jp check_col_skip_3
  471 D1:BCFE -  -  -  -  
  472 D1:BCFE -  -  -  -  check_collisions_lower:
  473 D1:BCFE -  -  -  -  	;hl pts to start of lower frame collisoin data 
  474 D1:BCFE 08 -  -  -  	ex af,af' ;' 
  475 D1:BCFF 7E -  -  -  	ld a,(hl) ;ld number of elements 
  476 D1:BD00 3C -  -  -  	inc a ;for 0 case
  477 D1:BD01 -  -  -  -  	;call write_a_to_ram
  478 D1:BD01 08 -  -  -  	ex af,af' ;' 
  479 D1:BD02 23 -  -  -  	inc hl ;to first element
  480 D1:BD03 3E D2 -  -  	ld a, %11010010 ;jp nc 
  481 D1:BD05 32 12 BE D1 	ld(check_col_lower_jump),a 
  482 D1:BD09 -  -  -  -  
  483 D1:BD09 -  -  -  -  check_collisions_lower_loop:
  484 D1:BD09 -  -  -  -  ;hl pts to ymin of collider 
  485 D1:BD09 08 -  -  -  	ex af,af' ;'
  486 D1:BD0A 3D -  -  -  	dec a 
  487 D1:BD0B C8 -  -  -  	ret z 
  488 D1:BD0C 08 -  -  -  	ex af,af';' 
  489 D1:BD0D -  -  -  -  	;collider y min is in frame below player
  490 D1:BD0D -  -  -  -  	;we already know player is above collider bottom 
  491 D1:BD0D 3A 27 BE D1 	ld a,(player_y_pos + 1)
  492 D1:BD11 96 -  -  -  	sub (hl)
  493 D1:BD12 D2 0C BE D1 	jp nc,check_col_skip_4
  494 D1:BD16 -  -  -  -  	;call write_a_to_ram
  495 D1:BD16 23 -  -  -  	inc hl ;to height 
  496 D1:BD17 -  -  -  -  	;a holds px from player top to collider bottom 
  497 D1:BD17 0E 13 -  -  	ld c,player_collider_height
  498 D1:BD19 -  -  -  -  	;call write_a_to_ram
  499 D1:BD19 91 -  -  -  	sub a,c
  500 D1:BD1A DA 27 BD D1 	jp c, check_col_y_collision
  501 D1:BD1E -  -  -  -  	
  502 D1:BD1E -  -  -  -  	
  503 D1:BD1E -  -  -  -  	;call write_a_to_ram
  504 D1:BD1E 96 -  -  -  	sub (hl); cokmpare to collider height -1 
  505 D1:BD1F DA 27 BD D1 	jp c,check_col_y_collision
  506 D1:BD23 -  -  -  -  	;Otherwise no collision 	
  507 D1:BD23 C3 0D BE D1 	jp check_col_skip_3
  508 D1:BD27 -  -  -  -  	
  509 D1:BD27 -  -  -  -  check_col_y_collision:
  510 D1:BD27 -  -  -  -  	;call write_a_to_ram
  511 D1:BD27 -  -  -  -  
  512 D1:BD27 -  -  -  -  	;Player is within Y range of collider 
  513 D1:BD27 -  -  -  -  	;ld a,$AA 
  514 D1:BD27 -  -  -  -  	;call write_a_to_ram;TESTIng
  515 D1:BD27 -  -  -  -  	
  516 D1:BD27 23 -  -  -  	inc hl ;to x max 
  517 D1:BD28 3A 24 BE D1 	ld a,(player_x_pos+1);Fullpixels
  518 D1:BD2C CB 3F -  -  	srl a ;div by 2 
  519 D1:BD2E 47 -  -  -  	ld b,a 
  520 D1:BD2F 3A 25 BE D1 	ld a,(player_x_pos+2);MSB fullpixel 
  521 D1:BD33 0F -  -  -  	rrca ;Move bit 0 to bit 7
  522 D1:BD34 B0 -  -  -  	or b 
  523 D1:BD35 -  -  -  -  	;A holds x pos / 2 (paired pixels) 
  524 D1:BD35 -  -  -  -  	
  525 D1:BD35 BE -  -  -  	cp (hl) ;compare to x max 
  526 D1:BD36 -  -  -  -  	;zero or carry = collison 
  527 D1:BD36 CA 42 BD D1 	jp z, check_col_x_collision
  528 D1:BD3A DA 42 BD D1 	jp c, check_col_x_collision
  529 D1:BD3E -  -  -  -  	
  530 D1:BD3E C3 0E BE D1 	jp check_col_skip_2
  531 D1:BD42 -  -  -  -  	
  532 D1:BD42 -  -  -  -  check_col_x_collision:
  533 D1:BD42 -  -  -  -  
  534 D1:BD42 -  -  -  -  	;ld a,$BB
  535 D1:BD42 -  -  -  -  	;call write_a_to_ram
  536 D1:BD42 -  -  -  -  	;Need to find x pos of right of player, then div by 2 
  537 D1:BD42 3A 24 BE D1 	ld a,(player_x_pos+1);Fullpixels
  538 D1:BD46 C6 18 -  -  	add a, player_collider_width ;Will set carry flag if right side of player > 255 and left of player < 255 
  539 D1:BD48 1F -  -  -  	rra ;div by 2 and move carry flag to bit 7. 
  540 D1:BD49 47 -  -  -  	ld b,a 
  541 D1:BD4A 3A 25 BE D1 	ld a,(player_x_pos +2 ); MSB pixel 
  542 D1:BD4E 0F -  -  -  	rrca ;move bit 0 to bit 7
  543 D1:BD4F B0 -  -  -  	or b ;a holds right pos of player / 2 
  544 D1:BD50 23 -  -  -  	inc hl ;to x min 
  545 D1:BD51 BE -  -  -  	cp (hl) 
  546 D1:BD52 -  -  -  -   
  547 D1:BD52 DA 0F BE D1 	jp c, check_col_skip_1 
  548 D1:BD56 -  -  -  -  
  549 D1:BD56 -  -  -  -  
  550 D1:BD56 -  -  -  -  
  551 D1:BD56 -  -  -  -  
  552 D1:BD56 -  -  -  -  
  553 D1:BD56 -  -  -  -  
  554 D1:BD56 -  -  -  -  	
  555 D1:BD56 -  -  -  -  collision_found: ;A collision has been detected
  556 D1:BD56 -  -  -  -  	
  557 D1:BD56 -  -  -  -  	;TESTing 
  558 D1:BD56 23 -  -  -  	inc hl ;to flags 
  559 D1:BD57 7E -  -  -  	ld a,(hl)
  560 D1:BD58 -  -  -  -  	;call write_a_to_ram
  561 D1:BD58 -  -  -  -  	
  562 D1:BD58 37 -  -  -  	scf 
  563 D1:BD59 -  -  -  -  collision_check_vertical .equ $
  564 D1:BD59 DA 90 BD D1 	jp c, collision_check_vert 
  565 D1:BD5D -  -  -  -  	
  566 D1:BD5D -  -  -  -  
  567 D1:BD5D -  -  -  -  	;Player is moving horizontal 
  568 D1:BD5D 7E -  -  -  	ld a,(hl) ;flags 
  569 D1:BD5E CB 7F -  -  	bit 7,a ;semisolid 
  570 D1:BD60 C2 BD BD D1 	jp nz,vert_col_up_semisolid ;skips semisolid 
  571 D1:BD64 -  -  -  -  
  572 D1:BD64 CB 77 -  -  	bit 6,a 
  573 D1:BD66 C2 08 BE D1 	jp nz, collision_spikes
  574 D1:BD6A -  -  -  -  	
  575 D1:BD6A -  -  -  -  	;TODO breakaway platforms 
  576 D1:BD6A -  -  -  -  	
  577 D1:BD6A -  -  -  -  	;player has moved horiz and hit a solid wall 
  578 D1:BD6A -  -  -  -  	;Reverse x velocity 
  579 D1:BD6A E5 -  -  -  	push hl 
  580 D1:BD6B 2A 29 BE D1 	ld hl,(player_x_vel)
  581 D1:BD6F EB -  -  -  	ex de,hl 
  582 D1:BD70 21 00 00 00 	ld hl,0
  583 D1:BD74 ED 52 -  -  	sbc hl, de  
  584 D1:BD76 -  -  -  -  	
  585 D1:BD76 7C -  -  -  	ld a,h
  586 D1:BD77 E6 80 -  -  	and %10000000
  587 D1:BD79 CB 3C -  -  	srl h ;div by 2 
  588 D1:BD7B CB 1D -  -  	rr l 
  589 D1:BD7D B4 -  -  -  	or h
  590 D1:BD7E 67 -  -  -  	ld h,a 
  591 D1:BD7F -  -  -  -  	
  592 D1:BD7F -  -  -  -  	
  593 D1:BD7F 22 29 BE D1 	ld (player_x_vel),hl 
  594 D1:BD83 2A 2F BE D1 	ld hl, (player_x_pos_prev) ;revert to previous y pos 
  595 D1:BD87 22 23 BE D1 	ld (player_x_pos),hl 
  596 D1:BD8B E1 -  -  -  	pop hl 
  597 D1:BD8C -  -  -  -  	
  598 D1:BD8C C3 10 BE D1 	jp check_col_skip_0
  599 D1:BD90 -  -  -  -  
  600 D1:BD90 -  -  -  -  collision_check_vert:
  601 D1:BD90 -  -  -  -  	;Player is moving in vertical direction 
  602 D1:BD90 -  -  -  -  
  603 D1:BD90 3A 2E BE D1 	ld a,(player_y_vel + 2) ;MSB of y vel 
  604 D1:BD94 CB 7F -  -  	bit 7,a ;check if moving up or down 
  605 D1:BD96 C2 CB BD D1 	jp nz, vert_col_down
  606 D1:BD9A -  -  -  -  	
  607 D1:BD9A -  -  -  -  	;player is moving up 
  608 D1:BD9A 7E -  -  -  	ld a,(hl) ;flags 
  609 D1:BD9B CB 7F -  -  	bit 7,a ;semisolid 
  610 D1:BD9D C2 BD BD D1 	jp nz,vert_col_up_semisolid ;semisolid and moving up
  611 D1:BDA1 -  -  -  -  
  612 D1:BDA1 CB 77 -  -  	bit 6,a 
  613 D1:BDA3 C2 08 BE D1 	jp nz, collision_spikes
  614 D1:BDA7 -  -  -  -  
  615 D1:BDA7 -  -  -  -  	;TODO breakaway platforms 
  616 D1:BDA7 -  -  -  -  	
  617 D1:BDA7 -  -  -  -  	;Plyaer has moved up and hit non spike object 
  618 D1:BDA7 -  -  -  -  	;Set velocity to 0 
  619 D1:BDA7 E5 -  -  -  	push hl 
  620 D1:BDA8 21 00 00 00 	ld hl,0
  621 D1:BDAC 22 2C BE D1 	ld (player_y_vel),hl 
  622 D1:BDB0 2A 32 BE D1 	ld hl, (player_y_pos_prev) ;revert to previous y pos 
  623 D1:BDB4 22 26 BE D1 	ld (player_y_pos),hl 
  624 D1:BDB8 E1 -  -  -  	pop hl 
  625 D1:BDB9 -  -  -  -  	
  626 D1:BDB9 C3 10 BE D1 	jp check_col_skip_0
  627 D1:BDBD -  -  -  -  	
  628 D1:BDBD -  -  -  -  vert_col_up_semisolid:
  629 D1:BDBD 3A 35 BE D1 	ld a,(player_flags)
  630 D1:BDC1 CB EF -  -  	set 5,a ;set semisolid flag 
  631 D1:BDC3 32 35 BE D1 	ld (player_flags),a 
  632 D1:BDC7 C3 10 BE D1 	jp check_col_skip_0
  633 D1:BDCB -  -  -  -  	
  634 D1:BDCB -  -  -  -  	
  635 D1:BDCB -  -  -  -  	
  636 D1:BDCB -  -  -  -  vert_col_down:
  637 D1:BDCB -  -  -  -  
  638 D1:BDCB -  -  -  -  	;player is moving down 
  639 D1:BDCB 7E -  -  -  	ld a,(hl) ;flags 
  640 D1:BDCC CB 7F -  -  	bit 7,a ;semisolid 
  641 D1:BDCE CA E2 BD D1 	jp z,vert_col_down_solid 
  642 D1:BDD2 -  -  -  -  	
  643 D1:BDD2 -  -  -  -  	;semisolid and moving down
  644 D1:BDD2 3A 35 BE D1 	ld a,(player_flags)
  645 D1:BDD6 CB EF -  -  	set 5,a ;set semisolid flag 
  646 D1:BDD8 32 35 BE D1 	ld (player_flags),a 
  647 D1:BDDC CB 67 -  -  	bit 4,a ;check we were not in semisolid last update 
  648 D1:BDDE C2 10 BE D1 	jp nz, check_col_skip_0 ;we were already within semisolid collider 
  649 D1:BDE2 -  -  -  -  	;otherwise, hit the collider 
  650 D1:BDE2 -  -  -  -  	
  651 D1:BDE2 -  -  -  -  
  652 D1:BDE2 -  -  -  -  vert_col_down_solid:
  653 D1:BDE2 CB 77 -  -  	bit 6,a 
  654 D1:BDE4 C2 08 BE D1 	jp nz, collision_spikes
  655 D1:BDE8 -  -  -  -  
  656 D1:BDE8 -  -  -  -  	;TODO breakaway platforms 
  657 D1:BDE8 -  -  -  -  	
  658 D1:BDE8 -  -  -  -  	;Plyaer has moved down and hit non spike object 
  659 D1:BDE8 -  -  -  -  	;Set velocity to 0 
  660 D1:BDE8 E5 -  -  -  	push hl 
  661 D1:BDE9 21 00 00 00 	ld hl,0
  662 D1:BDED 22 2C BE D1 	ld (player_y_vel),hl 
  663 D1:BDF1 2A 32 BE D1 	ld hl, (player_y_pos_prev) ;revert to previous y pos 
  664 D1:BDF5 22 26 BE D1 	ld (player_y_pos),hl 
  665 D1:BDF9 E1 -  -  -  	pop hl 
  666 D1:BDFA -  -  -  -  	
  667 D1:BDFA 3A 35 BE D1 	ld a,(player_flags)
  668 D1:BDFE CB F7 -  -  	set 6,a  ;set ground flag 
  669 D1:BE00 32 35 BE D1 	ld (player_flags),a
  670 D1:BE04 -  -  -  -  	
  671 D1:BE04 C3 10 BE D1 	jp check_col_skip_0 ;continue 
  672 D1:BE08 -  -  -  -  
  673 D1:BE08 -  -  -  -  
  674 D1:BE08 -  -  -  -  
  675 D1:BE08 -  -  -  -  
  676 D1:BE08 -  -  -  -  
  677 D1:BE08 -  -  -  -  collision_spikes:
  678 D1:BE08 -  -  -  -  	;player has collided with spikes 
  679 D1:BE08 -  -  -  -  
  680 D1:BE08 C3 10 BE D1 	jp check_col_skip_0
  681 D1:BE0C -  -  -  -  
  682 D1:BE0C -  -  -  -  check_col_skip_4:
  683 D1:BE0C 23 -  -  -  	inc hl ;to height
  684 D1:BE0D -  -  -  -  check_col_skip_3:
  685 D1:BE0D 23 -  -  -  	inc hl ;to xmax
  686 D1:BE0E -  -  -  -  check_col_skip_2:	
  687 D1:BE0E 23 -  -  -  	inc hl ;to xmin
  688 D1:BE0F -  -  -  -  check_col_skip_1:	
  689 D1:BE0F 23 -  -  -  	inc hl ;to flags
  690 D1:BE10 -  -  -  -  check_col_skip_0:
  691 D1:BE10 23 -  -  -  	inc hl ;to next element
  692 D1:BE11 -  -  -  -  	
  693 D1:BE11 37 -  -  -  	scf 
  694 D1:BE12 -  -  -  -  check_col_lower_jump .equ $
  695 D1:BE12 DA DD BC D1 	jp c, check_collisions_same_loop
  696 D1:BE16 C3 09 BD D1 	jp check_collisions_lower_loop
  697 D1:BE1A -  -  -  -  
  698 D1:BE1A -  -  -  -  
  699 D1:BE1A -  -  -  -  
  700 D1:BE1A -  -  -  -  player_sprite_table:
  701 D1:BE1A E7 03 D4 -  	.dl Frog_0_Slow
  702 D1:BE1D -  -  -  -  
  703 D1:BE1D -  -  -  -  player_sprite_table_offset:
  704 D1:BE1D 17 05 D4 -  	.dl Frog_0_Slow_O
  705 D1:BE20 -  -  -  -  
  706 D1:BE20 -  -  -  -  
  707 D1:BE20 -  -  -  -  
  708 D1:BE20 -  -  -  -  
  709 D1:BE20 -  -  -  -  
  710 D1:BE20 -  -  -  -  
  711 D1:BE20 -  -  -  -  jump_strength_up:
  712 D1:BE20 00 -  -  -  	.db 0 
  713 D1:BE21 -  -  -  -  jump_strength_right:
  714 D1:BE21 00 -  -  -  	.db 0 
  715 D1:BE22 -  -  -  -  jump_charge_timer:
  716 D1:BE22 00 -  -  -  	.db 0 
  717 D1:BE23 -  -  -  -  
  718 D1:BE23 -  -  -  -  	
  719 D1:BE23 -  -  -  -  timer_max_val .equ 30
  720 D1:BE23 -  -  -  -  
  721 D1:BE23 -  -  -  -  player_collider_height .equ 19
  722 D1:BE23 -  -  -  -  player_collider_width .equ 24 ;width -1 
  723 D1:BE23 -  -  -  -  
  724 D1:BE23 -  -  -  -  
  725 D1:BE23 -  -  -  -  player_x_pos:
  726 D1:BE23 00 00 00 -  	.dl 0 ; (MSB fullpixel, Fullpixels, subpixels)
  727 D1:BE26 -  -  -  -  	
  728 D1:BE26 -  -  -  -  player_y_pos:
  729 D1:BE26 00 00 00 -  	.dl 0 ; (Frame #, Fullpixels, subpixels)
  730 D1:BE29 -  -  -  -  
  731 D1:BE29 -  -  -  -  player_x_vel:
  732 D1:BE29 00 00 00 -  	.dl 0 ; (Unused, Fullpixels, subpixels)
  733 D1:BE2C -  -  -  -  	
  734 D1:BE2C -  -  -  -  player_y_vel:
  735 D1:BE2C 00 00 00 -  	.dl 0 ; (Unused, Fullpixels, subpixels)
  736 D1:BE2F -  -  -  -  
  737 D1:BE2F -  -  -  -  
  738 D1:BE2F -  -  -  -  player_x_pos_prev: ;x position before update, revert to this if collision 
  739 D1:BE2F 00 00 00 -  	.dl 0 ; (MSB fullpixel, Fullpixels, subpixels)
  740 D1:BE32 -  -  -  -  	
  741 D1:BE32 -  -  -  -  player_y_pos_prev: ;y position before update, revert to this if collision :
  742 D1:BE32 00 00 00 -  	.dl 0 ; (Frame #, Fullpixels, subpixels)
  743 D1:BE35 -  -  -  -  
  744 D1:BE35 -  -  -  -  
  745 D1:BE35 -  -  -  -  
  746 D1:BE35 -  -  -  -  player_flags:
  747 D1:BE35 00 -  -  -  	.db %00000000 ; (7 = Any jump button held, 6 = on ground,5 = within semisolid, 4 = in semisolid last update)
  748 D1:BE36 -  -  -  -  	
  749 D1:BE36 -  -  -  -  	
  750 D1:BE36 -  -  -  -  	
  751 D1:BE36 -  -  -  -  	
  752 D1:BE36 -  -  -  -  	
  753 D1:BE36 -  -  -  -  	
  754 D1:BE36 -  -  -  -  	
  755 D1:BE36 -  -  -  -  	
  756 D1:BE36 -  -  -  -  	
  757 D1:BE36 -  -  -  -  	
  758 D1:BE36 -  -  -  -  	
  759 D1:BE36 -  -  -  -  	
  760 D1:BE36 -  -  -  -  	
  761 D1:BE36 -  -  -  -  	
  762 D1:BE36 -  -  -  -  	
  763 D1:BE36 -  -  -  -  player_move_debug:
  764 D1:BE36 -  -  -  -  ;DEBUG MODE ============================================================================= 
  765 D1:BE36 21 00 00 F5 	ld	hl,DI_Mode		; register for keypad mode
  766 D1:BE3A 36 02 -  -  	ld	(hl),2			; set single scan mode
  767 D1:BE3C AF -  -  -  	xor	a,a
  768 D1:BE3D -  -  -  -  dbg_scan_wait:
  769 D1:BE3D BE -  -  -  	cp	a,(hl)			; wait for keypad idle mode
  770 D1:BE3E 20 FD -  -  	jr	nz,dbg_scan_wait
  771 D1:BE40 -  -  -  -  	
  772 D1:BE40 3A 1A 00 F5 	ld a,(kbdG5)
  773 D1:BE44 CB 57 -  -  	bit kbit6,a 
  774 D1:BE46 C2 7C BE D1 	jp nz, player_move_debug_right
  775 D1:BE4A -  -  -  -  	
  776 D1:BE4A 3A 16 00 F5 	ld a,(kbdG3)
  777 D1:BE4E CB 57 -  -  	bit kbit4,a 
  778 D1:BE50 C2 69 BE D1 	jp nz, player_move_debug_left
  779 D1:BE54 -  -  -  -  	
  780 D1:BE54 3A 18 00 F5 	ld a,(kbdG4)
  781 D1:BE58 CB 4F -  -  	bit kbit2,a 
  782 D1:BE5A C2 A0 BE D1 	jp nz, player_move_debug_down 
  783 D1:BE5E -  -  -  -  	
  784 D1:BE5E 3A 18 00 F5 	ld a,(kbdG4)
  785 D1:BE62 CB 5F -  -  	bit kbit8,a 
  786 D1:BE64 C2 8E BE D1 	jp nz, player_move_debug_up
  787 D1:BE68 -  -  -  -  	
  788 D1:BE68 C9 -  -  -  	ret 
  789 D1:BE69 -  -  -  -  	
  790 D1:BE69 -  -  -  -  	
  791 D1:BE69 -  -  -  -  
  792 D1:BE69 -  -  -  -  
  793 D1:BE69 -  -  -  -  player_move_debug_left:
  794 D1:BE69 2A 23 BE D1 	ld hl,(player_x_pos)
  795 D1:BE6D 01 80 00 00 	ld bc, 128
  796 D1:BE71 ED 42 -  -  	sbc hl,bc 
  797 D1:BE73 22 23 BE D1 	ld (player_x_pos),hl 
  798 D1:BE77 CD C0 BC D1 	call check_collisions
  799 D1:BE7B C9 -  -  -  	ret 
  800 D1:BE7C -  -  -  -  
  801 D1:BE7C -  -  -  -  player_move_debug_right:
  802 D1:BE7C 2A 23 BE D1 	ld hl,(player_x_pos)
  803 D1:BE80 01 80 00 00 	ld bc, 128
  804 D1:BE84 09 -  -  -  	add hl,bc 
  805 D1:BE85 22 23 BE D1 	ld (player_x_pos),hl 
  806 D1:BE89 CD C0 BC D1 	call check_collisions
  807 D1:BE8D C9 -  -  -  	ret 
  808 D1:BE8E -  -  -  -  
  809 D1:BE8E -  -  -  -  player_move_debug_up:
  810 D1:BE8E 2A 26 BE D1 	ld hl,(player_y_pos)
  811 D1:BE92 01 80 00 00 	ld bc, 128
  812 D1:BE96 09 -  -  -  	add hl,bc 
  813 D1:BE97 22 26 BE D1 	ld (player_y_pos),hl 
  814 D1:BE9B CD C0 BC D1 	call check_collisions
  815 D1:BE9F C9 -  -  -  	ret 
  816 D1:BEA0 -  -  -  -  
  817 D1:BEA0 -  -  -  -  player_move_debug_down:
  818 D1:BEA0 2A 26 BE D1 	ld hl,(player_y_pos)
  819 D1:BEA4 01 80 00 00 	ld bc, 128
  820 D1:BEA8 ED 42 -  -  	sbc hl,bc 
  821 D1:BEAA 22 26 BE D1 	ld (player_y_pos),hl 
  822 D1:BEAE CD C0 BC D1 	call check_collisions
  823 D1:BEB2 C9 -  -  -  	ret
Listing for file "ascent.asm"
  557 D1:BEB3 -  -  -  -  #include "sineFunc.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\sineFunc.txt"
    1 D1:BEB3 -  -  -  -  
    2 D1:BEB3 -  -  -  -  update_sine_vals:
    3 D1:BEB3 01 00 00 00 	ld bc,0
    4 D1:BEB7 -  -  -  -  	
    5 D1:BEB7 3A ED AB D1 	ld a, (frameCount+1);middle byte 
    6 D1:BEBB CB 3F -  -  	srl a ;put bit 0 to carry flag 
    7 D1:BEBD 3A EC AB D1 	ld a, (frameCount)
    8 D1:BEC1 1F -  -  -  	rra ;a holds frame counter/2, ~16 second timer
    9 D1:BEC2 21 30 BF D1 	ld hl,sine_modes_table
   10 D1:BEC6 08 -  -  -  	ex af,af' ;' ;in
   11 D1:BEC7 3E 14 -  -  	ld a,20
   12 D1:BEC9 -  -  -  -  	
   13 D1:BEC9 -  -  -  -  update_sine_loop:
   14 D1:BEC9 08 -  -  -  	ex af,af' ;' ;out
   15 D1:BECA F5 -  -  -  	push af ;frame count 
   16 D1:BECB ED 17 -  -  	ld de, (hl) ;de holds correct sine value table 
   17 D1:BECD 23 -  -  -  	inc hl 
   18 D1:BECE 23 -  -  -  	inc hl 
   19 D1:BECF 23 -  -  -  	inc hl 
   20 D1:BED0 E5 -  -  -  	push hl 
   21 D1:BED1 CD 10 BF D1 	call sine_apply_amplitudes
   22 D1:BED5 E1 -  -  -  	pop hl
   23 D1:BED6 F1 -  -  -  	pop af 
   24 D1:BED7 -  -  -  -  	;a holds frame count 
   25 D1:BED7 ED 17 -  -  	ld de, (hl) ;de holds lin value table
   26 D1:BED9 23 -  -  -  	inc hl 
   27 D1:BEDA 23 -  -  -  	inc hl 
   28 D1:BEDB 23 -  -  -  	inc hl 
   29 D1:BEDC E5 -  -  -  	push hl 
   30 D1:BEDD F5 -  -  -  	push af
   31 D1:BEDE -  -  -  -  	;A holds frame count for linear curve
   32 D1:BEDE CD 17 BF D1 	call lin_apply_amplitudes
   33 D1:BEE2 F1 -  -  -  	pop af 
   34 D1:BEE3 E1 -  -  -  	pop hl
   35 D1:BEE4 F5 -  -  -  	push af
   36 D1:BEE5 ED 17 -  -  	ld de, (hl) ;de holds linrep value table
   37 D1:BEE7 23 -  -  -  	inc hl 
   38 D1:BEE8 23 -  -  -  	inc hl 
   39 D1:BEE9 23 -  -  -  	inc hl 
   40 D1:BEEA CB 7F -  -  	bit 7,a 
   41 D1:BEEC CA F2 BE D1 	jp z,update_sine_skip_rep
   42 D1:BEF0 EE FF -  -  	xor %11111111 ;if a >127, negate it to reverse the time 
   43 D1:BEF2 -  -  -  -  update_sine_skip_rep:
   44 D1:BEF2 E5 -  -  -  	push hl
   45 D1:BEF3 EB -  -  -  	ex de,hl 	
   46 D1:BEF4 CD 1A BF D1 	call linrep_apply_amplitudes
   47 D1:BEF8 E1 -  -  -  	pop hl
   48 D1:BEF9 F1 -  -  -  	pop af 
   49 D1:BEFA 0E 40 -  -  	ld c,64 ;add quarter phase offset 
   50 D1:BEFC 81 -  -  -  	add a,c 
   51 D1:BEFD 08 -  -  -  	ex af,af' ;' ;in
   52 D1:BEFE 3D -  -  -  	dec a 
   53 D1:BEFF C8 -  -  -  	ret z 
   54 D1:BF00 4F -  -  -  	ld c,a
   55 D1:BF01 E6 03 -  -  	and %00000011 ;check last 2 bits
   56 D1:BF03 79 -  -  -  	ld a,c
   57 D1:BF04 C2 C9 BE D1 	jp nz,update_sine_loop
   58 D1:BF08 -  -  -  -  	;otherwise, a is multiple of 4, multiply clock speed 
   59 D1:BF08 08 -  -  -  	ex af, af' ;' ;out
   60 D1:BF09 CB 27 -  -  	sla a ;mult by 2 
   61 D1:BF0B 08 -  -  -  	ex af, af' ;' ;in
   62 D1:BF0C C3 C9 BE D1 	jp update_sine_loop
   63 D1:BF10 -  -  -  -  	
   64 D1:BF10 -  -  -  -  	
   65 D1:BF10 -  -  -  -  	
   66 D1:BF10 -  -  -  -  	
   67 D1:BF10 -  -  -  -  	
   68 D1:BF10 -  -  -  -  	
   69 D1:BF10 -  -  -  -  sine_apply_amplitudes: ;a holds scaled frame count,de holds ptr to correct sine value table
   70 D1:BF10 21 10 C1 D1 	ld hl, sine
   71 D1:BF14 4F -  -  -  	ld c,a 
   72 D1:BF15 09 -  -  -  	add hl,bc 
   73 D1:BF16 7E -  -  -  	ld a,(hl); a holds sine value 
   74 D1:BF17 -  -  -  -  lin_apply_amplitudes:
   75 D1:BF17 EB -  -  -  	ex de,hl 
   76 D1:BF18 CB 3F -  -  	srl a ;div 2 
   77 D1:BF1A -  -  -  -  linrep_apply_amplitudes:
   78 D1:BF1A CB 3F -  -  	srl a 
   79 D1:BF1C CB 3F -  -  	srl a ;amplitude of 31 
   80 D1:BF1E 77 -  -  -  	ld (hl),a 
   81 D1:BF1F 23 -  -  -  	inc hl 
   82 D1:BF20 CB 3F -  -  	srl a ;amplitude of 15 
   83 D1:BF22 77 -  -  -  	ld (hl),a 
   84 D1:BF23 23 -  -  -  	inc hl
   85 D1:BF24 CB 3F -  -  	srl a ;amplitude of 7 
   86 D1:BF26 77 -  -  -  	ld (hl),a 
   87 D1:BF27 23 -  -  -  	inc hl
   88 D1:BF28 CB 3F -  -  	srl a ;amplitude of 3 
   89 D1:BF2A 77 -  -  -  	ld (hl),a 
   90 D1:BF2B 23 -  -  -  	inc hl
   91 D1:BF2C CB 3F -  -  	srl a ;amplitude of 1 
   92 D1:BF2E 77 -  -  -  	ld (hl),a
   93 D1:BF2F C9 -  -  -  	ret 
   94 D1:BF30 -  -  -  -  
   95 D1:BF30 -  -  -  -  
   96 D1:BF30 -  -  -  -  
   97 D1:BF30 -  -  -  -  sine_modes_table:
   98 D1:BF30 E4 BF D1 -  	.dl sine_05_1
   99 D1:BF33 48 C0 D1 -  	.dl lin_05_1
  100 D1:BF36 AC C0 D1 -  	.dl linrep_05_1
  101 D1:BF39 E9 BF D1 -  	.dl sine_05_2
  102 D1:BF3C 4D C0 D1 -  	.dl lin_05_2
  103 D1:BF3F B1 C0 D1 -  	.dl linrep_05_2
  104 D1:BF42 EE BF D1 -  	.dl sine_05_3
  105 D1:BF45 52 C0 D1 -  	.dl lin_05_3
  106 D1:BF48 B6 C0 D1 -  	.dl linrep_05_3
  107 D1:BF4B F3 BF D1 -  	.dl sine_05_4
  108 D1:BF4E 57 C0 D1 -  	.dl lin_05_4
  109 D1:BF51 BB C0 D1 -  	.dl linrep_05_4
  110 D1:BF54 -  -  -  -  	
  111 D1:BF54 F8 BF D1 -  	.dl sine_1_1
  112 D1:BF57 5C C0 D1 -  	.dl lin_1_1
  113 D1:BF5A C0 C0 D1 -  	.dl linrep_1_1
  114 D1:BF5D FD BF D1 -  	.dl sine_1_2
  115 D1:BF60 61 C0 D1 -  	.dl lin_1_2
  116 D1:BF63 C5 C0 D1 -  	.dl linrep_1_2
  117 D1:BF66 02 C0 D1 -  	.dl sine_1_3
  118 D1:BF69 66 C0 D1 -  	.dl lin_1_3
  119 D1:BF6C CA C0 D1 -  	.dl linrep_1_3
  120 D1:BF6F 07 C0 D1 -  	.dl sine_1_4
  121 D1:BF72 6B C0 D1 -  	.dl lin_1_4
  122 D1:BF75 CF C0 D1 -  	.dl linrep_1_4
  123 D1:BF78 -  -  -  -  	
  124 D1:BF78 0C C0 D1 -  	.dl sine_2_1
  125 D1:BF7B 70 C0 D1 -  	.dl lin_2_1
  126 D1:BF7E D4 C0 D1 -  	.dl linrep_2_1
  127 D1:BF81 11 C0 D1 -  	.dl sine_2_2
  128 D1:BF84 75 C0 D1 -  	.dl lin_2_2
  129 D1:BF87 D9 C0 D1 -  	.dl linrep_2_2
  130 D1:BF8A 16 C0 D1 -  	.dl sine_2_3
  131 D1:BF8D 7A C0 D1 -  	.dl lin_2_3
  132 D1:BF90 DE C0 D1 -  	.dl linrep_2_3
  133 D1:BF93 1B C0 D1 -  	.dl sine_2_4
  134 D1:BF96 7F C0 D1 -  	.dl lin_2_4
  135 D1:BF99 E3 C0 D1 -  	.dl linrep_2_4
  136 D1:BF9C -  -  -  -  	
  137 D1:BF9C 20 C0 D1 -  	.dl sine_4_1
  138 D1:BF9F 84 C0 D1 -  	.dl lin_4_1
  139 D1:BFA2 E8 C0 D1 -  	.dl linrep_4_1
  140 D1:BFA5 25 C0 D1 -  	.dl sine_4_2
  141 D1:BFA8 89 C0 D1 -  	.dl lin_4_2
  142 D1:BFAB ED C0 D1 -  	.dl linrep_4_2
  143 D1:BFAE 2A C0 D1 -  	.dl sine_4_3
  144 D1:BFB1 8E C0 D1 -  	.dl lin_4_3
  145 D1:BFB4 F2 C0 D1 -  	.dl linrep_4_3
  146 D1:BFB7 2F C0 D1 -  	.dl sine_4_4
  147 D1:BFBA 93 C0 D1 -  	.dl lin_4_4
  148 D1:BFBD F7 C0 D1 -  	.dl linrep_4_4
  149 D1:BFC0 -  -  -  -  
  150 D1:BFC0 34 C0 D1 -  	.dl sine_8_1
  151 D1:BFC3 98 C0 D1 -  	.dl lin_8_1
  152 D1:BFC6 FC C0 D1 -  	.dl linrep_8_1
  153 D1:BFC9 39 C0 D1 -  	.dl sine_8_2
  154 D1:BFCC 9D C0 D1 -  	.dl lin_8_2
  155 D1:BFCF 01 C1 D1 -  	.dl linrep_8_2
  156 D1:BFD2 3E C0 D1 -  	.dl sine_8_3
  157 D1:BFD5 A2 C0 D1 -  	.dl lin_8_3
  158 D1:BFD8 06 C1 D1 -  	.dl linrep_8_3
  159 D1:BFDB 43 C0 D1 -  	.dl sine_8_4
  160 D1:BFDE A7 C0 D1 -  	.dl lin_8_4
  161 D1:BFE1 0B C1 D1 -  	.dl linrep_8_4
  162 D1:BFE4 -  -  -  -  
  163 D1:BFE4 -  -  -  -  
  164 D1:BFE4 -  -  -  -  
  165 D1:BFE4 -  -  -  -  
  166 D1:BFE4 -  -  -  -  sine_05_1: ;half frequency, no phase shift
  167 D1:BFE4 -  -  -  -  sine_05_31_1: ;freqMult, amplitude, phase 
  168 D1:BFE4 00 -  -  -  	.db 0  
  169 D1:BFE5 -  -  -  -  sine_05_15_1: ;freqMult, amplitude, phase 
  170 D1:BFE5 00 -  -  -  	.db 0 
  171 D1:BFE6 -  -  -  -  sine_05_7_1: ;freqMult, amplitude, phase 
  172 D1:BFE6 00 -  -  -  	.db 0 
  173 D1:BFE7 -  -  -  -  sine_05_3_1: ;freqMult, amplitude, phase 
  174 D1:BFE7 00 -  -  -  	.db 0 
  175 D1:BFE8 -  -  -  -  sine_05_1_1: ;freqMult, amplitude, phase 
  176 D1:BFE8 00 -  -  -  	.db 0 
  177 D1:BFE9 -  -  -  -  
  178 D1:BFE9 -  -  -  -  	
  179 D1:BFE9 -  -  -  -  	
  180 D1:BFE9 -  -  -  -  sine_05_2: ;half frequency, no phase shift 
  181 D1:BFE9 -  -  -  -  sine_05_31_2: ;freqMult, amplitude, phase 
  182 D1:BFE9 00 -  -  -  	.db 0 
  183 D1:BFEA -  -  -  -  sine_05_15_2: ;freqMult, amplitude, phase 
  184 D1:BFEA 00 -  -  -  	.db 0 
  185 D1:BFEB -  -  -  -  sine_05_7_2: ;freqMult, amplitude, phase 
  186 D1:BFEB 00 -  -  -  	.db 0 
  187 D1:BFEC -  -  -  -  sine_05_3_2: ;freqMult, amplitude, phase 
  188 D1:BFEC 00 -  -  -  	.db 0 
  189 D1:BFED -  -  -  -  sine_05_1_2: ;freqMult, amplitude, phase 
  190 D1:BFED 00 -  -  -  	.db 0 
  191 D1:BFEE -  -  -  -  
  192 D1:BFEE -  -  -  -  	
  193 D1:BFEE -  -  -  -  sine_05_3: ;half frequency, no phase shift
  194 D1:BFEE -  -  -  -  sine_05_31_3: ;freqMult, amplitude, phase 
  195 D1:BFEE 00 -  -  -  	.db 0  
  196 D1:BFEF -  -  -  -  sine_05_15_3: ;freqMult, amplitude, phase 
  197 D1:BFEF 00 -  -  -  	.db 0 
  198 D1:BFF0 -  -  -  -  sine_05_7_3: ;freqMult, amplitude, phase 
  199 D1:BFF0 00 -  -  -  	.db 0 
  200 D1:BFF1 -  -  -  -  sine_05_3_3: ;freqMult, amplitude, phase 
  201 D1:BFF1 00 -  -  -  	.db 0 
  202 D1:BFF2 -  -  -  -  sine_05_1_3: ;freqMult, amplitude, phase 
  203 D1:BFF2 00 -  -  -  	.db 0 
  204 D1:BFF3 -  -  -  -  
  205 D1:BFF3 -  -  -  -  
  206 D1:BFF3 -  -  -  -  sine_05_4: ;half frequency, no phase shift 
  207 D1:BFF3 -  -  -  -  sine_05_31_4: ;freqMult, amplitude, phase 
  208 D1:BFF3 00 -  -  -  	.db 0
  209 D1:BFF4 -  -  -  -  sine_05_15_4: ;freqMult, amplitude, phase 
  210 D1:BFF4 00 -  -  -  	.db 0 
  211 D1:BFF5 -  -  -  -  sine_05_7_4: ;freqMult, amplitude, phase 
  212 D1:BFF5 00 -  -  -  	.db 0 
  213 D1:BFF6 -  -  -  -  sine_05_3_4: ;freqMult, amplitude, phase 
  214 D1:BFF6 00 -  -  -  	.db 0 
  215 D1:BFF7 -  -  -  -  sine_05_1_4: ;freqMult, amplitude, phase 
  216 D1:BFF7 00 -  -  -  	.db 0 
  217 D1:BFF8 -  -  -  -  
  218 D1:BFF8 -  -  -  -  
  219 D1:BFF8 -  -  -  -  	
  220 D1:BFF8 -  -  -  -  sine_1_1: ;no freq mult, no phase shift
  221 D1:BFF8 -  -  -  -  sine_1_31_1: ;freqMult, amplitude, phase 
  222 D1:BFF8 00 -  -  -  	.db 0  
  223 D1:BFF9 -  -  -  -  sine_1_15_1: ;freqMult, amplitude, phase 
  224 D1:BFF9 00 -  -  -  	.db 0 
  225 D1:BFFA -  -  -  -  sine_1_7_1: ;freqMult, amplitude, phase 
  226 D1:BFFA 00 -  -  -  	.db 0 
  227 D1:BFFB -  -  -  -  sine_1_3_1: ;freqMult, amplitude, phase 
  228 D1:BFFB 00 -  -  -  	.db 0 
  229 D1:BFFC -  -  -  -  sine_1_1_1: ;freqMult, amplitude, phase 
  230 D1:BFFC 00 -  -  -  	.db 0 
  231 D1:BFFD -  -  -  -  
  232 D1:BFFD -  -  -  -  	
  233 D1:BFFD -  -  -  -  sine_1_2: ;no freq mult, no phase shift 
  234 D1:BFFD -  -  -  -  sine_1_31_2: ;freqMult, amplitude, phase 
  235 D1:BFFD 00 -  -  -  	.db 0 
  236 D1:BFFE -  -  -  -  sine_1_15_2: ;freqMult, amplitude, phase 
  237 D1:BFFE 00 -  -  -  	.db 0 
  238 D1:BFFF -  -  -  -  sine_1_7_2: ;freqMult, amplitude, phase 
  239 D1:BFFF 00 -  -  -  	.db 0 
  240 D1:C000 -  -  -  -  sine_1_3_2: ;freqMult, amplitude, phase 
  241 D1:C000 00 -  -  -  	.db 0 
  242 D1:C001 -  -  -  -  sine_1_1_2: ;freqMult, amplitude, phase 
  243 D1:C001 00 -  -  -  	.db 0 
  244 D1:C002 -  -  -  -  
  245 D1:C002 -  -  -  -  sine_1_3: ;no freq mult, no phase shift 
  246 D1:C002 -  -  -  -  sine_1_31_3: ;freqMult, amplitude, phase 
  247 D1:C002 00 -  -  -  	.db 0 
  248 D1:C003 -  -  -  -  sine_1_15_3: ;freqMult, amplitude, phase 
  249 D1:C003 00 -  -  -  	.db 0 
  250 D1:C004 -  -  -  -  sine_1_7_3: ;freqMult, amplitude, phase 
  251 D1:C004 00 -  -  -  	.db 0 
  252 D1:C005 -  -  -  -  sine_1_3_3: ;freqMult, amplitude, phase 
  253 D1:C005 00 -  -  -  	.db 0 
  254 D1:C006 -  -  -  -  sine_1_1_3: ;freqMult, amplitude, phase 
  255 D1:C006 00 -  -  -  	.db 0 
  256 D1:C007 -  -  -  -  
  257 D1:C007 -  -  -  -  	
  258 D1:C007 -  -  -  -  sine_1_4: ;no freq mult, no phase shift
  259 D1:C007 -  -  -  -  sine_1_31_4: ;freqMult, amplitude, phase 
  260 D1:C007 00 -  -  -  	.db 0  
  261 D1:C008 -  -  -  -  sine_1_15_4: ;freqMult, amplitude, phase 
  262 D1:C008 00 -  -  -  	.db 0 
  263 D1:C009 -  -  -  -  sine_1_7_4: ;freqMult, amplitude, phase 
  264 D1:C009 00 -  -  -  	.db 0 
  265 D1:C00A -  -  -  -  sine_1_3_4: ;freqMult, amplitude, phase 
  266 D1:C00A 00 -  -  -  	.db 0 
  267 D1:C00B -  -  -  -  sine_1_1_4: ;freqMult, amplitude, phase 
  268 D1:C00B 00 -  -  -  	.db 0 
  269 D1:C00C -  -  -  -  
  270 D1:C00C -  -  -  -  
  271 D1:C00C -  -  -  -  
  272 D1:C00C -  -  -  -  
  273 D1:C00C -  -  -  -  sine_2_1: ;double freq mult
  274 D1:C00C -  -  -  -  sine_2_31_1: ;freqMult, amplitude, phase 
  275 D1:C00C 00 -  -  -  	.db 0 
  276 D1:C00D -  -  -  -  sine_2_15_1: ;freqMult, amplitude, phase 
  277 D1:C00D 00 -  -  -  	.db 0 
  278 D1:C00E -  -  -  -  sine_2_7_1: ;freqMult, amplitude, phase 
  279 D1:C00E 00 -  -  -  	.db 0 
  280 D1:C00F -  -  -  -  sine_2_3_1: ;freqMult, amplitude, phase 
  281 D1:C00F 00 -  -  -  	.db 0 
  282 D1:C010 -  -  -  -  sine_2_1_1: ;freqMult, amplitude, phase 
  283 D1:C010 00 -  -  -  	.db 0 
  284 D1:C011 -  -  -  -  
  285 D1:C011 -  -  -  -  	
  286 D1:C011 -  -  -  -  sine_2_2: 
  287 D1:C011 -  -  -  -  sine_2_31_2: ;freqMult, amplitude, phase 
  288 D1:C011 00 -  -  -  	.db 0 
  289 D1:C012 -  -  -  -  sine_2_15_2: ;freqMult, amplitude, phase 
  290 D1:C012 00 -  -  -  	.db 0 
  291 D1:C013 -  -  -  -  sine_2_7_2: ;freqMult, amplitude, phase 
  292 D1:C013 00 -  -  -  	.db 0 
  293 D1:C014 -  -  -  -  sine_2_3_2: ;freqMult, amplitude, phase 
  294 D1:C014 00 -  -  -  	.db 0 
  295 D1:C015 -  -  -  -  sine_2_1_2: ;freqMult, amplitude, phase 
  296 D1:C015 00 -  -  -  	.db 0 
  297 D1:C016 -  -  -  -  
  298 D1:C016 -  -  -  -  	
  299 D1:C016 -  -  -  -  sine_2_3: 
  300 D1:C016 -  -  -  -  sine_2_31_3: ;freqMult, amplitude, phase 
  301 D1:C016 00 -  -  -  	.db 0 
  302 D1:C017 -  -  -  -  sine_2_15_3: ;freqMult, amplitude, phase 
  303 D1:C017 00 -  -  -  	.db 0 
  304 D1:C018 -  -  -  -  sine_2_7_3: ;freqMult, amplitude, phase 
  305 D1:C018 00 -  -  -  	.db 0 
  306 D1:C019 -  -  -  -  sine_2_3_3: ;freqMult, amplitude, phase 
  307 D1:C019 00 -  -  -  	.db 0 
  308 D1:C01A -  -  -  -  sine_2_1_3: ;freqMult, amplitude, phase 
  309 D1:C01A 00 -  -  -  	.db 0 
  310 D1:C01B -  -  -  -  
  311 D1:C01B -  -  -  -  	
  312 D1:C01B -  -  -  -  sine_2_4: 
  313 D1:C01B -  -  -  -  sine_2_31_4: ;freqMult, amplitude, phase 
  314 D1:C01B 00 -  -  -  	.db 0	
  315 D1:C01C -  -  -  -  sine_2_15_4: ;freqMult, amplitude, phase 
  316 D1:C01C 00 -  -  -  	.db 0 
  317 D1:C01D -  -  -  -  sine_2_7_4: ;freqMult, amplitude, phase 
  318 D1:C01D 00 -  -  -  	.db 0 
  319 D1:C01E -  -  -  -  sine_2_3_4: ;freqMult, amplitude, phase 
  320 D1:C01E 00 -  -  -  	.db 0 
  321 D1:C01F -  -  -  -  sine_2_1_4: ;freqMult, amplitude, phase 
  322 D1:C01F 00 -  -  -  	.db 0 
  323 D1:C020 -  -  -  -  
  324 D1:C020 -  -  -  -  
  325 D1:C020 -  -  -  -  
  326 D1:C020 -  -  -  -  
  327 D1:C020 -  -  -  -  sine_4_1: ;double freq mult
  328 D1:C020 -  -  -  -  sine_4_31_1: ;freqMult, amplitude, phase 
  329 D1:C020 00 -  -  -  	.db 0 
  330 D1:C021 -  -  -  -  sine_4_15_1: ;freqMult, amplitude, phase 
  331 D1:C021 00 -  -  -  	.db 0 
  332 D1:C022 -  -  -  -  sine_4_7_1: ;freqMult, amplitude, phase 
  333 D1:C022 00 -  -  -  	.db 0 
  334 D1:C023 -  -  -  -  sine_4_3_1: ;freqMult, amplitude, phase 
  335 D1:C023 00 -  -  -  	.db 0 
  336 D1:C024 -  -  -  -  sine_4_1_1: ;freqMult, amplitude, phase 
  337 D1:C024 00 -  -  -  	.db 0 
  338 D1:C025 -  -  -  -  
  339 D1:C025 -  -  -  -  	
  340 D1:C025 -  -  -  -  sine_4_2: 
  341 D1:C025 -  -  -  -  sine_4_31_2: ;freqMult, amplitude, phase 
  342 D1:C025 00 -  -  -  	.db 0
  343 D1:C026 -  -  -  -  sine_4_15_2: ;freqMult, amplitude, phase 
  344 D1:C026 00 -  -  -  	.db 0 
  345 D1:C027 -  -  -  -  sine_4_7_2: ;freqMult, amplitude, phase 
  346 D1:C027 00 -  -  -  	.db 0 
  347 D1:C028 -  -  -  -  sine_4_3_2: ;freqMult, amplitude, phase 
  348 D1:C028 00 -  -  -  	.db 0 
  349 D1:C029 -  -  -  -  sine_4_1_2: ;freqMult, amplitude, phase 
  350 D1:C029 00 -  -  -  	.db 0 
  351 D1:C02A -  -  -  -  
  352 D1:C02A -  -  -  -  	
  353 D1:C02A -  -  -  -  sine_4_3: 
  354 D1:C02A -  -  -  -  sine_4_31_3: ;freqMult, amplitude, phase 
  355 D1:C02A 00 -  -  -  	.db 0 
  356 D1:C02B -  -  -  -  sine_4_15_3: ;freqMult, amplitude, phase 
  357 D1:C02B 00 -  -  -  	.db 0 
  358 D1:C02C -  -  -  -  sine_4_7_3: ;freqMult, amplitude, phase 
  359 D1:C02C 00 -  -  -  	.db 0 
  360 D1:C02D -  -  -  -  sine_4_3_3: ;freqMult, amplitude, phase 
  361 D1:C02D 00 -  -  -  	.db 0 
  362 D1:C02E -  -  -  -  sine_4_1_3: ;freqMult, amplitude, phase 
  363 D1:C02E 00 -  -  -  	.db 0 
  364 D1:C02F -  -  -  -  
  365 D1:C02F -  -  -  -  	
  366 D1:C02F -  -  -  -  sine_4_4: 
  367 D1:C02F -  -  -  -  sine_4_314: ;freqMult, amplitude, phase 
  368 D1:C02F 00 -  -  -  	.db 0
  369 D1:C030 -  -  -  -  sine_4_15_4: ;freqMult, amplitude, phase 
  370 D1:C030 00 -  -  -  	.db 0 
  371 D1:C031 -  -  -  -  sine_4_7_4: ;freqMult, amplitude, phase 
  372 D1:C031 00 -  -  -  	.db 0 
  373 D1:C032 -  -  -  -  sine_4_3_4: ;freqMult, amplitude, phase 
  374 D1:C032 00 -  -  -  	.db 0 
  375 D1:C033 -  -  -  -  sine_4_1_4: ;freqMult, amplitude, phase 
  376 D1:C033 00 -  -  -  	.db 0 
  377 D1:C034 -  -  -  -  
  378 D1:C034 -  -  -  -  
  379 D1:C034 -  -  -  -  
  380 D1:C034 -  -  -  -  
  381 D1:C034 -  -  -  -  
  382 D1:C034 -  -  -  -  sine_8_1: ;double freq mult
  383 D1:C034 -  -  -  -  sine_8_31_1: ;freqMult, amplitude, phase 
  384 D1:C034 00 -  -  -  	.db 0 
  385 D1:C035 -  -  -  -  sine_8_15_1: ;freqMult, amplitude, phase 
  386 D1:C035 00 -  -  -  	.db 0 
  387 D1:C036 -  -  -  -  sine_8_7_1: ;freqMult, amplitude, phase 
  388 D1:C036 00 -  -  -  	.db 0 
  389 D1:C037 -  -  -  -  sine_8_3_1: ;freqMult, amplitude, phase 
  390 D1:C037 00 -  -  -  	.db 0 
  391 D1:C038 -  -  -  -  sine_8_1_1: ;freqMult, amplitude, phase 
  392 D1:C038 00 -  -  -  	.db 0 
  393 D1:C039 -  -  -  -  
  394 D1:C039 -  -  -  -  	
  395 D1:C039 -  -  -  -  sine_8_2: 
  396 D1:C039 -  -  -  -  sine_8_31_2: ;freqMult, amplitude, phase 
  397 D1:C039 00 -  -  -  	.db 0 
  398 D1:C03A -  -  -  -  sine_8_15_2: ;freqMult, amplitude, phase 
  399 D1:C03A 00 -  -  -  	.db 0 
  400 D1:C03B -  -  -  -  sine_8_7_2: ;freqMult, amplitude, phase 
  401 D1:C03B 00 -  -  -  	.db 0 
  402 D1:C03C -  -  -  -  sine_8_3_2: ;freqMult, amplitude, phase 
  403 D1:C03C 00 -  -  -  	.db 0 
  404 D1:C03D -  -  -  -  sine_8_1_2: ;freqMult, amplitude, phase 
  405 D1:C03D 00 -  -  -  	.db 0 
  406 D1:C03E -  -  -  -  
  407 D1:C03E -  -  -  -  	
  408 D1:C03E -  -  -  -  sine_8_3: 
  409 D1:C03E -  -  -  -  sine_8_313: ;freqMult, amplitude, phase 
  410 D1:C03E 00 -  -  -  	.db 0 
  411 D1:C03F -  -  -  -  sine_8_15_3: ;freqMult, amplitude, phase 
  412 D1:C03F 00 -  -  -  	.db 0 
  413 D1:C040 -  -  -  -  sine_8_7_3: ;freqMult, amplitude, phase 
  414 D1:C040 00 -  -  -  	.db 0 
  415 D1:C041 -  -  -  -  sine_8_3_3: ;freqMult, amplitude, phase 
  416 D1:C041 00 -  -  -  	.db 0 
  417 D1:C042 -  -  -  -  sine_8_1_3: ;freqMult, amplitude, phase 
  418 D1:C042 00 -  -  -  	.db 0 
  419 D1:C043 -  -  -  -  
  420 D1:C043 -  -  -  -  	
  421 D1:C043 -  -  -  -  sine_8_4: 
  422 D1:C043 -  -  -  -  sine_8_31_4: ;freqMult, amplitude, phase 
  423 D1:C043 00 -  -  -  	.db 0
  424 D1:C044 -  -  -  -  sine_8_15_4: ;freqMult, amplitude, phase 
  425 D1:C044 00 -  -  -  	.db 0 
  426 D1:C045 -  -  -  -  sine_8_7_4: ;freqMult, amplitude, phase 
  427 D1:C045 00 -  -  -  	.db 0 
  428 D1:C046 -  -  -  -  sine_8_3_4: ;freqMult, amplitude, phase 
  429 D1:C046 00 -  -  -  	.db 0 
  430 D1:C047 -  -  -  -  sine_8_1_4: ;freqMult, amplitude, phase 
  431 D1:C047 00 -  -  -  	.db 0 
  432 D1:C048 -  -  -  -  
  433 D1:C048 -  -  -  -  
  434 D1:C048 -  -  -  -  
  435 D1:C048 -  -  -  -  
  436 D1:C048 -  -  -  -  lin_05_1:
  437 D1:C048 -  -  -  -  lin_05_31_1:
  438 D1:C048 00 -  -  -  	.db 0 
  439 D1:C049 -  -  -  -  lin_05_15_1:
  440 D1:C049 00 -  -  -  	.db 0 
  441 D1:C04A -  -  -  -  lin_05_7_1:
  442 D1:C04A 00 -  -  -  	.db 0 
  443 D1:C04B -  -  -  -  lin_05_3_1:
  444 D1:C04B 00 -  -  -  	.db 0 
  445 D1:C04C -  -  -  -  lin_05_1_1:
  446 D1:C04C 00 -  -  -  	.db 0 
  447 D1:C04D -  -  -  -  
  448 D1:C04D -  -  -  -  lin_05_2:
  449 D1:C04D -  -  -  -  lin_05_31_2:
  450 D1:C04D 00 -  -  -  	.db 0 
  451 D1:C04E -  -  -  -  lin_05_15_2:
  452 D1:C04E 00 -  -  -  	.db 0 
  453 D1:C04F -  -  -  -  lin_05_7_2:
  454 D1:C04F 00 -  -  -  	.db 0 
  455 D1:C050 -  -  -  -  lin_05_3_2:
  456 D1:C050 00 -  -  -  	.db 0 
  457 D1:C051 -  -  -  -  lin_05_1_2:
  458 D1:C051 00 -  -  -  	.db 0 	
  459 D1:C052 -  -  -  -  	
  460 D1:C052 -  -  -  -  lin_05_3:
  461 D1:C052 -  -  -  -  lin_05_31_3:
  462 D1:C052 00 -  -  -  	.db 0 
  463 D1:C053 -  -  -  -  lin_05_15_3:
  464 D1:C053 00 -  -  -  	.db 0 
  465 D1:C054 -  -  -  -  lin_05_7_3:
  466 D1:C054 00 -  -  -  	.db 0 
  467 D1:C055 -  -  -  -  lin_05_3_3:
  468 D1:C055 00 -  -  -  	.db 0 
  469 D1:C056 -  -  -  -  lin_05_1_3:
  470 D1:C056 00 -  -  -  	.db 0 	
  471 D1:C057 -  -  -  -  	
  472 D1:C057 -  -  -  -  lin_05_4:
  473 D1:C057 -  -  -  -  lin_05_31_4:
  474 D1:C057 00 -  -  -  	.db 0 
  475 D1:C058 -  -  -  -  lin_05_15_4:
  476 D1:C058 00 -  -  -  	.db 0 
  477 D1:C059 -  -  -  -  lin_05_7_4:
  478 D1:C059 00 -  -  -  	.db 0 
  479 D1:C05A -  -  -  -  lin_05_3_4:
  480 D1:C05A 00 -  -  -  	.db 0 
  481 D1:C05B -  -  -  -  lin_05_1_4:
  482 D1:C05B 00 -  -  -  	.db 0 
  483 D1:C05C -  -  -  -  
  484 D1:C05C -  -  -  -  lin_1_1:
  485 D1:C05C -  -  -  -  lin_1_31_1:
  486 D1:C05C 00 -  -  -  	.db 0 
  487 D1:C05D -  -  -  -  lin_1_15_1:
  488 D1:C05D 00 -  -  -  	.db 0 
  489 D1:C05E -  -  -  -  lin_1_7_1:
  490 D1:C05E 00 -  -  -  	.db 0 
  491 D1:C05F -  -  -  -  lin_1_3_1:
  492 D1:C05F 00 -  -  -  	.db 0
  493 D1:C060 -  -  -  -  lin_1_1_1:
  494 D1:C060 00 -  -  -  	.db 0 	
  495 D1:C061 -  -  -  -  
  496 D1:C061 -  -  -  -  lin_1_2:
  497 D1:C061 -  -  -  -  lin_1_31_2:
  498 D1:C061 00 -  -  -  	.db 0 
  499 D1:C062 -  -  -  -  lin_1_15_2:
  500 D1:C062 00 -  -  -  	.db 0 
  501 D1:C063 -  -  -  -  lin_1_7_2:
  502 D1:C063 00 -  -  -  	.db 0 
  503 D1:C064 -  -  -  -  lin_1_3_2:
  504 D1:C064 00 -  -  -  	.db 0 
  505 D1:C065 -  -  -  -  lin_1_1_2:
  506 D1:C065 00 -  -  -  	.db 0 
  507 D1:C066 -  -  -  -  	
  508 D1:C066 -  -  -  -  lin_1_3:
  509 D1:C066 -  -  -  -  lin_1_31_3:
  510 D1:C066 00 -  -  -  	.db 0 
  511 D1:C067 -  -  -  -  lin_1_15_3:
  512 D1:C067 00 -  -  -  	.db 0 
  513 D1:C068 -  -  -  -  lin_1_7_3:
  514 D1:C068 00 -  -  -  	.db 0 
  515 D1:C069 -  -  -  -  lin_1_3_3:
  516 D1:C069 00 -  -  -  	.db 0 
  517 D1:C06A -  -  -  -  lin_1_1_3:
  518 D1:C06A 00 -  -  -  	.db 0 
  519 D1:C06B -  -  -  -  	
  520 D1:C06B -  -  -  -  lin_1_4:
  521 D1:C06B -  -  -  -  lin_1_31_4:
  522 D1:C06B 00 -  -  -  	.db 0 
  523 D1:C06C -  -  -  -  lin_1_15_4:
  524 D1:C06C 00 -  -  -  	.db 0 
  525 D1:C06D -  -  -  -  lin_1_7_4:
  526 D1:C06D 00 -  -  -  	.db 0 
  527 D1:C06E -  -  -  -  lin_1_3_4:
  528 D1:C06E 00 -  -  -  	.db 0 
  529 D1:C06F -  -  -  -  lin_1_1_4:
  530 D1:C06F 00 -  -  -  	.db 0 
  531 D1:C070 -  -  -  -  	
  532 D1:C070 -  -  -  -  lin_2_1:
  533 D1:C070 -  -  -  -  lin_2_31_1:
  534 D1:C070 00 -  -  -  	.db 0 
  535 D1:C071 -  -  -  -  lin_2_15_1:
  536 D1:C071 00 -  -  -  	.db 0 
  537 D1:C072 -  -  -  -  lin_2_7_1:
  538 D1:C072 00 -  -  -  	.db 0 
  539 D1:C073 -  -  -  -  lin_2_3_1:
  540 D1:C073 00 -  -  -  	.db 0 
  541 D1:C074 -  -  -  -  lin_2_1_1:
  542 D1:C074 00 -  -  -  	.db 0
  543 D1:C075 -  -  -  -  
  544 D1:C075 -  -  -  -  lin_2_2:
  545 D1:C075 -  -  -  -  lin_2_31_2:
  546 D1:C075 00 -  -  -  	.db 0 
  547 D1:C076 -  -  -  -  lin_2_15_2:
  548 D1:C076 00 -  -  -  	.db 0 
  549 D1:C077 -  -  -  -  lin_2_7_2:
  550 D1:C077 00 -  -  -  	.db 0 
  551 D1:C078 -  -  -  -  lin_2_3_2:
  552 D1:C078 00 -  -  -  	.db 0 
  553 D1:C079 -  -  -  -  lin_2_1_2:
  554 D1:C079 00 -  -  -  	.db 0 
  555 D1:C07A -  -  -  -  	
  556 D1:C07A -  -  -  -  lin_2_3:
  557 D1:C07A -  -  -  -  lin_2_31_3:
  558 D1:C07A 00 -  -  -  	.db 0 
  559 D1:C07B -  -  -  -  lin_2_15_3:
  560 D1:C07B 00 -  -  -  	.db 0 
  561 D1:C07C -  -  -  -  lin_2_7_3:
  562 D1:C07C 00 -  -  -  	.db 0 
  563 D1:C07D -  -  -  -  lin_2_3_3:
  564 D1:C07D 00 -  -  -  	.db 0 
  565 D1:C07E -  -  -  -  lin_2_1_3:
  566 D1:C07E 00 -  -  -  	.db 0 
  567 D1:C07F -  -  -  -  	
  568 D1:C07F -  -  -  -  lin_2_4:
  569 D1:C07F -  -  -  -  lin_2_31_4:
  570 D1:C07F 00 -  -  -  	.db 0 
  571 D1:C080 -  -  -  -  lin_2_15_4:
  572 D1:C080 00 -  -  -  	.db 0 
  573 D1:C081 -  -  -  -  lin_2_7_4:
  574 D1:C081 00 -  -  -  	.db 0 
  575 D1:C082 -  -  -  -  lin_2_3_4:
  576 D1:C082 00 -  -  -  	.db 0 
  577 D1:C083 -  -  -  -  lin_2_1_4:
  578 D1:C083 00 -  -  -  	.db 0 
  579 D1:C084 -  -  -  -  	
  580 D1:C084 -  -  -  -  lin_4_1:
  581 D1:C084 -  -  -  -  lin_4_31_1:
  582 D1:C084 00 -  -  -  	.db 0 
  583 D1:C085 -  -  -  -  lin_4_15_1:
  584 D1:C085 00 -  -  -  	.db 0 
  585 D1:C086 -  -  -  -  lin_4_7_1:
  586 D1:C086 00 -  -  -  	.db 0 
  587 D1:C087 -  -  -  -  lin_4_3_1:
  588 D1:C087 00 -  -  -  	.db 0 
  589 D1:C088 -  -  -  -  lin_4_1_1:
  590 D1:C088 00 -  -  -  	.db 0 
  591 D1:C089 -  -  -  -  
  592 D1:C089 -  -  -  -  
  593 D1:C089 -  -  -  -  lin_4_2:
  594 D1:C089 -  -  -  -  lin_4_31_2:
  595 D1:C089 00 -  -  -  	.db 0 
  596 D1:C08A -  -  -  -  lin_4_15_2:
  597 D1:C08A 00 -  -  -  	.db 0 
  598 D1:C08B -  -  -  -  lin_4_7_2:
  599 D1:C08B 00 -  -  -  	.db 0 
  600 D1:C08C -  -  -  -  lin_4_3_2:
  601 D1:C08C 00 -  -  -  	.db 0 
  602 D1:C08D -  -  -  -  lin_4_1_2:
  603 D1:C08D 00 -  -  -  	.db 0 
  604 D1:C08E -  -  -  -  	
  605 D1:C08E -  -  -  -  lin_4_3:
  606 D1:C08E -  -  -  -  lin_4_31_3:
  607 D1:C08E 00 -  -  -  	.db 0 
  608 D1:C08F -  -  -  -  lin_4_15_3:
  609 D1:C08F 00 -  -  -  	.db 0 
  610 D1:C090 -  -  -  -  lin_4_7_3:
  611 D1:C090 00 -  -  -  	.db 0 
  612 D1:C091 -  -  -  -  lin_4_3_3:
  613 D1:C091 00 -  -  -  	.db 0 
  614 D1:C092 -  -  -  -  lin_4_1_3:
  615 D1:C092 00 -  -  -  	.db 0 
  616 D1:C093 -  -  -  -  	
  617 D1:C093 -  -  -  -  lin_4_4:
  618 D1:C093 -  -  -  -  lin_4_31_4:
  619 D1:C093 00 -  -  -  	.db 0 
  620 D1:C094 -  -  -  -  lin_4_15_4:
  621 D1:C094 00 -  -  -  	.db 0 
  622 D1:C095 -  -  -  -  lin_4_7_4:
  623 D1:C095 00 -  -  -  	.db 0 
  624 D1:C096 -  -  -  -  lin_4_3_4:
  625 D1:C096 00 -  -  -  	.db 0 
  626 D1:C097 -  -  -  -  lin_4_1_4:
  627 D1:C097 00 -  -  -  	.db 0 
  628 D1:C098 -  -  -  -  	
  629 D1:C098 -  -  -  -  	
  630 D1:C098 -  -  -  -  lin_8_1:
  631 D1:C098 -  -  -  -  lin_8_31_1:
  632 D1:C098 00 -  -  -  	.db 0 
  633 D1:C099 -  -  -  -  lin_8_15_1:
  634 D1:C099 00 -  -  -  	.db 0 
  635 D1:C09A -  -  -  -  lin_8_7_1:
  636 D1:C09A 00 -  -  -  	.db 0 
  637 D1:C09B -  -  -  -  lin_8_3_1:
  638 D1:C09B 00 -  -  -  	.db 0 
  639 D1:C09C -  -  -  -  lin_8_1_1:
  640 D1:C09C 00 -  -  -  	.db 0 
  641 D1:C09D -  -  -  -  
  642 D1:C09D -  -  -  -  lin_8_2:
  643 D1:C09D -  -  -  -  lin_8_31_2:
  644 D1:C09D 00 -  -  -  	.db 0 
  645 D1:C09E -  -  -  -  lin_8_15_2:
  646 D1:C09E 00 -  -  -  	.db 0 
  647 D1:C09F -  -  -  -  lin_8_7_2:
  648 D1:C09F 00 -  -  -  	.db 0 
  649 D1:C0A0 -  -  -  -  lin_8_3_2:
  650 D1:C0A0 00 -  -  -  	.db 0 
  651 D1:C0A1 -  -  -  -  lin_8_1_2:
  652 D1:C0A1 00 -  -  -  	.db 0 
  653 D1:C0A2 -  -  -  -  	
  654 D1:C0A2 -  -  -  -  lin_8_3:
  655 D1:C0A2 -  -  -  -  lin_8_31_3:
  656 D1:C0A2 00 -  -  -  	.db 0 
  657 D1:C0A3 -  -  -  -  lin_8_15_3:
  658 D1:C0A3 00 -  -  -  	.db 0 
  659 D1:C0A4 -  -  -  -  lin_8_7_3:
  660 D1:C0A4 00 -  -  -  	.db 0 
  661 D1:C0A5 -  -  -  -  lin_8_3_3:
  662 D1:C0A5 00 -  -  -  	.db 0 
  663 D1:C0A6 -  -  -  -  lin_8_1_3:
  664 D1:C0A6 00 -  -  -  	.db 0 
  665 D1:C0A7 -  -  -  -  	
  666 D1:C0A7 -  -  -  -  lin_8_4:
  667 D1:C0A7 -  -  -  -  lin_8_31_4:
  668 D1:C0A7 00 -  -  -  	.db 0 
  669 D1:C0A8 -  -  -  -  lin_8_15_4:
  670 D1:C0A8 00 -  -  -  	.db 0 
  671 D1:C0A9 -  -  -  -  lin_8_7_4:
  672 D1:C0A9 00 -  -  -  	.db 0 
  673 D1:C0AA -  -  -  -  lin_8_3_4:
  674 D1:C0AA 00 -  -  -  	.db 0 
  675 D1:C0AB -  -  -  -  lin_8_1_4:
  676 D1:C0AB 00 -  -  -  	.db 0 
  677 D1:C0AC -  -  -  -  
  678 D1:C0AC -  -  -  -  
  679 D1:C0AC -  -  -  -  
  680 D1:C0AC -  -  -  -  
  681 D1:C0AC -  -  -  -  
  682 D1:C0AC -  -  -  -  linrep_05_1:
  683 D1:C0AC -  -  -  -  linrep_05_31_1:
  684 D1:C0AC 00 -  -  -  	.db 0 
  685 D1:C0AD -  -  -  -  linrep_05_15_1:
  686 D1:C0AD 00 -  -  -  	.db 0 
  687 D1:C0AE -  -  -  -  linrep_05_7_1:
  688 D1:C0AE 00 -  -  -  	.db 0 
  689 D1:C0AF -  -  -  -  linrep_05_3_1:
  690 D1:C0AF 00 -  -  -  	.db 0 
  691 D1:C0B0 -  -  -  -  linrep_05_1_1:
  692 D1:C0B0 00 -  -  -  	.db 0 
  693 D1:C0B1 -  -  -  -  
  694 D1:C0B1 -  -  -  -  linrep_05_2:
  695 D1:C0B1 -  -  -  -  linrep_05_31_2:
  696 D1:C0B1 00 -  -  -  	.db 0 
  697 D1:C0B2 -  -  -  -  linrep_05_15_2:
  698 D1:C0B2 00 -  -  -  	.db 0 
  699 D1:C0B3 -  -  -  -  linrep_05_7_2:
  700 D1:C0B3 00 -  -  -  	.db 0 
  701 D1:C0B4 -  -  -  -  linrep_05_3_2:
  702 D1:C0B4 00 -  -  -  	.db 0 
  703 D1:C0B5 -  -  -  -  linrep_05_1_2:
  704 D1:C0B5 00 -  -  -  	.db 0 	
  705 D1:C0B6 -  -  -  -  	
  706 D1:C0B6 -  -  -  -  linrep_05_3:
  707 D1:C0B6 -  -  -  -  linrep_05_31_3:
  708 D1:C0B6 00 -  -  -  	.db 0 
  709 D1:C0B7 -  -  -  -  linrep_05_15_3:
  710 D1:C0B7 00 -  -  -  	.db 0 
  711 D1:C0B8 -  -  -  -  linrep_05_7_3:
  712 D1:C0B8 00 -  -  -  	.db 0 
  713 D1:C0B9 -  -  -  -  linrep_05_3_3:
  714 D1:C0B9 00 -  -  -  	.db 0 
  715 D1:C0BA -  -  -  -  linrep_05_1_3:
  716 D1:C0BA 00 -  -  -  	.db 0 	
  717 D1:C0BB -  -  -  -  	
  718 D1:C0BB -  -  -  -  linrep_05_4:
  719 D1:C0BB -  -  -  -  linrep_05_31_4:
  720 D1:C0BB 00 -  -  -  	.db 0 
  721 D1:C0BC -  -  -  -  linrep_05_15_4:
  722 D1:C0BC 00 -  -  -  	.db 0 
  723 D1:C0BD -  -  -  -  linrep_05_7_4:
  724 D1:C0BD 00 -  -  -  	.db 0 
  725 D1:C0BE -  -  -  -  linrep_05_3_4:
  726 D1:C0BE 00 -  -  -  	.db 0 
  727 D1:C0BF -  -  -  -  linrep_05_1_4:
  728 D1:C0BF 00 -  -  -  	.db 0 
  729 D1:C0C0 -  -  -  -  
  730 D1:C0C0 -  -  -  -  linrep_1_1:
  731 D1:C0C0 -  -  -  -  linrep_1_31_1:
  732 D1:C0C0 00 -  -  -  	.db 0 
  733 D1:C0C1 -  -  -  -  linrep_1_15_1:
  734 D1:C0C1 00 -  -  -  	.db 0 
  735 D1:C0C2 -  -  -  -  linrep_1_7_1:
  736 D1:C0C2 00 -  -  -  	.db 0 
  737 D1:C0C3 -  -  -  -  linrep_1_3_1:
  738 D1:C0C3 00 -  -  -  	.db 0
  739 D1:C0C4 -  -  -  -  linrep_1_1_1:
  740 D1:C0C4 00 -  -  -  	.db 0 	
  741 D1:C0C5 -  -  -  -  
  742 D1:C0C5 -  -  -  -  linrep_1_2:
  743 D1:C0C5 -  -  -  -  linrep_1_31_2:
  744 D1:C0C5 00 -  -  -  	.db 0 
  745 D1:C0C6 -  -  -  -  linrep_1_15_2:
  746 D1:C0C6 00 -  -  -  	.db 0 
  747 D1:C0C7 -  -  -  -  linrep_1_7_2:
  748 D1:C0C7 00 -  -  -  	.db 0 
  749 D1:C0C8 -  -  -  -  linrep_1_3_2:
  750 D1:C0C8 00 -  -  -  	.db 0 
  751 D1:C0C9 -  -  -  -  linrep_1_1_2:
  752 D1:C0C9 00 -  -  -  	.db 0 
  753 D1:C0CA -  -  -  -  	
  754 D1:C0CA -  -  -  -  linrep_1_3:
  755 D1:C0CA -  -  -  -  linrep_1_31_3:
  756 D1:C0CA 00 -  -  -  	.db 0 
  757 D1:C0CB -  -  -  -  linrep_1_15_3:
  758 D1:C0CB 00 -  -  -  	.db 0 
  759 D1:C0CC -  -  -  -  linrep_1_7_3:
  760 D1:C0CC 00 -  -  -  	.db 0 
  761 D1:C0CD -  -  -  -  linrep_1_3_3:
  762 D1:C0CD 00 -  -  -  	.db 0 
  763 D1:C0CE -  -  -  -  linrep_1_1_3:
  764 D1:C0CE 00 -  -  -  	.db 0 
  765 D1:C0CF -  -  -  -  	
  766 D1:C0CF -  -  -  -  linrep_1_4:
  767 D1:C0CF -  -  -  -  linrep_1_31_4:
  768 D1:C0CF 00 -  -  -  	.db 0 
  769 D1:C0D0 -  -  -  -  linrep_1_15_4:
  770 D1:C0D0 00 -  -  -  	.db 0 
  771 D1:C0D1 -  -  -  -  linrep_1_7_4:
  772 D1:C0D1 00 -  -  -  	.db 0 
  773 D1:C0D2 -  -  -  -  linrep_1_3_4:
  774 D1:C0D2 00 -  -  -  	.db 0 
  775 D1:C0D3 -  -  -  -  linrep_1_1_4:
  776 D1:C0D3 00 -  -  -  	.db 0 
  777 D1:C0D4 -  -  -  -  	
  778 D1:C0D4 -  -  -  -  linrep_2_1:
  779 D1:C0D4 -  -  -  -  linrep_2_31_1:
  780 D1:C0D4 00 -  -  -  	.db 0 
  781 D1:C0D5 -  -  -  -  linrep_2_15_1:
  782 D1:C0D5 00 -  -  -  	.db 0 
  783 D1:C0D6 -  -  -  -  linrep_2_7_1:
  784 D1:C0D6 00 -  -  -  	.db 0 
  785 D1:C0D7 -  -  -  -  linrep_2_3_1:
  786 D1:C0D7 00 -  -  -  	.db 0 
  787 D1:C0D8 -  -  -  -  linrep_2_1_1:
  788 D1:C0D8 00 -  -  -  	.db 0
  789 D1:C0D9 -  -  -  -  
  790 D1:C0D9 -  -  -  -  linrep_2_2:
  791 D1:C0D9 -  -  -  -  linrep_2_31_2:
  792 D1:C0D9 00 -  -  -  	.db 0 
  793 D1:C0DA -  -  -  -  linrep_2_15_2:
  794 D1:C0DA 00 -  -  -  	.db 0 
  795 D1:C0DB -  -  -  -  linrep_2_7_2:
  796 D1:C0DB 00 -  -  -  	.db 0 
  797 D1:C0DC -  -  -  -  linrep_2_3_2:
  798 D1:C0DC 00 -  -  -  	.db 0 
  799 D1:C0DD -  -  -  -  linrep_2_1_2:
  800 D1:C0DD 00 -  -  -  	.db 0 
  801 D1:C0DE -  -  -  -  	
  802 D1:C0DE -  -  -  -  linrep_2_3:
  803 D1:C0DE -  -  -  -  linrep_2_31_3:
  804 D1:C0DE 00 -  -  -  	.db 0 
  805 D1:C0DF -  -  -  -  linrep_2_15_3:
  806 D1:C0DF 00 -  -  -  	.db 0 
  807 D1:C0E0 -  -  -  -  linrep_2_7_3:
  808 D1:C0E0 00 -  -  -  	.db 0 
  809 D1:C0E1 -  -  -  -  linrep_2_3_3:
  810 D1:C0E1 00 -  -  -  	.db 0 
  811 D1:C0E2 -  -  -  -  linrep_2_1_3:
  812 D1:C0E2 00 -  -  -  	.db 0 
  813 D1:C0E3 -  -  -  -  	
  814 D1:C0E3 -  -  -  -  linrep_2_4:
  815 D1:C0E3 -  -  -  -  linrep_2_31_4:
  816 D1:C0E3 00 -  -  -  	.db 0 
  817 D1:C0E4 -  -  -  -  linrep_2_15_4:
  818 D1:C0E4 00 -  -  -  	.db 0 
  819 D1:C0E5 -  -  -  -  linrep_2_7_4:
  820 D1:C0E5 00 -  -  -  	.db 0 
  821 D1:C0E6 -  -  -  -  linrep_2_3_4:
  822 D1:C0E6 00 -  -  -  	.db 0 
  823 D1:C0E7 -  -  -  -  linrep_2_1_4:
  824 D1:C0E7 00 -  -  -  	.db 0 
  825 D1:C0E8 -  -  -  -  	
  826 D1:C0E8 -  -  -  -  linrep_4_1:
  827 D1:C0E8 -  -  -  -  linrep_4_31_1:
  828 D1:C0E8 00 -  -  -  	.db 0 
  829 D1:C0E9 -  -  -  -  linrep_4_15_1:
  830 D1:C0E9 00 -  -  -  	.db 0 
  831 D1:C0EA -  -  -  -  linrep_4_7_1:
  832 D1:C0EA 00 -  -  -  	.db 0 
  833 D1:C0EB -  -  -  -  linrep_4_3_1:
  834 D1:C0EB 00 -  -  -  	.db 0 
  835 D1:C0EC -  -  -  -  linrep_4_1_1:
  836 D1:C0EC 00 -  -  -  	.db 0 
  837 D1:C0ED -  -  -  -  
  838 D1:C0ED -  -  -  -  
  839 D1:C0ED -  -  -  -  linrep_4_2:
  840 D1:C0ED -  -  -  -  linrep_4_31_2:
  841 D1:C0ED 00 -  -  -  	.db 0 
  842 D1:C0EE -  -  -  -  linrep_4_15_2:
  843 D1:C0EE 00 -  -  -  	.db 0 
  844 D1:C0EF -  -  -  -  linrep_4_7_2:
  845 D1:C0EF 00 -  -  -  	.db 0 
  846 D1:C0F0 -  -  -  -  linrep_4_3_2:
  847 D1:C0F0 00 -  -  -  	.db 0 
  848 D1:C0F1 -  -  -  -  linrep_4_1_2:
  849 D1:C0F1 00 -  -  -  	.db 0 
  850 D1:C0F2 -  -  -  -  	
  851 D1:C0F2 -  -  -  -  linrep_4_3:
  852 D1:C0F2 -  -  -  -  linrep_4_31_3:
  853 D1:C0F2 00 -  -  -  	.db 0 
  854 D1:C0F3 -  -  -  -  linrep_4_15_3:
  855 D1:C0F3 00 -  -  -  	.db 0 
  856 D1:C0F4 -  -  -  -  linrep_4_7_3:
  857 D1:C0F4 00 -  -  -  	.db 0 
  858 D1:C0F5 -  -  -  -  linrep_4_3_3:
  859 D1:C0F5 00 -  -  -  	.db 0 
  860 D1:C0F6 -  -  -  -  linrep_4_1_3:
  861 D1:C0F6 00 -  -  -  	.db 0 
  862 D1:C0F7 -  -  -  -  	
  863 D1:C0F7 -  -  -  -  linrep_4_4:
  864 D1:C0F7 -  -  -  -  linrep_4_31_4:
  865 D1:C0F7 00 -  -  -  	.db 0 
  866 D1:C0F8 -  -  -  -  linrep_4_15_4:
  867 D1:C0F8 00 -  -  -  	.db 0 
  868 D1:C0F9 -  -  -  -  linrep_4_7_4:
  869 D1:C0F9 00 -  -  -  	.db 0 
  870 D1:C0FA -  -  -  -  linrep_4_3_4:
  871 D1:C0FA 00 -  -  -  	.db 0 
  872 D1:C0FB -  -  -  -  linrep_4_1_4:
  873 D1:C0FB 00 -  -  -  	.db 0 
  874 D1:C0FC -  -  -  -  	
  875 D1:C0FC -  -  -  -  	
  876 D1:C0FC -  -  -  -  linrep_8_1:
  877 D1:C0FC -  -  -  -  linrep_8_31_1:
  878 D1:C0FC 00 -  -  -  	.db 0 
  879 D1:C0FD -  -  -  -  linrep_8_15_1:
  880 D1:C0FD 00 -  -  -  	.db 0 
  881 D1:C0FE -  -  -  -  linrep_8_7_1:
  882 D1:C0FE 00 -  -  -  	.db 0 
  883 D1:C0FF -  -  -  -  linrep_8_3_1:
  884 D1:C0FF 00 -  -  -  	.db 0 
  885 D1:C100 -  -  -  -  linrep_8_1_1:
  886 D1:C100 00 -  -  -  	.db 0 
  887 D1:C101 -  -  -  -  
  888 D1:C101 -  -  -  -  linrep_8_2:
  889 D1:C101 -  -  -  -  linrep_8_31_2:
  890 D1:C101 00 -  -  -  	.db 0 
  891 D1:C102 -  -  -  -  linrep_8_15_2:
  892 D1:C102 00 -  -  -  	.db 0 
  893 D1:C103 -  -  -  -  linrep_8_7_2:
  894 D1:C103 00 -  -  -  	.db 0 
  895 D1:C104 -  -  -  -  linrep_8_3_2:
  896 D1:C104 00 -  -  -  	.db 0 
  897 D1:C105 -  -  -  -  linrep_8_1_2:
  898 D1:C105 00 -  -  -  	.db 0 
  899 D1:C106 -  -  -  -  	
  900 D1:C106 -  -  -  -  linrep_8_3:
  901 D1:C106 -  -  -  -  linrep_8_31_3:
  902 D1:C106 00 -  -  -  	.db 0 
  903 D1:C107 -  -  -  -  linrep_8_15_3:
  904 D1:C107 00 -  -  -  	.db 0 
  905 D1:C108 -  -  -  -  linrep_8_7_3:
  906 D1:C108 00 -  -  -  	.db 0 
  907 D1:C109 -  -  -  -  linrep_8_3_3:
  908 D1:C109 00 -  -  -  	.db 0 
  909 D1:C10A -  -  -  -  linrep_8_1_3:
  910 D1:C10A 00 -  -  -  	.db 0 
  911 D1:C10B -  -  -  -  	
  912 D1:C10B -  -  -  -  linrep_8_4:
  913 D1:C10B -  -  -  -  linrep_8_31_4:
  914 D1:C10B 00 -  -  -  	.db 0 
  915 D1:C10C -  -  -  -  linrep_8_15_4:
  916 D1:C10C 00 -  -  -  	.db 0 
  917 D1:C10D -  -  -  -  linrep_8_7_4:
  918 D1:C10D 00 -  -  -  	.db 0 
  919 D1:C10E -  -  -  -  linrep_8_3_4:
  920 D1:C10E 00 -  -  -  	.db 0 
  921 D1:C10F -  -  -  -  linrep_8_1_4:
  922 D1:C10F 00 -  -  -  	.db 0 
  923 D1:C110 -  -  -  -  	
  924 D1:C110 -  -  -  -  	
  925 D1:C110 -  -  -  -  	
  926 D1:C110 -  -  -  -  
  927 D1:C110 -  -  -  -  
  928 D1:C110 -  -  -  -  sine:
  929 D1:C110 80 -  -  -  	.db 128
  930 D1:C111 83 -  -  -  	.db 131
  931 D1:C112 86 -  -  -  	.db 134
  932 D1:C113 89 -  -  -  	.db 137
  933 D1:C114 8C -  -  -  	.db 140
  934 D1:C115 8F -  -  -  	.db 143
  935 D1:C116 92 -  -  -  	.db 146
  936 D1:C117 95 -  -  -  	.db 149
  937 D1:C118 98 -  -  -  	.db 152
  938 D1:C119 9C -  -  -  	.db 156
  939 D1:C11A 9F -  -  -  	.db 159
  940 D1:C11B A2 -  -  -  	.db 162
  941 D1:C11C A5 -  -  -  	.db 165
  942 D1:C11D A8 -  -  -  	.db 168
  943 D1:C11E AB -  -  -  	.db 171
  944 D1:C11F AE -  -  -  	.db 174
  945 D1:C120 B0 -  -  -  	.db 176
  946 D1:C121 B3 -  -  -  	.db 179
  947 D1:C122 B6 -  -  -  	.db 182
  948 D1:C123 B9 -  -  -  	.db 185
  949 D1:C124 BC -  -  -  	.db 188
  950 D1:C125 BF -  -  -  	.db 191
  951 D1:C126 C1 -  -  -  	.db 193
  952 D1:C127 C4 -  -  -  	.db 196
  953 D1:C128 C7 -  -  -  	.db 199
  954 D1:C129 C9 -  -  -  	.db 201
  955 D1:C12A CC -  -  -  	.db 204
  956 D1:C12B CE -  -  -  	.db 206
  957 D1:C12C D1 -  -  -  	.db 209
  958 D1:C12D D3 -  -  -  	.db 211
  959 D1:C12E D5 -  -  -  	.db 213
  960 D1:C12F D8 -  -  -  	.db 216
  961 D1:C130 DA -  -  -  	.db 218
  962 D1:C131 DC -  -  -  	.db 220
  963 D1:C132 DE -  -  -  	.db 222
  964 D1:C133 E0 -  -  -  	.db 224
  965 D1:C134 E2 -  -  -  	.db 226
  966 D1:C135 E4 -  -  -  	.db 228
  967 D1:C136 E6 -  -  -  	.db 230
  968 D1:C137 E8 -  -  -  	.db 232
  969 D1:C138 EA -  -  -  	.db 234
  970 D1:C139 EB -  -  -  	.db 235
  971 D1:C13A ED -  -  -  	.db 237
  972 D1:C13B EF -  -  -  	.db 239
  973 D1:C13C F0 -  -  -  	.db 240
  974 D1:C13D F2 -  -  -  	.db 242
  975 D1:C13E F3 -  -  -  	.db 243
  976 D1:C13F F4 -  -  -  	.db 244
  977 D1:C140 F6 -  -  -  	.db 246
  978 D1:C141 F7 -  -  -  	.db 247
  979 D1:C142 F8 -  -  -  	.db 248
  980 D1:C143 F9 -  -  -  	.db 249
  981 D1:C144 FA -  -  -  	.db 250
  982 D1:C145 FB -  -  -  	.db 251
  983 D1:C146 FB -  -  -  	.db 251
  984 D1:C147 FC -  -  -  	.db 252
  985 D1:C148 FD -  -  -  	.db 253
  986 D1:C149 FD -  -  -  	.db 253
  987 D1:C14A FE -  -  -  	.db 254
  988 D1:C14B FE -  -  -  	.db 254
  989 D1:C14C FE -  -  -  	.db 254
  990 D1:C14D FF -  -  -  	.db 255
  991 D1:C14E FF -  -  -  	.db 255
  992 D1:C14F FF -  -  -  	.db 255
  993 D1:C150 FF -  -  -  	.db 255
  994 D1:C151 FF -  -  -  	.db 255
  995 D1:C152 FF -  -  -  	.db 255
  996 D1:C153 FF -  -  -  	.db 255
  997 D1:C154 FE -  -  -  	.db 254
  998 D1:C155 FE -  -  -  	.db 254
  999 D1:C156 FD -  -  -  	.db 253
 1000 D1:C157 FD -  -  -  	.db 253
 1001 D1:C158 FC -  -  -  	.db 252
 1002 D1:C159 FC -  -  -  	.db 252
 1003 D1:C15A FB -  -  -  	.db 251
 1004 D1:C15B FA -  -  -  	.db 250
 1005 D1:C15C F9 -  -  -  	.db 249
 1006 D1:C15D F8 -  -  -  	.db 248
 1007 D1:C15E F7 -  -  -  	.db 247
 1008 D1:C15F F6 -  -  -  	.db 246
 1009 D1:C160 F5 -  -  -  	.db 245
 1010 D1:C161 F4 -  -  -  	.db 244
 1011 D1:C162 F2 -  -  -  	.db 242
 1012 D1:C163 F1 -  -  -  	.db 241
 1013 D1:C164 EF -  -  -  	.db 239
 1014 D1:C165 EE -  -  -  	.db 238
 1015 D1:C166 EC -  -  -  	.db 236
 1016 D1:C167 EB -  -  -  	.db 235
 1017 D1:C168 E9 -  -  -  	.db 233
 1018 D1:C169 E7 -  -  -  	.db 231
 1019 D1:C16A E5 -  -  -  	.db 229
 1020 D1:C16B E3 -  -  -  	.db 227
 1021 D1:C16C E1 -  -  -  	.db 225
 1022 D1:C16D DF -  -  -  	.db 223
 1023 D1:C16E DD -  -  -  	.db 221
 1024 D1:C16F DB -  -  -  	.db 219
 1025 D1:C170 D9 -  -  -  	.db 217
 1026 D1:C171 D7 -  -  -  	.db 215
 1027 D1:C172 D4 -  -  -  	.db 212
 1028 D1:C173 D2 -  -  -  	.db 210
 1029 D1:C174 CF -  -  -  	.db 207
 1030 D1:C175 CD -  -  -  	.db 205
 1031 D1:C176 CA -  -  -  	.db 202
 1032 D1:C177 C8 -  -  -  	.db 200
 1033 D1:C178 C5 -  -  -  	.db 197
 1034 D1:C179 C3 -  -  -  	.db 195
 1035 D1:C17A C0 -  -  -  	.db 192
 1036 D1:C17B BD -  -  -  	.db 189
 1037 D1:C17C BA -  -  -  	.db 186
 1038 D1:C17D B8 -  -  -  	.db 184
 1039 D1:C17E B5 -  -  -  	.db 181
 1040 D1:C17F B2 -  -  -  	.db 178
 1041 D1:C180 AF -  -  -  	.db 175
 1042 D1:C181 AC -  -  -  	.db 172
 1043 D1:C182 A9 -  -  -  	.db 169
 1044 D1:C183 A6 -  -  -  	.db 166
 1045 D1:C184 A3 -  -  -  	.db 163
 1046 D1:C185 A0 -  -  -  	.db 160
 1047 D1:C186 9D -  -  -  	.db 157
 1048 D1:C187 9A -  -  -  	.db 154
 1049 D1:C188 97 -  -  -  	.db 151
 1050 D1:C189 94 -  -  -  	.db 148
 1051 D1:C18A 91 -  -  -  	.db 145
 1052 D1:C18B 8E -  -  -  	.db 142
 1053 D1:C18C 8A -  -  -  	.db 138
 1054 D1:C18D 87 -  -  -  	.db 135
 1055 D1:C18E 84 -  -  -  	.db 132
 1056 D1:C18F 81 -  -  -  	.db 129
 1057 D1:C190 7E -  -  -  	.db 126
 1058 D1:C191 7B -  -  -  	.db 123
 1059 D1:C192 78 -  -  -  	.db 120
 1060 D1:C193 75 -  -  -  	.db 117
 1061 D1:C194 71 -  -  -  	.db 113
 1062 D1:C195 6E -  -  -  	.db 110
 1063 D1:C196 6B -  -  -  	.db 107
 1064 D1:C197 68 -  -  -  	.db 104
 1065 D1:C198 65 -  -  -  	.db 101
 1066 D1:C199 62 -  -  -  	.db 98
 1067 D1:C19A 5F -  -  -  	.db 95
 1068 D1:C19B 5C -  -  -  	.db 92
 1069 D1:C19C 59 -  -  -  	.db 89
 1070 D1:C19D 56 -  -  -  	.db 86
 1071 D1:C19E 53 -  -  -  	.db 83
 1072 D1:C19F 50 -  -  -  	.db 80
 1073 D1:C1A0 4D -  -  -  	.db 77
 1074 D1:C1A1 4A -  -  -  	.db 74
 1075 D1:C1A2 47 -  -  -  	.db 71
 1076 D1:C1A3 45 -  -  -  	.db 69
 1077 D1:C1A4 42 -  -  -  	.db 66
 1078 D1:C1A5 3F -  -  -  	.db 63
 1079 D1:C1A6 3C -  -  -  	.db 60
 1080 D1:C1A7 3A -  -  -  	.db 58
 1081 D1:C1A8 37 -  -  -  	.db 55
 1082 D1:C1A9 35 -  -  -  	.db 53
 1083 D1:C1AA 32 -  -  -  	.db 50
 1084 D1:C1AB 30 -  -  -  	.db 48
 1085 D1:C1AC 2D -  -  -  	.db 45
 1086 D1:C1AD 2B -  -  -  	.db 43
 1087 D1:C1AE 28 -  -  -  	.db 40
 1088 D1:C1AF 26 -  -  -  	.db 38
 1089 D1:C1B0 24 -  -  -  	.db 36
 1090 D1:C1B1 22 -  -  -  	.db 34
 1091 D1:C1B2 20 -  -  -  	.db 32
 1092 D1:C1B3 1E -  -  -  	.db 30
 1093 D1:C1B4 1C -  -  -  	.db 28
 1094 D1:C1B5 1A -  -  -  	.db 26
 1095 D1:C1B6 18 -  -  -  	.db 24
 1096 D1:C1B7 16 -  -  -  	.db 22
 1097 D1:C1B8 14 -  -  -  	.db 20
 1098 D1:C1B9 13 -  -  -  	.db 19
 1099 D1:C1BA 11 -  -  -  	.db 17
 1100 D1:C1BB 10 -  -  -  	.db 16
 1101 D1:C1BC 0E -  -  -  	.db 14
 1102 D1:C1BD 0D -  -  -  	.db 13
 1103 D1:C1BE 0B -  -  -  	.db 11
 1104 D1:C1BF 0A -  -  -  	.db 10
 1105 D1:C1C0 09 -  -  -  	.db 9
 1106 D1:C1C1 08 -  -  -  	.db 8
 1107 D1:C1C2 07 -  -  -  	.db 7
 1108 D1:C1C3 06 -  -  -  	.db 6
 1109 D1:C1C4 05 -  -  -  	.db 5
 1110 D1:C1C5 04 -  -  -  	.db 4
 1111 D1:C1C6 03 -  -  -  	.db 3
 1112 D1:C1C7 03 -  -  -  	.db 3
 1113 D1:C1C8 02 -  -  -  	.db 2
 1114 D1:C1C9 02 -  -  -  	.db 2
 1115 D1:C1CA 01 -  -  -  	.db 1
 1116 D1:C1CB 01 -  -  -  	.db 1
 1117 D1:C1CC 00 -  -  -  	.db 0
 1118 D1:C1CD 00 -  -  -  	.db 0
 1119 D1:C1CE 00 -  -  -  	.db 0
 1120 D1:C1CF 00 -  -  -  	.db 0
 1121 D1:C1D0 00 -  -  -  	.db 0
 1122 D1:C1D1 00 -  -  -  	.db 0
 1123 D1:C1D2 00 -  -  -  	.db 0
 1124 D1:C1D3 01 -  -  -  	.db 1
 1125 D1:C1D4 01 -  -  -  	.db 1
 1126 D1:C1D5 01 -  -  -  	.db 1
 1127 D1:C1D6 02 -  -  -  	.db 2
 1128 D1:C1D7 02 -  -  -  	.db 2
 1129 D1:C1D8 03 -  -  -  	.db 3
 1130 D1:C1D9 04 -  -  -  	.db 4
 1131 D1:C1DA 04 -  -  -  	.db 4
 1132 D1:C1DB 05 -  -  -  	.db 5
 1133 D1:C1DC 06 -  -  -  	.db 6
 1134 D1:C1DD 07 -  -  -  	.db 7
 1135 D1:C1DE 08 -  -  -  	.db 8
 1136 D1:C1DF 09 -  -  -  	.db 9
 1137 D1:C1E0 0B -  -  -  	.db 11
 1138 D1:C1E1 0C -  -  -  	.db 12
 1139 D1:C1E2 0D -  -  -  	.db 13
 1140 D1:C1E3 0F -  -  -  	.db 15
 1141 D1:C1E4 10 -  -  -  	.db 16
 1142 D1:C1E5 12 -  -  -  	.db 18
 1143 D1:C1E6 14 -  -  -  	.db 20
 1144 D1:C1E7 15 -  -  -  	.db 21
 1145 D1:C1E8 17 -  -  -  	.db 23
 1146 D1:C1E9 19 -  -  -  	.db 25
 1147 D1:C1EA 1B -  -  -  	.db 27
 1148 D1:C1EB 1D -  -  -  	.db 29
 1149 D1:C1EC 1F -  -  -  	.db 31
 1150 D1:C1ED 21 -  -  -  	.db 33
 1151 D1:C1EE 23 -  -  -  	.db 35
 1152 D1:C1EF 25 -  -  -  	.db 37
 1153 D1:C1F0 27 -  -  -  	.db 39
 1154 D1:C1F1 2A -  -  -  	.db 42
 1155 D1:C1F2 2C -  -  -  	.db 44
 1156 D1:C1F3 2E -  -  -  	.db 46
 1157 D1:C1F4 31 -  -  -  	.db 49
 1158 D1:C1F5 33 -  -  -  	.db 51
 1159 D1:C1F6 36 -  -  -  	.db 54
 1160 D1:C1F7 38 -  -  -  	.db 56
 1161 D1:C1F8 3B -  -  -  	.db 59
 1162 D1:C1F9 3E -  -  -  	.db 62
 1163 D1:C1FA 40 -  -  -  	.db 64
 1164 D1:C1FB 43 -  -  -  	.db 67
 1165 D1:C1FC 46 -  -  -  	.db 70
 1166 D1:C1FD 49 -  -  -  	.db 73
 1167 D1:C1FE 4C -  -  -  	.db 76
 1168 D1:C1FF 4F -  -  -  	.db 79
 1169 D1:C200 51 -  -  -  	.db 81
 1170 D1:C201 54 -  -  -  	.db 84
 1171 D1:C202 57 -  -  -  	.db 87
 1172 D1:C203 5A -  -  -  	.db 90
 1173 D1:C204 5D -  -  -  	.db 93
 1174 D1:C205 60 -  -  -  	.db 96
 1175 D1:C206 63 -  -  -  	.db 99
 1176 D1:C207 67 -  -  -  	.db 103
 1177 D1:C208 6A -  -  -  	.db 106
 1178 D1:C209 6D -  -  -  	.db 109
 1179 D1:C20A 70 -  -  -  	.db 112
 1180 D1:C20B 73 -  -  -  	.db 115
 1181 D1:C20C 76 -  -  -  	.db 118
 1182 D1:C20D 79 -  -  -  	.db 121
 1183 D1:C20E 7C -  -  -  	.db 124
 1184 D1:C20F 7F -  -  -  	.db 127
 1185 D1:C210 -  -  -  -  	
Listing for file "ascent.asm"
  558 D1:C210 -  -  -  -  #include "animations.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\animations.txt"
    1 D1:C210 -  -  -  -   
    2 D1:C210 -  -  -  -  update_animations:
    3 D1:C210 -  -  -  -  	;Will update all animations every frame. Not significant performance impact
    4 D1:C210 -  -  -  -  	
    5 D1:C210 -  -  -  -  	;POSITION
    6 D1:C210 -  -  -  -  	;load hl with data pointer (dataframe or sprite group)
    7 D1:C210 -  -  -  -  	;ld bc with number of bytes to target property
    8 D1:C210 -  -  -  -  	;add hl bc 
    9 D1:C210 -  -  -  -  
   10 D1:C210 -  -  -  -  	;ld a with desired sine freq,phase,and amplitude 
   11 D1:C210 -  -  -  -  	;add a,xx ;Base value
   12 D1:C210 -  -  -  -  	;ld (hl),a
   13 D1:C210 -  -  -  -  
   14 D1:C210 -  -  -  -  	;7 bytes per animated value
   15 D1:C210 08 -  -  -  	ex af, af' ;'
   16 D1:C211 21 96 EB D1 	ld hl,position_animation_data
   17 D1:C215 7E -  -  -  	ld a,(hl)
   18 D1:C216 23 -  -  -  	inc hl
   19 D1:C217 -  -  -  -  update_animation_position_loop:
   20 D1:C217 08 -  -  -  	ex af, af' ;'
   21 D1:C218 ED 17 -  -  	ld de,(hl);load address of property
   22 D1:C21A 23 -  -  -  	inc hl
   23 D1:C21B 23 -  -  -  	inc hl 
   24 D1:C21C 23 -  -  -  	inc hl 
   25 D1:C21D ED 07 -  -  	ld bc,(hl) ;address of anim curve 
   26 D1:C21F 23 -  -  -  	inc hl 
   27 D1:C220 23 -  -  -  	inc hl 
   28 D1:C221 23 -  -  -  	inc hl
   29 D1:C222 0A -  -  -  	ld a,(bc) ;value of anim curve
   30 D1:C223 4E -  -  -  	ld c, (hl) ;base value
   31 D1:C224 23 -  -  -  	inc hl
   32 D1:C225 81 -  -  -  	add a,c
   33 D1:C226 12 -  -  -  	ld (de),a 
   34 D1:C227 08 -  -  -  	ex af, af' ;'
   35 D1:C228 3D -  -  -  	dec a 
   36 D1:C229 C2 17 C2 D1 	jp nz,update_animation_position_loop
   37 D1:C22D -  -  -  -  	
   38 D1:C22D -  -  -  -  	
   39 D1:C22D -  -  -  -  	
   40 D1:C22D 11 00 00 00 	ld de,0 ;clear upper byte 
   41 D1:C231 08 -  -  -  	ex af, af' ;'
   42 D1:C232 21 9E EB D1 	ld hl,sprite_animation_data
   43 D1:C236 7E -  -  -  	ld a,(hl)
   44 D1:C237 23 -  -  -  	inc hl
   45 D1:C238 -  -  -  -  update_animation_sprite_loop:
   46 D1:C238 08 -  -  -  	ex af, af' ;'
   47 D1:C239 ED 07 -  -  	ld bc,(hl) ;animation curve address
   48 D1:C23B 23 -  -  -  	inc hl 
   49 D1:C23C 23 -  -  -  	inc hl
   50 D1:C23D 23 -  -  -  	inc hl
   51 D1:C23E 0A -  -  -  	ld a,(bc) ;anim curve value (btwn 0 and 7)
   52 D1:C23F 5F -  -  -  	ld e,a 
   53 D1:C240 19 -  -  -  	add hl,de ;jump to correct place
   54 D1:C241 ED 44 -  -  	neg ;a holds -curve value
   55 D1:C243 C6 08 -  -  	add a,8; a holds amt to jump to get past sprite table
   56 D1:C245 5F -  -  -  	ld e,a 
   57 D1:C246 7E -  -  -  	ld a,(hl);correct sprite index 
   58 D1:C247 19 -  -  -  	add hl,de ;to address of target property
   59 D1:C248 ED 07 -  -  	ld bc,(hl)
   60 D1:C24A 02 -  -  -  	ld (bc),a 
   61 D1:C24B 23 -  -  -  	inc hl 
   62 D1:C24C 08 -  -  -  	ex af, af' ;'
   63 D1:C24D 3D -  -  -  	dec a 
   64 D1:C24E C2 38 C2 D1 	jp nz,update_animation_sprite_loop
   65 D1:C252 -  -  -  -  	
   66 D1:C252 -  -  -  -  	
   67 D1:C252 -  -  -  -  	;call write_a_to_ram
   68 D1:C252 C9 -  -  -  	ret 
   69 D1:C253 -  -  -  -  	
   70 D1:C253 -  -  -  -  	
   71 D1:C253 -  -  -  -  	
   72 D1:C253 -  -  -  -  	
   73 D1:C253 -  -  -  -  	;SPRITE
   74 D1:C253 -  -  -  -  	;ld hl with base data ptr
   75 D1:C253 -  -  -  -  	;ld bc with number of bytes to target property
   76 D1:C253 -  -  -  -  	
   77 D1:C253 -  -  -  -  
   78 D1:C253 -  -  -  -  ;position_animation_data: ;7 bytes per animation
   79 D1:C253 -  -  -  -  	;.db number of animations
   80 D1:C253 -  -  -  -  	;.dl address of target property
   81 D1:C253 -  -  -  -  	;.dl address of desired animation curve value (could use lookup table to reduce memory)
   82 D1:C253 -  -  -  -  	;.db base value 
   83 D1:C253 -  -  -  -  	;...
   84 D1:C253 -  -  -  -  	;.dl MG_Data_0 + 18 
   85 D1:C253 -  -  -  -  	;.dl lin_05_3_2
   86 D1:C253 -  -  -  -  	;.db 168
   87 D1:C253 -  -  -  -  	
   88 D1:C253 -  -  -  -  	
   89 D1:C253 -  -  -  -  
   90 D1:C253 -  -  -  -  ;sprite_animation_data: ;14 bytes per animation
   91 D1:C253 -  -  -  -  	;.db number of animations
   92 D1:C253 -  -  -  -  	;.dl address of desired animation curve value (could use lookup table to reduce memory)
   93 D1:C253 -  -  -  -  	;.db sprite frame 0 
   94 D1:C253 -  -  -  -  	;.db sprite frame 1
   95 D1:C253 -  -  -  -  	;.db sprite frame 2
   96 D1:C253 -  -  -  -  	;.db sprite frame 3
   97 D1:C253 -  -  -  -  	;.db sprite frame 4
   98 D1:C253 -  -  -  -  	;.db sprite frame 5
   99 D1:C253 -  -  -  -  	;.db sprite frame 6
  100 D1:C253 -  -  -  -  	;.db sprite frame 7
  101 D1:C253 -  -  -  -  	;.dl address of target property
  102 D1:C253 -  -  -  -  	;.dl sine_2_7_1
  103 D1:C253 -  -  -  -  	;.db 70
  104 D1:C253 -  -  -  -  	;.db 71
  105 D1:C253 -  -  -  -  	;.db 72
  106 D1:C253 -  -  -  -  	;.db 73
  107 D1:C253 -  -  -  -  	;.db 74
  108 D1:C253 -  -  -  -  	;.db 71
  109 D1:C253 -  -  -  -  	;.db 70
  110 D1:C253 -  -  -  -  	;.db 71
  111 D1:C253 -  -  -  -  	;.dl SG_TreeRow3 + 5
  112 D1:C253 -  -  -  -  	
  113 D1:C253 -  -  -  -  	
  114 D1:C253 -  -  -  -  	
  115 D1:C253 -  -  -  -  	
  116 D1:C253 -  -  -  -   
  117 D1:C253 -  -  -  -   
  118 D1:C253 -  -  -  -   
Listing for file "ascent.asm"
  559 D1:C253 -  -  -  -  ;#include "levelData.txt"
  560 D1:C253 -  -  -  -  ;#include "FGLevelData.txt"
  561 D1:C253 -  -  -  -  ;#include "testing/TestingCollisionData.txt"
  562 D1:C253 -  -  -  -  
  563 D1:C253 -  -  -  -  #include "generated/BG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\BG_Data.txt"
    1 D1:C253 -  -  -  -  BG_Data_frame_table:
    2 D1:C253 F3 C2 D1 -  	.dl BG_Data_0
    3 D1:C256 E5 C2 D1 -  	.dl BG_Data_1
    4 D1:C259 E3 C2 D1 -  	.dl BG_Data_2
    5 D1:C25C E1 C2 D1 -  	.dl BG_Data_3
    6 D1:C25F DF C2 D1 -  	.dl BG_Data_4
    7 D1:C262 DD C2 D1 -  	.dl BG_Data_5
    8 D1:C265 DB C2 D1 -  	.dl BG_Data_6
    9 D1:C268 D9 C2 D1 -  	.dl BG_Data_7
   10 D1:C26B D7 C2 D1 -  	.dl BG_Data_8
   11 D1:C26E D5 C2 D1 -  	.dl BG_Data_9
   12 D1:C271 D3 C2 D1 -  	.dl BG_Data_10
   13 D1:C274 D1 C2 D1 -  	.dl BG_Data_11
   14 D1:C277 CF C2 D1 -  	.dl BG_Data_12
   15 D1:C27A CD C2 D1 -  	.dl BG_Data_13
   16 D1:C27D CB C2 D1 -  	.dl BG_Data_14
   17 D1:C280 C9 C2 D1 -  	.dl BG_Data_15
   18 D1:C283 C7 C2 D1 -  	.dl BG_Data_16
   19 D1:C286 C5 C2 D1 -  	.dl BG_Data_17
   20 D1:C289 C3 C2 D1 -  	.dl BG_Data_18
   21 D1:C28C C1 C2 D1 -  	.dl BG_Data_19
   22 D1:C28F BF C2 D1 -  	.dl BG_Data_20
   23 D1:C292 BD C2 D1 -  	.dl BG_Data_21
   24 D1:C295 BB C2 D1 -  	.dl BG_Data_22
   25 D1:C298 B9 C2 D1 -  	.dl BG_Data_23
   26 D1:C29B B7 C2 D1 -  	.dl BG_Data_24
   27 D1:C29E B5 C2 D1 -  	.dl BG_Data_25
   28 D1:C2A1 B3 C2 D1 -  	.dl BG_Data_26
   29 D1:C2A4 B1 C2 D1 -  	.dl BG_Data_27
   30 D1:C2A7 AF C2 D1 -  	.dl BG_Data_28
   31 D1:C2AA AD C2 D1 -  	.dl BG_Data_29
   32 D1:C2AD -  -  -  -  
   33 D1:C2AD -  -  -  -  
   34 D1:C2AD -  -  -  -  
   35 D1:C2AD -  -  -  -  BG_Data_29:
   36 D1:C2AD 00 -  -  -  	.db 0
   37 D1:C2AE 00 -  -  -  	.db 0
   38 D1:C2AF -  -  -  -  
   39 D1:C2AF -  -  -  -  BG_Data_28:
   40 D1:C2AF 00 -  -  -  	.db 0
   41 D1:C2B0 00 -  -  -  	.db 0
   42 D1:C2B1 -  -  -  -  
   43 D1:C2B1 -  -  -  -  BG_Data_27:
   44 D1:C2B1 00 -  -  -  	.db 0
   45 D1:C2B2 00 -  -  -  	.db 0
   46 D1:C2B3 -  -  -  -  
   47 D1:C2B3 -  -  -  -  BG_Data_26:
   48 D1:C2B3 00 -  -  -  	.db 0
   49 D1:C2B4 00 -  -  -  	.db 0
   50 D1:C2B5 -  -  -  -  
   51 D1:C2B5 -  -  -  -  BG_Data_25:
   52 D1:C2B5 00 -  -  -  	.db 0
   53 D1:C2B6 00 -  -  -  	.db 0
   54 D1:C2B7 -  -  -  -  
   55 D1:C2B7 -  -  -  -  BG_Data_24:
   56 D1:C2B7 00 -  -  -  	.db 0
   57 D1:C2B8 00 -  -  -  	.db 0
   58 D1:C2B9 -  -  -  -  
   59 D1:C2B9 -  -  -  -  BG_Data_23:
   60 D1:C2B9 00 -  -  -  	.db 0
   61 D1:C2BA 00 -  -  -  	.db 0
   62 D1:C2BB -  -  -  -  
   63 D1:C2BB -  -  -  -  BG_Data_22:
   64 D1:C2BB 00 -  -  -  	.db 0
   65 D1:C2BC 00 -  -  -  	.db 0
   66 D1:C2BD -  -  -  -  
   67 D1:C2BD -  -  -  -  BG_Data_21:
   68 D1:C2BD 00 -  -  -  	.db 0
   69 D1:C2BE 00 -  -  -  	.db 0
   70 D1:C2BF -  -  -  -  
   71 D1:C2BF -  -  -  -  BG_Data_20:
   72 D1:C2BF 00 -  -  -  	.db 0
   73 D1:C2C0 00 -  -  -  	.db 0
   74 D1:C2C1 -  -  -  -  
   75 D1:C2C1 -  -  -  -  BG_Data_19:
   76 D1:C2C1 00 -  -  -  	.db 0
   77 D1:C2C2 00 -  -  -  	.db 0
   78 D1:C2C3 -  -  -  -  
   79 D1:C2C3 -  -  -  -  BG_Data_18:
   80 D1:C2C3 00 -  -  -  	.db 0
   81 D1:C2C4 00 -  -  -  	.db 0
   82 D1:C2C5 -  -  -  -  
   83 D1:C2C5 -  -  -  -  BG_Data_17:
   84 D1:C2C5 00 -  -  -  	.db 0
   85 D1:C2C6 00 -  -  -  	.db 0
   86 D1:C2C7 -  -  -  -  
   87 D1:C2C7 -  -  -  -  BG_Data_16:
   88 D1:C2C7 00 -  -  -  	.db 0
   89 D1:C2C8 00 -  -  -  	.db 0
   90 D1:C2C9 -  -  -  -  
   91 D1:C2C9 -  -  -  -  BG_Data_15:
   92 D1:C2C9 00 -  -  -  	.db 0
   93 D1:C2CA 00 -  -  -  	.db 0
   94 D1:C2CB -  -  -  -  
   95 D1:C2CB -  -  -  -  BG_Data_14:
   96 D1:C2CB 00 -  -  -  	.db 0
   97 D1:C2CC 00 -  -  -  	.db 0
   98 D1:C2CD -  -  -  -  
   99 D1:C2CD -  -  -  -  BG_Data_13:
  100 D1:C2CD 00 -  -  -  	.db 0
  101 D1:C2CE 00 -  -  -  	.db 0
  102 D1:C2CF -  -  -  -  
  103 D1:C2CF -  -  -  -  BG_Data_12:
  104 D1:C2CF 00 -  -  -  	.db 0
  105 D1:C2D0 00 -  -  -  	.db 0
  106 D1:C2D1 -  -  -  -  
  107 D1:C2D1 -  -  -  -  BG_Data_11:
  108 D1:C2D1 00 -  -  -  	.db 0
  109 D1:C2D2 00 -  -  -  	.db 0
  110 D1:C2D3 -  -  -  -  
  111 D1:C2D3 -  -  -  -  BG_Data_10:
  112 D1:C2D3 00 -  -  -  	.db 0
  113 D1:C2D4 00 -  -  -  	.db 0
  114 D1:C2D5 -  -  -  -  
  115 D1:C2D5 -  -  -  -  BG_Data_9:
  116 D1:C2D5 00 -  -  -  	.db 0
  117 D1:C2D6 00 -  -  -  	.db 0
  118 D1:C2D7 -  -  -  -  
  119 D1:C2D7 -  -  -  -  BG_Data_8:
  120 D1:C2D7 00 -  -  -  	.db 0
  121 D1:C2D8 00 -  -  -  	.db 0
  122 D1:C2D9 -  -  -  -  
  123 D1:C2D9 -  -  -  -  BG_Data_7:
  124 D1:C2D9 00 -  -  -  	.db 0
  125 D1:C2DA 00 -  -  -  	.db 0
  126 D1:C2DB -  -  -  -  
  127 D1:C2DB -  -  -  -  BG_Data_6:
  128 D1:C2DB 00 -  -  -  	.db 0
  129 D1:C2DC 00 -  -  -  	.db 0
  130 D1:C2DD -  -  -  -  
  131 D1:C2DD -  -  -  -  BG_Data_5:
  132 D1:C2DD 00 -  -  -  	.db 0
  133 D1:C2DE 00 -  -  -  	.db 0
  134 D1:C2DF -  -  -  -  
  135 D1:C2DF -  -  -  -  BG_Data_4:
  136 D1:C2DF 00 -  -  -  	.db 0
  137 D1:C2E0 00 -  -  -  	.db 0
  138 D1:C2E1 -  -  -  -  
  139 D1:C2E1 -  -  -  -  BG_Data_3:
  140 D1:C2E1 00 -  -  -  	.db 0
  141 D1:C2E2 00 -  -  -  	.db 0
  142 D1:C2E3 -  -  -  -  
  143 D1:C2E3 -  -  -  -  BG_Data_2:
  144 D1:C2E3 00 -  -  -  	.db 0
  145 D1:C2E4 00 -  -  -  	.db 0
  146 D1:C2E5 -  -  -  -  
  147 D1:C2E5 -  -  -  -  BG_Data_1:
  148 D1:C2E5 00 -  -  -  	.db 0
  149 D1:C2E6 03 -  -  -  	.db 3
  150 D1:C2E7 22 FF 7D 20 	.db 34, 255, 125, 32  ;SG_Cloud1
  151 D1:C2EB 70 FF 76 20 	.db 112, 255, 118, 32  ;SG_Cloud1
  152 D1:C2EF A3 FF 15 20 	.db 163, 255, 21, 32  ;SG_Cloud1
  153 D1:C2F3 -  -  -  -  
  154 D1:C2F3 -  -  -  -  BG_Data_0:
  155 D1:C2F3 00 -  -  -  	.db 0
  156 D1:C2F4 23 -  -  -  	.db 35
  157 D1:C2F5 55 FF 00 1D 	.db 85, 255, 0, 29  ;SG_DarkGroundChunk
  158 D1:C2F9 4F FF 88 1D 	.db 79, 255, 136, 29  ;SG_DarkGroundChunk
  159 D1:C2FD 55 FF 18 1D 	.db 85, 255, 24, 29  ;SG_DarkGroundChunk
  160 D1:C301 50 FF 70 1D 	.db 80, 255, 112, 29  ;SG_DarkGroundChunk
  161 D1:C305 81 FF 72 1F 	.db 129, 255, 114, 31  ;SG_BGTree2
  162 D1:C309 81 FF 89 1F 	.db 129, 255, 137, 31  ;SG_BGTree2
  163 D1:C30D 88 FF 16 1F 	.db 136, 255, 22, 31  ;SG_BGTree2
  164 D1:C311 8D FF 0B 1F 	.db 141, 255, 11, 31  ;SG_BGTree2
  165 D1:C315 82 FF 91 1E 	.db 130, 255, 145, 30  ;SG_BGTree1
  166 D1:C319 80 FF 80 1E 	.db 128, 255, 128, 30  ;SG_BGTree1
  167 D1:C31D 7F FF 77 1E 	.db 127, 255, 119, 30  ;SG_BGTree1
  168 D1:C321 81 FF 1F 1E 	.db 129, 255, 31, 30  ;SG_BGTree1
  169 D1:C325 84 FF 01 1E 	.db 132, 255, 1, 30  ;SG_BGTree1
  170 D1:C329 84 FF 7F 1F 	.db 132, 255, 127, 31  ;SG_BGTree2
  171 D1:C32D F2 FF 02 20 	.db 242, 255, 2, 32  ;SG_Cloud1
  172 D1:C331 43 FF 00 0D 	.db 67, 255, 0, 13  ;SG_GroundChunk1
  173 D1:C335 3D FF 70 0D 	.db 61, 255, 112, 13  ;SG_GroundChunk1
  174 D1:C339 3C FF 88 0C 	.db 60, 255, 136, 12  ;SG_GroundChunk2
  175 D1:C33D 41 FF 18 0C 	.db 65, 255, 24, 12  ;SG_GroundChunk2
  176 D1:C341 2D FF 18 0D 	.db 45, 255, 24, 13  ;SG_GroundChunk1
  177 D1:C345 2A FF 00 0C 	.db 42, 255, 0, 12  ;SG_GroundChunk2
  178 D1:C349 26 FF 88 0D 	.db 38, 255, 136, 13  ;SG_GroundChunk1
  179 D1:C34D 26 FF 70 0C 	.db 38, 255, 112, 12  ;SG_GroundChunk2
  180 D1:C351 34 0F 74 90 	.db 52, 15, 116, 144  ;GroundGrassSmall_Fast
  181 D1:C355 38 0F 96 90 	.db 56, 15, 150, 144  ;GroundGrassSmall_Fast
  182 D1:C359 42 0F 0C 90 	.db 66, 15, 12, 144  ;GroundGrassSmall_Fast
  183 D1:C35D 3A 0F 20 91 	.db 58, 15, 32, 145  ;GroundGrassSmall_Fast_F
  184 D1:C361 35 0F 11 91 	.db 53, 15, 17, 145  ;GroundGrassSmall_Fast_F
  185 D1:C365 49 0F 0A 91 	.db 73, 15, 10, 145  ;GroundGrassSmall_Fast_F
  186 D1:C369 46 0F 1A 91 	.db 70, 15, 26, 145  ;GroundGrassSmall_Fast_F
  187 D1:C36D 45 0F 27 91 	.db 69, 15, 39, 145  ;GroundGrassSmall_Fast_F
  188 D1:C371 40 0F 8D 90 	.db 64, 15, 141, 144  ;GroundGrassSmall_Fast
  189 D1:C375 31 0F 84 90 	.db 49, 15, 132, 144  ;GroundGrassSmall_Fast
  190 D1:C379 41 0F 82 90 	.db 65, 15, 130, 144  ;GroundGrassSmall_Fast
  191 D1:C37D 2F 0F 8E 91 	.db 47, 15, 142, 145  ;GroundGrassSmall_Fast_F
  192 D1:C381 -  -  -  -  
  193 D1:C381 -  -  -  -  
  194 D1:C381 -  -  -  -  
Listing for file "ascent.asm"
  564 D1:C381 -  -  -  -  #include "generated/MG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\MG_Data.txt"
    1 D1:C381 -  -  -  -  MG_Data_frame_table:
    2 D1:C381 F1 C5 D1 -  	.dl MG_Data_0
    3 D1:C384 7F C5 D1 -  	.dl MG_Data_1
    4 D1:C387 15 C5 D1 -  	.dl MG_Data_2
    5 D1:C38A A7 C4 D1 -  	.dl MG_Data_3
    6 D1:C38D 4D C4 D1 -  	.dl MG_Data_4
    7 D1:C390 0B C4 D1 -  	.dl MG_Data_5
    8 D1:C393 09 C4 D1 -  	.dl MG_Data_6
    9 D1:C396 07 C4 D1 -  	.dl MG_Data_7
   10 D1:C399 05 C4 D1 -  	.dl MG_Data_8
   11 D1:C39C 03 C4 D1 -  	.dl MG_Data_9
   12 D1:C39F 01 C4 D1 -  	.dl MG_Data_10
   13 D1:C3A2 FF C3 D1 -  	.dl MG_Data_11
   14 D1:C3A5 FD C3 D1 -  	.dl MG_Data_12
   15 D1:C3A8 FB C3 D1 -  	.dl MG_Data_13
   16 D1:C3AB F9 C3 D1 -  	.dl MG_Data_14
   17 D1:C3AE F7 C3 D1 -  	.dl MG_Data_15
   18 D1:C3B1 F5 C3 D1 -  	.dl MG_Data_16
   19 D1:C3B4 F3 C3 D1 -  	.dl MG_Data_17
   20 D1:C3B7 F1 C3 D1 -  	.dl MG_Data_18
   21 D1:C3BA EF C3 D1 -  	.dl MG_Data_19
   22 D1:C3BD ED C3 D1 -  	.dl MG_Data_20
   23 D1:C3C0 EB C3 D1 -  	.dl MG_Data_21
   24 D1:C3C3 E9 C3 D1 -  	.dl MG_Data_22
   25 D1:C3C6 E7 C3 D1 -  	.dl MG_Data_23
   26 D1:C3C9 E5 C3 D1 -  	.dl MG_Data_24
   27 D1:C3CC E3 C3 D1 -  	.dl MG_Data_25
   28 D1:C3CF E1 C3 D1 -  	.dl MG_Data_26
   29 D1:C3D2 DF C3 D1 -  	.dl MG_Data_27
   30 D1:C3D5 DD C3 D1 -  	.dl MG_Data_28
   31 D1:C3D8 DB C3 D1 -  	.dl MG_Data_29
   32 D1:C3DB -  -  -  -  
   33 D1:C3DB -  -  -  -  
   34 D1:C3DB -  -  -  -  
   35 D1:C3DB -  -  -  -  MG_Data_29:
   36 D1:C3DB 00 -  -  -  	.db 0
   37 D1:C3DC 00 -  -  -  	.db 0
   38 D1:C3DD -  -  -  -  
   39 D1:C3DD -  -  -  -  MG_Data_28:
   40 D1:C3DD 00 -  -  -  	.db 0
   41 D1:C3DE 00 -  -  -  	.db 0
   42 D1:C3DF -  -  -  -  
   43 D1:C3DF -  -  -  -  MG_Data_27:
   44 D1:C3DF 00 -  -  -  	.db 0
   45 D1:C3E0 00 -  -  -  	.db 0
   46 D1:C3E1 -  -  -  -  
   47 D1:C3E1 -  -  -  -  MG_Data_26:
   48 D1:C3E1 00 -  -  -  	.db 0
   49 D1:C3E2 00 -  -  -  	.db 0
   50 D1:C3E3 -  -  -  -  
   51 D1:C3E3 -  -  -  -  MG_Data_25:
   52 D1:C3E3 00 -  -  -  	.db 0
   53 D1:C3E4 00 -  -  -  	.db 0
   54 D1:C3E5 -  -  -  -  
   55 D1:C3E5 -  -  -  -  MG_Data_24:
   56 D1:C3E5 00 -  -  -  	.db 0
   57 D1:C3E6 00 -  -  -  	.db 0
   58 D1:C3E7 -  -  -  -  
   59 D1:C3E7 -  -  -  -  MG_Data_23:
   60 D1:C3E7 00 -  -  -  	.db 0
   61 D1:C3E8 00 -  -  -  	.db 0
   62 D1:C3E9 -  -  -  -  
   63 D1:C3E9 -  -  -  -  MG_Data_22:
   64 D1:C3E9 00 -  -  -  	.db 0
   65 D1:C3EA 00 -  -  -  	.db 0
   66 D1:C3EB -  -  -  -  
   67 D1:C3EB -  -  -  -  MG_Data_21:
   68 D1:C3EB 00 -  -  -  	.db 0
   69 D1:C3EC 00 -  -  -  	.db 0
   70 D1:C3ED -  -  -  -  
   71 D1:C3ED -  -  -  -  MG_Data_20:
   72 D1:C3ED 00 -  -  -  	.db 0
   73 D1:C3EE 00 -  -  -  	.db 0
   74 D1:C3EF -  -  -  -  
   75 D1:C3EF -  -  -  -  MG_Data_19:
   76 D1:C3EF 00 -  -  -  	.db 0
   77 D1:C3F0 00 -  -  -  	.db 0
   78 D1:C3F1 -  -  -  -  
   79 D1:C3F1 -  -  -  -  MG_Data_18:
   80 D1:C3F1 00 -  -  -  	.db 0
   81 D1:C3F2 00 -  -  -  	.db 0
   82 D1:C3F3 -  -  -  -  
   83 D1:C3F3 -  -  -  -  MG_Data_17:
   84 D1:C3F3 00 -  -  -  	.db 0
   85 D1:C3F4 00 -  -  -  	.db 0
   86 D1:C3F5 -  -  -  -  
   87 D1:C3F5 -  -  -  -  MG_Data_16:
   88 D1:C3F5 00 -  -  -  	.db 0
   89 D1:C3F6 00 -  -  -  	.db 0
   90 D1:C3F7 -  -  -  -  
   91 D1:C3F7 -  -  -  -  MG_Data_15:
   92 D1:C3F7 00 -  -  -  	.db 0
   93 D1:C3F8 00 -  -  -  	.db 0
   94 D1:C3F9 -  -  -  -  
   95 D1:C3F9 -  -  -  -  MG_Data_14:
   96 D1:C3F9 00 -  -  -  	.db 0
   97 D1:C3FA 00 -  -  -  	.db 0
   98 D1:C3FB -  -  -  -  
   99 D1:C3FB -  -  -  -  MG_Data_13:
  100 D1:C3FB 00 -  -  -  	.db 0
  101 D1:C3FC 00 -  -  -  	.db 0
  102 D1:C3FD -  -  -  -  
  103 D1:C3FD -  -  -  -  MG_Data_12:
  104 D1:C3FD 00 -  -  -  	.db 0
  105 D1:C3FE 00 -  -  -  	.db 0
  106 D1:C3FF -  -  -  -  
  107 D1:C3FF -  -  -  -  MG_Data_11:
  108 D1:C3FF 00 -  -  -  	.db 0
  109 D1:C400 00 -  -  -  	.db 0
  110 D1:C401 -  -  -  -  
  111 D1:C401 -  -  -  -  MG_Data_10:
  112 D1:C401 00 -  -  -  	.db 0
  113 D1:C402 00 -  -  -  	.db 0
  114 D1:C403 -  -  -  -  
  115 D1:C403 -  -  -  -  MG_Data_9:
  116 D1:C403 00 -  -  -  	.db 0
  117 D1:C404 00 -  -  -  	.db 0
  118 D1:C405 -  -  -  -  
  119 D1:C405 -  -  -  -  MG_Data_8:
  120 D1:C405 00 -  -  -  	.db 0
  121 D1:C406 00 -  -  -  	.db 0
  122 D1:C407 -  -  -  -  
  123 D1:C407 -  -  -  -  MG_Data_7:
  124 D1:C407 00 -  -  -  	.db 0
  125 D1:C408 00 -  -  -  	.db 0
  126 D1:C409 -  -  -  -  
  127 D1:C409 -  -  -  -  MG_Data_6:
  128 D1:C409 00 -  -  -  	.db 0
  129 D1:C40A 00 -  -  -  	.db 0
  130 D1:C40B -  -  -  -  
  131 D1:C40B -  -  -  -  MG_Data_5:
  132 D1:C40B 00 -  -  -  	.db 0
  133 D1:C40C 10 -  -  -  	.db 16
  134 D1:C40D 0F FF 1C 11 	.db 15, 255, 28, 17  ;SG_TreeRow1
  135 D1:C411 FF FF 13 11 	.db 255, 255, 19, 17  ;SG_TreeRow1
  136 D1:C415 9F FF 16 11 	.db 159, 255, 22, 17  ;SG_TreeRow1
  137 D1:C419 1F FF 1B 10 	.db 31, 255, 27, 16  ;SG_TreeRow5
  138 D1:C41D BF FF 14 12 	.db 191, 255, 20, 18  ;SG_TreeRow2
  139 D1:C421 EF FF 14 10 	.db 239, 255, 20, 16  ;SG_TreeRow5
  140 D1:C425 7F FF 18 12 	.db 127, 255, 24, 18  ;SG_TreeRow2
  141 D1:C429 DF FF 13 13 	.db 223, 255, 19, 19  ;SG_TreeRow4
  142 D1:C42D CF FF 13 13 	.db 207, 255, 19, 19  ;SG_TreeRow4
  143 D1:C431 AF FF 15 0F 	.db 175, 255, 21, 15  ;SG_TreeRow3
  144 D1:C435 6F FF 19 12 	.db 111, 255, 25, 18  ;SG_TreeRow2
  145 D1:C439 3F FF 19 12 	.db 63, 255, 25, 18  ;SG_TreeRow2
  146 D1:C43D 5F FF 18 0F 	.db 95, 255, 24, 15  ;SG_TreeRow3
  147 D1:C441 2F FF 1A 13 	.db 47, 255, 26, 19  ;SG_TreeRow4
  148 D1:C445 8F FF 17 10 	.db 143, 255, 23, 16  ;SG_TreeRow5
  149 D1:C449 4F FF 19 10 	.db 79, 255, 25, 16  ;SG_TreeRow5
  150 D1:C44D -  -  -  -  
  151 D1:C44D -  -  -  -  MG_Data_4:
  152 D1:C44D 00 -  -  -  	.db 0
  153 D1:C44E 16 -  -  -  	.db 22
  154 D1:C44F F6 FF 74 09 	.db 246, 255, 116, 9  ;SG_Vine2
  155 D1:C453 72 FF 00 07 	.db 114, 255, 0, 7  ;SG_Vine6
  156 D1:C457 4F FF 26 10 	.db 79, 255, 38, 16  ;SG_TreeRow5
  157 D1:C45B 8F FF 22 10 	.db 143, 255, 34, 16  ;SG_TreeRow5
  158 D1:C45F 3F FF 27 13 	.db 63, 255, 39, 19  ;SG_TreeRow4
  159 D1:C463 2F FF 27 13 	.db 47, 255, 39, 19  ;SG_TreeRow4
  160 D1:C467 6F FF 24 12 	.db 111, 255, 36, 18  ;SG_TreeRow2
  161 D1:C46B BF FF 1F 13 	.db 191, 255, 31, 19  ;SG_TreeRow4
  162 D1:C46F 9F FF 21 13 	.db 159, 255, 33, 19  ;SG_TreeRow4
  163 D1:C473 DF FF 1F 12 	.db 223, 255, 31, 18  ;SG_TreeRow2
  164 D1:C477 FF FF 1D 0F 	.db 255, 255, 29, 15  ;SG_TreeRow3
  165 D1:C47B 1F FF 28 0F 	.db 31, 255, 40, 15  ;SG_TreeRow3
  166 D1:C47F 5F FF 25 11 	.db 95, 255, 37, 17  ;SG_TreeRow1
  167 D1:C483 7F FF 23 11 	.db 127, 255, 35, 17  ;SG_TreeRow1
  168 D1:C487 AF FF 20 11 	.db 175, 255, 32, 17  ;SG_TreeRow1
  169 D1:C48B EF FF 1E 11 	.db 239, 255, 30, 17  ;SG_TreeRow1
  170 D1:C48F CF FF 1E 10 	.db 207, 255, 30, 16  ;SG_TreeRow5
  171 D1:C493 0F FF 29 11 	.db 15, 255, 41, 17  ;SG_TreeRow1
  172 D1:C497 2E FF 00 14 	.db 46, 255, 0, 20  ;SG_Branch1
  173 D1:C49B C3 FF 54 1B 	.db 195, 255, 84, 27  ;SG_BranchBase4
  174 D1:C49F CF FF 65 05 	.db 207, 255, 101, 5  ;SG_Branch5
  175 D1:C4A3 E4 FF 69 05 	.db 228, 255, 105, 5  ;SG_Branch5
  176 D1:C4A7 -  -  -  -  
  177 D1:C4A7 -  -  -  -  MG_Data_3:
  178 D1:C4A7 00 -  -  -  	.db 0
  179 D1:C4A8 1B -  -  -  	.db 27
  180 D1:C4A9 0F FF 28 10 	.db 15, 255, 40, 16  ;SG_TreeRow5
  181 D1:C4AD 5F FF 26 13 	.db 95, 255, 38, 19  ;SG_TreeRow4
  182 D1:C4B1 6F FF 25 10 	.db 111, 255, 37, 16  ;SG_TreeRow5
  183 D1:C4B5 4F FF 27 0F 	.db 79, 255, 39, 15  ;SG_TreeRow3
  184 D1:C4B9 7F FF 26 0F 	.db 127, 255, 38, 15  ;SG_TreeRow3
  185 D1:C4BD 8F FF 27 12 	.db 143, 255, 39, 18  ;SG_TreeRow2
  186 D1:C4C1 9F FF 27 0F 	.db 159, 255, 39, 15  ;SG_TreeRow3
  187 D1:C4C5 BF FF 29 12 	.db 191, 255, 41, 18  ;SG_TreeRow2
  188 D1:C4C9 2F FF 28 12 	.db 47, 255, 40, 18  ;SG_TreeRow2
  189 D1:C4CD EF FF 2A 13 	.db 239, 255, 42, 19  ;SG_TreeRow4
  190 D1:C4D1 FF FF 2A 0F 	.db 255, 255, 42, 15  ;SG_TreeRow3
  191 D1:C4D5 1F FF 28 0F 	.db 31, 255, 40, 15  ;SG_TreeRow3
  192 D1:C4D9 3F FF 28 11 	.db 63, 255, 40, 17  ;SG_TreeRow1
  193 D1:C4DD AF FF 28 11 	.db 175, 255, 40, 17  ;SG_TreeRow1
  194 D1:C4E1 CF FF 29 11 	.db 207, 255, 41, 17  ;SG_TreeRow1
  195 D1:C4E5 DF FF 2A 10 	.db 223, 255, 42, 16  ;SG_TreeRow5
  196 D1:C4E9 8E FF 21 16 	.db 142, 255, 33, 22  ;SG_Vine5
  197 D1:C4ED 5D FF 6C 08 	.db 93, 255, 108, 8  ;SG_Branch6
  198 D1:C4F1 95 0C 35 73 	.db 149, 12, 53, 115  ;Leaves_3_Slow_O_F
  199 D1:C4F5 87 FF 02 02 	.db 135, 255, 2, 2  ;SG_Branch3
  200 D1:C4F9 95 FF 1E 1A 	.db 149, 255, 30, 26  ;SG_BranchBase2
  201 D1:C4FD F6 FF 2A 15 	.db 246, 255, 42, 21  ;SG_Vine4
  202 D1:C501 98 0B 3E 30 	.db 152, 11, 62, 48  ;Vines_9_Slow
  203 D1:C505 96 18 49 74 	.db 150, 24, 73, 116  ;Vines_7_Slow_O
  204 D1:C509 7E 18 4A 2A 	.db 126, 24, 74, 42  ;Vines_8_Slow
  205 D1:C50D 67 0B 47 36 	.db 103, 11, 71, 54  ;Leaves_4_Slow_O
  206 D1:C511 9D 18 7D 74 	.db 157, 24, 125, 116  ;Vines_7_Slow_O
  207 D1:C515 -  -  -  -  
  208 D1:C515 -  -  -  -  MG_Data_2:
  209 D1:C515 00 -  -  -  	.db 0
  210 D1:C516 1A -  -  -  	.db 26
  211 D1:C517 83 FF 83 16 	.db 131, 255, 131, 22  ;SG_Vine5
  212 D1:C51B AC FF 0C 0B 	.db 172, 255, 12, 11  ;SG_Branch2
  213 D1:C51F 0F FF 22 0F 	.db 15, 255, 34, 15  ;SG_TreeRow3
  214 D1:C523 4F FF 26 13 	.db 79, 255, 38, 19  ;SG_TreeRow4
  215 D1:C527 3F FF 25 10 	.db 63, 255, 37, 16  ;SG_TreeRow5
  216 D1:C52B 6F FF 28 0F 	.db 111, 255, 40, 15  ;SG_TreeRow3
  217 D1:C52F 9F FF 2B 13 	.db 159, 255, 43, 19  ;SG_TreeRow4
  218 D1:C533 AF FF 2A 10 	.db 175, 255, 42, 16  ;SG_TreeRow5
  219 D1:C537 1F FF 23 11 	.db 31, 255, 35, 17  ;SG_TreeRow1
  220 D1:C53B 8F FF 2A 10 	.db 143, 255, 42, 16  ;SG_TreeRow5
  221 D1:C53F CF FF 2A 12 	.db 207, 255, 42, 18  ;SG_TreeRow2
  222 D1:C543 DF FF 29 13 	.db 223, 255, 41, 19  ;SG_TreeRow4
  223 D1:C547 FF FF 28 0F 	.db 255, 255, 40, 15  ;SG_TreeRow3
  224 D1:C54B 2F FF 24 11 	.db 47, 255, 36, 17  ;SG_TreeRow1
  225 D1:C54F 7F FF 29 11 	.db 127, 255, 41, 17  ;SG_TreeRow1
  226 D1:C553 BF FF 2A 11 	.db 191, 255, 42, 17  ;SG_TreeRow1
  227 D1:C557 EF FF 28 11 	.db 239, 255, 40, 17  ;SG_TreeRow1
  228 D1:C55B 5F FF 27 12 	.db 95, 255, 39, 18  ;SG_TreeRow2
  229 D1:C55F 96 FF 24 19 	.db 150, 255, 36, 25  ;SG_BranchBase1
  230 D1:C563 78 FF 60 17 	.db 120, 255, 96, 23  ;SG_BranchBase3
  231 D1:C567 A8 FF 72 03 	.db 168, 255, 114, 3  ;SG_Branch7
  232 D1:C56B 83 FF 00 06 	.db 131, 255, 0, 6  ;SG_Vine3
  233 D1:C56F 78 FF 1F 07 	.db 120, 255, 31, 7  ;SG_Vine6
  234 D1:C573 37 FF 0D 02 	.db 55, 255, 13, 2  ;SG_Branch3
  235 D1:C577 93 FF 08 02 	.db 147, 255, 8, 2  ;SG_Branch3
  236 D1:C57B 8A FF 57 18 	.db 138, 255, 87, 24  ;SG_Vine1
  237 D1:C57F -  -  -  -  
  238 D1:C57F -  -  -  -  MG_Data_1:
  239 D1:C57F 00 -  -  -  	.db 0
  240 D1:C580 1C -  -  -  	.db 28
  241 D1:C581 91 09 70 2F 	.db 145, 9, 112, 47  ;Vines_1_Slow_O
  242 D1:C585 7F 0B 1E 30 	.db 127, 11, 30, 48  ;Vines_9_Slow
  243 D1:C589 F1 FF 7C 06 	.db 241, 255, 124, 6  ;SG_Vine3
  244 D1:C58D 5F FF 1F 10 	.db 95, 255, 31, 16  ;SG_TreeRow5
  245 D1:C591 AF FF 1F 10 	.db 175, 255, 31, 16  ;SG_TreeRow5
  246 D1:C595 3F FF 1F 12 	.db 63, 255, 31, 18  ;SG_TreeRow2
  247 D1:C599 6F FF 1F 12 	.db 111, 255, 31, 18  ;SG_TreeRow2
  248 D1:C59D 7F FF 1F 0F 	.db 127, 255, 31, 15  ;SG_TreeRow3
  249 D1:C5A1 9F FF 1F 13 	.db 159, 255, 31, 19  ;SG_TreeRow4
  250 D1:C5A5 2F FF 20 13 	.db 47, 255, 32, 19  ;SG_TreeRow4
  251 D1:C5A9 EF FF 21 0F 	.db 239, 255, 33, 15  ;SG_TreeRow3
  252 D1:C5AD CF FF 20 11 	.db 207, 255, 32, 17  ;SG_TreeRow1
  253 D1:C5B1 DF FF 21 13 	.db 223, 255, 33, 19  ;SG_TreeRow4
  254 D1:C5B5 BF FF 20 11 	.db 191, 255, 32, 17  ;SG_TreeRow1
  255 D1:C5B9 0F FF 21 10 	.db 15, 255, 33, 16  ;SG_TreeRow5
  256 D1:C5BD 4F FF 1F 11 	.db 79, 255, 31, 17  ;SG_TreeRow1
  257 D1:C5C1 1F FF 20 0F 	.db 31, 255, 32, 15  ;SG_TreeRow3
  258 D1:C5C5 FF FF 22 13 	.db 255, 255, 34, 19  ;SG_TreeRow4
  259 D1:C5C9 8F FF 1F 11 	.db 143, 255, 31, 17  ;SG_TreeRow1
  260 D1:C5CD 5E FF 48 18 	.db 94, 255, 72, 24  ;SG_Vine1
  261 D1:C5D1 77 FF 1E 09 	.db 119, 255, 30, 9  ;SG_Vine2
  262 D1:C5D5 42 FF 50 09 	.db 66, 255, 80, 9  ;SG_Vine2
  263 D1:C5D9 6B FF 5C 17 	.db 107, 255, 92, 23  ;SG_BranchBase3
  264 D1:C5DD 82 FF 77 05 	.db 130, 255, 119, 5  ;SG_Branch5
  265 D1:C5E1 68 FF 2C 02 	.db 104, 255, 44, 2  ;SG_Branch3
  266 D1:C5E5 CA FF 0C 0B 	.db 202, 255, 12, 11  ;SG_Branch2
  267 D1:C5E9 60 10 79 64 	.db 96, 16, 121, 100  ;Vines_3_Slow_O_F
  268 D1:C5ED 57 0E 83 6F 	.db 87, 14, 131, 111  ;Vines_10_Slow_O
  269 D1:C5F1 -  -  -  -  
  270 D1:C5F1 -  -  -  -  MG_Data_0:
  271 D1:C5F1 00 -  -  -  	.db 0
  272 D1:C5F2 30 -  -  -  	.db 48
  273 D1:C5F3 39 FF 88 0C 	.db 57, 255, 136, 12  ;SG_GroundChunk2
  274 D1:C5F7 3B FF 70 0D 	.db 59, 255, 112, 13  ;SG_GroundChunk1
  275 D1:C5FB 3F FF 16 0C 	.db 63, 255, 22, 12  ;SG_GroundChunk2
  276 D1:C5FF 42 FF 00 0D 	.db 66, 255, 0, 13  ;SG_GroundChunk1
  277 D1:C603 A8 FF 67 07 	.db 168, 255, 103, 7  ;SG_Vine6
  278 D1:C607 B3 FF 07 16 	.db 179, 255, 7, 22  ;SG_Vine5
  279 D1:C60B 45 FF 78 01 	.db 69, 255, 120, 1  ;SG_GroundGrass
  280 D1:C60F 2F FF 22 0F 	.db 47, 255, 34, 15  ;SG_TreeRow3
  281 D1:C613 3F FF 22 10 	.db 63, 255, 34, 16  ;SG_TreeRow5
  282 D1:C617 4F FF 22 11 	.db 79, 255, 34, 17  ;SG_TreeRow1
  283 D1:C61B 5F FF 22 12 	.db 95, 255, 34, 18  ;SG_TreeRow2
  284 D1:C61F 6F FF 23 10 	.db 111, 255, 35, 16  ;SG_TreeRow5
  285 D1:C623 7F FF 23 0F 	.db 127, 255, 35, 15  ;SG_TreeRow3
  286 D1:C627 AF FF 22 13 	.db 175, 255, 34, 19  ;SG_TreeRow4
  287 D1:C62B 9F FF 22 12 	.db 159, 255, 34, 18  ;SG_TreeRow2
  288 D1:C62F 35 FF 12 0E 	.db 53, 255, 18, 14  ;SG_Root1
  289 D1:C633 BF FF 22 11 	.db 191, 255, 34, 17  ;SG_TreeRow1
  290 D1:C637 CF FF 23 10 	.db 207, 255, 35, 16  ;SG_TreeRow5
  291 D1:C63B DF FF 22 11 	.db 223, 255, 34, 17  ;SG_TreeRow1
  292 D1:C63F EF FF 23 0F 	.db 239, 255, 35, 15  ;SG_TreeRow3
  293 D1:C643 FF FF 22 12 	.db 255, 255, 34, 18  ;SG_TreeRow2
  294 D1:C647 8F FF 23 11 	.db 143, 255, 35, 17  ;SG_TreeRow1
  295 D1:C64B 33 FF 86 0E 	.db 51, 255, 134, 14  ;SG_Root1
  296 D1:C64F 3B FF 79 0E 	.db 59, 255, 121, 14  ;SG_Root1
  297 D1:C653 4C FF 00 01 	.db 76, 255, 0, 1  ;SG_GroundGrass
  298 D1:C657 28 FF 88 0C 	.db 40, 255, 136, 12  ;SG_GroundChunk2
  299 D1:C65B AD 09 65 69 	.db 173, 9, 101, 105  ;Leaves_2_Slow
  300 D1:C65F A9 09 5F 24 	.db 169, 9, 95, 36  ;Leaves_2_Slow_O
  301 D1:C663 2A FF 18 0D 	.db 42, 255, 24, 13  ;SG_GroundChunk1
  302 D1:C667 2B FF 30 0D 	.db 43, 255, 48, 13  ;SG_GroundChunk1
  303 D1:C66B A8 FF 29 15 	.db 168, 255, 41, 21  ;SG_Vine4
  304 D1:C66F BE FF 00 14 	.db 190, 255, 0, 20  ;SG_Branch1
  305 D1:C673 28 FF 00 0C 	.db 40, 255, 0, 12  ;SG_GroundChunk2
  306 D1:C677 2A FF 48 0C 	.db 42, 255, 72, 12  ;SG_GroundChunk2
  307 D1:C67B 2B FF 60 0D 	.db 43, 255, 96, 13  ;SG_GroundChunk1
  308 D1:C67F 2A FF 78 0C 	.db 42, 255, 120, 12  ;SG_GroundChunk2
  309 D1:C683 9B 0B 5C 1F 	.db 155, 11, 92, 31  ;Leaves_4_Slow
  310 D1:C687 A2 09 61 24 	.db 162, 9, 97, 36  ;Leaves_2_Slow_O
  311 D1:C68B 29 FF 1F 0E 	.db 41, 255, 31, 14  ;SG_Root1
  312 D1:C68F 35 10 06 08 	.db 53, 16, 6, 8  ;GroundGrassL1_Fast
  313 D1:C693 30 10 3B 08 	.db 48, 16, 59, 8  ;GroundGrassL1_Fast
  314 D1:C697 2A 10 96 09 	.db 42, 16, 150, 9  ;GroundGrassL1_Fast_F
  315 D1:C69B 27 FF 67 07 	.db 39, 255, 103, 7  ;SG_Vine6
  316 D1:C69F 38 13 5D 6A 	.db 56, 19, 93, 106  ;Vines_2_Slow_O_F
  317 D1:C6A3 4A 18 5B 40 	.db 74, 24, 91, 64  ;Vines_8_Slow_F
  318 D1:C6A7 27 FF 0E 0E 	.db 39, 255, 14, 14  ;SG_Root1
  319 D1:C6AB 27 FF 6B 0E 	.db 39, 255, 107, 14  ;SG_Root1
  320 D1:C6AF 21 FF 51 0E 	.db 33, 255, 81, 14  ;SG_Root1
  321 D1:C6B3 -  -  -  -  
  322 D1:C6B3 -  -  -  -  
  323 D1:C6B3 -  -  -  -  
Listing for file "ascent.asm"
  565 D1:C6B3 -  -  -  -  #include "generated/MG2_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\MG2_Data.txt"
    1 D1:C6B3 -  -  -  -  MG2_Data_frame_table:
    2 D1:C6B3 63 C7 D1 -  	.dl MG2_Data_0
    3 D1:C6B6 45 C7 D1 -  	.dl MG2_Data_1
    4 D1:C6B9 43 C7 D1 -  	.dl MG2_Data_2
    5 D1:C6BC 41 C7 D1 -  	.dl MG2_Data_3
    6 D1:C6BF 3F C7 D1 -  	.dl MG2_Data_4
    7 D1:C6C2 3D C7 D1 -  	.dl MG2_Data_5
    8 D1:C6C5 3B C7 D1 -  	.dl MG2_Data_6
    9 D1:C6C8 39 C7 D1 -  	.dl MG2_Data_7
   10 D1:C6CB 37 C7 D1 -  	.dl MG2_Data_8
   11 D1:C6CE 35 C7 D1 -  	.dl MG2_Data_9
   12 D1:C6D1 33 C7 D1 -  	.dl MG2_Data_10
   13 D1:C6D4 31 C7 D1 -  	.dl MG2_Data_11
   14 D1:C6D7 2F C7 D1 -  	.dl MG2_Data_12
   15 D1:C6DA 2D C7 D1 -  	.dl MG2_Data_13
   16 D1:C6DD 2B C7 D1 -  	.dl MG2_Data_14
   17 D1:C6E0 29 C7 D1 -  	.dl MG2_Data_15
   18 D1:C6E3 27 C7 D1 -  	.dl MG2_Data_16
   19 D1:C6E6 25 C7 D1 -  	.dl MG2_Data_17
   20 D1:C6E9 23 C7 D1 -  	.dl MG2_Data_18
   21 D1:C6EC 21 C7 D1 -  	.dl MG2_Data_19
   22 D1:C6EF 1F C7 D1 -  	.dl MG2_Data_20
   23 D1:C6F2 1D C7 D1 -  	.dl MG2_Data_21
   24 D1:C6F5 1B C7 D1 -  	.dl MG2_Data_22
   25 D1:C6F8 19 C7 D1 -  	.dl MG2_Data_23
   26 D1:C6FB 17 C7 D1 -  	.dl MG2_Data_24
   27 D1:C6FE 15 C7 D1 -  	.dl MG2_Data_25
   28 D1:C701 13 C7 D1 -  	.dl MG2_Data_26
   29 D1:C704 11 C7 D1 -  	.dl MG2_Data_27
   30 D1:C707 0F C7 D1 -  	.dl MG2_Data_28
   31 D1:C70A 0D C7 D1 -  	.dl MG2_Data_29
   32 D1:C70D -  -  -  -  
   33 D1:C70D -  -  -  -  
   34 D1:C70D -  -  -  -  
   35 D1:C70D -  -  -  -  MG2_Data_29:
   36 D1:C70D 00 -  -  -  	.db 0
   37 D1:C70E 00 -  -  -  	.db 0
   38 D1:C70F -  -  -  -  
   39 D1:C70F -  -  -  -  MG2_Data_28:
   40 D1:C70F 00 -  -  -  	.db 0
   41 D1:C710 00 -  -  -  	.db 0
   42 D1:C711 -  -  -  -  
   43 D1:C711 -  -  -  -  MG2_Data_27:
   44 D1:C711 00 -  -  -  	.db 0
   45 D1:C712 00 -  -  -  	.db 0
   46 D1:C713 -  -  -  -  
   47 D1:C713 -  -  -  -  MG2_Data_26:
   48 D1:C713 00 -  -  -  	.db 0
   49 D1:C714 00 -  -  -  	.db 0
   50 D1:C715 -  -  -  -  
   51 D1:C715 -  -  -  -  MG2_Data_25:
   52 D1:C715 00 -  -  -  	.db 0
   53 D1:C716 00 -  -  -  	.db 0
   54 D1:C717 -  -  -  -  
   55 D1:C717 -  -  -  -  MG2_Data_24:
   56 D1:C717 00 -  -  -  	.db 0
   57 D1:C718 00 -  -  -  	.db 0
   58 D1:C719 -  -  -  -  
   59 D1:C719 -  -  -  -  MG2_Data_23:
   60 D1:C719 00 -  -  -  	.db 0
   61 D1:C71A 00 -  -  -  	.db 0
   62 D1:C71B -  -  -  -  
   63 D1:C71B -  -  -  -  MG2_Data_22:
   64 D1:C71B 00 -  -  -  	.db 0
   65 D1:C71C 00 -  -  -  	.db 0
   66 D1:C71D -  -  -  -  
   67 D1:C71D -  -  -  -  MG2_Data_21:
   68 D1:C71D 00 -  -  -  	.db 0
   69 D1:C71E 00 -  -  -  	.db 0
   70 D1:C71F -  -  -  -  
   71 D1:C71F -  -  -  -  MG2_Data_20:
   72 D1:C71F 00 -  -  -  	.db 0
   73 D1:C720 00 -  -  -  	.db 0
   74 D1:C721 -  -  -  -  
   75 D1:C721 -  -  -  -  MG2_Data_19:
   76 D1:C721 00 -  -  -  	.db 0
   77 D1:C722 00 -  -  -  	.db 0
   78 D1:C723 -  -  -  -  
   79 D1:C723 -  -  -  -  MG2_Data_18:
   80 D1:C723 00 -  -  -  	.db 0
   81 D1:C724 00 -  -  -  	.db 0
   82 D1:C725 -  -  -  -  
   83 D1:C725 -  -  -  -  MG2_Data_17:
   84 D1:C725 00 -  -  -  	.db 0
   85 D1:C726 00 -  -  -  	.db 0
   86 D1:C727 -  -  -  -  
   87 D1:C727 -  -  -  -  MG2_Data_16:
   88 D1:C727 00 -  -  -  	.db 0
   89 D1:C728 00 -  -  -  	.db 0
   90 D1:C729 -  -  -  -  
   91 D1:C729 -  -  -  -  MG2_Data_15:
   92 D1:C729 00 -  -  -  	.db 0
   93 D1:C72A 00 -  -  -  	.db 0
   94 D1:C72B -  -  -  -  
   95 D1:C72B -  -  -  -  MG2_Data_14:
   96 D1:C72B 00 -  -  -  	.db 0
   97 D1:C72C 00 -  -  -  	.db 0
   98 D1:C72D -  -  -  -  
   99 D1:C72D -  -  -  -  MG2_Data_13:
  100 D1:C72D 00 -  -  -  	.db 0
  101 D1:C72E 00 -  -  -  	.db 0
  102 D1:C72F -  -  -  -  
  103 D1:C72F -  -  -  -  MG2_Data_12:
  104 D1:C72F 00 -  -  -  	.db 0
  105 D1:C730 00 -  -  -  	.db 0
  106 D1:C731 -  -  -  -  
  107 D1:C731 -  -  -  -  MG2_Data_11:
  108 D1:C731 00 -  -  -  	.db 0
  109 D1:C732 00 -  -  -  	.db 0
  110 D1:C733 -  -  -  -  
  111 D1:C733 -  -  -  -  MG2_Data_10:
  112 D1:C733 00 -  -  -  	.db 0
  113 D1:C734 00 -  -  -  	.db 0
  114 D1:C735 -  -  -  -  
  115 D1:C735 -  -  -  -  MG2_Data_9:
  116 D1:C735 00 -  -  -  	.db 0
  117 D1:C736 00 -  -  -  	.db 0
  118 D1:C737 -  -  -  -  
  119 D1:C737 -  -  -  -  MG2_Data_8:
  120 D1:C737 00 -  -  -  	.db 0
  121 D1:C738 00 -  -  -  	.db 0
  122 D1:C739 -  -  -  -  
  123 D1:C739 -  -  -  -  MG2_Data_7:
  124 D1:C739 00 -  -  -  	.db 0
  125 D1:C73A 00 -  -  -  	.db 0
  126 D1:C73B -  -  -  -  
  127 D1:C73B -  -  -  -  MG2_Data_6:
  128 D1:C73B 00 -  -  -  	.db 0
  129 D1:C73C 00 -  -  -  	.db 0
  130 D1:C73D -  -  -  -  
  131 D1:C73D -  -  -  -  MG2_Data_5:
  132 D1:C73D 00 -  -  -  	.db 0
  133 D1:C73E 00 -  -  -  	.db 0
  134 D1:C73F -  -  -  -  
  135 D1:C73F -  -  -  -  MG2_Data_4:
  136 D1:C73F 00 -  -  -  	.db 0
  137 D1:C740 00 -  -  -  	.db 0
  138 D1:C741 -  -  -  -  
  139 D1:C741 -  -  -  -  MG2_Data_3:
  140 D1:C741 00 -  -  -  	.db 0
  141 D1:C742 00 -  -  -  	.db 0
  142 D1:C743 -  -  -  -  
  143 D1:C743 -  -  -  -  MG2_Data_2:
  144 D1:C743 00 -  -  -  	.db 0
  145 D1:C744 00 -  -  -  	.db 0
  146 D1:C745 -  -  -  -  
  147 D1:C745 -  -  -  -  MG2_Data_1:
  148 D1:C745 00 -  -  -  	.db 0
  149 D1:C746 07 -  -  -  	.db 7
  150 D1:C747 2B FF 64 1C 	.db 43, 255, 100, 28  ;SG_CloudPlatform
  151 D1:C74B 75 FF 40 1C 	.db 117, 255, 64, 28  ;SG_CloudPlatform
  152 D1:C74F A0 FF 0E 1C 	.db 160, 255, 14, 28  ;SG_CloudPlatform
  153 D1:C753 13 FF 11 1C 	.db 19, 255, 17, 28  ;SG_CloudPlatform
  154 D1:C757 34 10 0D 77 	.db 52, 16, 13, 119  ;Clouds_2_Fast
  155 D1:C75B 24 10 0D 77 	.db 36, 16, 13, 119  ;Clouds_2_Fast
  156 D1:C75F 14 10 0D 77 	.db 20, 16, 13, 119  ;Clouds_2_Fast
  157 D1:C763 -  -  -  -  
  158 D1:C763 -  -  -  -  MG2_Data_0:
  159 D1:C763 00 -  -  -  	.db 0
  160 D1:C764 07 -  -  -  	.db 7
  161 D1:C765 63 FF 05 1C 	.db 99, 255, 5, 28  ;SG_CloudPlatform
  162 D1:C769 B6 FF 2A 1C 	.db 182, 255, 42, 28  ;SG_CloudPlatform
  163 D1:C76D 7F FF 6B 1C 	.db 127, 255, 107, 28  ;SG_CloudPlatform
  164 D1:C771 59 FF 43 1C 	.db 89, 255, 67, 28  ;SG_CloudPlatform
  165 D1:C775 D1 10 8D 77 	.db 209, 16, 141, 119  ;Clouds_2_Fast
  166 D1:C779 C1 10 8D 77 	.db 193, 16, 141, 119  ;Clouds_2_Fast
  167 D1:C77D B1 10 8D 77 	.db 177, 16, 141, 119  ;Clouds_2_Fast
  168 D1:C781 -  -  -  -  
  169 D1:C781 -  -  -  -  
  170 D1:C781 -  -  -  -  
Listing for file "ascent.asm"
  566 D1:C781 -  -  -  -  #include "generated/FG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\FG_Data.txt"
    1 D1:C781 -  -  -  -  FG_Data_frame_table:
    2 D1:C781 B5 C8 D1 -  	.dl FG_Data_0
    3 D1:C784 A7 C8 D1 -  	.dl FG_Data_1
    4 D1:C787 81 C8 D1 -  	.dl FG_Data_2
    5 D1:C78A 7B C8 D1 -  	.dl FG_Data_3
    6 D1:C78D 71 C8 D1 -  	.dl FG_Data_4
    7 D1:C790 5F C8 D1 -  	.dl FG_Data_5
    8 D1:C793 59 C8 D1 -  	.dl FG_Data_6
    9 D1:C796 4B C8 D1 -  	.dl FG_Data_7
   10 D1:C799 39 C8 D1 -  	.dl FG_Data_8
   11 D1:C79C 07 C8 D1 -  	.dl FG_Data_9
   12 D1:C79F 01 C8 D1 -  	.dl FG_Data_10
   13 D1:C7A2 FF C7 D1 -  	.dl FG_Data_11
   14 D1:C7A5 FD C7 D1 -  	.dl FG_Data_12
   15 D1:C7A8 FB C7 D1 -  	.dl FG_Data_13
   16 D1:C7AB F9 C7 D1 -  	.dl FG_Data_14
   17 D1:C7AE F7 C7 D1 -  	.dl FG_Data_15
   18 D1:C7B1 F5 C7 D1 -  	.dl FG_Data_16
   19 D1:C7B4 F3 C7 D1 -  	.dl FG_Data_17
   20 D1:C7B7 F1 C7 D1 -  	.dl FG_Data_18
   21 D1:C7BA EF C7 D1 -  	.dl FG_Data_19
   22 D1:C7BD ED C7 D1 -  	.dl FG_Data_20
   23 D1:C7C0 EB C7 D1 -  	.dl FG_Data_21
   24 D1:C7C3 E9 C7 D1 -  	.dl FG_Data_22
   25 D1:C7C6 E7 C7 D1 -  	.dl FG_Data_23
   26 D1:C7C9 E5 C7 D1 -  	.dl FG_Data_24
   27 D1:C7CC E3 C7 D1 -  	.dl FG_Data_25
   28 D1:C7CF E1 C7 D1 -  	.dl FG_Data_26
   29 D1:C7D2 DF C7 D1 -  	.dl FG_Data_27
   30 D1:C7D5 DD C7 D1 -  	.dl FG_Data_28
   31 D1:C7D8 DB C7 D1 -  	.dl FG_Data_29
   32 D1:C7DB -  -  -  -  
   33 D1:C7DB -  -  -  -  
   34 D1:C7DB -  -  -  -  
   35 D1:C7DB -  -  -  -  FG_Data_29:
   36 D1:C7DB 00 -  -  -  	.db 0
   37 D1:C7DC 00 -  -  -  	.db 0
   38 D1:C7DD -  -  -  -  
   39 D1:C7DD -  -  -  -  FG_Data_28:
   40 D1:C7DD 00 -  -  -  	.db 0
   41 D1:C7DE 00 -  -  -  	.db 0
   42 D1:C7DF -  -  -  -  
   43 D1:C7DF -  -  -  -  FG_Data_27:
   44 D1:C7DF 00 -  -  -  	.db 0
   45 D1:C7E0 00 -  -  -  	.db 0
   46 D1:C7E1 -  -  -  -  
   47 D1:C7E1 -  -  -  -  FG_Data_26:
   48 D1:C7E1 00 -  -  -  	.db 0
   49 D1:C7E2 00 -  -  -  	.db 0
   50 D1:C7E3 -  -  -  -  
   51 D1:C7E3 -  -  -  -  FG_Data_25:
   52 D1:C7E3 00 -  -  -  	.db 0
   53 D1:C7E4 00 -  -  -  	.db 0
   54 D1:C7E5 -  -  -  -  
   55 D1:C7E5 -  -  -  -  FG_Data_24:
   56 D1:C7E5 00 -  -  -  	.db 0
   57 D1:C7E6 00 -  -  -  	.db 0
   58 D1:C7E7 -  -  -  -  
   59 D1:C7E7 -  -  -  -  FG_Data_23:
   60 D1:C7E7 00 -  -  -  	.db 0
   61 D1:C7E8 00 -  -  -  	.db 0
   62 D1:C7E9 -  -  -  -  
   63 D1:C7E9 -  -  -  -  FG_Data_22:
   64 D1:C7E9 00 -  -  -  	.db 0
   65 D1:C7EA 00 -  -  -  	.db 0
   66 D1:C7EB -  -  -  -  
   67 D1:C7EB -  -  -  -  FG_Data_21:
   68 D1:C7EB 00 -  -  -  	.db 0
   69 D1:C7EC 00 -  -  -  	.db 0
   70 D1:C7ED -  -  -  -  
   71 D1:C7ED -  -  -  -  FG_Data_20:
   72 D1:C7ED 00 -  -  -  	.db 0
   73 D1:C7EE 00 -  -  -  	.db 0
   74 D1:C7EF -  -  -  -  
   75 D1:C7EF -  -  -  -  FG_Data_19:
   76 D1:C7EF 00 -  -  -  	.db 0
   77 D1:C7F0 00 -  -  -  	.db 0
   78 D1:C7F1 -  -  -  -  
   79 D1:C7F1 -  -  -  -  FG_Data_18:
   80 D1:C7F1 00 -  -  -  	.db 0
   81 D1:C7F2 00 -  -  -  	.db 0
   82 D1:C7F3 -  -  -  -  
   83 D1:C7F3 -  -  -  -  FG_Data_17:
   84 D1:C7F3 00 -  -  -  	.db 0
   85 D1:C7F4 00 -  -  -  	.db 0
   86 D1:C7F5 -  -  -  -  
   87 D1:C7F5 -  -  -  -  FG_Data_16:
   88 D1:C7F5 00 -  -  -  	.db 0
   89 D1:C7F6 00 -  -  -  	.db 0
   90 D1:C7F7 -  -  -  -  
   91 D1:C7F7 -  -  -  -  FG_Data_15:
   92 D1:C7F7 00 -  -  -  	.db 0
   93 D1:C7F8 00 -  -  -  	.db 0
   94 D1:C7F9 -  -  -  -  
   95 D1:C7F9 -  -  -  -  FG_Data_14:
   96 D1:C7F9 00 -  -  -  	.db 0
   97 D1:C7FA 00 -  -  -  	.db 0
   98 D1:C7FB -  -  -  -  
   99 D1:C7FB -  -  -  -  FG_Data_13:
  100 D1:C7FB 00 -  -  -  	.db 0
  101 D1:C7FC 00 -  -  -  	.db 0
  102 D1:C7FD -  -  -  -  
  103 D1:C7FD -  -  -  -  FG_Data_12:
  104 D1:C7FD 00 -  -  -  	.db 0
  105 D1:C7FE 00 -  -  -  	.db 0
  106 D1:C7FF -  -  -  -  
  107 D1:C7FF -  -  -  -  FG_Data_11:
  108 D1:C7FF 00 -  -  -  	.db 0
  109 D1:C800 00 -  -  -  	.db 0
  110 D1:C801 -  -  -  -  
  111 D1:C801 -  -  -  -  FG_Data_10:
  112 D1:C801 00 -  -  -  	.db 0
  113 D1:C802 01 -  -  -  	.db 1
  114 D1:C803 CA FF 82 02 	.db 202, 255, 130, 2  ;SG_Branch3
  115 D1:C807 -  -  -  -  
  116 D1:C807 -  -  -  -  FG_Data_9:
  117 D1:C807 00 -  -  -  	.db 0
  118 D1:C808 0C -  -  -  	.db 12
  119 D1:C809 BD FF 22 09 	.db 189, 255, 34, 9  ;SG_Vine2
  120 D1:C80D AB 18 9B 40 	.db 171, 24, 155, 64  ;Vines_8_Slow_F
  121 D1:C811 B8 0B 13 41 	.db 184, 11, 19, 65  ;Vines_9_Slow_O
  122 D1:C815 D5 FF 7D 04 	.db 213, 255, 125, 4  ;SG_Branch4
  123 D1:C819 B0 0E 00 42 	.db 176, 14, 0, 66  ;Branches_3_Fast
  124 D1:C81D B1 0E 09 43 	.db 177, 14, 9, 67  ;Branches_2_Fast
  125 D1:C821 B1 0E 12 33 	.db 177, 14, 18, 51  ;Branches_4_Fast_F
  126 D1:C825 EA FF 13 03 	.db 234, 255, 19, 3  ;SG_Branch7
  127 D1:C829 91 FF 4E 07 	.db 145, 255, 78, 7  ;SG_Vine6
  128 D1:C82D 9B 10 86 44 	.db 155, 16, 134, 68  ;Vines_3_Slow_O
  129 D1:C831 AC 13 91 2B 	.db 172, 19, 145, 43  ;Vines_2_Slow_O
  130 D1:C835 B0 FF 0E 0A 	.db 176, 255, 14, 10  ;SG_Vine7
  131 D1:C839 -  -  -  -  
  132 D1:C839 -  -  -  -  FG_Data_8:
  133 D1:C839 00 -  -  -  	.db 0
  134 D1:C83A 04 -  -  -  	.db 4
  135 D1:C83B 7C 0E 97 3E 	.db 124, 14, 151, 62  ;Branches_5_Fast
  136 D1:C83F 7C 0E 8E 3F 	.db 124, 14, 142, 63  ;Branches_4_Fast
  137 D1:C843 A4 FF 77 0B 	.db 164, 255, 119, 11  ;SG_Branch2
  138 D1:C847 7B FF 8C 0A 	.db 123, 255, 140, 10  ;SG_Vine7
  139 D1:C84B -  -  -  -  
  140 D1:C84B -  -  -  -  FG_Data_7:
  141 D1:C84B 00 -  -  -  	.db 0
  142 D1:C84C 03 -  -  -  	.db 3
  143 D1:C84D 87 FF 00 05 	.db 135, 255, 0, 5  ;SG_Branch5
  144 D1:C851 ED FF 00 08 	.db 237, 255, 0, 8  ;SG_Branch6
  145 D1:C855 64 FF 08 0A 	.db 100, 255, 8, 10  ;SG_Vine7
  146 D1:C859 -  -  -  -  
  147 D1:C859 -  -  -  -  FG_Data_6:
  148 D1:C859 00 -  -  -  	.db 0
  149 D1:C85A 01 -  -  -  	.db 1
  150 D1:C85B 64 FF 00 08 	.db 100, 255, 0, 8  ;SG_Branch6
  151 D1:C85F -  -  -  -  
  152 D1:C85F -  -  -  -  FG_Data_5:
  153 D1:C85F 00 -  -  -  	.db 0
  154 D1:C860 04 -  -  -  	.db 4
  155 D1:C861 34 FF 10 09 	.db 52, 255, 16, 9  ;SG_Vine2
  156 D1:C865 D7 FF 82 02 	.db 215, 255, 130, 2  ;SG_Branch3
  157 D1:C869 5D FF 00 05 	.db 93, 255, 0, 5  ;SG_Branch5
  158 D1:C86D 08 FF 3B 09 	.db 8, 255, 59, 9  ;SG_Vine2
  159 D1:C871 -  -  -  -  
  160 D1:C871 -  -  -  -  FG_Data_4:
  161 D1:C871 00 -  -  -  	.db 0
  162 D1:C872 02 -  -  -  	.db 2
  163 D1:C873 B5 FF 82 02 	.db 181, 255, 130, 2  ;SG_Branch3
  164 D1:C877 DB FF 67 07 	.db 219, 255, 103, 7  ;SG_Vine6
  165 D1:C87B -  -  -  -  
  166 D1:C87B -  -  -  -  FG_Data_3:
  167 D1:C87B 00 -  -  -  	.db 0
  168 D1:C87C 01 -  -  -  	.db 1
  169 D1:C87D C1 FF 00 08 	.db 193, 255, 0, 8  ;SG_Branch6
  170 D1:C881 -  -  -  -  
  171 D1:C881 -  -  -  -  FG_Data_2:
  172 D1:C881 00 -  -  -  	.db 0
  173 D1:C882 09 -  -  -  	.db 9
  174 D1:C883 FB FF 7D 04 	.db 251, 255, 125, 4  ;SG_Branch4
  175 D1:C887 93 FF 00 05 	.db 147, 255, 0, 5  ;SG_Branch5
  176 D1:C88B C9 FF 71 06 	.db 201, 255, 113, 6  ;SG_Vine3
  177 D1:C88F 69 FF 38 07 	.db 105, 255, 56, 7  ;SG_Vine6
  178 D1:C893 71 0B 2C 31 	.db 113, 11, 44, 49  ;Vines_9_Slow_O_F
  179 D1:C897 71 09 20 2F 	.db 113, 9, 32, 47  ;Vines_1_Slow_O
  180 D1:C89B 6D 10 15 2C 	.db 109, 16, 21, 44  ;Vines_3_Slow
  181 D1:C89F 6E 10 0E 32 	.db 110, 16, 14, 50  ;Vines_3_Slow_F
  182 D1:C8A3 D2 0B 94 30 	.db 210, 11, 148, 48  ;Vines_9_Slow
  183 D1:C8A7 -  -  -  -  
  184 D1:C8A7 -  -  -  -  FG_Data_1:
  185 D1:C8A7 00 -  -  -  	.db 0
  186 D1:C8A8 03 -  -  -  	.db 3
  187 D1:C8A9 C9 FF 82 02 	.db 201, 255, 130, 2  ;SG_Branch3
  188 D1:C8AD 87 FF 00 03 	.db 135, 255, 0, 3  ;SG_Branch7
  189 D1:C8B1 4B 0E 00 0B 	.db 75, 14, 0, 11  ;Branches_9_Fast
  190 D1:C8B5 -  -  -  -  
  191 D1:C8B5 -  -  -  -  FG_Data_0:
  192 D1:C8B5 00 -  -  -  	.db 0
  193 D1:C8B6 09 -  -  -  	.db 9
  194 D1:C8B7 1B FF 00 00 	.db 27, 255, 0, 0  ;SG_GroundChunk3
  195 D1:C8BB 1B FF 20 00 	.db 27, 255, 32, 0  ;SG_GroundChunk3
  196 D1:C8BF 1B FF 40 00 	.db 27, 255, 64, 0  ;SG_GroundChunk3
  197 D1:C8C3 1B FF 60 00 	.db 27, 255, 96, 0  ;SG_GroundChunk3
  198 D1:C8C7 1B FF 80 00 	.db 27, 255, 128, 0  ;SG_GroundChunk3
  199 D1:C8CB 27 FF 2A 01 	.db 39, 255, 42, 1  ;SG_GroundGrass
  200 D1:C8CF 2A FF 03 01 	.db 42, 255, 3, 1  ;SG_GroundGrass
  201 D1:C8D3 2A FF 4E 01 	.db 42, 255, 78, 1  ;SG_GroundGrass
  202 D1:C8D7 27 FF 75 01 	.db 39, 255, 117, 1  ;SG_GroundGrass
  203 D1:C8DB -  -  -  -  
  204 D1:C8DB -  -  -  -  
  205 D1:C8DB -  -  -  -  
Listing for file "ascent.asm"
  567 D1:C8DB -  -  -  -  #include "generated/DecompressCalls.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\DecompressCalls.txt"
    1 D1:C8DB -  -  -  -  decompress_calls_table_up:
    2 D1:C8DB EA CC D1 -  	.dl decompress_frame_up_0
    3 D1:C8DE AB CE D1 -  	.dl decompress_frame_up_1
    4 D1:C8E1 AC CE D1 -  	.dl decompress_frame_up_2
    5 D1:C8E4 C9 CE D1 -  	.dl decompress_frame_up_3
    6 D1:C8E7 CA CE D1 -  	.dl decompress_frame_up_4
    7 D1:C8EA EE CE D1 -  	.dl decompress_frame_up_5
    8 D1:C8ED FD CE D1 -  	.dl decompress_frame_up_6
    9 D1:C8F0 0C CF D1 -  	.dl decompress_frame_up_7
   10 D1:C8F3 0D CF D1 -  	.dl decompress_frame_up_8
   11 D1:C8F6 0E CF D1 -  	.dl decompress_frame_up_9
   12 D1:C8F9 0F CF D1 -  	.dl decompress_frame_up_10
   13 D1:C8FC 10 CF D1 -  	.dl decompress_frame_up_11
   14 D1:C8FF 11 CF D1 -  	.dl decompress_frame_up_12
   15 D1:C902 12 CF D1 -  	.dl decompress_frame_up_13
   16 D1:C905 13 CF D1 -  	.dl decompress_frame_up_14
   17 D1:C908 14 CF D1 -  	.dl decompress_frame_up_15
   18 D1:C90B 15 CF D1 -  	.dl decompress_frame_up_16
   19 D1:C90E 16 CF D1 -  	.dl decompress_frame_up_17
   20 D1:C911 17 CF D1 -  	.dl decompress_frame_up_18
   21 D1:C914 18 CF D1 -  	.dl decompress_frame_up_19
   22 D1:C917 19 CF D1 -  	.dl decompress_frame_up_20
   23 D1:C91A 1A CF D1 -  	.dl decompress_frame_up_21
   24 D1:C91D 1B CF D1 -  	.dl decompress_frame_up_22
   25 D1:C920 1C CF D1 -  	.dl decompress_frame_up_23
   26 D1:C923 1D CF D1 -  	.dl decompress_frame_up_24
   27 D1:C926 1E CF D1 -  	.dl decompress_frame_up_25
   28 D1:C929 1F CF D1 -  	.dl decompress_frame_up_26
   29 D1:C92C 20 CF D1 -  	.dl decompress_frame_up_27
   30 D1:C92F 21 CF D1 -  	.dl decompress_frame_up_28
   31 D1:C932 22 CF D1 -  	.dl decompress_frame_up_29
   32 D1:C935 23 CF D1 -  	.dl decompress_frame_up_30
   33 D1:C938 24 CF D1 -  	.dl decompress_frame_up_31
   34 D1:C93B 25 CF D1 -  	.dl decompress_frame_up_32
   35 D1:C93E 26 CF D1 -  	.dl decompress_frame_up_33
   36 D1:C941 27 CF D1 -  	.dl decompress_frame_up_34
   37 D1:C944 28 CF D1 -  	.dl decompress_frame_up_35
   38 D1:C947 29 CF D1 -  	.dl decompress_frame_up_36
   39 D1:C94A 2A CF D1 -  	.dl decompress_frame_up_37
   40 D1:C94D 2B CF D1 -  	.dl decompress_frame_up_38
   41 D1:C950 2C CF D1 -  	.dl decompress_frame_up_39
   42 D1:C953 2D CF D1 -  	.dl decompress_frame_up_40
   43 D1:C956 2E CF D1 -  	.dl decompress_frame_up_41
   44 D1:C959 2F CF D1 -  	.dl decompress_frame_up_42
   45 D1:C95C 30 CF D1 -  	.dl decompress_frame_up_43
   46 D1:C95F 31 CF D1 -  	.dl decompress_frame_up_44
   47 D1:C962 32 CF D1 -  	.dl decompress_frame_up_45
   48 D1:C965 33 CF D1 -  	.dl decompress_frame_up_46
   49 D1:C968 34 CF D1 -  	.dl decompress_frame_up_47
   50 D1:C96B 35 CF D1 -  	.dl decompress_frame_up_48
   51 D1:C96E 36 CF D1 -  	.dl decompress_frame_up_49
   52 D1:C971 37 CF D1 -  	.dl decompress_frame_up_50
   53 D1:C974 38 CF D1 -  	.dl decompress_frame_up_51
   54 D1:C977 39 CF D1 -  	.dl decompress_frame_up_52
   55 D1:C97A 3A CF D1 -  	.dl decompress_frame_up_53
   56 D1:C97D 3B CF D1 -  	.dl decompress_frame_up_54
   57 D1:C980 3C CF D1 -  	.dl decompress_frame_up_55
   58 D1:C983 3D CF D1 -  	.dl decompress_frame_up_56
   59 D1:C986 3E CF D1 -  	.dl decompress_frame_up_57
   60 D1:C989 3F CF D1 -  	.dl decompress_frame_up_58
   61 D1:C98C 40 CF D1 -  	.dl decompress_frame_up_59
   62 D1:C98F 41 CF D1 -  	.dl decompress_frame_up_60
   63 D1:C992 42 CF D1 -  	.dl decompress_frame_up_61
   64 D1:C995 43 CF D1 -  	.dl decompress_frame_up_62
   65 D1:C998 44 CF D1 -  	.dl decompress_frame_up_63
   66 D1:C99B 45 CF D1 -  	.dl decompress_frame_up_64
   67 D1:C99E 46 CF D1 -  	.dl decompress_frame_up_65
   68 D1:C9A1 47 CF D1 -  	.dl decompress_frame_up_66
   69 D1:C9A4 48 CF D1 -  	.dl decompress_frame_up_67
   70 D1:C9A7 49 CF D1 -  	.dl decompress_frame_up_68
   71 D1:C9AA 4A CF D1 -  	.dl decompress_frame_up_69
   72 D1:C9AD 4B CF D1 -  	.dl decompress_frame_up_70
   73 D1:C9B0 4C CF D1 -  	.dl decompress_frame_up_71
   74 D1:C9B3 4D CF D1 -  	.dl decompress_frame_up_72
   75 D1:C9B6 4E CF D1 -  	.dl decompress_frame_up_73
   76 D1:C9B9 4F CF D1 -  	.dl decompress_frame_up_74
   77 D1:C9BC 50 CF D1 -  	.dl decompress_frame_up_75
   78 D1:C9BF 51 CF D1 -  	.dl decompress_frame_up_76
   79 D1:C9C2 52 CF D1 -  	.dl decompress_frame_up_77
   80 D1:C9C5 53 CF D1 -  	.dl decompress_frame_up_78
   81 D1:C9C8 54 CF D1 -  	.dl decompress_frame_up_79
   82 D1:C9CB 55 CF D1 -  	.dl decompress_frame_up_80
   83 D1:C9CE 56 CF D1 -  	.dl decompress_frame_up_81
   84 D1:C9D1 57 CF D1 -  	.dl decompress_frame_up_82
   85 D1:C9D4 58 CF D1 -  	.dl decompress_frame_up_83
   86 D1:C9D7 59 CF D1 -  	.dl decompress_frame_up_84
   87 D1:C9DA 5A CF D1 -  	.dl decompress_frame_up_85
   88 D1:C9DD 5B CF D1 -  	.dl decompress_frame_up_86
   89 D1:C9E0 5C CF D1 -  	.dl decompress_frame_up_87
   90 D1:C9E3 5D CF D1 -  	.dl decompress_frame_up_88
   91 D1:C9E6 5E CF D1 -  	.dl decompress_frame_up_89
   92 D1:C9E9 -  -  -  -  
   93 D1:C9E9 -  -  -  -  
   94 D1:C9E9 -  -  -  -  decompress_calls_table_down:
   95 D1:C9E9 5F CF D1 -  	.dl decompress_frame_down_0
   96 D1:C9EC 60 CF D1 -  	.dl decompress_frame_down_1
   97 D1:C9EF 61 CF D1 -  	.dl decompress_frame_down_2
   98 D1:C9F2 62 CF D1 -  	.dl decompress_frame_down_3
   99 D1:C9F5 63 CF D1 -  	.dl decompress_frame_down_4
  100 D1:C9F8 A3 CF D1 -  	.dl decompress_frame_down_5
  101 D1:C9FB A4 CF D1 -  	.dl decompress_frame_down_6
  102 D1:C9FE AC CF D1 -  	.dl decompress_frame_down_7
  103 D1:CA01 AD CF D1 -  	.dl decompress_frame_down_8
  104 D1:CA04 D8 CF D1 -  	.dl decompress_frame_down_9
  105 D1:CA07 D9 CF D1 -  	.dl decompress_frame_down_10
  106 D1:CA0A 51 D0 D1 -  	.dl decompress_frame_down_11
  107 D1:CA0D E5 D0 D1 -  	.dl decompress_frame_down_12
  108 D1:CA10 E9 D1 D1 -  	.dl decompress_frame_down_13
  109 D1:CA13 EA D1 D1 -  	.dl decompress_frame_down_14
  110 D1:CA16 8C D2 D1 -  	.dl decompress_frame_down_15
  111 D1:CA19 8D D2 D1 -  	.dl decompress_frame_down_16
  112 D1:CA1C 28 D3 D1 -  	.dl decompress_frame_down_17
  113 D1:CA1F 29 D3 D1 -  	.dl decompress_frame_down_18
  114 D1:CA22 2A D3 D1 -  	.dl decompress_frame_down_19
  115 D1:CA25 2B D3 D1 -  	.dl decompress_frame_down_20
  116 D1:CA28 2C D3 D1 -  	.dl decompress_frame_down_21
  117 D1:CA2B 2D D3 D1 -  	.dl decompress_frame_down_22
  118 D1:CA2E 2E D3 D1 -  	.dl decompress_frame_down_23
  119 D1:CA31 2F D3 D1 -  	.dl decompress_frame_down_24
  120 D1:CA34 76 D3 D1 -  	.dl decompress_frame_down_25
  121 D1:CA37 77 D3 D1 -  	.dl decompress_frame_down_26
  122 D1:CA3A 78 D3 D1 -  	.dl decompress_frame_down_27
  123 D1:CA3D 79 D3 D1 -  	.dl decompress_frame_down_28
  124 D1:CA40 7A D3 D1 -  	.dl decompress_frame_down_29
  125 D1:CA43 7B D3 D1 -  	.dl decompress_frame_down_30
  126 D1:CA46 7C D3 D1 -  	.dl decompress_frame_down_31
  127 D1:CA49 7D D3 D1 -  	.dl decompress_frame_down_32
  128 D1:CA4C 7E D3 D1 -  	.dl decompress_frame_down_33
  129 D1:CA4F 7F D3 D1 -  	.dl decompress_frame_down_34
  130 D1:CA52 80 D3 D1 -  	.dl decompress_frame_down_35
  131 D1:CA55 81 D3 D1 -  	.dl decompress_frame_down_36
  132 D1:CA58 82 D3 D1 -  	.dl decompress_frame_down_37
  133 D1:CA5B 83 D3 D1 -  	.dl decompress_frame_down_38
  134 D1:CA5E 84 D3 D1 -  	.dl decompress_frame_down_39
  135 D1:CA61 85 D3 D1 -  	.dl decompress_frame_down_40
  136 D1:CA64 86 D3 D1 -  	.dl decompress_frame_down_41
  137 D1:CA67 87 D3 D1 -  	.dl decompress_frame_down_42
  138 D1:CA6A 88 D3 D1 -  	.dl decompress_frame_down_43
  139 D1:CA6D 89 D3 D1 -  	.dl decompress_frame_down_44
  140 D1:CA70 8A D3 D1 -  	.dl decompress_frame_down_45
  141 D1:CA73 8B D3 D1 -  	.dl decompress_frame_down_46
  142 D1:CA76 8C D3 D1 -  	.dl decompress_frame_down_47
  143 D1:CA79 8D D3 D1 -  	.dl decompress_frame_down_48
  144 D1:CA7C 8E D3 D1 -  	.dl decompress_frame_down_49
  145 D1:CA7F 8F D3 D1 -  	.dl decompress_frame_down_50
  146 D1:CA82 90 D3 D1 -  	.dl decompress_frame_down_51
  147 D1:CA85 91 D3 D1 -  	.dl decompress_frame_down_52
  148 D1:CA88 92 D3 D1 -  	.dl decompress_frame_down_53
  149 D1:CA8B 93 D3 D1 -  	.dl decompress_frame_down_54
  150 D1:CA8E 94 D3 D1 -  	.dl decompress_frame_down_55
  151 D1:CA91 95 D3 D1 -  	.dl decompress_frame_down_56
  152 D1:CA94 96 D3 D1 -  	.dl decompress_frame_down_57
  153 D1:CA97 97 D3 D1 -  	.dl decompress_frame_down_58
  154 D1:CA9A 98 D3 D1 -  	.dl decompress_frame_down_59
  155 D1:CA9D 99 D3 D1 -  	.dl decompress_frame_down_60
  156 D1:CAA0 9A D3 D1 -  	.dl decompress_frame_down_61
  157 D1:CAA3 9B D3 D1 -  	.dl decompress_frame_down_62
  158 D1:CAA6 9C D3 D1 -  	.dl decompress_frame_down_63
  159 D1:CAA9 9D D3 D1 -  	.dl decompress_frame_down_64
  160 D1:CAAC 9E D3 D1 -  	.dl decompress_frame_down_65
  161 D1:CAAF 9F D3 D1 -  	.dl decompress_frame_down_66
  162 D1:CAB2 A0 D3 D1 -  	.dl decompress_frame_down_67
  163 D1:CAB5 A1 D3 D1 -  	.dl decompress_frame_down_68
  164 D1:CAB8 A2 D3 D1 -  	.dl decompress_frame_down_69
  165 D1:CABB A3 D3 D1 -  	.dl decompress_frame_down_70
  166 D1:CABE A4 D3 D1 -  	.dl decompress_frame_down_71
  167 D1:CAC1 A5 D3 D1 -  	.dl decompress_frame_down_72
  168 D1:CAC4 A6 D3 D1 -  	.dl decompress_frame_down_73
  169 D1:CAC7 A7 D3 D1 -  	.dl decompress_frame_down_74
  170 D1:CACA A8 D3 D1 -  	.dl decompress_frame_down_75
  171 D1:CACD A9 D3 D1 -  	.dl decompress_frame_down_76
  172 D1:CAD0 AA D3 D1 -  	.dl decompress_frame_down_77
  173 D1:CAD3 AB D3 D1 -  	.dl decompress_frame_down_78
  174 D1:CAD6 AC D3 D1 -  	.dl decompress_frame_down_79
  175 D1:CAD9 AD D3 D1 -  	.dl decompress_frame_down_80
  176 D1:CADC AE D3 D1 -  	.dl decompress_frame_down_81
  177 D1:CADF AF D3 D1 -  	.dl decompress_frame_down_82
  178 D1:CAE2 B0 D3 D1 -  	.dl decompress_frame_down_83
  179 D1:CAE5 B1 D3 D1 -  	.dl decompress_frame_down_84
  180 D1:CAE8 B2 D3 D1 -  	.dl decompress_frame_down_85
  181 D1:CAEB B3 D3 D1 -  	.dl decompress_frame_down_86
  182 D1:CAEE B4 D3 D1 -  	.dl decompress_frame_down_87
  183 D1:CAF1 B5 D3 D1 -  	.dl decompress_frame_down_88
  184 D1:CAF4 B6 D3 D1 -  	.dl decompress_frame_down_89
  185 D1:CAF7 -  -  -  -  
  186 D1:CAF7 -  -  -  -  
  187 D1:CAF7 -  -  -  -  
  188 D1:CAF7 -  -  -  -  decompress_frame_up_pre2:
  189 D1:CAF7 07 -  -  -  	.db 7
  190 D1:CAF8 EA E4 D1 C0 
              01 D4 -  -  	.dl Clouds_0, Clouds_0_Fast_F
  191 D1:CAFE A0 -  -  -  	.db %10100000
  192 D1:CAFF 13 E5 D1 26 
              02 D4 -  -  	.dl Clouds_1, Clouds_1_Fast_F
  193 D1:CB05 A0 -  -  -  	.db %10100000
  194 D1:CB06 66 E5 D1 8A 
              02 D4 -  -  	.dl Clouds_4, Clouds_4_Fast_F
  195 D1:CB0C A0 -  -  -  	.db %10100000
  196 D1:CB0D 3A E5 D1 CA 
              02 D4 -  -  	.dl Clouds_3, Clouds_3_Fast_F
  197 D1:CB13 A0 -  -  -  	.db %10100000
  198 D1:CB14 B0 E3 D1 36 
              03 D4 -  -  	.dl Clouds_2, Clouds_2_Fast_F
  199 D1:CB1A A0 -  -  -  	.db %10100000
  200 D1:CB1B 7D E5 D1 E7 
              03 D4 -  -  	.dl Frog_0, Frog_0_Slow
  201 D1:CB21 00 -  -  -  	.db %00000000
  202 D1:CB22 7D E5 D1 17 
              05 D4 -  -  	.dl Frog_0, Frog_0_Slow_O
  203 D1:CB28 40 -  -  -  	.db %01000000
  204 D1:CB29 -  -  -  -  
  205 D1:CB29 -  -  -  -  decompress_frame_up_pre1:
  206 D1:CB29 40 -  -  -  	.db 64
  207 D1:CB2A 18 D9 D1 46 
              06 D4 -  -  	.dl Branches_8, Branches_8_Fast_F
  208 D1:CB30 A0 -  -  -  	.db %10100000
  209 D1:CB31 F4 D8 D1 A5 
              06 D4 -  -  	.dl Branches_15, Branches_15_Slow
  210 D1:CB37 00 -  -  -  	.db %00000000
  211 D1:CB38 BD DC D1 16 
              07 D4 -  -  	.dl Branches_3, Branches_3_Fast
  212 D1:CB3E 80 -  -  -  	.db %10000000
  213 D1:CB3F CE DA D1 BD 
              07 D4 -  -  	.dl Vines_2, Vines_2_Slow_F
  214 D1:CB45 20 -  -  -  	.db %00100000
  215 D1:CB46 0C DC D1 97 
              08 D4 -  -  	.dl Vines_1, Vines_1_Slow
  216 D1:CB4C 00 -  -  -  	.db %00000000
  217 D1:CB4D A2 DB D1 27 
              09 D4 -  -  	.dl Vines_9, Vines_9_Slow_O
  218 D1:CB53 40 -  -  -  	.db %01000000
  219 D1:CB54 09 E0 D1 D8 
              09 D4 -  -  	.dl Tree_0, Tree_0_Fast_F
  220 D1:CB5A A0 -  -  -  	.db %10100000
  221 D1:CB5B 9C DF D1 D4 
              0A D4 -  -  	.dl Tree_3, Tree_3_Fast
  222 D1:CB61 80 -  -  -  	.db %10000000
  223 D1:CB62 74 E0 D1 D6 
              0B D4 -  -  	.dl Tree_8, Tree_8_Fast
  224 D1:CB68 80 -  -  -  	.db %10000000
  225 D1:CB69 C2 DE D1 D8 
              0C D4 -  -  	.dl Tree_9, Tree_9_Fast_F
  226 D1:CB6F A0 -  -  -  	.db %10100000
  227 D1:CB70 74 E0 D1 DA 
              0D D4 -  -  	.dl Tree_8, Tree_8_Fast_F
  228 D1:CB76 A0 -  -  -  	.db %10100000
  229 D1:CB77 E8 DD D1 DC 
              0E D4 -  -  	.dl Tree_4, Tree_4_Fast_F
  230 D1:CB7D A0 -  -  -  	.db %10100000
  231 D1:CB7E E1 E0 D1 DE 
              0F D4 -  -  	.dl Tree_1, Tree_1_Fast
  232 D1:CB84 80 -  -  -  	.db %10000000
  233 D1:CB85 09 E0 D1 DC 
              10 D4 -  -  	.dl Tree_0, Tree_0_Fast
  234 D1:CB8B 80 -  -  -  	.db %10000000
  235 D1:CB8C E1 E0 D1 D8 
              11 D4 -  -  	.dl Tree_1, Tree_1_Fast_F
  236 D1:CB92 A0 -  -  -  	.db %10100000
  237 D1:CB93 2F DF D1 D6 
              12 D4 -  -  	.dl Tree_6, Tree_6_Fast
  238 D1:CB99 80 -  -  -  	.db %10000000
  239 D1:CB9A 4D E1 D1 D8 
              13 D4 -  -  	.dl Tree_10, Tree_10_Fast
  240 D1:CBA0 80 -  -  -  	.db %10000000
  241 D1:CBA1 55 DE D1 DA 
              14 D4 -  -  	.dl Tree_7, Tree_7_Fast_F
  242 D1:CBA7 A0 -  -  -  	.db %10100000
  243 D1:CBA8 BA E1 D1 DC 
              15 D4 -  -  	.dl Tree_5, Tree_5_Fast
  244 D1:CBAE 80 -  -  -  	.db %10000000
  245 D1:CBAF 27 E2 D1 DE 
              16 D4 -  -  	.dl Tree_11, Tree_11_Fast
  246 D1:CBB5 80 -  -  -  	.db %10000000
  247 D1:CBB6 BA E1 D1 E0 
              17 D4 -  -  	.dl Tree_5, Tree_5_Fast_F
  248 D1:CBBC A0 -  -  -  	.db %10100000
  249 D1:CBBD 7D DD D1 E2 
              18 D4 -  -  	.dl Tree_2, Tree_2_Fast_F
  250 D1:CBC3 A0 -  -  -  	.db %10100000
  251 D1:CBC4 27 E2 D1 DE 
              19 D4 -  -  	.dl Tree_11, Tree_11_Fast_F
  252 D1:CBCA A0 -  -  -  	.db %10100000
  253 D1:CBCB 94 E2 D1 E0 
              1A D4 -  -  	.dl Branches_1, Branches_1_Fast
  254 D1:CBD1 80 -  -  -  	.db %10000000
  255 D1:CBD2 1D DD D1 79 
              1B D4 -  -  	.dl Branches_2, Branches_2_Slow_O
  256 D1:CBD8 40 -  -  -  	.db %01000000
  257 D1:CBD9 BD DC D1 59 
              1C D4 -  -  	.dl Branches_3, Branches_3_Slow_O
  258 D1:CBDF 40 -  -  -  	.db %01000000
  259 D1:CBE0 36 DC D1 33 
              1D D4 -  -  	.dl Branches_5, Branches_5_Slow_O
  260 D1:CBE6 40 -  -  -  	.db %01000000
  261 D1:CBE7 0F D8 D1 03 
              1E D4 -  -  	.dl Leaves_3, Leaves_3_Slow_O
  262 D1:CBED 40 -  -  -  	.db %01000000
  263 D1:CBEE EF E2 D1 6F 
              1E D4 -  -  	.dl Vines_7, Vines_7_Slow
  264 D1:CBF4 00 -  -  -  	.db %00000000
  265 D1:CBF5 55 DB D1 2F 
              1F D4 -  -  	.dl Vines_5, Vines_5_Slow_O_F
  266 D1:CBFB 60 -  -  -  	.db %01100000
  267 D1:CBFC 15 DB D1 1D 
              20 D4 -  -  	.dl Vines_3, Vines_3_Slow_O_F
  268 D1:CC02 60 -  -  -  	.db %01100000
  269 D1:CC03 D5 DB D1 D3 
              20 D4 -  -  	.dl Vines_4, Vines_4_Slow_O
  270 D1:CC09 40 -  -  -  	.db %01000000
  271 D1:CC0A 1B E3 D1 85 
              21 D4 -  -  	.dl Vines_10, Vines_10_Slow
  272 D1:CC10 00 -  -  -  	.db %00000000
  273 D1:CC11 EF E2 D1 47 
              22 D4 -  -  	.dl Vines_7, Vines_7_Slow_F
  274 D1:CC17 20 -  -  -  	.db %00100000
  275 D1:CC18 CE DA D1 07 
              23 D4 -  -  	.dl Vines_2, Vines_2_Slow
  276 D1:CC1E 00 -  -  -  	.db %00000000
  277 D1:CC1F 83 D9 D1 E3 
              23 D4 -  -  	.dl Leaves_2, Leaves_2_Slow
  278 D1:CC25 00 -  -  -  	.db %00000000
  279 D1:CC26 94 E2 D1 4C 
              24 D4 -  -  	.dl Branches_1, Branches_1_Fast_F
  280 D1:CC2C A0 -  -  -  	.db %10100000
  281 D1:CC2D 1D DD D1 E4 
              24 D4 -  -  	.dl Branches_2, Branches_2_Fast_F
  282 D1:CC33 A0 -  -  -  	.db %10100000
  283 D1:CC34 36 DC D1 8E 
              25 D4 -  -  	.dl Branches_5, Branches_5_Fast_F
  284 D1:CC3A A0 -  -  -  	.db %10100000
  285 D1:CC3B FF D9 D1 2F 
              26 D4 -  -  	.dl Branches_14, Branches_14_Slow
  286 D1:CC41 00 -  -  -  	.db %00000000
  287 D1:CC42 1B E3 D1 9B 
              26 D4 -  -  	.dl Vines_10, Vines_10_Slow_O
  288 D1:CC48 40 -  -  -  	.db %01000000
  289 D1:CC49 58 E3 D1 5A 
              27 D4 -  -  	.dl Branches_0, Branches_0_Fast
  290 D1:CC4F 80 -  -  -  	.db %10000000
  291 D1:CC50 B0 E3 D1 F2 
              27 D4 -  -  	.dl Clouds_2, Clouds_2_Fast
  292 D1:CC56 80 -  -  -  	.db %10000000
  293 D1:CC57 D4 E3 D1 A4 
              28 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast
  294 D1:CC5D 80 -  -  -  	.db %10000000
  295 D1:CC5E D4 E3 D1 2A 
              29 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast_F
  296 D1:CC64 A0 -  -  -  	.db %10100000
  297 D1:CC65 09 E4 D1 B0 
              29 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast
  298 D1:CC6B 80 -  -  -  	.db %10000000
  299 D1:CC6C 09 E4 D1 36 
              2A D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast_F
  300 D1:CC72 A0 -  -  -  	.db %10100000
  301 D1:CC73 57 E4 D1 BC 
              2A D4 -  -  	.dl GroundGrassSmall, GroundGrassSmall_Fast
  302 D1:CC79 80 -  -  -  	.db %10000000
  303 D1:CC7A 57 E4 D1 64 
              2B D4 -  -  	.dl GroundGrassSmall, GroundGrassSmall_Fast_F
  304 D1:CC80 A0 -  -  -  	.db %10100000
  305 D1:CC81 79 E4 D1 0C 
              2C D4 -  -  	.dl Tree_16, Tree_16_Fast
  306 D1:CC87 80 -  -  -  	.db %10000000
  307 D1:CC88 91 E4 D1 61 
              2C D4 -  -  	.dl Tree_17, Tree_17_Slow_O
  308 D1:CC8E 40 -  -  -  	.db %01000000
  309 D1:CC8F 91 E4 D1 C9 
              2C D4 -  -  	.dl Tree_17, Tree_17_Slow_O_F
  310 D1:CC95 60 -  -  -  	.db %01100000
  311 D1:CC96 A2 E4 D1 2E 
              2D D4 -  -  	.dl Leaves_8, Leaves_8_Fast
  312 D1:CC9C 80 -  -  -  	.db %10000000
  313 D1:CC9D 79 E4 D1 B5 
              2D D4 -  -  	.dl Tree_16, Tree_16_Slow_O
  314 D1:CCA3 40 -  -  -  	.db %01000000
  315 D1:CCA4 91 E4 D1 3B 
              2E D4 -  -  	.dl Tree_17, Tree_17_Slow_F
  316 D1:CCAA 20 -  -  -  	.db %00100000
  317 D1:CCAB D9 E4 D1 A3 
              2E D4 -  -  	.dl Tree_18, Tree_18_Slow_O
  318 D1:CCB1 40 -  -  -  	.db %01000000
  319 D1:CCB2 91 E4 D1 07 
              2F D4 -  -  	.dl Tree_17, Tree_17_Slow
  320 D1:CCB8 00 -  -  -  	.db %00000000
  321 D1:CCB9 D9 E4 D1 6D 
              2F D4 -  -  	.dl Tree_18, Tree_18_Slow_F
  322 D1:CCBF 20 -  -  -  	.db %00100000
  323 D1:CCC0 79 E4 D1 D1 
              2F D4 -  -  	.dl Tree_16, Tree_16_Slow_O_F
  324 D1:CCC6 60 -  -  -  	.db %01100000
  325 D1:CCC7 83 D9 D1 57 
              30 D4 -  -  	.dl Leaves_2, Leaves_2_Slow_F
  326 D1:CCCD 20 -  -  -  	.db %00100000
  327 D1:CCCE EA E4 D1 BE 
              30 D4 -  -  	.dl Clouds_0, Clouds_0_Fast
  328 D1:CCD4 80 -  -  -  	.db %10000000
  329 D1:CCD5 13 E5 D1 24 
              31 D4 -  -  	.dl Clouds_1, Clouds_1_Fast
  330 D1:CCDB 80 -  -  -  	.db %10000000
  331 D1:CCDC 3A E5 D1 88 
              31 D4 -  -  	.dl Clouds_3, Clouds_3_Fast
  332 D1:CCE2 80 -  -  -  	.db %10000000
  333 D1:CCE3 66 E5 D1 F4 
              31 D4 -  -  	.dl Clouds_4, Clouds_4_Fast
  334 D1:CCE9 80 -  -  -  	.db %10000000
  335 D1:CCEA -  -  -  -  
  336 D1:CCEA -  -  -  -  decompress_frame_up_0:
  337 D1:CCEA 40 -  -  -  	.db 64
  338 D1:CCEB 06 D6 D1 34 
              32 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast
  339 D1:CCF1 80 -  -  -  	.db %10000000
  340 D1:CCF2 06 D6 D1 E6 
              32 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast_F
  341 D1:CCF8 A0 -  -  -  	.db %10100000
  342 D1:CCF9 4B D6 D1 98 
              33 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast
  343 D1:CCFF 80 -  -  -  	.db %10000000
  344 D1:CD00 4B D6 D1 18 
              34 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast_F
  345 D1:CD06 A0 -  -  -  	.db %10100000
  346 D1:CD07 95 D6 D1 98 
              34 D4 -  -  	.dl GroundGrassL4, GroundGrassL4_Fast
  347 D1:CD0D 80 -  -  -  	.db %10000000
  348 D1:CD0E B5 D6 D1 22 
              35 D4 -  -  	.dl GroundGrassL2, GroundGrassL2_Fast
  349 D1:CD14 80 -  -  -  	.db %10000000
  350 D1:CD15 CD D6 D1 7A 
              35 D4 -  -  	.dl GroundGrassL5, GroundGrassL5_Fast
  351 D1:CD1B 80 -  -  -  	.db %10000000
  352 D1:CD1C F1 D6 D1 FC 
              35 D4 -  -  	.dl GroundGrassL3, GroundGrassL3_Fast
  353 D1:CD22 80 -  -  -  	.db %10000000
  354 D1:CD23 0E D7 D1 56 
              36 D4 -  -  	.dl GroundGrassL1, GroundGrassL1_Fast
  355 D1:CD29 80 -  -  -  	.db %10000000
  356 D1:CD2A 0E D7 D1 C8 
              36 D4 -  -  	.dl GroundGrassL1, GroundGrassL1_Fast_F
  357 D1:CD30 A0 -  -  -  	.db %10100000
  358 D1:CD31 F1 D6 D1 3A 
              37 D4 -  -  	.dl GroundGrassL3, GroundGrassL3_Fast_F
  359 D1:CD37 A0 -  -  -  	.db %10100000
  360 D1:CD38 2A D7 D1 93 
              37 D4 -  -  	.dl Branches_10, Branches_10_Slow_O
  361 D1:CD3E 40 -  -  -  	.db %01000000
  362 D1:CD3F 74 D7 D1 38 
              38 D4 -  -  	.dl Branches_9, Branches_9_Fast
  363 D1:CD45 80 -  -  -  	.db %10000000
  364 D1:CD46 C4 D7 D1 BB 
              38 D4 -  -  	.dl Branches_16, Branches_16_Slow
  365 D1:CD4C 00 -  -  -  	.db %00000000
  366 D1:CD4D F1 D7 D1 27 
              39 D4 -  -  	.dl Branches_13, Branches_13_Slow_O
  367 D1:CD53 40 -  -  -  	.db %01000000
  368 D1:CD54 0F D8 D1 6D 
              39 D4 -  -  	.dl Leaves_3, Leaves_3_Slow
  369 D1:CD5A 00 -  -  -  	.db %00000000
  370 D1:CD5B 2E D8 D1 DA 
              39 D4 -  -  	.dl Leaves_7, Leaves_7_Fast
  371 D1:CD61 80 -  -  -  	.db %10000000
  372 D1:CD62 2E D8 D1 62 
              3A D4 -  -  	.dl Leaves_7, Leaves_7_Fast_F
  373 D1:CD68 A0 -  -  -  	.db %10100000
  374 D1:CD69 65 D8 D1 E9 
              3A D4 -  -  	.dl Branches_6, Branches_6_Slow
  375 D1:CD6F 00 -  -  -  	.db %00000000
  376 D1:CD70 2A D7 D1 87 
              3B D4 -  -  	.dl Branches_10, Branches_10_Slow_O_F
  377 D1:CD76 60 -  -  -  	.db %01100000
  378 D1:CD77 AF D8 D1 2B 
              3C D4 -  -  	.dl Branches_7, Branches_7_Slow_O
  379 D1:CD7D 40 -  -  -  	.db %01000000
  380 D1:CD7E C4 D7 D1 CF 
              3C D4 -  -  	.dl Branches_16, Branches_16_Slow_O
  381 D1:CD84 40 -  -  -  	.db %01000000
  382 D1:CD85 F4 D8 D1 3B 
              3D D4 -  -  	.dl Branches_15, Branches_15_Slow_O
  383 D1:CD8B 40 -  -  -  	.db %01000000
  384 D1:CD8C 18 D9 D1 A7 
              3D D4 -  -  	.dl Branches_8, Branches_8_Slow_O_F
  385 D1:CD92 60 -  -  -  	.db %01100000
  386 D1:CD93 49 D9 D1 2F 
              3E D4 -  -  	.dl Branches_12, Branches_12_Slow_O
  387 D1:CD99 40 -  -  -  	.db %01000000
  388 D1:CD9A F4 D8 D1 A9 
              3E D4 -  -  	.dl Branches_15, Branches_15_Slow_O_F
  389 D1:CDA0 60 -  -  -  	.db %01100000
  390 D1:CDA1 83 D9 D1 19 
              3F D4 -  -  	.dl Leaves_2, Leaves_2_Slow_O
  391 D1:CDA7 40 -  -  -  	.db %01000000
  392 D1:CDA8 9C D9 D1 83 
              3F D4 -  -  	.dl Leaves_4, Leaves_4_Slow
  393 D1:CDAE 00 -  -  -  	.db %00000000
  394 D1:CDAF 9C D9 D1 0D 
              40 D4 -  -  	.dl Leaves_4, Leaves_4_Slow_F
  395 D1:CDB5 20 -  -  -  	.db %00100000
  396 D1:CDB6 AF D8 D1 98 
              40 D4 -  -  	.dl Branches_7, Branches_7_Fast
  397 D1:CDBC 80 -  -  -  	.db %10000000
  398 D1:CDBD 18 D9 D1 12 
              41 D4 -  -  	.dl Branches_8, Branches_8_Fast
  399 D1:CDC3 80 -  -  -  	.db %10000000
  400 D1:CDC4 2A D7 D1 70 
              41 D4 -  -  	.dl Branches_10, Branches_10_Fast_F
  401 D1:CDCA A0 -  -  -  	.db %10100000
  402 D1:CDCB C1 D9 D1 E8 
              41 D4 -  -  	.dl Branches_11, Branches_11_Fast_F
  403 D1:CDD1 A0 -  -  -  	.db %10100000
  404 D1:CDD2 C4 D7 D1 4F 
              42 D4 -  -  	.dl Branches_16, Branches_16_Slow_O_F
  405 D1:CDD8 60 -  -  -  	.db %01100000
  406 D1:CDD9 F1 D7 D1 BC 
              42 D4 -  -  	.dl Branches_13, Branches_13_Fast_F
  407 D1:CDDF A0 -  -  -  	.db %10100000
  408 D1:CDE0 FF D9 D1 ED 
              42 D4 -  -  	.dl Branches_14, Branches_14_Slow_O
  409 D1:CDE6 40 -  -  -  	.db %01000000
  410 D1:CDE7 F4 D8 D1 5D 
              43 D4 -  -  	.dl Branches_15, Branches_15_Slow_F
  411 D1:CDED 20 -  -  -  	.db %00100000
  412 D1:CDEE 1E DA D1 C9 
              43 D4 -  -  	.dl Leaves_6, Leaves_6_Slow
  413 D1:CDF4 00 -  -  -  	.db %00000000
  414 D1:CDF5 42 DA D1 4C 
              44 D4 -  -  	.dl Branches_4, Branches_4_Fast_F
  415 D1:CDFB A0 -  -  -  	.db %10100000
  416 D1:CDFC AF D8 D1 EA 
              44 D4 -  -  	.dl Branches_7, Branches_7_Fast_F
  417 D1:CE02 A0 -  -  -  	.db %10100000
  418 D1:CE03 49 D9 D1 64 
              45 D4 -  -  	.dl Branches_12, Branches_12_Fast_F
  419 D1:CE09 A0 -  -  -  	.db %10100000
  420 D1:CE0A 9C D9 D1 BF 
              45 D4 -  -  	.dl Leaves_4, Leaves_4_Slow_O
  421 D1:CE10 40 -  -  -  	.db %01000000
  422 D1:CE11 18 D9 D1 4D 
              46 D4 -  -  	.dl Branches_8, Branches_8_Slow_O
  423 D1:CE17 40 -  -  -  	.db %01000000
  424 D1:CE18 2A D7 D1 D6 
              46 D4 -  -  	.dl Branches_10, Branches_10_Fast
  425 D1:CE1E 80 -  -  -  	.db %10000000
  426 D1:CE1F 1E DA D1 4D 
              47 D4 -  -  	.dl Leaves_6, Leaves_6_Slow_O
  427 D1:CE25 40 -  -  -  	.db %01000000
  428 D1:CE26 0F D8 D1 D1 
              47 D4 -  -  	.dl Leaves_3, Leaves_3_Slow_F
  429 D1:CE2C 20 -  -  -  	.db %00100000
  430 D1:CE2D A0 DA D1 3D 
              48 D4 -  -  	.dl Vines_8, Vines_8_Slow
  431 D1:CE33 00 -  -  -  	.db %00000000
  432 D1:CE34 CE DA D1 07 
              49 D4 -  -  	.dl Vines_2, Vines_2_Slow_O
  433 D1:CE3A 40 -  -  -  	.db %01000000
  434 D1:CE3B 15 DB D1 DF 
              49 D4 -  -  	.dl Vines_3, Vines_3_Slow
  435 D1:CE41 00 -  -  -  	.db %00000000
  436 D1:CE42 55 DB D1 8F 
              4A D4 -  -  	.dl Vines_5, Vines_5_Slow
  437 D1:CE48 00 -  -  -  	.db %00000000
  438 D1:CE49 A2 DB D1 81 
              4B D4 -  -  	.dl Vines_9, Vines_9_Slow
  439 D1:CE4F 00 -  -  -  	.db %00000000
  440 D1:CE50 D5 DB D1 33 
              4C D4 -  -  	.dl Vines_4, Vines_4_Slow_F
  441 D1:CE56 20 -  -  -  	.db %00100000
  442 D1:CE57 0C DC D1 EB 
              4C D4 -  -  	.dl Vines_1, Vines_1_Slow_O
  443 D1:CE5D 40 -  -  -  	.db %01000000
  444 D1:CE5E A2 DB D1 77 
              4D D4 -  -  	.dl Vines_9, Vines_9_Slow_O_F
  445 D1:CE64 60 -  -  -  	.db %01100000
  446 D1:CE65 15 DB D1 29 
              4E D4 -  -  	.dl Vines_3, Vines_3_Slow_F
  447 D1:CE6B 20 -  -  -  	.db %00100000
  448 D1:CE6C A0 DA D1 D9 
              4E D4 -  -  	.dl Vines_8, Vines_8_Slow_F
  449 D1:CE72 20 -  -  -  	.db %00100000
  450 D1:CE73 74 D7 D1 A3 
              4F D4 -  -  	.dl Branches_9, Branches_9_Slow_O
  451 D1:CE79 40 -  -  -  	.db %01000000
  452 D1:CE7A CE DA D1 53 
              50 D4 -  -  	.dl Vines_2, Vines_2_Slow_O_F
  453 D1:CE80 60 -  -  -  	.db %01100000
  454 D1:CE81 7D DD D1 2C 
              51 D4 -  -  	.dl Tree_2, Tree_2_Fast
  455 D1:CE87 80 -  -  -  	.db %10000000
  456 D1:CE88 E8 DD D1 28 
              52 D4 -  -  	.dl Tree_4, Tree_4_Fast
  457 D1:CE8E 80 -  -  -  	.db %10000000
  458 D1:CE8F 55 DE D1 2A 
              53 D4 -  -  	.dl Tree_7, Tree_7_Fast
  459 D1:CE95 80 -  -  -  	.db %10000000
  460 D1:CE96 C2 DE D1 2C 
              54 D4 -  -  	.dl Tree_9, Tree_9_Fast
  461 D1:CE9C 80 -  -  -  	.db %10000000
  462 D1:CE9D 2F DF D1 2E 
              55 D4 -  -  	.dl Tree_6, Tree_6_Fast_F
  463 D1:CEA3 A0 -  -  -  	.db %10100000
  464 D1:CEA4 9C DF D1 30 
              56 D4 -  -  	.dl Tree_3, Tree_3_Fast_F
  465 D1:CEAA A0 -  -  -  	.db %10100000
  466 D1:CEAB -  -  -  -  
  467 D1:CEAB -  -  -  -  decompress_frame_up_1:
  468 D1:CEAB 00 -  -  -  	.db 0
  469 D1:CEAC -  -  -  -  
  470 D1:CEAC -  -  -  -  decompress_frame_up_2:
  471 D1:CEAC 04 -  -  -  	.db 4
  472 D1:CEAD 94 E2 D1 31 
              57 D4 -  -  	.dl Branches_1, Branches_1_Slow_O
  473 D1:CEB3 40 -  -  -  	.db %01000000
  474 D1:CEB4 42 DA D1 F7 
              57 D4 -  -  	.dl Branches_4, Branches_4_Slow_O
  475 D1:CEBA 40 -  -  -  	.db %01000000
  476 D1:CEBB 0F D8 D1 C3 
              58 D4 -  -  	.dl Leaves_3, Leaves_3_Slow_O_F
  477 D1:CEC1 60 -  -  -  	.db %01100000
  478 D1:CEC2 EF E2 D1 31 
              59 D4 -  -  	.dl Vines_7, Vines_7_Slow_O
  479 D1:CEC8 40 -  -  -  	.db %01000000
  480 D1:CEC9 -  -  -  -  
  481 D1:CEC9 -  -  -  -  decompress_frame_up_3:
  482 D1:CEC9 00 -  -  -  	.db 0
  483 D1:CECA -  -  -  -  
  484 D1:CECA -  -  -  -  decompress_frame_up_4:
  485 D1:CECA 05 -  -  -  	.db 5
  486 D1:CECB A0 DA D1 F5 
              59 D4 -  -  	.dl Vines_8, Vines_8_Slow_O
  487 D1:CED1 40 -  -  -  	.db %01000000
  488 D1:CED2 A0 DA D1 BB 
              5A D4 -  -  	.dl Vines_8, Vines_8_Slow_O_F
  489 D1:CED8 60 -  -  -  	.db %01100000
  490 D1:CED9 94 DC D1 81 
              5B D4 -  -  	.dl Vines_6, Vines_6_Slow
  491 D1:CEDF 00 -  -  -  	.db %00000000
  492 D1:CEE0 58 E3 D1 38 
              5C D4 -  -  	.dl Branches_0, Branches_0_Fast_F
  493 D1:CEE6 A0 -  -  -  	.db %10100000
  494 D1:CEE7 74 D7 D1 D0 
              5C D4 -  -  	.dl Branches_9, Branches_9_Fast_F
  495 D1:CEED A0 -  -  -  	.db %10100000
  496 D1:CEEE -  -  -  -  
  497 D1:CEEE -  -  -  -  decompress_frame_up_5:
  498 D1:CEEE 02 -  -  -  	.db 2
  499 D1:CEEF 36 DC D1 98 
              34 D4 -  -  	.dl Branches_5, Branches_5_Fast
  500 D1:CEF5 80 -  -  -  	.db %10000000
  501 D1:CEF6 42 DA D1 38 
              35 D4 -  -  	.dl Branches_4, Branches_4_Fast
  502 D1:CEFC 80 -  -  -  	.db %10000000
  503 D1:CEFD -  -  -  -  
  504 D1:CEFD -  -  -  -  decompress_frame_up_6:
  505 D1:CEFD 02 -  -  -  	.db 2
  506 D1:CEFE 1D DD D1 D6 
              35 D4 -  -  	.dl Branches_2, Branches_2_Fast
  507 D1:CF04 80 -  -  -  	.db %10000000
  508 D1:CF05 15 DB D1 7F 
              36 D4 -  -  	.dl Vines_3, Vines_3_Slow_O
  509 D1:CF0B 40 -  -  -  	.db %01000000
  510 D1:CF0C -  -  -  -  
  511 D1:CF0C -  -  -  -  decompress_frame_up_7:
  512 D1:CF0C 00 -  -  -  	.db 0
  513 D1:CF0D -  -  -  -  
  514 D1:CF0D -  -  -  -  decompress_frame_up_8:
  515 D1:CF0D 00 -  -  -  	.db 0
  516 D1:CF0E -  -  -  -  
  517 D1:CF0E -  -  -  -  decompress_frame_up_9:
  518 D1:CF0E 00 -  -  -  	.db 0
  519 D1:CF0F -  -  -  -  
  520 D1:CF0F -  -  -  -  decompress_frame_up_10:
  521 D1:CF0F 00 -  -  -  	.db 0
  522 D1:CF10 -  -  -  -  
  523 D1:CF10 -  -  -  -  decompress_frame_up_11:
  524 D1:CF10 00 -  -  -  	.db 0
  525 D1:CF11 -  -  -  -  
  526 D1:CF11 -  -  -  -  decompress_frame_up_12:
  527 D1:CF11 00 -  -  -  	.db 0
  528 D1:CF12 -  -  -  -  
  529 D1:CF12 -  -  -  -  decompress_frame_up_13:
  530 D1:CF12 00 -  -  -  	.db 0
  531 D1:CF13 -  -  -  -  
  532 D1:CF13 -  -  -  -  decompress_frame_up_14:
  533 D1:CF13 00 -  -  -  	.db 0
  534 D1:CF14 -  -  -  -  
  535 D1:CF14 -  -  -  -  decompress_frame_up_15:
  536 D1:CF14 00 -  -  -  	.db 0
  537 D1:CF15 -  -  -  -  
  538 D1:CF15 -  -  -  -  decompress_frame_up_16:
  539 D1:CF15 00 -  -  -  	.db 0
  540 D1:CF16 -  -  -  -  
  541 D1:CF16 -  -  -  -  decompress_frame_up_17:
  542 D1:CF16 00 -  -  -  	.db 0
  543 D1:CF17 -  -  -  -  
  544 D1:CF17 -  -  -  -  decompress_frame_up_18:
  545 D1:CF17 00 -  -  -  	.db 0
  546 D1:CF18 -  -  -  -  
  547 D1:CF18 -  -  -  -  decompress_frame_up_19:
  548 D1:CF18 00 -  -  -  	.db 0
  549 D1:CF19 -  -  -  -  
  550 D1:CF19 -  -  -  -  decompress_frame_up_20:
  551 D1:CF19 00 -  -  -  	.db 0
  552 D1:CF1A -  -  -  -  
  553 D1:CF1A -  -  -  -  decompress_frame_up_21:
  554 D1:CF1A 00 -  -  -  	.db 0
  555 D1:CF1B -  -  -  -  
  556 D1:CF1B -  -  -  -  decompress_frame_up_22:
  557 D1:CF1B 00 -  -  -  	.db 0
  558 D1:CF1C -  -  -  -  
  559 D1:CF1C -  -  -  -  decompress_frame_up_23:
  560 D1:CF1C 00 -  -  -  	.db 0
  561 D1:CF1D -  -  -  -  
  562 D1:CF1D -  -  -  -  decompress_frame_up_24:
  563 D1:CF1D 00 -  -  -  	.db 0
  564 D1:CF1E -  -  -  -  
  565 D1:CF1E -  -  -  -  decompress_frame_up_25:
  566 D1:CF1E 00 -  -  -  	.db 0
  567 D1:CF1F -  -  -  -  
  568 D1:CF1F -  -  -  -  decompress_frame_up_26:
  569 D1:CF1F 00 -  -  -  	.db 0
  570 D1:CF20 -  -  -  -  
  571 D1:CF20 -  -  -  -  decompress_frame_up_27:
  572 D1:CF20 00 -  -  -  	.db 0
  573 D1:CF21 -  -  -  -  
  574 D1:CF21 -  -  -  -  decompress_frame_up_28:
  575 D1:CF21 00 -  -  -  	.db 0
  576 D1:CF22 -  -  -  -  
  577 D1:CF22 -  -  -  -  decompress_frame_up_29:
  578 D1:CF22 00 -  -  -  	.db 0
  579 D1:CF23 -  -  -  -  
  580 D1:CF23 -  -  -  -  decompress_frame_up_30:
  581 D1:CF23 00 -  -  -  	.db 0
  582 D1:CF24 -  -  -  -  
  583 D1:CF24 -  -  -  -  decompress_frame_up_31:
  584 D1:CF24 00 -  -  -  	.db 0
  585 D1:CF25 -  -  -  -  
  586 D1:CF25 -  -  -  -  decompress_frame_up_32:
  587 D1:CF25 00 -  -  -  	.db 0
  588 D1:CF26 -  -  -  -  
  589 D1:CF26 -  -  -  -  decompress_frame_up_33:
  590 D1:CF26 00 -  -  -  	.db 0
  591 D1:CF27 -  -  -  -  
  592 D1:CF27 -  -  -  -  decompress_frame_up_34:
  593 D1:CF27 00 -  -  -  	.db 0
  594 D1:CF28 -  -  -  -  
  595 D1:CF28 -  -  -  -  decompress_frame_up_35:
  596 D1:CF28 00 -  -  -  	.db 0
  597 D1:CF29 -  -  -  -  
  598 D1:CF29 -  -  -  -  decompress_frame_up_36:
  599 D1:CF29 00 -  -  -  	.db 0
  600 D1:CF2A -  -  -  -  
  601 D1:CF2A -  -  -  -  decompress_frame_up_37:
  602 D1:CF2A 00 -  -  -  	.db 0
  603 D1:CF2B -  -  -  -  
  604 D1:CF2B -  -  -  -  decompress_frame_up_38:
  605 D1:CF2B 00 -  -  -  	.db 0
  606 D1:CF2C -  -  -  -  
  607 D1:CF2C -  -  -  -  decompress_frame_up_39:
  608 D1:CF2C 00 -  -  -  	.db 0
  609 D1:CF2D -  -  -  -  
  610 D1:CF2D -  -  -  -  decompress_frame_up_40:
  611 D1:CF2D 00 -  -  -  	.db 0
  612 D1:CF2E -  -  -  -  
  613 D1:CF2E -  -  -  -  decompress_frame_up_41:
  614 D1:CF2E 00 -  -  -  	.db 0
  615 D1:CF2F -  -  -  -  
  616 D1:CF2F -  -  -  -  decompress_frame_up_42:
  617 D1:CF2F 00 -  -  -  	.db 0
  618 D1:CF30 -  -  -  -  
  619 D1:CF30 -  -  -  -  decompress_frame_up_43:
  620 D1:CF30 00 -  -  -  	.db 0
  621 D1:CF31 -  -  -  -  
  622 D1:CF31 -  -  -  -  decompress_frame_up_44:
  623 D1:CF31 00 -  -  -  	.db 0
  624 D1:CF32 -  -  -  -  
  625 D1:CF32 -  -  -  -  decompress_frame_up_45:
  626 D1:CF32 00 -  -  -  	.db 0
  627 D1:CF33 -  -  -  -  
  628 D1:CF33 -  -  -  -  decompress_frame_up_46:
  629 D1:CF33 00 -  -  -  	.db 0
  630 D1:CF34 -  -  -  -  
  631 D1:CF34 -  -  -  -  decompress_frame_up_47:
  632 D1:CF34 00 -  -  -  	.db 0
  633 D1:CF35 -  -  -  -  
  634 D1:CF35 -  -  -  -  decompress_frame_up_48:
  635 D1:CF35 00 -  -  -  	.db 0
  636 D1:CF36 -  -  -  -  
  637 D1:CF36 -  -  -  -  decompress_frame_up_49:
  638 D1:CF36 00 -  -  -  	.db 0
  639 D1:CF37 -  -  -  -  
  640 D1:CF37 -  -  -  -  decompress_frame_up_50:
  641 D1:CF37 00 -  -  -  	.db 0
  642 D1:CF38 -  -  -  -  
  643 D1:CF38 -  -  -  -  decompress_frame_up_51:
  644 D1:CF38 00 -  -  -  	.db 0
  645 D1:CF39 -  -  -  -  
  646 D1:CF39 -  -  -  -  decompress_frame_up_52:
  647 D1:CF39 00 -  -  -  	.db 0
  648 D1:CF3A -  -  -  -  
  649 D1:CF3A -  -  -  -  decompress_frame_up_53:
  650 D1:CF3A 00 -  -  -  	.db 0
  651 D1:CF3B -  -  -  -  
  652 D1:CF3B -  -  -  -  decompress_frame_up_54:
  653 D1:CF3B 00 -  -  -  	.db 0
  654 D1:CF3C -  -  -  -  
  655 D1:CF3C -  -  -  -  decompress_frame_up_55:
  656 D1:CF3C 00 -  -  -  	.db 0
  657 D1:CF3D -  -  -  -  
  658 D1:CF3D -  -  -  -  decompress_frame_up_56:
  659 D1:CF3D 00 -  -  -  	.db 0
  660 D1:CF3E -  -  -  -  
  661 D1:CF3E -  -  -  -  decompress_frame_up_57:
  662 D1:CF3E 00 -  -  -  	.db 0
  663 D1:CF3F -  -  -  -  
  664 D1:CF3F -  -  -  -  decompress_frame_up_58:
  665 D1:CF3F 00 -  -  -  	.db 0
  666 D1:CF40 -  -  -  -  
  667 D1:CF40 -  -  -  -  decompress_frame_up_59:
  668 D1:CF40 00 -  -  -  	.db 0
  669 D1:CF41 -  -  -  -  
  670 D1:CF41 -  -  -  -  decompress_frame_up_60:
  671 D1:CF41 00 -  -  -  	.db 0
  672 D1:CF42 -  -  -  -  
  673 D1:CF42 -  -  -  -  decompress_frame_up_61:
  674 D1:CF42 00 -  -  -  	.db 0
  675 D1:CF43 -  -  -  -  
  676 D1:CF43 -  -  -  -  decompress_frame_up_62:
  677 D1:CF43 00 -  -  -  	.db 0
  678 D1:CF44 -  -  -  -  
  679 D1:CF44 -  -  -  -  decompress_frame_up_63:
  680 D1:CF44 00 -  -  -  	.db 0
  681 D1:CF45 -  -  -  -  
  682 D1:CF45 -  -  -  -  decompress_frame_up_64:
  683 D1:CF45 00 -  -  -  	.db 0
  684 D1:CF46 -  -  -  -  
  685 D1:CF46 -  -  -  -  decompress_frame_up_65:
  686 D1:CF46 00 -  -  -  	.db 0
  687 D1:CF47 -  -  -  -  
  688 D1:CF47 -  -  -  -  decompress_frame_up_66:
  689 D1:CF47 00 -  -  -  	.db 0
  690 D1:CF48 -  -  -  -  
  691 D1:CF48 -  -  -  -  decompress_frame_up_67:
  692 D1:CF48 00 -  -  -  	.db 0
  693 D1:CF49 -  -  -  -  
  694 D1:CF49 -  -  -  -  decompress_frame_up_68:
  695 D1:CF49 00 -  -  -  	.db 0
  696 D1:CF4A -  -  -  -  
  697 D1:CF4A -  -  -  -  decompress_frame_up_69:
  698 D1:CF4A 00 -  -  -  	.db 0
  699 D1:CF4B -  -  -  -  
  700 D1:CF4B -  -  -  -  decompress_frame_up_70:
  701 D1:CF4B 00 -  -  -  	.db 0
  702 D1:CF4C -  -  -  -  
  703 D1:CF4C -  -  -  -  decompress_frame_up_71:
  704 D1:CF4C 00 -  -  -  	.db 0
  705 D1:CF4D -  -  -  -  
  706 D1:CF4D -  -  -  -  decompress_frame_up_72:
  707 D1:CF4D 00 -  -  -  	.db 0
  708 D1:CF4E -  -  -  -  
  709 D1:CF4E -  -  -  -  decompress_frame_up_73:
  710 D1:CF4E 00 -  -  -  	.db 0
  711 D1:CF4F -  -  -  -  
  712 D1:CF4F -  -  -  -  decompress_frame_up_74:
  713 D1:CF4F 00 -  -  -  	.db 0
  714 D1:CF50 -  -  -  -  
  715 D1:CF50 -  -  -  -  decompress_frame_up_75:
  716 D1:CF50 00 -  -  -  	.db 0
  717 D1:CF51 -  -  -  -  
  718 D1:CF51 -  -  -  -  decompress_frame_up_76:
  719 D1:CF51 00 -  -  -  	.db 0
  720 D1:CF52 -  -  -  -  
  721 D1:CF52 -  -  -  -  decompress_frame_up_77:
  722 D1:CF52 00 -  -  -  	.db 0
  723 D1:CF53 -  -  -  -  
  724 D1:CF53 -  -  -  -  decompress_frame_up_78:
  725 D1:CF53 00 -  -  -  	.db 0
  726 D1:CF54 -  -  -  -  
  727 D1:CF54 -  -  -  -  decompress_frame_up_79:
  728 D1:CF54 00 -  -  -  	.db 0
  729 D1:CF55 -  -  -  -  
  730 D1:CF55 -  -  -  -  decompress_frame_up_80:
  731 D1:CF55 00 -  -  -  	.db 0
  732 D1:CF56 -  -  -  -  
  733 D1:CF56 -  -  -  -  decompress_frame_up_81:
  734 D1:CF56 00 -  -  -  	.db 0
  735 D1:CF57 -  -  -  -  
  736 D1:CF57 -  -  -  -  decompress_frame_up_82:
  737 D1:CF57 00 -  -  -  	.db 0
  738 D1:CF58 -  -  -  -  
  739 D1:CF58 -  -  -  -  decompress_frame_up_83:
  740 D1:CF58 00 -  -  -  	.db 0
  741 D1:CF59 -  -  -  -  
  742 D1:CF59 -  -  -  -  decompress_frame_up_84:
  743 D1:CF59 00 -  -  -  	.db 0
  744 D1:CF5A -  -  -  -  
  745 D1:CF5A -  -  -  -  decompress_frame_up_85:
  746 D1:CF5A 00 -  -  -  	.db 0
  747 D1:CF5B -  -  -  -  
  748 D1:CF5B -  -  -  -  decompress_frame_up_86:
  749 D1:CF5B 00 -  -  -  	.db 0
  750 D1:CF5C -  -  -  -  
  751 D1:CF5C -  -  -  -  decompress_frame_up_87:
  752 D1:CF5C 00 -  -  -  	.db 0
  753 D1:CF5D -  -  -  -  
  754 D1:CF5D -  -  -  -  decompress_frame_up_88:
  755 D1:CF5D 00 -  -  -  	.db 0
  756 D1:CF5E -  -  -  -  
  757 D1:CF5E -  -  -  -  decompress_frame_up_89:
  758 D1:CF5E 00 -  -  -  	.db 0
  759 D1:CF5F -  -  -  -  
  760 D1:CF5F -  -  -  -  
  761 D1:CF5F -  -  -  -  
  762 D1:CF5F -  -  -  -  decompress_frame_down_0:
  763 D1:CF5F 00 -  -  -  	.db 0
  764 D1:CF60 -  -  -  -  
  765 D1:CF60 -  -  -  -  decompress_frame_down_1:
  766 D1:CF60 00 -  -  -  	.db 0
  767 D1:CF61 -  -  -  -  
  768 D1:CF61 -  -  -  -  decompress_frame_down_2:
  769 D1:CF61 00 -  -  -  	.db 0
  770 D1:CF62 -  -  -  -  
  771 D1:CF62 -  -  -  -  decompress_frame_down_3:
  772 D1:CF62 00 -  -  -  	.db 0
  773 D1:CF63 -  -  -  -  
  774 D1:CF63 -  -  -  -  decompress_frame_down_4:
  775 D1:CF63 09 -  -  -  	.db 9
  776 D1:CF64 95 D6 D1 98 
              34 D4 -  -  	.dl GroundGrassL4, GroundGrassL4_Fast
  777 D1:CF6A 80 -  -  -  	.db %10000000
  778 D1:CF6B B5 D6 D1 22 
              35 D4 -  -  	.dl GroundGrassL2, GroundGrassL2_Fast
  779 D1:CF71 80 -  -  -  	.db %10000000
  780 D1:CF72 CD D6 D1 7A 
              35 D4 -  -  	.dl GroundGrassL5, GroundGrassL5_Fast
  781 D1:CF78 80 -  -  -  	.db %10000000
  782 D1:CF79 F1 D6 D1 FC 
              35 D4 -  -  	.dl GroundGrassL3, GroundGrassL3_Fast
  783 D1:CF7F 80 -  -  -  	.db %10000000
  784 D1:CF80 0E D7 D1 56 
              36 D4 -  -  	.dl GroundGrassL1, GroundGrassL1_Fast
  785 D1:CF86 80 -  -  -  	.db %10000000
  786 D1:CF87 0E D7 D1 C8 
              36 D4 -  -  	.dl GroundGrassL1, GroundGrassL1_Fast_F
  787 D1:CF8D A0 -  -  -  	.db %10100000
  788 D1:CF8E F1 D6 D1 3A 
              37 D4 -  -  	.dl GroundGrassL3, GroundGrassL3_Fast_F
  789 D1:CF94 A0 -  -  -  	.db %10100000
  790 D1:CF95 A2 DB D1 77 
              4D D4 -  -  	.dl Vines_9, Vines_9_Slow_O_F
  791 D1:CF9B 60 -  -  -  	.db %01100000
  792 D1:CF9C CE DA D1 53 
              50 D4 -  -  	.dl Vines_2, Vines_2_Slow_O_F
  793 D1:CFA2 60 -  -  -  	.db %01100000
  794 D1:CFA3 -  -  -  -  
  795 D1:CFA3 -  -  -  -  decompress_frame_down_5:
  796 D1:CFA3 00 -  -  -  	.db 0
  797 D1:CFA4 -  -  -  -  
  798 D1:CFA4 -  -  -  -  decompress_frame_down_6:
  799 D1:CFA4 01 -  -  -  	.db 1
  800 D1:CFA5 1B E3 D1 9B 
              26 D4 -  -  	.dl Vines_10, Vines_10_Slow_O
  801 D1:CFAB 40 -  -  -  	.db %01000000
  802 D1:CFAC -  -  -  -  
  803 D1:CFAC -  -  -  -  decompress_frame_down_7:
  804 D1:CFAC 00 -  -  -  	.db 0
  805 D1:CFAD -  -  -  -  
  806 D1:CFAD -  -  -  -  decompress_frame_down_8:
  807 D1:CFAD 06 -  -  -  	.db 6
  808 D1:CFAE 55 DB D1 8F 
              4A D4 -  -  	.dl Vines_5, Vines_5_Slow
  809 D1:CFB4 00 -  -  -  	.db %00000000
  810 D1:CFB5 94 E2 D1 4C 
              24 D4 -  -  	.dl Branches_1, Branches_1_Fast_F
  811 D1:CFBB A0 -  -  -  	.db %10100000
  812 D1:CFBC 1D DD D1 E4 
              24 D4 -  -  	.dl Branches_2, Branches_2_Fast_F
  813 D1:CFC2 A0 -  -  -  	.db %10100000
  814 D1:CFC3 36 DC D1 8E 
              25 D4 -  -  	.dl Branches_5, Branches_5_Fast_F
  815 D1:CFC9 A0 -  -  -  	.db %10100000
  816 D1:CFCA FF D9 D1 2F 
              26 D4 -  -  	.dl Branches_14, Branches_14_Slow
  817 D1:CFD0 00 -  -  -  	.db %00000000
  818 D1:CFD1 58 E3 D1 5A 
              27 D4 -  -  	.dl Branches_0, Branches_0_Fast
  819 D1:CFD7 80 -  -  -  	.db %10000000
  820 D1:CFD8 -  -  -  -  
  821 D1:CFD8 -  -  -  -  decompress_frame_down_9:
  822 D1:CFD8 00 -  -  -  	.db 0
  823 D1:CFD9 -  -  -  -  
  824 D1:CFD9 -  -  -  -  decompress_frame_down_10:
  825 D1:CFD9 11 -  -  -  	.db 17
  826 D1:CFDA AF D8 D1 EA 
              44 D4 -  -  	.dl Branches_7, Branches_7_Fast_F
  827 D1:CFE0 A0 -  -  -  	.db %10100000
  828 D1:CFE1 49 D9 D1 64 
              45 D4 -  -  	.dl Branches_12, Branches_12_Fast_F
  829 D1:CFE7 A0 -  -  -  	.db %10100000
  830 D1:CFE8 A0 DA D1 3D 
              48 D4 -  -  	.dl Vines_8, Vines_8_Slow
  831 D1:CFEE 00 -  -  -  	.db %00000000
  832 D1:CFEF 36 DC D1 98 
              34 D4 -  -  	.dl Branches_5, Branches_5_Fast
  833 D1:CFF5 80 -  -  -  	.db %10000000
  834 D1:CFF6 42 DA D1 38 
              35 D4 -  -  	.dl Branches_4, Branches_4_Fast
  835 D1:CFFC 80 -  -  -  	.db %10000000
  836 D1:CFFD 18 D9 D1 46 
              06 D4 -  -  	.dl Branches_8, Branches_8_Fast_F
  837 D1:D003 A0 -  -  -  	.db %10100000
  838 D1:D004 EF E2 D1 6F 
              1E D4 -  -  	.dl Vines_7, Vines_7_Slow
  839 D1:D00A 00 -  -  -  	.db %00000000
  840 D1:D00B 55 DB D1 2F 
              1F D4 -  -  	.dl Vines_5, Vines_5_Slow_O_F
  841 D1:D011 60 -  -  -  	.db %01100000
  842 D1:D012 15 DB D1 1D 
              20 D4 -  -  	.dl Vines_3, Vines_3_Slow_O_F
  843 D1:D018 60 -  -  -  	.db %01100000
  844 D1:D019 D5 DB D1 D3 
              20 D4 -  -  	.dl Vines_4, Vines_4_Slow_O
  845 D1:D01F 40 -  -  -  	.db %01000000
  846 D1:D020 1B E3 D1 85 
              21 D4 -  -  	.dl Vines_10, Vines_10_Slow
  847 D1:D026 00 -  -  -  	.db %00000000
  848 D1:D027 EF E2 D1 47 
              22 D4 -  -  	.dl Vines_7, Vines_7_Slow_F
  849 D1:D02D 20 -  -  -  	.db %00100000
  850 D1:D02E CE DA D1 07 
              23 D4 -  -  	.dl Vines_2, Vines_2_Slow
  851 D1:D034 00 -  -  -  	.db %00000000
  852 D1:D035 94 E2 D1 31 
              57 D4 -  -  	.dl Branches_1, Branches_1_Slow_O
  853 D1:D03B 40 -  -  -  	.db %01000000
  854 D1:D03C 42 DA D1 F7 
              57 D4 -  -  	.dl Branches_4, Branches_4_Slow_O
  855 D1:D042 40 -  -  -  	.db %01000000
  856 D1:D043 0F D8 D1 C3 
              58 D4 -  -  	.dl Leaves_3, Leaves_3_Slow_O_F
  857 D1:D049 60 -  -  -  	.db %01100000
  858 D1:D04A EF E2 D1 31 
              59 D4 -  -  	.dl Vines_7, Vines_7_Slow_O
  859 D1:D050 40 -  -  -  	.db %01000000
  860 D1:D051 -  -  -  -  
  861 D1:D051 -  -  -  -  decompress_frame_down_11:
  862 D1:D051 15 -  -  -  	.db 21
  863 D1:D052 65 D8 D1 E9 
              3A D4 -  -  	.dl Branches_6, Branches_6_Slow
  864 D1:D058 00 -  -  -  	.db %00000000
  865 D1:D059 2A D7 D1 87 
              3B D4 -  -  	.dl Branches_10, Branches_10_Slow_O_F
  866 D1:D05F 60 -  -  -  	.db %01100000
  867 D1:D060 F4 D8 D1 3B 
              3D D4 -  -  	.dl Branches_15, Branches_15_Slow_O
  868 D1:D066 40 -  -  -  	.db %01000000
  869 D1:D067 18 D9 D1 A7 
              3D D4 -  -  	.dl Branches_8, Branches_8_Slow_O_F
  870 D1:D06D 60 -  -  -  	.db %01100000
  871 D1:D06E F4 D8 D1 A9 
              3E D4 -  -  	.dl Branches_15, Branches_15_Slow_O_F
  872 D1:D074 60 -  -  -  	.db %01100000
  873 D1:D075 83 D9 D1 19 
              3F D4 -  -  	.dl Leaves_2, Leaves_2_Slow_O
  874 D1:D07B 40 -  -  -  	.db %01000000
  875 D1:D07C 9C D9 D1 83 
              3F D4 -  -  	.dl Leaves_4, Leaves_4_Slow
  876 D1:D082 00 -  -  -  	.db %00000000
  877 D1:D083 9C D9 D1 0D 
              40 D4 -  -  	.dl Leaves_4, Leaves_4_Slow_F
  878 D1:D089 20 -  -  -  	.db %00100000
  879 D1:D08A 42 DA D1 4C 
              44 D4 -  -  	.dl Branches_4, Branches_4_Fast_F
  880 D1:D090 A0 -  -  -  	.db %10100000
  881 D1:D091 2A D7 D1 D6 
              46 D4 -  -  	.dl Branches_10, Branches_10_Fast
  882 D1:D097 80 -  -  -  	.db %10000000
  883 D1:D098 1E DA D1 4D 
              47 D4 -  -  	.dl Leaves_6, Leaves_6_Slow_O
  884 D1:D09E 40 -  -  -  	.db %01000000
  885 D1:D09F 0F D8 D1 D1 
              47 D4 -  -  	.dl Leaves_3, Leaves_3_Slow_F
  886 D1:D0A5 20 -  -  -  	.db %00100000
  887 D1:D0A6 CE DA D1 07 
              49 D4 -  -  	.dl Vines_2, Vines_2_Slow_O
  888 D1:D0AC 40 -  -  -  	.db %01000000
  889 D1:D0AD A0 DA D1 F5 
              59 D4 -  -  	.dl Vines_8, Vines_8_Slow_O
  890 D1:D0B3 40 -  -  -  	.db %01000000
  891 D1:D0B4 A0 DA D1 BB 
              5A D4 -  -  	.dl Vines_8, Vines_8_Slow_O_F
  892 D1:D0BA 60 -  -  -  	.db %01100000
  893 D1:D0BB 94 DC D1 81 
              5B D4 -  -  	.dl Vines_6, Vines_6_Slow
  894 D1:D0C1 00 -  -  -  	.db %00000000
  895 D1:D0C2 BD DC D1 16 
              07 D4 -  -  	.dl Branches_3, Branches_3_Fast
  896 D1:D0C8 80 -  -  -  	.db %10000000
  897 D1:D0C9 1D DD D1 D6 
              35 D4 -  -  	.dl Branches_2, Branches_2_Fast
  898 D1:D0CF 80 -  -  -  	.db %10000000
  899 D1:D0D0 15 DB D1 7F 
              36 D4 -  -  	.dl Vines_3, Vines_3_Slow_O
  900 D1:D0D6 40 -  -  -  	.db %01000000
  901 D1:D0D7 A0 DA D1 D9 
              4E D4 -  -  	.dl Vines_8, Vines_8_Slow_F
  902 D1:D0DD 20 -  -  -  	.db %00100000
  903 D1:D0DE A2 DB D1 27 
              09 D4 -  -  	.dl Vines_9, Vines_9_Slow_O
  904 D1:D0E4 40 -  -  -  	.db %01000000
  905 D1:D0E5 -  -  -  -  
  906 D1:D0E5 -  -  -  -  decompress_frame_down_12:
  907 D1:D0E5 25 -  -  -  	.db 37
  908 D1:D0E6 2A D7 D1 93 
              37 D4 -  -  	.dl Branches_10, Branches_10_Slow_O
  909 D1:D0EC 40 -  -  -  	.db %01000000
  910 D1:D0ED 74 D7 D1 38 
              38 D4 -  -  	.dl Branches_9, Branches_9_Fast
  911 D1:D0F3 80 -  -  -  	.db %10000000
  912 D1:D0F4 C4 D7 D1 BB 
              38 D4 -  -  	.dl Branches_16, Branches_16_Slow
  913 D1:D0FA 00 -  -  -  	.db %00000000
  914 D1:D0FB F1 D7 D1 27 
              39 D4 -  -  	.dl Branches_13, Branches_13_Slow_O
  915 D1:D101 40 -  -  -  	.db %01000000
  916 D1:D102 0F D8 D1 6D 
              39 D4 -  -  	.dl Leaves_3, Leaves_3_Slow
  917 D1:D108 00 -  -  -  	.db %00000000
  918 D1:D109 2E D8 D1 DA 
              39 D4 -  -  	.dl Leaves_7, Leaves_7_Fast
  919 D1:D10F 80 -  -  -  	.db %10000000
  920 D1:D110 2E D8 D1 62 
              3A D4 -  -  	.dl Leaves_7, Leaves_7_Fast_F
  921 D1:D116 A0 -  -  -  	.db %10100000
  922 D1:D117 AF D8 D1 2B 
              3C D4 -  -  	.dl Branches_7, Branches_7_Slow_O
  923 D1:D11D 40 -  -  -  	.db %01000000
  924 D1:D11E C4 D7 D1 CF 
              3C D4 -  -  	.dl Branches_16, Branches_16_Slow_O
  925 D1:D124 40 -  -  -  	.db %01000000
  926 D1:D125 49 D9 D1 2F 
              3E D4 -  -  	.dl Branches_12, Branches_12_Slow_O
  927 D1:D12B 40 -  -  -  	.db %01000000
  928 D1:D12C AF D8 D1 98 
              40 D4 -  -  	.dl Branches_7, Branches_7_Fast
  929 D1:D132 80 -  -  -  	.db %10000000
  930 D1:D133 18 D9 D1 12 
              41 D4 -  -  	.dl Branches_8, Branches_8_Fast
  931 D1:D139 80 -  -  -  	.db %10000000
  932 D1:D13A 2A D7 D1 70 
              41 D4 -  -  	.dl Branches_10, Branches_10_Fast_F
  933 D1:D140 A0 -  -  -  	.db %10100000
  934 D1:D141 C1 D9 D1 E8 
              41 D4 -  -  	.dl Branches_11, Branches_11_Fast_F
  935 D1:D147 A0 -  -  -  	.db %10100000
  936 D1:D148 C4 D7 D1 4F 
              42 D4 -  -  	.dl Branches_16, Branches_16_Slow_O_F
  937 D1:D14E 60 -  -  -  	.db %01100000
  938 D1:D14F F1 D7 D1 BC 
              42 D4 -  -  	.dl Branches_13, Branches_13_Fast_F
  939 D1:D155 A0 -  -  -  	.db %10100000
  940 D1:D156 FF D9 D1 ED 
              42 D4 -  -  	.dl Branches_14, Branches_14_Slow_O
  941 D1:D15C 40 -  -  -  	.db %01000000
  942 D1:D15D F4 D8 D1 5D 
              43 D4 -  -  	.dl Branches_15, Branches_15_Slow_F
  943 D1:D163 20 -  -  -  	.db %00100000
  944 D1:D164 1E DA D1 C9 
              43 D4 -  -  	.dl Leaves_6, Leaves_6_Slow
  945 D1:D16A 00 -  -  -  	.db %00000000
  946 D1:D16B 9C D9 D1 BF 
              45 D4 -  -  	.dl Leaves_4, Leaves_4_Slow_O
  947 D1:D171 40 -  -  -  	.db %01000000
  948 D1:D172 18 D9 D1 4D 
              46 D4 -  -  	.dl Branches_8, Branches_8_Slow_O
  949 D1:D178 40 -  -  -  	.db %01000000
  950 D1:D179 15 DB D1 DF 
              49 D4 -  -  	.dl Vines_3, Vines_3_Slow
  951 D1:D17F 00 -  -  -  	.db %00000000
  952 D1:D180 A2 DB D1 81 
              4B D4 -  -  	.dl Vines_9, Vines_9_Slow
  953 D1:D186 00 -  -  -  	.db %00000000
  954 D1:D187 D5 DB D1 33 
              4C D4 -  -  	.dl Vines_4, Vines_4_Slow_F
  955 D1:D18D 20 -  -  -  	.db %00100000
  956 D1:D18E 0C DC D1 EB 
              4C D4 -  -  	.dl Vines_1, Vines_1_Slow_O
  957 D1:D194 40 -  -  -  	.db %01000000
  958 D1:D195 15 DB D1 29 
              4E D4 -  -  	.dl Vines_3, Vines_3_Slow_F
  959 D1:D19B 20 -  -  -  	.db %00100000
  960 D1:D19C F4 D8 D1 A5 
              06 D4 -  -  	.dl Branches_15, Branches_15_Slow
  961 D1:D1A2 00 -  -  -  	.db %00000000
  962 D1:D1A3 CE DA D1 BD 
              07 D4 -  -  	.dl Vines_2, Vines_2_Slow_F
  963 D1:D1A9 20 -  -  -  	.db %00100000
  964 D1:D1AA 0C DC D1 97 
              08 D4 -  -  	.dl Vines_1, Vines_1_Slow
  965 D1:D1B0 00 -  -  -  	.db %00000000
  966 D1:D1B1 74 D7 D1 A3 
              4F D4 -  -  	.dl Branches_9, Branches_9_Slow_O
  967 D1:D1B7 40 -  -  -  	.db %01000000
  968 D1:D1B8 94 E2 D1 E0 
              1A D4 -  -  	.dl Branches_1, Branches_1_Fast
  969 D1:D1BE 80 -  -  -  	.db %10000000
  970 D1:D1BF 1D DD D1 79 
              1B D4 -  -  	.dl Branches_2, Branches_2_Slow_O
  971 D1:D1C5 40 -  -  -  	.db %01000000
  972 D1:D1C6 BD DC D1 59 
              1C D4 -  -  	.dl Branches_3, Branches_3_Slow_O
  973 D1:D1CC 40 -  -  -  	.db %01000000
  974 D1:D1CD 36 DC D1 33 
              1D D4 -  -  	.dl Branches_5, Branches_5_Slow_O
  975 D1:D1D3 40 -  -  -  	.db %01000000
  976 D1:D1D4 0F D8 D1 03 
              1E D4 -  -  	.dl Leaves_3, Leaves_3_Slow_O
  977 D1:D1DA 40 -  -  -  	.db %01000000
  978 D1:D1DB 58 E3 D1 38 
              5C D4 -  -  	.dl Branches_0, Branches_0_Fast_F
  979 D1:D1E1 A0 -  -  -  	.db %10100000
  980 D1:D1E2 74 D7 D1 D0 
              5C D4 -  -  	.dl Branches_9, Branches_9_Fast_F
  981 D1:D1E8 A0 -  -  -  	.db %10100000
  982 D1:D1E9 -  -  -  -  
  983 D1:D1E9 -  -  -  -  decompress_frame_down_13:
  984 D1:D1E9 00 -  -  -  	.db 0
  985 D1:D1EA -  -  -  -  
  986 D1:D1EA -  -  -  -  decompress_frame_down_14:
  987 D1:D1EA 17 -  -  -  	.db 23
  988 D1:D1EB 7D DD D1 2C 
              51 D4 -  -  	.dl Tree_2, Tree_2_Fast
  989 D1:D1F1 80 -  -  -  	.db %10000000
  990 D1:D1F2 E8 DD D1 28 
              52 D4 -  -  	.dl Tree_4, Tree_4_Fast
  991 D1:D1F8 80 -  -  -  	.db %10000000
  992 D1:D1F9 55 DE D1 2A 
              53 D4 -  -  	.dl Tree_7, Tree_7_Fast
  993 D1:D1FF 80 -  -  -  	.db %10000000
  994 D1:D200 C2 DE D1 2C 
              54 D4 -  -  	.dl Tree_9, Tree_9_Fast
  995 D1:D206 80 -  -  -  	.db %10000000
  996 D1:D207 2F DF D1 2E 
              55 D4 -  -  	.dl Tree_6, Tree_6_Fast_F
  997 D1:D20D A0 -  -  -  	.db %10100000
  998 D1:D20E 9C DF D1 30 
              56 D4 -  -  	.dl Tree_3, Tree_3_Fast_F
  999 D1:D214 A0 -  -  -  	.db %10100000
 1000 D1:D215 09 E0 D1 D8 
              09 D4 -  -  	.dl Tree_0, Tree_0_Fast_F
 1001 D1:D21B A0 -  -  -  	.db %10100000
 1002 D1:D21C 9C DF D1 D4 
              0A D4 -  -  	.dl Tree_3, Tree_3_Fast
 1003 D1:D222 80 -  -  -  	.db %10000000
 1004 D1:D223 74 E0 D1 D6 
              0B D4 -  -  	.dl Tree_8, Tree_8_Fast
 1005 D1:D229 80 -  -  -  	.db %10000000
 1006 D1:D22A C2 DE D1 D8 
              0C D4 -  -  	.dl Tree_9, Tree_9_Fast_F
 1007 D1:D230 A0 -  -  -  	.db %10100000
 1008 D1:D231 74 E0 D1 DA 
              0D D4 -  -  	.dl Tree_8, Tree_8_Fast_F
 1009 D1:D237 A0 -  -  -  	.db %10100000
 1010 D1:D238 E8 DD D1 DC 
              0E D4 -  -  	.dl Tree_4, Tree_4_Fast_F
 1011 D1:D23E A0 -  -  -  	.db %10100000
 1012 D1:D23F E1 E0 D1 DE 
              0F D4 -  -  	.dl Tree_1, Tree_1_Fast
 1013 D1:D245 80 -  -  -  	.db %10000000
 1014 D1:D246 09 E0 D1 DC 
              10 D4 -  -  	.dl Tree_0, Tree_0_Fast
 1015 D1:D24C 80 -  -  -  	.db %10000000
 1016 D1:D24D E1 E0 D1 D8 
              11 D4 -  -  	.dl Tree_1, Tree_1_Fast_F
 1017 D1:D253 A0 -  -  -  	.db %10100000
 1018 D1:D254 2F DF D1 D6 
              12 D4 -  -  	.dl Tree_6, Tree_6_Fast
 1019 D1:D25A 80 -  -  -  	.db %10000000
 1020 D1:D25B 4D E1 D1 D8 
              13 D4 -  -  	.dl Tree_10, Tree_10_Fast
 1021 D1:D261 80 -  -  -  	.db %10000000
 1022 D1:D262 55 DE D1 DA 
              14 D4 -  -  	.dl Tree_7, Tree_7_Fast_F
 1023 D1:D268 A0 -  -  -  	.db %10100000
 1024 D1:D269 BA E1 D1 DC 
              15 D4 -  -  	.dl Tree_5, Tree_5_Fast
 1025 D1:D26F 80 -  -  -  	.db %10000000
 1026 D1:D270 27 E2 D1 DE 
              16 D4 -  -  	.dl Tree_11, Tree_11_Fast
 1027 D1:D276 80 -  -  -  	.db %10000000
 1028 D1:D277 BA E1 D1 E0 
              17 D4 -  -  	.dl Tree_5, Tree_5_Fast_F
 1029 D1:D27D A0 -  -  -  	.db %10100000
 1030 D1:D27E 7D DD D1 E2 
              18 D4 -  -  	.dl Tree_2, Tree_2_Fast_F
 1031 D1:D284 A0 -  -  -  	.db %10100000
 1032 D1:D285 27 E2 D1 DE 
              19 D4 -  -  	.dl Tree_11, Tree_11_Fast_F
 1033 D1:D28B A0 -  -  -  	.db %10100000
 1034 D1:D28C -  -  -  -  
 1035 D1:D28C -  -  -  -  decompress_frame_down_15:
 1036 D1:D28C 00 -  -  -  	.db 0
 1037 D1:D28D -  -  -  -  
 1038 D1:D28D -  -  -  -  decompress_frame_down_16:
 1039 D1:D28D 16 -  -  -  	.db 22
 1040 D1:D28E 06 D6 D1 34 
              32 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast
 1041 D1:D294 80 -  -  -  	.db %10000000
 1042 D1:D295 06 D6 D1 E6 
              32 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast_F
 1043 D1:D29B A0 -  -  -  	.db %10100000
 1044 D1:D29C 4B D6 D1 98 
              33 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast
 1045 D1:D2A2 80 -  -  -  	.db %10000000
 1046 D1:D2A3 4B D6 D1 18 
              34 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast_F
 1047 D1:D2A9 A0 -  -  -  	.db %10100000
 1048 D1:D2AA 83 D9 D1 E3 
              23 D4 -  -  	.dl Leaves_2, Leaves_2_Slow
 1049 D1:D2B0 00 -  -  -  	.db %00000000
 1050 D1:D2B1 D4 E3 D1 A4 
              28 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast
 1051 D1:D2B7 80 -  -  -  	.db %10000000
 1052 D1:D2B8 D4 E3 D1 2A 
              29 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast_F
 1053 D1:D2BE A0 -  -  -  	.db %10100000
 1054 D1:D2BF 09 E4 D1 B0 
              29 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast
 1055 D1:D2C5 80 -  -  -  	.db %10000000
 1056 D1:D2C6 09 E4 D1 36 
              2A D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast_F
 1057 D1:D2CC A0 -  -  -  	.db %10100000
 1058 D1:D2CD 57 E4 D1 BC 
              2A D4 -  -  	.dl GroundGrassSmall, GroundGrassSmall_Fast
 1059 D1:D2D3 80 -  -  -  	.db %10000000
 1060 D1:D2D4 57 E4 D1 64 
              2B D4 -  -  	.dl GroundGrassSmall, GroundGrassSmall_Fast_F
 1061 D1:D2DA A0 -  -  -  	.db %10100000
 1062 D1:D2DB 79 E4 D1 0C 
              2C D4 -  -  	.dl Tree_16, Tree_16_Fast
 1063 D1:D2E1 80 -  -  -  	.db %10000000
 1064 D1:D2E2 91 E4 D1 61 
              2C D4 -  -  	.dl Tree_17, Tree_17_Slow_O
 1065 D1:D2E8 40 -  -  -  	.db %01000000
 1066 D1:D2E9 91 E4 D1 C9 
              2C D4 -  -  	.dl Tree_17, Tree_17_Slow_O_F
 1067 D1:D2EF 60 -  -  -  	.db %01100000
 1068 D1:D2F0 A2 E4 D1 2E 
              2D D4 -  -  	.dl Leaves_8, Leaves_8_Fast
 1069 D1:D2F6 80 -  -  -  	.db %10000000
 1070 D1:D2F7 79 E4 D1 B5 
              2D D4 -  -  	.dl Tree_16, Tree_16_Slow_O
 1071 D1:D2FD 40 -  -  -  	.db %01000000
 1072 D1:D2FE 91 E4 D1 3B 
              2E D4 -  -  	.dl Tree_17, Tree_17_Slow_F
 1073 D1:D304 20 -  -  -  	.db %00100000
 1074 D1:D305 D9 E4 D1 A3 
              2E D4 -  -  	.dl Tree_18, Tree_18_Slow_O
 1075 D1:D30B 40 -  -  -  	.db %01000000
 1076 D1:D30C 91 E4 D1 07 
              2F D4 -  -  	.dl Tree_17, Tree_17_Slow
 1077 D1:D312 00 -  -  -  	.db %00000000
 1078 D1:D313 D9 E4 D1 6D 
              2F D4 -  -  	.dl Tree_18, Tree_18_Slow_F
 1079 D1:D319 20 -  -  -  	.db %00100000
 1080 D1:D31A 79 E4 D1 D1 
              2F D4 -  -  	.dl Tree_16, Tree_16_Slow_O_F
 1081 D1:D320 60 -  -  -  	.db %01100000
 1082 D1:D321 83 D9 D1 57 
              30 D4 -  -  	.dl Leaves_2, Leaves_2_Slow_F
 1083 D1:D327 20 -  -  -  	.db %00100000
 1084 D1:D328 -  -  -  -  
 1085 D1:D328 -  -  -  -  decompress_frame_down_17:
 1086 D1:D328 00 -  -  -  	.db 0
 1087 D1:D329 -  -  -  -  
 1088 D1:D329 -  -  -  -  decompress_frame_down_18:
 1089 D1:D329 00 -  -  -  	.db 0
 1090 D1:D32A -  -  -  -  
 1091 D1:D32A -  -  -  -  decompress_frame_down_19:
 1092 D1:D32A 00 -  -  -  	.db 0
 1093 D1:D32B -  -  -  -  
 1094 D1:D32B -  -  -  -  decompress_frame_down_20:
 1095 D1:D32B 00 -  -  -  	.db 0
 1096 D1:D32C -  -  -  -  
 1097 D1:D32C -  -  -  -  decompress_frame_down_21:
 1098 D1:D32C 00 -  -  -  	.db 0
 1099 D1:D32D -  -  -  -  
 1100 D1:D32D -  -  -  -  decompress_frame_down_22:
 1101 D1:D32D 00 -  -  -  	.db 0
 1102 D1:D32E -  -  -  -  
 1103 D1:D32E -  -  -  -  decompress_frame_down_23:
 1104 D1:D32E 00 -  -  -  	.db 0
 1105 D1:D32F -  -  -  -  
 1106 D1:D32F -  -  -  -  decompress_frame_down_24:
 1107 D1:D32F 0A -  -  -  	.db 10
 1108 D1:D330 B0 E3 D1 F2 
              27 D4 -  -  	.dl Clouds_2, Clouds_2_Fast
 1109 D1:D336 80 -  -  -  	.db %10000000
 1110 D1:D337 EA E4 D1 BE 
              30 D4 -  -  	.dl Clouds_0, Clouds_0_Fast
 1111 D1:D33D 80 -  -  -  	.db %10000000
 1112 D1:D33E 13 E5 D1 24 
              31 D4 -  -  	.dl Clouds_1, Clouds_1_Fast
 1113 D1:D344 80 -  -  -  	.db %10000000
 1114 D1:D345 3A E5 D1 88 
              31 D4 -  -  	.dl Clouds_3, Clouds_3_Fast
 1115 D1:D34B 80 -  -  -  	.db %10000000
 1116 D1:D34C 66 E5 D1 F4 
              31 D4 -  -  	.dl Clouds_4, Clouds_4_Fast
 1117 D1:D352 80 -  -  -  	.db %10000000
 1118 D1:D353 EA E4 D1 C0 
              01 D4 -  -  	.dl Clouds_0, Clouds_0_Fast_F
 1119 D1:D359 A0 -  -  -  	.db %10100000
 1120 D1:D35A 13 E5 D1 26 
              02 D4 -  -  	.dl Clouds_1, Clouds_1_Fast_F
 1121 D1:D360 A0 -  -  -  	.db %10100000
 1122 D1:D361 66 E5 D1 8A 
              02 D4 -  -  	.dl Clouds_4, Clouds_4_Fast_F
 1123 D1:D367 A0 -  -  -  	.db %10100000
 1124 D1:D368 3A E5 D1 CA 
              02 D4 -  -  	.dl Clouds_3, Clouds_3_Fast_F
 1125 D1:D36E A0 -  -  -  	.db %10100000
 1126 D1:D36F B0 E3 D1 36 
              03 D4 -  -  	.dl Clouds_2, Clouds_2_Fast_F
 1127 D1:D375 A0 -  -  -  	.db %10100000
 1128 D1:D376 -  -  -  -  
 1129 D1:D376 -  -  -  -  decompress_frame_down_25:
 1130 D1:D376 00 -  -  -  	.db 0
 1131 D1:D377 -  -  -  -  
 1132 D1:D377 -  -  -  -  decompress_frame_down_26:
 1133 D1:D377 00 -  -  -  	.db 0
 1134 D1:D378 -  -  -  -  
 1135 D1:D378 -  -  -  -  decompress_frame_down_27:
 1136 D1:D378 00 -  -  -  	.db 0
 1137 D1:D379 -  -  -  -  
 1138 D1:D379 -  -  -  -  decompress_frame_down_28:
 1139 D1:D379 00 -  -  -  	.db 0
 1140 D1:D37A -  -  -  -  
 1141 D1:D37A -  -  -  -  decompress_frame_down_29:
 1142 D1:D37A 00 -  -  -  	.db 0
 1143 D1:D37B -  -  -  -  
 1144 D1:D37B -  -  -  -  decompress_frame_down_30:
 1145 D1:D37B 00 -  -  -  	.db 0
 1146 D1:D37C -  -  -  -  
 1147 D1:D37C -  -  -  -  decompress_frame_down_31:
 1148 D1:D37C 00 -  -  -  	.db 0
 1149 D1:D37D -  -  -  -  
 1150 D1:D37D -  -  -  -  decompress_frame_down_32:
 1151 D1:D37D 00 -  -  -  	.db 0
 1152 D1:D37E -  -  -  -  
 1153 D1:D37E -  -  -  -  decompress_frame_down_33:
 1154 D1:D37E 00 -  -  -  	.db 0
 1155 D1:D37F -  -  -  -  
 1156 D1:D37F -  -  -  -  decompress_frame_down_34:
 1157 D1:D37F 00 -  -  -  	.db 0
 1158 D1:D380 -  -  -  -  
 1159 D1:D380 -  -  -  -  decompress_frame_down_35:
 1160 D1:D380 00 -  -  -  	.db 0
 1161 D1:D381 -  -  -  -  
 1162 D1:D381 -  -  -  -  decompress_frame_down_36:
 1163 D1:D381 00 -  -  -  	.db 0
 1164 D1:D382 -  -  -  -  
 1165 D1:D382 -  -  -  -  decompress_frame_down_37:
 1166 D1:D382 00 -  -  -  	.db 0
 1167 D1:D383 -  -  -  -  
 1168 D1:D383 -  -  -  -  decompress_frame_down_38:
 1169 D1:D383 00 -  -  -  	.db 0
 1170 D1:D384 -  -  -  -  
 1171 D1:D384 -  -  -  -  decompress_frame_down_39:
 1172 D1:D384 00 -  -  -  	.db 0
 1173 D1:D385 -  -  -  -  
 1174 D1:D385 -  -  -  -  decompress_frame_down_40:
 1175 D1:D385 00 -  -  -  	.db 0
 1176 D1:D386 -  -  -  -  
 1177 D1:D386 -  -  -  -  decompress_frame_down_41:
 1178 D1:D386 00 -  -  -  	.db 0
 1179 D1:D387 -  -  -  -  
 1180 D1:D387 -  -  -  -  decompress_frame_down_42:
 1181 D1:D387 00 -  -  -  	.db 0
 1182 D1:D388 -  -  -  -  
 1183 D1:D388 -  -  -  -  decompress_frame_down_43:
 1184 D1:D388 00 -  -  -  	.db 0
 1185 D1:D389 -  -  -  -  
 1186 D1:D389 -  -  -  -  decompress_frame_down_44:
 1187 D1:D389 00 -  -  -  	.db 0
 1188 D1:D38A -  -  -  -  
 1189 D1:D38A -  -  -  -  decompress_frame_down_45:
 1190 D1:D38A 00 -  -  -  	.db 0
 1191 D1:D38B -  -  -  -  
 1192 D1:D38B -  -  -  -  decompress_frame_down_46:
 1193 D1:D38B 00 -  -  -  	.db 0
 1194 D1:D38C -  -  -  -  
 1195 D1:D38C -  -  -  -  decompress_frame_down_47:
 1196 D1:D38C 00 -  -  -  	.db 0
 1197 D1:D38D -  -  -  -  
 1198 D1:D38D -  -  -  -  decompress_frame_down_48:
 1199 D1:D38D 00 -  -  -  	.db 0
 1200 D1:D38E -  -  -  -  
 1201 D1:D38E -  -  -  -  decompress_frame_down_49:
 1202 D1:D38E 00 -  -  -  	.db 0
 1203 D1:D38F -  -  -  -  
 1204 D1:D38F -  -  -  -  decompress_frame_down_50:
 1205 D1:D38F 00 -  -  -  	.db 0
 1206 D1:D390 -  -  -  -  
 1207 D1:D390 -  -  -  -  decompress_frame_down_51:
 1208 D1:D390 00 -  -  -  	.db 0
 1209 D1:D391 -  -  -  -  
 1210 D1:D391 -  -  -  -  decompress_frame_down_52:
 1211 D1:D391 00 -  -  -  	.db 0
 1212 D1:D392 -  -  -  -  
 1213 D1:D392 -  -  -  -  decompress_frame_down_53:
 1214 D1:D392 00 -  -  -  	.db 0
 1215 D1:D393 -  -  -  -  
 1216 D1:D393 -  -  -  -  decompress_frame_down_54:
 1217 D1:D393 00 -  -  -  	.db 0
 1218 D1:D394 -  -  -  -  
 1219 D1:D394 -  -  -  -  decompress_frame_down_55:
 1220 D1:D394 00 -  -  -  	.db 0
 1221 D1:D395 -  -  -  -  
 1222 D1:D395 -  -  -  -  decompress_frame_down_56:
 1223 D1:D395 00 -  -  -  	.db 0
 1224 D1:D396 -  -  -  -  
 1225 D1:D396 -  -  -  -  decompress_frame_down_57:
 1226 D1:D396 00 -  -  -  	.db 0
 1227 D1:D397 -  -  -  -  
 1228 D1:D397 -  -  -  -  decompress_frame_down_58:
 1229 D1:D397 00 -  -  -  	.db 0
 1230 D1:D398 -  -  -  -  
 1231 D1:D398 -  -  -  -  decompress_frame_down_59:
 1232 D1:D398 00 -  -  -  	.db 0
 1233 D1:D399 -  -  -  -  
 1234 D1:D399 -  -  -  -  decompress_frame_down_60:
 1235 D1:D399 00 -  -  -  	.db 0
 1236 D1:D39A -  -  -  -  
 1237 D1:D39A -  -  -  -  decompress_frame_down_61:
 1238 D1:D39A 00 -  -  -  	.db 0
 1239 D1:D39B -  -  -  -  
 1240 D1:D39B -  -  -  -  decompress_frame_down_62:
 1241 D1:D39B 00 -  -  -  	.db 0
 1242 D1:D39C -  -  -  -  
 1243 D1:D39C -  -  -  -  decompress_frame_down_63:
 1244 D1:D39C 00 -  -  -  	.db 0
 1245 D1:D39D -  -  -  -  
 1246 D1:D39D -  -  -  -  decompress_frame_down_64:
 1247 D1:D39D 00 -  -  -  	.db 0
 1248 D1:D39E -  -  -  -  
 1249 D1:D39E -  -  -  -  decompress_frame_down_65:
 1250 D1:D39E 00 -  -  -  	.db 0
 1251 D1:D39F -  -  -  -  
 1252 D1:D39F -  -  -  -  decompress_frame_down_66:
 1253 D1:D39F 00 -  -  -  	.db 0
 1254 D1:D3A0 -  -  -  -  
 1255 D1:D3A0 -  -  -  -  decompress_frame_down_67:
 1256 D1:D3A0 00 -  -  -  	.db 0
 1257 D1:D3A1 -  -  -  -  
 1258 D1:D3A1 -  -  -  -  decompress_frame_down_68:
 1259 D1:D3A1 00 -  -  -  	.db 0
 1260 D1:D3A2 -  -  -  -  
 1261 D1:D3A2 -  -  -  -  decompress_frame_down_69:
 1262 D1:D3A2 00 -  -  -  	.db 0
 1263 D1:D3A3 -  -  -  -  
 1264 D1:D3A3 -  -  -  -  decompress_frame_down_70:
 1265 D1:D3A3 00 -  -  -  	.db 0
 1266 D1:D3A4 -  -  -  -  
 1267 D1:D3A4 -  -  -  -  decompress_frame_down_71:
 1268 D1:D3A4 00 -  -  -  	.db 0
 1269 D1:D3A5 -  -  -  -  
 1270 D1:D3A5 -  -  -  -  decompress_frame_down_72:
 1271 D1:D3A5 00 -  -  -  	.db 0
 1272 D1:D3A6 -  -  -  -  
 1273 D1:D3A6 -  -  -  -  decompress_frame_down_73:
 1274 D1:D3A6 00 -  -  -  	.db 0
 1275 D1:D3A7 -  -  -  -  
 1276 D1:D3A7 -  -  -  -  decompress_frame_down_74:
 1277 D1:D3A7 00 -  -  -  	.db 0
 1278 D1:D3A8 -  -  -  -  
 1279 D1:D3A8 -  -  -  -  decompress_frame_down_75:
 1280 D1:D3A8 00 -  -  -  	.db 0
 1281 D1:D3A9 -  -  -  -  
 1282 D1:D3A9 -  -  -  -  decompress_frame_down_76:
 1283 D1:D3A9 00 -  -  -  	.db 0
 1284 D1:D3AA -  -  -  -  
 1285 D1:D3AA -  -  -  -  decompress_frame_down_77:
 1286 D1:D3AA 00 -  -  -  	.db 0
 1287 D1:D3AB -  -  -  -  
 1288 D1:D3AB -  -  -  -  decompress_frame_down_78:
 1289 D1:D3AB 00 -  -  -  	.db 0
 1290 D1:D3AC -  -  -  -  
 1291 D1:D3AC -  -  -  -  decompress_frame_down_79:
 1292 D1:D3AC 00 -  -  -  	.db 0
 1293 D1:D3AD -  -  -  -  
 1294 D1:D3AD -  -  -  -  decompress_frame_down_80:
 1295 D1:D3AD 00 -  -  -  	.db 0
 1296 D1:D3AE -  -  -  -  
 1297 D1:D3AE -  -  -  -  decompress_frame_down_81:
 1298 D1:D3AE 00 -  -  -  	.db 0
 1299 D1:D3AF -  -  -  -  
 1300 D1:D3AF -  -  -  -  decompress_frame_down_82:
 1301 D1:D3AF 00 -  -  -  	.db 0
 1302 D1:D3B0 -  -  -  -  
 1303 D1:D3B0 -  -  -  -  decompress_frame_down_83:
 1304 D1:D3B0 00 -  -  -  	.db 0
 1305 D1:D3B1 -  -  -  -  
 1306 D1:D3B1 -  -  -  -  decompress_frame_down_84:
 1307 D1:D3B1 00 -  -  -  	.db 0
 1308 D1:D3B2 -  -  -  -  
 1309 D1:D3B2 -  -  -  -  decompress_frame_down_85:
 1310 D1:D3B2 00 -  -  -  	.db 0
 1311 D1:D3B3 -  -  -  -  
 1312 D1:D3B3 -  -  -  -  decompress_frame_down_86:
 1313 D1:D3B3 00 -  -  -  	.db 0
 1314 D1:D3B4 -  -  -  -  
 1315 D1:D3B4 -  -  -  -  decompress_frame_down_87:
 1316 D1:D3B4 00 -  -  -  	.db 0
 1317 D1:D3B5 -  -  -  -  
 1318 D1:D3B5 -  -  -  -  decompress_frame_down_88:
 1319 D1:D3B5 00 -  -  -  	.db 0
 1320 D1:D3B6 -  -  -  -  
 1321 D1:D3B6 -  -  -  -  decompress_frame_down_89:
 1322 D1:D3B6 02 -  -  -  	.db 2
 1323 D1:D3B7 7D E5 D1 E7 
              03 D4 -  -  	.dl Frog_0, Frog_0_Slow
 1324 D1:D3BD 00 -  -  -  	.db %00000000
 1325 D1:D3BE 7D E5 D1 17 
              05 D4 -  -  	.dl Frog_0, Frog_0_Slow_O
 1326 D1:D3C4 40 -  -  -  	.db %01000000
Listing for file "ascent.asm"
  568 D1:D3C5 -  -  -  -  #include "generated/Palette_Setup.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Palette_Setup.txt"
    1 D1:D3C5 -  -  -  -  setup_palette_1:
    2 D1:D3C5 21 00 02 E3 	ld hl,mpLcdPalette
    3 D1:D3C9 3E C2 -  -  	ld a,%11000010
    4 D1:D3CB 77 -  -  -  	ld (hl),a 
    5 D1:D3CC 23 -  -  -  	inc hl
    6 D1:D3CD 3E 20 -  -  	ld a,%00100000
    7 D1:D3CF 77 -  -  -  	ld (hl),a 
    8 D1:D3D0 23 -  -  -  	inc hl
    9 D1:D3D1 3E 24 -  -  	ld a,%00100100
   10 D1:D3D3 77 -  -  -  	ld (hl),a 
   11 D1:D3D4 23 -  -  -  	inc hl
   12 D1:D3D5 3E 39 -  -  	ld a,%00111001
   13 D1:D3D7 77 -  -  -  	ld (hl),a 
   14 D1:D3D8 23 -  -  -  	inc hl
   15 D1:D3D9 3E 85 -  -  	ld a,%10000101
   16 D1:D3DB 77 -  -  -  	ld (hl),a 
   17 D1:D3DC 23 -  -  -  	inc hl
   18 D1:D3DD 3E 4D -  -  	ld a,%01001101
   19 D1:D3DF 77 -  -  -  	ld (hl),a 
   20 D1:D3E0 23 -  -  -  	inc hl
   21 D1:D3E1 3E E6 -  -  	ld a,%11100110
   22 D1:D3E3 77 -  -  -  	ld (hl),a 
   23 D1:D3E4 23 -  -  -  	inc hl
   24 D1:D3E5 3E E1 -  -  	ld a,%11100001
   25 D1:D3E7 77 -  -  -  	ld (hl),a 
   26 D1:D3E8 23 -  -  -  	inc hl
   27 D1:D3E9 3E 2A -  -  	ld a,%00101010
   28 D1:D3EB 77 -  -  -  	ld (hl),a 
   29 D1:D3EC 23 -  -  -  	inc hl
   30 D1:D3ED 3E 2E -  -  	ld a,%00101110
   31 D1:D3EF 77 -  -  -  	ld (hl),a 
   32 D1:D3F0 23 -  -  -  	inc hl
   33 D1:D3F1 3E 65 -  -  	ld a,%01100101
   34 D1:D3F3 77 -  -  -  	ld (hl),a 
   35 D1:D3F4 23 -  -  -  	inc hl
   36 D1:D3F5 3E 95 -  -  	ld a,%10010101
   37 D1:D3F7 77 -  -  -  	ld (hl),a 
   38 D1:D3F8 23 -  -  -  	inc hl
   39 D1:D3F9 3E FE -  -  	ld a,%11111110
   40 D1:D3FB 77 -  -  -  	ld (hl),a 
   41 D1:D3FC 23 -  -  -  	inc hl
   42 D1:D3FD 3E 73 -  -  	ld a,%01110011
   43 D1:D3FF 77 -  -  -  	ld (hl),a 
   44 D1:D400 23 -  -  -  	inc hl
   45 D1:D401 3E BC -  -  	ld a,%10111100
   46 D1:D403 77 -  -  -  	ld (hl),a 
   47 D1:D404 23 -  -  -  	inc hl
   48 D1:D405 3E 5B -  -  	ld a,%01011011
   49 D1:D407 77 -  -  -  	ld (hl),a 
   50 D1:D408 23 -  -  -  	inc hl
   51 D1:D409 3E 8E -  -  	ld a,%10001110
   52 D1:D40B 77 -  -  -  	ld (hl),a 
   53 D1:D40C 23 -  -  -  	inc hl
   54 D1:D40D 3E 4F -  -  	ld a,%01001111
   55 D1:D40F 77 -  -  -  	ld (hl),a 
   56 D1:D410 23 -  -  -  	inc hl
   57 D1:D411 3E 20 -  -  	ld a,%00100000
   58 D1:D413 77 -  -  -  	ld (hl),a 
   59 D1:D414 23 -  -  -  	inc hl
   60 D1:D415 3E 80 -  -  	ld a,%10000000
   61 D1:D417 77 -  -  -  	ld (hl),a 
   62 D1:D418 23 -  -  -  	inc hl
   63 D1:D419 3E 1F -  -  	ld a,%00011111
   64 D1:D41B 77 -  -  -  	ld (hl),a 
   65 D1:D41C 23 -  -  -  	inc hl
   66 D1:D41D 3E 81 -  -  	ld a,%10000001
   67 D1:D41F 77 -  -  -  	ld (hl),a 
   68 D1:D420 23 -  -  -  	inc hl
   69 D1:D421 3E 00 -  -  	ld a,%00000000
   70 D1:D423 77 -  -  -  	ld (hl),a 
   71 D1:D424 23 -  -  -  	inc hl
   72 D1:D425 3E 00 -  -  	ld a,%00000000
   73 D1:D427 77 -  -  -  	ld (hl),a 
   74 D1:D428 23 -  -  -  	inc hl
   75 D1:D429 3E 1F -  -  	ld a,%00011111
   76 D1:D42B 77 -  -  -  	ld (hl),a 
   77 D1:D42C 23 -  -  -  	inc hl
   78 D1:D42D 3E 81 -  -  	ld a,%10000001
   79 D1:D42F 77 -  -  -  	ld (hl),a 
   80 D1:D430 23 -  -  -  	inc hl
   81 D1:D431 3E 1F -  -  	ld a,%00011111
   82 D1:D433 77 -  -  -  	ld (hl),a 
   83 D1:D434 23 -  -  -  	inc hl
   84 D1:D435 3E 81 -  -  	ld a,%10000001
   85 D1:D437 77 -  -  -  	ld (hl),a 
   86 D1:D438 23 -  -  -  	inc hl
   87 D1:D439 3E C6 -  -  	ld a,%11000110
   88 D1:D43B 77 -  -  -  	ld (hl),a 
   89 D1:D43C 23 -  -  -  	inc hl
   90 D1:D43D 3E 98 -  -  	ld a,%10011000
   91 D1:D43F 77 -  -  -  	ld (hl),a 
   92 D1:D440 23 -  -  -  	inc hl
   93 D1:D441 3E 95 -  -  	ld a,%10010101
   94 D1:D443 77 -  -  -  	ld (hl),a 
   95 D1:D444 23 -  -  -  	inc hl
   96 D1:D445 3E 99 -  -  	ld a,%10011001
   97 D1:D447 77 -  -  -  	ld (hl),a 
   98 D1:D448 23 -  -  -  	inc hl
   99 D1:D449 C9 -  -  -  	ret 
Listing for file "ascent.asm"
  569 D1:D44A -  -  -  -  #include "generated/Sprite_Tables.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Tables.txt"
    1 D1:D44A -  -  -  -  Sprite_Table_Table:
    2 D1:D44A 50 D4 D1 -  	.dl Sprite_Table_0
    3 D1:D44D 06 D6 D1 -  	.dl Sprite_Table_1
    4 D1:D450 -  -  -  -  
    5 D1:D450 -  -  -  -  
    6 D1:D450 -  -  -  -  Sprite_Table_0:
    7 D1:D450 34 32 D4 -  	.dl GroundDirtFull_Fast
    8 D1:D453 E6 32 D4 -  	.dl GroundDirtFull_Fast_F
    9 D1:D456 98 33 D4 -  	.dl GroundDirtMound_Fast
   10 D1:D459 18 34 D4 -  	.dl GroundDirtMound_Fast_F
   11 D1:D45C 98 34 D4 -  	.dl GroundGrassL4_Fast
   12 D1:D45F 22 35 D4 -  	.dl GroundGrassL2_Fast
   13 D1:D462 7A 35 D4 -  	.dl GroundGrassL5_Fast
   14 D1:D465 FC 35 D4 -  	.dl GroundGrassL3_Fast
   15 D1:D468 56 36 D4 -  	.dl GroundGrassL1_Fast
   16 D1:D46B C8 36 D4 -  	.dl GroundGrassL1_Fast_F
   17 D1:D46E 3A 37 D4 -  	.dl GroundGrassL3_Fast_F
   18 D1:D471 38 38 D4 -  	.dl Branches_9_Fast
   19 D1:D474 27 39 D4 -  	.dl Branches_13_Slow_O
   20 D1:D477 93 37 D4 -  	.dl Branches_10_Slow_O
   21 D1:D47A BB 38 D4 -  	.dl Branches_16_Slow
   22 D1:D47D 6D 39 D4 -  	.dl Leaves_3_Slow
   23 D1:D480 DA 39 D4 -  	.dl Leaves_7_Fast
   24 D1:D483 62 3A D4 -  	.dl Leaves_7_Fast_F
   25 D1:D486 4D 46 D4 -  	.dl Branches_8_Slow_O
   26 D1:D489 D1 47 D4 -  	.dl Leaves_3_Slow_F
   27 D1:D48C ED 42 D4 -  	.dl Branches_14_Slow_O
   28 D1:D48F A9 3E D4 -  	.dl Branches_15_Slow_O_F
   29 D1:D492 3B 3D D4 -  	.dl Branches_15_Slow_O
   30 D1:D495 E8 41 D4 -  	.dl Branches_11_Fast_F
   31 D1:D498 BC 42 D4 -  	.dl Branches_13_Fast_F
   32 D1:D49B 70 41 D4 -  	.dl Branches_10_Fast_F
   33 D1:D49E D6 46 D4 -  	.dl Branches_10_Fast
   34 D1:D4A1 4D 47 D4 -  	.dl Leaves_6_Slow_O
   35 D1:D4A4 E9 3A D4 -  	.dl Branches_6_Slow
   36 D1:D4A7 87 3B D4 -  	.dl Branches_10_Slow_O_F
   37 D1:D4AA 2F 3E D4 -  	.dl Branches_12_Slow_O
   38 D1:D4AD 83 3F D4 -  	.dl Leaves_4_Slow
   39 D1:D4B0 A7 3D D4 -  	.dl Branches_8_Slow_O_F
   40 D1:D4B3 CF 3C D4 -  	.dl Branches_16_Slow_O
   41 D1:D4B6 2B 3C D4 -  	.dl Branches_7_Slow_O
   42 D1:D4B9 0D 40 D4 -  	.dl Leaves_4_Slow_F
   43 D1:D4BC 19 3F D4 -  	.dl Leaves_2_Slow_O
   44 D1:D4BF 98 40 D4 -  	.dl Branches_7_Fast
   45 D1:D4C2 12 41 D4 -  	.dl Branches_8_Fast
   46 D1:D4C5 5D 43 D4 -  	.dl Branches_15_Slow_F
   47 D1:D4C8 C9 43 D4 -  	.dl Leaves_6_Slow
   48 D1:D4CB 4F 42 D4 -  	.dl Branches_16_Slow_O_F
   49 D1:D4CE 3D 48 D4 -  	.dl Vines_8_Slow
   50 D1:D4D1 07 49 D4 -  	.dl Vines_2_Slow_O
   51 D1:D4D4 DF 49 D4 -  	.dl Vines_3_Slow
   52 D1:D4D7 8F 4A D4 -  	.dl Vines_5_Slow
   53 D1:D4DA 33 4C D4 -  	.dl Vines_4_Slow_F
   54 D1:D4DD EB 4C D4 -  	.dl Vines_1_Slow_O
   55 D1:D4E0 81 4B D4 -  	.dl Vines_9_Slow
   56 D1:D4E3 77 4D D4 -  	.dl Vines_9_Slow_O_F
   57 D1:D4E6 29 4E D4 -  	.dl Vines_3_Slow_F
   58 D1:D4E9 4C 44 D4 -  	.dl Branches_4_Fast_F
   59 D1:D4EC EA 44 D4 -  	.dl Branches_7_Fast_F
   60 D1:D4EF 64 45 D4 -  	.dl Branches_12_Fast_F
   61 D1:D4F2 BF 45 D4 -  	.dl Leaves_4_Slow_O
   62 D1:D4F5 BD 07 D4 -  	.dl Vines_2_Slow_F
   63 D1:D4F8 97 08 D4 -  	.dl Vines_1_Slow
   64 D1:D4FB F5 59 D4 -  	.dl Vines_8_Slow_O
   65 D1:D4FE BB 5A D4 -  	.dl Vines_8_Slow_O_F
   66 D1:D501 81 5B D4 -  	.dl Vines_6_Slow
   67 D1:D504 46 06 D4 -  	.dl Branches_8_Fast_F
   68 D1:D507 A5 06 D4 -  	.dl Branches_15_Slow
   69 D1:D50A 98 34 D4 -  	.dl Branches_5_Fast
   70 D1:D50D 38 35 D4 -  	.dl Branches_4_Fast
   71 D1:D510 D9 4E D4 -  	.dl Vines_8_Slow_F
   72 D1:D513 27 09 D4 -  	.dl Vines_9_Slow_O
   73 D1:D516 16 07 D4 -  	.dl Branches_3_Fast
   74 D1:D519 D6 35 D4 -  	.dl Branches_2_Fast
   75 D1:D51C 7F 36 D4 -  	.dl Vines_3_Slow_O
   76 D1:D51F A3 4F D4 -  	.dl Branches_9_Slow_O
   77 D1:D522 2C 51 D4 -  	.dl Tree_2_Fast
   78 D1:D525 28 52 D4 -  	.dl Tree_4_Fast
   79 D1:D528 2A 53 D4 -  	.dl Tree_7_Fast
   80 D1:D52B 2C 54 D4 -  	.dl Tree_9_Fast
   81 D1:D52E 2E 55 D4 -  	.dl Tree_6_Fast_F
   82 D1:D531 30 56 D4 -  	.dl Tree_3_Fast_F
   83 D1:D534 D8 09 D4 -  	.dl Tree_0_Fast_F
   84 D1:D537 D4 0A D4 -  	.dl Tree_3_Fast
   85 D1:D53A D6 0B D4 -  	.dl Tree_8_Fast
   86 D1:D53D D8 0C D4 -  	.dl Tree_9_Fast_F
   87 D1:D540 DA 0D D4 -  	.dl Tree_8_Fast_F
   88 D1:D543 DC 0E D4 -  	.dl Tree_4_Fast_F
   89 D1:D546 DE 0F D4 -  	.dl Tree_1_Fast
   90 D1:D549 DC 10 D4 -  	.dl Tree_0_Fast
   91 D1:D54C D8 11 D4 -  	.dl Tree_1_Fast_F
   92 D1:D54F D6 12 D4 -  	.dl Tree_6_Fast
   93 D1:D552 D8 13 D4 -  	.dl Tree_10_Fast
   94 D1:D555 DA 14 D4 -  	.dl Tree_7_Fast_F
   95 D1:D558 DC 15 D4 -  	.dl Tree_5_Fast
   96 D1:D55B DE 16 D4 -  	.dl Tree_11_Fast
   97 D1:D55E E0 17 D4 -  	.dl Tree_5_Fast_F
   98 D1:D561 E2 18 D4 -  	.dl Tree_2_Fast_F
   99 D1:D564 DE 19 D4 -  	.dl Tree_11_Fast_F
  100 D1:D567 E0 1A D4 -  	.dl Branches_1_Fast
  101 D1:D56A 79 1B D4 -  	.dl Branches_2_Slow_O
  102 D1:D56D 59 1C D4 -  	.dl Branches_3_Slow_O
  103 D1:D570 33 1D D4 -  	.dl Branches_5_Slow_O
  104 D1:D573 03 1E D4 -  	.dl Leaves_3_Slow_O
  105 D1:D576 6F 1E D4 -  	.dl Vines_7_Slow
  106 D1:D579 2F 1F D4 -  	.dl Vines_5_Slow_O_F
  107 D1:D57C 1D 20 D4 -  	.dl Vines_3_Slow_O_F
  108 D1:D57F D3 20 D4 -  	.dl Vines_4_Slow_O
  109 D1:D582 85 21 D4 -  	.dl Vines_10_Slow
  110 D1:D585 47 22 D4 -  	.dl Vines_7_Slow_F
  111 D1:D588 07 23 D4 -  	.dl Vines_2_Slow
  112 D1:D58B E3 23 D4 -  	.dl Leaves_2_Slow
  113 D1:D58E 53 50 D4 -  	.dl Vines_2_Slow_O_F
  114 D1:D591 4C 24 D4 -  	.dl Branches_1_Fast_F
  115 D1:D594 E4 24 D4 -  	.dl Branches_2_Fast_F
  116 D1:D597 8E 25 D4 -  	.dl Branches_5_Fast_F
  117 D1:D59A 2F 26 D4 -  	.dl Branches_14_Slow
  118 D1:D59D 9B 26 D4 -  	.dl Vines_10_Slow_O
  119 D1:D5A0 5A 27 D4 -  	.dl Branches_0_Fast
  120 D1:D5A3 31 57 D4 -  	.dl Branches_1_Slow_O
  121 D1:D5A6 F7 57 D4 -  	.dl Branches_4_Slow_O
  122 D1:D5A9 C3 58 D4 -  	.dl Leaves_3_Slow_O_F
  123 D1:D5AC 31 59 D4 -  	.dl Vines_7_Slow_O
  124 D1:D5AF 38 5C D4 -  	.dl Branches_0_Fast_F
  125 D1:D5B2 D0 5C D4 -  	.dl Branches_9_Fast_F
  126 D1:D5B5 F2 27 D4 -  	.dl Clouds_2_Fast
  127 D1:D5B8 A4 28 D4 -  	.dl GroundDirtDark_Fast
  128 D1:D5BB 2A 29 D4 -  	.dl GroundDirtDark_Fast_F
  129 D1:D5BE B0 29 D4 -  	.dl GroundHumpDark_Fast
  130 D1:D5C1 36 2A D4 -  	.dl GroundHumpDark_Fast_F
  131 D1:D5C4 0C 2C D4 -  	.dl Tree_16_Fast
  132 D1:D5C7 61 2C D4 -  	.dl Tree_17_Slow_O
  133 D1:D5CA C9 2C D4 -  	.dl Tree_17_Slow_O_F
  134 D1:D5CD B5 2D D4 -  	.dl Tree_16_Slow_O
  135 D1:D5D0 3B 2E D4 -  	.dl Tree_17_Slow_F
  136 D1:D5D3 2E 2D D4 -  	.dl Leaves_8_Fast
  137 D1:D5D6 A3 2E D4 -  	.dl Tree_18_Slow_O
  138 D1:D5D9 07 2F D4 -  	.dl Tree_17_Slow
  139 D1:D5DC 6D 2F D4 -  	.dl Tree_18_Slow_F
  140 D1:D5DF D1 2F D4 -  	.dl Tree_16_Slow_O_F
  141 D1:D5E2 57 30 D4 -  	.dl Leaves_2_Slow_F
  142 D1:D5E5 BE 30 D4 -  	.dl Clouds_0_Fast
  143 D1:D5E8 24 31 D4 -  	.dl Clouds_1_Fast
  144 D1:D5EB 88 31 D4 -  	.dl Clouds_3_Fast
  145 D1:D5EE F4 31 D4 -  	.dl Clouds_4_Fast
  146 D1:D5F1 C0 01 D4 -  	.dl Clouds_0_Fast_F
  147 D1:D5F4 26 02 D4 -  	.dl Clouds_1_Fast_F
  148 D1:D5F7 8A 02 D4 -  	.dl Clouds_4_Fast_F
  149 D1:D5FA CA 02 D4 -  	.dl Clouds_3_Fast_F
  150 D1:D5FD 36 03 D4 -  	.dl Clouds_2_Fast_F
  151 D1:D600 BC 2A D4 -  	.dl GroundGrassSmall_Fast
  152 D1:D603 64 2B D4 -  	.dl GroundGrassSmall_Fast_F
  153 D1:D606 -  -  -  -  
  154 D1:D606 -  -  -  -  Sprite_Table_1:
  155 D1:D606 -  -  -  -  
Listing for file "ascent.asm"
  570 D1:D606 -  -  -  -  #include "generated/Sprite_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Data.txt"
    1 D1:D606 -  -  -  -  GroundDirtFull:
    2 D1:D606 24 -  -  -  	.db %00100100
    3 D1:D607 10 10 -  -  	.db 16, 16
    4 D1:D609 15 00 -  -  	.db %00010101, %00000000
    5 D1:D60B -  -  -  -  
    6 D1:D60B 04 00 00 00 
              04 00 00 00 	.db %00000100, %00000000, %00000000, %00000000, %00000100, %00000000, %00000000, %00000000
    7 D1:D613 AA AA 40 4A 
              21 12 10 24 	.db %10101010, %10101010, %01000000, %01001010, %00100001, %00010010, %00010000, %00100100
    8 D1:D61B 01 01 00 04 
              44 2A A8 10 	.db %00000001, %00000001, %00000000, %00000100, %01000100, %00101010, %10101000, %00010000
    9 D1:D623 10 A5 0A 80 
              04 00 00 A1 	.db %00010000, %10100101, %00001010, %10000000, %00000100, %00000000, %00000000, %10100001
   10 D1:D62B 84 40 00 61 
              10 10 00 10 	.db %10000100, %01000000, %00000000, %01100001, %00010000, %00010000, %00000000, %00010000
   11 D1:D633 0A AA 94 00 
              29 10 12 84 	.db %00001010, %10101010, %10010100, %00000000, %00101001, %00010000, %00010010, %10000100
   12 D1:D63B 10 00 42 84 
              01 29 00 80 	.db %00010000, %00000000, %01000010, %10000100, %00000001, %00101001, %00000000, %10000000
   13 D1:D643 04 A1 40 8A 
              A0 00 00 00 	.db %00000100, %10100001, %01000000, %10001010, %10100000, %00000000, %00000000, %00000000
   14 D1:D64B -  -  -  -  
   15 D1:D64B -  -  -  -  
   16 D1:D64B -  -  -  -  GroundDirtMound:
   17 D1:D64B 20 -  -  -  	.db %00100000
   18 D1:D64C 10 0C -  -  	.db 16, 12
   19 D1:D64E 0F F0 3F FC 
              FF FF FF FF 	.db %00001111, %11110000, %00111111, %11111100, %11111111, %11111111, %11111111, %11111111
   20 D1:D656 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   21 D1:D65E FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   22 D1:D666 -  -  -  -  
   23 D1:D666 01 50 -  -  	.db %00000001, %01010000
   24 D1:D668 -  -  -  -  
   25 D1:D668 00 00 05 55 
              50 05 56 59 	.db %00000000, %00000000, %00000101, %01010101, %01010000, %00000101, %01010110, %01011001
   26 D1:D670 50 55 96 5A 
              55 55 9A 56 	.db %01010000, %01010101, %10010110, %01011010, %01010101, %01010101, %10011010, %01010110
   27 D1:D678 56 A5 54 00 
              01 59 55 65 	.db %01010110, %10100101, %01010100, %00000000, %00000001, %01011001, %01010101, %01100101
   28 D1:D680 50 00 15 69 
              55 15 59 59 	.db %01010000, %00000000, %00010101, %01101001, %01010101, %00010101, %01011001, %01011001
   29 D1:D688 65 56 50 05 
              66 55 41 41 	.db %01100101, %01010110, %01010000, %00000101, %01100110, %01010101, %01000001, %01000001
   30 D1:D690 A6 65 95 55 
              95 -  -  -  	.db %10100110, %01100101, %10010101, %01010101, %10010101
   31 D1:D695 -  -  -  -  
   32 D1:D695 -  -  -  -  
   33 D1:D695 -  -  -  -  GroundGrassL4:
   34 D1:D695 08 -  -  -  	.db %00001000
   35 D1:D696 0E 10 -  -  	.db 14, 16
   36 D1:D698 0F C0 3F C0 
              FF 03 FC 3F 	.db %00001111, %11000000, %00111111, %11000000, %11111111, %00000011, %11111100, %00111111
   37 D1:D6A0 F0 FF C3 FF 
              0F FC 3F F0 	.db %11110000, %11111111, %11000011, %11111111, %00001111, %11111100, %00111111, %11110000
   38 D1:D6A8 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   39 D1:D6B0 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
   40 D1:D6B4 -  -  -  -  
   41 D1:D6B4 50 -  -  -  	.db %01010000
   42 D1:D6B5 -  -  -  -  
   43 D1:D6B5 -  -  -  -  
   44 D1:D6B5 -  -  -  -  
   45 D1:D6B5 -  -  -  -  GroundGrassL2:
   46 D1:D6B5 08 -  -  -  	.db %00001000
   47 D1:D6B6 0A 10 -  -  	.db 10, 16
   48 D1:D6B8 03 00 C0 30 
              0C 03 03 C0 	.db %00000011, %00000000, %11000000, %00110000, %00001100, %00000011, %00000011, %11000000
   49 D1:D6C0 FC 3F 0F C3 
              C3 F0 FC 3F 	.db %11111100, %00111111, %00001111, %11000011, %11000011, %11110000, %11111100, %00111111
   50 D1:D6C8 0F CF F3 FC 	.db %00001111, %11001111, %11110011, %11111100
   51 D1:D6CC -  -  -  -  
   52 D1:D6CC 50 -  -  -  	.db %01010000
   53 D1:D6CD -  -  -  -  
   54 D1:D6CD -  -  -  -  
   55 D1:D6CD -  -  -  -  
   56 D1:D6CD -  -  -  -  GroundGrassL5:
   57 D1:D6CD 08 -  -  -  	.db %00001000
   58 D1:D6CE 10 10 -  -  	.db 16, 16
   59 D1:D6D0 00 3F 00 3F 
              00 FF 00 FF 	.db %00000000, %00111111, %00000000, %00111111, %00000000, %11111111, %00000000, %11111111
   60 D1:D6D8 03 FF 03 FF 
              0F FC 0F FC 	.db %00000011, %11111111, %00000011, %11111111, %00001111, %11111100, %00001111, %11111100
   61 D1:D6E0 3F FC 3F FC 
              3F FC 3F F0 	.db %00111111, %11111100, %00111111, %11111100, %00111111, %11111100, %00111111, %11110000
   62 D1:D6E8 FF F0 FF F0 
              FF F0 FF F0 	.db %11111111, %11110000, %11111111, %11110000, %11111111, %11110000, %11111111, %11110000
   63 D1:D6F0 -  -  -  -  
   64 D1:D6F0 50 -  -  -  	.db %01010000
   65 D1:D6F1 -  -  -  -  
   66 D1:D6F1 -  -  -  -  
   67 D1:D6F1 -  -  -  -  
   68 D1:D6F1 -  -  -  -  GroundGrassL3:
   69 D1:D6F1 08 -  -  -  	.db %00001000
   70 D1:D6F2 0E 0E -  -  	.db 14, 14
   71 D1:D6F4 C0 03 00 0C 
              00 3C 00 F0 	.db %11000000, %00000011, %00000000, %00001100, %00000000, %00111100, %00000000, %11110000
   72 D1:D6FC 03 F0 03 C0 
              0F C0 3F 0C 	.db %00000011, %11110000, %00000011, %11000000, %00001111, %11000000, %00111111, %00001100
   73 D1:D704 3C 30 FC C3 
              F3 03 FC 0F 	.db %00111100, %00110000, %11111100, %11000011, %11110011, %00000011, %11111100, %00001111
   74 D1:D70C F0 -  -  -  	.db %11110000
   75 D1:D70D -  -  -  -  
   76 D1:D70D 50 -  -  -  	.db %01010000
   77 D1:D70E -  -  -  -  
   78 D1:D70E -  -  -  -  
   79 D1:D70E -  -  -  -  
   80 D1:D70E -  -  -  -  GroundGrassL1:
   81 D1:D70E 08 -  -  -  	.db %00001000
   82 D1:D70F 0C 10 -  -  	.db 12, 16
   83 D1:D711 00 C0 0C C3 
              FC 3F F3 FF 	.db %00000000, %11000000, %00001100, %11000011, %11111100, %00111111, %11110011, %11111111
   84 D1:D719 FF FF FF FF 
              3F F3 FF 3F 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11110011, %11111111, %00111111
   85 D1:D721 C3 FC 0F 00 
              F0 0F 00 F0 	.db %11000011, %11111100, %00001111, %00000000, %11110000, %00001111, %00000000, %11110000
   86 D1:D729 -  -  -  -  
   87 D1:D729 50 -  -  -  	.db %01010000
   88 D1:D72A -  -  -  -  
   89 D1:D72A -  -  -  -  
   90 D1:D72A -  -  -  -  
   91 D1:D72A -  -  -  -  Branches_10:
   92 D1:D72A 20 -  -  -  	.db %00100000
   93 D1:D72B 12 0E -  -  	.db 18, 14
   94 D1:D72D 00 0F C0 0F 
              F0 0F FC 03 	.db %00000000, %00001111, %11000000, %00001111, %11110000, %00001111, %11111100, %00000011
   95 D1:D735 FF 03 FF C3 
              FF F3 FF FF 	.db %11111111, %00000011, %11111111, %11000011, %11111111, %11110011, %11111111, %11111111
   96 D1:D73D FF FC FF FC 
              3F FC 0F FC 	.db %11111111, %11111100, %11111111, %11111100, %00111111, %11111100, %00001111, %11111100
   97 D1:D745 03 FC 00 FF 
              00 33 00 00 	.db %00000011, %11111100, %00000000, %11111111, %00000000, %00110011, %00000000, %00000000
   98 D1:D74D -  -  -  -  
   99 D1:D74D 01 23 -  -  	.db %00000001, %00100011
  100 D1:D74F -  -  -  -  
  101 D1:D74F 04 60 46 F0 
              15 BE 14 2D 	.db %00000100, %01100000, %01000110, %11110000, %00010101, %10111110, %00010100, %00101101
  102 D1:D757 50 15 E5 00 
              55 39 55 04 	.db %01010000, %00010101, %11100101, %00000000, %01010101, %00111001, %01010101, %00000100
  103 D1:D75F 4A A9 10 01 
              5A D8 40 55 	.db %01001010, %10101001, %00010000, %00000001, %01011010, %11011000, %01000000, %01010101
  104 D1:D767 2F 85 01 4E 
              25 0B E8 50 	.db %00101111, %10000101, %00000001, %01001110, %00100101, %00001011, %11101000, %01010000
  105 D1:D76F A9 10 50 40 
              00 -  -  -  	.db %10101001, %00010000, %01010000, %01000000, %00000000
  106 D1:D774 -  -  -  -  
  107 D1:D774 -  -  -  -  
  108 D1:D774 -  -  -  -  Branches_9:
  109 D1:D774 20 -  -  -  	.db %00100000
  110 D1:D775 12 0E -  -  	.db 18, 14
  111 D1:D777 00 30 C0 3F 
              F0 0F FC 0F 	.db %00000000, %00110000, %11000000, %00111111, %11110000, %00001111, %11111100, %00001111
  112 D1:D77F FF 0F FF FF 
              FF FF FF FF 	.db %11111111, %00001111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  113 D1:D787 FF FF FF FF 
              FF FF CF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11001111, %11111111
  114 D1:D78F 03 FF 00 FF 
              00 0C 00 00 	.db %00000011, %11111111, %00000000, %11111111, %00000000, %00001100, %00000000, %00000000
  115 D1:D797 -  -  -  -  
  116 D1:D797 01 23 -  -  	.db %00000001, %00100011
  117 D1:D799 -  -  -  -  
  118 D1:D799 00 00 00 51 
              51 40 06 50 	.db %00000000, %00000000, %00000000, %01010001, %01010001, %01000000, %00000110, %01010000
  119 D1:D7A1 55 04 58 AA 
              A0 01 51 FB 	.db %01010101, %00000100, %01011000, %10101010, %10100000, %00000001, %01010001, %11111011
  120 D1:D7A9 BF 05 45 B9 
              65 05 05 BA 	.db %10111111, %00000101, %01000101, %10111001, %01100101, %00000101, %00000101, %10111010
  121 D1:D7B1 50 11 BF BE 
              50 55 06 A9 	.db %01010000, %00010001, %10111111, %10111110, %01010000, %01010101, %00000110, %10101001
  122 D1:D7B9 44 40 00 14 
              15 05 15 40 	.db %01000100, %01000000, %00000000, %00010100, %00010101, %00000101, %00010101, %01000000
  123 D1:D7C1 04 00 00 -  	.db %00000100, %00000000, %00000000
  124 D1:D7C4 -  -  -  -  
  125 D1:D7C4 -  -  -  -  
  126 D1:D7C4 -  -  -  -  Branches_16:
  127 D1:D7C4 20 -  -  -  	.db %00100000
  128 D1:D7C5 0D 0D -  -  	.db 13, 13
  129 D1:D7C7 07 F8 3F 83 
              FC 1F C0 FC 	.db %00000111, %11111000, %00111111, %10000011, %11111100, %00011111, %11000000, %11111100
  130 D1:D7CF 0F C0 7C 07 
              C0 3C 03 C0 	.db %00001111, %11000000, %01111100, %00000111, %11000000, %00111100, %00000011, %11000000
  131 D1:D7D7 1E 01 E0 0C 
              00 00 -  -  	.db %00011110, %00000001, %11100000, %00001100, %00000000, %00000000
  132 D1:D7DD -  -  -  -  
  133 D1:D7DD 01 23 -  -  	.db %00000001, %00100011
  134 D1:D7DF -  -  -  -  
  135 D1:D7DF 16 A4 12 D0 
              43 50 6C 00 	.db %00010110, %10100100, %00010010, %11010000, %01000011, %01010000, %01101100, %00000000
  136 D1:D7E7 94 0A 01 40 
              64 24 18 14 	.db %10010100, %00001010, %00000001, %01000000, %01100100, %00100100, %00011000, %00010100
  137 D1:D7EF 10 00 -  -  	.db %00010000, %00000000
  138 D1:D7F1 -  -  -  -  
  139 D1:D7F1 -  -  -  -  
  140 D1:D7F1 -  -  -  -  Branches_13:
  141 D1:D7F1 20 -  -  -  	.db %00100000
  142 D1:D7F2 0E 06 -  -  	.db 14, 6
  143 D1:D7F4 00 0C 33 FF 
              FF FF FF 3F 	.db %00000000, %00001100, %00110011, %11111111, %11111111, %11111111, %11111111, %00111111
  144 D1:D7FC FC 03 F0 -  	.db %11111100, %00000011, %11110000
  145 D1:D7FF -  -  -  -  
  146 D1:D7FF 01 20 -  -  	.db %00000001, %00100000
  147 D1:D801 -  -  -  -  
  148 D1:D801 00 00 10 00 
              01 59 08 45 	.db %00000000, %00000000, %00010000, %00000000, %00000001, %01011001, %00001000, %01000101
  149 D1:D809 AA 50 00 15 
              60 00 -  -  	.db %10101010, %01010000, %00000000, %00010101, %01100000, %00000000
  150 D1:D80F -  -  -  -  
  151 D1:D80F -  -  -  -  
  152 D1:D80F -  -  -  -  Leaves_3:
  153 D1:D80F 10 -  -  -  	.db %00010000
  154 D1:D810 0B 0C -  -  	.db 11, 12
  155 D1:D812 78 0F C1 FC 
              1F 81 F8 1F 	.db %01111000, %00001111, %11000001, %11111100, %00011111, %10000001, %11111000, %00011111
  156 D1:D81A 80 F1 DE 7F 
              8F F3 F8 7C 	.db %10000000, %11110001, %11011110, %01111111, %10001111, %11110011, %11111000, %01111100
  157 D1:D822 00 -  -  -  	.db %00000000
  158 D1:D823 -  -  -  -  
  159 D1:D823 45 -  -  -  	.db %01000101
  160 D1:D824 -  -  -  -  
  161 D1:D824 02 08 18 20 
              8C 00 08 60 	.db %00000010, %00001000, %00011000, %00100000, %10001100, %00000000, %00001000, %01100000
  162 D1:D82C 40 00 -  -  	.db %01000000, %00000000
  163 D1:D82E -  -  -  -  
  164 D1:D82E -  -  -  -  
  165 D1:D82E -  -  -  -  Leaves_7:
  166 D1:D82E 10 -  -  -  	.db %00010000
  167 D1:D82F 10 0E -  -  	.db 16, 14
  168 D1:D831 03 C0 0F F0 
              3F FC 3F FC 	.db %00000011, %11000000, %00001111, %11110000, %00111111, %11111100, %00111111, %11111100
  169 D1:D839 FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  170 D1:D841 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  171 D1:D849 FF FC 30 30 	.db %11111111, %11111100, %00110000, %00110000
  172 D1:D84D -  -  -  -  
  173 D1:D84D 45 -  -  -  	.db %01000101
  174 D1:D84E -  -  -  -  
  175 D1:D84E 08 03 02 19 
              C0 1C 20 00 	.db %00001000, %00000011, %00000010, %00011001, %11000000, %00011100, %00100000, %00000000
  176 D1:D856 3C 07 07 9C 
              00 60 44 00 	.db %00111100, %00000111, %00000111, %10011100, %00000000, %01100000, %01000100, %00000000
  177 D1:D85E FC 03 80 F0 
              00 00 00 -  	.db %11111100, %00000011, %10000000, %11110000, %00000000, %00000000, %00000000
  178 D1:D865 -  -  -  -  
  179 D1:D865 -  -  -  -  
  180 D1:D865 -  -  -  -  Branches_6:
  181 D1:D865 20 -  -  -  	.db %00100000
  182 D1:D866 12 0B -  -  	.db 18, 11
  183 D1:D868 37 3F 3F FF 
              FF FF FF FF 	.db %00110111, %00111111, %00111111, %11111111, %11111111, %11111111, %11111111, %11111111
  184 D1:D870 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  185 D1:D878 FF FF FF FF 
              FC FF F0 00 	.db %11111111, %11111111, %11111111, %11111111, %11111100, %11111111, %11110000, %00000000
  186 D1:D880 0C -  -  -  	.db %00001100
  187 D1:D881 -  -  -  -  
  188 D1:D881 01 23 -  -  	.db %00000001, %00100011
  189 D1:D883 -  -  -  -  
  190 D1:D883 00 00 00 14 
              00 15 40 10 	.db %00000000, %00000000, %00000000, %00010100, %00000000, %00010101, %01000000, %00010000
  191 D1:D88B 05 44 01 55 
              94 41 55 15 	.db %00000101, %01000100, %00000001, %01010101, %10010100, %01000001, %01010101, %00010101
  192 D1:D893 2D CA 86 99 
              AA E6 BF FF 	.db %00101101, %11001010, %10000110, %10011001, %10101010, %11100110, %10111111, %11111111
  193 D1:D89B FF C8 59 15 
              A6 A8 16 15 	.db %11111111, %11001000, %01011001, %00010101, %10100110, %10101000, %00010110, %00010101
  194 D1:D8A3 01 54 15 41 
              55 00 14 00 	.db %00000001, %01010100, %00010101, %01000001, %01010101, %00000000, %00010100, %00000000
  195 D1:D8AB 00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000
  196 D1:D8AF -  -  -  -  
  197 D1:D8AF -  -  -  -  
  198 D1:D8AF -  -  -  -  Branches_7:
  199 D1:D8AF 20 -  -  -  	.db %00100000
  200 D1:D8B0 12 0A -  -  	.db 18, 10
  201 D1:D8B2 FF 3C FF FF 
              FF FF FF FF 	.db %11111111, %00111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  202 D1:D8BA FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  203 D1:D8C2 FF FF FF F3 
              C3 C0 F0 -  	.db %11111111, %11111111, %11111111, %11110011, %11000011, %11000000, %11110000
  204 D1:D8C9 -  -  -  -  
  205 D1:D8C9 01 23 -  -  	.db %00000001, %00100011
  206 D1:D8CB -  -  -  -  
  207 D1:D8CB 00 00 00 00 
              55 40 01 00 	.db %00000000, %00000000, %00000000, %00000000, %01010101, %01000000, %00000001, %00000000
  208 D1:D8D3 90 01 55 45 
              51 15 55 05 	.db %10010000, %00000001, %01010101, %01000101, %01010001, %00010101, %01010101, %00000101
  209 D1:D8DB 00 AB FA 9D 
              FA AF AA FB 	.db %00000000, %10101011, %11111010, %10011101, %11111010, %10101111, %10101010, %11111011
  210 D1:D8E3 AA BF 05 51 
              55 51 55 44 	.db %10101010, %10111111, %00000101, %01010001, %01010101, %01010001, %01010101, %01000100
  211 D1:D8EB 15 10 44 00 
              00 00 05 00 	.db %00010101, %00010000, %01000100, %00000000, %00000000, %00000000, %00000101, %00000000
  212 D1:D8F3 00 -  -  -  	.db %00000000
  213 D1:D8F4 -  -  -  -  
  214 D1:D8F4 -  -  -  -  
  215 D1:D8F4 -  -  -  -  Branches_15:
  216 D1:D8F4 20 -  -  -  	.db %00100000
  217 D1:D8F5 09 0E -  -  	.db 9, 14
  218 D1:D8F7 80 60 38 1E 
              07 C3 F1 FE 	.db %10000000, %01100000, %00111000, %00011110, %00000111, %11000011, %11110001, %11111110
  219 D1:D8FF 7F 1F 87 C1 
              E0 F0 18 0C 	.db %01111111, %00011111, %10000111, %11000001, %11100000, %11110000, %00011000, %00001100
  220 D1:D907 -  -  -  -  
  221 D1:D907 01 23 -  -  	.db %00000001, %00100011
  222 D1:D909 -  -  -  -  
  223 D1:D909 00 01 01 00 
              64 00 84 01 	.db %00000000, %00000001, %00000001, %00000000, %01100100, %00000000, %10000100, %00000001
  224 D1:D911 A1 06 90 6C 
              68 10 40 -  	.db %10100001, %00000110, %10010000, %01101100, %01101000, %00010000, %01000000
  225 D1:D918 -  -  -  -  
  226 D1:D918 -  -  -  -  
  227 D1:D918 -  -  -  -  Branches_8:
  228 D1:D918 20 -  -  -  	.db %00100000
  229 D1:D919 0A 0E -  -  	.db 10, 14
  230 D1:D91B 03 C3 F3 FC 
              FF 3F FF FF 	.db %00000011, %11000011, %11110011, %11111100, %11111111, %00111111, %11111111, %11111111
  231 D1:D923 FF FF FF 3F 
              CF F3 F0 F0 	.db %11111111, %11111111, %11111111, %00111111, %11001111, %11110011, %11110000, %11110000
  232 D1:D92B 3C 00 -  -  	.db %00111100, %00000000
  233 D1:D92D -  -  -  -  
  234 D1:D92D 01 23 -  -  	.db %00000001, %00100011
  235 D1:D92F -  -  -  -  
  236 D1:D92F 06 00 60 12 
              90 5B 51 1A 	.db %00000110, %00000000, %01100000, %00010010, %10010000, %01011011, %01010001, %00011010
  237 D1:D937 50 51 94 11 
              F9 45 6E 50 	.db %01010000, %01010001, %10010100, %00010001, %11111001, %01000101, %01101110, %01010000
  238 D1:D93F 4B 84 5E 54 
              B8 50 A1 01 	.db %01001011, %10000100, %01011110, %01010100, %10111000, %01010000, %10100001, %00000001
  239 D1:D947 44 40 -  -  	.db %01000100, %01000000
  240 D1:D949 -  -  -  -  
  241 D1:D949 -  -  -  -  
  242 D1:D949 -  -  -  -  Branches_12:
  243 D1:D949 20 -  -  -  	.db %00100000
  244 D1:D94A 12 0A -  -  	.db 18, 10
  245 D1:D94C 00 00 C0 3F 
              F0 FF FF FF 	.db %00000000, %00000000, %11000000, %00111111, %11110000, %11111111, %11111111, %11111111
  246 D1:D954 FF FF FF FF 
              FF FF FF FC 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111100
  247 D1:D95C 0F FF 00 0F 
              C0 00 F0 -  	.db %00001111, %11111111, %00000000, %00001111, %11000000, %00000000, %11110000
  248 D1:D963 -  -  -  -  
  249 D1:D963 01 23 -  -  	.db %00000001, %00100011
  250 D1:D965 -  -  -  -  
  251 D1:D965 00 00 00 00 
              05 54 50 01 	.db %00000000, %00000000, %00000000, %00000000, %00000101, %01010100, %01010000, %00000001
  252 D1:D96D 45 04 16 3A 
              5F 2A F8 F2 	.db %01000101, %00000100, %00010110, %00111010, %01011111, %00101010, %11111000, %11110010
  253 D1:D975 12 9A C5 6A 
              00 00 15 06 	.db %00010010, %10011010, %11000101, %01101010, %00000000, %00000000, %00010101, %00000110
  254 D1:D97D 90 00 14 10 
              14 00 -  -  	.db %10010000, %00000000, %00010100, %00010000, %00010100, %00000000
  255 D1:D983 -  -  -  -  
  256 D1:D983 -  -  -  -  
  257 D1:D983 -  -  -  -  Leaves_2:
  258 D1:D983 10 -  -  -  	.db %00010000
  259 D1:D984 0C 09 -  -  	.db 12, 9
  260 D1:D986 01 C0 1C 0F 
              C0 F7 6F 7F 	.db %00000001, %11000000, %00011100, %00001111, %11000000, %11110111, %01101111, %01111111
  261 D1:D98E C2 E7 0E 70 
              06 00 -  -  	.db %11000010, %11100111, %00001110, %01110000, %00000110, %00000000
  262 D1:D994 -  -  -  -  
  263 D1:D994 45 -  -  -  	.db %01000101
  264 D1:D995 -  -  -  -  
  265 D1:D995 0D 06 00 22 
              8F 0C 00 -  	.db %00001101, %00000110, %00000000, %00100010, %10001111, %00001100, %00000000
  266 D1:D99C -  -  -  -  
  267 D1:D99C -  -  -  -  
  268 D1:D99C -  -  -  -  Leaves_4:
  269 D1:D99C 10 -  -  -  	.db %00010000
  270 D1:D99D 0E 0B -  -  	.db 14, 11
  271 D1:D99F 01 80 1F 83 
              7F 1F FC FF 	.db %00000001, %10000000, %00011111, %10000011, %01111111, %00011111, %11111100, %11111111
  272 D1:D9A7 F3 F7 FF 9F 
              FE 7F F1 FF 	.db %11110011, %11110111, %11111111, %10011111, %11111110, %01111111, %11110001, %11111111
  273 D1:D9AF 83 F0 03 C0 	.db %10000011, %11110000, %00000011, %11000000
  274 D1:D9B3 -  -  -  -  
  275 D1:D9B3 54 -  -  -  	.db %01010100
  276 D1:D9B4 -  -  -  -  
  277 D1:D9B4 33 EF F3 7F 
              77 FF 7E FB 	.db %00110011, %11101111, %11110011, %01111111, %01110111, %11111111, %01111110, %11111011
  278 D1:D9BC DF BD FD FE 
              F8 -  -  -  	.db %11011111, %10111101, %11111101, %11111110, %11111000
  279 D1:D9C1 -  -  -  -  
  280 D1:D9C1 -  -  -  -  
  281 D1:D9C1 -  -  -  -  Branches_11:
  282 D1:D9C1 20 -  -  -  	.db %00100000
  283 D1:D9C2 12 0A -  -  	.db 18, 10
  284 D1:D9C4 00 03 C3 CF 
              FF FF FF FF 	.db %00000000, %00000011, %11000011, %11001111, %11111111, %11111111, %11111111, %11111111
  285 D1:D9CC FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  286 D1:D9D4 FF FF 03 F3 
              C0 00 30 -  	.db %11111111, %11111111, %00000011, %11110011, %11000000, %00000000, %00110000
  287 D1:D9DB -  -  -  -  
  288 D1:D9DB 01 32 -  -  	.db %00000001, %00110010
  289 D1:D9DD -  -  -  -  
  290 D1:D9DD 00 00 00 15 
              00 00 05 44 	.db %00000000, %00000000, %00000000, %00010101, %00000000, %00000000, %00000101, %01000100
  291 D1:D9E5 15 65 55 04 
              10 FB FA 3F 	.db %00010101, %01100101, %01010101, %00000100, %00010000, %11111011, %11111010, %00111111
  292 D1:D9ED FF B7 D3 FB 
              EA BE 15 54 	.db %11111111, %10110111, %11010011, %11111011, %11101010, %10111110, %00010101, %01010100
  293 D1:D9F5 14 15 E0 00 
              14 10 15 00 	.db %00010100, %00010101, %11100000, %00000000, %00010100, %00010000, %00010101, %00000000
  294 D1:D9FD 00 10 -  -  	.db %00000000, %00010000
  295 D1:D9FF -  -  -  -  
  296 D1:D9FF -  -  -  -  
  297 D1:D9FF -  -  -  -  Branches_14:
  298 D1:D9FF 20 -  -  -  	.db %00100000
  299 D1:DA00 06 0E -  -  	.db 6, 14
  300 D1:DA02 30 C3 0C 39 
              E7 9E FF FF 	.db %00110000, %11000011, %00001100, %00111001, %11100111, %10011110, %11111111, %11111111
  301 D1:DA0A FF FF F0 -  	.db %11111111, %11111111, %11110000
  302 D1:DA0D -  -  -  -  
  303 D1:DA0D 01 23 -  -  	.db %00000001, %00100011
  304 D1:DA0F -  -  -  -  
  305 D1:DA0F 00 00 10 20 
              20 20 1D 06 	.db %00000000, %00000000, %00010000, %00100000, %00100000, %00100000, %00011101, %00000110
  306 D1:DA17 90 65 06 10 
              59 07 90 -  	.db %10010000, %01100101, %00000110, %00010000, %01011001, %00000111, %10010000
  307 D1:DA1E -  -  -  -  
  308 D1:DA1E -  -  -  -  
  309 D1:DA1E -  -  -  -  Leaves_6:
  310 D1:DA1E 10 -  -  -  	.db %00010000
  311 D1:DA1F 0D 0D -  -  	.db 13, 13
  312 D1:DA21 60 1F C1 FF 
              0E FE F3 FF 	.db %01100000, %00011111, %11000001, %11111111, %00001110, %11111110, %11110011, %11111111
  313 D1:DA29 87 F8 1F 80 
              3C 01 E0 07 	.db %10000111, %11111000, %00011111, %10000000, %00111100, %00000001, %11100000, %00000111
  314 D1:DA31 80 3C 00 E0 
              03 00 -  -  	.db %10000000, %00111100, %00000000, %11100000, %00000011, %00000000
  315 D1:DA37 -  -  -  -  
  316 D1:DA37 54 -  -  -  	.db %01010100
  317 D1:DA38 -  -  -  -  
  318 D1:DA38 00 24 36 04 
              01 98 00 00 	.db %00000000, %00100100, %00110110, %00000100, %00000001, %10011000, %00000000, %00000000
  319 D1:DA40 46 60 -  -  	.db %01000110, %01100000
  320 D1:DA42 -  -  -  -  
  321 D1:DA42 -  -  -  -  
  322 D1:DA42 -  -  -  -  Branches_4:
  323 D1:DA42 20 -  -  -  	.db %00100000
  324 D1:DA43 12 0E -  -  	.db 18, 14
  325 D1:DA45 00 03 CF FF 
              FF FF FF FF 	.db %00000000, %00000011, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111
  326 D1:DA4D FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  327 D1:DA55 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  328 D1:DA5D FF FF FF 3F 
              FF C0 FF 30 	.db %11111111, %11111111, %11111111, %00111111, %11111111, %11000000, %11111111, %00110000
  329 D1:DA65 -  -  -  -  
  330 D1:DA65 01 23 -  -  	.db %00000001, %00100011
  331 D1:DA67 -  -  -  -  
  332 D1:DA67 00 00 00 00 
              00 00 50 45 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %01010000, %01000101
  333 D1:DA6F 01 55 50 00 
              25 00 14 16 	.db %00000001, %01010101, %01010000, %00000000, %00100101, %00000000, %00010100, %00010110
  334 D1:DA77 11 45 5A 19 
              2A AA 58 3F 	.db %00010001, %01000101, %01011010, %00011001, %00101010, %10101010, %01011000, %00111111
  335 D1:DA7F AA AA AF FE 
              BD FF DF E2 	.db %10101010, %10101010, %10101111, %11111110, %10111101, %11111111, %11011111, %11100010
  336 D1:DA87 55 64 02 AA 
              60 00 05 50 	.db %01010101, %01100100, %00000010, %10101010, %01100000, %00000000, %00000101, %01010000
  337 D1:DA8F 54 15 54 00 
              00 00 00 05 	.db %01010100, %00010101, %01010100, %00000000, %00000000, %00000000, %00000000, %00000101
  338 D1:DA97 10 55 00 00 
              00 00 00 00 	.db %00010000, %01010101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  339 D1:DA9F 00 -  -  -  	.db %00000000
  340 D1:DAA0 -  -  -  -  
  341 D1:DAA0 -  -  -  -  
  342 D1:DAA0 -  -  -  -  Vines_8:
  343 D1:DAA0 10 -  -  -  	.db %00010000
  344 D1:DAA1 0A 18 -  -  	.db 10, 24
  345 D1:DAA3 07 01 C1 F0 
              3C 07 01 C1 	.db %00000111, %00000001, %11000001, %11110000, %00111100, %00000111, %00000001, %11000001
  346 D1:DAAB FC 3B 0E 03 
              80 E0 38 0E 	.db %11111100, %00111011, %00001110, %00000011, %10000000, %11100000, %00111000, %00001110
  347 D1:DAB3 07 A1 FB 78 
              FC 07 03 80 	.db %00000111, %10100001, %11111011, %01111000, %11111100, %00000111, %00000011, %10000000
  348 D1:DABB E0 3E 0D 87 
              01 C0 -  -  	.db %11100000, %00111110, %00001101, %10000111, %00000001, %11000000
  349 D1:DAC1 -  -  -  -  
  350 D1:DAC1 45 -  -  -  	.db %01000101
  351 D1:DAC2 -  -  -  -  
  352 D1:DAC2 24 66 D8 F7 
              B6 DB 3B E3 	.db %00100100, %01100110, %11011000, %11110111, %10110110, %11011011, %00111011, %11100011
  353 D1:DACA 86 C9 7B B6 	.db %10000110, %11001001, %01111011, %10110110
  354 D1:DACE -  -  -  -  
  355 D1:DACE -  -  -  -  
  356 D1:DACE -  -  -  -  Vines_2:
  357 D1:DACE 10 -  -  -  	.db %00010000
  358 D1:DACF 16 13 -  -  	.db 22, 19
  359 D1:DAD1 00 00 04 00 
              00 30 00 39 	.db %00000000, %00000000, %00000100, %00000000, %00000000, %00110000, %00000000, %00111001
  360 D1:DAD9 C0 00 6F 00 
              10 78 00 63 	.db %11000000, %00000000, %01101111, %00000000, %00010000, %01111000, %00000000, %01100011
  361 D1:DAE1 C0 01 9F 00 
              07 F0 00 0F 	.db %11000000, %00000001, %10011111, %00000000, %00000111, %11110000, %00000000, %00001111
  362 D1:DAE9 C0 00 7D 80 
              63 E6 01 DF 	.db %11000000, %00000000, %01111101, %10000000, %01100011, %11100110, %00000001, %11011111
  363 D1:DAF1 80 01 F6 00 
              0F 80 00 F8 	.db %10000000, %00000001, %11110110, %00000000, %00001111, %10000000, %00000000, %11111000
  364 D1:DAF9 00 1F F8 00 
              3C E0 01 E0 	.db %00000000, %00011111, %11111000, %00000000, %00111100, %11100000, %00000001, %11100000
  365 D1:DB01 00 0E 00 00 
              00 -  -  -  	.db %00000000, %00001110, %00000000, %00000000, %00000000
  366 D1:DB06 -  -  -  -  
  367 D1:DB06 45 -  -  -  	.db %01000101
  368 D1:DB07 -  -  -  -  
  369 D1:DB07 21 86 30 C3 
              83 3C F8 7C 	.db %00100001, %10000110, %00110000, %11000011, %10000011, %00111100, %11111000, %01111100
  370 D1:DB0F 1E 7C E7 0F 
              CF 9B -  -  	.db %00011110, %01111100, %11100111, %00001111, %11001111, %10011011
  371 D1:DB15 -  -  -  -  
  372 D1:DB15 -  -  -  -  
  373 D1:DB15 -  -  -  -  Vines_3:
  374 D1:DB15 10 -  -  -  	.db %00010000
  375 D1:DB16 18 10 -  -  	.db 24, 16
  376 D1:DB18 00 00 01 00 
              00 03 00 00 	.db %00000000, %00000000, %00000001, %00000000, %00000000, %00000011, %00000000, %00000000
  377 D1:DB20 37 00 00 3E 
              00 00 1C 00 	.db %00110111, %00000000, %00000000, %00111110, %00000000, %00000000, %00011100, %00000000
  378 D1:DB28 10 78 00 30 
              F8 00 1F EC 	.db %00010000, %01111000, %00000000, %00110000, %11111000, %00000000, %00011111, %11101100
  379 D1:DB30 18 0F CC 18 
              3F 80 0B FE 	.db %00011000, %00001111, %11001100, %00011000, %00111111, %10000000, %00001011, %11111110
  380 D1:DB38 00 FF F8 00 
              FF C0 00 01 	.db %00000000, %11111111, %11111000, %00000000, %11111111, %11000000, %00000000, %00000001
  381 D1:DB40 00 00 03 00 
              00 03 00 00 	.db %00000000, %00000000, %00000011, %00000000, %00000000, %00000011, %00000000, %00000000
  382 D1:DB48 -  -  -  -  
  383 D1:DB48 45 -  -  -  	.db %01000101
  384 D1:DB49 -  -  -  -  
  385 D1:DB49 03 1B 18 70 
              3C 1F 07 81 	.db %00000011, %00011011, %00011000, %01110000, %00111100, %00011111, %00000111, %10000001
  386 D1:DB51 E0 7F FF FE 	.db %11100000, %01111111, %11111111, %11111110
  387 D1:DB55 -  -  -  -  
  388 D1:DB55 -  -  -  -  
  389 D1:DB55 -  -  -  -  Vines_5:
  390 D1:DB55 10 -  -  -  	.db %00010000
  391 D1:DB56 14 17 -  -  	.db 20, 23
  392 D1:DB58 00 00 30 00 
              1B 00 01 B0 	.db %00000000, %00000000, %00110000, %00000000, %00011011, %00000000, %00000001, %10110000
  393 D1:DB60 00 07 00 00 
              F0 00 0E 00 	.db %00000000, %00000111, %00000000, %00000000, %11110000, %00000000, %00001110, %00000000
  394 D1:DB68 31 C0 01 B8 
              00 0F 80 01 	.db %00110001, %11000000, %00000001, %10111000, %00000000, %00001111, %10000000, %00000001
  395 D1:DB70 F0 00 3E 00 
              47 E0 0F F8 	.db %11110000, %00000000, %00111110, %00000000, %01000111, %11100000, %00001111, %11111000
  396 D1:DB78 00 5F 00 03 
              E8 00 3C C0 	.db %00000000, %01011111, %00000000, %00000011, %11101000, %00000000, %00111100, %11000000
  397 D1:DB80 0F 8C 00 F0 
              00 3D 00 07 	.db %00001111, %10001100, %00000000, %11110000, %00000000, %00111101, %00000000, %00000111
  398 D1:DB88 D8 00 79 00 
              0F 00 00 E0 	.db %11011000, %00000000, %01111001, %00000000, %00001111, %00000000, %00000000, %11100000
  399 D1:DB90 00 00 -  -  	.db %00000000, %00000000
  400 D1:DB92 -  -  -  -  
  401 D1:DB92 45 -  -  -  	.db %01000101
  402 D1:DB93 -  -  -  -  
  403 D1:DB93 00 59 B0 84 
              67 38 F0 38 	.db %00000000, %01011001, %10110000, %10000100, %01100111, %00111000, %11110000, %00111000
  404 D1:DB9B E7 BE 7D C6 
              7D E6 C0 -  	.db %11100111, %10111110, %01111101, %11000110, %01111101, %11100110, %11000000
  405 D1:DBA2 -  -  -  -  
  406 D1:DBA2 -  -  -  -  
  407 D1:DBA2 -  -  -  -  Vines_9:
  408 D1:DBA2 10 -  -  -  	.db %00010000
  409 D1:DBA3 18 0B -  -  	.db 24, 11
  410 D1:DBA5 00 18 60 00 
              38 27 0C 27 	.db %00000000, %00011000, %01100000, %00000000, %00111000, %00100111, %00001100, %00100111
  411 D1:DBAD FF 0C 3F FF 
              07 FF F8 1F 	.db %11111111, %00001100, %00111111, %11111111, %00000111, %11111111, %11111000, %00011111
  412 D1:DBB5 FE 08 7F F7 
              00 FE 43 00 	.db %11111110, %00001000, %01111111, %11110111, %00000000, %11111110, %01000011, %00000000
  413 D1:DBBD F0 C0 00 E0 
              C0 00 C0 00 	.db %11110000, %11000000, %00000000, %11100000, %11000000, %00000000, %11000000, %00000000
  414 D1:DBC5 00 -  -  -  	.db %00000000
  415 D1:DBC6 -  -  -  -  
  416 D1:DBC6 45 -  -  -  	.db %01000101
  417 D1:DBC7 -  -  -  -  
  418 D1:DBC7 00 00 03 81 
              FF 81 FF 8F 	.db %00000000, %00000000, %00000011, %10000001, %11111111, %10000001, %11111111, %10001111
  419 D1:DBCF FC 7F F3 FF 
              FF E0 -  -  	.db %11111100, %01111111, %11110011, %11111111, %11111111, %11100000
  420 D1:DBD5 -  -  -  -  
  421 D1:DBD5 -  -  -  -  
  422 D1:DBD5 -  -  -  -  Vines_4:
  423 D1:DBD5 10 -  -  -  	.db %00010000
  424 D1:DBD6 18 0D -  -  	.db 24, 13
  425 D1:DBD8 00 00 C7 00 
              00 DF 00 00 	.db %00000000, %00000000, %11000111, %00000000, %00000000, %11011111, %00000000, %00000000
  426 D1:DBE0 3F 00 00 FC 
              00 61 F8 20 	.db %00111111, %00000000, %00000000, %11111100, %00000000, %01100001, %11111000, %00100000
  427 D1:DBE8 6F E0 60 3F 
              80 41 FE 80 	.db %01101111, %11100000, %01100000, %00111111, %10000000, %01000001, %11111110, %10000000
  428 D1:DBF0 CF F8 C0 FF 
              C0 40 7C C0 	.db %11001111, %11111000, %11000000, %11111111, %11000000, %01000000, %01111100, %11000000
  429 D1:DBF8 00 01 80 00 
              00 80 00 -  	.db %00000000, %00000001, %10000000, %00000000, %00000000, %10000000, %00000000
  430 D1:DBFF -  -  -  -  
  431 D1:DBFF 45 -  -  -  	.db %01000101
  432 D1:DC00 -  -  -  -  
  433 D1:DC00 00 33 C7 0F 
              01 C1 E0 F8 	.db %00000000, %00110011, %11000111, %00001111, %00000001, %11000001, %11100000, %11111000
  434 D1:DC08 1F F1 FF FE 	.db %00011111, %11110001, %11111111, %11111110
  435 D1:DC0C -  -  -  -  
  436 D1:DC0C -  -  -  -  
  437 D1:DC0C -  -  -  -  Vines_1:
  438 D1:DC0C 10 -  -  -  	.db %00010000
  439 D1:DC0D 18 09 -  -  	.db 24, 9
  440 D1:DC0F 00 06 30 18 
              0E 33 F8 0C 	.db %00000000, %00000110, %00110000, %00011000, %00001110, %00110011, %11111000, %00001100
  441 D1:DC17 1F FC 07 FF 
              FF FF F0 1F 	.db %00011111, %11111100, %00000111, %11111111, %11111111, %11111111, %11110000, %00011111
  442 D1:DC1F FE 80 30 00 
              E0 30 00 60 	.db %11111110, %10000000, %00110000, %00000000, %11100000, %00110000, %00000000, %01100000
  443 D1:DC27 30 00 00 -  	.db %00110000, %00000000, %00000000
  444 D1:DC2A -  -  -  -  
  445 D1:DC2A 45 -  -  -  	.db %01000101
  446 D1:DC2B -  -  -  -  
  447 D1:DC2B 00 00 00 F0 
              03 FF 00 FF 	.db %00000000, %00000000, %00000000, %11110000, %00000011, %11111111, %00000000, %11111111
  448 D1:DC33 FF FF FC -  	.db %11111111, %11111111, %11111100
  449 D1:DC36 -  -  -  -  
  450 D1:DC36 -  -  -  -  
  451 D1:DC36 -  -  -  -  Branches_5:
  452 D1:DC36 20 -  -  -  	.db %00100000
  453 D1:DC37 12 0E -  -  	.db 18, 14
  454 D1:DC39 00 C0 CF FF 
              FF FF FF FF 	.db %00000000, %11000000, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111
  455 D1:DC41 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  456 D1:DC49 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  457 D1:DC51 FF FF FF 3F 
              FF C3 C3 F0 	.db %11111111, %11111111, %11111111, %00111111, %11111111, %11000011, %11000011, %11110000
  458 D1:DC59 -  -  -  -  
  459 D1:DC59 01 23 -  -  	.db %00000001, %00100011
  460 D1:DC5B -  -  -  -  
  461 D1:DC5B 00 00 00 00 
              01 00 05 05 	.db %00000000, %00000000, %00000000, %00000000, %00000001, %00000000, %00000101, %00000101
  462 D1:DC63 41 41 45 40 
              00 01 15 45 	.db %01000001, %01000001, %01000101, %01000000, %00000000, %00000001, %00010101, %01000101
  463 D1:DC6B 55 45 65 A5 
              AA 66 AA FA 	.db %01010101, %01000101, %01100101, %10100101, %10101010, %01100110, %10101010, %11111010
  464 D1:DC73 F9 FF BF FE 
              AA F6 BA 99 	.db %11111001, %11111111, %10111111, %11111110, %10101010, %11110110, %10111010, %10011001
  465 D1:DC7B 50 55 55 55 
              51 50 00 01 	.db %01010000, %01010101, %01010101, %01010101, %01010001, %01010000, %00000000, %00000001
  466 D1:DC83 54 51 41 50 
              00 00 01 40 	.db %01010100, %01010001, %01000001, %01010000, %00000000, %00000000, %00000001, %01000000
  467 D1:DC8B 15 45 00 00 
              00 00 00 00 	.db %00010101, %01000101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  468 D1:DC93 00 -  -  -  	.db %00000000
  469 D1:DC94 -  -  -  -  
  470 D1:DC94 -  -  -  -  
  471 D1:DC94 -  -  -  -  Vines_6:
  472 D1:DC94 10 -  -  -  	.db %00010000
  473 D1:DC95 08 18 -  -  	.db 8, 24
  474 D1:DC97 38 F8 F8 78 
              3E 3E 38 38 	.db %00111000, %11111000, %11111000, %01111000, %00111110, %00111110, %00111000, %00111000
  475 D1:DC9F 38 38 78 78 
              7C 3C 3C 3C 	.db %00111000, %00111000, %01111000, %01111000, %01111100, %00111100, %00111100, %00111100
  476 D1:DCA7 3E 1F 1C 1C 
              1F 1F 1C 1E 	.db %00111110, %00011111, %00011100, %00011100, %00011111, %00011111, %00011100, %00011110
  477 D1:DCAF -  -  -  -  
  478 D1:DCAF 54 -  -  -  	.db %01010100
  479 D1:DCB0 -  -  -  -  
  480 D1:DCB0 56 D1 6F FB 
              25 5D C4 46 	.db %01010110, %11010001, %01101111, %11111011, %00100101, %01011101, %11000100, %01000110
  481 D1:DCB8 6F D2 5F F6 
              00 -  -  -  	.db %01101111, %11010010, %01011111, %11110110, %00000000
  482 D1:DCBD -  -  -  -  
  483 D1:DCBD -  -  -  -  
  484 D1:DCBD -  -  -  -  Branches_3:
  485 D1:DCBD 20 -  -  -  	.db %00100000
  486 D1:DCBE 12 0E -  -  	.db 18, 14
  487 D1:DCC0 0F CF FF FF 
              FF FF FF FF 	.db %00001111, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  488 D1:DCC8 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  489 D1:DCD0 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  490 D1:DCD8 FF FF FF FF 
              3F FF 00 F0 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %00000000, %11110000
  491 D1:DCE0 -  -  -  -  
  492 D1:DCE0 01 23 -  -  	.db %00000001, %00100011
  493 D1:DCE2 -  -  -  -  
  494 D1:DCE2 00 00 00 00 
              50 00 15 55 	.db %00000000, %00000000, %00000000, %00000000, %01010000, %00000000, %00010101, %01010101
  495 D1:DCEA 50 15 00 00 
              00 00 00 65 	.db %01010000, %00010101, %00000000, %00000000, %00000000, %00000000, %00000000, %01100101
  496 D1:DCF2 05 98 A2 55 
              05 AA 32 AA 	.db %00000101, %10011000, %10100010, %01010101, %00000101, %10101010, %00110010, %10101010
  497 D1:DCFA BD 4B FF FF 
              FF BF EA 95 	.db %10111101, %01001011, %11111111, %11111111, %11111111, %10111111, %11101010, %10010101
  498 D1:DD02 5E AA E6 55 
              A9 55 6A 56 	.db %01011110, %10101010, %11100110, %01010101, %10101001, %01010101, %01101010, %01010110
  499 D1:DD0A 40 12 50 00 
              00 50 01 54 	.db %01000000, %00010010, %01010000, %00000000, %00000000, %01010000, %00000001, %01010100
  500 D1:DD12 15 54 00 15 
              40 00 00 00 	.db %00010101, %01010100, %00000000, %00010101, %01000000, %00000000, %00000000, %00000000
  501 D1:DD1A 40 00 00 -  	.db %01000000, %00000000, %00000000
  502 D1:DD1D -  -  -  -  
  503 D1:DD1D -  -  -  -  
  504 D1:DD1D -  -  -  -  Branches_2:
  505 D1:DD1D 20 -  -  -  	.db %00100000
  506 D1:DD1E 12 0E -  -  	.db 18, 14
  507 D1:DD20 0F C3 FF FF 
              FF FF FF FF 	.db %00001111, %11000011, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  508 D1:DD28 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  509 D1:DD30 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  510 D1:DD38 FF FF FF FF 
              FF F3 0F 30 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11110011, %00001111, %00110000
  511 D1:DD40 -  -  -  -  
  512 D1:DD40 01 32 -  -  	.db %00000001, %00110010
  513 D1:DD42 -  -  -  -  
  514 D1:DD42 00 00 00 00 
              50 00 00 05 	.db %00000000, %00000000, %00000000, %00000000, %01010000, %00000000, %00000000, %00000101
  515 D1:DD4A 54 15 55 45 
              40 00 00 00 	.db %01010100, %00010101, %01010101, %01000101, %01000000, %00000000, %00000000, %00000000
  516 D1:DD52 55 55 14 05 
              59 FF FD 55 	.db %01010101, %01010101, %00010100, %00000101, %01011001, %11111111, %11111101, %01010101
  517 D1:DD5A 47 EA AA AE 
              FF EF FF F6 	.db %01000111, %11101010, %10101010, %10101110, %11111111, %11101111, %11111111, %11110110
  518 D1:DD62 AA AA 5D 07 
              F4 FF F5 55 	.db %10101010, %10101010, %01011101, %00000111, %11110100, %11111111, %11110101, %01010101
  519 D1:DD6A 05 55 75 15 
              15 55 00 00 	.db %00000101, %01010101, %01110101, %00010101, %00010101, %01010101, %00000000, %00000000
  520 D1:DD72 01 00 05 50 
              00 40 05 50 	.db %00000001, %00000000, %00000101, %01010000, %00000000, %01000000, %00000101, %01010000
  521 D1:DD7A 00 00 00 -  	.db %00000000, %00000000, %00000000
  522 D1:DD7D -  -  -  -  
  523 D1:DD7D -  -  -  -  
  524 D1:DD7D -  -  -  -  Tree_2:
  525 D1:DD7D 10 -  -  -  	.db %00010000
  526 D1:DD7E 1A 10 -  -  	.db 26, 16
  527 D1:DD80 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  528 D1:DD88 FF FF FF FF 
              FF 3F FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  529 D1:DD90 CF FF FF F3 
              FF FF FC FF 	.db %11001111, %11111111, %11111111, %11110011, %11111111, %11111111, %11111100, %11111111
  530 D1:DD98 FF FF 3F FF 
              FF CF FF FF 	.db %11111111, %11111111, %00111111, %11111111, %11111111, %11001111, %11111111, %11111111
  531 D1:DDA0 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  532 D1:DDA8 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  533 D1:DDB0 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  534 D1:DDB4 -  -  -  -  
  535 D1:DDB4 01 -  -  -  	.db %00000001
  536 D1:DDB5 -  -  -  -  
  537 D1:DDB5 01 12 40 80 
              4C DD 30 33 	.db %00000001, %00010010, %01000000, %10000000, %01001100, %11011101, %00110000, %00110011
  538 D1:DDBD 27 CC 02 51 
              E4 02 59 D9 	.db %00100111, %11001100, %00000010, %01010001, %11100100, %00000010, %01011001, %11011001
  539 D1:DDC5 08 69 D9 01 
              69 9B 07 69 	.db %00001000, %01101001, %11011001, %00000001, %01101001, %10011011, %00000111, %01101001
  540 D1:DDCD 1E 03 70 3E 
              03 D2 3E 00 	.db %00011110, %00000011, %01110000, %00111110, %00000011, %11010010, %00111110, %00000000
  541 D1:DDD5 A5 5C 80 F9 
              75 60 1C 6D 	.db %10100101, %01011100, %10000000, %11111001, %01110101, %01100000, %00011100, %01101101
  542 D1:DDDD 18 01 1B 86 
              02 46 69 41 	.db %00011000, %00000001, %00011011, %10000110, %00000010, %01000110, %01101001, %01000001
  543 D1:DDE5 91 82 40 -  	.db %10010001, %10000010, %01000000
  544 D1:DDE8 -  -  -  -  
  545 D1:DDE8 -  -  -  -  
  546 D1:DDE8 -  -  -  -  Tree_4:
  547 D1:DDE8 24 -  -  -  	.db %00100100
  548 D1:DDE9 1A 10 -  -  	.db 26, 16
  549 D1:DDEB 01 20 -  -  	.db %00000001, %00100000
  550 D1:DDED -  -  -  -  
  551 D1:DDED 14 45 40 15 
              54 25 61 44 	.db %00010100, %01000101, %01000000, %00010101, %01010100, %00100101, %01100001, %01000100
  552 D1:DDF5 14 05 55 00 
              41 11 01 45 	.db %00010100, %00000101, %01010101, %00000000, %01000001, %00010001, %00000001, %01000101
  553 D1:DDFD 50 54 24 21 
              10 00 95 05 	.db %01010000, %01010100, %00100100, %00100001, %00010000, %00000000, %10010101, %00000101
  554 D1:DE05 41 41 11 00 
              09 10 94 15 	.db %01000001, %01000001, %00010001, %00000000, %00001001, %00010000, %10010100, %00010101
  555 D1:DE0D 11 11 00 95 
              09 49 45 10 	.db %00010001, %00010001, %00000000, %10010101, %00001001, %01001001, %01000101, %00010000
  556 D1:DE15 01 09 50 94 
              95 51 00 50 	.db %00000001, %00001001, %01010000, %10010100, %10010101, %01010001, %00000000, %01010000
  557 D1:DE1D 95 09 49 45 
              40 45 09 40 	.db %10010101, %00001001, %01001001, %01000101, %01000000, %01000101, %00001001, %01000000
  558 D1:DE25 90 95 54 01 
              50 A4 05 05 	.db %10010000, %10010101, %01010100, %00000001, %01010000, %10100100, %00000101, %00000101
  559 D1:DE2D 54 44 45 0A 
              42 50 55 00 	.db %01010100, %01000100, %01000101, %00001010, %01000010, %01010000, %01010101, %00000000
  560 D1:DE35 10 54 14 95 
              41 02 04 11 	.db %00010000, %01010100, %00010100, %10010101, %01000001, %00000010, %00000100, %00010001
  561 D1:DE3D 52 49 51 00 
              20 51 11 10 	.db %01010010, %01001001, %01010001, %00000000, %00100000, %01010001, %00010001, %00010000
  562 D1:DE45 91 50 A5 05 
              11 12 15 54 	.db %10010001, %01010000, %10100101, %00000101, %00010001, %00010010, %00010101, %01010100
  563 D1:DE4D 09 54 04 51 
              01 54 40 25 	.db %00001001, %01010100, %00000100, %01010001, %00000001, %01010100, %01000000, %00100101
  564 D1:DE55 -  -  -  -  
  565 D1:DE55 -  -  -  -  
  566 D1:DE55 -  -  -  -  Tree_7:
  567 D1:DE55 24 -  -  -  	.db %00100100
  568 D1:DE56 1A 10 -  -  	.db 26, 16
  569 D1:DE58 10 23 -  -  	.db %00010000, %00100011
  570 D1:DE5A -  -  -  -  
  571 D1:DE5A 10 05 08 28 
              85 28 81 62 	.db %00010000, %00000101, %00001000, %00101000, %10000101, %00101000, %10000001, %01100010
  572 D1:DE62 5A 08 88 5C 
              BA 05 81 60 	.db %01011010, %00001000, %10001000, %01011100, %10111010, %00000101, %10000001, %01100000
  573 D1:DE6A 88 95 CA B1 
              58 06 A0 49 	.db %10001000, %10010101, %11001010, %10110001, %01011000, %00000110, %10100000, %01001001
  574 D1:DE72 62 89 51 68 
              48 60 16 2A 	.db %01100010, %10001001, %01010001, %01101000, %01001000, %01100000, %00010110, %00101010
  575 D1:DE7A 54 15 80 87 
              85 EA 96 00 	.db %01010100, %00010101, %10000000, %10000111, %10000101, %11101010, %10010110, %00000000
  576 D1:DE82 58 82 29 72 
              A1 C0 05 68 	.db %01011000, %10000010, %00101001, %01110010, %10100001, %11000000, %00000101, %01101000
  577 D1:DE8A 2A 9E 22 1E 
              18 56 22 A5 	.db %00101010, %10011110, %00100010, %00011110, %00011000, %01010110, %00100010, %10100101
  578 D1:DE92 67 25 80 01 
              62 A9 55 72 	.db %01100111, %00100101, %10000000, %00000001, %01100010, %10101001, %01010101, %01110010
  579 D1:DE9A 5A 06 15 8A 
              56 95 97 81 	.db %01011010, %00000110, %00010101, %10001010, %01010110, %10010101, %10010111, %10000001
  580 D1:DEA2 00 51 25 A0 
              59 E5 00 15 	.db %00000000, %01010001, %00100101, %10100000, %01011001, %11100101, %00000000, %00010101
  581 D1:DEAA D2 02 A1 58 
              50 41 60 89 	.db %11010010, %00000010, %10100001, %01011000, %01010000, %01000001, %01100000, %10001001
  582 D1:DEB2 28 97 96 10 
              16 08 A2 89 	.db %00101000, %10010111, %10010110, %00010000, %00010110, %00001000, %10100010, %10001001
  583 D1:DEBA 7B 81 81 62 
              08 22 94 20 	.db %01111011, %10000001, %10000001, %01100010, %00001000, %00100010, %10010100, %00100000
  584 D1:DEC2 -  -  -  -  
  585 D1:DEC2 -  -  -  -  
  586 D1:DEC2 -  -  -  -  Tree_9:
  587 D1:DEC2 24 -  -  -  	.db %00100100
  588 D1:DEC3 1A 10 -  -  	.db 26, 16
  589 D1:DEC5 20 31 -  -  	.db %00100000, %00110001
  590 D1:DEC7 -  -  -  -  
  591 D1:DEC7 14 95 0A A8 
              A8 35 B3 49 	.db %00010100, %10010101, %00001010, %10101000, %10101000, %00110101, %10110011, %01001001
  592 D1:DECF D2 28 A8 8C 
              58 A0 56 EA 	.db %11010010, %00101000, %10101000, %10001100, %01011000, %10100000, %01010110, %11101010
  593 D1:DED7 AA C8 CD 82 
              17 B8 AA AC 	.db %10101010, %11001000, %11001101, %10000010, %00010111, %10111000, %10101010, %10101100
  594 D1:DEDF 83 5B 25 6E 
              CA A8 23 35 	.db %10000011, %01011011, %00100101, %01101110, %11001010, %10101000, %00100011, %00110101
  595 D1:DEE7 88 68 2C 8A 
              A3 8D 60 C6 	.db %10001000, %01101000, %00101100, %10001010, %10100011, %10001101, %01100000, %11000110
  596 D1:DEEF C2 7A AB 0B 
              5A 0B 34 25 	.db %11000010, %01111010, %10101011, %00001011, %01011010, %00001011, %00110100, %00100101
  597 D1:DEF7 AA B0 85 0A 
              23 79 52 AA 	.db %10101010, %10110000, %10000101, %00001010, %00100011, %01111001, %01010010, %10101010
  598 D1:DEFF 21 63 BE 1E 
              21 68 AA 14 	.db %00100001, %01100011, %10111110, %00011110, %00100001, %01101000, %10101010, %00010100
  599 D1:DF07 00 71 20 A5 
              EA B5 08 55 	.db %00000000, %01110001, %00100000, %10100101, %11101010, %10110101, %00001000, %01010101
  600 D1:DF0F 80 88 16 2B 
              68 34 5E 20 	.db %10000000, %10001000, %00010110, %00101011, %01101000, %00110100, %01011110, %00100000
  601 D1:DF17 AB 48 AA 8D 
              CD A4 22 A2 	.db %10101011, %01001000, %10101010, %10001101, %11001101, %10100100, %00100010, %10100010
  602 D1:DF1F 8A 0F 5E D7 
              96 2A 28 88 	.db %10001010, %00001111, %01011110, %11010111, %10010110, %00101010, %00101000, %10001000
  603 D1:DF27 D7 81 79 42 
              AA A8 8D 63 	.db %11010111, %10000001, %01111001, %01000010, %10101010, %10101000, %10001101, %01100011
  604 D1:DF2F -  -  -  -  
  605 D1:DF2F -  -  -  -  
  606 D1:DF2F -  -  -  -  Tree_6:
  607 D1:DF2F 24 -  -  -  	.db %00100100
  608 D1:DF30 1A 10 -  -  	.db 26, 16
  609 D1:DF32 01 23 -  -  	.db %00000001, %00100011
  610 D1:DF34 -  -  -  -  
  611 D1:DF34 06 50 5A A5 
              80 A9 98 15 	.db %00000110, %01010000, %01011010, %10100101, %10000000, %10101001, %10011000, %00010101
  612 D1:DF3C 0A 9A 49 29 
              9B 49 50 99 	.db %00001010, %10011010, %01001001, %00101001, %10011011, %01001001, %01010000, %10011001
  613 D1:DF44 61 83 50 85 
              59 43 66 48 	.db %01100001, %10000011, %01010000, %10000101, %01011001, %01000011, %01100110, %01001000
  614 D1:DF4C A4 02 15 54 
              2A 69 96 83 	.db %10100100, %00000010, %00010101, %01010100, %00101010, %01101001, %10010110, %10000011
  615 D1:DF54 80 45 00 9A 
              A9 A4 39 41 	.db %10000000, %01000101, %00000000, %10011010, %10101001, %10100100, %00111001, %01000001
  616 D1:DF5C 41 0B 69 99 
              42 A4 94 90 	.db %01000001, %00001011, %01101001, %10011001, %01000010, %10100100, %10010100, %10010000
  617 D1:DF64 06 9A 58 19 
              55 05 04 A6 	.db %00000110, %10011010, %01011000, %00011001, %01010101, %00000101, %00000100, %10100110
  618 D1:DF6C 66 43 54 42 
              A5 4D A6 55 	.db %01100110, %01000011, %01010100, %01000010, %10100101, %01001101, %10100110, %01010101
  619 D1:DF74 37 50 95 65 
              69 89 92 75 	.db %00110111, %01010000, %10010101, %01100101, %01101001, %10001001, %10010010, %01110101
  620 D1:DF7C 29 69 96 54 
              DA 04 55 54 	.db %00101001, %01101001, %10010110, %01010100, %11011010, %00000100, %01010101, %01010100
  621 D1:DF84 98 66 4D 10 
              05 59 05 96 	.db %10011000, %01100110, %01001101, %00010000, %00000101, %01011001, %00000101, %10010110
  622 D1:DF8C 68 29 0A 41 
              42 69 96 50 	.db %01101000, %00101001, %00001010, %01000001, %01000010, %01101001, %10010110, %01010000
  623 D1:DF94 D6 64 94 25 
              56 65 42 EA 	.db %11010110, %01100100, %10010100, %00100101, %01010110, %01100101, %01000010, %11101010
  624 D1:DF9C -  -  -  -  
  625 D1:DF9C -  -  -  -  
  626 D1:DF9C -  -  -  -  Tree_3:
  627 D1:DF9C 24 -  -  -  	.db %00100100
  628 D1:DF9D 1A 10 -  -  	.db 26, 16
  629 D1:DF9F 10 20 -  -  	.db %00010000, %00100000
  630 D1:DFA1 -  -  -  -  
  631 D1:DFA1 05 11 05 00 
              05 80 01 45 	.db %00000101, %00010001, %00000101, %00000000, %00000101, %10000000, %00000001, %01000101
  632 D1:DFA9 11 48 45 51 
              40 11 45 10 	.db %00010001, %01001000, %01000101, %01010001, %01000000, %00010001, %01000101, %00010000
  633 D1:DFB1 84 58 16 01 
              54 40 54 01 	.db %10000100, %01011000, %00010110, %00000001, %01010100, %01000000, %01010100, %00000001
  634 D1:DFB9 85 64 55 14 
              01 40 18 56 	.db %10000101, %01100100, %01010101, %00010100, %00000001, %01000000, %00011000, %01010110
  635 D1:DFC1 04 55 50 56 
              41 85 60 51 	.db %00000100, %01010101, %01010000, %01010110, %01000001, %10000101, %01100000, %01010001
  636 D1:DFC9 51 05 60 14 
              56 05 55 10 	.db %01010001, %00000101, %01100000, %00010100, %01010110, %00000101, %01010101, %00010000
  637 D1:DFD1 56 01 41 60 
              54 51 04 58 	.db %01010110, %00000001, %01000001, %01100000, %01010100, %01010001, %00000100, %01011000
  638 D1:DFD9 54 16 85 41 
              14 05 85 40 	.db %01010100, %00010110, %10000101, %01000001, %00010100, %00000101, %10000101, %01000000
  639 D1:DFE1 58 45 10 50 
              58 50 01 64 	.db %01011000, %01000101, %00010000, %01010000, %01011000, %01010000, %00000001, %01100100
  640 D1:DFE9 41 10 05 95 
              05 05 44 10 	.db %01000001, %00010000, %00000101, %10010101, %00000101, %00000101, %01000100, %00010000
  641 D1:DFF1 14 55 51 50 
              65 51 01 61 	.db %00010100, %01010101, %01010001, %01010000, %01100101, %01010001, %00000001, %01100001
  642 D1:DFF9 54 15 00 11 
              10 16 04 05 	.db %01010100, %00010101, %00000000, %00010001, %00010000, %00010110, %00000100, %00000101
  643 D1:E001 61 01 15 41 
              60 00 56 00 	.db %01100001, %00000001, %00010101, %01000001, %01100000, %00000000, %01010110, %00000000
  644 D1:E009 -  -  -  -  
  645 D1:E009 -  -  -  -  
  646 D1:E009 -  -  -  -  Tree_0:
  647 D1:E009 10 -  -  -  	.db %00010000
  648 D1:E00A 1A 10 -  -  	.db 26, 16
  649 D1:E00C FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  650 D1:E014 FF FF FF FF 
              FF 3F FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  651 D1:E01C CF FF FF F3 
              FF FF FC FF 	.db %11001111, %11111111, %11111111, %11110011, %11111111, %11111111, %11111100, %11111111
  652 D1:E024 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  653 D1:E02C FF FF FF FC 
              FF FF FF 3F 	.db %11111111, %11111111, %11111111, %11111100, %11111111, %11111111, %11111111, %00111111
  654 D1:E034 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  655 D1:E03C FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  656 D1:E040 -  -  -  -  
  657 D1:E040 01 -  -  -  	.db %00000001
  658 D1:E041 -  -  -  -  
  659 D1:E041 00 9A 4A 80 
              26 02 90 1A 	.db %00000000, %10011010, %01001010, %10000000, %00100110, %00000010, %10010000, %00011010
  660 D1:E049 40 A4 05 9A 
              71 08 AB 73 	.db %01000000, %10100100, %00000101, %10011010, %01110001, %00001000, %10101011, %01110011
  661 D1:E051 08 AB 74 09 
              5B 77 02 9A 	.db %00001000, %10101011, %01110100, %00001001, %01011011, %01110111, %00000010, %10011010
  662 D1:E059 75 00 B2 1D 
              00 BF 57 40 	.db %01110101, %00000000, %10110010, %00011101, %00000000, %10111111, %01010111, %01000000
  663 D1:E061 2B 56 10 2B 
              5F 18 01 9F 	.db %00101011, %01010110, %00010000, %00101011, %01011111, %00011000, %00000001, %10011111
  664 D1:E069 0C 00 23 83 
              01 22 E2 40 	.db %00001100, %00000000, %00100011, %10000011, %00000001, %00100010, %11100010, %01000000
  665 D1:E071 66 2A A0 -  	.db %01100110, %00101010, %10100000
  666 D1:E074 -  -  -  -  
  667 D1:E074 -  -  -  -  
  668 D1:E074 -  -  -  -  Tree_8:
  669 D1:E074 24 -  -  -  	.db %00100100
  670 D1:E075 1A 10 -  -  	.db 26, 16
  671 D1:E077 10 23 -  -  	.db %00010000, %00100011
  672 D1:E079 -  -  -  -  
  673 D1:E079 10 05 62 22 
              85 20 80 40 	.db %00010000, %00000101, %01100010, %00100010, %10000101, %00100000, %10000000, %01000000
  674 D1:E081 56 82 A0 52 
              2A 06 01 52 	.db %01010110, %10000010, %10100000, %01010010, %00101010, %00000110, %00000001, %01010010
  675 D1:E089 28 25 E0 B8 
              60 21 18 8A 	.db %00101000, %00100101, %11100000, %10111000, %01100000, %00100001, %00011000, %10001010
  676 D1:E091 5E 22 08 12 
              15 8A A1 62 	.db %01011110, %00100010, %00001000, %00010010, %00010101, %10001010, %10100001, %01100010
  677 D1:E099 80 04 21 57 
              0A 85 43 00 	.db %10000000, %00000100, %00100001, %01010111, %00001010, %10000101, %01000011, %00000000
  678 D1:E0A1 00 11 78 A9 
              17 80 60 02 	.db %00000000, %00010001, %01111000, %10101001, %00010111, %10000000, %01100000, %00000010
  679 D1:E0A9 15 A0 89 7A 
              05 A0 08 57 	.db %00010101, %10100000, %10001001, %01111010, %00000101, %10100000, %00001000, %01010111
  680 D1:E0B1 A2 00 80 15 
              05 84 57 0A 	.db %10100010, %00000000, %10000000, %00010101, %00000101, %10000100, %01010111, %00001010
  681 D1:E0B9 A6 00 19 5A 
              95 5C 82 55 	.db %10100110, %00000000, %00011001, %01011010, %10010101, %01011100, %10000010, %01010101
  682 D1:E0C1 01 57 08 85 
              7A A5 14 15 	.db %00000001, %01010111, %00001000, %10000101, %01111010, %10100101, %00010100, %00010101
  683 D1:E0C9 A2 AA 16 A0 
              61 41 68 22 	.db %10100010, %10101010, %00010110, %10100000, %01100001, %01000001, %01101000, %00100010
  684 D1:E0D1 A1 56 96 08 
              16 06 22 21 	.db %10100001, %01010110, %10010110, %00001000, %00010110, %00000110, %00100010, %00100001
  685 D1:E0D9 71 61 01 60 
              22 0A 56 1E 	.db %01110001, %01100001, %00000001, %01100000, %00100010, %00001010, %01010110, %00011110
  686 D1:E0E1 -  -  -  -  
  687 D1:E0E1 -  -  -  -  
  688 D1:E0E1 -  -  -  -  Tree_1:
  689 D1:E0E1 10 -  -  -  	.db %00010000
  690 D1:E0E2 1A 10 -  -  	.db 26, 16
  691 D1:E0E4 FF FF FF FF 
              FF FF F3 FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11110011, %11111111
  692 D1:E0EC FF FC FF FF 
              FF 3F FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  693 D1:E0F4 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  694 D1:E0FC FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  695 D1:E104 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  696 D1:E10C FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  697 D1:E114 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  698 D1:E118 -  -  -  -  
  699 D1:E118 01 -  -  -  	.db %00000001
  700 D1:E119 -  -  -  -  
  701 D1:E119 01 00 48 80 
              69 35 30 4A 	.db %00000001, %00000000, %01001000, %10000000, %01101001, %00110101, %00110000, %01001010
  702 D1:E121 27 20 48 C6 
              61 D5 C6 60 	.db %00100111, %00100000, %01001000, %11000110, %01100001, %11010101, %11000110, %01100000
  703 D1:E129 E7 73 AC 29 
              DC E9 0B 55 	.db %11100111, %01110011, %10101100, %00101001, %11011100, %11101001, %00001011, %01010101
  704 D1:E131 5A 44 FE 58 
              80 2B 92 28 	.db %01011010, %01000100, %11111110, %01011000, %10000000, %00101011, %10010010, %00101000
  705 D1:E139 0E C2 82 03 
              B0 74 C1 2D 	.db %00001110, %11000010, %10000010, %00000011, %10110000, %01110100, %11000001, %00101101
  706 D1:E141 5F 10 09 73 
              E4 0A 5C F2 	.db %01011111, %00010000, %00001001, %01110011, %11100100, %00001010, %01011100, %11110010
  707 D1:E149 04 92 3C 80 	.db %00000100, %10010010, %00111100, %10000000
  708 D1:E14D -  -  -  -  
  709 D1:E14D -  -  -  -  
  710 D1:E14D -  -  -  -  Tree_10:
  711 D1:E14D 24 -  -  -  	.db %00100100
  712 D1:E14E 1A 10 -  -  	.db 26, 16
  713 D1:E150 12 03 -  -  	.db %00010010, %00000011
  714 D1:E152 -  -  -  -  
  715 D1:E152 19 2A 77 FD 
              DD FA D7 9E 	.db %00011001, %00101010, %01110111, %11111101, %11011101, %11111010, %11010111, %10011110
  716 D1:E15A 25 FF F7 DC 
              AC 65 2B 7F 	.db %00100101, %11111111, %11110111, %11011100, %10101100, %01100101, %00101011, %01111111
  717 D1:E162 F7 5D D8 C2 
              94 BF 7F FC 	.db %11110111, %01011101, %11011000, %11000010, %10010100, %10111111, %01111111, %11111100
  718 D1:E16A 5F 21 79 77 
              DF FF 2D D6 	.db %01011111, %00100001, %01111001, %01110111, %11011111, %11111111, %00101101, %11010110
  719 D1:E172 31 A5 7D FF 
              DF DD 55 38 	.db %00110001, %10100101, %01111101, %11111111, %11011111, %11011101, %01010101, %00111000
  720 D1:E17A D7 C7 7D F5 
              73 54 AD 77 	.db %11010111, %11000111, %01111101, %11110101, %01110011, %01010100, %10101101, %01110111
  721 D1:E182 FF FF 75 5D 
              59 D7 73 F7 	.db %11111111, %11111111, %01110101, %01011101, %01011001, %11010111, %01110011, %11110111
  722 D1:E18A 61 47 A6 B4 
              77 7F F6 1D 	.db %01100001, %01000111, %10100110, %10110100, %01110111, %01111111, %11110110, %00011101
  723 D1:E192 F9 60 05 D7 
              FF E8 7A 0A 	.db %11111001, %01100000, %00000101, %11010111, %11111111, %11101000, %01111010, %00001010
  724 D1:E19A 35 2D 7F FD 
              A8 AA 95 18 	.db %00110101, %00101101, %01111111, %11111101, %10101000, %10101010, %10010101, %00011000
  725 D1:E1A2 1F FF CE A8 
              A1 96 95 FD 	.db %00011111, %11111111, %11001110, %10101000, %10100001, %10010110, %10010101, %11111101
  726 D1:E1AA FD F2 12 6D 
              6B 5F FF DF 	.db %11111101, %11110010, %00010010, %01101101, %01101011, %01011111, %11111111, %11011111
  727 D1:E1B2 E1 52 8E B7 
              F7 DD 5E B1 	.db %11100001, %01010010, %10001110, %10110111, %11110111, %11011101, %01011110, %10110001
  728 D1:E1BA -  -  -  -  
  729 D1:E1BA -  -  -  -  
  730 D1:E1BA -  -  -  -  Tree_5:
  731 D1:E1BA 24 -  -  -  	.db %00100100
  732 D1:E1BB 1A 10 -  -  	.db 26, 16
  733 D1:E1BD 10 20 -  -  	.db %00010000, %00100000
  734 D1:E1BF -  -  -  -  
  735 D1:E1BF 11 10 15 00 
              05 40 01 15 	.db %00010001, %00010000, %00010101, %00000000, %00000101, %01000000, %00000001, %00010101
  736 D1:E1C7 05 50 04 56 
              00 15 44 41 	.db %00000101, %01010000, %00000100, %01010110, %00000000, %00010101, %01000100, %01000001
  737 D1:E1CF 60 05 60 61 
              04 55 16 04 	.db %01100000, %00000101, %01100000, %01100001, %00000100, %01010101, %00010110, %00000100
  738 D1:E1D7 50 06 11 41 
              60 60 05 81 	.db %01010000, %00000110, %00010001, %01000001, %01100000, %01100000, %00000101, %10000001
  739 D1:E1DF 45 44 56 08 
              00 50 10 54 	.db %01000101, %01000100, %01010110, %00001000, %00000000, %01010000, %00010000, %01010100
  740 D1:E1E7 45 60 00 16 
              05 80 44 44 	.db %01000101, %01100000, %00000000, %00010110, %00000101, %10000000, %01000100, %01000100
  741 D1:E1EF 10 15 80 58 
              15 44 41 04 	.db %00010000, %00010101, %10000000, %01011000, %00010101, %01000100, %01000001, %00000100
  742 D1:E1F7 58 05 01 55 
              46 01 54 00 	.db %01011000, %00000101, %00000001, %01010101, %01000110, %00000001, %01010100, %00000000
  743 D1:E1FF 10 15 54 58 
              45 81 01 45 	.db %00010000, %00010101, %01010100, %01011000, %01000101, %10000001, %00000001, %01000101
  744 D1:E207 45 45 05 60 
              00 04 50 44 	.db %01000101, %01000101, %00000101, %01100000, %00000000, %00000100, %01010000, %01000100
  745 D1:E20F 19 5A 04 40 
              45 40 51 95 	.db %00011001, %01011010, %00000100, %01000000, %01000101, %01000000, %01010001, %10010101
  746 D1:E217 A0 16 10 45 
              11 01 58 04 	.db %10100000, %00010110, %00010000, %01000101, %00010001, %00000001, %01011000, %00000100
  747 D1:E21F 68 14 51 10 
              14 00 15 80 	.db %01101000, %00010100, %01010001, %00010000, %00010100, %00000000, %00010101, %10000000
  748 D1:E227 -  -  -  -  
  749 D1:E227 -  -  -  -  
  750 D1:E227 -  -  -  -  Tree_11:
  751 D1:E227 24 -  -  -  	.db %00100100
  752 D1:E228 1A 10 -  -  	.db 26, 16
  753 D1:E22A 20 13 -  -  	.db %00100000, %00010011
  754 D1:E22C -  -  -  -  
  755 D1:E22C 10 95 33 CF 
              30 C5 C3 42 	.db %00010000, %10010101, %00110011, %11001111, %00110000, %11000101, %11000011, %01000010
  756 D1:E234 43 F3 F3 FF 
              58 37 97 FC 	.db %01000011, %11110011, %11110011, %11111111, %01011000, %00110111, %10010111, %11111100
  757 D1:E23C F3 6F 35 B3 
              E5 7F FC C6 	.db %11110011, %01101111, %00110101, %10110011, %11100101, %01111111, %11111100, %11000110
  758 D1:E244 3F 6E 3F 55 
              FF F9 4C D5 	.db %00111111, %01101110, %00111111, %01010101, %11111111, %11111001, %01001100, %11010101
  759 D1:E24C 30 B7 97 FE 
              50 CD 6F C9 	.db %00110000, %10110111, %10010111, %11111110, %01010000, %11001101, %01101111, %11001001
  760 D1:E254 48 F3 96 C3 
              58 C8 54 CF 	.db %01001000, %11110011, %10010110, %11000011, %01011000, %11001000, %01010100, %11001111
  761 D1:E25C C5 6C CE 3C 
              15 CC F1 5B 	.db %11000101, %01101100, %11001110, %00111100, %00010101, %11001100, %11110001, %01011011
  762 D1:E264 FC C3 05 50 
              CC 56 CE FC 	.db %11111100, %11000011, %00000101, %01010000, %11001100, %01010110, %11001110, %11111100
  763 D1:E26C DB 59 43 DA 
              FF E8 CE 5C 	.db %11011011, %01011001, %01000011, %11011010, %11111111, %11101000, %11001110, %01011100
  764 D1:E274 94 31 FF FF 
              94 F5 C1 43 	.db %10010100, %00110001, %11111111, %11111111, %10010100, %11110101, %11000001, %01000011
  765 D1:E27C 3F FF F9 73 
              11 25 33 CF 	.db %00111111, %11111111, %11111001, %01110011, %00010001, %00100101, %00110011, %11001111
  766 D1:E284 FC A5 3C 10 
              50 FF CC CE 	.db %11111100, %10100101, %00111100, %00010000, %01010000, %11111111, %11001100, %11001110
  767 D1:E28C 5C C9 69 7F 
              33 F0 CD 4F 	.db %01011100, %11001001, %01101001, %01111111, %00110011, %11110000, %11001101, %01001111
  768 D1:E294 -  -  -  -  
  769 D1:E294 -  -  -  -  
  770 D1:E294 -  -  -  -  Branches_1:
  771 D1:E294 20 -  -  -  	.db %00100000
  772 D1:E295 12 0E -  -  	.db 18, 14
  773 D1:E297 3F 00 3F FC 
              0F FF F3 FF 	.db %00111111, %00000000, %00111111, %11111100, %00001111, %11111111, %11110011, %11111111
  774 D1:E29F FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  775 D1:E2A7 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  776 D1:E2AF F3 FF FC FF 
              FC 3C FC 00 	.db %11110011, %11111111, %11111100, %11111111, %11111100, %00111100, %11111100, %00000000
  777 D1:E2B7 -  -  -  -  
  778 D1:E2B7 01 23 -  -  	.db %00000001, %00100011
  779 D1:E2B9 -  -  -  -  
  780 D1:E2B9 00 00 05 00 
              05 55 55 00 	.db %00000000, %00000000, %00000101, %00000000, %00000101, %01010101, %01010101, %00000000
  781 D1:E2C1 00 50 15 44 
              05 45 52 94 	.db %00000000, %01010000, %00010101, %01000100, %00000101, %01000101, %01010010, %10010100
  782 D1:E2C9 40 4A AA 95 
              84 0A AE AB 	.db %01000000, %01001010, %10101010, %10010101, %10000100, %00001010, %10101110, %10101011
  783 D1:E2D1 F5 50 FF FF 
              EA A0 02 AA 	.db %11110101, %01010000, %11111111, %11111111, %11101010, %10100000, %00000010, %10101010
  784 D1:E2D9 A6 54 00 A1 
              15 40 14 00 	.db %10100110, %01010100, %00000000, %10100001, %00010101, %01000000, %00010100, %00000000
  785 D1:E2E1 05 45 44 01 
              45 50 00 00 	.db %00000101, %01000101, %01000100, %00000001, %01000101, %01010000, %00000000, %00000000
  786 D1:E2E9 00 00 00 00 
              00 00 -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  787 D1:E2EF -  -  -  -  
  788 D1:E2EF -  -  -  -  
  789 D1:E2EF -  -  -  -  Vines_7:
  790 D1:E2EF 10 -  -  -  	.db %00010000
  791 D1:E2F0 0A 18 -  -  	.db 10, 24
  792 D1:E2F2 C0 30 0C 03 
              90 EC 3F 07 	.db %11000000, %00110000, %00001100, %00000011, %10010000, %11101100, %00111111, %00000111
  793 D1:E2FA 00 C0 78 1E 
              03 80 E0 3C 	.db %00000000, %11000000, %01111000, %00011110, %00000011, %10000000, %11100000, %00111100
  794 D1:E302 07 00 C0 F0 
              3C 03 B0 7C 	.db %00000111, %00000000, %11000000, %11110000, %00111100, %00000011, %10110000, %01111100
  795 D1:E30A 1C 03 00 E0 
              38 06 -  -  	.db %00011100, %00000011, %00000000, %11100000, %00111000, %00000110
  796 D1:E310 -  -  -  -  
  797 D1:E310 54 -  -  -  	.db %01010100
  798 D1:E311 -  -  -  -  
  799 D1:E311 54 CE 79 6F 
              49 36 FE 9D 	.db %01010100, %11001110, %01111001, %01101111, %01001001, %00110110, %11111110, %10011101
  800 D1:E319 EF 4A -  -  	.db %11101111, %01001010
  801 D1:E31B -  -  -  -  
  802 D1:E31B -  -  -  -  
  803 D1:E31B -  -  -  -  Vines_10:
  804 D1:E31B 10 -  -  -  	.db %00010000
  805 D1:E31C 18 0E -  -  	.db 24, 14
  806 D1:E31E 00 40 00 FC 
              E0 00 FF 80 	.db %00000000, %01000000, %00000000, %11111100, %11100000, %00000000, %11111111, %10000000
  807 D1:E326 00 FF 83 00 
              1F E6 00 33 	.db %00000000, %11111111, %10000011, %00000000, %00011111, %11100110, %00000000, %00110011
  808 D1:E32E FC 00 10 FF 
              0C 00 1F CC 	.db %11111100, %00000000, %00010000, %11111111, %00001100, %00000000, %00011111, %11001100
  809 D1:E336 00 37 E8 00 
              31 F8 00 01 	.db %00000000, %00110111, %11101000, %00000000, %00110001, %11111000, %00000000, %00000001
  810 D1:E33E FC 00 03 3F 
              00 03 9F 00 	.db %11111100, %00000000, %00000011, %00111111, %00000000, %00000011, %10011111, %00000000
  811 D1:E346 00 07 -  -  	.db %00000000, %00000111
  812 D1:E348 -  -  -  -  
  813 D1:E348 45 -  -  -  	.db %01000101
  814 D1:E349 -  -  -  -  
  815 D1:E349 00 3E 1F C3 
              F0 FE 3F 07 	.db %00000000, %00111110, %00011111, %11000011, %11110000, %11111110, %00111111, %00000111
  816 D1:E351 83 F1 F9 F3 
              E3 FF 80 -  	.db %10000011, %11110001, %11111001, %11110011, %11100011, %11111111, %10000000
  817 D1:E358 -  -  -  -  
  818 D1:E358 -  -  -  -  
  819 D1:E358 -  -  -  -  Branches_0:
  820 D1:E358 20 -  -  -  	.db %00100000
  821 D1:E359 12 0E -  -  	.db 18, 14
  822 D1:E35B CC 00 3F CF 
              0F FF F3 FF 	.db %11001100, %00000000, %00111111, %11001111, %00001111, %11111111, %11110011, %11111111
  823 D1:E363 FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  824 D1:E36B FF FF FF FF 
              3F FF CF FF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11001111, %11111111
  825 D1:E373 F3 FF F0 FF 
              FC 3F 30 00 	.db %11110011, %11111111, %11110000, %11111111, %11111100, %00111111, %00110000, %00000000
  826 D1:E37B -  -  -  -  
  827 D1:E37B 01 23 -  -  	.db %00000001, %00100011
  828 D1:E37D -  -  -  -  
  829 D1:E37D 00 00 00 00 
              15 40 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00010101, %01000000, %00000000, %00000000
  830 D1:E385 40 51 45 40 
              04 00 00 10 	.db %01000000, %01010001, %01000101, %01000000, %00000100, %00000000, %00000000, %00010000
  831 D1:E38D 05 45 5A 01 
              10 BA AA F5 	.db %00000101, %01000101, %01011010, %00000001, %00010000, %10111010, %10101010, %11110101
  832 D1:E395 41 0F FF FA 
              95 10 AA AA 	.db %01000001, %00001111, %11111111, %11111010, %10010101, %00010000, %10101010, %10101010
  833 D1:E39D 55 04 55 51 
              44 00 00 05 	.db %01010101, %00000100, %01010101, %01010001, %01000100, %00000000, %00000000, %00000101
  834 D1:E3A5 40 40 00 50 
              14 05 40 00 	.db %01000000, %01000000, %00000000, %01010000, %00010100, %00000101, %01000000, %00000000
  835 D1:E3AD 00 00 00 -  	.db %00000000, %00000000, %00000000
  836 D1:E3B0 -  -  -  -  
  837 D1:E3B0 -  -  -  -  
  838 D1:E3B0 -  -  -  -  Clouds_2:
  839 D1:E3B0 14 -  -  -  	.db %00010100
  840 D1:E3B1 10 10 -  -  	.db 16, 16
  841 D1:E3B3 67 -  -  -  	.db %01100111
  842 D1:E3B4 -  -  -  -  
  843 D1:E3B4 00 00 00 00 
              00 08 40 0E 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001000, %01000000, %00001110
  844 D1:E3BC B0 C3 1F 80 
              00 00 00 00 	.db %10110000, %11000011, %00011111, %10000000, %00000000, %00000000, %00000000, %00000000
  845 D1:E3C4 60 02 80 01 
              01 F0 20 1E 	.db %01100000, %00000010, %10000000, %00000001, %00000001, %11110000, %00100000, %00011110
  846 D1:E3CC 30 00 1F 08 
              01 F8 00 00 	.db %00110000, %00000000, %00011111, %00001000, %00000001, %11111000, %00000000, %00000000
  847 D1:E3D4 -  -  -  -  
  848 D1:E3D4 -  -  -  -  
  849 D1:E3D4 -  -  -  -  GroundDirtDark:
  850 D1:E3D4 24 -  -  -  	.db %00100100
  851 D1:E3D5 10 0C -  -  	.db 16, 12
  852 D1:E3D7 01 50 -  -  	.db %00000001, %01010000
  853 D1:E3D9 -  -  -  -  
  854 D1:E3D9 00 00 00 00 
              00 00 00 04 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000100
  855 D1:E3E1 58 08 00 01 
              08 08 25 40 	.db %01011000, %00001000, %00000000, %00000001, %00001000, %00001000, %00100101, %01000000
  856 D1:E3E9 00 00 20 54 
              01 50 00 08 	.db %00000000, %00000000, %00100000, %01010100, %00000001, %01010000, %00000000, %00001000
  857 D1:E3F1 00 14 00 08 
              20 00 00 00 	.db %00000000, %00010100, %00000000, %00001000, %00100000, %00000000, %00000000, %00000000
  858 D1:E3F9 20 00 50 00 
              52 12 05 05 	.db %00100000, %00000000, %01010000, %00000000, %01010010, %00010010, %00000101, %00000101
  859 D1:E401 02 44 80 40 
              00 00 00 00 	.db %00000010, %01000100, %10000000, %01000000, %00000000, %00000000, %00000000, %00000000
  860 D1:E409 -  -  -  -  
  861 D1:E409 -  -  -  -  
  862 D1:E409 -  -  -  -  GroundHumpDark:
  863 D1:E409 20 -  -  -  	.db %00100000
  864 D1:E40A 10 0D -  -  	.db 16, 13
  865 D1:E40C 03 F0 0F FC 
              3F FC FF FF 	.db %00000011, %11110000, %00001111, %11111100, %00111111, %11111100, %11111111, %11111111
  866 D1:E414 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  867 D1:E41C FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  868 D1:E424 FF FF -  -  	.db %11111111, %11111111
  869 D1:E426 -  -  -  -  
  870 D1:E426 10 50 -  -  	.db %00010000, %01010000
  871 D1:E428 -  -  -  -  
  872 D1:E428 00 00 55 40 
              01 55 54 05 	.db %00000000, %00000000, %01010101, %01000000, %00000001, %01010101, %01010100, %00000101
  873 D1:E430 55 56 50 95 
              59 56 55 95 	.db %01010101, %01010110, %01010000, %10010101, %01011001, %01010110, %01010101, %10010101
  874 D1:E438 59 05 59 51 
              59 50 09 44 	.db %01011001, %00000101, %01011001, %01010001, %01011001, %01010000, %00001001, %01000100
  875 D1:E440 05 55 55 56 
              55 56 55 56 	.db %00000101, %01010101, %01010101, %01010110, %01010101, %01010110, %01010101, %01010110
  876 D1:E448 95 49 55 45 
              94 18 15 11 	.db %10010101, %01001001, %01010101, %01000101, %10010100, %00011000, %00010101, %00010001
  877 D1:E450 56 55 54 55 
              59 55 55 -  	.db %01010110, %01010101, %01010100, %01010101, %01011001, %01010101, %01010101
  878 D1:E457 -  -  -  -  
  879 D1:E457 -  -  -  -  
  880 D1:E457 -  -  -  -  GroundGrassSmall:
  881 D1:E457 08 -  -  -  	.db %00001000
  882 D1:E458 10 0F -  -  	.db 16, 15
  883 D1:E45A 30 C0 30 C0 
              F3 CC F3 CC 	.db %00110000, %11000000, %00110000, %11000000, %11110011, %11001100, %11110011, %11001100
  884 D1:E462 F3 0C C3 0F 
              C3 0F C3 03 	.db %11110011, %00001100, %11000011, %00001111, %11000011, %00001111, %11000011, %00000011
  885 D1:E46A C3 03 C3 33 
              C3 33 C3 33 	.db %11000011, %00000011, %11000011, %00110011, %11000011, %00110011, %11000011, %00110011
  886 D1:E472 C3 33 C3 33 
              C0 33 -  -  	.db %11000011, %00110011, %11000011, %00110011, %11000000, %00110011
  887 D1:E478 -  -  -  -  
  888 D1:E478 50 -  -  -  	.db %01010000
  889 D1:E479 -  -  -  -  
  890 D1:E479 -  -  -  -  
  891 D1:E479 -  -  -  -  
  892 D1:E479 -  -  -  -  Tree_16:
  893 D1:E479 08 -  -  -  	.db %00001000
  894 D1:E47A 0A 10 -  -  	.db 10, 16
  895 D1:E47C 3C 0F 03 C0 
              F0 3C 0F 0F 	.db %00111100, %00001111, %00000011, %11000000, %11110000, %00111100, %00001111, %00001111
  896 D1:E484 C0 F0 3C 0F 
              03 FC FC 3C 	.db %11000000, %11110000, %00111100, %00001111, %00000011, %11111100, %11111100, %00111100
  897 D1:E48C 0F 03 C0 F0 	.db %00001111, %00000011, %11000000, %11110000
  898 D1:E490 -  -  -  -  
  899 D1:E490 00 -  -  -  	.db %00000000
  900 D1:E491 -  -  -  -  
  901 D1:E491 -  -  -  -  
  902 D1:E491 -  -  -  -  
  903 D1:E491 -  -  -  -  Tree_17:
  904 D1:E491 08 -  -  -  	.db %00001000
  905 D1:E492 07 0E -  -  	.db 7, 14
  906 D1:E494 0C 18 77 E1 
              C3 0F 9E 70 	.db %00001100, %00011000, %01110111, %11100001, %11000011, %00001111, %10011110, %01110000
  907 D1:E49C E3 C7 0C 18 
              00 -  -  -  	.db %11100011, %11000111, %00001100, %00011000, %00000000
  908 D1:E4A1 -  -  -  -  
  909 D1:E4A1 00 -  -  -  	.db %00000000
  910 D1:E4A2 -  -  -  -  
  911 D1:E4A2 -  -  -  -  
  912 D1:E4A2 -  -  -  -  
  913 D1:E4A2 -  -  -  -  Leaves_8:
  914 D1:E4A2 10 -  -  -  	.db %00010000
  915 D1:E4A3 10 0E -  -  	.db 16, 14
  916 D1:E4A5 03 C0 0F F0 
              3F F0 3F FC 	.db %00000011, %11000000, %00001111, %11110000, %00111111, %11110000, %00111111, %11111100
  917 D1:E4AD FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  918 D1:E4B5 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  919 D1:E4BD FF FC 30 30 	.db %11111111, %11111100, %00110000, %00110000
  920 D1:E4C1 -  -  -  -  
  921 D1:E4C1 54 -  -  -  	.db %01010100
  922 D1:E4C2 -  -  -  -  
  923 D1:E4C2 00 03 00 67 
              00 70 80 00 	.db %00000000, %00000011, %00000000, %01100111, %00000000, %01110000, %10000000, %00000000
  924 D1:E4CA F0 1C 1E 70 
              01 81 10 03 	.db %11110000, %00011100, %00011110, %01110000, %00000001, %10000001, %00010000, %00000011
  925 D1:E4D2 F0 0E 03 C0 
              00 00 00 -  	.db %11110000, %00001110, %00000011, %11000000, %00000000, %00000000, %00000000
  926 D1:E4D9 -  -  -  -  
  927 D1:E4D9 -  -  -  -  
  928 D1:E4D9 -  -  -  -  Tree_18:
  929 D1:E4D9 08 -  -  -  	.db %00001000
  930 D1:E4DA 07 0E -  -  	.db 7, 14
  931 D1:E4DC 18 30 C7 83 
              06 0C 1C 1E 	.db %00011000, %00110000, %11000111, %10000011, %00000110, %00001100, %00011100, %00011110
  932 D1:E4E4 30 60 C1 83 
              00 -  -  -  	.db %00110000, %01100000, %11000001, %10000011, %00000000
  933 D1:E4E9 -  -  -  -  
  934 D1:E4E9 00 -  -  -  	.db %00000000
  935 D1:E4EA -  -  -  -  
  936 D1:E4EA -  -  -  -  
  937 D1:E4EA -  -  -  -  
  938 D1:E4EA -  -  -  -  Clouds_0:
  939 D1:E4EA 10 -  -  -  	.db %00010000
  940 D1:E4EB 10 0A -  -  	.db 16, 10
  941 D1:E4ED FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  942 D1:E4F5 FF FF FF FF 
              FF FF 3F FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111
  943 D1:E4FD 0F CC 03 00 	.db %00001111, %11001100, %00000011, %00000000
  944 D1:E501 -  -  -  -  
  945 D1:E501 67 -  -  -  	.db %01100111
  946 D1:E502 -  -  -  -  
  947 D1:E502 00 40 31 84 
              13 1C 0E 20 	.db %00000000, %01000000, %00110001, %10000100, %00010011, %00011100, %00001110, %00100000
  948 D1:E50A 00 00 E0 00 
              F0 77 F3 FF 	.db %00000000, %00000000, %11100000, %00000000, %11110000, %01110111, %11110011, %11111111
  949 D1:E512 FF -  -  -  	.db %11111111
  950 D1:E513 -  -  -  -  
  951 D1:E513 -  -  -  -  
  952 D1:E513 -  -  -  -  Clouds_1:
  953 D1:E513 10 -  -  -  	.db %00010000
  954 D1:E514 0C 0E -  -  	.db 12, 14
  955 D1:E516 03 F0 FF 3F 
              F3 FF FF FF 	.db %00000011, %11110000, %11111111, %00111111, %11110011, %11111111, %11111111, %11111111
  956 D1:E51E FF 3F F0 FF 
              0F F0 FF 0F 	.db %11111111, %00111111, %11110000, %11111111, %00001111, %11110000, %11111111, %00001111
  957 D1:E526 F0 3F 00 F0 
              03 -  -  -  	.db %11110000, %00111111, %00000000, %11110000, %00000011
  958 D1:E52B -  -  -  -  
  959 D1:E52B 76 -  -  -  	.db %01110110
  960 D1:E52C -  -  -  -  
  961 D1:E52C 3C 7C 3B 3E 
              47 F0 37 C5 	.db %00111100, %01111100, %00111011, %00111110, %01000111, %11110000, %00110111, %11000101
  962 D1:E534 F6 73 B1 F0 
              70 40 -  -  	.db %11110110, %01110011, %10110001, %11110000, %01110000, %01000000
  963 D1:E53A -  -  -  -  
  964 D1:E53A -  -  -  -  
  965 D1:E53A -  -  -  -  Clouds_3:
  966 D1:E53A 10 -  -  -  	.db %00010000
  967 D1:E53B 10 0B -  -  	.db 16, 11
  968 D1:E53D 03 00 0F C0 
              3F C0 FF F3 	.db %00000011, %00000000, %00001111, %11000000, %00111111, %11000000, %11111111, %11110011
  969 D1:E545 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  970 D1:E54D FF FF FF FF 
              FF FF -  -  	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  971 D1:E553 -  -  -  -  
  972 D1:E553 76 -  -  -  	.db %01110110
  973 D1:E554 -  -  -  -  
  974 D1:E554 00 0C 07 80 
              FF 03 FF C6 	.db %00000000, %00001100, %00000111, %10000000, %11111111, %00000011, %11111111, %11000110
  975 D1:E55C 7F FF 3C FB 
              83 E7 FF FF 	.db %01111111, %11111111, %00111100, %11111011, %10000011, %11100111, %11111111, %11111111
  976 D1:E564 FF FC -  -  	.db %11111111, %11111100
  977 D1:E566 -  -  -  -  
  978 D1:E566 -  -  -  -  
  979 D1:E566 -  -  -  -  Clouds_4:
  980 D1:E566 10 -  -  -  	.db %00010000
  981 D1:E567 08 0A -  -  	.db 8, 10
  982 D1:E569 03 0F 3F 3F 
              FF FF FF FF 	.db %00000011, %00001111, %00111111, %00111111, %11111111, %11111111, %11111111, %11111111
  983 D1:E571 FF FF -  -  	.db %11111111, %11111111
  984 D1:E573 -  -  -  -  
  985 D1:E573 76 -  -  -  	.db %01110110
  986 D1:E574 -  -  -  -  
  987 D1:E574 00 11 C3 C7 
              C5 CE 4F CF 	.db %00000000, %00010001, %11000011, %11000111, %11000101, %11001110, %01001111, %11001111
  988 D1:E57C C0 -  -  -  	.db %11000000
  989 D1:E57D -  -  -  -  
  990 D1:E57D -  -  -  -  
  991 D1:E57D -  -  -  -  Frog_0:
  992 D1:E57D 40 -  -  -  	.db %01000000
  993 D1:E57E 19 13 -  -  	.db 25, 19
  994 D1:E580 00 0F FE 00 
              1F FF 80 3F 	.db %00000000, %00001111, %11111110, %00000000, %00011111, %11111111, %10000000, %00111111
  995 D1:E588 FF E0 3F FF 
              F0 3F FF F8 	.db %11111111, %11100000, %00111111, %11111111, %11110000, %00111111, %11111111, %11111000
  996 D1:E590 7F FF FC 7F 
              FF FE FF FF 	.db %01111111, %11111111, %11111100, %01111111, %11111111, %11111110, %11111111, %11111111
  997 D1:E598 FF 7F FF FF 
              FF FF FF BF 	.db %11111111, %01111111, %11111111, %11111111, %11111111, %11111111, %11111111, %10111111
  998 D1:E5A0 FF FF DF FF 
              FF 8F FF FF 	.db %11111111, %11111111, %11011111, %11111111, %11111111, %10001111, %11111111, %11111111
  999 D1:E5A8 87 FF FF C3 
              FF FF F1 FF 	.db %10000111, %11111111, %11111111, %11000011, %11111111, %11111111, %11110001, %11111111
 1000 D1:E5B0 FF FC FF FF 
              FE 7F FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111110, %01111111, %11111111, %11111111
 1001 D1:E5B8 1F FF FF 80 	.db %00011111, %11111111, %11111111, %10000000
 1002 D1:E5BC -  -  -  -  
 1003 D1:E5BC 95 46 80 00 	.db %10010101, %01000110, %10000000, %00000000
 1004 D1:E5C0 -  -  -  -  
 1005 D1:E5C0 00 00 00 00 
              00 09 24 92 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001001, %00100100, %10010010
 1006 D1:E5C8 48 00 02 4A 
              49 24 89 00 	.db %01001000, %00000000, %00000010, %01001010, %01001001, %00100100, %10001001, %00000000
 1007 D1:E5D0 02 4A 49 26 
              4A 44 80 09 	.db %00000010, %01001010, %01001001, %00100110, %01001010, %01000100, %10000000, %00001001
 1008 D1:E5D8 49 14 93 25 
              24 40 00 94 	.db %01001001, %00010100, %10010011, %00100101, %00100100, %01000000, %00000000, %10010100
 1009 D1:E5E0 91 45 26 DA 
              48 80 09 29 	.db %10010001, %01000101, %00100110, %11011010, %01001000, %10000000, %00001001, %00101001
 1010 D1:E5E8 14 92 49 24 
              89 20 00 4A 	.db %00010100, %10010010, %01001001, %00100100, %10001001, %00100000, %00000000, %01001010
 1011 D1:E5F0 48 A4 92 48 
              92 64 20 12 	.db %01001000, %10100100, %10010010, %01001000, %10010010, %01100100, %00100000, %00010010
 1012 D1:E5F8 52 29 24 92 
              92 49 21 00 	.db %01010010, %00101001, %00100100, %10010010, %10010010, %01001001, %00100001, %00000000
 1013 D1:E600 02 52 49 24 
              A4 92 49 21 	.db %00000010, %01010010, %01001001, %00100100, %10100100, %10010010, %01001001, %00100001
 1014 D1:E608 20 12 92 48 
              C9 24 92 13 	.db %00100000, %00010010, %10010010, %01001000, %11001001, %00100100, %10010010, %00010011
 1015 D1:E610 08 00 12 92 
              49 19 24 90 	.db %00001000, %00000000, %00010010, %10010010, %01001001, %00011001, %00100100, %10010000
 1016 D1:E618 A4 40 04 A4 
              92 46 49 21 	.db %10100100, %01000000, %00000100, %10100100, %10010010, %01000110, %01001001, %00100001
 1017 D1:E620 49 10 0A 29 
              24 8C 92 14 	.db %01001001, %00010000, %00001010, %00101001, %00100100, %10001100, %10010010, %00010100
 1018 D1:E628 92 20 12 8A 
              44 99 21 49 	.db %10010010, %00100000, %00010010, %10001010, %01000100, %10011001, %00100001, %01001001
 1019 D1:E630 22 40 04 94 
              92 48 C2 52 	.db %00100010, %01000000, %00000100, %10010100, %10010010, %01001000, %11000010, %01010010
 1020 D1:E638 25 22 00 25 
              14 92 48 82 	.db %00100101, %00100010, %00000000, %00100101, %00010100, %10010010, %01001000, %10000010
 1021 D1:E640 52 49 22 00 
              24 92 49 20 	.db %01010010, %01001001, %00100010, %00000000, %00100100, %10010010, %01001001, %00100000
 1022 D1:E648 02 49 24 90 
              00 00 00 00 	.db %00000010, %01001001, %00100100, %10010000, %00000000, %00000000, %00000000, %00000000
 1023 D1:E650 00 00 00 00 
              00 -  -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000
 1024 D1:E655 -  -  -  -  
 1025 D1:E655 -  -  -  -  
Listing for file "ascent.asm"
  571 D1:E655 -  -  -  -  #include "generated/SpriteEquates.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\SpriteEquates.txt"
    1 D1:E655 -  -  -  -  Clouds_0_Fast_F .equ 13894080 ; vRam + 0 - 101
    2 D1:E655 -  -  -  -  Clouds_1_Fast_F .equ 13894182 ; vRam + 102 - 201
    3 D1:E655 -  -  -  -  Clouds_4_Fast_F .equ 13894282 ; vRam + 202 - 266
    4 D1:E655 -  -  -  -  Clouds_3_Fast_F .equ 13894346 ; vRam + 266 - 373
    5 D1:E655 -  -  -  -  Clouds_2_Fast_F .equ 13894454 ; vRam + 374 - 551
    6 D1:E655 -  -  -  -  Frog_0_Slow .equ 13894631 ; vRam + 551 - 854
    7 D1:E655 -  -  -  -  Frog_0_Slow_O .equ 13894935 ; vRam + 855 - 1158
    8 D1:E655 -  -  -  -  Branches_8_Fast_F .equ 13895238 ; vRam + 1158 - 1252
    9 D1:E655 -  -  -  -  Branches_15_Slow .equ 13895333 ; vRam + 1253 - 1365
   10 D1:E655 -  -  -  -  Branches_3_Fast .equ 13895446 ; vRam + 1366 - 1533
   11 D1:E655 -  -  -  -  Vines_2_Slow_F .equ 13895613 ; vRam + 1533 - 1751
   12 D1:E655 -  -  -  -  Vines_1_Slow .equ 13895831 ; vRam + 1751 - 1895
   13 D1:E655 -  -  -  -  Vines_9_Slow_O .equ 13895975 ; vRam + 1895 - 2072
   14 D1:E655 -  -  -  -  Tree_0_Fast_F .equ 13896152 ; vRam + 2072 - 2323
   15 D1:E655 -  -  -  -  Tree_3_Fast .equ 13896404 ; vRam + 2324 - 2581
   16 D1:E655 -  -  -  -  Tree_8_Fast .equ 13896662 ; vRam + 2582 - 2839
   17 D1:E655 -  -  -  -  Tree_9_Fast_F .equ 13896920 ; vRam + 2840 - 3097
   18 D1:E655 -  -  -  -  Tree_8_Fast_F .equ 13897178 ; vRam + 3098 - 3355
   19 D1:E655 -  -  -  -  Tree_4_Fast_F .equ 13897436 ; vRam + 3356 - 3613
   20 D1:E655 -  -  -  -  Tree_1_Fast .equ 13897694 ; vRam + 3614 - 3868
   21 D1:E655 -  -  -  -  Tree_0_Fast .equ 13897948 ; vRam + 3868 - 4119
   22 D1:E655 -  -  -  -  Tree_1_Fast_F .equ 13898200 ; vRam + 4120 - 4374
   23 D1:E655 -  -  -  -  Tree_6_Fast .equ 13898454 ; vRam + 4374 - 4631
   24 D1:E655 -  -  -  -  Tree_10_Fast .equ 13898712 ; vRam + 4632 - 4889
   25 D1:E655 -  -  -  -  Tree_7_Fast_F .equ 13898970 ; vRam + 4890 - 5147
   26 D1:E655 -  -  -  -  Tree_5_Fast .equ 13899228 ; vRam + 5148 - 5405
   27 D1:E655 -  -  -  -  Tree_11_Fast .equ 13899486 ; vRam + 5406 - 5663
   28 D1:E655 -  -  -  -  Tree_5_Fast_F .equ 13899744 ; vRam + 5664 - 5921
   29 D1:E655 -  -  -  -  Tree_2_Fast_F .equ 13900002 ; vRam + 5922 - 6173
   30 D1:E655 -  -  -  -  Tree_11_Fast_F .equ 13900254 ; vRam + 6174 - 6431
   31 D1:E655 -  -  -  -  Branches_1_Fast .equ 13900512 ; vRam + 6432 - 6584
   32 D1:E655 -  -  -  -  Branches_2_Slow_O .equ 13900665 ; vRam + 6585 - 6808
   33 D1:E655 -  -  -  -  Branches_3_Slow_O .equ 13900889 ; vRam + 6809 - 7027
   34 D1:E655 -  -  -  -  Branches_5_Slow_O .equ 13901107 ; vRam + 7027 - 7235
   35 D1:E655 -  -  -  -  Leaves_3_Slow_O .equ 13901315 ; vRam + 7235 - 7343
   36 D1:E655 -  -  -  -  Vines_7_Slow .equ 13901423 ; vRam + 7343 - 7534
   37 D1:E655 -  -  -  -  Vines_5_Slow_O_F .equ 13901615 ; vRam + 7535 - 7773
   38 D1:E655 -  -  -  -  Vines_3_Slow_O_F .equ 13901853 ; vRam + 7773 - 7955
   39 D1:E655 -  -  -  -  Vines_4_Slow_O .equ 13902035 ; vRam + 7955 - 8133
   40 D1:E655 -  -  -  -  Vines_10_Slow .equ 13902213 ; vRam + 8133 - 8327
   41 D1:E655 -  -  -  -  Vines_7_Slow_F .equ 13902407 ; vRam + 8327 - 8518
   42 D1:E655 -  -  -  -  Vines_2_Slow .equ 13902599 ; vRam + 8519 - 8738
   43 D1:E655 -  -  -  -  Leaves_2_Slow .equ 13902819 ; vRam + 8739 - 8843
   44 D1:E655 -  -  -  -  Branches_1_Fast_F .equ 13902924 ; vRam + 8844 - 8996
   45 D1:E655 -  -  -  -  Branches_2_Fast_F .equ 13903076 ; vRam + 8996 - 9165
   46 D1:E655 -  -  -  -  Branches_5_Fast_F .equ 13903246 ; vRam + 9166 - 9326
   47 D1:E655 -  -  -  -  Branches_14_Slow .equ 13903407 ; vRam + 9327 - 9435
   48 D1:E655 -  -  -  -  Vines_10_Slow_O .equ 13903515 ; vRam + 9435 - 9626
   49 D1:E655 -  -  -  -  Branches_0_Fast .equ 13903706 ; vRam + 9626 - 9777
   50 D1:E655 -  -  -  -  Clouds_2_Fast .equ 13903858 ; vRam + 9778 - 9955
   51 D1:E655 -  -  -  -  GroundDirtDark_Fast .equ 13904036 ; vRam + 9956 - 10089
   52 D1:E655 -  -  -  -  GroundDirtDark_Fast_F .equ 13904170 ; vRam + 10090 - 10223
   53 D1:E655 -  -  -  -  GroundHumpDark_Fast .equ 13904304 ; vRam + 10224 - 10358
   54 D1:E655 -  -  -  -  GroundHumpDark_Fast_F .equ 13904438 ; vRam + 10358 - 10492
   55 D1:E655 -  -  -  -  GroundGrassSmall_Fast .equ 13904572 ; vRam + 10492 - 10659
   56 D1:E655 -  -  -  -  GroundGrassSmall_Fast_F .equ 13904740 ; vRam + 10660 - 10827
   57 D1:E655 -  -  -  -  Tree_16_Fast .equ 13904908 ; vRam + 10828 - 10913
   58 D1:E655 -  -  -  -  Tree_17_Slow_O .equ 13904993 ; vRam + 10913 - 11017
   59 D1:E655 -  -  -  -  Tree_17_Slow_O_F .equ 13905097 ; vRam + 11017 - 11118
   60 D1:E655 -  -  -  -  Leaves_8_Fast .equ 13905198 ; vRam + 11118 - 11252
   61 D1:E655 -  -  -  -  Tree_16_Slow_O .equ 13905333 ; vRam + 11253 - 11386
   62 D1:E655 -  -  -  -  Tree_17_Slow_F .equ 13905467 ; vRam + 11387 - 11491
   63 D1:E655 -  -  -  -  Tree_18_Slow_O .equ 13905571 ; vRam + 11491 - 11591
   64 D1:E655 -  -  -  -  Tree_17_Slow .equ 13905671 ; vRam + 11591 - 11692
   65 D1:E655 -  -  -  -  Tree_18_Slow_F .equ 13905773 ; vRam + 11693 - 11793
   66 D1:E655 -  -  -  -  Tree_16_Slow_O_F .equ 13905873 ; vRam + 11793 - 11926
   67 D1:E655 -  -  -  -  Leaves_2_Slow_F .equ 13906007 ; vRam + 11927 - 12030
   68 D1:E655 -  -  -  -  Clouds_0_Fast .equ 13906110 ; vRam + 12030 - 12131
   69 D1:E655 -  -  -  -  Clouds_1_Fast .equ 13906212 ; vRam + 12132 - 12231
   70 D1:E655 -  -  -  -  Clouds_3_Fast .equ 13906312 ; vRam + 12232 - 12339
   71 D1:E655 -  -  -  -  Clouds_4_Fast .equ 13906420 ; vRam + 12340 - 12404
   72 D1:E655 -  -  -  -  GroundDirtFull_Fast .equ 13906484 ; vRam + 12404 - 12581
   73 D1:E655 -  -  -  -  GroundDirtFull_Fast_F .equ 13906662 ; vRam + 12582 - 12759
   74 D1:E655 -  -  -  -  GroundDirtMound_Fast .equ 13906840 ; vRam + 12760 - 12887
   75 D1:E655 -  -  -  -  GroundDirtMound_Fast_F .equ 13906968 ; vRam + 12888 - 13015
   76 D1:E655 -  -  -  -  GroundGrassL4_Fast .equ 13907096 ; vRam + 13016 - 13153
   77 D1:E655 -  -  -  -  GroundGrassL2_Fast .equ 13907234 ; vRam + 13154 - 13241
   78 D1:E655 -  -  -  -  GroundGrassL5_Fast .equ 13907322 ; vRam + 13242 - 13372
   79 D1:E655 -  -  -  -  GroundGrassL3_Fast .equ 13907452 ; vRam + 13372 - 13461
   80 D1:E655 -  -  -  -  GroundGrassL1_Fast .equ 13907542 ; vRam + 13462 - 13576
   81 D1:E655 -  -  -  -  GroundGrassL1_Fast_F .equ 13907656 ; vRam + 13576 - 13690
   82 D1:E655 -  -  -  -  GroundGrassL3_Fast_F .equ 13907770 ; vRam + 13690 - 13779
   83 D1:E655 -  -  -  -  Branches_10_Slow_O .equ 13907859 ; vRam + 13779 - 13943
   84 D1:E655 -  -  -  -  Branches_9_Fast .equ 13908024 ; vRam + 13944 - 14074
   85 D1:E655 -  -  -  -  Branches_16_Slow .equ 13908155 ; vRam + 14075 - 14183
   86 D1:E655 -  -  -  -  Branches_13_Slow_O .equ 13908263 ; vRam + 14183 - 14253
   87 D1:E655 -  -  -  -  Leaves_3_Slow .equ 13908333 ; vRam + 14253 - 14362
   88 D1:E655 -  -  -  -  Leaves_7_Fast .equ 13908442 ; vRam + 14362 - 14497
   89 D1:E655 -  -  -  -  Leaves_7_Fast_F .equ 13908578 ; vRam + 14498 - 14633
   90 D1:E655 -  -  -  -  Branches_6_Slow .equ 13908713 ; vRam + 14633 - 14790
   91 D1:E655 -  -  -  -  Branches_10_Slow_O_F .equ 13908871 ; vRam + 14791 - 14955
   92 D1:E655 -  -  -  -  Branches_7_Slow_O .equ 13909035 ; vRam + 14955 - 15118
   93 D1:E655 -  -  -  -  Branches_16_Slow_O .equ 13909199 ; vRam + 15119 - 15227
   94 D1:E655 -  -  -  -  Branches_15_Slow_O .equ 13909307 ; vRam + 15227 - 15335
   95 D1:E655 -  -  -  -  Branches_8_Slow_O_F .equ 13909415 ; vRam + 15335 - 15471
   96 D1:E655 -  -  -  -  Branches_12_Slow_O .equ 13909551 ; vRam + 15471 - 15592
   97 D1:E655 -  -  -  -  Branches_15_Slow_O_F .equ 13909673 ; vRam + 15593 - 15705
   98 D1:E655 -  -  -  -  Leaves_2_Slow_O .equ 13909785 ; vRam + 15705 - 15810
   99 D1:E655 -  -  -  -  Leaves_4_Slow .equ 13909891 ; vRam + 15811 - 15948
  100 D1:E655 -  -  -  -  Leaves_4_Slow_F .equ 13910029 ; vRam + 15949 - 16087
  101 D1:E655 -  -  -  -  Branches_7_Fast .equ 13910168 ; vRam + 16088 - 16209
  102 D1:E655 -  -  -  -  Branches_8_Fast .equ 13910290 ; vRam + 16210 - 16304
  103 D1:E655 -  -  -  -  Branches_10_Fast_F .equ 13910384 ; vRam + 16304 - 16423
  104 D1:E655 -  -  -  -  Branches_11_Fast_F .equ 13910504 ; vRam + 16424 - 16527
  105 D1:E655 -  -  -  -  Branches_16_Slow_O_F .equ 13910607 ; vRam + 16527 - 16635
  106 D1:E655 -  -  -  -  Branches_13_Fast_F .equ 13910716 ; vRam + 16636 - 16685
  107 D1:E655 -  -  -  -  Branches_14_Slow_O .equ 13910765 ; vRam + 16685 - 16796
  108 D1:E655 -  -  -  -  Branches_15_Slow_F .equ 13910877 ; vRam + 16797 - 16905
  109 D1:E655 -  -  -  -  Leaves_6_Slow .equ 13910985 ; vRam + 16905 - 17036
  110 D1:E655 -  -  -  -  Branches_4_Fast_F .equ 13911116 ; vRam + 17036 - 17194
  111 D1:E655 -  -  -  -  Branches_7_Fast_F .equ 13911274 ; vRam + 17194 - 17315
  112 D1:E655 -  -  -  -  Branches_12_Fast_F .equ 13911396 ; vRam + 17316 - 17407
  113 D1:E655 -  -  -  -  Leaves_4_Slow_O .equ 13911487 ; vRam + 17407 - 17549
  114 D1:E655 -  -  -  -  Branches_8_Slow_O .equ 13911629 ; vRam + 17549 - 17685
  115 D1:E655 -  -  -  -  Branches_10_Fast .equ 13911766 ; vRam + 17686 - 17805
  116 D1:E655 -  -  -  -  Leaves_6_Slow_O .equ 13911885 ; vRam + 17805 - 17936
  117 D1:E655 -  -  -  -  Leaves_3_Slow_F .equ 13912017 ; vRam + 17937 - 18045
  118 D1:E655 -  -  -  -  Vines_8_Slow .equ 13912125 ; vRam + 18045 - 18246
  119 D1:E655 -  -  -  -  Vines_2_Slow_O .equ 13912327 ; vRam + 18247 - 18463
  120 D1:E655 -  -  -  -  Vines_3_Slow .equ 13912543 ; vRam + 18463 - 18639
  121 D1:E655 -  -  -  -  Vines_5_Slow .equ 13912719 ; vRam + 18639 - 18881
  122 D1:E655 -  -  -  -  Vines_9_Slow .equ 13912961 ; vRam + 18881 - 19058
  123 D1:E655 -  -  -  -  Vines_4_Slow_F .equ 13913139 ; vRam + 19059 - 19242
  124 D1:E655 -  -  -  -  Vines_1_Slow_O .equ 13913323 ; vRam + 19243 - 19383
  125 D1:E655 -  -  -  -  Vines_9_Slow_O_F .equ 13913463 ; vRam + 19383 - 19560
  126 D1:E655 -  -  -  -  Vines_3_Slow_F .equ 13913641 ; vRam + 19561 - 19736
  127 D1:E655 -  -  -  -  Vines_8_Slow_F .equ 13913817 ; vRam + 19737 - 19938
  128 D1:E655 -  -  -  -  Branches_9_Slow_O .equ 13914019 ; vRam + 19939 - 20114
  129 D1:E655 -  -  -  -  Vines_2_Slow_O_F .equ 13914195 ; vRam + 20115 - 20331
  130 D1:E655 -  -  -  -  Tree_2_Fast .equ 13914412 ; vRam + 20332 - 20583
  131 D1:E655 -  -  -  -  Tree_4_Fast .equ 13914664 ; vRam + 20584 - 20841
  132 D1:E655 -  -  -  -  Tree_7_Fast .equ 13914922 ; vRam + 20842 - 21099
  133 D1:E655 -  -  -  -  Tree_9_Fast .equ 13915180 ; vRam + 21100 - 21357
  134 D1:E655 -  -  -  -  Tree_6_Fast_F .equ 13915438 ; vRam + 21358 - 21615
  135 D1:E655 -  -  -  -  Tree_3_Fast_F .equ 13915696 ; vRam + 21616 - 21873
  136 D1:E655 -  -  -  -  Branches_1_Slow_O .equ 13915953 ; vRam + 21873 - 22070
  137 D1:E655 -  -  -  -  Branches_4_Slow_O .equ 13916151 ; vRam + 22071 - 22274
  138 D1:E655 -  -  -  -  Leaves_3_Slow_O_F .equ 13916355 ; vRam + 22275 - 22385
  139 D1:E655 -  -  -  -  Vines_7_Slow_O .equ 13916465 ; vRam + 22385 - 22580
  140 D1:E655 -  -  -  -  Vines_8_Slow_O .equ 13916661 ; vRam + 22581 - 22778
  141 D1:E655 -  -  -  -  Vines_8_Slow_O_F .equ 13916859 ; vRam + 22779 - 22976
  142 D1:E655 -  -  -  -  Vines_6_Slow .equ 13917057 ; vRam + 22977 - 23159
  143 D1:E655 -  -  -  -  Branches_0_Fast_F .equ 13917240 ; vRam + 23160 - 23311
  144 D1:E655 -  -  -  -  Branches_9_Fast_F .equ 13917392 ; vRam + 23312 - 23442
  145 D1:E655 -  -  -  -  Branches_5_Fast .equ 13907096 ; vRam + 13016 - 13176
  146 D1:E655 -  -  -  -  Branches_4_Fast .equ 13907256 ; vRam + 13176 - 13334
  147 D1:E655 -  -  -  -  Branches_2_Fast .equ 13907414 ; vRam + 13334 - 13503
  148 D1:E655 -  -  -  -  Vines_3_Slow_O .equ 13907583 ; vRam + 13503 - 13684
Listing for file "ascent.asm"
  572 D1:E655 -  -  -  -  #include "generated/Sprite_Groups.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Groups.txt"
    1 D1:E655 -  -  -  -  Sprite_Groups:
    2 D1:E655 B8 E6 D1 -  	.dl SG_GroundChunk3
    3 D1:E658 DA E6 D1 -  	.dl SG_GroundGrass
    4 D1:E65B 0C E7 D1 -  	.dl SG_Branch3
    5 D1:E65E 32 E7 D1 -  	.dl SG_Branch7
    6 D1:E661 84 E7 D1 -  	.dl SG_Branch4
    7 D1:E664 D2 E7 D1 -  	.dl SG_Branch5
    8 D1:E667 10 E8 D1 -  	.dl SG_Vine3
    9 D1:E66A 26 E8 D1 -  	.dl SG_Vine6
   10 D1:E66D 3C E8 D1 -  	.dl SG_Branch6
   11 D1:E670 6E E8 D1 -  	.dl SG_Vine2
   12 D1:E673 80 E8 D1 -  	.dl SG_Vine7
   13 D1:E676 96 E8 D1 -  	.dl SG_Branch2
   14 D1:E679 DC E8 D1 -  	.dl SG_GroundChunk2
   15 D1:E67C F6 E8 D1 -  	.dl SG_GroundChunk1
   16 D1:E67F 14 E9 D1 -  	.dl SG_Root1
   17 D1:E682 22 E9 D1 -  	.dl SG_TreeRow3
   18 D1:E685 40 E9 D1 -  	.dl SG_TreeRow5
   19 D1:E688 5E E9 D1 -  	.dl SG_TreeRow1
   20 D1:E68B 7C E9 D1 -  	.dl SG_TreeRow2
   21 D1:E68E 9A E9 D1 -  	.dl SG_TreeRow4
   22 D1:E691 B8 E9 D1 -  	.dl SG_Branch1
   23 D1:E694 FE E9 D1 -  	.dl SG_Vine4
   24 D1:E697 24 EA D1 -  	.dl SG_Vine5
   25 D1:E69A 36 EA D1 -  	.dl SG_BranchBase3
   26 D1:E69D 48 EA D1 -  	.dl SG_Vine1
   27 D1:E6A0 5A EA D1 -  	.dl SG_BranchBase1
   28 D1:E6A3 78 EA D1 -  	.dl SG_BranchBase2
   29 D1:E6A6 96 EA D1 -  	.dl SG_BranchBase4
   30 D1:E6A9 AC EA D1 -  	.dl SG_CloudPlatform
   31 D1:E6AC BE EA D1 -  	.dl SG_DarkGroundChunk
   32 D1:E6AF DC EA D1 -  	.dl SG_BGTree1
   33 D1:E6B2 FE EA D1 -  	.dl SG_BGTree2
   34 D1:E6B5 20 EB D1 -  	.dl SG_Cloud1
   35 D1:E6B8 -  -  -  -  
   36 D1:E6B8 -  -  -  -  
   37 D1:E6B8 -  -  -  -  
   38 D1:E6B8 -  -  -  -  SG_GroundChunk3:
   39 D1:E6B8 00 -  -  -  	.db 0
   40 D1:E6B9 08 -  -  -  	.db 8
   41 D1:E6BA 0C 10 00 00 	.db 12, 16, 0, 0  ;GroundDirtFull_Fast
   42 D1:E6BE 0C 10 08 00 	.db 12, 16, 8, 0  ;GroundDirtFull_Fast
   43 D1:E6C2 0C 10 10 01 	.db 12, 16, 16, 1  ;GroundDirtFull_Fast_F
   44 D1:E6C6 0C 10 18 01 	.db 12, 16, 24, 1  ;GroundDirtFull_Fast_F
   45 D1:E6CA 00 0C 00 02 	.db 0, 12, 0, 2  ;GroundDirtMound_Fast
   46 D1:E6CE 00 0C 08 02 	.db 0, 12, 8, 2  ;GroundDirtMound_Fast
   47 D1:E6D2 01 0C 10 03 	.db 1, 12, 16, 3  ;GroundDirtMound_Fast_F
   48 D1:E6D6 00 0C 18 03 	.db 0, 12, 24, 3  ;GroundDirtMound_Fast_F
   49 D1:E6DA -  -  -  -  
   50 D1:E6DA -  -  -  -  SG_GroundGrass:
   51 D1:E6DA 00 -  -  -  	.db 0
   52 D1:E6DB 0C -  -  -  	.db 12
   53 D1:E6DC 18 10 00 04 	.db 24, 16, 0, 4  ;GroundGrassL4_Fast
   54 D1:E6E0 09 10 02 05 	.db 9, 16, 2, 5  ;GroundGrassL2_Fast
   55 D1:E6E4 17 10 0A 06 	.db 23, 16, 10, 6  ;GroundGrassL5_Fast
   56 D1:E6E8 09 0E 0B 07 	.db 9, 14, 11, 7  ;GroundGrassL3_Fast
   57 D1:E6EC 17 0E 07 07 	.db 23, 14, 7, 7  ;GroundGrassL3_Fast
   58 D1:E6F0 01 10 11 08 	.db 1, 16, 17, 8  ;GroundGrassL1_Fast
   59 D1:E6F4 18 10 19 04 	.db 24, 16, 25, 4  ;GroundGrassL4_Fast
   60 D1:E6F8 00 10 1D 09 	.db 0, 16, 29, 9  ;GroundGrassL1_Fast_F
   61 D1:E6FC 02 10 22 05 	.db 2, 16, 34, 5  ;GroundGrassL2_Fast
   62 D1:E700 00 0E 01 07 	.db 0, 14, 1, 7  ;GroundGrassL3_Fast
   63 D1:E704 03 0E 08 0A 	.db 3, 14, 8, 10  ;GroundGrassL3_Fast_F
   64 D1:E708 0E 10 1A 06 	.db 14, 16, 26, 6  ;GroundGrassL5_Fast
   65 D1:E70C -  -  -  -  
   66 D1:E70C -  -  -  -  SG_Branch3:
   67 D1:E70C 00 -  -  -  	.db 0
   68 D1:E70D 09 -  -  -  	.db 9
   69 D1:E70E 03 0E 15 0B 	.db 3, 14, 21, 11  ;Branches_9_Fast
   70 D1:E712 11 06 06 0C 	.db 17, 6, 6, 12  ;Branches_13_Slow_O
   71 D1:E716 0A 0E 0D 0D 	.db 10, 14, 13, 13  ;Branches_10_Slow_O
   72 D1:E71A 15 0D 0B 0E 	.db 21, 13, 11, 14  ;Branches_16_Slow
   73 D1:E71E 00 0C 13 0F 	.db 0, 12, 19, 15  ;Leaves_3_Slow
   74 D1:E722 08 0E 04 10 	.db 8, 14, 4, 16  ;Leaves_7_Fast
   75 D1:E726 0E 0E 00 10 	.db 14, 14, 0, 16  ;Leaves_7_Fast
   76 D1:E72A 1A 0E 08 11 	.db 26, 14, 8, 17  ;Leaves_7_Fast_F
   77 D1:E72E 17 0E 02 11 	.db 23, 14, 2, 17  ;Leaves_7_Fast_F
   78 D1:E732 -  -  -  -  
   79 D1:E732 -  -  -  -  SG_Branch7:
   80 D1:E732 00 -  -  -  	.db 0
   81 D1:E733 14 -  -  -  	.db 20
   82 D1:E734 36 0E 07 12 	.db 54, 14, 7, 18  ;Branches_8_Slow_O
   83 D1:E738 15 0E 02 10 	.db 21, 14, 2, 16  ;Leaves_7_Fast
   84 D1:E73C 0A 0E 11 11 	.db 10, 14, 17, 17  ;Leaves_7_Fast_F
   85 D1:E740 12 0E 08 11 	.db 18, 14, 8, 17  ;Leaves_7_Fast_F
   86 D1:E744 00 0E 00 10 	.db 0, 14, 0, 16  ;Leaves_7_Fast
   87 D1:E748 0D 0E 00 11 	.db 13, 14, 0, 17  ;Leaves_7_Fast_F
   88 D1:E74C 06 0E 07 11 	.db 6, 14, 7, 17  ;Leaves_7_Fast_F
   89 D1:E750 10 0E 1D 10 	.db 16, 14, 29, 16  ;Leaves_7_Fast
   90 D1:E754 32 0C 0D 13 	.db 50, 12, 13, 19  ;Leaves_3_Slow_F
   91 D1:E758 25 0E 24 10 	.db 37, 14, 36, 16  ;Leaves_7_Fast
   92 D1:E75C 19 0E 1E 14 	.db 25, 14, 30, 20  ;Branches_14_Slow_O
   93 D1:E760 14 0E 11 15 	.db 20, 14, 17, 21  ;Branches_15_Slow_O_F
   94 D1:E764 15 0E 0A 16 	.db 21, 14, 10, 22  ;Branches_15_Slow_O
   95 D1:E768 23 0A 17 17 	.db 35, 10, 23, 23  ;Branches_11_Fast_F
   96 D1:E76C 25 06 20 18 	.db 37, 6, 32, 24  ;Branches_13_Fast_F
   97 D1:E770 1F 0E 26 10 	.db 31, 14, 38, 16  ;Leaves_7_Fast
   98 D1:E774 1D 0E 0F 19 	.db 29, 14, 15, 25  ;Branches_10_Fast_F
   99 D1:E778 26 0E 0F 1A 	.db 38, 14, 15, 26  ;Branches_10_Fast
  100 D1:E77C 2E 0E 0B 12 	.db 46, 14, 11, 18  ;Branches_8_Slow_O
  101 D1:E780 16 0D 0C 1B 	.db 22, 13, 12, 27  ;Leaves_6_Slow_O
  102 D1:E784 -  -  -  -  
  103 D1:E784 -  -  -  -  SG_Branch4:
  104 D1:E784 00 -  -  -  	.db 0
  105 D1:E785 13 -  -  -  	.db 19
  106 D1:E786 2B 0B 1A 1C 	.db 43, 11, 26, 28  ;Branches_6_Slow
  107 D1:E78A 24 0E 11 1D 	.db 36, 14, 17, 29  ;Branches_10_Slow_O_F
  108 D1:E78E 11 0E 08 11 	.db 17, 14, 8, 17  ;Leaves_7_Fast_F
  109 D1:E792 2E 0E 09 0D 	.db 46, 14, 9, 13  ;Branches_10_Slow_O
  110 D1:E796 02 0E 0A 11 	.db 2, 14, 10, 17  ;Leaves_7_Fast_F
  111 D1:E79A 2F 0E 05 16 	.db 47, 14, 5, 22  ;Branches_15_Slow_O
  112 D1:E79E 07 0E 05 10 	.db 7, 14, 5, 16  ;Leaves_7_Fast
  113 D1:E7A2 1A 0A 05 1E 	.db 26, 10, 5, 30  ;Branches_12_Slow_O
  114 D1:E7A6 13 0E 0E 15 	.db 19, 14, 14, 21  ;Branches_15_Slow_O_F
  115 D1:E7AA 28 0E 02 11 	.db 40, 14, 2, 17  ;Leaves_7_Fast_F
  116 D1:E7AE 21 0B 09 1F 	.db 33, 11, 9, 31  ;Leaves_4_Slow
  117 D1:E7B2 09 0E 0F 10 	.db 9, 14, 15, 16  ;Leaves_7_Fast
  118 D1:E7B6 11 0E 00 10 	.db 17, 14, 0, 16  ;Leaves_7_Fast
  119 D1:E7BA 3E 0E 03 10 	.db 62, 14, 3, 16  ;Leaves_7_Fast
  120 D1:E7BE 1D 0E 0E 20 	.db 29, 14, 14, 32  ;Branches_8_Slow_O_F
  121 D1:E7C2 3A 0D 06 21 	.db 58, 13, 6, 33  ;Branches_16_Slow_O
  122 D1:E7C6 2C 0A 10 22 	.db 44, 10, 16, 34  ;Branches_7_Slow_O
  123 D1:E7CA 2E 0B 19 23 	.db 46, 11, 25, 35  ;Leaves_4_Slow_F
  124 D1:E7CE 2C 09 06 24 	.db 44, 9, 6, 36  ;Leaves_2_Slow_O
  125 D1:E7D2 -  -  -  -  
  126 D1:E7D2 -  -  -  -  SG_Branch5:
  127 D1:E7D2 00 -  -  -  	.db 0
  128 D1:E7D3 0F -  -  -  	.db 15
  129 D1:E7D4 22 0A 00 25 	.db 34, 10, 0, 37  ;Branches_7_Fast
  130 D1:E7D8 1B 0E 09 26 	.db 27, 14, 9, 38  ;Branches_8_Fast
  131 D1:E7DC 23 0A 0B 17 	.db 35, 10, 11, 23  ;Branches_11_Fast_F
  132 D1:E7E0 24 06 14 18 	.db 36, 6, 20, 24  ;Branches_13_Fast_F
  133 D1:E7E4 0D 0E 0C 14 	.db 13, 14, 12, 20  ;Branches_14_Slow_O
  134 D1:E7E8 13 0E 0E 27 	.db 19, 14, 14, 39  ;Branches_15_Slow_F
  135 D1:E7EC 1C 0D 02 28 	.db 28, 13, 2, 40  ;Leaves_6_Slow
  136 D1:E7F0 27 0E 08 19 	.db 39, 14, 8, 25  ;Branches_10_Fast_F
  137 D1:E7F4 30 0D 0D 29 	.db 48, 13, 13, 41  ;Branches_16_Slow_O_F
  138 D1:E7F8 04 0E 0A 10 	.db 4, 14, 10, 16  ;Leaves_7_Fast
  139 D1:E7FC 0B 0E 0F 10 	.db 11, 14, 15, 16  ;Leaves_7_Fast
  140 D1:E800 1C 0E 17 10 	.db 28, 14, 23, 16  ;Leaves_7_Fast
  141 D1:E804 20 0E 1A 10 	.db 32, 14, 26, 16  ;Leaves_7_Fast
  142 D1:E808 26 0E 15 10 	.db 38, 14, 21, 16  ;Leaves_7_Fast
  143 D1:E80C 34 0E 0F 10 	.db 52, 14, 15, 16  ;Leaves_7_Fast
  144 D1:E810 -  -  -  -  
  145 D1:E810 -  -  -  -  SG_Vine3:
  146 D1:E810 00 -  -  -  	.db 0
  147 D1:E811 05 -  -  -  	.db 5
  148 D1:E812 16 18 17 2A 	.db 22, 24, 23, 42  ;Vines_8_Slow
  149 D1:E816 2E 18 15 2A 	.db 46, 24, 21, 42  ;Vines_8_Slow
  150 D1:E81A 45 13 0B 2B 	.db 69, 19, 11, 43  ;Vines_2_Slow_O
  151 D1:E81E 56 10 00 2C 	.db 86, 16, 0, 44  ;Vines_3_Slow
  152 D1:E822 00 17 1A 2D 	.db 0, 23, 26, 45  ;Vines_5_Slow
  153 D1:E826 -  -  -  -  
  154 D1:E826 -  -  -  -  SG_Vine6:
  155 D1:E826 00 -  -  -  	.db 0
  156 D1:E827 05 -  -  -  	.db 5
  157 D1:E828 00 0D 00 2E 	.db 0, 13, 0, 46  ;Vines_4_Slow_F
  158 D1:E82C 09 0D 0B 2E 	.db 9, 13, 11, 46  ;Vines_4_Slow_F
  159 D1:E830 0F 09 16 2F 	.db 15, 9, 22, 47  ;Vines_1_Slow_O
  160 D1:E834 06 10 22 2C 	.db 6, 16, 34, 44  ;Vines_3_Slow
  161 D1:E838 00 0B 2D 30 	.db 0, 11, 45, 48  ;Vines_9_Slow
  162 D1:E83C -  -  -  -  
  163 D1:E83C -  -  -  -  SG_Branch6:
  164 D1:E83C 00 -  -  -  	.db 0
  165 D1:E83D 0C -  -  -  	.db 12
  166 D1:E83E 12 0E 00 33 	.db 18, 14, 0, 51  ;Branches_4_Fast_F
  167 D1:E842 13 0A 09 34 	.db 19, 10, 9, 52  ;Branches_7_Fast_F
  168 D1:E846 0E 0E 12 0B 	.db 14, 14, 18, 11  ;Branches_9_Fast
  169 D1:E84A 0D 0A 1B 35 	.db 13, 10, 27, 53  ;Branches_12_Fast_F
  170 D1:E84E 1D 0B 05 36 	.db 29, 11, 5, 54  ;Leaves_4_Slow_O
  171 D1:E852 06 0E 0D 14 	.db 6, 14, 13, 20  ;Branches_14_Slow_O
  172 D1:E856 16 0D 16 29 	.db 22, 13, 22, 41  ;Branches_16_Slow_O_F
  173 D1:E85A 00 0E 0C 10 	.db 0, 14, 12, 16  ;Leaves_7_Fast
  174 D1:E85E 0A 0E 23 10 	.db 10, 14, 35, 16  ;Leaves_7_Fast
  175 D1:E862 02 0E 1E 11 	.db 2, 14, 30, 17  ;Leaves_7_Fast_F
  176 D1:E866 1C 0E 18 11 	.db 28, 14, 24, 17  ;Leaves_7_Fast_F
  177 D1:E86A 14 0E 1C 11 	.db 20, 14, 28, 17  ;Leaves_7_Fast_F
  178 D1:E86E -  -  -  -  
  179 D1:E86E -  -  -  -  SG_Vine2:
  180 D1:E86E 00 -  -  -  	.db 0
  181 D1:E86F 04 -  -  -  	.db 4
  182 D1:E870 00 13 00 37 	.db 0, 19, 0, 55  ;Vines_2_Slow_F
  183 D1:E874 11 13 0A 37 	.db 17, 19, 10, 55  ;Vines_2_Slow_F
  184 D1:E878 22 10 14 32 	.db 34, 16, 20, 50  ;Vines_3_Slow_F
  185 D1:E87C 2B 09 20 38 	.db 43, 9, 32, 56  ;Vines_1_Slow
  186 D1:E880 -  -  -  -  
  187 D1:E880 -  -  -  -  SG_Vine7:
  188 D1:E880 00 -  -  -  	.db 0
  189 D1:E881 05 -  -  -  	.db 5
  190 D1:E882 00 18 02 39 	.db 0, 24, 2, 57  ;Vines_8_Slow_O
  191 D1:E886 18 18 01 3A 	.db 24, 24, 1, 58  ;Vines_8_Slow_O_F
  192 D1:E88A 30 18 04 3B 	.db 48, 24, 4, 59  ;Vines_6_Slow
  193 D1:E88E 47 0B 02 36 	.db 71, 11, 2, 54  ;Leaves_4_Slow_O
  194 D1:E892 35 0C 00 0F 	.db 53, 12, 0, 15  ;Leaves_3_Slow
  195 D1:E896 -  -  -  -  
  196 D1:E896 -  -  -  -  SG_Branch2:
  197 D1:E896 00 -  -  -  	.db 0
  198 D1:E897 11 -  -  -  	.db 17
  199 D1:E898 24 0E 13 3C 	.db 36, 14, 19, 60  ;Branches_8_Fast_F
  200 D1:E89C 1D 0E 0F 20 	.db 29, 14, 15, 32  ;Branches_8_Slow_O_F
  201 D1:E8A0 15 0E 08 19 	.db 21, 14, 8, 25  ;Branches_10_Fast_F
  202 D1:E8A4 0E 0E 04 16 	.db 14, 14, 4, 22  ;Branches_15_Slow_O
  203 D1:E8A8 18 0E 12 1A 	.db 24, 14, 18, 26  ;Branches_10_Fast
  204 D1:E8AC 11 0E 14 3D 	.db 17, 14, 20, 61  ;Branches_15_Slow
  205 D1:E8B0 17 06 1B 18 	.db 23, 6, 27, 24  ;Branches_13_Fast_F
  206 D1:E8B4 0B 0E 00 11 	.db 11, 14, 0, 17  ;Leaves_7_Fast_F
  207 D1:E8B8 18 0E 01 11 	.db 24, 14, 1, 17  ;Leaves_7_Fast_F
  208 D1:E8BC 1F 0E 05 10 	.db 31, 14, 5, 16  ;Leaves_7_Fast
  209 D1:E8C0 06 0E 06 10 	.db 6, 14, 6, 16  ;Leaves_7_Fast
  210 D1:E8C4 1C 0D 07 21 	.db 28, 13, 7, 33  ;Branches_16_Slow_O
  211 D1:E8C8 06 0E 10 11 	.db 6, 14, 16, 17  ;Leaves_7_Fast_F
  212 D1:E8CC 10 0E 19 27 	.db 16, 14, 25, 39  ;Branches_15_Slow_F
  213 D1:E8D0 07 0E 18 10 	.db 7, 14, 24, 16  ;Leaves_7_Fast
  214 D1:E8D4 11 0E 1F 11 	.db 17, 14, 31, 17  ;Leaves_7_Fast_F
  215 D1:E8D8 1F 09 14 24 	.db 31, 9, 20, 36  ;Leaves_2_Slow_O
  216 D1:E8DC -  -  -  -  
  217 D1:E8DC -  -  -  -  SG_GroundChunk2:
  218 D1:E8DC 00 -  -  -  	.db 0
  219 D1:E8DD 06 -  -  -  	.db 6
  220 D1:E8DE 0E 10 00 01 	.db 14, 16, 0, 1  ;GroundDirtFull_Fast_F
  221 D1:E8E2 0F 10 08 00 	.db 15, 16, 8, 0  ;GroundDirtFull_Fast
  222 D1:E8E6 0E 10 10 01 	.db 14, 16, 16, 1  ;GroundDirtFull_Fast_F
  223 D1:E8EA 02 0C 00 02 	.db 2, 12, 0, 2  ;GroundDirtMound_Fast
  224 D1:E8EE 03 0C 08 02 	.db 3, 12, 8, 2  ;GroundDirtMound_Fast
  225 D1:E8F2 02 0C 10 02 	.db 2, 12, 16, 2  ;GroundDirtMound_Fast
  226 D1:E8F6 -  -  -  -  
  227 D1:E8F6 -  -  -  -  SG_GroundChunk1:
  228 D1:E8F6 00 -  -  -  	.db 0
  229 D1:E8F7 07 -  -  -  	.db 7
  230 D1:E8F8 10 10 00 00 	.db 16, 16, 0, 0  ;GroundDirtFull_Fast
  231 D1:E8FC 0F 10 08 00 	.db 15, 16, 8, 0  ;GroundDirtFull_Fast
  232 D1:E900 0E 10 10 01 	.db 14, 16, 16, 1  ;GroundDirtFull_Fast_F
  233 D1:E904 02 0C 10 02 	.db 2, 12, 16, 2  ;GroundDirtMound_Fast
  234 D1:E908 03 0C 08 02 	.db 3, 12, 8, 2  ;GroundDirtMound_Fast
  235 D1:E90C 04 0C 00 03 	.db 4, 12, 0, 3  ;GroundDirtMound_Fast_F
  236 D1:E910 00 0C 0C 02 	.db 0, 12, 12, 2  ;GroundDirtMound_Fast
  237 D1:E914 -  -  -  -  
  238 D1:E914 -  -  -  -  SG_Root1:
  239 D1:E914 00 -  -  -  	.db 0
  240 D1:E915 03 -  -  -  	.db 3
  241 D1:E916 06 0E 00 26 	.db 6, 14, 0, 38  ;Branches_8_Fast
  242 D1:E91A 03 0E 0D 20 	.db 3, 14, 13, 32  ;Branches_8_Slow_O_F
  243 D1:E91E 00 0E 04 45 	.db 0, 14, 4, 69  ;Branches_9_Slow_O
  244 D1:E922 -  -  -  -  
  245 D1:E922 -  -  -  -  SG_TreeRow3:
  246 D1:E922 00 -  -  -  	.db 0
  247 D1:E923 07 -  -  -  	.db 7
  248 D1:E924 00 10 00 46 	.db 0, 16, 0, 70  ;Tree_2_Fast
  249 D1:E928 00 10 0D 47 	.db 0, 16, 13, 71  ;Tree_4_Fast
  250 D1:E92C 00 10 1A 48 	.db 0, 16, 26, 72  ;Tree_7_Fast
  251 D1:E930 00 10 27 49 	.db 0, 16, 39, 73  ;Tree_9_Fast
  252 D1:E934 00 10 34 4A 	.db 0, 16, 52, 74  ;Tree_6_Fast_F
  253 D1:E938 00 10 41 4B 	.db 0, 16, 65, 75  ;Tree_3_Fast_F
  254 D1:E93C 00 10 4E 4C 	.db 0, 16, 78, 76  ;Tree_0_Fast_F
  255 D1:E940 -  -  -  -  
  256 D1:E940 -  -  -  -  SG_TreeRow5:
  257 D1:E940 00 -  -  -  	.db 0
  258 D1:E941 07 -  -  -  	.db 7
  259 D1:E942 00 10 00 46 	.db 0, 16, 0, 70  ;Tree_2_Fast
  260 D1:E946 00 10 0D 4D 	.db 0, 16, 13, 77  ;Tree_3_Fast
  261 D1:E94A 00 10 1A 4E 	.db 0, 16, 26, 78  ;Tree_8_Fast
  262 D1:E94E 00 10 27 4F 	.db 0, 16, 39, 79  ;Tree_9_Fast_F
  263 D1:E952 00 10 34 50 	.db 0, 16, 52, 80  ;Tree_8_Fast_F
  264 D1:E956 00 10 41 51 	.db 0, 16, 65, 81  ;Tree_4_Fast_F
  265 D1:E95A 00 10 4E 4C 	.db 0, 16, 78, 76  ;Tree_0_Fast_F
  266 D1:E95E -  -  -  -  
  267 D1:E95E -  -  -  -  SG_TreeRow1:
  268 D1:E95E 00 -  -  -  	.db 0
  269 D1:E95F 07 -  -  -  	.db 7
  270 D1:E960 00 10 00 4C 	.db 0, 16, 0, 76  ;Tree_1_Fast
  271 D1:E964 00 10 0D 4D 	.db 0, 16, 13, 77  ;Tree_3_Fast
  272 D1:E968 00 10 1A 55 	.db 0, 16, 26, 85  ;Tree_6_Fast
  273 D1:E96C 00 10 27 56 	.db 0, 16, 39, 86  ;Tree_10_Fast
  274 D1:E970 00 10 34 57 	.db 0, 16, 52, 87  ;Tree_7_Fast_F
  275 D1:E974 00 10 41 51 	.db 0, 16, 65, 81  ;Tree_4_Fast_F
  276 D1:E978 00 10 4E 54 	.db 0, 16, 78, 84  ;Tree_1_Fast_F
  277 D1:E97C -  -  -  -  
  278 D1:E97C -  -  -  -  SG_TreeRow2:
  279 D1:E97C 00 -  -  -  	.db 0
  280 D1:E97D 07 -  -  -  	.db 7
  281 D1:E97E 00 10 00 52 	.db 0, 16, 0, 82  ;Tree_1_Fast
  282 D1:E982 00 10 0D 58 	.db 0, 16, 13, 88  ;Tree_5_Fast
  283 D1:E986 00 10 1A 4E 	.db 0, 16, 26, 78  ;Tree_8_Fast
  284 D1:E98A 00 10 27 59 	.db 0, 16, 39, 89  ;Tree_11_Fast
  285 D1:E98E 00 10 34 50 	.db 0, 16, 52, 80  ;Tree_8_Fast_F
  286 D1:E992 00 10 41 5A 	.db 0, 16, 65, 90  ;Tree_5_Fast_F
  287 D1:E996 00 10 4E 5B 	.db 0, 16, 78, 91  ;Tree_2_Fast_F
  288 D1:E99A -  -  -  -  
  289 D1:E99A -  -  -  -  SG_TreeRow4:
  290 D1:E99A 00 -  -  -  	.db 0
  291 D1:E99B 07 -  -  -  	.db 7
  292 D1:E99C 00 10 00 53 	.db 0, 16, 0, 83  ;Tree_0_Fast
  293 D1:E9A0 00 10 0D 58 	.db 0, 16, 13, 88  ;Tree_5_Fast
  294 D1:E9A4 00 10 1A 55 	.db 0, 16, 26, 85  ;Tree_6_Fast
  295 D1:E9A8 00 10 27 5C 	.db 0, 16, 39, 92  ;Tree_11_Fast_F
  296 D1:E9AC 00 10 34 4A 	.db 0, 16, 52, 74  ;Tree_6_Fast_F
  297 D1:E9B0 00 10 41 4B 	.db 0, 16, 65, 75  ;Tree_3_Fast_F
  298 D1:E9B4 00 10 4E 54 	.db 0, 16, 78, 84  ;Tree_1_Fast_F
  299 D1:E9B8 -  -  -  -  
  300 D1:E9B8 -  -  -  -  SG_Branch1:
  301 D1:E9B8 00 -  -  -  	.db 0
  302 D1:E9B9 11 -  -  -  	.db 17
  303 D1:E9BA 0D 0E 34 5D 	.db 13, 14, 52, 93  ;Branches_1_Fast
  304 D1:E9BE 0D 0E 2B 5E 	.db 13, 14, 43, 94  ;Branches_2_Slow_O
  305 D1:E9C2 0E 0E 22 5F 	.db 14, 14, 34, 95  ;Branches_3_Slow_O
  306 D1:E9C6 0F 0E 19 60 	.db 15, 14, 25, 96  ;Branches_5_Slow_O
  307 D1:E9CA 11 0A 10 22 	.db 17, 10, 16, 34  ;Branches_7_Slow_O
  308 D1:E9CE 11 0A 07 1E 	.db 17, 10, 7, 30  ;Branches_12_Slow_O
  309 D1:E9D2 08 0E 17 3D 	.db 8, 14, 23, 61  ;Branches_15_Slow
  310 D1:E9D6 13 0E 21 12 	.db 19, 14, 33, 18  ;Branches_8_Slow_O
  311 D1:E9DA 1D 0D 1E 21 	.db 29, 13, 30, 33  ;Branches_16_Slow_O
  312 D1:E9DE 15 0E 06 10 	.db 21, 14, 6, 16  ;Leaves_7_Fast
  313 D1:E9E2 00 0E 14 10 	.db 0, 14, 20, 16  ;Leaves_7_Fast
  314 D1:E9E6 07 0E 07 10 	.db 7, 14, 7, 16  ;Leaves_7_Fast
  315 D1:E9EA 05 0E 02 11 	.db 5, 14, 2, 17  ;Leaves_7_Fast_F
  316 D1:E9EE 0C 0E 00 10 	.db 12, 14, 0, 16  ;Leaves_7_Fast
  317 D1:E9F2 20 0E 1C 10 	.db 32, 14, 28, 16  ;Leaves_7_Fast
  318 D1:E9F6 13 0C 1D 61 	.db 19, 12, 29, 97  ;Leaves_3_Slow_O
  319 D1:E9FA 18 0B 28 36 	.db 24, 11, 40, 54  ;Leaves_4_Slow_O
  320 D1:E9FE -  -  -  -  
  321 D1:E9FE -  -  -  -  SG_Vine4:
  322 D1:E9FE 00 -  -  -  	.db 0
  323 D1:E9FF 09 -  -  -  	.db 9
  324 D1:EA00 00 18 00 62 	.db 0, 24, 0, 98  ;Vines_7_Slow
  325 D1:EA04 18 18 02 40 	.db 24, 24, 2, 64  ;Vines_8_Slow_F
  326 D1:EA08 2F 17 05 63 	.db 47, 23, 5, 99  ;Vines_5_Slow_O_F
  327 D1:EA0C 44 13 0F 37 	.db 68, 19, 15, 55  ;Vines_2_Slow_F
  328 D1:EA10 55 10 19 64 	.db 85, 16, 25, 100  ;Vines_3_Slow_O_F
  329 D1:EA14 5E 09 25 2F 	.db 94, 9, 37, 47  ;Vines_1_Slow_O
  330 D1:EA18 57 0D 31 65 	.db 87, 13, 49, 101  ;Vines_4_Slow_O
  331 D1:EA1C 4E 0B 3D 41 	.db 78, 11, 61, 65  ;Vines_9_Slow_O
  332 D1:EA20 4E 0E 49 66 	.db 78, 14, 73, 102  ;Vines_10_Slow
  333 D1:EA24 -  -  -  -  
  334 D1:EA24 -  -  -  -  SG_Vine5:
  335 D1:EA24 00 -  -  -  	.db 0
  336 D1:EA25 04 -  -  -  	.db 4
  337 D1:EA26 06 18 00 40 	.db 6, 24, 0, 64  ;Vines_8_Slow_F
  338 D1:EA2A 1B 10 03 64 	.db 27, 16, 3, 100  ;Vines_3_Slow_O_F
  339 D1:EA2E 00 18 18 67 	.db 0, 24, 24, 103  ;Vines_7_Slow_F
  340 D1:EA32 15 13 0E 68 	.db 21, 19, 14, 104  ;Vines_2_Slow
  341 D1:EA36 -  -  -  -  
  342 D1:EA36 -  -  -  -  SG_BranchBase3:
  343 D1:EA36 00 -  -  -  	.db 0
  344 D1:EA37 04 -  -  -  	.db 4
  345 D1:EA38 0B 0E 00 6B 	.db 11, 14, 0, 107  ;Branches_1_Fast_F
  346 D1:EA3C 0A 0E 09 6C 	.db 10, 14, 9, 108  ;Branches_2_Fast_F
  347 D1:EA40 09 0E 12 6D 	.db 9, 14, 18, 109  ;Branches_5_Fast_F
  348 D1:EA44 00 0E 0E 6E 	.db 0, 14, 14, 110  ;Branches_14_Slow
  349 D1:EA48 -  -  -  -  
  350 D1:EA48 -  -  -  -  SG_Vine1:
  351 D1:EA48 00 -  -  -  	.db 0
  352 D1:EA49 04 -  -  -  	.db 4
  353 D1:EA4A 11 10 18 2C 	.db 17, 16, 24, 44  ;Vines_3_Slow
  354 D1:EA4E 00 13 23 68 	.db 0, 19, 35, 104  ;Vines_2_Slow
  355 D1:EA52 1B 09 0C 38 	.db 27, 9, 12, 56  ;Vines_1_Slow
  356 D1:EA56 13 10 00 32 	.db 19, 16, 0, 50  ;Vines_3_Slow_F
  357 D1:EA5A -  -  -  -  
  358 D1:EA5A -  -  -  -  SG_BranchBase1:
  359 D1:EA5A 00 -  -  -  	.db 0
  360 D1:EA5B 07 -  -  -  	.db 7
  361 D1:EA5C 04 0E 14 70 	.db 4, 14, 20, 112  ;Branches_0_Fast
  362 D1:EA60 04 0E 0B 42 	.db 4, 14, 11, 66  ;Branches_3_Fast
  363 D1:EA64 06 0B 02 1C 	.db 6, 11, 2, 28  ;Branches_6_Slow
  364 D1:EA68 0F 0E 00 0B 	.db 15, 14, 0, 11  ;Branches_9_Fast
  365 D1:EA6C 09 0E 07 12 	.db 9, 14, 7, 18  ;Branches_8_Slow_O
  366 D1:EA70 0D 09 0B 24 	.db 13, 9, 11, 36  ;Leaves_2_Slow_O
  367 D1:EA74 00 0D 0F 1B 	.db 0, 13, 15, 27  ;Leaves_6_Slow_O
  368 D1:EA78 -  -  -  -  
  369 D1:EA78 -  -  -  -  SG_BranchBase2:
  370 D1:EA78 00 -  -  -  	.db 0
  371 D1:EA79 07 -  -  -  	.db 7
  372 D1:EA7A 00 0E 2A 71 	.db 0, 14, 42, 113  ;Branches_1_Slow_O
  373 D1:EA7E 01 0E 21 5E 	.db 1, 14, 33, 94  ;Branches_2_Slow_O
  374 D1:EA82 02 0E 18 72 	.db 2, 14, 24, 114  ;Branches_4_Slow_O
  375 D1:EA86 04 0E 06 45 	.db 4, 14, 6, 69  ;Branches_9_Slow_O
  376 D1:EA8A 04 0A 0F 22 	.db 4, 10, 15, 34  ;Branches_7_Slow_O
  377 D1:EA8E 0B 0E 00 1A 	.db 11, 14, 0, 26  ;Branches_10_Fast
  378 D1:EA92 00 0C 17 73 	.db 0, 12, 23, 115  ;Leaves_3_Slow_O_F
  379 D1:EA96 -  -  -  -  
  380 D1:EA96 -  -  -  -  SG_BranchBase4:
  381 D1:EA96 00 -  -  -  	.db 0
  382 D1:EA97 05 -  -  -  	.db 5
  383 D1:EA98 0D 0E 00 75 	.db 13, 14, 0, 117  ;Branches_0_Fast_F
  384 D1:EA9C 07 0E 08 12 	.db 7, 14, 8, 18  ;Branches_8_Slow_O
  385 D1:EAA0 12 0E 09 76 	.db 18, 14, 9, 118  ;Branches_9_Fast_F
  386 D1:EAA4 00 0E 0C 45 	.db 0, 14, 12, 69  ;Branches_9_Slow_O
  387 D1:EAA8 0A 09 0B 69 	.db 10, 9, 11, 105  ;Leaves_2_Slow
  388 D1:EAAC -  -  -  -  
  389 D1:EAAC -  -  -  -  SG_CloudPlatform:
  390 D1:EAAC 00 -  -  -  	.db 0
  391 D1:EAAD 04 -  -  -  	.db 4
  392 D1:EAAE 00 10 00 77 	.db 0, 16, 0, 119  ;Clouds_2_Fast
  393 D1:EAB2 00 10 08 77 	.db 0, 16, 8, 119  ;Clouds_2_Fast
  394 D1:EAB6 00 10 10 77 	.db 0, 16, 16, 119  ;Clouds_2_Fast
  395 D1:EABA 00 10 18 77 	.db 0, 16, 24, 119  ;Clouds_2_Fast
  396 D1:EABE -  -  -  -  
  397 D1:EABE -  -  -  -  SG_DarkGroundChunk:
  398 D1:EABE 00 -  -  -  	.db 0
  399 D1:EABF 07 -  -  -  	.db 7
  400 D1:EAC0 11 0C 00 78 	.db 17, 12, 0, 120  ;GroundDirtDark_Fast
  401 D1:EAC4 11 0C 08 78 	.db 17, 12, 8, 120  ;GroundDirtDark_Fast
  402 D1:EAC8 10 0C 10 79 	.db 16, 12, 16, 121  ;GroundDirtDark_Fast_F
  403 D1:EACC 05 0D 00 7A 	.db 5, 13, 0, 122  ;GroundHumpDark_Fast
  404 D1:EAD0 05 0D 08 7A 	.db 5, 13, 8, 122  ;GroundHumpDark_Fast
  405 D1:EAD4 04 0D 10 7B 	.db 4, 13, 16, 123  ;GroundHumpDark_Fast_F
  406 D1:EAD8 00 0D 0C 7B 	.db 0, 13, 12, 123  ;GroundHumpDark_Fast_F
  407 D1:EADC -  -  -  -  
  408 D1:EADC -  -  -  -  SG_BGTree1:
  409 D1:EADC 00 -  -  -  	.db 0
  410 D1:EADD 08 -  -  -  	.db 8
  411 D1:EADE 16 10 05 7C 	.db 22, 16, 5, 124  ;Tree_16_Fast
  412 D1:EAE2 0A 0E 07 7D 	.db 10, 14, 7, 125  ;Tree_17_Slow_O
  413 D1:EAE6 0C 0E 03 7E 	.db 12, 14, 3, 126  ;Tree_17_Slow_O_F
  414 D1:EAEA 26 10 04 7F 	.db 38, 16, 4, 127  ;Tree_16_Slow_O
  415 D1:EAEE 20 0E 02 80 	.db 32, 14, 2, 128  ;Tree_17_Slow_F
  416 D1:EAF2 00 0E 07 81 	.db 0, 14, 7, 129  ;Leaves_8_Fast
  417 D1:EAF6 02 0E 00 81 	.db 2, 14, 0, 129  ;Leaves_8_Fast
  418 D1:EAFA 1D 09 00 69 	.db 29, 9, 0, 105  ;Leaves_2_Slow
  419 D1:EAFE -  -  -  -  
  420 D1:EAFE -  -  -  -  SG_BGTree2:
  421 D1:EAFE 00 -  -  -  	.db 0
  422 D1:EAFF 08 -  -  -  	.db 8
  423 D1:EB00 31 0E 07 82 	.db 49, 14, 7, 130  ;Tree_18_Slow_O
  424 D1:EB04 31 0E 01 83 	.db 49, 14, 1, 131  ;Tree_17_Slow
  425 D1:EB08 31 0E 02 84 	.db 49, 14, 2, 132  ;Tree_18_Slow_F
  426 D1:EB0C 24 10 00 85 	.db 36, 16, 0, 133  ;Tree_16_Slow_O_F
  427 D1:EB10 14 10 01 7F 	.db 20, 16, 1, 127  ;Tree_16_Slow_O
  428 D1:EB14 0B 0E 01 82 	.db 11, 14, 1, 130  ;Tree_18_Slow_O
  429 D1:EB18 00 0E 00 81 	.db 0, 14, 0, 129  ;Leaves_8_Fast
  430 D1:EB1C 2B 09 06 86 	.db 43, 9, 6, 134  ;Leaves_2_Slow_F
  431 D1:EB20 -  -  -  -  
  432 D1:EB20 -  -  -  -  SG_Cloud1:
  433 D1:EB20 00 -  -  -  	.db 0
  434 D1:EB21 0D -  -  -  	.db 13
  435 D1:EB22 14 0A 06 87 	.db 20, 10, 6, 135  ;Clouds_0_Fast
  436 D1:EB26 0D 0E 00 88 	.db 13, 14, 0, 136  ;Clouds_1_Fast
  437 D1:EB2A 00 0B 07 89 	.db 0, 11, 7, 137  ;Clouds_3_Fast
  438 D1:EB2E 03 0A 03 8A 	.db 3, 10, 3, 138  ;Clouds_4_Fast
  439 D1:EB32 08 10 06 77 	.db 8, 16, 6, 119  ;Clouds_2_Fast
  440 D1:EB36 14 0A 0E 87 	.db 20, 10, 14, 135  ;Clouds_0_Fast
  441 D1:EB3A 13 0A 14 8B 	.db 19, 10, 20, 139  ;Clouds_0_Fast_F
  442 D1:EB3E 0B 0E 1C 8C 	.db 11, 14, 28, 140  ;Clouds_1_Fast_F
  443 D1:EB42 03 0A 1B 8D 	.db 3, 10, 27, 141  ;Clouds_4_Fast_F
  444 D1:EB46 01 0B 0F 8E 	.db 1, 11, 15, 142  ;Clouds_3_Fast_F
  445 D1:EB4A 01 0B 15 89 	.db 1, 11, 21, 137  ;Clouds_3_Fast
  446 D1:EB4E 06 10 14 77 	.db 6, 16, 20, 119  ;Clouds_2_Fast
  447 D1:EB52 06 10 0C 8F 	.db 6, 16, 12, 143  ;Clouds_2_Fast_F
  448 D1:EB56 -  -  -  -  
  449 D1:EB56 -  -  -  -  
  450 D1:EB56 -  -  -  -  
Listing for file "ascent.asm"
  573 D1:EB56 -  -  -  -  #include "generated/Collision_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Collision_Data.txt"
    1 D1:EB56 -  -  -  -  Collision_Data_Frame_Table: 
    2 D1:EB56 76 EB D1 -  	.dl collision_data_0
    3 D1:EB59 5C EB D1 -  	.dl collision_data_1
    4 D1:EB5C -  -  -  -  
    5 D1:EB5C -  -  -  -  
    6 D1:EB5C -  -  -  -  collision_data_1:
    7 D1:EB5C 05 -  -  -  	.db 5
    8 D1:EB5D 1C 0F 83 64 
              00 -  -  -  	.db 28,15,131,100,%00000000
    9 D1:EB62 66 0F 5F 40 
              00 -  -  -  	.db 102,15,95,64,%00000000
   10 D1:EB67 91 0F 2D 0E 
              00 -  -  -  	.db 145,15,45,14,%00000000
   11 D1:EB6C 04 0F 30 11 
              80 -  -  -  	.db 4,15,48,17,%10000000
   12 D1:EB71 05 2F 14 0D 
              00 -  -  -  	.db 5,47,20,13,%00000000
   13 D1:EB76 -  -  -  -  
   14 D1:EB76 -  -  -  -  
   15 D1:EB76 -  -  -  -  collision_data_0:
   16 D1:EB76 06 -  -  -  	.db 6
   17 D1:EB77 18 01 9F 00 
              00 -  -  -  	.db 24,1,159,0,%00000000
   18 D1:EB7C 54 0F 24 05 
              00 -  -  -  	.db 84,15,36,5,%00000000
   19 D1:EB81 A7 0F 49 2A 
              00 -  -  -  	.db 167,15,73,42,%00000000
   20 D1:EB86 70 0F 8A 6B 
              00 -  -  -  	.db 112,15,138,107,%00000000
   21 D1:EB8B 4A 0F 62 43 
              80 -  -  -  	.db 74,15,98,67,%10000000
   22 D1:EB90 A2 2F 94 8D 
              00 -  -  -  	.db 162,47,148,141,%00000000
   23 D1:EB95 -  -  -  -  
   24 D1:EB95 00 -  -  -  	.db 0 ;Terminate Data
Listing for file "ascent.asm"
  574 D1:EB96 -  -  -  -  #include "generated/Animation_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Animation_Data.txt"
    1 D1:EB96 -  -  -  -  position_animation_data:
    2 D1:EB96 01 -  -  -  	.db 1
    3 D1:EB97 03 C6 D1 -  	.dl MG_Data_0 + 18
    4 D1:EB9A 16 C0 D1 -  	.dl sine_2_31_3
    5 D1:EB9D A8 -  -  -  	.db 168
    6 D1:EB9E -  -  -  -  
    7 D1:EB9E -  -  -  -  
    8 D1:EB9E -  -  -  -  
    9 D1:EB9E -  -  -  -  sprite_animation_data:
   10 D1:EB9E 01 -  -  -  	.db 1
   11 D1:EB9F 9A C0 D1 -  	.dl lin_8_7_1
   12 D1:EBA2 52 -  -  -  	.db 82
   13 D1:EBA3 52 -  -  -  	.db 82
   14 D1:EBA4 53 -  -  -  	.db 83
   15 D1:EBA5 53 -  -  -  	.db 83
   16 D1:EBA6 54 -  -  -  	.db 84
   17 D1:EBA7 46 -  -  -  	.db 70
   18 D1:EBA8 52 -  -  -  	.db 82
   19 D1:EBA9 4C -  -  -  	.db 76
   20 D1:EBAA 63 E9 D1 -  	.dl SG_TreeRow1 + 05
Listing for file "ascent.asm"
  575 D1:EBAD -  -  -  -  
  576 D1:EBAD -  -  -  -  ;#include "testing/SpriteGroups.txt"
  577 D1:EBAD -  -  -  -  ;#include "TestingSpriteData.txt"
  578 D1:EBAD -  -  -  -  ;#include "TestGeneratedSpriteData.txt"
  579 D1:EBAD -  -  -  -  ;#include "Sprite_Data.txt"
  580 D1:EBAD -  -  -  -  ;#include "FG_Data.txt"
  581 D1:EBAD -  -  -  -  ;#include "MG_Data.txt"
  582 D1:EBAD -  -  -  -  ;#include "BG_Data.txt"
  583 D1:EBAD -  -  -  -  ;#include "Palette_Setup.txt"
  584 D1:EBAD -  -  -  -  ;#include "Equates.txt"
  585 D1:EBAD -  -  -  -  ;#include "Decompress_Calls.txt"
  586 D1:EBAD -  -  -  -  ;#include "Sprite_Tables.txt"
  587 D1:EBAD -  -  -  -  ;#include "TestingBGData.txt"
  588 D1:EBAD -  -  -  -  ;#include "TestingFGData.txt"
  589 D1:EBAD -  -  -  -  
  590 D1:EBAD -  -  -  -  
