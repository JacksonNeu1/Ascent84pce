    1 00:0000 -  -  -  -  
    2 00:0000 -  -  -  -  #include "includes\ti84pce.inc"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\includes\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "ascent.asm"
    3 00:0000 -  -  -  -  
    4 00:0000 -  -  -  -   .assume ADL=1
    5 00:0000 -  -  -  -   .org userMem-2
    6 D1:A87F EF 7B -  -   .db tExtTok,tAsm84CeCmp
    7 D1:A881 -  -  -  -  
    8 D1:A881 -  -  -  -  
    9 D1:A881 -  -  -  -  
   10 D1:A881 -  -  -  -  ;0E30000h + 0200h
   11 D1:A881 -  -  -  -  
   12 D1:A881 CD 28 08 02 	call _homeup
   13 D1:A885 CD 10 08 02 	call _ClrScrnFull
   14 D1:A889 -  -  -  -  
   15 D1:A889 CD 48 08 02 	call _RunIndicOff		; turn off run indicator
   16 D1:A88D F3 -  -  -  	di			
   17 D1:A88E -  -  -  -  	
   18 D1:A88E -  -  -  -  	
   19 D1:A88E CD 70 CE D1 	call setup_palette_1
   20 D1:A892 -  -  -  -  
   21 D1:A892 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255
   22 D1:A896 3E 25 -  -  	ld	a,lcdBpp4
   23 D1:A898 32 18 00 E3 	ld (mpLcdCtrl),a	
   24 D1:A89C -  -  -  -  
   25 D1:A89C 21 C1 B4 D1 	ld hl, Test_Sprite_1
   26 D1:A8A0 11 00 00 D4 	ld de,vRam 
   27 D1:A8A4 -  -  -  -  	
   28 D1:A8A4 CD 42 AF D1 	call sprite_decompress
   29 D1:A8A8 -  -  -  -  	
   30 D1:A8A8 -  -  -  -  	
   31 D1:A8A8 -  -  -  -  
   32 D1:A8A8 -  -  -  -  ;	call decompress_calls
   33 D1:A8A8 -  -  -  -  	
   34 D1:A8A8 -  -  -  -  	;gen purp timers
   35 D1:A8A8 -  -  -  -  		; 76543210	
   36 D1:A8A8 3E 03 -  -  	ld a,%00000011;enable, 32768hz
   37 D1:A8AA 32 30 00 F2 	ld ($F20030),a
   38 D1:A8AE -  -  -  -  	;	  fedcba98
   39 D1:A8AE 3E 02 -  -  	ld a,%00000010;count up
   40 D1:A8B0 32 31 00 F2 	ld ($F20031),a
   41 D1:A8B4 -  -  -  -  	
   42 D1:A8B4 21 00 2C D5 	ld hl,vRam + (160*240*2)
   43 D1:A8B8 22 40 AA D1 	ld (draw_buffer),hl
   44 D1:A8BC 21 00 C2 D5 	ld hl,vRam + (160*240*3)
   45 D1:A8C0 22 10 00 E3 	ld (mpLcdBase),hl
   46 D1:A8C4 -  -  -  -  	
   47 D1:A8C4 21 00 00 00 	ld hl,0
   48 D1:A8C8 22 3A AA D1 	ld (cam_pos),hl
   49 D1:A8CC -  -  -  -  
   50 D1:A8CC CD 8B AB D1 	call setup_bg
   51 D1:A8D0 -  -  -  -  
   52 D1:A8D0 -  -  -  -  	;call draw_bg
   53 D1:A8D0 -  -  -  -  	
   54 D1:A8D0 -  -  -  -  	
   55 D1:A8D0 -  -  -  -  main_loop:
   56 D1:A8D0 -  -  -  -  	;clear timer
   57 D1:A8D0 3E 00 -  -  	ld a,0
   58 D1:A8D2 32 00 00 F2 	ld ($F20000),a;32768hz
   59 D1:A8D6 32 01 00 F2 	ld ($F20001),a;128hz
   60 D1:A8DA 32 02 00 F2 	ld ($F20002),a;0.5hz
   61 D1:A8DE 32 03 00 F2 	ld ($F20003),a
   62 D1:A8E2 -  -  -  -  	
   63 D1:A8E2 -  -  -  -  	;Instructions here 
   64 D1:A8E2 CD 9B AA D1 	call draw_bg
   65 D1:A8E6 -  -  -  -  	
   66 D1:A8E6 CD 31 B1 D1 	call draw_mg
   67 D1:A8EA -  -  -  -  	
   68 D1:A8EA CD 80 B1 D1 	call draw_fg
   69 D1:A8EE -  -  -  -  	
   70 D1:A8EE 21 00 00 00 	ld hl,0
   71 D1:A8F2 -  -  -  -  	
   72 D1:A8F2 -  -  -  -  	; for debug longest frame draw time
   73 D1:A8F2 3A 00 00 F2 	ld a,($F20000)
   74 D1:A8F6 6F -  -  -  	ld l,a
   75 D1:A8F7 3A 01 00 F2 	ld a,($F20001);128hz 
   76 D1:A8FB 67 -  -  -  	ld h,a
   77 D1:A8FC E5 -  -  -  	push hl
   78 D1:A8FD ED 4B 46 AA 
              D1 -  -  -  	ld bc,(longestFrame)
   79 D1:A902 ED 42 -  -  	sbc hl,bc 
   80 D1:A904 DA 16 A9 D1 	jp c,longest_frame_skip
   81 D1:A908 -  -  -  -  	
   82 D1:A908 E1 -  -  -  	pop hl 
   83 D1:A909 E5 -  -  -  	push hl 
   84 D1:A90A 22 46 AA D1 	ld (longestFrame),hl 
   85 D1:A90E 2A 3A AA D1 	ld hl,(cam_pos)
   86 D1:A912 22 49 AA D1 	ld (longestFramePos),hl
   87 D1:A916 -  -  -  -  longest_frame_skip:
   88 D1:A916 E1 -  -  -  	pop hl 
   89 D1:A917 -  -  -  -  	
   90 D1:A917 -  -  -  -  		
   91 D1:A917 2A 4F AA D1 	ld hl,(frameCount)
   92 D1:A91B 23 -  -  -  	inc hl
   93 D1:A91C 22 4F AA D1 	ld (frameCount),hl
   94 D1:A920 -  -  -  -  	
   95 D1:A920 -  -  -  -  	;swap draw buffers
   96 D1:A920 2A 10 00 E3 	ld hl,(mpLcdBase)
   97 D1:A924 ED 5B 40 AA 
              D1 -  -  -  	ld de,(draw_buffer)
   98 D1:A929 ED 53 10 00 
              E3 -  -  -  	ld (mpLcdBase),de
   99 D1:A92E 22 40 AA D1 	ld (draw_buffer),hl
  100 D1:A932 -  -  -  -  	
  101 D1:A932 -  -  -  -  	;check if lcd has drawn first frame
  102 D1:A932 -  -  -  -  clock_check_loop:
  103 D1:A932 -  -  -  -  
  104 D1:A932 -  -  -  -  
  105 D1:A932 -  -  -  -  	;Sprite decompression will occur here
  106 D1:A932 -  -  -  -  
  107 D1:A932 3A 01 00 F2 	ld a,($F20001);128hz clock
  108 D1:A936 FE 03 -  -  	cp 3;check if reached 3 
  109 D1:A938 DA 32 A9 D1 	jp c,clock_check_loop
  110 D1:A93C -  -  -  -  	
  111 D1:A93C -  -  -  -  	;wait until finished drawing second frame
  112 D1:A93C -  -  -  -  
  113 D1:A93C -  -  -  -  clear_int:      
  114 D1:A93C 21 28 00 E3     ld hl, mpLcdIcr
  115 D1:A940 CB D6 -  -      set 2, (hl)            ; clear interrupt
  116 D1:A942 21 20 00 E3     ld hl, mpLcdRis
  117 D1:A946 -  -  -  -  wait_int:
  118 D1:A946 CB 56 -  -      bit 2, (hl)
  119 D1:A948 28 FC -  -      jr z, wait_int  
  120 D1:A94A -  -  -  -  
  121 D1:A94A -  -  -  -  
  122 D1:A94A 21 00 00 00 	ld hl,0
  123 D1:A94E -  -  -  -  	
  124 D1:A94E 3A 02 00 F2 	ld a,($F20002)
  125 D1:A952 67 -  -  -  	ld h,a
  126 D1:A953 3A 01 00 F2 	ld a,($F20001)
  127 D1:A957 6F -  -  -  	ld l,a
  128 D1:A958 ED 4B 4C AA 
              D1 -  -  -  	ld bc,(totalTime)
  129 D1:A95D 09 -  -  -  	add hl,bc 
  130 D1:A95E 22 4C AA D1 	ld (totalTime),hl 
  131 D1:A962 -  -  -  -  	
  132 D1:A962 -  -  -  -  	;Move cam
  133 D1:A962 2A 3A AA D1 	ld hl,(cam_pos)
  134 D1:A966 23 -  -  -  	inc hl
  135 D1:A967 23 -  -  -  	inc hl
  136 D1:A968 23 -  -  -  	inc hl
  137 D1:A969 23 -  -  -  	inc hl
  138 D1:A96A 23 -  -  -  	inc hl
  139 D1:A96B 23 -  -  -  	inc hl
  140 D1:A96C 23 -  -  -  	inc hl
  141 D1:A96D 23 -  -  -  	inc hl
  142 D1:A96E 22 3A AA D1 	ld (cam_pos),hl
  143 D1:A972 01 EF 00 00 	ld bc,239
  144 D1:A976 09 -  -  -  	add hl,bc 
  145 D1:A977 7C -  -  -  	ld a,h ;msb 
  146 D1:A978 FE 23 -  -  	cp 35
  147 D1:A97A C2 D0 A8 D1 	jp nz,main_loop
  148 D1:A97E -  -  -  -  		
  149 D1:A97E -  -  -  -  	;print debug times 
  150 D1:A97E 21 00 00 D4 	ld hl,vRam
  151 D1:A982 22 10 00 E3 	ld (mpLcdBase),hl
  152 D1:A986 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  153 D1:A98A 3E 2D -  -  	ld	a,lcdBpp16
  154 D1:A98C 32 18 00 E3 	ld (mpLcdCtrl),a
  155 D1:A990 -  -  -  -  	
  156 D1:A990 3E 00 -  -  	ld a,0
  157 D1:A992 32 95 05 D0 	ld (curRow),a
  158 D1:A996 32 96 05 D0 	ld (curCol),a
  159 D1:A99A 2A 46 AA D1 	ld hl,(longestFrame)
  160 D1:A99E CD E0 1E 02 	call _DispHL
  161 D1:A9A2 3E 01 -  -  	ld a,1
  162 D1:A9A4 32 95 05 D0 	ld (curRow),a
  163 D1:A9A8 3E 00 -  -  	ld a,0
  164 D1:A9AA 32 96 05 D0 	ld (curCol),a
  165 D1:A9AE 2A 49 AA D1 	ld hl,(longestFramePos)
  166 D1:A9B2 CD E0 1E 02 	call _DispHL
  167 D1:A9B6 3E 02 -  -  	ld a,2
  168 D1:A9B8 32 95 05 D0 	ld (curRow),a
  169 D1:A9BC 3E 00 -  -  	ld a,0
  170 D1:A9BE 32 96 05 D0 	ld (curCol),a
  171 D1:A9C2 2A 4C AA D1 	ld hl,(totalTime)
  172 D1:A9C6 CD E0 1E 02 	call _DispHL
  173 D1:A9CA 3E 03 -  -  	ld a,3
  174 D1:A9CC 32 95 05 D0 	ld (curRow),a
  175 D1:A9D0 3E 00 -  -  	ld a,0
  176 D1:A9D2 32 96 05 D0 	ld (curCol),a
  177 D1:A9D6 2A 4F AA D1 	ld hl,(frameCount)
  178 D1:A9DA CD E0 1E 02 	call _DispHL
  179 D1:A9DE -  -  -  -  	
  180 D1:A9DE CD 2F AA D1 	call prgmpause
  181 D1:A9E2 CD 2F AA D1 	call prgmpause
  182 D1:A9E6 -  -  -  -  	
  183 D1:A9E6 -  -  -  -  	
  184 D1:A9E6 -  -  -  -  exit_prgm:
  185 D1:A9E6 21 00 00 D4 	ld hl,vRam
  186 D1:A9EA 22 10 00 E3 	ld (mpLcdBase),hl
  187 D1:A9EE CD 10 08 02 	call _ClrScrnFull
  188 D1:A9F2 3E 2D -  -  	ld	a,lcdBpp16
  189 D1:A9F4 32 18 00 E3 	ld	(mpLcdCtrl),a
  190 D1:A9F8 CD 3C 1A 02 	call _DrawStatusBar
  191 D1:A9FC -  -  -  -  	
  192 D1:A9FC FB -  -  -  	ei				; reset screen back to normal
  193 D1:A9FD C9 -  -  -  	ret			; return to os
  194 D1:A9FE -  -  -  -  
  195 D1:A9FE -  -  -  -  
  196 D1:A9FE -  -  -  -  printHL:;=================REMOVE
  197 D1:A9FE E5 -  -  -  	push hl
  198 D1:A9FF 21 00 00 D4 	ld hl,vRam
  199 D1:AA03 22 10 00 E3 	ld (mpLcdBase),hl
  200 D1:AA07 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  201 D1:AA0B 3E 2D -  -  	ld	a,lcdBpp16
  202 D1:AA0D 32 18 00 E3 	ld (mpLcdCtrl),a
  203 D1:AA11 E1 -  -  -  	pop hl
  204 D1:AA12 CD E0 1E 02 	call _DispHL
  205 D1:AA16 FB -  -  -  	ei
  206 D1:AA17 CD 8C 0D 02 	call _GetKey
  207 D1:AA1B F3 -  -  -  	di
  208 D1:AA1C C3 E6 A9 D1 	jp exit_prgm
  209 D1:AA20 -  -  -  -  
  210 D1:AA20 -  -  -  -  
  211 D1:AA20 -  -  -  -  write_a_to_ram:
  212 D1:AA20 F5 -  -  -  	push af 
  213 D1:AA21 E5 -  -  -  	push hl 
  214 D1:AA22 -  -  -  -  write_a_to_ram_addr .equ $ + 1 
  215 D1:AA22 21 40 00 D4 	ld hl, $d40040
  216 D1:AA26 77 -  -  -  	ld (hl),a 
  217 D1:AA27 23 -  -  -  	inc hl 
  218 D1:AA28 22 23 AA D1 	ld (write_a_to_ram_addr),hl 
  219 D1:AA2C E1 -  -  -  	pop hl 
  220 D1:AA2D F1 -  -  -  	pop af 
  221 D1:AA2E C9 -  -  -  	ret 
  222 D1:AA2F -  -  -  -  
  223 D1:AA2F -  -  -  -  prgmpause: ;for testing, interrupts code until key pressed. will destroy af register
  224 D1:AA2F D5 -  -  -  	push de 
  225 D1:AA30 E5 -  -  -  	push hl 
  226 D1:AA31 FB -  -  -  	ei
  227 D1:AA32 CD 8C 0D 02 	call _GetKey
  228 D1:AA36 F3 -  -  -  	di
  229 D1:AA37 E1 -  -  -  	pop hl 
  230 D1:AA38 D1 -  -  -  	pop de 
  231 D1:AA39 C9 -  -  -  	ret
  232 D1:AA3A -  -  -  -  
  233 D1:AA3A -  -  -  -  cam_pos:;bottom of cam
  234 D1:AA3A 00 00 00 -  	.dl 0
  235 D1:AA3D -  -  -  -  bg_cam_pos:
  236 D1:AA3D 00 00 00 -  	.dl 0
  237 D1:AA40 -  -  -  -  
  238 D1:AA40 -  -  -  -  
  239 D1:AA40 -  -  -  -  draw_buffer:
  240 D1:AA40 00 00 00 -  	.dl 0
  241 D1:AA43 -  -  -  -  BG_draw_buffer:;uppermost line of bg in vram
  242 D1:AA43 00 00 00 -  	.dl 0
  243 D1:AA46 -  -  -  -  BG_buffer .equ vram + (160*240)
  244 D1:AA46 -  -  -  -  
  245 D1:AA46 -  -  -  -  
  246 D1:AA46 -  -  -  -  longestFrame:
  247 D1:AA46 00 00 00 -  	.dl 0
  248 D1:AA49 -  -  -  -  longestFramePos:
  249 D1:AA49 00 00 00 -  	.dl 0
  250 D1:AA4C -  -  -  -  totalTime:
  251 D1:AA4C 00 00 00 -  	.dl 0
  252 D1:AA4F -  -  -  -  frameCount:
  253 D1:AA4F 00 00 00 -  	.dl 0
  254 D1:AA52 -  -  -  -  hasLagged:
  255 D1:AA52 00 00 00 -  	.dl 0
  256 D1:AA55 -  -  -  -  
  257 D1:AA55 -  -  -  -  
  258 D1:AA55 -  -  -  -  
  259 D1:AA55 -  -  -  -  
  260 D1:AA55 -  -  -  -  
  261 D1:AA55 -  -  -  -  #include "timeTesting.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\timeTesting.txt"
    1 D1:AA55 -  -  -  -  
    2 D1:AA55 -  -  -  -  
    3 D1:AA55 -  -  -  -  
    4 D1:AA55 -  -  -  -  time_test_start:
    5 D1:AA55 -  -  -  -  
    6 D1:AA55 -  -  -  -  		; 76543210	
    7 D1:AA55 3E 03 -  -  	ld a,%00000011;enable, 32768hz
    8 D1:AA57 32 30 00 F2 	ld ($F20030),a
    9 D1:AA5B -  -  -  -  	;	  fedcba98
   10 D1:AA5B 3E 02 -  -  	ld a,%00000010;count up
   11 D1:AA5D 32 31 00 F2 	ld ($F20031),a
   12 D1:AA61 3E 00 -  -  	ld a,0
   13 D1:AA63 32 00 00 F2 	ld ($F20000),a
   14 D1:AA67 32 01 00 F2 	ld ($F20001),a
   15 D1:AA6B 32 02 00 F2 	ld ($F20002),a
   16 D1:AA6F 32 03 00 F2 	ld ($F20003),a
   17 D1:AA73 -  -  -  -  	
   18 D1:AA73 21 2C 01 00 	ld hl,300
   19 D1:AA77 -  -  -  -  	
   20 D1:AA77 -  -  -  -  time_testing_loop:
   21 D1:AA77 E5 -  -  -  	push hl
   22 D1:AA78 01 E8 03 00 	ld bc,1000
   23 D1:AA7C -  -  -  -  time_testing_loop_2:
   24 D1:AA7C C5 -  -  -  	push bc
   25 D1:AA7D -  -  -  -  	;instruction here
   26 D1:AA7D -  -  -  -  	
   27 D1:AA7D -  -  -  -  	
   28 D1:AA7D -  -  -  -  	;Instruction end
   29 D1:AA7D C1 -  -  -  	pop bc
   30 D1:AA7E 0B -  -  -  	dec bc
   31 D1:AA7F 79 -  -  -  	ld a,c
   32 D1:AA80 B0 -  -  -  	or b
   33 D1:AA81 C2 7C AA D1 	jp nz,time_testing_loop_2
   34 D1:AA85 E1 -  -  -  	pop hl
   35 D1:AA86 2B -  -  -  	dec hl
   36 D1:AA87 7D -  -  -  	ld a,l
   37 D1:AA88 B4 -  -  -  	or h
   38 D1:AA89 C2 77 AA D1 	jp nz,time_testing_loop
   39 D1:AA8D -  -  -  -  	
   40 D1:AA8D 3A 01 00 F2 	ld a,($F20001);128hz
   41 D1:AA91 6F -  -  -  	ld l,a
   42 D1:AA92 3A 02 00 F2 	ld a,($F20002);0.5hz
   43 D1:AA96 67 -  -  -  	ld h,a
   44 D1:AA97 C3 FE A9 D1 	jp printHL;div by 128 for time
   45 D1:AA9B -  -  -  -  	
   46 D1:AA9B -  -  -  -  
   47 D1:AA9B -  -  -  -  ;60fps = .0166sec/f	
   48 D1:AA9B -  -  -  -  
   49 D1:AA9B -  -  -  -  ;1000 ldir in vram of 160*240 bytes
   50 D1:AA9B -  -  -  -  ;6.8sec, .0068 sec/instruction   0.4 of a frame
   51 D1:AA9B -  -  -  -  
   52 D1:AA9B -  -  -  -  
   53 D1:AA9B -  -  -  -  ;10,000 draw 1 bg line very complex 
   54 D1:AA9B -  -  -  -  ;9 sec  .07 of frame/instruction
   55 D1:AA9B -  -  -  -  
   56 D1:AA9B -  -  -  -  ;300k draw slow sprite 12*5 px complex
   57 D1:AA9B -  -  -  -  ;16.4RT, 14.8CLK
   58 D1:AA9B -  -  -  -  ;.00328 frames/sprite, 4.19 frames / screen
   59 D1:AA9B -  -  -  -  ;.24 screens/frame
   60 D1:AA9B -  -  -  -  
   61 D1:AA9B -  -  -  -  
   62 D1:AA9B -  -  -  -  ;300k slow sprite best case 12*5px
   63 D1:AA9B -  -  -  -  ;8.75RT 7.6clk
   64 D1:AA9B -  -  -  -  ;.00175 frames/spr 2.24 frames/screen
   65 D1:AA9B -  -  -  -  ;.446 screens/frame
   66 D1:AA9B -  -  -  -  
   67 D1:AA9B -  -  -  -  
   68 D1:AA9B -  -  -  -  
   69 D1:AA9B -  -  -  -  ;1,000,000 fast fg sprite 20*4 px
   70 D1:AA9B -  -  -  -  ;22.15RT,20.35clk
   71 D1:AA9B -  -  -  -  ;.00133 frames/spr 1.275 frames/screen
   72 D1:AA9B -  -  -  -  ;.78 screens/frame
   73 D1:AA9B -  -  -  -  
   74 D1:AA9B -  -  -  -  
   75 D1:AA9B -  -  -  -  ;for 60% of screen with fg sprites in 1 frame
   76 D1:AA9B -  -  -  -  ;.6 = .78*fast + .44*(1-fast)
   77 D1:AA9B -  -  -  -  ;.47 = FAST
   78 D1:AA9B -  -  -  -  
   79 D1:AA9B -  -  -  -  ;50% fast sprites, 50% slow sprites
   80 D1:AA9B -  -  -  -  
   81 D1:AA9B -  -  -  -  
   82 D1:AA9B -  -  -  -  
   83 D1:AA9B -  -  -  -  
   84 D1:AA9B -  -  -  -  
   85 D1:AA9B -  -  -  -  
   86 D1:AA9B -  -  -  -  
   87 D1:AA9B -  -  -  -  
   88 D1:AA9B -  -  -  -  
Listing for file "ascent.asm"
  262 D1:AA9B -  -  -  -  #include "drawBGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawBGSprite.txt"
    1 D1:AA9B -  -  -  -  
    2 D1:AA9B -  -  -  -  draw_bg:
    3 D1:AA9B CD CF AA D1 	call move_bg
    4 D1:AA9F 21 00 2C D5 	ld hl,$d52c00;BG_buffer_end
    5 D1:AAA3 ED 4B 43 AA 
              D1 -  -  -  	ld bc,(BG_draw_buffer)
    6 D1:AAA8 37 -  -  -  	scf 
    7 D1:AAA9 3F -  -  -  	ccf 
    8 D1:AAAA ED 42 -  -  	sbc hl,bc
    9 D1:AAAC E5 -  -  -  	push hl 
   10 D1:AAAD C1 -  -  -  	pop bc
   11 D1:AAAE 2A 43 AA D1 	ld hl,(BG_draw_buffer)
   12 D1:AAB2 ED 5B 40 AA 
              D1 -  -  -  	ld de,(draw_buffer)
   13 D1:AAB7 ED B0 -  -  	ldir
   14 D1:AAB9 2A 43 AA D1 	ld hl,(BG_draw_buffer)
   15 D1:AABD 01 00 96 D4 	ld bc,BG_buffer
   16 D1:AAC1 37 -  -  -  	scf 
   17 D1:AAC2 3F -  -  -  	ccf 
   18 D1:AAC3 ED 42 -  -  	sbc hl,bc
   19 D1:AAC5 C8 -  -  -  	ret z ;if bg buffer line is at top of buffer, no second ldir
   20 D1:AAC6 E5 -  -  -  	push hl 
   21 D1:AAC7 C1 -  -  -  	pop bc
   22 D1:AAC8 21 00 96 D4 	ld hl,BG_buffer 
   23 D1:AACC ED B0 -  -  	ldir 
   24 D1:AACE C9 -  -  -  	ret 
   25 D1:AACF -  -  -  -  	
   26 D1:AACF -  -  -  -  move_bg:
   27 D1:AACF 2A 3A AA D1 	ld hl,(cam_pos)
   28 D1:AAD3 CB 3C -  -  	srl h
   29 D1:AAD5 CB 1D -  -  	rr l
   30 D1:AAD7 CB 3C -  -  	srl h
   31 D1:AAD9 CB 1D -  -  	rr l ;div by 4
   32 D1:AADB -  -  -  -  	;hl holds bg cam pos 
   33 D1:AADB 01 EF 00 00 	ld bc,239
   34 D1:AADF 09 -  -  -  	add hl,bc;add 0 pos  
   35 D1:AAE0 ED 4B 3D AA 
              D1 -  -  -  	ld bc,(bg_cam_pos)
   36 D1:AAE5 ED 42 -  -  	sbc hl,bc 
   37 D1:AAE7 C8 -  -  -  	ret z 
   38 D1:AAE8 DA F4 AA D1 	jp c,move_bg_down
   39 D1:AAEC CD 45 AB D1 	call inc_bg
   40 D1:AAF0 C3 CF AA D1 	jp move_bg
   41 D1:AAF4 -  -  -  -  move_bg_down:
   42 D1:AAF4 CD FC AA D1 	call dec_bg
   43 D1:AAF8 C3 CF AA D1 	jp move_bg
   44 D1:AAFC -  -  -  -  
   45 D1:AAFC -  -  -  -  
   46 D1:AAFC -  -  -  -  dec_bg:;move cam down
   47 D1:AAFC -  -  -  -  	;write on draw buffer line 
   48 D1:AAFC 2A 43 AA D1 	ld hl,(BG_draw_buffer)
   49 D1:AB00 22 79 AC D1 	ld (dbgl_vram_line_start),hl 
   50 D1:AB04 -  -  -  -  	
   51 D1:AB04 2A 3D AA D1 	ld hl,(bg_cam_pos)
   52 D1:AB08 2B -  -  -  	dec hl 
   53 D1:AB09 22 3D AA D1 	ld (bg_cam_pos),hl 
   54 D1:AB0D 01 EF 00 00 	ld bc,239
   55 D1:AB11 ED 42 -  -  	sbc hl,bc;bottom row of bc
   56 D1:AB13 4C -  -  -  	ld c,h;cam pos msb 
   57 D1:AB14 7D -  -  -  	ld a,l 
   58 D1:AB15 21 2D CB D1 	ld hl,BG_Data_frame_table
   59 D1:AB19 0C -  -  -  	inc c 
   60 D1:AB1A 09 -  -  -  	add hl,bc 
   61 D1:AB1B 09 -  -  -  	add hl,bc 
   62 D1:AB1C 09 -  -  -  	add hl,bc 
   63 D1:AB1D ED 27 -  -  	ld hl,(hl)
   64 D1:AB1F CD D8 AB D1 	call draw_bg_line
   65 D1:AB23 -  -  -  -  	;move buffer pos
   66 D1:AB23 2A 43 AA D1 	ld hl,(BG_draw_buffer)
   67 D1:AB27 01 60 2B D5 	ld bc,$d52b60;BG_buffer_end
   68 D1:AB2B 37 -  -  -  	scf 
   69 D1:AB2C 3F -  -  -  	ccf 
   70 D1:AB2D ED 42 -  -  	sbc hl,bc
   71 D1:AB2F 2A 43 AA D1 	ld hl,(BG_draw_buffer)
   72 D1:AB33 C2 3B AB D1 	jp nz,dec_bg_bottom_skip
   73 D1:AB37 21 60 95 D4 	ld hl,$d49560;1 row above top of bg buffer 
   74 D1:AB3B -  -  -  -  dec_bg_bottom_skip:
   75 D1:AB3B 01 A0 00 00 	ld bc,160 
   76 D1:AB3F 09 -  -  -  	add hl,bc
   77 D1:AB40 22 43 AA D1 	ld (BG_draw_buffer),hl 
   78 D1:AB44 C9 -  -  -  	ret
   79 D1:AB45 -  -  -  -  
   80 D1:AB45 -  -  -  -  
   81 D1:AB45 -  -  -  -  inc_bg:;move cam up 
   82 D1:AB45 2A 43 AA D1 	ld hl,(BG_draw_buffer)
   83 D1:AB49 01 00 96 D4 	ld bc,$d49600;BG_buffer_start
   84 D1:AB4D 37 -  -  -  	scf 
   85 D1:AB4E 3F -  -  -  	ccf 
   86 D1:AB4F ED 42 -  -  	sbc hl,bc
   87 D1:AB51 2A 43 AA D1 	ld hl,(BG_draw_buffer)
   88 D1:AB55 C2 5D AB D1 	jp nz,inc_bg_top_skip
   89 D1:AB59 21 00 2C D5 	ld hl,$d52c00;1 below bottom of bg buffer 
   90 D1:AB5D -  -  -  -  inc_bg_top_skip:
   91 D1:AB5D 01 A0 00 00 	ld bc,160 
   92 D1:AB61 37 -  -  -  	scf
   93 D1:AB62 3F -  -  -  	ccf 
   94 D1:AB63 ED 42 -  -  	sbc hl,bc ;move up line 
   95 D1:AB65 22 43 AA D1 	ld (BG_draw_buffer),hl 
   96 D1:AB69 22 79 AC D1 	ld (dbgl_vram_line_start),hl 
   97 D1:AB6D 2A 3D AA D1 	ld hl,(bg_cam_pos)
   98 D1:AB71 23 -  -  -  	inc hl 
   99 D1:AB72 22 3D AA D1 	ld (bg_cam_pos),hl 
  100 D1:AB76 01 00 00 00 	ld bc,0
  101 D1:AB7A 4C -  -  -  	ld c,h;cam pos msb 
  102 D1:AB7B 7D -  -  -  	ld a,l 
  103 D1:AB7C 21 2D CB D1 	ld hl,BG_Data_frame_table
  104 D1:AB80 0C -  -  -  	inc c 
  105 D1:AB81 09 -  -  -  	add hl,bc 
  106 D1:AB82 09 -  -  -  	add hl,bc 
  107 D1:AB83 09 -  -  -  	add hl,bc 
  108 D1:AB84 ED 27 -  -  	ld hl,(hl)
  109 D1:AB86 CD D8 AB D1 	call draw_bg_line
  110 D1:AB8A C9 -  -  -  	ret
  111 D1:AB8B -  -  -  -  	
  112 D1:AB8B -  -  -  -  
  113 D1:AB8B -  -  -  -  
  114 D1:AB8B -  -  -  -  
  115 D1:AB8B -  -  -  -  
  116 D1:AB8B -  -  -  -  setup_bg:
  117 D1:AB8B 2A 3A AA D1 	ld hl,(cam_pos)
  118 D1:AB8F CB 3C -  -  	srl h
  119 D1:AB91 CB 1D -  -  	rr l
  120 D1:AB93 CB 3C -  -  	srl h
  121 D1:AB95 CB 1D -  -  	rr l ;div by 4
  122 D1:AB97 -  -  -  -  	;hl holds bg cam pos 
  123 D1:AB97 01 EF 00 00 	ld bc,239
  124 D1:AB9B 09 -  -  -  	add hl,bc;add 0 pos  
  125 D1:AB9C 22 3D AA D1 	ld (bg_cam_pos),hl
  126 D1:ABA0 23 -  -  -  	inc hl;to be dec in loop
  127 D1:ABA1 E5 -  -  -  	push hl 
  128 D1:ABA2 21 00 96 D4 	ld hl,BG_buffer 
  129 D1:ABA6 22 43 AA D1 	ld (BG_draw_buffer),hl
  130 D1:ABAA E5 -  -  -  	push hl 
  131 D1:ABAB D9 -  -  -  	exx
  132 D1:ABAC 06 F0 -  -  	ld b,240
  133 D1:ABAE -  -  -  -  	
  134 D1:ABAE -  -  -  -  setup_bg_loop:
  135 D1:ABAE D9 -  -  -  	exx
  136 D1:ABAF E1 -  -  -  	pop hl;vram draw pos 
  137 D1:ABB0 22 79 AC D1 	ld (dbgl_vram_line_start),hl 
  138 D1:ABB4 01 A0 00 00 	ld bc,160
  139 D1:ABB8 09 -  -  -  	add hl,bc 
  140 D1:ABB9 EB -  -  -  	ex de,hl ;put vram pos in de 
  141 D1:ABBA E1 -  -  -  	pop hl;cam pos
  142 D1:ABBB 2B -  -  -  	dec hl 
  143 D1:ABBC E5 -  -  -  	push hl;push cam pos 
  144 D1:ABBD D5 -  -  -  	push de ;push vram pos 
  145 D1:ABBE 01 00 00 00 	ld bc,0
  146 D1:ABC2 4C -  -  -  	ld c,h;cam pos msb 
  147 D1:ABC3 7D -  -  -  	ld a,l 
  148 D1:ABC4 21 2D CB D1 	ld hl,BG_Data_frame_table
  149 D1:ABC8 0C -  -  -  	inc c 
  150 D1:ABC9 09 -  -  -  	add hl,bc 
  151 D1:ABCA 09 -  -  -  	add hl,bc 
  152 D1:ABCB 09 -  -  -  	add hl,bc 
  153 D1:ABCC ED 27 -  -  	ld hl,(hl)
  154 D1:ABCE CD D8 AB D1 	call draw_bg_line
  155 D1:ABD2 D9 -  -  -  	exx 
  156 D1:ABD3 10 D9 -  -  	djnz setup_bg_loop
  157 D1:ABD5 E1 -  -  -  	pop hl 
  158 D1:ABD6 E1 -  -  -  	pop hl 
  159 D1:ABD7 C9 -  -  -  	ret 
  160 D1:ABD8 -  -  -  -  
  161 D1:ABD8 -  -  -  -  
  162 D1:ABD8 -  -  -  -  
  163 D1:ABD8 -  -  -  -  
  164 D1:ABD8 -  -  -  -  
  165 D1:ABD8 -  -  -  -  
  166 D1:ABD8 -  -  -  -  ;hl = upper data frame, a = line number in target frame
  167 D1:ABD8 -  -  -  -  ;set dbgl_vram_line_start 
  168 D1:ABD8 -  -  -  -  draw_bg_line:
  169 D1:ABD8 E5 -  -  -  	push hl 
  170 D1:ABD9 F5 -  -  -  	push af 
  171 D1:ABDA 3E FF -  -  	ld a,$ff
  172 D1:ABDC 01 A0 00 00 	ld bc,160
  173 D1:ABE0 2A 79 AC D1 	ld hl,(dbgl_vram_line_start)
  174 D1:ABE4 CD E0 10 02 	call _MemSet 
  175 D1:ABE8 F1 -  -  -  	pop af 
  176 D1:ABE9 E1 -  -  -  	pop hl
  177 D1:ABEA -  -  -  -  
  178 D1:ABEA 32 10 AC D1 	ld (dbgl_line_num),a
  179 D1:ABEE 32 4D AC D1 	ld (dbgl_line_num_2),a
  180 D1:ABF2 ED 17 -  -  	ld de,(hl)
  181 D1:ABF4 ED 53 7F AC 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  182 D1:ABF9 23 -  -  -  	inc hl
  183 D1:ABFA 23 -  -  -  	inc hl
  184 D1:ABFB 23 -  -  -  	inc hl ;to frame data start 
  185 D1:ABFC 08 -  -  -  	ex af,af' ;'
  186 D1:ABFD 7E -  -  -  	ld a,(hl);number of elements
  187 D1:ABFE 08 -  -  -  	ex af,af' ;'
  188 D1:ABFF 23 -  -  -  	inc hl 
  189 D1:AC00 -  -  -  -  	
  190 D1:AC00 11 00 00 00 	ld de,0
  191 D1:AC04 01 00 00 00 	ld bc,0
  192 D1:AC08 -  -  -  -  	;upper frame, checking for sprites that carry into lower frame 
  193 D1:AC08 -  -  -  -  dbgl_upper_loop:
  194 D1:AC08 7E -  -  -  	ld a,(hl);y
  195 D1:AC09 23 -  -  -  	inc hl;to height
  196 D1:AC0A 96 -  -  -  	sub (hl);subtract height
  197 D1:AC0B -  -  -  -  	;a is y value of bottom row of sprite
  198 D1:AC0B D2 19 AC D1 	jp nc,dbgl_upper_skip;if no carry into next frame
  199 D1:AC0F -  -  -  -  	;sprite extends into target frame
  200 D1:AC0F -  -  -  -  dbgl_line_num .equ $ + 1
  201 D1:AC0F D6 00 -  -  	sub 0 ;compare to line number in target frame
  202 D1:AC11 DA 27 AC D1 	jp c,dbgl_upper_cont;if linenum is >  bottom row
  203 D1:AC15 CA 27 AC D1 	jp z,dbgl_upper_cont;if = bottom row
  204 D1:AC19 -  -  -  -  dbgl_upper_skip:
  205 D1:AC19 23 -  -  -  	inc hl;to x
  206 D1:AC1A 23 -  -  -  	inc hl;to index 
  207 D1:AC1B 23 -  -  -  	inc hl;to y
  208 D1:AC1C 08 -  -  -  	ex af,af';'
  209 D1:AC1D 3D -  -  -  	dec a 
  210 D1:AC1E CA 38 AC D1 	jp z,dbgl_lower_start 
  211 D1:AC22 08 -  -  -  	ex af,af';'
  212 D1:AC23 C3 08 AC D1 	jp dbgl_upper_loop
  213 D1:AC27 -  -  -  -  	
  214 D1:AC27 -  -  -  -  dbgl_upper_cont:
  215 D1:AC27 -  -  -  -  	;a = bottom row - linenum
  216 D1:AC27 86 -  -  -  	add a,(hl);add height-1 
  217 D1:AC28 -  -  -  -  	;a holds 0 indexed line num within sprite
  218 D1:AC28 CD 73 AC D1 	call dbgl_setup_and_draw
  219 D1:AC2C 23 -  -  -  	inc hl;to y
  220 D1:AC2D 08 -  -  -  	ex af,af';'
  221 D1:AC2E 3D -  -  -  	dec a 
  222 D1:AC2F CA 38 AC D1 	jp z,dbgl_lower_start 
  223 D1:AC33 08 -  -  -  	ex af,af';'
  224 D1:AC34 C3 08 AC D1 	jp dbgl_upper_loop
  225 D1:AC38 -  -  -  -  	
  226 D1:AC38 -  -  -  -  dbgl_lower_start:
  227 D1:AC38 -  -  -  -  ;LOWER FRAME START 
  228 D1:AC38 -  -  -  -  	;hl pointing to sprite data table 
  229 D1:AC38 ED 17 -  -  	ld de,(hl)
  230 D1:AC3A ED 53 7F AC 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de	
  231 D1:AC3F 11 00 00 00 	ld de,0
  232 D1:AC43 23 -  -  -  	inc hl
  233 D1:AC44 23 -  -  -  	inc hl
  234 D1:AC45 23 -  -  -  	inc hl;to num elements
  235 D1:AC46 -  -  -  -  	
  236 D1:AC46 08 -  -  -  	ex af,af' ;'
  237 D1:AC47 7E -  -  -  	ld a,(hl);number of elements
  238 D1:AC48 08 -  -  -  	ex af,af' ;'
  239 D1:AC49 23 -  -  -  	inc hl ;to y
  240 D1:AC4A -  -  -  -  	
  241 D1:AC4A -  -  -  -  dbgl_lower_loop:
  242 D1:AC4A 7E -  -  -  	ld a,(hl)
  243 D1:AC4B 23 -  -  -  	inc hl;to height-1
  244 D1:AC4C -  -  -  -  dbgl_line_num_2 .equ $ + 1
  245 D1:AC4C D6 00 -  -  	sub 0;subtract line num 
  246 D1:AC4E DA 5B AC D1 	jp c,dbgl_lower_skip;target line num is above sprite 
  247 D1:AC52 -  -  -  -  	;target is below or = sprite y value 
  248 D1:AC52 -  -  -  -  	;a holds 0 indexed sprite row 
  249 D1:AC52 BE -  -  -  	cp (hl);compare to height
  250 D1:AC53 DA 66 AC D1 	jp c,dbgl_lower_cont ;if height >= a 
  251 D1:AC57 CA 66 AC D1 	jp z,dbgl_lower_cont
  252 D1:AC5B -  -  -  -  dbgl_lower_skip:
  253 D1:AC5B 23 -  -  -  	inc hl;to x  
  254 D1:AC5C 23 -  -  -  	inc hl; to index
  255 D1:AC5D 23 -  -  -  	inc hl;to y
  256 D1:AC5E 08 -  -  -  	ex af,af';'
  257 D1:AC5F 3D -  -  -  	dec a 
  258 D1:AC60 C8 -  -  -  	ret z 
  259 D1:AC61 08 -  -  -  	ex af,af';'
  260 D1:AC62 C3 4A AC D1 	jp dbgl_lower_loop
  261 D1:AC66 -  -  -  -  dbgl_lower_cont:
  262 D1:AC66 -  -  -  -  
  263 D1:AC66 CD 73 AC D1 	call dbgl_setup_and_draw
  264 D1:AC6A 23 -  -  -  	inc hl;to y
  265 D1:AC6B 08 -  -  -  	ex af,af';'
  266 D1:AC6C 3D -  -  -  	dec a 
  267 D1:AC6D C8 -  -  -  	ret z 
  268 D1:AC6E 08 -  -  -  	ex af,af';'
  269 D1:AC6F C3 4A AC D1 	jp dbgl_lower_loop
  270 D1:AC73 -  -  -  -  
  271 D1:AC73 -  -  -  -  ;a holds 0 indexed line num, (hl) = height ,bc,de = 0
  272 D1:AC73 -  -  -  -  dbgl_setup_and_draw:
  273 D1:AC73 23 -  -  -  	inc hl;to x pos
  274 D1:AC74 5E -  -  -  	ld e,(hl)
  275 D1:AC75 23 -  -  -  	inc hl 
  276 D1:AC76 4E -  -  -  	ld c,(hl);sprite index 
  277 D1:AC77 E5 -  -  -  	push hl
  278 D1:AC78 -  -  -  -  dbgl_vram_line_start .equ $ + 1	
  279 D1:AC78 21 00 00 00 	ld hl,0
  280 D1:AC7C 19 -  -  -  	add hl,de;add x pos 
  281 D1:AC7D EB -  -  -  	ex de,hl;put vram pos into de 
  282 D1:AC7E -  -  -  -  dbgl_sprite_pointers .equ $ + 1
  283 D1:AC7E 21 00 00 00 	ld hl,0
  284 D1:AC82 09 -  -  -  	add hl,bc
  285 D1:AC83 09 -  -  -  	add hl,bc 
  286 D1:AC84 09 -  -  -  	add hl,bc ;hl points to sprite data pointer 
  287 D1:AC85 ED 27 -  -  	ld hl,(hl);hl holds sprite data
  288 D1:AC87 -  -  -  -  
  289 D1:AC87 CD 95 AC D1 	call draw_bg_sprite_line;draw sprite line 
  290 D1:AC8B 11 00 00 00 	ld de,0;clear de 
  291 D1:AC8F 01 00 00 00 	ld bc,0
  292 D1:AC93 E1 -  -  -  	pop hl;back to data
  293 D1:AC94 C9 -  -  -  	ret
  294 D1:AC95 -  -  -  -  	
  295 D1:AC95 -  -  -  -  
  296 D1:AC95 -  -  -  -  
  297 D1:AC95 -  -  -  -  
  298 D1:AC95 -  -  -  -  
  299 D1:AC95 -  -  -  -  
  300 D1:AC95 -  -  -  -  ;hl = data, de = vram, a = linenum (0 indexed from top)
  301 D1:AC95 -  -  -  -  draw_bg_sprite_line:
  302 D1:AC95 E5 -  -  -  	push hl;save 
  303 D1:AC96 6E -  -  -  	ld l,(hl);sprite width in px
  304 D1:AC97 67 -  -  -  	ld h,a ;lines to skip
  305 D1:AC98 7D -  -  -  	ld a,l;width 
  306 D1:AC99 ED 6C -  -  	mlt hl;widt*lines skipped 
  307 D1:AC9B C1 -  -  -  	pop bc 
  308 D1:AC9C 09 -  -  -  	add hl,bc;skip to target line data 
  309 D1:AC9D 23 -  -  -  	inc hl 
  310 D1:AC9E -  -  -  -  	;hl is pointing to start of line data 
  311 D1:AC9E CB 2F -  -  	sra a;divide width by 2 
  312 D1:ACA0 47 -  -  -  	ld b,a;b holds number of loops 
  313 D1:ACA1 -  -  -  -  dbgsl_loop:
  314 D1:ACA1 1A -  -  -  	ld a,(de); load vram data 
  315 D1:ACA2 A6 -  -  -  	and (hl);and with mask 
  316 D1:ACA3 23 -  -  -  	inc hl ;to color data 
  317 D1:ACA4 B6 -  -  -  	or (hl);or w color data 
  318 D1:ACA5 12 -  -  -  	ld (de),a;write to vram  
  319 D1:ACA6 13 -  -  -  	inc de
  320 D1:ACA7 23 -  -  -  	inc hl;to mask data
  321 D1:ACA8 10 F7 -  -  	djnz dbgsl_loop
  322 D1:ACAA C9 -  -  -  	ret 
  323 D1:ACAB -  -  -  -  	
  324 D1:ACAB -  -  -  -  
  325 D1:ACAB -  -  -  -  
  326 D1:ACAB -  -  -  -  
  327 D1:ACAB -  -  -  -  
  328 D1:ACAB -  -  -  -  
  329 D1:ACAB -  -  -  -  
  330 D1:ACAB -  -  -  -  
  331 D1:ACAB -  -  -  -  
  332 D1:ACAB -  -  -  -  
  333 D1:ACAB -  -  -  -  
  334 D1:ACAB -  -  -  -  
  335 D1:ACAB -  -  -  -  
Listing for file "ascent.asm"
  263 D1:ACAB -  -  -  -  #include "drawFGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFGSprite.txt"
    1 D1:ACAB -  -  -  -  
    2 D1:ACAB -  -  -  -  
    3 D1:ACAB -  -  -  -  ;de = vram , hl = data, a = number lines to draw
    4 D1:ACAB -  -  -  -  draw_fast_sprite_bottom_cut:
    5 D1:ACAB 1B -  -  -  	dec de
    6 D1:ACAC 01 00 00 00 	ld bc,0
    7 D1:ACB0 4F -  -  -  	ld c,a
    8 D1:ACB1 E5 -  -  -  	push hl
    9 D1:ACB2 7E -  -  -  	ld a,(hl);height
   10 D1:ACB3 09 -  -  -  	add hl,bc;hl points to num loops required
   11 D1:ACB4 4F -  -  -  	ld c,a;height
   12 D1:ACB5 7E -  -  -  	ld a,(hl);a holds num loops
   13 D1:ACB6 E1 -  -  -  	pop hl
   14 D1:ACB7 23 -  -  -  	inc hl
   15 D1:ACB8 09 -  -  -  	add hl,bc;beginning of pixel data
   16 D1:ACB9 -  -  -  -  
   17 D1:ACB9 4E -  -  -  	ld c,(hl);load alpha length
   18 D1:ACBA EB -  -  -  	ex de,hl;hl is vram, de is data
   19 D1:ACBB C3 01 AD D1 	jp dfgs_loop
   20 D1:ACBF -  -  -  -  	
   21 D1:ACBF -  -  -  -  ;de = vram , hl = data, a = top lines to skip	
   22 D1:ACBF -  -  -  -  draw_fast_sprite_top_cut:
   23 D1:ACBF 1B -  -  -  	dec de
   24 D1:ACC0 01 00 00 00 	ld bc,0
   25 D1:ACC4 4F -  -  -  	ld c,a
   26 D1:ACC5 D5 -  -  -  	push de
   27 D1:ACC6 11 00 00 00 	ld de,0
   28 D1:ACCA E5 -  -  -  	push hl
   29 D1:ACCB 5E -  -  -  	ld e,(hl);height
   30 D1:ACCC 09 -  -  -  	add hl,bc;hl points to num skip loops 
   31 D1:ACCD -  -  -  -  
   32 D1:ACCD 4E -  -  -  	ld c,(hl);c holds num skip loops
   33 D1:ACCE E1 -  -  -  	pop hl;start of data
   34 D1:ACCF 19 -  -  -  	add hl,de
   35 D1:ACD0 46 -  -  -  	ld b,(hl);total number of loops
   36 D1:ACD1 23 -  -  -  	inc hl;hl is pixel data
   37 D1:ACD2 D1 -  -  -  	pop de;back to vram
   38 D1:ACD3 C5 -  -  -  	push bc;save total and skipped loops
   39 D1:ACD4 79 -  -  -  	ld a,c;loops to skip
   40 D1:ACD5 01 00 00 00 	ld bc,0
   41 D1:ACD9 -  -  -  -  	
   42 D1:ACD9 -  -  -  -  
   43 D1:ACD9 -  -  -  -  draw_fast_sprite_top_loop:; need to follow through gap and drawn lengths to find start of drawing
   44 D1:ACD9 4E -  -  -  	ld c,(hl);load with first gap length	
   45 D1:ACDA EB -  -  -  	ex de,hl;hl is vram
   46 D1:ACDB 09 -  -  -  	add hl,bc
   47 D1:ACDC EB -  -  -  	ex de,hl;hl is data
   48 D1:ACDD 23 -  -  -  	inc hl
   49 D1:ACDE 4E -  -  -  	ld c,(hl);ldir length
   50 D1:ACDF 09 -  -  -  	add hl,bc;add ldir length
   51 D1:ACE0 EB -  -  -  	ex de,hl;hl is vram
   52 D1:ACE1 09 -  -  -  	add hl,bc;add ldir length
   53 D1:ACE2 13 -  -  -  	inc de
   54 D1:ACE3 EB -  -  -  	ex de,hl;hl is data
   55 D1:ACE4 3D -  -  -  	dec a
   56 D1:ACE5 C2 D9 AC D1 	jp nz,draw_fast_sprite_top_loop
   57 D1:ACE9 -  -  -  -  	
   58 D1:ACE9 -  -  -  -  	
   59 D1:ACE9 C1 -  -  -  	pop bc
   60 D1:ACEA 78 -  -  -  	ld a,b
   61 D1:ACEB 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
   62 D1:ACEC -  -  -  -  		
   63 D1:ACEC 01 00 00 00 	ld bc,0
   64 D1:ACF0 4E -  -  -  	ld c,(hl)
   65 D1:ACF1 EB -  -  -  	ex de,hl
   66 D1:ACF2 C3 01 AD D1 	jp dfgs_loop
   67 D1:ACF6 -  -  -  -  
   68 D1:ACF6 -  -  -  -  
   69 D1:ACF6 -  -  -  -  ;de = vram , hl = data
   70 D1:ACF6 -  -  -  -  draw_fast_sprite_full:
   71 D1:ACF6 1B -  -  -  	dec de
   72 D1:ACF7 01 00 00 00 	ld bc,0
   73 D1:ACFB 4E -  -  -  	ld c,(hl);height
   74 D1:ACFC 09 -  -  -  	add hl,bc
   75 D1:ACFD 7E -  -  -  	ld a,(hl);total loops
   76 D1:ACFE 23 -  -  -  	inc hl
   77 D1:ACFF 4E -  -  -  	ld c,(hl);first gap length
   78 D1:AD00 EB -  -  -  	ex de,hl
   79 D1:AD01 -  -  -  -  ;a = num loops, c = alphaLength,hl = vram
   80 D1:AD01 -  -  -  -  dfgs_loop:;gap, colors
   81 D1:AD01 09 -  -  -  	add hl,bc;add alpha length
   82 D1:AD02 EB -  -  -  	ex de,hl;swap, hl is data, de is vram
   83 D1:AD03 23 -  -  -  	inc hl
   84 D1:AD04 4E -  -  -  	ld c,(hl);get ldir length
   85 D1:AD05 23 -  -  -  	inc hl
   86 D1:AD06 ED B0 -  -  	ldir
   87 D1:AD08 4E -  -  -  	ld c,(hl);load c with next alpha length
   88 D1:AD09 EB -  -  -  	ex de,hl;swap, hl is vram
   89 D1:AD0A 3D -  -  -  	dec a
   90 D1:AD0B C2 01 AD D1 	jp nz,dfgs_loop
   91 D1:AD0F C9 -  -  -  	ret
   92 D1:AD10 -  -  -  -  	
   93 D1:AD10 -  -  -  -  	
   94 D1:AD10 -  -  -  -  	
   95 D1:AD10 -  -  -  -  	
   96 D1:AD10 -  -  -  -  
   97 D1:AD10 -  -  -  -  
   98 D1:AD10 -  -  -  -  ;hl = data, de = vram
   99 D1:AD10 -  -  -  -  draw_slow_sprite_full:
  100 D1:AD10 01 00 00 00 	ld bc,0
  101 D1:AD14 4E -  -  -  	ld c,(hl);height
  102 D1:AD15 09 -  -  -  	add hl,bc
  103 D1:AD16 7E -  -  -  	ld a,(hl);num loops
  104 D1:AD17 D9 -  -  -  	exx
  105 D1:AD18 4F -  -  -  	ld c,a
  106 D1:AD19 D9 -  -  -  	exx
  107 D1:AD1A 1B -  -  -  	dec de
  108 D1:AD1B -  -  -  -  	;hl = (gap length) -1 de = vram-1 c' = loops
  109 D1:AD1B -  -  -  -  dsfgs_line_loop:
  110 D1:AD1B 23 -  -  -  	inc hl;gap length
  111 D1:AD1C 4E -  -  -  	ld c,(hl);gap length
  112 D1:AD1D EB -  -  -  	ex de,hl;hl is vram
  113 D1:AD1E 09 -  -  -  	add hl,bc;add aplha gap
  114 D1:AD1F EB -  -  -  	ex de,hl;hl is data
  115 D1:AD20 23 -  -  -  	inc hl;hl points to single pix mask
  116 D1:AD21 1A -  -  -  	ld a,(de);vram data
  117 D1:AD22 A6 -  -  -  	and (hl)
  118 D1:AD23 23 -  -  -  	inc hl;pixel data
  119 D1:AD24 B6 -  -  -  	or (hl)
  120 D1:AD25 12 -  -  -  	ld (de),a
  121 D1:AD26 23 -  -  -  	inc hl;ldir length
  122 D1:AD27 -  -  -  -  	
  123 D1:AD27 13 -  -  -  	inc de;move to next pixel
  124 D1:AD28 -  -  -  -  	
  125 D1:AD28 7E -  -  -  	ld a,(hl);ldir length
  126 D1:AD29 23 -  -  -  	inc hl;data
  127 D1:AD2A 4F -  -  -  	ld c,a
  128 D1:AD2B B7 -  -  -  	or a
  129 D1:AD2C CA 32 AD D1 	jp z,dsfgs_ldir_skip
  130 D1:AD30 ED B0 -  -  	ldir
  131 D1:AD32 -  -  -  -  dsfgs_ldir_skip:
  132 D1:AD32 1A -  -  -  	ld a,(de);vram data
  133 D1:AD33 A6 -  -  -  	and (hl)
  134 D1:AD34 23 -  -  -  	inc hl;pixel data
  135 D1:AD35 B6 -  -  -  	or (hl)
  136 D1:AD36 12 -  -  -  	ld (de),a
  137 D1:AD37 -  -  -  -  	
  138 D1:AD37 D9 -  -  -  	exx 
  139 D1:AD38 0D -  -  -  	dec c
  140 D1:AD39 D9 -  -  -  	exx
  141 D1:AD3A C2 1B AD D1 	jp nz,dsfgs_line_loop
  142 D1:AD3E C9 -  -  -  	ret
  143 D1:AD3F -  -  -  -  
  144 D1:AD3F -  -  -  -  
  145 D1:AD3F -  -  -  -  ;de = vram , hl = data, a = top lines to skip	
  146 D1:AD3F -  -  -  -  draw_slow_sprite_top_cut:
  147 D1:AD3F -  -  -  -  
  148 D1:AD3F E5 -  -  -  	push hl
  149 D1:AD40 01 00 00 00 	ld bc,0
  150 D1:AD44 4F -  -  -  	ld c,a
  151 D1:AD45 09 -  -  -  	add hl,bc
  152 D1:AD46 7E -  -  -  	ld a,(hl);loops to skip
  153 D1:AD47 32 6A AD D1 	ld (dsstc_loops_skipped),a
  154 D1:AD4B D9 -  -  -  	exx
  155 D1:AD4C 47 -  -  -  	ld b,a;loops to skip
  156 D1:AD4D D9 -  -  -  	exx
  157 D1:AD4E E1 -  -  -  	pop hl
  158 D1:AD4F 4E -  -  -  	ld c,(hl)
  159 D1:AD50 09 -  -  -  	add hl,bc;total loops
  160 D1:AD51 7E -  -  -  	ld a,(hl);total loops
  161 D1:AD52 23 -  -  -  	inc hl;gap length
  162 D1:AD53 -  -  -  -  
  163 D1:AD53 -  -  -  -  ;hl = data start, b' = num loops,bc = 0
  164 D1:AD53 D9 -  -  -  	exx
  165 D1:AD54 -  -  -  -  slow_sprite_data_traverse:
  166 D1:AD54 D9 -  -  -  	exx
  167 D1:AD55 4E -  -  -  	ld c,(hl);gap length
  168 D1:AD56 EB -  -  -  	ex de,hl;hl is vram
  169 D1:AD57 09 -  -  -  	add hl,bc
  170 D1:AD58 EB -  -  -  	ex de,hl
  171 D1:AD59 -  -  -  -  	
  172 D1:AD59 23 -  -  -  	inc hl
  173 D1:AD5A 23 -  -  -  	inc hl
  174 D1:AD5B 23 -  -  -  	inc hl;ldir length
  175 D1:AD5C 4E -  -  -  	ld c,(hl)
  176 D1:AD5D 09 -  -  -  	add hl,bc
  177 D1:AD5E EB -  -  -  	ex de,hl
  178 D1:AD5F 09 -  -  -  	add hl,bc
  179 D1:AD60 EB -  -  -  	ex de,hl
  180 D1:AD61 13 -  -  -  	inc de;single pix
  181 D1:AD62 23 -  -  -  	inc hl
  182 D1:AD63 23 -  -  -  	inc hl
  183 D1:AD64 23 -  -  -  	inc hl;gap length
  184 D1:AD65 D9 -  -  -  	exx
  185 D1:AD66 10 EC -  -  	djnz slow_sprite_data_traverse
  186 D1:AD68 D9 -  -  -  	exx
  187 D1:AD69 -  -  -  -  
  188 D1:AD69 -  -  -  -  dsstc_loops_skipped .equ $ + 1
  189 D1:AD69 D6 00 -  -  	sub a,0;loops skipped
  190 D1:AD6B D9 -  -  -  	exx
  191 D1:AD6C 4F -  -  -  	ld c,a
  192 D1:AD6D D9 -  -  -  	exx
  193 D1:AD6E -  -  -  -  	
  194 D1:AD6E 1B -  -  -  	dec de
  195 D1:AD6F 2B -  -  -  	dec hl	
  196 D1:AD70 C3 1B AD D1 	jp dsfgs_line_loop
  197 D1:AD74 -  -  -  -  	
  198 D1:AD74 -  -  -  -  ;de = vram , hl = data, a = number lines to draw
  199 D1:AD74 -  -  -  -  draw_slow_sprite_bottom_cut:
  200 D1:AD74 01 00 00 00 	ld bc,0
  201 D1:AD78 E5 -  -  -  	push hl
  202 D1:AD79 4F -  -  -  	ld c,a;height
  203 D1:AD7A 09 -  -  -  	add hl,bc
  204 D1:AD7B 7E -  -  -  	ld a,(hl);num loops
  205 D1:AD7C D9 -  -  -  	exx
  206 D1:AD7D 4F -  -  -  	ld c,a
  207 D1:AD7E D9 -  -  -  	exx
  208 D1:AD7F E1 -  -  -  	pop hl
  209 D1:AD80 4E -  -  -  	ld c,(hl)
  210 D1:AD81 09 -  -  -  	add hl,bc
  211 D1:AD82 -  -  -  -  
  212 D1:AD82 1B -  -  -  	dec de
  213 D1:AD83 C3 1B AD D1 	jp dsfgs_line_loop
  214 D1:AD87 -  -  -  -  
  215 D1:AD87 -  -  -  -  
  216 D1:AD87 -  -  -  -  
  217 D1:AD87 -  -  -  -  
  218 D1:AD87 -  -  -  -  
  219 D1:AD87 -  -  -  -  
  220 D1:AD87 -  -  -  -  
  221 D1:AD87 -  -  -  -  
  222 D1:AD87 -  -  -  -  
  223 D1:AD87 -  -  -  -  
  224 D1:AD87 -  -  -  -  
  225 D1:AD87 -  -  -  -  
  226 D1:AD87 -  -  -  -  
  227 D1:AD87 -  -  -  -  
  228 D1:AD87 -  -  -  -  
  229 D1:AD87 -  -  -  -  
  230 D1:AD87 -  -  -  -  
  231 D1:AD87 -  -  -  -  
  232 D1:AD87 -  -  -  -  
  233 D1:AD87 -  -  -  -  
  234 D1:AD87 -  -  -  -  
  235 D1:AD87 -  -  -  -  
  236 D1:AD87 -  -  -  -  
  237 D1:AD87 -  -  -  -  
  238 D1:AD87 -  -  -  -  
  239 D1:AD87 -  -  -  -  
  240 D1:AD87 -  -  -  -  
  241 D1:AD87 -  -  -  -  
  242 D1:AD87 -  -  -  -  
  243 D1:AD87 -  -  -  -  
  244 D1:AD87 -  -  -  -  
  245 D1:AD87 -  -  -  -  
  246 D1:AD87 -  -  -  -  
  247 D1:AD87 -  -  -  -  
  248 D1:AD87 -  -  -  -  
  249 D1:AD87 -  -  -  -   
  250 D1:AD87 -  -  -  -  
  251 D1:AD87 -  -  -  -  
  252 D1:AD87 -  -  -  -  
  253 D1:AD87 -  -  -  -  
  254 D1:AD87 -  -  -  -  
  255 D1:AD87 -  -  -  -  
  256 D1:AD87 -  -  -  -  
  257 D1:AD87 -  -  -  -  
  258 D1:AD87 -  -  -  -  
  259 D1:AD87 -  -  -  -  
  260 D1:AD87 -  -  -  -  
  261 D1:AD87 -  -  -  -  
  262 D1:AD87 -  -  -  -  
  263 D1:AD87 -  -  -  -  
  264 D1:AD87 -  -  -  -  
  265 D1:AD87 -  -  -  -  
  266 D1:AD87 -  -  -  -  
  267 D1:AD87 -  -  -  -  
  268 D1:AD87 -  -  -  -  
  269 D1:AD87 -  -  -  -  
  270 D1:AD87 -  -  -  -  
  271 D1:AD87 -  -  -  -  
  272 D1:AD87 -  -  -  -  
  273 D1:AD87 -  -  -  -  
  274 D1:AD87 -  -  -  -  
  275 D1:AD87 -  -  -  -  
  276 D1:AD87 -  -  -  -  
  277 D1:AD87 -  -  -  -  
  278 D1:AD87 -  -  -  -  
  279 D1:AD87 -  -  -  -  
  280 D1:AD87 -  -  -  -  
  281 D1:AD87 -  -  -  -  
  282 D1:AD87 -  -  -  -  
  283 D1:AD87 -  -  -  -  
  284 D1:AD87 -  -  -  -  
  285 D1:AD87 -  -  -  -  
  286 D1:AD87 -  -  -  -  
  287 D1:AD87 -  -  -  -  
  288 D1:AD87 -  -  -  -  
  289 D1:AD87 -  -  -  -  
  290 D1:AD87 -  -  -  -  
  291 D1:AD87 -  -  -  -  
  292 D1:AD87 -  -  -  -  
  293 D1:AD87 -  -  -  -  
  294 D1:AD87 -  -  -  -  
  295 D1:AD87 -  -  -  -  
  296 D1:AD87 -  -  -  -  
  297 D1:AD87 -  -  -  -  
  298 D1:AD87 -  -  -  -  
  299 D1:AD87 -  -  -  -  
  300 D1:AD87 -  -  -  -  
  301 D1:AD87 -  -  -  -  
  302 D1:AD87 -  -  -  -  
  303 D1:AD87 -  -  -  -  
  304 D1:AD87 -  -  -  -  
  305 D1:AD87 -  -  -  -  	
  306 D1:AD87 -  -  -  -  	
Listing for file "ascent.asm"
  264 D1:AD87 -  -  -  -  #include "BetterSpriteDecompress.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\BetterSpriteDecompress.txt"
    1 D1:AD87 -  -  -  -  
    2 D1:AD87 -  -  -  -  
    3 D1:AD87 -  -  -  -  
    4 D1:AD87 -  -  -  -  
    5 D1:AD87 -  -  -  -  
    6 D1:AD87 -  -  -  -  ;Functions for getting next color and alpha value
    7 D1:AD87 -  -  -  -  
    8 D1:AD87 -  -  -  -  
    9 D1:AD87 -  -  -  -  ;REGISTER USEAGE
   10 D1:AD87 -  -  -  -  ;HL = sprite color data byte
   11 D1:AD87 -  -  -  -  ;C = bit selector for color data 
   12 D1:AD87 -  -  -  -  ;HL' = alpha data byte
   13 D1:AD87 -  -  -  -  ;C' = bit selector for alpha data
   14 D1:AD87 -  -  -  -  ;DE = output sprite data location
   15 D1:AD87 -  -  -  -  ;DE' = loops/line write location 
   16 D1:AD87 -  -  -  -  ;A' = alpha bits remaining to read in row
   17 D1:AD87 -  -  -  -  
   18 D1:AD87 -  -  -  -  ;SETUP ----------------
   19 D1:AD87 -  -  -  -  ;SET UP BPC MODE AND ALPHA/NOALPHA
   20 D1:AD87 -  -  -  -  ;write height or width(BG) data to decompressed sprite 
   21 D1:AD87 -  -  -  -  ;GET PER SPRITE PALETTE DATA
   22 D1:AD87 -  -  -  -  ;set registers to point to correct locations for decompression
   23 D1:AD87 -  -  -  -  ;------------
   24 D1:AD87 -  -  -  -  
   25 D1:AD87 -  -  -  -  ;GO TO EITHER FAST, SLOW, or BG SPRITE ALGORITHMS
   26 D1:AD87 -  -  -  -  
   27 D1:AD87 -  -  -  -  
   28 D1:AD87 -  -  -  -  ;FAST / SLOW ROUTINE ---------------------------
   29 D1:AD87 -  -  -  -  ;Parse through alpha data, count number of 00 pairs (gap length)
   30 D1:AD87 -  -  -  -  ;IF FAST, GOTO LDIR ROUTINE
   31 D1:AD87 -  -  -  -  ;leading pixel(s), either 11, 01, 10 in alpha data. 
   32 D1:AD87 -  -  -  -  ;write pixel mask and color data
   33 D1:AD87 -  -  -  -  
   34 D1:AD87 -  -  -  -  ;LDIR ROUTINE
   35 D1:AD87 -  -  -  -  ;Count number of 11 pairs in alpha data (LDIR length)
   36 D1:AD87 -  -  -  -  ;if slow and alpha data ends with 00, the last 11 pair becomes trailing pixels
   37 D1:AD87 -  -  -  -  ;Write LDIR length to sprite data 
   38 D1:AD87 -  -  -  -  ;Write LDIR pixel data (if nonzero)
   39 D1:AD87 -  -  -  -  ;IF FAST, GOTO END
   40 D1:AD87 -  -  -  -  
   41 D1:AD87 -  -  -  -  ;trailing pixels
   42 D1:AD87 -  -  -  -  ;11,10,01 in alpha data 
   43 D1:AD87 -  -  -  -  
   44 D1:AD87 -  -  -  -  ;END AND RESTART
   45 D1:AD87 -  -  -  -  ;Increment loops/line counter
   46 D1:AD87 -  -  -  -  ;check if end of line and write loops/line
   47 D1:AD87 -  -  -  -  
   48 D1:AD87 -  -  -  -  ;store registers and check if interrupt is required
   49 D1:AD87 -  -  -  -  ;if interruption required, return to main loop to draw next frame
   50 D1:AD87 -  -  -  -  ;otherwise return to start of loop
   51 D1:AD87 -  -  -  -  
   52 D1:AD87 -  -  -  -  ;
   53 D1:AD87 -  -  -  -  
   54 D1:AD87 -  -  -  -  
   55 D1:AD87 -  -  -  -  
   56 D1:AD87 -  -  -  -  
   57 D1:AD87 -  -  -  -  
   58 D1:AD87 -  -  -  -  
   59 D1:AD87 -  -  -  -  ;rotates c and incs hl if needed to point to next bit. can be flipped to dec bit 
   60 D1:AD87 -  -  -  -  sdcomp_next_in_bitstream:
   61 D1:AD87 -  -  -  -  sdcomp_flip_bitstream .equ $ + 1
   62 D1:AD87 CB 09 -  -  	rrc c;rlc flip
   63 D1:AD89 D0 -  -  -  	ret nc
   64 D1:AD8A -  -  -  -  sdcomp_flip_bitstream_2 .equ $
   65 D1:AD8A 23 -  -  -  	inc hl;dec hl flip
   66 D1:AD8B C9 -  -  -  	ret
   67 D1:AD8C -  -  -  -  
   68 D1:AD8C -  -  -  -  ;ALPHA HELPER FUNCS ================================================================================================	
   69 D1:AD8C -  -  -  -  
   70 D1:AD8C -  -  -  -  ;IN SHADOW
   71 D1:AD8C -  -  -  -  ;HL POINTS TO PIXEL ALPHA DATA
   72 D1:AD8C -  -  -  -  ;C IS BITMASK
   73 D1:AD8C -  -  -  -  ;RETURNS 0 OR nonzero IN A 
   74 D1:AD8C -  -  -  -  ;If final alpha bit in line is read, writes loop/line data, ...
   75 D1:AD8C -  -  -  -  ; sets some flags, decrements remaining lines, traverses sprite data if flip, returns the read data 
   76 D1:AD8C -  -  -  -  ; next call returns first bit in next row  
   77 D1:AD8C -  -  -  -  sdcomp_get_next_alpha:
   78 D1:AD8C -  -  -  -  
   79 D1:AD8C -  -  -  -  ;MUST BE RESET EVERY ROW
   80 D1:AD8C 37 -  -  -  	scf
   81 D1:AD8D -  -  -  -  sdcomp_bit_offset .equ $ ;jp nc for offset
   82 D1:AD8D DA 9A AD D1 	jp c,sdcomp_bit_offset_skip
   83 D1:AD91 3E DA -  -  	ld a,%11011010;jp c 
   84 D1:AD93 32 8D AD D1 	ld (sdcomp_bit_offset),a
   85 D1:AD97 3E 00 -  -  	ld a,0
   86 D1:AD99 C9 -  -  -  	ret ;return 0 first bit
   87 D1:AD9A -  -  -  -  sdcomp_bit_offset_skip:;skip bit offset
   88 D1:AD9A -  -  -  -  	
   89 D1:AD9A 7E -  -  -  	ld a,(hl)
   90 D1:AD9B -  -  -  -  	;call write_a_to_ram
   91 D1:AD9B -  -  -  -  	
   92 D1:AD9B A1 -  -  -  	and c 
   93 D1:AD9C CD 87 AD D1 	call sdcomp_next_in_bitstream;incs bitstream
   94 D1:ADA0 -  -  -  -  	;a holds data to return
   95 D1:ADA0 -  -  -  -  	;call write_a_to_ram
   96 D1:ADA0 37 -  -  -  	scf 
   97 D1:ADA1 -  -  -  -  sdcomp_no_alpha_1 .equ $;Load a with 1 if no alpha
   98 D1:ADA1 DA A7 AD D1 	jp c,sdcomp_no_alpha_1_skip
   99 D1:ADA5 3E 01 -  -  	ld a,1
  100 D1:ADA7 -  -  -  -  sdcomp_no_alpha_1_skip:
  101 D1:ADA7 -  -  -  -  	
  102 D1:ADA7 -  -  -  -  	
  103 D1:ADA7 08 -  -  -  	ex af,af' ;';into shadow
  104 D1:ADA8 3D -  -  -  	dec a 
  105 D1:ADA9 -  -  -  -  	;call write_a_to_ram
  106 D1:ADA9 C2 E2 AD D1 	jp nz, sdcomp_end_of_line_skip
  107 D1:ADAD -  -  -  -  	
  108 D1:ADAD -  -  -  -  	;HAve read last bit in line  
  109 D1:ADAD -  -  -  -  	
  110 D1:ADAD -  -  -  -  	;ld a,$AC;Test
  111 D1:ADAD -  -  -  -  	;call write_a_to_ram;Test
  112 D1:ADAD -  -  -  -  	;Decrement lines remaining in sprite
  113 D1:ADAD -  -  -  -  sdcomp_lines_remaining .equ $ + 1
  114 D1:ADAD 3E 00 -  -  	ld a,0
  115 D1:ADAF 3D -  -  -  	dec a 
  116 D1:ADB0 32 AE AD D1 	ld (sdcomp_lines_remaining),a
  117 D1:ADB4 -  -  -  -  	;call write_a_to_ram
  118 D1:ADB4 C2 BE AD D1 	jp nz,sdcomp_set_end_flag_skip
  119 D1:ADB8 -  -  -  -  	;end of last line reached 
  120 D1:ADB8 3E DA -  -  	ld a,%11011010;jp c
  121 D1:ADBA 32 88 B0 D1 	ld (sdcomp_end_reached_flag) , a ;set end reached flag to indicate sprite is done decompressing TODO 
  122 D1:ADBE -  -  -  -  sdcomp_set_end_flag_skip:
  123 D1:ADBE 3A 2B B0 D1 	ld a,(sdcomp_loops_per_line_counter)
  124 D1:ADC2 12 -  -  -  	ld (de),a ;write loops/line data 
  125 D1:ADC3 13 -  -  -  	inc de
  126 D1:ADC4 -  -  -  -  
  127 D1:ADC4 37 -  -  -  	scf 
  128 D1:ADC5 -  -  -  -  sdcomp_flip_1 .equ $ ;if flipped sprite
  129 D1:ADC5 D4 B2 AE D1 	call nc,sdcomp_traverse_line_data ;call line data traverse
  130 D1:ADC9 -  -  -  -  
  131 D1:ADC9 3E D2 -  -  	ld a, %11010010 ;jp nc 
  132 D1:ADCB 32 F4 AF D1 	ld (sdcomp_end_of_line_1),a
  133 D1:ADCF 3E DA -  -  	ld a,%11011010;jp c
  134 D1:ADD1 32 49 B0 D1 	ld (sdcomp_end_of_line_2),a
  135 D1:ADD5 -  -  -  -  	
  136 D1:ADD5 -  -  -  -  	;TODO set flags in required places to break loops
  137 D1:ADD5 -  -  -  -  	
  138 D1:ADD5 37 -  -  -  	scf ;Set offset bit for next line
  139 D1:ADD6 -  -  -  -  sdcomp_offset_1 .equ $
  140 D1:ADD6 D2 E0 AD D1 	jp nc,sdcomp_offset_1_skip
  141 D1:ADDA 3E D2 -  -  	ld a, %11010010 ;jp nc 
  142 D1:ADDC 32 8D AD D1 	ld (sdcomp_bit_offset),a
  143 D1:ADE0 -  -  -  -  sdcomp_offset_1_skip:
  144 D1:ADE0 -  -  -  -  	
  145 D1:ADE0 -  -  -  -  sdcomp_sprite_width_2 .equ $+1
  146 D1:ADE0 3E 00 -  -  	ld a,0 ;Return sprite width to a'
  147 D1:ADE2 -  -  -  -  	
  148 D1:ADE2 -  -  -  -  	
  149 D1:ADE2 -  -  -  -  sdcomp_end_of_line_skip:
  150 D1:ADE2 08 -  -  -  	ex af,af' ;' ;out
  151 D1:ADE3 -  -  -  -  	
  152 D1:ADE3 C9 -  -  -  	ret 
  153 D1:ADE4 -  -  -  -  	
  154 D1:ADE4 -  -  -  -  
  155 D1:ADE4 -  -  -  -  
  156 D1:ADE4 -  -  -  -  ;in shadow,returns a $FF,$0F,$F0,$00
  157 D1:ADE4 -  -  -  -  sdcomp_get_next_alpha_pair:
  158 D1:ADE4 CD 8C AD D1 	call sdcomp_get_next_alpha
  159 D1:ADE8 B7 -  -  -  	or a 
  160 D1:ADE9 CA F3 AD D1 	jp z,sdcomp_get_next_alpha_pair0
  161 D1:ADED 3E F0 -  -  	ld a,$F0;FIRST BIT WAS 1
  162 D1:ADEF C3 F5 AD D1 	jp sdcomp_get_next_alpha_pair1
  163 D1:ADF3 -  -  -  -  sdcomp_get_next_alpha_pair0:
  164 D1:ADF3 3E 00 -  -  	ld a,0
  165 D1:ADF5 -  -  -  -  sdcomp_get_next_alpha_pair1:
  166 D1:ADF5 32 0B AE D1 	ld (sdcomp_get_next_alpha_pair_or),a 
  167 D1:ADF9 -  -  -  -  	
  168 D1:ADF9 CD 8C AD D1 	call sdcomp_get_next_alpha
  169 D1:ADFD B7 -  -  -  	or a 
  170 D1:ADFE CA 08 AE D1 	jp z,sdcomp_get_next_alpha_pair2
  171 D1:AE02 3E 0F -  -  	ld a,$0F;SECOND BIT WAS 1
  172 D1:AE04 C3 0A AE D1 	jp sdcomp_get_next_alpha_pair3
  173 D1:AE08 -  -  -  -  sdcomp_get_next_alpha_pair2:
  174 D1:AE08 3E 00 -  -  	ld a,0;SECOND BIT WAS 0
  175 D1:AE0A -  -  -  -  sdcomp_get_next_alpha_pair3:	
  176 D1:AE0A -  -  -  -  sdcomp_get_next_alpha_pair_or .equ $ + 1
  177 D1:AE0A F6 00 -  -  	or 0;OR WITH FIRST BIT 
  178 D1:AE0C -  -  -  -  	
  179 D1:AE0C C9 -  -  -  	ret 
  180 D1:AE0D -  -  -  -  	
  181 D1:AE0D -  -  -  -  ;COLOR HELPER FUNCS =================================================================================================
  182 D1:AE0D -  -  -  -  
  183 D1:AE0D -  -  -  -  ;not in shadow, returns a = color0000
  184 D1:AE0D -  -  -  -  sdcomp_get_next_color_leading_nibble:
  185 D1:AE0D CD 16 AE D1 	call sdcomp_get_next_color
  186 D1:AE11 0F -  -  -  	rrca 
  187 D1:AE12 0F -  -  -  	rrca 
  188 D1:AE13 0F -  -  -  	rrca 
  189 D1:AE14 0F -  -  -  	rrca
  190 D1:AE15 C9 -  -  -  	ret 
  191 D1:AE16 -  -  -  -  
  192 D1:AE16 -  -  -  -  
  193 D1:AE16 -  -  -  -  
  194 D1:AE16 -  -  -  -  ;bit orders
  195 D1:AE16 -  -  -  -  ;	noflip   flip 
  196 D1:AE16 -  -  -  -  ;4bpp 3210 	 0123
  197 D1:AE16 -  -  -  -  ;3bpp 210	 012
  198 D1:AE16 -  -  -  -  ;2bpp 10	 01
  199 D1:AE16 -  -  -  -  ;1bpp 0		 0
  200 D1:AE16 -  -  -  -  
  201 D1:AE16 -  -  -  -  ;not in shadow, returns a = 0000color
  202 D1:AE16 -  -  -  -  sdcomp_get_next_color:
  203 D1:AE16 D5 -  -  -  	push de ;save data write location
  204 D1:AE17 1E 00 -  -  	ld e,0;E will store the final color data
  205 D1:AE19 -  -  -  -  	
  206 D1:AE19 37 -  -  -  	scf
  207 D1:AE1A -  -  -  -  sdcomp_0bpc .equ $ ;if sprite is 0bpc, skip reading bitstream, set to jp c 
  208 D1:AE1A D2 64 AE D1 	jp nc,sdcomp_get_color_from_index
  209 D1:AE1E -  -  -  -  	
  210 D1:AE1E -  -  -  -  	
  211 D1:AE1E -  -  -  -  	
  212 D1:AE1E 7E -  -  -  	ld a,(hl) ;read next bit 
  213 D1:AE1F -  -  -  -  	;call write_a_to_ram ;TEST
  214 D1:AE1F A1 -  -  -  	and c
  215 D1:AE20 -  -  -  -  	;call write_a_to_ram ;TEST
  216 D1:AE20 CD 87 AD D1 	call sdcomp_next_in_bitstream  ;inc bitstream 
  217 D1:AE24 B7 -  -  -  	or a
  218 D1:AE25 CA 2B AE D1 	jp z,sdcomp_get_color_data_set_skip_1
  219 D1:AE29 -  -  -  -  sdcomp_color_bit_0 .equ $ + 1 
  220 D1:AE29 CB CB -  -  	set 1,e  ;set bit of e reg to color, 0 for flip, else depends on bpc 
  221 D1:AE2B -  -  -  -  sdcomp_get_color_data_set_skip_1:
  222 D1:AE2B -  -  -  -  	
  223 D1:AE2B 37 -  -  -  	scf
  224 D1:AE2C -  -  -  -  sdcomp_1bpc .equ $
  225 D1:AE2C D2 64 AE D1 	jp nc,sdcomp_get_color_from_index ;if 1bpc jump to end 
  226 D1:AE30 -  -  -  -  	
  227 D1:AE30 -  -  -  -  	
  228 D1:AE30 7E -  -  -  	ld a,(hl)
  229 D1:AE31 A1 -  -  -  	and c 
  230 D1:AE32 -  -  -  -  	;call write_a_to_ram ;TEST
  231 D1:AE32 CD 87 AD D1 	call sdcomp_next_in_bitstream
  232 D1:AE36 B7 -  -  -  	or a
  233 D1:AE37 CA 3D AE D1 	jp z,sdcomp_get_color_data_set_skip_2
  234 D1:AE3B -  -  -  -  sdcomp_color_bit_1 .equ $ + 1 	
  235 D1:AE3B CB C3 -  -  	set 0,e ;store next bit of color data in e  
  236 D1:AE3D -  -  -  -  sdcomp_get_color_data_set_skip_2:
  237 D1:AE3D -  -  -  -  	
  238 D1:AE3D 37 -  -  -  	scf
  239 D1:AE3E -  -  -  -  sdcomp_2bpc .equ $
  240 D1:AE3E D2 64 AE D1 	jp nc,sdcomp_get_color_from_index
  241 D1:AE42 -  -  -  -  	
  242 D1:AE42 7E -  -  -  	ld a,(hl)
  243 D1:AE43 A1 -  -  -  	and c 
  244 D1:AE44 CD 87 AD D1 	call sdcomp_next_in_bitstream
  245 D1:AE48 B7 -  -  -  	or a
  246 D1:AE49 CA 4F AE D1 	jp z,sdcomp_get_color_data_set_skip_3
  247 D1:AE4D -  -  -  -  sdcomp_color_bit_2 .equ $ + 1 
  248 D1:AE4D CB D3 -  -  	set 2,e 
  249 D1:AE4F -  -  -  -  sdcomp_get_color_data_set_skip_3:
  250 D1:AE4F -  -  -  -  	
  251 D1:AE4F 37 -  -  -  	scf
  252 D1:AE50 -  -  -  -  sdcomp_3bpc .equ $
  253 D1:AE50 D2 64 AE D1 	jp nc,sdcomp_get_color_from_index	
  254 D1:AE54 -  -  -  -  
  255 D1:AE54 -  -  -  -  ;4bpp, interpret as color data, not indexed	
  256 D1:AE54 7E -  -  -  	ld a,(hl)
  257 D1:AE55 A1 -  -  -  	and c 
  258 D1:AE56 CD 87 AD D1 	call sdcomp_next_in_bitstream
  259 D1:AE5A B7 -  -  -  	or a
  260 D1:AE5B CA 61 AE D1 	jp z,sdcomp_get_color_data_set_skip_4
  261 D1:AE5F -  -  -  -  sdcomp_color_bit_3 .equ $ + 1 
  262 D1:AE5F CB DB -  -  	set 3,e 
  263 D1:AE61 -  -  -  -  sdcomp_get_color_data_set_skip_4:
  264 D1:AE61 -  -  -  -  ;4bpp, interpret as color data, not indexed
  265 D1:AE61 7B -  -  -  	ld a,e 
  266 D1:AE62 D1 -  -  -  	pop de 
  267 D1:AE63 C9 -  -  -  	ret 
  268 D1:AE64 -  -  -  -  
  269 D1:AE64 -  -  -  -  sdcomp_get_color_from_index: ; e holds index of color data, 1-8
  270 D1:AE64 -  -  -  -  	
  271 D1:AE64 -  -  -  -  	;ld a,$DD
  272 D1:AE64 -  -  -  -  	;call write_a_to_ram
  273 D1:AE64 -  -  -  -  	;ld a,e 
  274 D1:AE64 -  -  -  -  	;call write_a_to_ram
  275 D1:AE64 -  -  -  -  	
  276 D1:AE64 -  -  -  -  	
  277 D1:AE64 CB 53 -  -  	bit 2,e 
  278 D1:AE66 CA 88 AE D1 	jp z, sdcomp_get_color_from_index_2l
  279 D1:AE6A -  -  -  -  	
  280 D1:AE6A -  -  -  -  	;Bit 2 = 1 
  281 D1:AE6A CB 4B -  -  	bit 1,e 
  282 D1:AE6C CA 7C AE D1 	jp z,sdcomp_get_color_from_index_2h1l
  283 D1:AE70 -  -  -  -  
  284 D1:AE70 -  -  -  -  	;bit 2 = 1 1 = 1
  285 D1:AE70 -  -  -  -  sdcomp_indexed_color_data_4 .equ $ + 1	
  286 D1:AE70 3E 00 -  -  	ld a,0
  287 D1:AE72 CB 43 -  -  	bit 0,e 
  288 D1:AE74 CA AA AE D1 	jp z,sdcomp_get_color_from_index_msn
  289 D1:AE78 C3 A6 AE D1 	jp sdcomp_get_color_from_index_lsn
  290 D1:AE7C -  -  -  -  
  291 D1:AE7C -  -  -  -  sdcomp_get_color_from_index_2h1l:
  292 D1:AE7C -  -  -  -  	;2 = 1 1 = 0 
  293 D1:AE7C -  -  -  -  sdcomp_indexed_color_data_3 .equ $ + 1	
  294 D1:AE7C 3E 00 -  -  	ld a,0
  295 D1:AE7E CB 43 -  -  	bit 0,e 
  296 D1:AE80 CA AA AE D1 	jp z,sdcomp_get_color_from_index_msn
  297 D1:AE84 C3 A6 AE D1 	jp sdcomp_get_color_from_index_lsn
  298 D1:AE88 -  -  -  -  	
  299 D1:AE88 -  -  -  -  sdcomp_get_color_from_index_2l:
  300 D1:AE88 -  -  -  -  	;bit 2 was 0 
  301 D1:AE88 CB 4B -  -  	bit 1,e 
  302 D1:AE8A CA 9A AE D1 	jp z,sdcomp_get_color_from_index_2l1l
  303 D1:AE8E -  -  -  -  	
  304 D1:AE8E -  -  -  -  	;bit 2 = 0 1 = 1
  305 D1:AE8E -  -  -  -  sdcomp_indexed_color_data_2 .equ $ + 1	
  306 D1:AE8E 3E 00 -  -  	ld a,0
  307 D1:AE90 CB 43 -  -  	bit 0,e 
  308 D1:AE92 CA AA AE D1 	jp z,sdcomp_get_color_from_index_msn
  309 D1:AE96 C3 A6 AE D1 	jp sdcomp_get_color_from_index_lsn
  310 D1:AE9A -  -  -  -  	
  311 D1:AE9A -  -  -  -  sdcomp_get_color_from_index_2l1l:
  312 D1:AE9A -  -  -  -  	;bit 2 =0  1 = 0
  313 D1:AE9A -  -  -  -  sdcomp_indexed_color_data_1 .equ $ + 1	
  314 D1:AE9A 3E 00 -  -  	ld a,0
  315 D1:AE9C -  -  -  -  	
  316 D1:AE9C CB 43 -  -  	bit 0,e 
  317 D1:AE9E CA AA AE D1 	jp z,sdcomp_get_color_from_index_msn
  318 D1:AEA2 C3 A6 AE D1 	jp sdcomp_get_color_from_index_lsn
  319 D1:AEA6 -  -  -  -  sdcomp_get_color_from_index_lsn:
  320 D1:AEA6 E6 0F -  -  	and %00001111;and with least significant nibble 
  321 D1:AEA8 D1 -  -  -  	pop de 
  322 D1:AEA9 C9 -  -  -  	ret 
  323 D1:AEAA -  -  -  -  	
  324 D1:AEAA -  -  -  -  sdcomp_get_color_from_index_msn:
  325 D1:AEAA E6 F0 -  -  	and %11110000;and with most significant nibble 
  326 D1:AEAC 0F -  -  -  	rrca 
  327 D1:AEAD 0F -  -  -  	rrca 
  328 D1:AEAE 0F -  -  -  	rrca 
  329 D1:AEAF 0F -  -  -  	rrca 
  330 D1:AEB0 D1 -  -  -  	pop de 
  331 D1:AEB1 C9 -  -  -  	ret 
  332 D1:AEB2 -  -  -  -  
  333 D1:AEB2 -  -  -  -  
  334 D1:AEB2 -  -  -  -  
  335 D1:AEB2 -  -  -  -  ;function for traversing sprite data for reversed sprites
  336 D1:AEB2 -  -  -  -  ;not in shadow ,destroys a
  337 D1:AEB2 -  -  -  -  sdcomp_traverse_line_data:
  338 D1:AEB2 -  -  -  -  sdcomp_color_data_line_end_byte .equ $ + 1
  339 D1:AEB2 21 00 00 00 	ld hl,0 ;load end of previous color data line 
  340 D1:AEB6 -  -  -  -  sdcomp_color_data_line_end_mask .equ $ + 1
  341 D1:AEB6 0E 00 -  -  	ld c,0 ;load end of previous color data line
  342 D1:AEB8 D9 -  -  -  	exx;toshadow 
  343 D1:AEB9 -  -  -  -  	
  344 D1:AEB9 -  -  -  -  	;load end of previous alpha data line 
  345 D1:AEB9 -  -  -  -  sdcomp_alpha_data_line_end_byte .equ $ + 1
  346 D1:AEB9 21 00 00 00 	ld hl,0
  347 D1:AEBD -  -  -  -  sdcomp_alpha_data_line_end_mask .equ $ + 1
  348 D1:AEBD 0E 00 -  -  	ld c,0
  349 D1:AEBF D5 -  -  -  	push de
  350 D1:AEC0 -  -  -  -  sdcomp_sprite_width .equ $ + 1
  351 D1:AEC0 3E 00 -  -  	ld a, 0
  352 D1:AEC2 5F -  -  -  	ld e,a ;e holds sprite width 
  353 D1:AEC3 -  -  -  -  	
  354 D1:AEC3 -  -  -  -  	;Read forward through alpha data and inc color pointer if alpha is 1 
  355 D1:AEC3 -  -  -  -  sdcomp_traverse_line_data_loop:
  356 D1:AEC3 CB 09 -  -  	rrc c 
  357 D1:AEC5 D2 CA AE D1 	jp nc,sdcomp_traverse_line_data_alpha_inc_skip ;if not reached end of byte, skip
  358 D1:AEC9 23 -  -  -  	inc hl ;have reached end of alpha byte, inc hl 
  359 D1:AECA -  -  -  -  sdcomp_traverse_line_data_alpha_inc_skip:
  360 D1:AECA 7E -  -  -  	ld a,(hl)
  361 D1:AECB A1 -  -  -  	and c ;read alpha data 
  362 D1:AECC -  -  -  -  sdcomp_no_alpha_3 .equ $ ;jp c for no alpha sprites to always inc color 
  363 D1:AECC CA E2 AE D1 	jp z,sdcomp_traverse_line_data_color_skip;if no alpha skip incrementing color. 
  364 D1:AED0 D9 -  -  -  	exx;out of shadow 
  365 D1:AED1 -  -  -  -  sdcomp_traverse_1bpp .equ $ + 1
  366 D1:AED1 CB 09 -  -  	rrc c ;rotate mask
  367 D1:AED3 -  -  -  -  sdcomp_traverse_2bpp .equ $ + 1
  368 D1:AED3 CB 09 -  -  	rrc c ;replace with rrc a for 1bpc (not nop because rrc c is 2 byte operation)
  369 D1:AED5 -  -  -  -  sdcomp_traverse_3bpp .equ $ + 1
  370 D1:AED5 CB 09 -  -  	rrc c;rrc a for 2bpc
  371 D1:AED7 -  -  -  -  sdcomp_traverse_4bpp .equ $ + 1
  372 D1:AED7 CB 09 -  -  	rrc c
  373 D1:AED9 -  -  -  -  	
  374 D1:AED9 -  -  -  -  	;check if end of byte was reached during rotations
  375 D1:AED9 79 -  -  -  	ld a,c
  376 D1:AEDA -  -  -  -  sdcomp_traverse_bit_check .equ $ + 1
  377 D1:AEDA E6 F0 -  -  	and %11110000 ; 4bpc = 11110000 3bpc = 11100000, 2bpc 11000000 1bpc 10000000 TODO 
  378 D1:AEDC CA E1 AE D1 	jp z,sdcomp_traverse_line_data_color_inc_skip
  379 D1:AEE0 23 -  -  -  	inc hl ;inc hl if end of byte was reached 
  380 D1:AEE1 -  -  -  -  sdcomp_traverse_line_data_color_inc_skip:
  381 D1:AEE1 D9 -  -  -  	exx ;toshadow
  382 D1:AEE2 -  -  -  -  sdcomp_traverse_line_data_color_skip:
  383 D1:AEE2 1D -  -  -  	dec e ;e holds sprite width 
  384 D1:AEE3 C2 C3 AE D1 	jp nz,sdcomp_traverse_line_data_loop ;loop until end of line reached 
  385 D1:AEE7 D1 -  -  -  	pop de  ;back to write location 
  386 D1:AEE8 -  -  -  -  	;set new end of line pointers 
  387 D1:AEE8 22 BA AE D1 	ld (sdcomp_alpha_data_line_end_byte),hl
  388 D1:AEEC 79 -  -  -  	ld a,c
  389 D1:AEED 32 BE AE D1 	ld (sdcomp_alpha_data_line_end_mask),a
  390 D1:AEF1 D9 -  -  -  	exx ;out
  391 D1:AEF2 22 B3 AE D1 	ld (sdcomp_color_data_line_end_byte),hl
  392 D1:AEF6 79 -  -  -  	ld a,c 
  393 D1:AEF7 32 B7 AE D1 	ld (sdcomp_color_data_line_end_mask),a
  394 D1:AEFB C9 -  -  -  	ret
  395 D1:AEFC -  -  -  -  
  396 D1:AEFC -  -  -  -  
  397 D1:AEFC -  -  -  -  
  398 D1:AEFC -  -  -  -  
  399 D1:AEFC -  -  -  -  
  400 D1:AEFC -  -  -  -  ;hl/c is color data, de is ldir write pos, b' is ldir length, not in shadow 
  401 D1:AEFC -  -  -  -  sdcomp_write_ldir_data_loop:
  402 D1:AEFC CD 16 AE D1 	call sdcomp_get_next_color
  403 D1:AF00 47 -  -  -  	ld b,a;first pixel
  404 D1:AF01 CD 0D AE D1 	call sdcomp_get_next_color_leading_nibble
  405 D1:AF05 B0 -  -  -  	or b
  406 D1:AF06 -  -  -  -  	
  407 D1:AF06 -  -  -  -  	
  408 D1:AF06 12 -  -  -  	ld (de),a;write color data
  409 D1:AF07 13 -  -  -  	inc de
  410 D1:AF08 D9 -  -  -  	exx;to shadow
  411 D1:AF09 05 -  -  -  	dec b;ldir length counter
  412 D1:AF0A D9 -  -  -  	exx
  413 D1:AF0B C2 FC AE D1 	jp nz,sdcomp_write_ldir_data_loop
  414 D1:AF0F C9 -  -  -  	ret
  415 D1:AF10 -  -  -  -  	
  416 D1:AF10 -  -  -  -  
  417 D1:AF10 -  -  -  -  ;Not in shadow, a holds alpha data pair, writes color and mask data to output 
  418 D1:AF10 -  -  -  -  sdcomp_write_leading_or_end_pixels:
  419 D1:AF10 D5 -  -  -  	push de ;output location	
  420 D1:AF11 47 -  -  -  	ld b,a;save for later
  421 D1:AF12 CB 67 -  -  	bit 4,a ;check if first pixel has color 
  422 D1:AF14 3E 00 -  -  	ld a,0
  423 D1:AF16 16 FF -  -  	ld d,%11111111;pixel data mask assuming no colors 
  424 D1:AF18 CA 22 AF D1 	jp z,sdcomp_leading_pixel_first_skip
  425 D1:AF1C -  -  -  -  	;has first color
  426 D1:AF1C 16 F0 -  -  	ld d,%11110000;save second pixel of bg 
  427 D1:AF1E CD 16 AE D1 	call sdcomp_get_next_color
  428 D1:AF22 -  -  -  -  sdcomp_leading_pixel_first_skip:
  429 D1:AF22 -  -  -  -  	;a is either $00 or $0color1
  430 D1:AF22 -  -  -  -  	
  431 D1:AF22 1E FF -  -  	ld e,%11111111;assuming no colors
  432 D1:AF24 -  -  -  -  	
  433 D1:AF24 CB 40 -  -  	bit 0,b;check second pixel alpha
  434 D1:AF26 47 -  -  -  	ld b,a;save for later 
  435 D1:AF27 3E 00 -  -  	ld a,0
  436 D1:AF29 CA 33 AF D1 	jp z,sdcomp_leading_pixel_second_skip;
  437 D1:AF2D -  -  -  -  	;has second color 
  438 D1:AF2D CD 0D AE D1 	call sdcomp_get_next_color_leading_nibble
  439 D1:AF31 -  -  -  -  	;a = color2 0 
  440 D1:AF31 1E 0F -  -  	ld e,%00001111;save first pixel of bg
  441 D1:AF33 -  -  -  -  	
  442 D1:AF33 -  -  -  -  sdcomp_leading_pixel_second_skip:
  443 D1:AF33 -  -  -  -  	;a is either 00 or c2 0 
  444 D1:AF33 -  -  -  -  	;b is either 00 or 0 c1 
  445 D1:AF33 B0 -  -  -  	or b 
  446 D1:AF34 47 -  -  -  	ld b,a;final color data
  447 D1:AF35 7A -  -  -  	ld a,d 
  448 D1:AF36 A3 -  -  -  	and e ;final mask data 
  449 D1:AF37 -  -  -  -  	
  450 D1:AF37 D1 -  -  -  	pop de;return to pointer 
  451 D1:AF38 -  -  -  -  	
  452 D1:AF38 12 -  -  -  	ld (de),a;write mask data 
  453 D1:AF39 13 -  -  -  	inc de 
  454 D1:AF3A 78 -  -  -  	ld a,b;color data 
  455 D1:AF3B 12 -  -  -  	ld (de),a;write color data 
  456 D1:AF3C -  -  -  -  	
  457 D1:AF3C -  -  -  -  	
  458 D1:AF3C -  -  -  -  	
  459 D1:AF3C CD 20 AA D1 	call write_a_to_ram
  460 D1:AF40 -  -  -  -  	
  461 D1:AF40 13 -  -  -  	inc de 
  462 D1:AF41 C9 -  -  -  	ret 
  463 D1:AF42 -  -  -  -  
  464 D1:AF42 -  -  -  -  
  465 D1:AF42 -  -  -  -  
  466 D1:AF42 -  -  -  -  ;ENTRY POINT 
  467 D1:AF42 -  -  -  -  
  468 D1:AF42 -  -  -  -  
  469 D1:AF42 -  -  -  -  ;hl = sprite data start, de = main data decompress location
  470 D1:AF42 -  -  -  -  sprite_decompress:
  471 D1:AF42 -  -  -  -  
  472 D1:AF42 -  -  -  -  
  473 D1:AF42 -  -  -  -  	;SETUP ===========================================================================================================
  474 D1:AF42 -  -  -  -  
  475 D1:AF42 -  -  -  -  	;SET UP BPC MODE AND ALPHA/NOALPHA
  476 D1:AF42 -  -  -  -  
  477 D1:AF42 -  -  -  -  	;HL pointing to flags registers
  478 D1:AF42 -  -  -  -  	;TODO set up bpc and alpha modes, Sprite type and offset. Write conditional jumps where needed
  479 D1:AF42 -  -  -  -  	;set bpc mode 
  480 D1:AF42 CB 7E -  -  	bit 7,(hl)
  481 D1:AF44 C4 09 B1 D1 	call nz,sdcomp_set_4bpc
  482 D1:AF48 CB 76 -  -  	bit 6,(hl)
  483 D1:AF4A C4 E2 B0 D1 	call nz,sdcomp_set_3bpc 
  484 D1:AF4E CB 6E -  -  	bit 5,(hl)
  485 D1:AF50 C4 C1 B0 D1 	call nz,sdcomp_set_2bpc 
  486 D1:AF54 CB 66 -  -  	bit 4,(hl)
  487 D1:AF56 C4 A6 B0 D1 	call nz,sdcomp_set_1bpc 
  488 D1:AF5A CB 5E -  -  	bit 3,(hl)
  489 D1:AF5C C4 91 B0 D1 	call nz,sdcomp_set_0bpc 
  490 D1:AF60 CB 56 -  -  	bit 2,(hl)
  491 D1:AF62 C4 30 B1 D1 	call nz,sdcomp_set_noalpha
  492 D1:AF66 -  -  -  -  	
  493 D1:AF66 -  -  -  -  	
  494 D1:AF66 -  -  -  -  	;write height or width(BG) data to decompressed sprite 
  495 D1:AF66 -  -  -  -  	
  496 D1:AF66 23 -  -  -  	inc hl ;hl points to width in px 
  497 D1:AF67 -  -  -  -  	
  498 D1:AF67 -  -  -  -  	
  499 D1:AF67 7E -  -  -  	ld a,(hl) 
  500 D1:AF68 32 C1 AE D1 	ld (sdcomp_sprite_width),a ;TODO set width in required locations
  501 D1:AF6C 32 E1 AD D1 	ld (sdcomp_sprite_width_2),a
  502 D1:AF70 47 -  -  -  	ld b,a;width
  503 D1:AF71 08 -  -  -  	ex af,af' ;'
  504 D1:AF72 78 -  -  -  	ld a,b;Number of alpha bits remaining in row
  505 D1:AF73 08 -  -  -  	ex af,af' ;' 
  506 D1:AF74 -  -  -  -  
  507 D1:AF74 -  -  -  -  	
  508 D1:AF74 -  -  -  -  	
  509 D1:AF74 -  -  -  -  	
  510 D1:AF74 -  -  -  -  	;Calculate number of bytes to skip between rows for gap length  
  511 D1:AF74 CB 38 -  -  	srl b;divide by 2
  512 D1:AF76 -  -  -  -  	
  513 D1:AF76 -  -  -  -  	
  514 D1:AF76 3E A0 -  -  	ld a,160
  515 D1:AF78 90 -  -  -  	sub b ;a holds 160 - width/2
  516 D1:AF79 32 F9 AF D1 	ld (sdcomp_gap_btwn_rows),a 
  517 D1:AF7D 7E -  -  -  	ld a,(hl);load width again
  518 D1:AF7E -  -  -  -  	
  519 D1:AF7E 47 -  -  -  	ld b,a 
  520 D1:AF7F -  -  -  -  	
  521 D1:AF7F 37 -  -  -  	scf
  522 D1:AF80 -  -  -  -  sdcomp_bg_1 .equ $
  523 D1:AF80 DA 86 AF D1 	jp c,sdcomp_bg_1_skip ;if not BG then skip
  524 D1:AF84 -  -  -  -  	
  525 D1:AF84 -  -  -  -  	;TODO calculate correct width data , add offset and rounded to even number
  526 D1:AF84 -  -  -  -  	
  527 D1:AF84 -  -  -  -  	;write width data to de
  528 D1:AF84 12 -  -  -  	ld (de), a 
  529 D1:AF85 13 -  -  -  	inc de 
  530 D1:AF86 -  -  -  -  sdcomp_bg_1_skip:
  531 D1:AF86 -  -  -  -  
  532 D1:AF86 23 -  -  -  	inc hl ;hl points to height 
  533 D1:AF87 7E -  -  -  	ld a,(hl);height
  534 D1:AF88 32 AE AD D1 	ld (sdcomp_lines_remaining),a ;write height to lines remaining counter
  535 D1:AF8C -  -  -  -  	
  536 D1:AF8C -  -  -  -  	
  537 D1:AF8C 37 -  -  -  	scf
  538 D1:AF8D -  -  -  -  sdcomp_bg_2 .equ $
  539 D1:AF8D D2 93 AF D1 	jp nc,sdcomp_bg_2_skip ; skip if BG
  540 D1:AF91 -  -  -  -  	
  541 D1:AF91 -  -  -  -  	
  542 D1:AF91 12 -  -  -  	ld (de), a ;write height to first byte of sprite data 
  543 D1:AF92 13 -  -  -  	inc de 
  544 D1:AF93 -  -  -  -  	
  545 D1:AF93 -  -  -  -  sdcomp_bg_2_skip:
  546 D1:AF93 -  -  -  -  	
  547 D1:AF93 23 -  -  -  	inc hl ;HL points to start of alpha data 
  548 D1:AF94 -  -  -  -  
  549 D1:AF94 E5 -  -  -  	push hl ;Save alpha data 
  550 D1:AF95 -  -  -  -  	
  551 D1:AF95 -  -  -  -  	
  552 D1:AF95 -  -  -  -  	;Need to find start of color data
  553 D1:AF95 -  -  -  -  	;at this point a = height, b = width 
  554 D1:AF95 -  -  -  -  	
  555 D1:AF95 37 -  -  -  	scf
  556 D1:AF96 -  -  -  -  	
  557 D1:AF96 -  -  -  -  sdcomp_noalpha_1 .equ $
  558 D1:AF96 D2 AF AF D1 	jp nc,sdcomp_noalpha_1_skip ; if no alpha skip this part
  559 D1:AF9A -  -  -  -  	
  560 D1:AF9A -  -  -  -  	;need to find number of pixels, div by 8 and skip that many bytes
  561 D1:AF9A -  -  -  -  	
  562 D1:AF9A E5 -  -  -  	push hl
  563 D1:AF9B 67 -  -  -  	ld h,a;height
  564 D1:AF9C 68 -  -  -  	ld l,b;width
  565 D1:AF9D ED 6C -  -  	mlt hl;number of pixels
  566 D1:AF9F -  -  -  -  	;rounds up to nearest multiple of 8
  567 D1:AF9F 2B -  -  -  	dec hl
  568 D1:AFA0 CB 3C -  -  	srl h
  569 D1:AFA2 CB 1D -  -  	rr l
  570 D1:AFA4 CB 3C -  -  	srl h
  571 D1:AFA6 CB 1D -  -  	rr l 
  572 D1:AFA8 CB 3C -  -  	srl h 
  573 D1:AFAA CB 1D -  -  	rr l 
  574 D1:AFAC 23 -  -  -  	inc hl 
  575 D1:AFAD C1 -  -  -  	pop bc ;initial hl location
  576 D1:AFAE -  -  -  -  	;add number of bytes to skip 
  577 D1:AFAE 09 -  -  -  	add hl,bc ;HL points to start of color data 
  578 D1:AFAF -  -  -  -  	
  579 D1:AFAF -  -  -  -  	
  580 D1:AFAF -  -  -  -  	
  581 D1:AFAF -  -  -  -  sdcomp_noalpha_1_skip:
  582 D1:AFAF -  -  -  -  
  583 D1:AFAF -  -  -  -  	
  584 D1:AFAF -  -  -  -  	;HL POINTING TO COLOR PALETTE DATA
  585 D1:AFAF -  -  -  -  
  586 D1:AFAF -  -  -  -  	
  587 D1:AFAF 47 -  -  -  	ld b,a ;save for after
  588 D1:AFB0 -  -  -  -  	;GET LOCAL PALETTE DATA
  589 D1:AFB0 -  -  -  -  	
  590 D1:AFB0 37 -  -  -  	scf 
  591 D1:AFB1 -  -  -  -  sdcomp_1bpc_1 .equ $ 
  592 D1:AFB1 D2 BB AF D1 	jp nc,sdcomp_1bpc_1_skip ;skip if not 1bpc or 2bpc or 3bpc
  593 D1:AFB5 -  -  -  -  	
  594 D1:AFB5 7E -  -  -  	ld a,(hl);color data 
  595 D1:AFB6 32 9B AE D1 	ld (sdcomp_indexed_color_data_1),a 
  596 D1:AFBA 23 -  -  -  	inc hl 
  597 D1:AFBB -  -  -  -  	
  598 D1:AFBB -  -  -  -  sdcomp_1bpc_1_skip:	
  599 D1:AFBB -  -  -  -  
  600 D1:AFBB -  -  -  -  
  601 D1:AFBB 37 -  -  -  	scf 
  602 D1:AFBC -  -  -  -  sdcomp_2bpc_1 .equ $ 
  603 D1:AFBC D2 C6 AF D1 	jp nc,sdcomp_2bpc_1_skip ;skip if not 2bpc or 3bpc
  604 D1:AFC0 -  -  -  -  	
  605 D1:AFC0 7E -  -  -  	ld a,(hl);color data 
  606 D1:AFC1 32 8F AE D1 	ld (sdcomp_indexed_color_data_2),a 
  607 D1:AFC5 23 -  -  -  	inc hl 
  608 D1:AFC6 -  -  -  -  	
  609 D1:AFC6 -  -  -  -  sdcomp_2bpc_1_skip:	
  610 D1:AFC6 -  -  -  -  
  611 D1:AFC6 -  -  -  -  
  612 D1:AFC6 37 -  -  -  	scf 
  613 D1:AFC7 -  -  -  -  sdcomp_3bpc_1 .equ $ 
  614 D1:AFC7 DA D7 AF D1 	jp c,sdcomp_3bpc_1_skip ;skip if not 3bpc
  615 D1:AFCB -  -  -  -  	
  616 D1:AFCB 7E -  -  -  	ld a,(hl);color data 
  617 D1:AFCC 32 7D AE D1 	ld (sdcomp_indexed_color_data_3),a 
  618 D1:AFD0 23 -  -  -  	inc hl 
  619 D1:AFD1 7E -  -  -  	ld a,(hl);color data 
  620 D1:AFD2 32 71 AE D1 	ld (sdcomp_indexed_color_data_4),a 
  621 D1:AFD6 23 -  -  -  	inc hl 
  622 D1:AFD7 -  -  -  -  	
  623 D1:AFD7 -  -  -  -  sdcomp_3bpc_1_skip:	
  624 D1:AFD7 -  -  -  -  
  625 D1:AFD7 -  -  -  -  	
  626 D1:AFD7 D5 -  -  -  	push de ;loops/line data location
  627 D1:AFD8 EB -  -  -  	ex de,hl
  628 D1:AFD9 78 -  -  -  	ld a,b
  629 D1:AFDA 01 00 00 00 	ld bc,0
  630 D1:AFDE 4F -  -  -  	ld c,a;height 
  631 D1:AFDF 09 -  -  -  	add hl,bc
  632 D1:AFE0 EB -  -  -  	ex de,hl;de points to data write location
  633 D1:AFE1 -  -  -  -  	
  634 D1:AFE1 -  -  -  -  	
  635 D1:AFE1 D9 -  -  -  	exx;in to shadow
  636 D1:AFE2 D1 -  -  -  	pop de 
  637 D1:AFE3 E1 -  -  -  	pop hl ;alpha data stored from earlier
  638 D1:AFE4 0E 80 -  -  	ld c,%10000000;alpha mask
  639 D1:AFE6 D9 -  -  -  	exx;out 
  640 D1:AFE7 0E 80 -  -  	ld c,%10000000;color mask
  641 D1:AFE9 -  -  -  -  	
  642 D1:AFE9 -  -  -  -  	;HL now points to pixel color data 
  643 D1:AFE9 -  -  -  -  	;HL' points to pixel alpha data 
  644 D1:AFE9 -  -  -  -  	;C holds color mask
  645 D1:AFE9 -  -  -  -  	;C' holds alpha mask
  646 D1:AFE9 -  -  -  -  	;DE' holds loops/line output data location
  647 D1:AFE9 -  -  -  -  	;DE holds main data output location
  648 D1:AFE9 -  -  -  -  	;A holds height
  649 D1:AFE9 -  -  -  -  	;A' holds bits remaining in row
  650 D1:AFE9 -  -  -  -  
  651 D1:AFE9 -  -  -  -  	;TODO jump to BG routine here
  652 D1:AFE9 -  -  -  -  	;END SETUP ======================================================================================================
  653 D1:AFE9 -  -  -  -  	
  654 D1:AFE9 -  -  -  -  	
  655 D1:AFE9 -  -  -  -  sdcomp_find_gap_length:
  656 D1:AFE9 -  -  -  -  	
  657 D1:AFE9 D9 -  -  -  	exx ;to shadow
  658 D1:AFEA 06 00 -  -  	ld b,0;00 pairs found
  659 D1:AFEC -  -  -  -  sdcomp_add_1_gap_length .equ $
  660 D1:AFEC 00 -  -  -  	nop 
  661 D1:AFED 3E 00 -  -  	ld a,0;nop
  662 D1:AFEF 32 EC AF D1 	ld (sdcomp_add_1_gap_length),a
  663 D1:AFF3 -  -  -  -  	
  664 D1:AFF3 -  -  -  -  sdcomp_find_gap_length_loop:
  665 D1:AFF3 -  -  -  -  
  666 D1:AFF3 37 -  -  -  	scf ;check for adding length between lines
  667 D1:AFF4 -  -  -  -  sdcomp_end_of_line_1 .equ $
  668 D1:AFF4 DA 08 B0 D1 	jp c, sdcomp_end_of_line_1_skip
  669 D1:AFF8 -  -  -  -  	
  670 D1:AFF8 -  -  -  -  	;End of alpha data for this line has been reached while searching for gap length,
  671 D1:AFF8 -  -  -  -  	;need to add 128-width/2 to b to account for screen wrap to next line
  672 D1:AFF8 -  -  -  -  	
  673 D1:AFF8 -  -  -  -  sdcomp_gap_btwn_rows .equ $ + 1
  674 D1:AFF8 3E 00 -  -  	ld a,0
  675 D1:AFFA 80 -  -  -  	add a,b
  676 D1:AFFB 47 -  -  -  	ld b,a
  677 D1:AFFC 3E DA -  -  	ld a, %11011010 ;jp c 
  678 D1:AFFE 32 F4 AF D1 	ld (sdcomp_end_of_line_1),a;Reset end of line flag 
  679 D1:B002 -  -  -  -  	
  680 D1:B002 3E AD -  -  	ld a,$AD;TEST
  681 D1:B004 CD 20 AA D1 	call write_a_to_ram;TEST
  682 D1:B008 -  -  -  -  	
  683 D1:B008 -  -  -  -  
  684 D1:B008 -  -  -  -  sdcomp_end_of_line_1_skip:
  685 D1:B008 CD E4 AD D1 	call sdcomp_get_next_alpha_pair
  686 D1:B00C CD 20 AA D1 	call write_a_to_ram
  687 D1:B010 04 -  -  -  	inc b 
  688 D1:B011 -  -  -  -  	
  689 D1:B011 F5 -  -  -  	push af ;TEST
  690 D1:B012 3E AB -  -  	ld a,$AB;TEST
  691 D1:B014 CD 20 AA D1 	call write_a_to_ram
  692 D1:B018 F1 -  -  -  	pop af ;TEST
  693 D1:B019 -  -  -  -  	
  694 D1:B019 B7 -  -  -  	or a
  695 D1:B01A CA F3 AF D1 	jp z,sdcomp_find_gap_length_loop
  696 D1:B01E -  -  -  -  	
  697 D1:B01E -  -  -  -  ;END OF GAP LENGTH LOOP =====================	
  698 D1:B01E -  -  -  -  	
  699 D1:B01E F5 -  -  -  	push af; save leading pixel alpha data 
  700 D1:B01F -  -  -  -  	;B holds number of 00 pairs + 1
  701 D1:B01F -  -  -  -  	
  702 D1:B01F 3E AA -  -  	ld a,$AA ;test
  703 D1:B021 CD 20 AA D1 	call write_a_to_ram
  704 D1:B025 78 -  -  -  	ld a,b ;test
  705 D1:B026 CD 20 AA D1 	call write_a_to_ram
  706 D1:B02A -  -  -  -  	
  707 D1:B02A -  -  -  -  	
  708 D1:B02A -  -  -  -  	
  709 D1:B02A -  -  -  -  	;INC LOOP/LINE count
  710 D1:B02A -  -  -  -  sdcomp_loops_per_line_counter .equ $ + 1
  711 D1:B02A 3E 00 -  -  	ld a,0;inc number of loops
  712 D1:B02C 3C -  -  -  	inc a 
  713 D1:B02D 32 2B B0 D1 	ld (sdcomp_loops_per_line_counter),a
  714 D1:B031 -  -  -  -  	
  715 D1:B031 -  -  -  -  	;Write gap length data to output
  716 D1:B031 78 -  -  -  	ld a,b 
  717 D1:B032 D9 -  -  -  	exx;out of shadow 
  718 D1:B033 12 -  -  -  	ld (de),a;GAP LENGTH 
  719 D1:B034 13 -  -  -  	inc de 
  720 D1:B035 D9 -  -  -  	exx;into shadow 	
  721 D1:B036 -  -  -  -  	
  722 D1:B036 -  -  -  -  	
  723 D1:B036 -  -  -  -  ;LEADING PIXELS ===================================================================================================
  724 D1:B036 F1 -  -  -  	pop af ;a holds leading pixel pair alpha data (FF,0F,F0)
  725 D1:B037 -  -  -  -  	
  726 D1:B037 D9 -  -  -  	exx;out of shadow
  727 D1:B038 CD 10 AF D1 	call sdcomp_write_leading_or_end_pixels
  728 D1:B03C D9 -  -  -  	exx;into shadow 
  729 D1:B03D -  -  -  -  	
  730 D1:B03D CD 2F AA D1 	call prgmpause
  731 D1:B041 -  -  -  -  	
  732 D1:B041 -  -  -  -  ;LDIR ==============================================================================================================	
  733 D1:B041 -  -  -  -  	;Count number of 11 pairs for LDIR section
  734 D1:B041 -  -  -  -  	;If end of line reached end loop 
  735 D1:B041 -  -  -  -  	
  736 D1:B041 -  -  -  -  sdcomp_ldir_start:
  737 D1:B041 06 00 -  -  	ld b,0; number of 11 pairs found
  738 D1:B043 -  -  -  -  sdcomp_ldir_loop:
  739 D1:B043 CD E4 AD D1 	call sdcomp_get_next_alpha_pair ;get alpha data
  740 D1:B047 04 -  -  -  	inc b 
  741 D1:B048 -  -  -  -  	
  742 D1:B048 37 -  -  -  	scf 
  743 D1:B049 -  -  -  -  sdcomp_end_of_line_2 .equ $ ;set when end of line reached 
  744 D1:B049 D2 53 B0 D1 	jp nc, sdcomp_ldir_loop_end
  745 D1:B04D -  -  -  -  	
  746 D1:B04D EE FF -  -  	xor %11111111;flip all bits 
  747 D1:B04F CA 43 B0 D1 	jp z, sdcomp_ldir_loop; if a is 0 means a was $FF 
  748 D1:B053 -  -  -  -  sdcomp_ldir_loop_end:
  749 D1:B053 -  -  -  -  
  750 D1:B053 EE FF -  -  	xor %11111111 ; flip back 
  751 D1:B055 05 -  -  -  	dec b 
  752 D1:B056 -  -  -  -  	;b holds 11 pairs found 
  753 D1:B056 -  -  -  -  	
  754 D1:B056 CA 7B B0 D1 	jp z,sdcomp_no_ldir;no pairs found,no ldir length
  755 D1:B05A B7 -  -  -  	or a
  756 D1:B05B C2 6C B0 D1 	jp nz,sdcomp_ldir_write;ends not in 00, has single ending pixel
  757 D1:B05F -  -  -  -  	
  758 D1:B05F -  -  -  -  	;ends in 00,ending pixels will be 11 
  759 D1:B05F -  -  -  -  	;must add 1 to next gap length, have already read first 00 TODO 
  760 D1:B05F 3E 04 -  -  	ld a,%00000100;inc b 
  761 D1:B061 32 EC AF D1 	ld (sdcomp_add_1_gap_length),a 
  762 D1:B065 3E FF -  -  	ld a,$ff;ending pixels 11
  763 D1:B067 -  -  -  -  	
  764 D1:B067 05 -  -  -  	dec b;reduce length by 1, final pair is end pixels
  765 D1:B068 CA 7B B0 D1 	jp z,sdcomp_no_ldir;no ldir length,ending pixels is 11 
  766 D1:B06C -  -  -  -  	;b holds ldir length 
  767 D1:B06C -  -  -  -  	
  768 D1:B06C -  -  -  -  	
  769 D1:B06C -  -  -  -  ;b holds ldir length, a holds ending pixels
  770 D1:B06C -  -  -  -  sdcomp_ldir_write:
  771 D1:B06C F5 -  -  -  	push af;save ending pixels
  772 D1:B06D 78 -  -  -  	ld a,b
  773 D1:B06E D9 -  -  -  	exx ;out 
  774 D1:B06F 12 -  -  -  	ld (de),a;write ldir length
  775 D1:B070 13 -  -  -  	inc de 
  776 D1:B071 CD FC AE D1 	call sdcomp_write_ldir_data_loop
  777 D1:B075 D9 -  -  -  	exx ;toshadow
  778 D1:B076 F1 -  -  -  	pop af;return ending pixels
  779 D1:B077 -  -  -  -  	
  780 D1:B077 -  -  -  -  	
  781 D1:B077 C3 83 B0 D1 	jp sdcomp_write_end_pixels
  782 D1:B07B -  -  -  -  sdcomp_no_ldir:;no ldir length, a holds ending pixels,00,10,01,11
  783 D1:B07B F5 -  -  -  	push af;save end pixels
  784 D1:B07C -  -  -  -  	
  785 D1:B07C D9 -  -  -  	exx;out of shadow
  786 D1:B07D 3E 00 -  -  	ld a,0
  787 D1:B07F 12 -  -  -  	ld (de),a 
  788 D1:B080 13 -  -  -  	inc de 
  789 D1:B081 D9 -  -  -  	exx 
  790 D1:B082 F1 -  -  -  	pop af;return ending pixels
  791 D1:B083 -  -  -  -  
  792 D1:B083 -  -  -  -  ;WRITE ENDING PIXELS ======================================================================================
  793 D1:B083 -  -  -  -  
  794 D1:B083 -  -  -  -  sdcomp_write_end_pixels:
  795 D1:B083 CD 10 AF D1 	call sdcomp_write_leading_or_end_pixels
  796 D1:B087 -  -  -  -  	
  797 D1:B087 37 -  -  -  	scf 
  798 D1:B088 -  -  -  -  sdcomp_end_reached_flag .equ $;check if end of sprite reached
  799 D1:B088 D2 90 B0 D1 	jp nc,sdcomp_end
  800 D1:B08C -  -  -  -  
  801 D1:B08C -  -  -  -  	
  802 D1:B08C C3 E9 AF D1 	jp sdcomp_find_gap_length 
  803 D1:B090 -  -  -  -  	
  804 D1:B090 -  -  -  -  sdcomp_end:
  805 D1:B090 C9 -  -  -  	ret 
  806 D1:B091 -  -  -  -  
  807 D1:B091 -  -  -  -  
  808 D1:B091 -  -  -  -  ;bit orders
  809 D1:B091 -  -  -  -  ;	noflip   flip 
  810 D1:B091 -  -  -  -  ;4bpp 3210 	 0123
  811 D1:B091 -  -  -  -  ;3bpp 210	 012
  812 D1:B091 -  -  -  -  ;2bpp 10	 01
  813 D1:B091 -  -  -  -  ;1bpp 0		 0
  814 D1:B091 -  -  -  -  
  815 D1:B091 -  -  -  -  
  816 D1:B091 -  -  -  -  sdcomp_set_0bpc:
  817 D1:B091 3E DA -  -  	ld a,%11011010;jp c
  818 D1:B093 32 1A AE D1 	ld (sdcomp_0bpc),a
  819 D1:B097 -  -  -  -  	
  820 D1:B097 32 BC AF D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
  821 D1:B09B 32 C7 AF D1 	ld (sdcomp_3bpc_1),a 
  822 D1:B09F -  -  -  -  	
  823 D1:B09F 3E D2 -  -  	ld a, %11010010 ;jp nc 
  824 D1:B0A1 32 B1 AF D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
  825 D1:B0A5 -  -  -  -  	
  826 D1:B0A5 C9 -  -  -  	ret 
  827 D1:B0A6 -  -  -  -  	
  828 D1:B0A6 -  -  -  -  sdcomp_set_1bpc:
  829 D1:B0A6 3E DA -  -  	ld a,%11011010;jp c
  830 D1:B0A8 32 2C AE D1 	ld (sdcomp_1bpc),a
  831 D1:B0AC -  -  -  -  	
  832 D1:B0AC 32 BC AF D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
  833 D1:B0B0 32 C7 AF D1 	ld (sdcomp_3bpc_1),a 
  834 D1:B0B4 -  -  -  -  	
  835 D1:B0B4 3E D2 -  -  	ld a, %11010010 ;jp nc 
  836 D1:B0B6 32 B1 AF D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
  837 D1:B0BA -  -  -  -  	
  838 D1:B0BA -  -  -  -  	
  839 D1:B0BA 3E C3 -  -  	ld a,%11000011 ;set 0,e
  840 D1:B0BC 32 2A AE D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
  841 D1:B0C0 -  -  -  -  	
  842 D1:B0C0 C9 -  -  -  	ret 
  843 D1:B0C1 -  -  -  -  
  844 D1:B0C1 -  -  -  -  sdcomp_set_2bpc:
  845 D1:B0C1 3E DA -  -  	ld a,%11011010;jp c
  846 D1:B0C3 32 3E AE D1 	ld (sdcomp_2bpc),a
  847 D1:B0C7 32 C7 AF D1 	ld (sdcomp_3bpc_1),a ;for setting local pallete data
  848 D1:B0CB -  -  -  -  	
  849 D1:B0CB 3E D2 -  -  	ld a, %11010010 ;jp nc 
  850 D1:B0CD 32 B1 AF D1 	ld (sdcomp_1bpc_1),a;for setting local pallete data
  851 D1:B0D1 32 BC AF D1 	ld (sdcomp_2bpc_1),a 
  852 D1:B0D5 -  -  -  -  	
  853 D1:B0D5 3E CB -  -  	ld a,%11001011 ;set 1,e
  854 D1:B0D7 32 2A AE D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
  855 D1:B0DB 3E C3 -  -  	ld a,%11000011 ;set 0,e
  856 D1:B0DD 32 3C AE D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
  857 D1:B0E1 -  -  -  -  	
  858 D1:B0E1 C9 -  -  -  	ret 
  859 D1:B0E2 -  -  -  -  
  860 D1:B0E2 -  -  -  -  sdcomp_set_3bpc:
  861 D1:B0E2 3E DA -  -  	ld a,%11011010;jp c
  862 D1:B0E4 32 50 AE D1 	ld (sdcomp_3bpc),a
  863 D1:B0E8 -  -  -  -  	
  864 D1:B0E8 3E D2 -  -  	ld a, %11010010 ;jp nc 
  865 D1:B0EA 32 B1 AF D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
  866 D1:B0EE 32 BC AF D1 	ld (sdcomp_2bpc_1),a 
  867 D1:B0F2 32 C7 AF D1 	ld (sdcomp_3bpc_1),a 
  868 D1:B0F6 -  -  -  -  	
  869 D1:B0F6 3E D3 -  -  	ld a,%11010011 ;set 2,e
  870 D1:B0F8 32 2A AE D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
  871 D1:B0FC 3E CB -  -  	ld a,%11001011 ;set 1,e
  872 D1:B0FE 32 3C AE D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
  873 D1:B102 3E C3 -  -  	ld a,%11000011 ;set 0,e
  874 D1:B104 32 4E AE D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
  875 D1:B108 -  -  -  -  	
  876 D1:B108 -  -  -  -  	
  877 D1:B108 C9 -  -  -  	ret 
  878 D1:B109 -  -  -  -  
  879 D1:B109 -  -  -  -  sdcomp_set_4bpc:
  880 D1:B109 3E DA -  -  	ld a,%11011010;jp c
  881 D1:B10B -  -  -  -  
  882 D1:B10B 32 B1 AF D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
  883 D1:B10F 32 BC AF D1 	ld (sdcomp_2bpc_1),a 
  884 D1:B113 32 C7 AF D1 	ld (sdcomp_3bpc_1),a 
  885 D1:B117 -  -  -  -  	
  886 D1:B117 -  -  -  -  	
  887 D1:B117 3E DB -  -  	ld a,%11011011 ;set 3,e
  888 D1:B119 32 2A AE D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
  889 D1:B11D 3E D3 -  -  	ld a,%11010011 ;set 2,e
  890 D1:B11F 32 3C AE D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
  891 D1:B123 3E CB -  -  	ld a,%11001011 ;set 1,e
  892 D1:B125 32 4E AE D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
  893 D1:B129 3E C3 -  -  	ld a,%11000011 ;set 0,e
  894 D1:B12B 32 60 AE D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
  895 D1:B12F -  -  -  -  	
  896 D1:B12F -  -  -  -  	
  897 D1:B12F C9 -  -  -  	ret 
  898 D1:B130 -  -  -  -  sdcomp_set_noalpha:
  899 D1:B130 C9 -  -  -  	ret
  900 D1:B131 -  -  -  -  
  901 D1:B131 -  -  -  -  
  902 D1:B131 -  -  -  -  sdcomp_set_offset:
  903 D1:B131 -  -  -  -  
  904 D1:B131 -  -  -  -  
  905 D1:B131 -  -  -  -  sdcomp_set_flip:
  906 D1:B131 -  -  -  -  
  907 D1:B131 -  -  -  -  
  908 D1:B131 -  -  -  -  
  909 D1:B131 -  -  -  -  
  910 D1:B131 -  -  -  -  
  911 D1:B131 -  -  -  -  
  912 D1:B131 -  -  -  -  
  913 D1:B131 -  -  -  -  
  914 D1:B131 -  -  -  -  
  915 D1:B131 -  -  -  -  
Listing for file "ascent.asm"
  265 D1:B131 -  -  -  -  #include "drawFG.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFG.txt"
    1 D1:B131 -  -  -  -  
    2 D1:B131 -  -  -  -  
    3 D1:B131 -  -  -  -  draw_mg:
    4 D1:B131 2A 40 AA D1 	ld hl,(draw_buffer)
    5 D1:B135 22 FF B1 D1 	ld (dfgs_vram_top_1),hl
    6 D1:B139 22 65 B2 D1 	ld (dfgs_vram_top_2),hl
    7 D1:B13D 01 60 95 00 	ld bc,160*239
    8 D1:B141 09 -  -  -  	add hl,bc
    9 D1:B142 22 D3 B2 D1 	ld (dfgs_vram_bottom_1),hl 
   10 D1:B146 22 A2 B2 D1 	ld (dfgs_vram_bottom_2),hl 
   11 D1:B14A 22 39 B3 D1 	ld (dfgs_vram_bottom_3),hl 
   12 D1:B14E 22 67 B3 D1 	ld (dfgs_vram_bottom_4),hl 
   13 D1:B152 -  -  -  -  	
   14 D1:B152 2A 3A AA D1 	ld hl,(cam_pos)
   15 D1:B156 CB 3C -  -  	srl h
   16 D1:B158 CB 1D -  -  	rr l;div by 2
   17 D1:B15A 01 EF 00 00 	ld bc,239
   18 D1:B15E 09 -  -  -  	add hl,bc 
   19 D1:B15F 7D -  -  -  	ld a,l ;lsb cam pos 
   20 D1:B160 32 E5 B1 D1 	ld (dfgs_cam_height_1),a
   21 D1:B164 32 43 B2 D1 	ld (dfgs_cam_height_2),a
   22 D1:B168 32 18 B3 D1 	ld (dfgs_cam_height_3),a
   23 D1:B16C -  -  -  -  	
   24 D1:B16C 01 00 00 00 	ld bc,0
   25 D1:B170 4C -  -  -  	ld c,h;msb ccam pos 
   26 D1:B171 0C -  -  -  	inc c 
   27 D1:B172 21 55 C6 D1 	ld hl,MG_Data_frame_table
   28 D1:B176 09 -  -  -  	add hl,bc
   29 D1:B177 09 -  -  -  	add hl,bc 
   30 D1:B178 09 -  -  -  	add hl,bc 	
   31 D1:B179 ED 27 -  -  	ld hl,(hl);upper frame 
   32 D1:B17B -  -  -  -  	
   33 D1:B17B CD CB B1 D1 	call draw_fg_sprites
   34 D1:B17F C9 -  -  -  	ret
   35 D1:B180 -  -  -  -  
   36 D1:B180 -  -  -  -  
   37 D1:B180 -  -  -  -  draw_fg:
   38 D1:B180 2A 40 AA D1 	ld hl,(draw_buffer)
   39 D1:B184 22 FF B1 D1 	ld (dfgs_vram_top_1),hl
   40 D1:B188 22 65 B2 D1 	ld (dfgs_vram_top_2),hl
   41 D1:B18C 01 60 95 00 	ld bc,160*239
   42 D1:B190 09 -  -  -  	add hl,bc
   43 D1:B191 22 D3 B2 D1 	ld (dfgs_vram_bottom_1),hl 
   44 D1:B195 22 A2 B2 D1 	ld (dfgs_vram_bottom_2),hl 
   45 D1:B199 22 39 B3 D1 	ld (dfgs_vram_bottom_3),hl 
   46 D1:B19D 22 67 B3 D1 	ld (dfgs_vram_bottom_4),hl 
   47 D1:B1A1 -  -  -  -  	
   48 D1:B1A1 2A 3A AA D1 	ld hl,(cam_pos)
   49 D1:B1A5 01 EF 00 00 	ld bc,239
   50 D1:B1A9 09 -  -  -  	add hl,bc 
   51 D1:B1AA 7D -  -  -  	ld a,l ;lsb cam pos 
   52 D1:B1AB 32 E5 B1 D1 	ld (dfgs_cam_height_1),a
   53 D1:B1AF 32 43 B2 D1 	ld (dfgs_cam_height_2),a
   54 D1:B1B3 32 18 B3 D1 	ld (dfgs_cam_height_3),a
   55 D1:B1B7 -  -  -  -  	
   56 D1:B1B7 01 00 00 00 	ld bc,0
   57 D1:B1BB 4C -  -  -  	ld c,h;msb ccam pos 
   58 D1:B1BC 0C -  -  -  	inc c 
   59 D1:B1BD 21 75 BD D1 	ld hl,FG_Data_frame_table
   60 D1:B1C1 09 -  -  -  	add hl,bc
   61 D1:B1C2 09 -  -  -  	add hl,bc 
   62 D1:B1C3 09 -  -  -  	add hl,bc 	
   63 D1:B1C4 ED 27 -  -  	ld hl,(hl);upper frame 
   64 D1:B1C6 -  -  -  -  	
   65 D1:B1C6 CD CB B1 D1 	call draw_fg_sprites
   66 D1:B1CA C9 -  -  -  	ret
   67 D1:B1CB -  -  -  -  
   68 D1:B1CB -  -  -  -  
   69 D1:B1CB -  -  -  -  
   70 D1:B1CB -  -  -  -  
   71 D1:B1CB -  -  -  -  ;hl = upper frame data
   72 D1:B1CB -  -  -  -   
   73 D1:B1CB -  -  -  -  ;load cam height 123,vram top 12 vram bottom 1234
   74 D1:B1CB -  -  -  -  draw_fg_sprites:
   75 D1:B1CB -  -  -  -  	;UPPER FRAME, bottom of upper frame is not on screen, bottom of mid frame is on screen bottom of lower is not on screen
   76 D1:B1CB ED 17 -  -  	ld de,(hl)
   77 D1:B1CD ED 53 AE B3 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
   78 D1:B1D2 -  -  -  -  	
   79 D1:B1D2 11 00 00 00 	ld de,0
   80 D1:B1D6 23 -  -  -  	inc hl 
   81 D1:B1D7 23 -  -  -  	inc hl
   82 D1:B1D8 23 -  -  -  	inc hl;past data table 
   83 D1:B1D9 -  -  -  -  	;hl is number of elements
   84 D1:B1D9 08 -  -  -  	ex af,af' ;'
   85 D1:B1DA 7E -  -  -  	ld a,(hl);number of elements
   86 D1:B1DB 08 -  -  -  	ex af,af' ;'
   87 D1:B1DC 23 -  -  -  	inc hl 
   88 D1:B1DD -  -  -  -  	
   89 D1:B1DD -  -  -  -  	
   90 D1:B1DD -  -  -  -  dfgs_upper_loop:
   91 D1:B1DD 7E -  -  -  	ld a,(hl);sprite y value 
   92 D1:B1DE 23 -  -  -  	inc hl 
   93 D1:B1DF 96 -  -  -  	sub (hl);subtract height
   94 D1:B1E0 D2 EE B1 D1 	jp nc,dfgs_upper_skip;if no carry,skip
   95 D1:B1E4 -  -  -  -  	
   96 D1:B1E4 -  -  -  -  dfgs_cam_height_1 .equ $ + 1
   97 D1:B1E4 D6 00 -  -  	sub 0 ;subtract camera height lsb 
   98 D1:B1E6 DA FC B1 D1 	jp c,dfgs_upper_cont
   99 D1:B1EA CA FC B1 D1 	jp z,dfgs_upper_cont 
  100 D1:B1EE -  -  -  -  dfgs_upper_skip:
  101 D1:B1EE 23 -  -  -  	inc hl 
  102 D1:B1EF 23 -  -  -  	inc hl
  103 D1:B1F0 23 -  -  -  	inc hl;to y 
  104 D1:B1F1 08 -  -  -  	ex af,af';'
  105 D1:B1F2 3D -  -  -  	dec a 
  106 D1:B1F3 CA 2E B2 D1 	jp z,dfgs_mid_start 
  107 D1:B1F7 08 -  -  -  	ex af,af';'
  108 D1:B1F8 C3 DD B1 D1 	jp dfgs_upper_loop
  109 D1:B1FC -  -  -  -  	
  110 D1:B1FC -  -  -  -  dfgs_upper_cont:
  111 D1:B1FC -  -  -  -  	
  112 D1:B1FC 86 -  -  -  	add a,(hl);add height
  113 D1:B1FD -  -  -  -  	;a now holds 0 indexed row, number of lines to skip drawing
  114 D1:B1FD D9 -  -  -  	exx
  115 D1:B1FE -  -  -  -  dfgs_vram_top_1 .equ $ + 1 
  116 D1:B1FE 11 00 00 00 	ld de,0;load top of vram 
  117 D1:B202 D9 -  -  -  	exx;out shadow
  118 D1:B203 -  -  -  -  	
  119 D1:B203 CD 94 B3 D1 	call dfgs_setup_draw;toshadow	
  120 D1:B207 -  -  -  -  	
  121 D1:B207 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  122 D1:B209 CA 15 B2 D1 	jp z,dfgs_upper_fast
  123 D1:B20D CD 3F AD D1 	call draw_slow_sprite_top_cut
  124 D1:B211 C3 19 B2 D1 	jp dfgs_upper_skip_2
  125 D1:B215 -  -  -  -  dfgs_upper_fast:
  126 D1:B215 CD BF AC D1 	call draw_fast_sprite_top_cut
  127 D1:B219 -  -  -  -  dfgs_upper_skip_2:
  128 D1:B219 D9 -  -  -  	exx ;out of shadow, hl holds index
  129 D1:B21A -  -  -  -  	
  130 D1:B21A 11 00 00 00 	ld de,0 
  131 D1:B21E 01 00 00 00 	ld bc,0
  132 D1:B222 23 -  -  -  	inc hl;to y 
  133 D1:B223 08 -  -  -  	ex af,af';'
  134 D1:B224 3D -  -  -  	dec a 
  135 D1:B225 CA 2E B2 D1 	jp z,dfgs_mid_start 
  136 D1:B229 08 -  -  -  	ex af,af';'
  137 D1:B22A C3 DD B1 D1 	jp dfgs_upper_loop
  138 D1:B22E -  -  -  -  	
  139 D1:B22E -  -  -  -  dfgs_mid_start:;MIDDLE FRAME, can be top cut, no cut, or bottom cut ===============================================
  140 D1:B22E -  -  -  -  	
  141 D1:B22E ED 17 -  -  	ld de,(hl)
  142 D1:B230 ED 53 AE B3 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  143 D1:B235 11 00 00 00 	ld de,0
  144 D1:B239 23 -  -  -  	inc hl 
  145 D1:B23A 23 -  -  -  	inc hl
  146 D1:B23B 23 -  -  -  	inc hl;past data table 
  147 D1:B23C 08 -  -  -  	ex af,af' ;'
  148 D1:B23D 7E -  -  -  	ld a,(hl);number of elements
  149 D1:B23E 08 -  -  -  	ex af,af' ;'
  150 D1:B23F 23 -  -  -  	inc hl 
  151 D1:B240 -  -  -  -  dfgs_mid_loop:
  152 D1:B240 7E -  -  -  	ld a,(hl);y val 
  153 D1:B241 23 -  -  -  	inc hl ;to height
  154 D1:B242 -  -  -  -  dfgs_cam_height_2 .equ $ + 1
  155 D1:B242 D6 00 -  -  	sub 0;subtract cam pos
  156 D1:B244 DA 94 B2 D1 	jp c,dfgs_mid_sprite_below ;sprite is below camera pos, either full or bottom cut 
  157 D1:B248 CA 94 B2 D1 	jp z,dfgs_mid_sprite_below 
  158 D1:B24C -  -  -  -  	;sprite start is above camera pos, top cut 
  159 D1:B24C BE -  -  -  	cp (hl);a holds numb lines below sprite y , compare to height
  160 D1:B24D DA 63 B2 D1 	jp c,dfgs_mid_above_cont
  161 D1:B251 CA 63 B2 D1 	jp z,dfgs_mid_above_cont
  162 D1:B255 -  -  -  -  dfgs_mid_skip:;sprite is entirely above or below cam pos 
  163 D1:B255 23 -  -  -  	inc hl 
  164 D1:B256 23 -  -  -  	inc hl
  165 D1:B257 23 -  -  -  	inc hl;to y 
  166 D1:B258 08 -  -  -  	ex af,af';'
  167 D1:B259 3D -  -  -  	dec a 
  168 D1:B25A CA 03 B3 D1 	jp z,dfgs_lower_start 
  169 D1:B25E 08 -  -  -  	ex af,af';'
  170 D1:B25F C3 40 B2 D1 	jp dfgs_mid_loop
  171 D1:B263 -  -  -  -  	
  172 D1:B263 -  -  -  -  dfgs_mid_above_cont:
  173 D1:B263 -  -  -  -  	;a = lines to skip 
  174 D1:B263 D9 -  -  -  	exx
  175 D1:B264 -  -  -  -  dfgs_vram_top_2 .equ $ + 1 
  176 D1:B264 11 00 00 00 	ld de,0
  177 D1:B268 D9 -  -  -  	exx
  178 D1:B269 -  -  -  -  	
  179 D1:B269 CD 94 B3 D1 	call dfgs_setup_draw;toshadow
  180 D1:B26D -  -  -  -  	
  181 D1:B26D CB 45 -  -  	bit 0,l 
  182 D1:B26F CA 7B B2 D1 	jp z,dfgs_mid_top_fast
  183 D1:B273 CD 3F AD D1 	call draw_slow_sprite_top_cut
  184 D1:B277 C3 7F B2 D1 	jp dfgs_mid_top_slow
  185 D1:B27B -  -  -  -  dfgs_mid_top_fast:
  186 D1:B27B CD BF AC D1 	call draw_fast_sprite_top_cut
  187 D1:B27F -  -  -  -  dfgs_mid_top_slow:
  188 D1:B27F D9 -  -  -  	exx;out shadwo
  189 D1:B280 11 00 00 00 	ld de,0 
  190 D1:B284 01 00 00 00 	ld bc,0
  191 D1:B288 23 -  -  -  	inc hl;to y 
  192 D1:B289 08 -  -  -  	ex af,af';'
  193 D1:B28A 3D -  -  -  	dec a 
  194 D1:B28B CA 03 B3 D1 	jp z,dfgs_lower_start 
  195 D1:B28F 08 -  -  -  	ex af,af';'
  196 D1:B290 C3 40 B2 D1 	jp dfgs_mid_loop
  197 D1:B294 -  -  -  -  
  198 D1:B294 -  -  -  -  dfgs_mid_sprite_below:;sprite start is = or below top of screen 
  199 D1:B294 -  -  -  -  	;can be full or bottom cut
  200 D1:B294 -  -  -  -  	;a holds distance of sprite below top of screen
  201 D1:B294 -  -  -  -  	;0 = top of screen 255 = 1 below ,254 = 2 below ... 17 = bottom of screen
  202 D1:B294 3D -  -  -  	dec a 
  203 D1:B295 D6 10 -  -  	sub 16;a holds dist from bottom
  204 D1:B297 DA 55 B2 D1 	jp c,dfgs_mid_skip
  205 D1:B29B BE -  -  -  	cp (hl);compare to height
  206 D1:B29C DA D1 B2 D1 	jp c,dfgs_mid_bottom_cut
  207 D1:B2A0 -  -  -  -  	
  208 D1:B2A0 -  -  -  -  	;full sprite
  209 D1:B2A0 D9 -  -  -  	exx
  210 D1:B2A1 -  -  -  -  dfgs_vram_bottom_2 .equ $ + 1
  211 D1:B2A1 11 00 00 00 	ld de,0
  212 D1:B2A5 D9 -  -  -  	exx
  213 D1:B2A6 CD 94 B3 D1 	call dfgs_setup_draw;toshadow
  214 D1:B2AA CB 45 -  -  	bit 0,l
  215 D1:B2AC CA B8 B2 D1 	jp z,dfgs_mid_full_fast
  216 D1:B2B0 CD 10 AD D1 	call draw_slow_sprite_full
  217 D1:B2B4 C3 BC B2 D1 	jp dfgs_mid_full_slow
  218 D1:B2B8 -  -  -  -  dfgs_mid_full_fast:
  219 D1:B2B8 CD F6 AC D1 	call draw_fast_sprite_full
  220 D1:B2BC -  -  -  -  dfgs_mid_full_slow:
  221 D1:B2BC D9 -  -  -  	exx
  222 D1:B2BD 11 00 00 00 	ld de,0 
  223 D1:B2C1 01 00 00 00 	ld bc,0
  224 D1:B2C5 23 -  -  -  	inc hl;to y 
  225 D1:B2C6 08 -  -  -  	ex af,af';'
  226 D1:B2C7 3D -  -  -  	dec a 
  227 D1:B2C8 CA 03 B3 D1 	jp z,dfgs_lower_start 
  228 D1:B2CC 08 -  -  -  	ex af,af';'
  229 D1:B2CD C3 40 B2 D1 	jp dfgs_mid_loop
  230 D1:B2D1 -  -  -  -  	
  231 D1:B2D1 -  -  -  -  	
  232 D1:B2D1 -  -  -  -  dfgs_mid_bottom_cut:
  233 D1:B2D1 D9 -  -  -  	exx
  234 D1:B2D2 -  -  -  -  dfgs_vram_bottom_1 .equ $ + 1
  235 D1:B2D2 11 00 00 00 	ld de,0
  236 D1:B2D6 D9 -  -  -  	exx
  237 D1:B2D7 CD 94 B3 D1 	call dfgs_setup_draw
  238 D1:B2DB 3C -  -  -  	inc a;for bottom cuts
  239 D1:B2DC CB 45 -  -  	bit 0,l 
  240 D1:B2DE CA EA B2 D1 	jp z,dfgs_mid_bottom_fast
  241 D1:B2E2 CD 74 AD D1 	call draw_slow_sprite_bottom_cut
  242 D1:B2E6 C3 EE B2 D1 	jp dfgs_mid_bottom_slow
  243 D1:B2EA -  -  -  -  dfgs_mid_bottom_fast:
  244 D1:B2EA CD AB AC D1 	call draw_fast_sprite_bottom_cut
  245 D1:B2EE -  -  -  -  dfgs_mid_bottom_slow:
  246 D1:B2EE D9 -  -  -  	exx
  247 D1:B2EF 11 00 00 00 	ld de,0 
  248 D1:B2F3 01 00 00 00 	ld bc,0
  249 D1:B2F7 23 -  -  -  	inc hl;to y 
  250 D1:B2F8 08 -  -  -  	ex af,af';'
  251 D1:B2F9 3D -  -  -  	dec a 
  252 D1:B2FA CA 03 B3 D1 	jp z,dfgs_lower_start 
  253 D1:B2FE 08 -  -  -  	ex af,af';'
  254 D1:B2FF C3 40 B2 D1 	jp dfgs_mid_loop
  255 D1:B303 -  -  -  -  	
  256 D1:B303 -  -  -  -  	
  257 D1:B303 -  -  -  -  	
  258 D1:B303 -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================	
  259 D1:B303 -  -  -  -  dfgs_lower_start:
  260 D1:B303 -  -  -  -  	
  261 D1:B303 ED 17 -  -  	ld de,(hl)
  262 D1:B305 ED 53 AE B3 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  263 D1:B30A 11 00 00 00 	ld de,0
  264 D1:B30E 23 -  -  -  	inc hl 
  265 D1:B30F 23 -  -  -  	inc hl
  266 D1:B310 23 -  -  -  	inc hl;past data table 
  267 D1:B311 -  -  -  -  	
  268 D1:B311 08 -  -  -  	ex af,af' ;'
  269 D1:B312 7E -  -  -  	ld a,(hl);number of elements
  270 D1:B313 08 -  -  -  	ex af,af' ;'
  271 D1:B314 23 -  -  -  	inc hl
  272 D1:B315 -  -  -  -  	
  273 D1:B315 3E EF -  -  	ld a,239
  274 D1:B317 -  -  -  -  dfgs_cam_height_3 .equ $ + 1 
  275 D1:B317 D6 00 -  -  	sub 0;cam pos 
  276 D1:B319 D8 -  -  -  	ret c;if bottom frame is offscreen 
  277 D1:B31A C8 -  -  -  	ret z 
  278 D1:B31B -  -  -  -  	;a holds distance of top line of lower frame from bottom of screen starting from 1
  279 D1:B31B 32 22 B3 D1 	ld (dfgs_lower_frame_height),a
  280 D1:B31F -  -  -  -  
  281 D1:B31F -  -  -  -  dfgs_lower_loop:
  282 D1:B31F 7E -  -  -  	ld a,(hl);y
  283 D1:B320 23 -  -  -  	inc hl
  284 D1:B321 -  -  -  -  dfgs_lower_frame_height .equ $ + 1
  285 D1:B321 C6 00 -  -  	add a,0;add frame height 
  286 D1:B323 DA 32 B3 D1 	jp c,dfgs_lower_cont;sprite onscreen
  287 D1:B327 -  -  -  -  dfgs_lower_skip:;sprite offscreen
  288 D1:B327 23 -  -  -  	inc hl
  289 D1:B328 23 -  -  -  	inc hl
  290 D1:B329 23 -  -  -  	inc hl;to y 
  291 D1:B32A 08 -  -  -  	ex af,af';'
  292 D1:B32B 3D -  -  -  	dec a 
  293 D1:B32C C8 -  -  -  	ret z
  294 D1:B32D 08 -  -  -  	ex af,af';'
  295 D1:B32E C3 1F B3 D1 	jp dfgs_lower_loop
  296 D1:B332 -  -  -  -  	
  297 D1:B332 -  -  -  -  dfgs_lower_cont:
  298 D1:B332 -  -  -  -  	;a holds sprite dist from bottom of screen, from 0
  299 D1:B332 BE -  -  -  	cp (hl);compare to height
  300 D1:B333 DA 65 B3 D1 	jp c,dfgs_lower_bottom_cut
  301 D1:B337 -  -  -  -  	
  302 D1:B337 -  -  -  -  	;full sprite 
  303 D1:B337 D9 -  -  -  	exx
  304 D1:B338 -  -  -  -  dfgs_vram_bottom_3 .equ $ + 1
  305 D1:B338 11 00 00 00 	ld de,0
  306 D1:B33C D9 -  -  -  	exx
  307 D1:B33D CD 94 B3 D1 	call dfgs_setup_draw
  308 D1:B341 CB 45 -  -  	bit 0,l
  309 D1:B343 CA 4F B3 D1 	jp z,dfgs_lower_full_fast
  310 D1:B347 CD 10 AD D1 	call draw_slow_sprite_full
  311 D1:B34B C3 53 B3 D1 	jp dfgs_lower_full_slow
  312 D1:B34F -  -  -  -  dfgs_lower_full_fast:
  313 D1:B34F CD F6 AC D1 	call draw_fast_sprite_full
  314 D1:B353 -  -  -  -  dfgs_lower_full_slow:
  315 D1:B353 D9 -  -  -  	exx
  316 D1:B354 11 00 00 00 	ld de,0 
  317 D1:B358 01 00 00 00 	ld bc,0
  318 D1:B35C 23 -  -  -  	inc hl;to y 
  319 D1:B35D 08 -  -  -  	ex af,af';'
  320 D1:B35E 3D -  -  -  	dec a 
  321 D1:B35F C8 -  -  -  	ret z
  322 D1:B360 08 -  -  -  	ex af,af';'
  323 D1:B361 C3 1F B3 D1 	jp dfgs_lower_loop
  324 D1:B365 -  -  -  -  	
  325 D1:B365 -  -  -  -  	
  326 D1:B365 -  -  -  -  dfgs_lower_bottom_cut:
  327 D1:B365 D9 -  -  -  	exx
  328 D1:B366 -  -  -  -  dfgs_vram_bottom_4 .equ $ + 1
  329 D1:B366 11 00 00 00 	ld de,0
  330 D1:B36A D9 -  -  -  	exx
  331 D1:B36B CD 94 B3 D1 	call dfgs_setup_draw
  332 D1:B36F 3C -  -  -  	inc a;for bottom cuts
  333 D1:B370 CB 45 -  -  	bit 0,l 
  334 D1:B372 CA 7E B3 D1 	jp z,dfgs_lower_bottom_fast
  335 D1:B376 CD 74 AD D1 	call draw_slow_sprite_bottom_cut
  336 D1:B37A C3 82 B3 D1 	jp dfgs_lower_bottom_slow
  337 D1:B37E -  -  -  -  dfgs_lower_bottom_fast:
  338 D1:B37E CD AB AC D1 	call draw_fast_sprite_bottom_cut
  339 D1:B382 -  -  -  -  dfgs_lower_bottom_slow:
  340 D1:B382 D9 -  -  -  	exx
  341 D1:B383 11 00 00 00 	ld de,0 
  342 D1:B387 01 00 00 00 	ld bc,0
  343 D1:B38B 23 -  -  -  	inc hl;to y 
  344 D1:B38C 08 -  -  -  	ex af,af';'
  345 D1:B38D 3D -  -  -  	dec a 
  346 D1:B38E C8 -  -  -  	ret z
  347 D1:B38F 08 -  -  -  	ex af,af';'
  348 D1:B390 C3 1F B3 D1 	jp dfgs_lower_loop
  349 D1:B394 -  -  -  -  	
  350 D1:B394 -  -  -  -  	
  351 D1:B394 -  -  -  -  	
  352 D1:B394 -  -  -  -  	
  353 D1:B394 -  -  -  -  	
  354 D1:B394 -  -  -  -  	
  355 D1:B394 -  -  -  -  	
  356 D1:B394 -  -  -  -  	
  357 D1:B394 -  -  -  -  	
  358 D1:B394 -  -  -  -  ;a holds distance from bottom of screen, starting from 0, or for top cut dist above screen = num lines to skip 
  359 D1:B394 -  -  -  -  ;(hl) = height 	
  360 D1:B394 -  -  -  -  ;de = initial vram, top for top cut, otherwise bottom
  361 D1:B394 -  -  -  -  ;returns hl = sprite data, de = vram position
  362 D1:B394 -  -  -  -  dfgs_setup_draw:
  363 D1:B394 23 -  -  -  	inc hl
  364 D1:B395 01 00 00 00 	ld bc,0
  365 D1:B399 4E -  -  -  	ld c,(hl); x pos
  366 D1:B39A 23 -  -  -  	inc hl;to index
  367 D1:B39B E5 -  -  -  	push hl
  368 D1:B39C C5 -  -  -  	push bc
  369 D1:B39D D9 -  -  -  	exx;toshadow
  370 D1:B39E C1 -  -  -  	pop bc
  371 D1:B39F 26 A0 -  -  	ld h,160
  372 D1:B3A1 6F -  -  -  	ld l,a
  373 D1:B3A2 ED 6C -  -  	mlt hl;subtract from vram
  374 D1:B3A4 37 -  -  -  	scf 
  375 D1:B3A5 3F -  -  -  	ccf
  376 D1:B3A6 EB -  -  -  	ex de,hl;hl holds vram
  377 D1:B3A7 ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  378 D1:B3A9 09 -  -  -  	add hl,bc;add x pos ;hl now holds sprite draw start pos 
  379 D1:B3AA EB -  -  -  	ex de,hl;put in de
  380 D1:B3AB E1 -  -  -  	pop hl;back to frame data 
  381 D1:B3AC 4E -  -  -  	ld c,(hl);sprite index
  382 D1:B3AD -  -  -  -  dfgs_sprite_pointers_1 .equ $ + 1	
  383 D1:B3AD 21 00 00 00 	ld hl,0 ;load sprite table 
  384 D1:B3B1 09 -  -  -  	add hl,bc
  385 D1:B3B2 09 -  -  -  	add hl,bc 
  386 D1:B3B3 09 -  -  -  	add hl,bc;move to sprite ptr
  387 D1:B3B4 -  -  -  -  	;call prgmpause
  388 D1:B3B4 ED 27 -  -  	ld hl,(hl);hl holds sprite data, if even = fast sprite 
  389 D1:B3B6 -  -  -  -  
  390 D1:B3B6 C9 -  -  -  	ret
  391 D1:B3B7 -  -  -  -  
  392 D1:B3B7 -  -  -  -  	
  393 D1:B3B7 -  -  -  -  	
  394 D1:B3B7 -  -  -  -  	
  395 D1:B3B7 -  -  -  -  	
  396 D1:B3B7 -  -  -  -  	
  397 D1:B3B7 -  -  -  -  	
  398 D1:B3B7 -  -  -  -  	
  399 D1:B3B7 -  -  -  -  	
  400 D1:B3B7 -  -  -  -  	
  401 D1:B3B7 -  -  -  -  	
  402 D1:B3B7 -  -  -  -  	
  403 D1:B3B7 -  -  -  -  	
Listing for file "ascent.asm"
  266 D1:B3B7 -  -  -  -  
  267 D1:B3B7 -  -  -  -  #include "levelData.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\levelData.txt"
    1 D1:B3B7 -  -  -  -  bg_sprite_pointers:;255 sprites max
    2 D1:B3B7 -  -  -  -  	;.dl lastSprite
    3 D1:B3B7 -  -  -  -  	;.dl lastSpritecopy
    4 D1:B3B7 -  -  -  -  	;.dl sprite2
    5 D1:B3B7 -  -  -  -  	;.dl sprite3
    6 D1:B3B7 -  -  -  -  
    7 D1:B3B7 -  -  -  -  
    8 D1:B3B7 -  -  -  -  
    9 D1:B3B7 -  -  -  -  
   10 D1:B3B7 -  -  -  -  bg_data_frame:
   11 D1:B3B7 -  -  -  -  	;.db sprite data table pointer
   12 D1:B3B7 -  -  -  -  	;.db y (lsb) ,height-1,x,index(0 indicates end of data)
   13 D1:B3B7 -  -  -  -  	
   14 D1:B3B7 -  -  -  -  
   15 D1:B3B7 -  -  -  -  bg_sprite_pointers_1:
   16 D1:B3B7 -  -  -  -  	;.dl testBG1
   17 D1:B3B7 -  -  -  -  	;.dl testBG1;h = 7
   18 D1:B3B7 -  -  -  -  	;.dl testBG2;h = 5
   19 D1:B3B7 -  -  -  -  	;.dl testBG3;h = 0
   20 D1:B3B7 -  -  -  -  	;.dl testBG4
   21 D1:B3B7 -  -  -  -  
   22 D1:B3B7 -  -  -  -  bg_data_frame_0:
   23 D1:B3B7 B7 B3 D1 -  	.dl bg_sprite_pointers_1 
   24 D1:B3BA C8 07 05 00 	.db 200,7,5,0
   25 D1:B3BE -  -  -  -  	;upper 
   26 D1:B3BE -  -  -  -  bg_data_frame_1:
   27 D1:B3BE B7 B3 D1 -  	.dl bg_sprite_pointers_1
   28 D1:B3C1 C8 07 05 01 	.db 200,7,5,1
   29 D1:B3C5 64 07 05 01 	.db 100,7,5,1
   30 D1:B3C9 08 07 05 01 	.db 8,7,5,1
   31 D1:B3CD 07 07 0A 01 	.db 7,7,10,1
   32 D1:B3D1 06 07 0F 01 	.db 6,7,15,1;X
   33 D1:B3D5 05 07 14 01 	.db 5,7,20,1;X
   34 D1:B3D9 05 05 19 02 	.db 5,5,25,2
   35 D1:B3DD 04 05 1E 02 	.db 4,5,30,2;X
   36 D1:B3E1 03 05 23 02 	.db 3,5,35,2;X
   37 D1:B3E5 00 05 28 02 	.db 0,5,40,2;X
   38 D1:B3E9 00 00 2D 03 	.db 0,0,45,3
   39 D1:B3ED 0A 00 32 03 	.db 10,0,50,3
   40 D1:B3F1 32 07 05 00 	.db 50,7,5,0;end 
   41 D1:B3F5 -  -  -  -  	
   42 D1:B3F5 -  -  -  -  bg_data_frame_2:
   43 D1:B3F5 B7 B3 D1 -  	.dl bg_sprite_pointers_1
   44 D1:B3F8 FF 07 3C 01 	.db 255,7,60,1
   45 D1:B3FC FE 07 41 01 	.db 254,7,65,1
   46 D1:B400 64 05 46 02 	.db 100,5,70,2
   47 D1:B404 64 00 4B 03 	.db 100,0,75,3
   48 D1:B408 32 07 50 00 	.db 50,7,80,0
   49 D1:B40C -  -  -  -  	
   50 D1:B40C -  -  -  -  	
Listing for file "ascent.asm"
  268 D1:B40C -  -  -  -  #include "FGLevelData.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\FGLevelData.txt"
    1 D1:B40C -  -  -  -  
    2 D1:B40C -  -  -  -  FG_sprite_table_1:
    3 D1:B40C -  -  -  -  	;.dl fg_sprite_1;9*4
    4 D1:B40C -  -  -  -  	;.dl fg_sprite_1
    5 D1:B40C -  -  -  -  	;.dl fg_sprite_2;8*8
    6 D1:B40C -  -  -  -  	;.dl fg_sprite_3;8*8 fast
    7 D1:B40C -  -  -  -  	;.dl fg_sprite_4;8*8 fast 
    8 D1:B40C -  -  -  -  	
    9 D1:B40C -  -  -  -  
   10 D1:B40C -  -  -  -  
   11 D1:B40C -  -  -  -  
   12 D1:B40C -  -  -  -  
   13 D1:B40C -  -  -  -  FG_Frame_2:
   14 D1:B40C 0C B4 D1 -  	.dl FG_sprite_table_1
   15 D1:B40F 03 03 00 01 	.db 3,3,0,1
   16 D1:B413 02 03 05 01 	.db 2,3,5,1;x
   17 D1:B417 01 03 0A 01 	.db 1,3,10,1;x
   18 D1:B41B 02 07 0F 02 	.db 2,7,15,2;x
   19 D1:B41F 32 07 14 02 	.db 50,7,20,2
   20 D1:B423 1E 07 19 03 	.db 30,7,25,3
   21 D1:B427 00 07 1E 03 	.db 0,7,30,3;x
   22 D1:B42B 05 07 23 03 	.db 5,7,35,3;x
   23 D1:B42F 03 07 28 04 	.db 3,7,40,4;x
   24 D1:B433 00 03 2D 00 	.db 0,3,45,0;x
   25 D1:B437 -  -  -  -  
   26 D1:B437 -  -  -  -  
   27 D1:B437 -  -  -  -  FG_Frame_1:
   28 D1:B437 -  -  -  -  	;.dl sprite table ptr
   29 D1:B437 -  -  -  -  	;.db y in frame, height-1, x, index 
   30 D1:B437 0C B4 D1 -  	.dl FG_sprite_table_1
   31 D1:B43A FF 03 3C 01 	.db 255,3,60,1
   32 D1:B43E FF 07 46 02 	.db 255,7,70,2
   33 D1:B442 FF 07 4B 03 	.db 255,7,75,3
   34 D1:B446 FF 07 50 04 	.db 255,7,80,4
   35 D1:B44A FE 03 55 01 	.db 254,3,85,1
   36 D1:B44E FE 07 5A 04 	.db 254,7,90,4
   37 D1:B452 C8 03 0A 01 	.db 200,3,10,1
   38 D1:B456 C8 07 0F 02 	.db 200,7,15,2
   39 D1:B45A C8 07 14 03 	.db 200,7,20,3
   40 D1:B45E 32 07 0A 02 	.db 50,7,10,2
   41 D1:B462 0F 07 50 03 	.db 15,7,80,3
   42 D1:B466 10 07 41 03 	.db 16,7,65,3
   43 D1:B46A 11 03 46 01 	.db 17,3,70,1
   44 D1:B46E 09 07 0A 02 	.db 9,7,10,2
   45 D1:B472 08 07 14 02 	.db 8,7,20,2
   46 D1:B476 08 07 1E 03 	.db 8,7,30,3
   47 D1:B47A 07 07 23 02 	.db 7,7,35,2
   48 D1:B47E 06 07 28 02 	.db 6,7,40,2
   49 D1:B482 05 07 2D 02 	.db 5,7,45,2
   50 D1:B486 00 07 32 02 	.db 0,7,50,2
   51 D1:B48A 04 07 37 03 	.db 4,7,55,3
   52 D1:B48E 02 07 3C 04 	.db 2,7,60,4
   53 D1:B492 01 03 41 00 	.db 1,3,65,0
   54 D1:B496 -  -  -  -  	
   55 D1:B496 -  -  -  -  
   56 D1:B496 -  -  -  -  FG_Frame_0:
   57 D1:B496 0C B4 D1 -  	.dl FG_sprite_table_1
   58 D1:B499 FF 03 46 01 	.db 255,3,70,1
   59 D1:B49D FF 07 4B 02 	.db 255,7,75,2
   60 D1:B4A1 FF 07 5F 03 	.db 255,7,95,3
   61 D1:B4A5 FF 07 50 04 	.db 255,7,80,4
   62 D1:B4A9 FE 03 78 01 	.db 254,3,120,1
   63 D1:B4AD FE 07 7D 04 	.db 254,7,125,4
   64 D1:B4B1 C8 03 0A 01 	.db 200,3,10,1
   65 D1:B4B5 C8 07 0F 02 	.db 200,7,15,2
   66 D1:B4B9 C8 07 14 03 	.db 200,7,20,3
   67 D1:B4BD C8 03 00 00 	.db 200,3,0,0
   68 D1:B4C1 -  -  -  -  	
   69 D1:B4C1 -  -  -  -  	
   70 D1:B4C1 -  -  -  -  	
   71 D1:B4C1 -  -  -  -  
   72 D1:B4C1 -  -  -  -  	
   73 D1:B4C1 -  -  -  -  	
   74 D1:B4C1 -  -  -  -  	
   75 D1:B4C1 -  -  -  -  	
   76 D1:B4C1 -  -  -  -  	
   77 D1:B4C1 -  -  -  -  	
   78 D1:B4C1 -  -  -  -  	
Listing for file "ascent.asm"
  269 D1:B4C1 -  -  -  -  
  270 D1:B4C1 -  -  -  -  #include "TestingSpriteData.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\TestingSpriteData.txt"
    1 D1:B4C1 -  -  -  -  
    2 D1:B4C1 -  -  -  -  
    3 D1:B4C1 -  -  -  -  
    4 D1:B4C1 -  -  -  -  ;slow sprite, 2bpc, alpha  w = 8 h = 6
    5 D1:B4C1 -  -  -  -  Test_Sprite_1:
    6 D1:B4C1 20 -  -  -  	.db %00100000
    7 D1:B4C2 08 06 -  -  	.db 8,6
    8 D1:B4C4 03 -  -  -  	.db %00000011
    9 D1:B4C5 67 -  -  -  	.db %01100111
   10 D1:B4C6 80 -  -  -  	.db %10000000
   11 D1:B4C7 1F -  -  -  	.db %00011111
   12 D1:B4C8 FF -  -  -  	.db %11111111
   13 D1:B4C9 54 -  -  -  	.db %01010100
   14 D1:B4CA -  -  -  -  	
   15 D1:B4CA AB CD -  -  	.db $AB , $CD
   16 D1:B4CC -  -  -  -  	
   17 D1:B4CC 96 AF -  -  	.db %10010110 ,%10101111
   18 D1:B4CE 66 AF -  -  	.db %01100110 ,%10101111
   19 D1:B4D0 66 AF -  -  	.db %01100110 ,%10101111
   20 D1:B4D2 66 AF -  -  	.db %01100110 ,%10101111
   21 D1:B4D4 66 AF -  -  	.db %01100110 ,%10101111
   22 D1:B4D6 66 AF -  -  	.db %01100110 ,%10101111
   23 D1:B4D8 66 AF -  -  	.db %01100110 ,%10101111
   24 D1:B4DA -  -  -  -  	
   25 D1:B4DA -  -  -  -  	
   26 D1:B4DA -  -  -  -  	
Listing for file "ascent.asm"
  271 D1:B4DA -  -  -  -  #include "Sprite_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\Sprite_Data.txt"
    1 D1:B4DA -  -  -  -  Banana1:
    2 D1:B4DA 20 -  -  -  	.db %00100000
    3 D1:B4DB 18 18 -  -  	.db 24, 24
    4 D1:B4DD E0 00 00 FC 
              00 00 7E 00 	.db %11100000, %00000000, %00000000, %11111100, %00000000, %00000000, %01111110, %00000000
    5 D1:B4E5 00 7F 00 00 
              7F 80 00 7F 	.db %00000000, %01111111, %00000000, %00000000, %01111111, %10000000, %00000000, %01111111
    6 D1:B4ED 80 00 7F 80 
              00 7F C0 00 	.db %10000000, %00000000, %01111111, %10000000, %00000000, %01111111, %11000000, %00000000
    7 D1:B4F5 7F E0 00 7F 
              F0 00 7F F8 	.db %01111111, %11100000, %00000000, %01111111, %11110000, %00000000, %01111111, %11111000
    8 D1:B4FD 00 3F FC 00 
              3F FF 00 3F 	.db %00000000, %00111111, %11111100, %00000000, %00111111, %11111111, %00000000, %00111111
    9 D1:B505 FF C0 1F FF 
              F0 0F FF F8 	.db %11111111, %11000000, %00011111, %11111111, %11110000, %00001111, %11111111, %11111000
   10 D1:B50D 0F FF F8 07 
              FF FC 03 FF 	.db %00001111, %11111111, %11111000, %00000111, %11111111, %11111100, %00000011, %11111111
   11 D1:B515 FF 03 FF FF 
              01 FF FF 00 	.db %11111111, %00000011, %11111111, %11111111, %00000001, %11111111, %11111111, %00000000
   12 D1:B51D 7F FF 00 7F 
              FF 00 1F FE 	.db %01111111, %11111111, %00000000, %01111111, %11111111, %00000000, %00011111, %11111110
   13 D1:B525 -  -  -  -  
   14 D1:B525 01 20 -  -  	.db %00000001, %00100000
   15 D1:B527 -  -  -  -  
   16 D1:B527 00 01 40 95 
              AA 56 A9 56 	.db %00000000, %00000001, %01000000, %10010101, %10101010, %01010110, %10101001, %01010110
   17 D1:B52F AA 56 AA 56 
              AA 95 AA A9 	.db %10101010, %01010110, %10101010, %01010110, %10101010, %10010101, %10101010, %10101001
   18 D1:B537 5A AA A5 5A 
              5A A5 6A 6A 	.db %01011010, %10101010, %10100101, %01011010, %01011010, %10100101, %01101010, %01101010
   19 D1:B53F A5 6A 9A A9 
              55 A9 6A A9 	.db %10100101, %01101010, %10011010, %10101001, %01010101, %10101001, %01101010, %10101001
   20 D1:B547 56 A9 6A AA 
              55 AA AA AA 	.db %01010110, %10101001, %01101010, %10101010, %01010101, %10101010, %10101010, %10101010
   21 D1:B54F A5 5A A9 6A 
              AA 56 AA 5A 	.db %10100101, %01011010, %10101001, %01101010, %10101010, %01010110, %10101010, %01011010
   22 D1:B557 AA 56 AA AA 
              AA 95 5A AA 	.db %10101010, %01010110, %10101010, %10101010, %10101010, %10010101, %01011010, %10101010
   23 D1:B55F 56 AA 95 AA 
              A9 56 A5 AA 	.db %01010110, %10101010, %10010101, %10101010, %10101001, %01010110, %10100101, %10101010
   24 D1:B567 AA 96 95 6A 
              AA AA 55 55 	.db %10101010, %10010110, %10010101, %01101010, %10101010, %10101010, %01010101, %01010101
   25 D1:B56F 55 40 -  -  	.db %01010101, %01000000
   26 D1:B571 -  -  -  -  
   27 D1:B571 -  -  -  -  
   28 D1:B571 -  -  -  -  Banana1Large:
   29 D1:B571 20 -  -  -  	.db %00100000
   30 D1:B572 2E 2E -  -  	.db 46, 46
   31 D1:B574 FC 00 00 00 
              00 03 F0 00 	.db %11111100, %00000000, %00000000, %00000000, %00000000, %00000011, %11110000, %00000000
   32 D1:B57C 00 00 00 0F 
              FF 00 00 00 	.db %00000000, %00000000, %00000000, %00001111, %11111111, %00000000, %00000000, %00000000
   33 D1:B584 00 3F FC 00 
              00 00 00 3F 	.db %00000000, %00111111, %11111100, %00000000, %00000000, %00000000, %00000000, %00111111
   34 D1:B58C F0 00 00 00 
              00 FF C0 00 	.db %11110000, %00000000, %00000000, %00000000, %00000000, %11111111, %11000000, %00000000
   35 D1:B594 00 00 03 FF 
              C0 00 00 00 	.db %00000000, %00000000, %00000011, %11111111, %11000000, %00000000, %00000000, %00000000
   36 D1:B59C 0F FF 00 00 
              00 00 3F FF 	.db %00001111, %11111111, %00000000, %00000000, %00000000, %00000000, %00111111, %11111111
   37 D1:B5A4 00 00 00 00 
              FF FC 00 00 	.db %00000000, %00000000, %00000000, %00000000, %11111111, %11111100, %00000000, %00000000
   38 D1:B5AC 00 03 FF F0 
              00 00 00 0F 	.db %00000000, %00000011, %11111111, %11110000, %00000000, %00000000, %00000000, %00001111
   39 D1:B5B4 FF C0 00 00 
              00 3F FF 00 	.db %11111111, %11000000, %00000000, %00000000, %00000000, %00111111, %11111111, %00000000
   40 D1:B5BC 00 00 00 FF 
              FC 00 00 00 	.db %00000000, %00000000, %00000000, %11111111, %11111100, %00000000, %00000000, %00000000
   41 D1:B5C4 03 FF FC 00 
              00 00 0F FF 	.db %00000011, %11111111, %11111100, %00000000, %00000000, %00000000, %00001111, %11111111
   42 D1:B5CC F0 00 00 00 
              3F FF F0 00 	.db %11110000, %00000000, %00000000, %00000000, %00111111, %11111111, %11110000, %00000000
   43 D1:B5D4 00 00 FF FF 
              C0 00 00 03 	.db %00000000, %00000000, %11111111, %11111111, %11000000, %00000000, %00000000, %00000011
   44 D1:B5DC FF FF C0 00 
              00 0F FF FF 	.db %11111111, %11111111, %11000000, %00000000, %00000000, %00001111, %11111111, %11111111
   45 D1:B5E4 00 00 00 3F 
              FF FF C0 00 	.db %00000000, %00000000, %00000000, %00111111, %11111111, %11111111, %11000000, %00000000
   46 D1:B5EC 00 3F FF FF 
              00 00 00 FF 	.db %00000000, %00111111, %11111111, %11111111, %00000000, %00000000, %00000000, %11111111
   47 D1:B5F4 FF FF 00 00 
              03 FF FF FF 	.db %11111111, %11111111, %00000000, %00000000, %00000011, %11111111, %11111111, %11111111
   48 D1:B5FC 00 00 0F FF 
              FF FF 00 00 	.db %00000000, %00000000, %00001111, %11111111, %11111111, %11111111, %00000000, %00000000
   49 D1:B604 3F FF FF FF 
              00 00 FF FF 	.db %00111111, %11111111, %11111111, %11111111, %00000000, %00000000, %11111111, %11111111
   50 D1:B60C FF FF 00 00 
              FF FF FF FF 	.db %11111111, %11111111, %00000000, %00000000, %11111111, %11111111, %11111111, %11111111
   51 D1:B614 00 03 FF FF 
              FF FC 00 03 	.db %00000000, %00000011, %11111111, %11111111, %11111111, %11111100, %00000000, %00000011
   52 D1:B61C FF FF FF FC 
              00 0F FF FF 	.db %11111111, %11111111, %11111111, %11111100, %00000000, %00001111, %11111111, %11111111
   53 D1:B624 FF F0 00 3F 
              FF FF FF C0 	.db %11111111, %11110000, %00000000, %00111111, %11111111, %11111111, %11111111, %11000000
   54 D1:B62C 00 FF FF FF 
              FF 00 00 FF 	.db %00000000, %11111111, %11111111, %11111111, %11111111, %00000000, %00000000, %11111111
   55 D1:B634 FF FF FF 00 
              03 FF FF FF 	.db %11111111, %11111111, %11111111, %00000000, %00000011, %11111111, %11111111, %11111111
   56 D1:B63C FC 00 03 FF 
              FF FF FF 00 	.db %11111100, %00000000, %00000011, %11111111, %11111111, %11111111, %11111111, %00000000
   57 D1:B644 0F FF FF FF 
              FC 00 3F FF 	.db %00001111, %11111111, %11111111, %11111111, %11111100, %00000000, %00111111, %11111111
   58 D1:B64C FF FF F0 00 
              3F FF FF FF 	.db %11111111, %11111111, %11110000, %00000000, %00111111, %11111111, %11111111, %11111111
   59 D1:B654 C0 00 FF FF 
              FF FF 00 00 	.db %11000000, %00000000, %11111111, %11111111, %11111111, %11111111, %00000000, %00000000
   60 D1:B65C 3F FF FF FC 
              00 00 FF FF 	.db %00111111, %11111111, %11111111, %11111100, %00000000, %00000000, %11111111, %11111111
   61 D1:B664 FF F0 00 03 
              FF FF FF C0 	.db %11111111, %11110000, %00000000, %00000011, %11111111, %11111111, %11111111, %11000000
   62 D1:B66C 00 0F FF FF 
              FF 00 00 03 	.db %00000000, %00001111, %11111111, %11111111, %11111111, %00000000, %00000000, %00000011
   63 D1:B674 FF FF F0 00 
              00 0F FF FF 	.db %11111111, %11111111, %11110000, %00000000, %00000000, %00001111, %11111111, %11111111
   64 D1:B67C C0 -  -  -  	.db %11000000
   65 D1:B67D -  -  -  -  
   66 D1:B67D 01 20 -  -  	.db %00000001, %00100000
   67 D1:B67F -  -  -  -  
   68 D1:B67F 00 00 00 00 
              00 55 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %01010101, %00000000, %00000000
   69 D1:B687 55 00 0A 50 
              00 A5 5A AA 	.db %01010101, %00000000, %00001010, %01010000, %00000000, %10100101, %01011010, %10101010
   70 D1:B68F A5 5A AA A5 
              5A AA A5 55 	.db %10100101, %01011010, %10101010, %10100101, %01011010, %10101010, %10100101, %01010101
   71 D1:B697 AA AA 55 5A 
              AA A9 55 AA 	.db %10101010, %10101010, %01010101, %01011010, %10101010, %10101001, %01010101, %10101010
   72 D1:B69F AA 95 5A AA 
              A9 55 AA AA 	.db %10101010, %10010101, %01011010, %10101010, %10101001, %01010101, %10101010, %10101010
   73 D1:B6A7 A9 5A AA AA 
              95 5A AA AA 	.db %10101001, %01011010, %10101010, %10101010, %10010101, %01011010, %10101010, %10101010
   74 D1:B6AF A9 5A AA AA 
              A9 55 AA AA 	.db %10101001, %01011010, %10101010, %10101010, %10101001, %01010101, %10101010, %10101010
   75 D1:B6B7 AA A9 5A AA 
              AA AA 95 55 	.db %10101010, %10101001, %01011010, %10101010, %10101010, %10101010, %10010101, %01010101
   76 D1:B6BF AA 56 AA A9 
              55 AA 56 AA 	.db %10101010, %01010110, %10101010, %10101001, %01010101, %10101010, %01010110, %10101010
   77 D1:B6C7 A9 55 5A AA 
              6A AA A9 55 	.db %10101001, %01010101, %01011010, %10101010, %01101010, %10101010, %10101001, %01010101
   78 D1:B6CF AA A6 AA AA 
              95 55 AA A9 	.db %10101010, %10100110, %10101010, %10101010, %10010101, %01010101, %10101010, %10101001
   79 D1:B6D7 6A AA A9 55 
              5A AA 96 AA 	.db %01101010, %10101010, %10101001, %01010101, %01011010, %10101010, %10010110, %10101010
   80 D1:B6DF AA 95 55 55 
              AA 95 6A AA 	.db %10101010, %10010101, %01010101, %01010101, %10101010, %10010101, %01101010, %10101010
   81 D1:B6E7 AA 95 55 5A 
              A9 56 AA AA 	.db %10101010, %10010101, %01010101, %01011010, %10101001, %01010110, %10101010, %10101010
   82 D1:B6EF A9 55 55 AA 
              A9 56 AA AA 	.db %10101001, %01010101, %01010101, %10101010, %10101001, %01010110, %10101010, %10101010
   83 D1:B6F7 AA 95 55 AA 
              A9 56 AA AA 	.db %10101010, %10010101, %01010101, %10101010, %10101001, %01010110, %10101010, %10101010
   84 D1:B6FF AA 95 55 AA 
              AA AA AA AA 	.db %10101010, %10010101, %01010101, %10101010, %10101010, %10101010, %10101010, %10101010
   85 D1:B707 AA A5 55 AA 
              AA AA AA AA 	.db %10101010, %10100101, %01010101, %10101010, %10101010, %10101010, %10101010, %10101010
   86 D1:B70F AA A5 55 5A 
              AA A9 56 AA 	.db %10101010, %10100101, %01010101, %01011010, %10101010, %10101001, %01010110, %10101010
   87 D1:B717 AA AA 55 5A 
              AA A9 56 AA 	.db %10101010, %10101010, %01010101, %01011010, %10101010, %10101001, %01010110, %10101010
   88 D1:B71F AA AA 55 6A 
              AA A9 56 AA 	.db %10101010, %10101010, %01010101, %01101010, %10101010, %10101001, %01010110, %10101010
   89 D1:B727 AA A5 55 6A 
              AA A9 56 AA 	.db %10101010, %10100101, %01010101, %01101010, %10101010, %10101001, %01010110, %10101010
   90 D1:B72F AA A5 56 AA 
              AA AA AA AA 	.db %10101010, %10100101, %01010110, %10101010, %10101010, %10101010, %10101010, %10101010
   91 D1:B737 AA A5 55 56 
              AA AA A9 55 	.db %10101010, %10100101, %01010101, %01010110, %10101010, %10101010, %10101001, %01010101
   92 D1:B73F 6A AA AA 55 
              6A AA AA 95 	.db %01101010, %10101010, %10101010, %01010101, %01101010, %10101010, %10101010, %10010101
   93 D1:B747 56 AA AA A5 
              56 AA AA AA 	.db %01010110, %10101010, %10101010, %10100101, %01010110, %10101010, %10101010, %10101010
   94 D1:B74F 95 55 AA A5 
              56 AA AA AA 	.db %10010101, %01010101, %10101010, %10100101, %01010110, %10101010, %10101010, %10101010
   95 D1:B757 95 55 AA A5 
              5A AA AA AA 	.db %10010101, %01010101, %10101010, %10100101, %01011010, %10101010, %10101010, %10101010
   96 D1:B75F A5 5A A5 5A 
              AA AA AA A5 	.db %10100101, %01011010, %10100101, %01011010, %10101010, %10101010, %10101010, %10100101
   97 D1:B767 5A A5 55 6A 
              AA AA AA AA 	.db %01011010, %10100101, %01010101, %01101010, %10101010, %10101010, %10101010, %10101010
   98 D1:B76F A5 55 6A AA 
              AA AA AA A5 	.db %10100101, %01010101, %01101010, %10101010, %10101010, %10101010, %10101010, %10100101
   99 D1:B777 55 55 55 55 
              55 55 55 55 	.db %01010101, %01010101, %01010101, %01010101, %01010101, %01010101, %01010101, %01010101
  100 D1:B77F 55 55 55 -  	.db %01010101, %01010101, %01010101
  101 D1:B782 -  -  -  -  
  102 D1:B782 -  -  -  -  
  103 D1:B782 -  -  -  -  Shittlogo:
  104 D1:B782 20 -  -  -  	.db %00100000
  105 D1:B783 30 30 -  -  	.db 48, 48
  106 D1:B785 00 00 40 02 
              00 00 00 60 	.db %00000000, %00000000, %01000000, %00000010, %00000000, %00000000, %00000000, %01100000
  107 D1:B78D 70 0E 06 00 
              00 70 78 1E 	.db %01110000, %00001110, %00000110, %00000000, %00000000, %01110000, %01111000, %00011110
  108 D1:B795 0E 00 00 78 
              7C 3E 1E 00 	.db %00001110, %00000000, %00000000, %01111000, %01111100, %00111110, %00011110, %00000000
  109 D1:B79D 00 7E 7E 7E 
              7E 00 00 7F 	.db %00000000, %01111110, %01111110, %01111110, %01111110, %00000000, %00000000, %01111111
  110 D1:B7A5 FF FF FE 00 
              1C 3F FF FF 	.db %11111111, %11111111, %11111110, %00000000, %00011100, %00111111, %11111111, %11111111
  111 D1:B7AD FC 78 1F 9F 
              FF FF F9 F8 	.db %11111100, %01111000, %00011111, %10011111, %11111111, %11111111, %11111001, %11111000
  112 D1:B7B5 1F CF FF FF 
              F3 F8 07 FF 	.db %00011111, %11001111, %11111111, %11111111, %11110011, %11111000, %00000111, %11111111
  113 D1:B7BD FF FF F7 E0 
              03 FF FF FF 	.db %11111111, %11111111, %11110111, %11100000, %00000011, %11111111, %11111111, %11111111
  114 D1:B7C5 FF C0 01 FF 
              FF FF FF 80 	.db %11111111, %11000000, %00000001, %11111111, %11111111, %11111111, %11111111, %10000000
  115 D1:B7CD F8 FF FF FF 
              FF 1F FF FF 	.db %11111000, %11111111, %11111111, %11111111, %11111111, %00011111, %11111111, %11111111
  116 D1:B7D5 FF FF FE FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111110, %11111111, %11111111, %11111111, %11111111, %11111111
  117 D1:B7DD FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  118 D1:B7E5 7F FF FF FF 
              FF FE 1F FF 	.db %01111111, %11111111, %11111111, %11111111, %11111111, %11111110, %00011111, %11111111
  119 D1:B7ED FF FF FF F8 
              0F FF FF FF 	.db %11111111, %11111111, %11111111, %11111000, %00001111, %11111111, %11111111, %11111111
  120 D1:B7F5 FF F0 07 FF 
              FF FF FF C0 	.db %11111111, %11110000, %00000111, %11111111, %11111111, %11111111, %11111111, %11000000
  121 D1:B7FD 7F FF FF FF 
              FF FE FF FF 	.db %01111111, %11111111, %11111111, %11111111, %11111111, %11111110, %11111111, %11111111
  122 D1:B805 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  123 D1:B80D FF FF 7F FF 
              FF FF FF FE 	.db %11111111, %11111111, %01111111, %11111111, %11111111, %11111111, %11111111, %11111110
  124 D1:B815 3F FF FF FF 
              FF FC 0F FF 	.db %00111111, %11111111, %11111111, %11111111, %11111111, %11111100, %00001111, %11111111
  125 D1:B81D FF FF FF E0 
              1F FF FF FF 	.db %11111111, %11111111, %11111111, %11100000, %00011111, %11111111, %11111111, %11111111
  126 D1:B825 FF F8 7F FF 
              FF FF FF FE 	.db %11111111, %11111000, %01111111, %11111111, %11111111, %11111111, %11111111, %11111110
  127 D1:B82D FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  128 D1:B835 FF FF FF FF 
              67 FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %01100111, %11111111, %11111111, %11111111
  129 D1:B83D FF E6 0F FF 
              FF FF FF F0 	.db %11111111, %11100110, %00001111, %11111111, %11111111, %11111111, %11111111, %11110000
  130 D1:B845 1F FF FF FF 
              FF F8 3F FF 	.db %00011111, %11111111, %11111111, %11111111, %11111111, %11111000, %00111111, %11111111
  131 D1:B84D FF FF FF FC 
              3F FF FF FF 	.db %11111111, %11111111, %11111111, %11111100, %00111111, %11111111, %11111111, %11111111
  132 D1:B855 FF FC 23 FF 
              FF FF FF C4 	.db %11111111, %11111100, %00100011, %11111111, %11111111, %11111111, %11111111, %11000100
  133 D1:B85D 03 FF FF FF 
              FF C0 07 FF 	.db %00000011, %11111111, %11111111, %11111111, %11111111, %11000000, %00000111, %11111111
  134 D1:B865 FF FF FF E0 
              05 FF FF FF 	.db %11111111, %11111111, %11111111, %11100000, %00000101, %11111111, %11111111, %11111111
  135 D1:B86D FF E0 0F 3F 
              FF FF FC F0 	.db %11111111, %11100000, %00001111, %00111111, %11111111, %11111111, %11111100, %11110000
  136 D1:B875 0C 7F FF FF 
              FE 30 00 7F 	.db %00001100, %01111111, %11111111, %11111111, %11111110, %00110000, %00000000, %01111111
  137 D1:B87D FF FF FE 00 
              00 7F FF FF 	.db %11111111, %11111111, %11111110, %00000000, %00000000, %01111111, %11111111, %11111111
  138 D1:B885 FE 00 00 67 
              FE 7F E6 00 	.db %11111110, %00000000, %00000000, %01100111, %11111110, %01111111, %11100110, %00000000
  139 D1:B88D 00 07 DE 7B 
              E0 00 00 07 	.db %00000000, %00000111, %11011110, %01111011, %11100000, %00000000, %00000000, %00000111
  140 D1:B895 9E 79 E0 00 
              00 07 0C 30 	.db %10011110, %01111001, %11100000, %00000000, %00000000, %00000111, %00001100, %00110000
  141 D1:B89D E0 00 00 00 
              04 20 00 00 	.db %11100000, %00000000, %00000000, %00000000, %00000100, %00100000, %00000000, %00000000
  142 D1:B8A5 -  -  -  -  
  143 D1:B8A5 95 D0 -  -  	.db %10010101, %11010000
  144 D1:B8A7 -  -  -  -  
  145 D1:B8A7 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  146 D1:B8AF 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  147 D1:B8B7 00 00 00 05 
              AA 94 00 00 	.db %00000000, %00000000, %00000000, %00000101, %10101010, %10010100, %00000000, %00000000
  148 D1:B8BF 00 00 00 15 
              AA 95 40 00 	.db %00000000, %00000000, %00000000, %00010101, %10101010, %10010101, %01000000, %00000000
  149 D1:B8C7 00 00 00 05 
              55 6A A5 55 	.db %00000000, %00000000, %00000000, %00000101, %01010101, %01101010, %10100101, %01010101
  150 D1:B8CF 40 00 00 00 
              01 55 56 56 	.db %01000000, %00000000, %00000000, %00000000, %00000001, %01010101, %01010110, %01010110
  151 D1:B8D7 55 55 00 00 
              00 01 55 55 	.db %01010101, %01010101, %00000000, %00000000, %00000000, %00000001, %01010101, %01010101
  152 D1:B8DF A5 69 55 55 
              00 00 05 55 	.db %10100101, %01101001, %01010101, %01010101, %00000000, %00000000, %00000101, %01010101
  153 D1:B8E7 6A A5 6A A5 
              55 40 00 55 	.db %01101010, %10100101, %01101010, %10100101, %01010101, %01000000, %00000000, %01010101
  154 D1:B8EF 5A AA 95 AA 
              A9 55 40 00 	.db %01011010, %10101010, %10010101, %10101010, %10101001, %01010101, %01000000, %00000000
  155 D1:B8F7 05 56 AA A9 
              5A AA A5 54 	.db %00000101, %01010110, %10101010, %10101001, %01011010, %10101010, %10100101, %01010100
  156 D1:B8FF 00 00 00 05 
              56 AA AA 56 	.db %00000000, %00000000, %00000000, %00000101, %01010110, %10101010, %10101010, %01010110
  157 D1:B907 AA AA 55 40 
              00 00 00 15 	.db %10101010, %10101010, %01010101, %01000000, %00000000, %00000000, %00000000, %00010101
  158 D1:B90F 6A AA A9 5A 
              AA AA 55 40 	.db %01101010, %10101010, %10101001, %01011010, %10101010, %10101010, %01010101, %01000000
  159 D1:B917 00 00 00 55 
              AA AA A9 5A 	.db %00000000, %00000000, %00000000, %01010101, %10101010, %10101010, %10101001, %01011010
  160 D1:B91F AA AA 95 40 
              00 00 05 56 	.db %10101010, %10101010, %10010101, %01000000, %00000000, %00000000, %00000101, %01010110
  161 D1:B927 AA AA A5 6A 
              AA AA 55 40 	.db %10101010, %10101010, %10100101, %01101010, %10101010, %10101010, %01010101, %01000000
  162 D1:B92F 00 05 5A AA 
              AA A5 6A AA 	.db %00000000, %00000101, %01011010, %10101010, %10101010, %10100101, %01101010, %10101010
  163 D1:B937 AA 95 40 01 
              56 AA AA A9 	.db %10101010, %10010101, %01000000, %00000001, %01010110, %10101010, %10101010, %10101001
  164 D1:B93F 5A AA AA A5 
              50 15 5A AA 	.db %01011010, %10101010, %10101010, %10100101, %01010000, %00010101, %01011010, %10101010
  165 D1:B947 AA A5 6A AA 
              AA 95 50 05 	.db %10101010, %10100101, %01101010, %10101010, %10101010, %10010101, %01010000, %00000101
  166 D1:B94F 5A AA AA A9 
              5A AA AA A9 	.db %01011010, %10101010, %10101010, %10101001, %01011010, %10101010, %10101010, %10101001
  167 D1:B957 54 00 00 2A 
              AA AA AA 55 	.db %01010100, %00000000, %00000000, %00101010, %10101010, %10101010, %10101010, %01010101
  168 D1:B95F 6A AA AA AA 
              A0 00 00 2A 	.db %01101010, %10101010, %10101010, %10101010, %10100000, %00000000, %00000000, %00101010
  169 D1:B967 AA AA A5 55 
              56 AA AA AA 	.db %10101010, %10101010, %10100101, %01010101, %01010110, %10101010, %10101010, %10101010
  170 D1:B96F A0 00 00 AA 
              AA AA 55 55 	.db %10100000, %00000000, %00000000, %10101010, %10101010, %10101010, %01010101, %01010101
  171 D1:B977 56 AA AA AA 
              80 00 2A AA 	.db %01010110, %10101010, %10101010, %10101010, %10000000, %00000000, %00101010, %10101010
  172 D1:B97F AA 55 55 55 
              5A AA AA A0 	.db %10101010, %01010101, %01010101, %01010101, %01011010, %10101010, %10101010, %10100000
  173 D1:B987 02 AA AA 95 
              65 56 95 5A 	.db %00000010, %10101010, %10101010, %10010101, %01100101, %01010110, %10010101, %01011010
  174 D1:B98F AA AA 01 56 
              AA 95 A5 55 	.db %10101010, %10101010, %00000001, %01010110, %10101010, %10010101, %10100101, %01010101
  175 D1:B997 A5 56 AA 55 
              00 01 55 AA 	.db %10100101, %01010110, %10101010, %01010101, %00000000, %00000001, %01010101, %10101010
  176 D1:B99F 56 95 55 AA 
              55 A9 55 00 	.db %01010110, %10010101, %01010101, %10101010, %01010101, %10101001, %01010101, %00000000
  177 D1:B9A7 00 01 56 A5 
              6A 55 55 A9 	.db %00000000, %00000001, %01010110, %10100101, %01101010, %01010101, %01010101, %10101001
  178 D1:B9AF 55 A5 50 00 
              00 01 56 95 	.db %01010101, %10100101, %01010000, %00000000, %00000000, %00000001, %01010110, %10010101
  179 D1:B9B7 69 59 55 6A 
              55 A5 50 00 	.db %01101001, %01011001, %01010101, %01101010, %01010101, %10100101, %01010000, %00000000
  180 D1:B9BF 00 15 65 AA 
              56 5A 5A A5 	.db %00000000, %00010101, %01100101, %10101010, %01010110, %01011010, %01011010, %10100101
  181 D1:B9C7 65 54 00 05 
              5A AA 56 9A 	.db %01100101, %01010100, %00000000, %00000101, %01011010, %10101010, %01010110, %10011010
  182 D1:B9CF 95 AA 59 54 
              00 01 55 AA 	.db %10010101, %10101010, %01011001, %01010100, %00000000, %00000001, %01010101, %10101010
  183 D1:B9D7 56 A5 A9 5A 
              A9 55 00 00 	.db %01010110, %10100101, %10101001, %01011010, %10101001, %01010101, %00000000, %00000000
  184 D1:B9DF 01 55 A9 5A 
              96 A5 6A 95 	.db %00000001, %01010101, %10101001, %01011010, %10010110, %10100101, %01101010, %10010101
  185 D1:B9E7 50 00 00 00 
              55 6A AA 96 	.db %01010000, %00000000, %00000000, %00000000, %01010101, %01101010, %10101010, %10010110
  186 D1:B9EF A9 6A 55 40 
              00 00 15 56 	.db %10101001, %01101010, %01010101, %01000000, %00000000, %00000000, %00010101, %01010110
  187 D1:B9F7 AA AA AA AA 
              55 50 00 01 	.db %10101010, %10101010, %10101010, %10101010, %01010101, %01010000, %00000000, %00000001
  188 D1:B9FF 55 5A AA AA 
              A9 55 50 00 	.db %01010101, %01011010, %10101010, %10101010, %10101001, %01010101, %01010000, %00000000
  189 D1:BA07 00 15 55 5A 
              AA 95 55 50 	.db %00000000, %00010101, %01010101, %01011010, %10101010, %10010101, %01010101, %01010000
  190 D1:BA0F 00 00 00 55 
              55 AA 95 55 	.db %00000000, %00000000, %00000000, %01010101, %01010101, %10101010, %10010101, %01010101
  191 D1:BA17 40 00 00 00 
              05 55 6A A5 	.db %01000000, %00000000, %00000000, %00000000, %00000101, %01010101, %01101010, %10100101
  192 D1:BA1F 55 40 00 00 
              00 01 55 AA 	.db %01010101, %01000000, %00000000, %00000000, %00000000, %00000001, %01010101, %10101010
  193 D1:BA27 95 50 00 00 
              00 00 05 AA 	.db %10010101, %01010000, %00000000, %00000000, %00000000, %00000000, %00000101, %10101010
  194 D1:BA2F 94 00 00 00 
              00 00 00 00 	.db %10010100, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  195 D1:BA37 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  196 D1:BA3F 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  197 D1:BA47 00 00 00 00 
              00 -  -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000
  198 D1:BA4C -  -  -  -  
  199 D1:BA4C -  -  -  -  
  200 D1:BA4C -  -  -  -  OrangeDot:
  201 D1:BA4C 08 -  -  -  	.db %00001000
  202 D1:BA4D 0F 0F -  -  	.db 15, 15
  203 D1:BA4F 03 C0 0F C0 
              7F E1 FF E7 	.db %00000011, %11000000, %00001111, %11000000, %01111111, %11100001, %11111111, %11100111
  204 D1:BA57 FF DF FF FF 
              FF FF FF FF 	.db %11111111, %11011111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  205 D1:BA5F FF FF FF FF 
              FB FF E3 FF 	.db %11111111, %11111111, %11111111, %11111111, %11111011, %11111111, %11100011, %11111111
  206 D1:BA67 C3 FF 01 F8 
              00 -  -  -  	.db %11000011, %11111111, %00000001, %11111000, %00000000
  207 D1:BA6C -  -  -  -  
  208 D1:BA6C B0 -  -  -  	.db %10110000
  209 D1:BA6D -  -  -  -  
  210 D1:BA6D -  -  -  -  
  211 D1:BA6D -  -  -  -  
  212 D1:BA6D -  -  -  -  SquiggleL:
  213 D1:BA6D 08 -  -  -  	.db %00001000
  214 D1:BA6E 26 18 -  -  	.db 38, 24
  215 D1:BA70 00 00 07 FF 
              80 00 00 1F 	.db %00000000, %00000000, %00000111, %11111111, %10000000, %00000000, %00000000, %00011111
  216 D1:BA78 FE 00 00 00 
              7F FF C0 00 	.db %11111110, %00000000, %00000000, %00000000, %01111111, %11111111, %11000000, %00000000
  217 D1:BA80 01 FF FF 00 
              00 07 FF FC 	.db %00000001, %11111111, %11111111, %00000000, %00000000, %00000111, %11111111, %11111100
  218 D1:BA88 00 00 1F 1F 
              F0 00 00 7C 	.db %00000000, %00000000, %00011111, %00011111, %11110000, %00000000, %00000000, %01111100
  219 D1:BA90 7F C1 FC 01 
              F0 1F 07 F0 	.db %01111111, %11000001, %11111100, %00000001, %11110000, %00011111, %00000111, %11110000
  220 D1:BA98 07 C0 7C 1F 
              C0 1F 01 F3 	.db %00000111, %11000000, %01111100, %00011111, %11000000, %00011111, %00000001, %11110011
  221 D1:BAA0 FF F8 7C 07 
              CF FF E1 F0 	.db %11111111, %11111000, %01111100, %00000111, %11001111, %11111111, %11100001, %11110000
  222 D1:BAA8 1F 3F FF FF 
              C0 00 FF FF 	.db %00011111, %00111111, %11111111, %11111111, %11000000, %00000000, %11111111, %11111111
  223 D1:BAB0 FF 00 0F E0 
              FF F0 00 3F 	.db %11111111, %00000000, %00001111, %11100000, %11111111, %11110000, %00000000, %00111111
  224 D1:BAB8 83 FF C0 00 
              FE 0F FF 00 	.db %10000011, %11111111, %11000000, %00000000, %11111110, %00001111, %11111111, %00000000
  225 D1:BAC0 03 F8 0F FC 
              00 0F E0 3F 	.db %00000011, %11111000, %00001111, %11111100, %00000000, %00001111, %11100000, %00111111
  226 D1:BAC8 F0 00 3E 00 
              1F C0 00 F8 	.db %11110000, %00000000, %00111110, %00000000, %00011111, %11000000, %00000000, %11111000
  227 D1:BAD0 00 7F 00 03 
              E0 01 FC 00 	.db %00000000, %01111111, %00000000, %00000011, %11100000, %00000001, %11111100, %00000000
  228 D1:BAD8 0F 80 00 00 
              00 3E 00 00 	.db %00001111, %10000000, %00000000, %00000000, %00000000, %00111110, %00000000, %00000000
  229 D1:BAE0 00 00 -  -  	.db %00000000, %00000000
  230 D1:BAE2 -  -  -  -  
  231 D1:BAE2 50 -  -  -  	.db %01010000
  232 D1:BAE3 -  -  -  -  
  233 D1:BAE3 -  -  -  -  
  234 D1:BAE3 -  -  -  -  
  235 D1:BAE3 -  -  -  -  Banana5:
  236 D1:BAE3 20 -  -  -  	.db %00100000
  237 D1:BAE4 20 20 -  -  	.db 32, 32
  238 D1:BAE6 00 00 00 3C 
              00 00 00 FC 	.db %00000000, %00000000, %00000000, %00111100, %00000000, %00000000, %00000000, %11111100
  239 D1:BAEE 00 00 03 FC 
              00 00 07 FC 	.db %00000000, %00000000, %00000011, %11111100, %00000000, %00000000, %00000111, %11111100
  240 D1:BAF6 00 00 0F FC 
              00 00 3F FC 	.db %00000000, %00000000, %00001111, %11111100, %00000000, %00000000, %00111111, %11111100
  241 D1:BAFE 00 00 7F FC 
              00 00 FF F8 	.db %00000000, %00000000, %01111111, %11111100, %00000000, %00000000, %11111111, %11111000
  242 D1:BB06 00 03 FF F0 
              00 07 FF F0 	.db %00000000, %00000011, %11111111, %11110000, %00000000, %00000111, %11111111, %11110000
  243 D1:BB0E 00 1F FF E0 
              00 3F FF E0 	.db %00000000, %00011111, %11111111, %11100000, %00000000, %00111111, %11111111, %11100000
  244 D1:BB16 00 7F FF C0 
              01 FF FF 80 	.db %00000000, %01111111, %11111111, %11000000, %00000001, %11111111, %11111111, %10000000
  245 D1:BB1E 01 FF FF 00 
              03 FF FE 00 	.db %00000001, %11111111, %11111111, %00000000, %00000011, %11111111, %11111110, %00000000
  246 D1:BB26 07 FF FE 00 
              0F FF FC 00 	.db %00000111, %11111111, %11111110, %00000000, %00001111, %11111111, %11111100, %00000000
  247 D1:BB2E 1F FF F8 00 
              1F FF F0 00 	.db %00011111, %11111111, %11111000, %00000000, %00011111, %11111111, %11110000, %00000000
  248 D1:BB36 3F FF C0 00 
              3F FF 80 00 	.db %00111111, %11111111, %11000000, %00000000, %00111111, %11111111, %10000000, %00000000
  249 D1:BB3E 7F FF 00 00 
              7F FC 00 00 	.db %01111111, %11111111, %00000000, %00000000, %01111111, %11111100, %00000000, %00000000
  250 D1:BB46 FF F8 00 00 
              FF E0 00 00 	.db %11111111, %11111000, %00000000, %00000000, %11111111, %11100000, %00000000, %00000000
  251 D1:BB4E FF C0 00 00 
              FF 80 00 00 	.db %11111111, %11000000, %00000000, %00000000, %11111111, %10000000, %00000000, %00000000
  252 D1:BB56 FF 00 00 00 
              FC 00 00 00 	.db %11111111, %00000000, %00000000, %00000000, %11111100, %00000000, %00000000, %00000000
  253 D1:BB5E F8 00 00 00 
              F8 00 00 00 	.db %11111000, %00000000, %00000000, %00000000, %11111000, %00000000, %00000000, %00000000
  254 D1:BB66 -  -  -  -  
  255 D1:BB66 01 20 -  -  	.db %00000001, %00100000
  256 D1:BB68 -  -  -  -  
  257 D1:BB68 00 50 05 A0 
              05 A8 01 6A 	.db %00000000, %01010000, %00000101, %10100000, %00000101, %10101000, %00000001, %01101010
  258 D1:BB70 6A 55 A9 AA 
              56 A9 AA 55 	.db %01101010, %01010101, %10101001, %10101010, %01010110, %10101001, %10101010, %01010101
  259 D1:BB78 AA 66 A5 5A 
              A6 6A 56 AA 	.db %10101010, %01100110, %10100101, %01011010, %10100110, %01101010, %01010110, %10101010
  260 D1:BB80 66 A5 5A AA 
              A6 A9 5A AA 	.db %01100110, %10100101, %01011010, %10101010, %10100110, %10101001, %01011010, %10101010
  261 D1:BB88 66 A9 56 AA 
              99 9A 55 6A 	.db %01100110, %10101001, %01010110, %10101010, %10011001, %10011010, %01010101, %01101010
  262 D1:BB90 AA 99 A9 6A 
              AA AA 6A 5A 	.db %10101010, %10011001, %10101001, %01101010, %10101010, %10101010, %01101010, %01011010
  263 D1:BB98 AA AA 9A 96 
              AA AA A6 65 	.db %10101010, %10101010, %10011010, %10010110, %10101010, %10101010, %10100110, %01100101
  264 D1:BBA0 6A AA AA 66 
              55 AA AA A6 	.db %01101010, %10101010, %10101010, %01100110, %01010101, %10101010, %10101010, %10100110
  265 D1:BBA8 65 6A AA A9 
              99 56 AA A6 	.db %01100101, %01101010, %10101010, %10101001, %10011001, %01010110, %10101010, %10100110
  266 D1:BBB0 66 5A AA 99 
              95 5A A6 66 	.db %01100110, %01011010, %10101010, %10011001, %10010101, %01011010, %10100110, %01100110
  267 D1:BBB8 95 AA 66 A5 
              6A 99 A5 5A 	.db %10010101, %10101010, %01100110, %10100101, %01101010, %10011001, %10100101, %01011010
  268 D1:BBC0 99 A5 59 9A 
              56 66 55 02 	.db %10011001, %10100101, %01011001, %10011010, %01010110, %01100110, %01010101, %00000010
  269 D1:BBC8 55 00 60 04 
              00 -  -  -  	.db %01010101, %00000000, %01100000, %00000100, %00000000
  270 D1:BBCD -  -  -  -  
  271 D1:BBCD -  -  -  -  
  272 D1:BBCD -  -  -  -  GreenCurl1:
  273 D1:BBCD 08 -  -  -  	.db %00001000
  274 D1:BBCE 20 20 -  -  	.db 32, 32
  275 D1:BBD0 00 0F E0 00 
              00 1F E0 00 	.db %00000000, %00001111, %11100000, %00000000, %00000000, %00011111, %11100000, %00000000
  276 D1:BBD8 00 FF E0 00 
              03 FE 00 00 	.db %00000000, %11111111, %11100000, %00000000, %00000011, %11111110, %00000000, %00000000
  277 D1:BBE0 07 F8 00 00 
              07 E0 00 00 	.db %00000111, %11111000, %00000000, %00000000, %00000111, %11100000, %00000000, %00000000
  278 D1:BBE8 1F 80 00 00 
              3F 00 00 00 	.db %00011111, %10000000, %00000000, %00000000, %00111111, %00000000, %00000000, %00000000
  279 D1:BBF0 3E 07 FE 00 
              7C 0F FF F8 	.db %00111110, %00000111, %11111110, %00000000, %01111100, %00001111, %11111111, %11111000
  280 D1:BBF8 78 1F FF FC 
              F0 3F 07 FE 	.db %01111000, %00011111, %11111111, %11111100, %11110000, %00111111, %00000111, %11111110
  281 D1:BC00 F0 3C 00 3F 
              E0 78 00 1F 	.db %11110000, %00111100, %00000000, %00111111, %11100000, %01111000, %00000000, %00011111
  282 D1:BC08 E0 78 00 07 
              E0 78 0E 07 	.db %11100000, %01111000, %00000000, %00000111, %11100000, %01111000, %00001110, %00000111
  283 D1:BC10 E0 78 0E 07 
              E0 38 0E 03 	.db %11100000, %01111000, %00001110, %00000111, %11100000, %00111000, %00001110, %00000011
  284 D1:BC18 F0 3C 1E 03 
              F8 3E 3E 07 	.db %11110000, %00111100, %00011110, %00000011, %11111000, %00111110, %00111110, %00000111
  285 D1:BC20 F8 1F FE 07 
              78 1F FC 07 	.db %11111000, %00011111, %11111110, %00000111, %01111000, %00011111, %11111100, %00000111
  286 D1:BC28 3C 0F F8 0F 
              3E 00 70 1F 	.db %00111100, %00001111, %11111000, %00001111, %00111110, %00000000, %01110000, %00011111
  287 D1:BC30 1F 00 00 3E 
              0F 80 00 FE 	.db %00011111, %00000000, %00000000, %00111110, %00001111, %10000000, %00000000, %11111110
  288 D1:BC38 0F C0 01 FC 
              07 C0 03 F8 	.db %00001111, %11000000, %00000001, %11111100, %00000111, %11000000, %00000011, %11111000
  289 D1:BC40 03 E0 0F E0 
              01 FF FF C0 	.db %00000011, %11100000, %00001111, %11100000, %00000001, %11111111, %11111111, %11000000
  290 D1:BC48 00 FF FF 00 
              00 7F FE 00 	.db %00000000, %11111111, %11111111, %00000000, %00000000, %01111111, %11111110, %00000000
  291 D1:BC50 -  -  -  -  
  292 D1:BC50 50 -  -  -  	.db %01010000
  293 D1:BC51 -  -  -  -  
  294 D1:BC51 -  -  -  -  
  295 D1:BC51 -  -  -  -  
  296 D1:BC51 -  -  -  -  Bluecurl:
  297 D1:BC51 08 -  -  -  	.db %00001000
  298 D1:BC52 30 30 -  -  	.db 48, 48
  299 D1:BC54 00 00 FF C0 
              00 00 00 01 	.db %00000000, %00000000, %11111111, %11000000, %00000000, %00000000, %00000000, %00000001
  300 D1:BC5C FF FE 00 00 
              00 07 C0 7F 	.db %11111111, %11111110, %00000000, %00000000, %00000000, %00000111, %11000000, %01111111
  301 D1:BC64 00 00 00 1F 
              00 07 C0 00 	.db %00000000, %00000000, %00000000, %00011111, %00000000, %00000111, %11000000, %00000000
  302 D1:BC6C 00 3E 00 01 
              F0 00 00 78 	.db %00000000, %00111110, %00000000, %00000001, %11110000, %00000000, %00000000, %01111000
  303 D1:BC74 00 00 78 00 
              00 F0 00 00 	.db %00000000, %00000000, %01111000, %00000000, %00000000, %11110000, %00000000, %00000000
  304 D1:BC7C 1C 00 01 E0 
              00 00 0C 00 	.db %00011100, %00000000, %00000001, %11100000, %00000000, %00000000, %00001100, %00000000
  305 D1:BC84 01 C0 00 00 
              0E 00 01 80 	.db %00000001, %11000000, %00000000, %00000000, %00001110, %00000000, %00000001, %10000000
  306 D1:BC8C 00 00 07 00 
              03 80 00 00 	.db %00000000, %00000000, %00000111, %00000000, %00000011, %10000000, %00000000, %00000000
  307 D1:BC94 03 80 03 03 
              FF 80 01 C0 	.db %00000011, %10000000, %00000011, %00000011, %11111111, %10000000, %00000001, %11000000
  308 D1:BC9C 03 0F FF C0 
              00 E0 07 1F 	.db %00000011, %00001111, %11111111, %11000000, %00000000, %11100000, %00000111, %00011111
  309 D1:BCA4 00 F0 00 F0 
              0E 18 00 78 	.db %00000000, %11110000, %00000000, %11110000, %00001110, %00011000, %00000000, %01111000
  310 D1:BCAC 00 30 0E 38 
              00 1C 00 38 	.db %00000000, %00110000, %00001110, %00111000, %00000000, %00011100, %00000000, %00111000
  311 D1:BCB4 1C 30 00 0E 
              00 38 1C 30 	.db %00011100, %00110000, %00000000, %00001110, %00000000, %00111000, %00011100, %00110000
  312 D1:BCBC 00 0E 00 1C 
              18 30 00 06 	.db %00000000, %00001110, %00000000, %00011100, %00011000, %00110000, %00000000, %00000110
  313 D1:BCC4 00 0C 38 30 
              00 07 00 0E 	.db %00000000, %00001100, %00111000, %00110000, %00000000, %00000111, %00000000, %00001110
  314 D1:BCCC 70 30 1F 03 
              80 0E 60 30 	.db %01110000, %00110000, %00011111, %00000011, %10000000, %00001110, %01100000, %00110000
  315 D1:BCD4 1F 01 C0 06 
              E0 30 18 00 	.db %00011111, %00000001, %11000000, %00000110, %11100000, %00110000, %00011000, %00000000
  316 D1:BCDC C0 06 E0 30 
              18 00 C0 07 	.db %11000000, %00000110, %11100000, %00110000, %00011000, %00000000, %11000000, %00000111
  317 D1:BCE4 C0 30 18 00 
              C0 07 C0 30 	.db %11000000, %00110000, %00011000, %00000000, %11000000, %00000111, %11000000, %00110000
  318 D1:BCEC 18 00 C0 03 
              C0 30 1C 00 	.db %00011000, %00000000, %11000000, %00000011, %11000000, %00110000, %00011100, %00000000
  319 D1:BCF4 C0 03 C0 30 
              0C 00 C0 03 	.db %11000000, %00000011, %11000000, %00110000, %00001100, %00000000, %11000000, %00000011
  320 D1:BCFC C0 30 0E 00 
              C0 07 C0 38 	.db %11000000, %00110000, %00001110, %00000000, %11000000, %00000111, %11000000, %00111000
  321 D1:BD04 07 00 C0 07 
              00 18 07 81 	.db %00000111, %00000000, %11000000, %00000111, %00000000, %00011000, %00000111, %10000001
  322 D1:BD0C C0 06 00 18 
              01 E7 80 06 	.db %11000000, %00000110, %00000000, %00011000, %00000001, %11100111, %10000000, %00000110
  323 D1:BD14 00 1C 01 FF 
              80 06 00 0C 	.db %00000000, %00011100, %00000001, %11111111, %10000000, %00000110, %00000000, %00001100
  324 D1:BD1C 00 3C 00 0E 
              00 0E 00 00 	.db %00000000, %00111100, %00000000, %00001110, %00000000, %00001110, %00000000, %00000000
  325 D1:BD24 00 0E 00 06 
              00 00 00 0C 	.db %00000000, %00001110, %00000000, %00000110, %00000000, %00000000, %00000000, %00001100
  326 D1:BD2C 00 07 00 00 
              00 1C 00 03 	.db %00000000, %00000111, %00000000, %00000000, %00000000, %00011100, %00000000, %00000011
  327 D1:BD34 80 00 00 38 
              00 01 80 00 	.db %10000000, %00000000, %00000000, %00111000, %00000000, %00000001, %10000000, %00000000
  328 D1:BD3C 00 78 00 01 
              C0 00 00 F0 	.db %00000000, %01111000, %00000000, %00000001, %11000000, %00000000, %00000000, %11110000
  329 D1:BD44 00 00 E0 00 
              01 E0 00 00 	.db %00000000, %00000000, %11100000, %00000000, %00000001, %11100000, %00000000, %00000000
  330 D1:BD4C 70 00 03 80 
              00 00 78 00 	.db %01110000, %00000000, %00000011, %10000000, %00000000, %00000000, %01111000, %00000000
  331 D1:BD54 07 80 00 00 
              18 00 1F 00 	.db %00000111, %10000000, %00000000, %00000000, %00011000, %00000000, %00011111, %00000000
  332 D1:BD5C 00 00 1C 00 
              7C 00 00 00 	.db %00000000, %00000000, %00011100, %00000000, %01111100, %00000000, %00000000, %00000000
  333 D1:BD64 1E 01 F8 00 
              00 00 07 F7 	.db %00011110, %00000001, %11111000, %00000000, %00000000, %00000000, %00000111, %11110111
  334 D1:BD6C E0 00 00 00 
              03 FF 00 00 	.db %11100000, %00000000, %00000000, %00000000, %00000011, %11111111, %00000000, %00000000
  335 D1:BD74 -  -  -  -  
  336 D1:BD74 60 -  -  -  	.db %01100000
  337 D1:BD75 -  -  -  -  
  338 D1:BD75 -  -  -  -  
  339 D1:BD75 -  -  -  -  
Listing for file "ascent.asm"
  272 D1:BD75 -  -  -  -  #include "FG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\FG_Data.txt"
    1 D1:BD75 -  -  -  -  FG_Data_frame_table:
    2 D1:BD75 2D C6 D1 -  	.dl FG_Data_0
    3 D1:BD78 09 C6 D1 -  	.dl FG_Data_1
    4 D1:BD7B E5 C5 D1 -  	.dl FG_Data_2
    5 D1:BD7E BD C5 D1 -  	.dl FG_Data_3
    6 D1:BD81 7D C5 D1 -  	.dl FG_Data_4
    7 D1:BD84 55 C5 D1 -  	.dl FG_Data_5
    8 D1:BD87 31 C5 D1 -  	.dl FG_Data_6
    9 D1:BD8A 09 C5 D1 -  	.dl FG_Data_7
   10 D1:BD8D E1 C4 D1 -  	.dl FG_Data_8
   11 D1:BD90 B9 C4 D1 -  	.dl FG_Data_9
   12 D1:BD93 91 C4 D1 -  	.dl FG_Data_10
   13 D1:BD96 6D C4 D1 -  	.dl FG_Data_11
   14 D1:BD99 29 C4 D1 -  	.dl FG_Data_12
   15 D1:BD9C 05 C4 D1 -  	.dl FG_Data_13
   16 D1:BD9F E1 C3 D1 -  	.dl FG_Data_14
   17 D1:BDA2 B9 C3 D1 -  	.dl FG_Data_15
   18 D1:BDA5 91 C3 D1 -  	.dl FG_Data_16
   19 D1:BDA8 69 C3 D1 -  	.dl FG_Data_17
   20 D1:BDAB 39 C3 D1 -  	.dl FG_Data_18
   21 D1:BDAE 1D C3 D1 -  	.dl FG_Data_19
   22 D1:BDB1 F5 C2 D1 -  	.dl FG_Data_20
   23 D1:BDB4 7D C2 D1 -  	.dl FG_Data_21
   24 D1:BDB7 E9 C1 D1 -  	.dl FG_Data_22
   25 D1:BDBA 7D C1 D1 -  	.dl FG_Data_23
   26 D1:BDBD DD C0 D1 -  	.dl FG_Data_24
   27 D1:BDC0 45 C0 D1 -  	.dl FG_Data_25
   28 D1:BDC3 19 C0 D1 -  	.dl FG_Data_26
   29 D1:BDC6 F1 BF D1 -  	.dl FG_Data_27
   30 D1:BDC9 CD BF D1 -  	.dl FG_Data_28
   31 D1:BDCC 89 BF D1 -  	.dl FG_Data_29
   32 D1:BDCF 61 BF D1 -  	.dl FG_Data_30
   33 D1:BDD2 41 BF D1 -  	.dl FG_Data_31
   34 D1:BDD5 1D BF D1 -  	.dl FG_Data_32
   35 D1:BDD8 F1 BE D1 -  	.dl FG_Data_33
   36 D1:BDDB BD BE D1 -  	.dl FG_Data_34
   37 D1:BDDE 99 BE D1 -  	.dl FG_Data_35
   38 D1:BDE1 61 BE D1 -  	.dl FG_Data_36
   39 D1:BDE4 29 BE D1 -  	.dl FG_Data_37
   40 D1:BDE7 09 BE D1 -  	.dl FG_Data_38
   41 D1:BDEA ED BD D1 -  	.dl FG_Data_39
   42 D1:BDED -  -  -  -  
   43 D1:BDED -  -  -  -  
   44 D1:BDED -  -  -  -  
   45 D1:BDED -  -  -  -  FG_Data_39:
   46 D1:BDED F5 CE D1 -  	.dl Sprite_Table_0
   47 D1:BDF0 06 -  -  -  	.db 6
   48 D1:BDF1 31 2D 77 01 	.db 49, 45, 119, 1
   49 D1:BDF5 57 2D 28 01 	.db 87, 45, 40, 1
   50 D1:BDF9 92 2D 51 01 	.db 146, 45, 81, 1
   51 D1:BDFD A0 2D 1D 03 	.db 160, 45, 29, 3
   52 D1:BE01 3A 17 50 07 	.db 58, 23, 80, 7
   53 D1:BE05 98 17 77 00 	.db 152, 23, 119, 0
   54 D1:BE09 -  -  -  -  
   55 D1:BE09 -  -  -  -  FG_Data_38:
   56 D1:BE09 F5 CE D1 -  	.dl Sprite_Table_0
   57 D1:BE0C 07 -  -  -  	.db 7
   58 D1:BE0D 1D 2D 22 02 	.db 29, 45, 34, 2
   59 D1:BE11 62 2D 47 02 	.db 98, 45, 71, 2
   60 D1:BE15 B0 2D 67 06 	.db 176, 45, 103, 6
   61 D1:BE19 EF 2D 4F 03 	.db 239, 45, 79, 3
   62 D1:BE1D 34 2D 6B 03 	.db 52, 45, 107, 3
   63 D1:BE21 D3 17 72 05 	.db 211, 23, 114, 5
   64 D1:BE25 94 17 40 05 	.db 148, 23, 64, 5
   65 D1:BE29 -  -  -  -  
   66 D1:BE29 -  -  -  -  FG_Data_37:
   67 D1:BE29 F5 CE D1 -  	.dl Sprite_Table_0
   68 D1:BE2C 0D -  -  -  	.db 13
   69 D1:BE2D 58 2D 6D 01 	.db 88, 45, 109, 1
   70 D1:BE31 7E 2D 1E 01 	.db 126, 45, 30, 1
   71 D1:BE35 B9 2D 47 01 	.db 185, 45, 71, 1
   72 D1:BE39 C7 2D 13 03 	.db 199, 45, 19, 3
   73 D1:BE3D 16 2D 45 03 	.db 22, 45, 69, 3
   74 D1:BE41 61 17 46 07 	.db 97, 23, 70, 7
   75 D1:BE45 BF 17 6D 00 	.db 191, 23, 109, 0
   76 D1:BE49 6C 2D 2A 01 	.db 108, 45, 42, 1
   77 D1:BE4D C2 2D 68 01 	.db 194, 45, 104, 1
   78 D1:BE51 99 2D 27 03 	.db 153, 45, 39, 3
   79 D1:BE55 59 2D 5B 03 	.db 89, 45, 91, 3
   80 D1:BE59 EF 17 4A 00 	.db 239, 23, 74, 0
   81 D1:BE5D 7F 2F 47 09 	.db 127, 47, 71, 9
   82 D1:BE61 -  -  -  -  
   83 D1:BE61 -  -  -  -  FG_Data_36:
   84 D1:BE61 F5 CE D1 -  	.dl Sprite_Table_0
   85 D1:BE64 0D -  -  -  	.db 13
   86 D1:BE65 44 2D 18 02 	.db 68, 45, 24, 2
   87 D1:BE69 89 2D 3D 02 	.db 137, 45, 61, 2
   88 D1:BE6D D7 2D 5D 06 	.db 215, 45, 93, 6
   89 D1:BE71 5B 2D 61 03 	.db 91, 45, 97, 3
   90 D1:BE75 FA 17 69 00 	.db 250, 23, 105, 0
   91 D1:BE79 BB 17 37 00 	.db 187, 23, 55, 0
   92 D1:BE7D 16 17 40 05 	.db 22, 23, 64, 5
   93 D1:BE81 97 2D 24 01 	.db 151, 45, 36, 1
   94 D1:BE85 8A 2D 5F 02 	.db 138, 45, 95, 2
   95 D1:BE89 DA 2D 49 03 	.db 218, 45, 73, 3
   96 D1:BE8D 2E 17 48 07 	.db 46, 23, 72, 7
   97 D1:BE91 CE 17 74 04 	.db 206, 23, 116, 4
   98 D1:BE95 68 17 3D 00 	.db 104, 23, 61, 0
   99 D1:BE99 -  -  -  -  
  100 D1:BE99 -  -  -  -  FG_Data_35:
  101 D1:BE99 F5 CE D1 -  	.dl Sprite_Table_0
  102 D1:BE9C 08 -  -  -  	.db 8
  103 D1:BE9D 93 2D 20 01 	.db 147, 45, 32, 1
  104 D1:BEA1 E9 2D 5E 01 	.db 233, 45, 94, 1
  105 D1:BEA5 C0 2D 1D 03 	.db 192, 45, 29, 3
  106 D1:BEA9 80 2D 51 03 	.db 128, 45, 81, 3
  107 D1:BEAD 01 2D 3F 03 	.db 1, 45, 63, 3
  108 D1:BEB1 A6 2F 3D 09 	.db 166, 47, 61, 9
  109 D1:BEB5 E4 2D 37 03 	.db 228, 45, 55, 3
  110 D1:BEB9 FB 17 6C 00 	.db 251, 23, 108, 0
  111 D1:BEBD -  -  -  -  
  112 D1:BEBD -  -  -  -  FG_Data_34:
  113 D1:BEBD F5 CE D1 -  	.dl Sprite_Table_0
  114 D1:BEC0 0C -  -  -  	.db 12
  115 D1:BEC1 23 2D 2C 02 	.db 35, 45, 44, 2
  116 D1:BEC5 5E 2D 55 02 	.db 94, 45, 85, 2
  117 D1:BEC9 6C 2D 21 06 	.db 108, 45, 33, 6
  118 D1:BECD 06 17 54 07 	.db 6, 23, 84, 7
  119 D1:BED1 64 17 7A 05 	.db 100, 23, 122, 5
  120 D1:BED5 BE 2D 1A 01 	.db 190, 45, 26, 1
  121 D1:BED9 B1 2D 55 02 	.db 177, 45, 85, 2
  122 D1:BEDD 0B 2D 2D 03 	.db 11, 45, 45, 3
  123 D1:BEE1 55 17 3E 07 	.db 85, 23, 62, 7
  124 D1:BEE5 F5 17 6A 04 	.db 245, 23, 106, 4
  125 D1:BEE9 8F 17 33 00 	.db 143, 23, 51, 0
  126 D1:BEED 22 17 62 00 	.db 34, 23, 98, 0
  127 D1:BEF1 -  -  -  -  
  128 D1:BEF1 -  -  -  -  FG_Data_33:
  129 D1:BEF1 F5 CE D1 -  	.dl Sprite_Table_0
  130 D1:BEF4 0A -  -  -  	.db 10
  131 D1:BEF5 87 2D 1A 02 	.db 135, 45, 26, 2
  132 D1:BEF9 2E 2D 4A 01 	.db 46, 45, 74, 1
  133 D1:BEFD FD 2D 7B 02 	.db 253, 45, 123, 2
  134 D1:BF01 7C 2D 6A 03 	.db 124, 45, 106, 3
  135 D1:BF05 DE 2D 13 03 	.db 222, 45, 19, 3
  136 D1:BF09 BB 2D 53 06 	.db 187, 45, 83, 6
  137 D1:BF0D 00 2D 6F 06 	.db 0, 45, 111, 6
  138 D1:BF11 2E 17 15 04 	.db 46, 23, 21, 4
  139 D1:BF15 9F 17 76 05 	.db 159, 23, 118, 5
  140 D1:BF19 60 17 44 05 	.db 96, 23, 68, 5
  141 D1:BF1D -  -  -  -  
  142 D1:BF1D -  -  -  -  FG_Data_32:
  143 D1:BF1D F5 CE D1 -  	.dl Sprite_Table_0
  144 D1:BF20 08 -  -  -  	.db 8
  145 D1:BF21 38 2D 2E 02 	.db 56, 45, 46, 2
  146 D1:BF25 8E 2D 6C 02 	.db 142, 45, 108, 2
  147 D1:BF29 E9 2D 25 01 	.db 233, 45, 37, 1
  148 D1:BF2D 65 2D 2B 06 	.db 101, 45, 43, 6
  149 D1:BF31 25 2D 5F 06 	.db 37, 45, 95, 6
  150 D1:BF35 93 17 15 04 	.db 147, 23, 21, 4
  151 D1:BF39 BB 17 4E 00 	.db 187, 23, 78, 0
  152 D1:BF3D 4B 2F 4A 08 	.db 75, 47, 74, 8
  153 D1:BF41 -  -  -  -  
  154 D1:BF41 -  -  -  -  FG_Data_31:
  155 D1:BF41 F5 CE D1 -  	.dl Sprite_Table_0
  156 D1:BF44 07 -  -  -  	.db 7
  157 D1:BF45 63 2D 28 02 	.db 99, 45, 40, 2
  158 D1:BF49 56 2D 62 01 	.db 86, 45, 98, 1
  159 D1:BF4D A6 2D 4D 06 	.db 166, 45, 77, 6
  160 D1:BF51 D6 2D 11 03 	.db 214, 45, 17, 3
  161 D1:BF55 9A 17 78 04 	.db 154, 23, 120, 4
  162 D1:BF59 FE 17 09 00 	.db 254, 23, 9, 0
  163 D1:BF5D 34 17 40 05 	.db 52, 23, 64, 5
  164 D1:BF61 -  -  -  -  
  165 D1:BF61 -  -  -  -  FG_Data_30:
  166 D1:BF61 F5 CE D1 -  	.dl Sprite_Table_0
  167 D1:BF64 09 -  -  -  	.db 9
  168 D1:BF65 49 2D 51 02 	.db 73, 45, 81, 2
  169 D1:BF69 35 2D 26 01 	.db 53, 45, 38, 1
  170 D1:BF6D 9E 2D 76 01 	.db 158, 45, 118, 1
  171 D1:BF71 F7 2D 07 03 	.db 247, 45, 7, 3
  172 D1:BF75 B0 2D 3B 06 	.db 176, 45, 59, 6
  173 D1:BF79 FA 17 4C 04 	.db 250, 23, 76, 4
  174 D1:BF7D C7 17 6F 05 	.db 199, 23, 111, 5
  175 D1:BF81 66 17 1C 00 	.db 102, 23, 28, 0
  176 D1:BF85 6D 2F 30 08 	.db 109, 47, 48, 8
  177 D1:BF89 -  -  -  -  
  178 D1:BF89 -  -  -  -  FG_Data_29:
  179 D1:BF89 F5 CE D1 -  	.dl Sprite_Table_0
  180 D1:BF8C 10 -  -  -  	.db 16
  181 D1:BF8D E1 2D 20 01 	.db 225, 45, 32, 1
  182 D1:BF91 DB 2D 2C 02 	.db 219, 45, 44, 2
  183 D1:BF95 B9 2D 3B 01 	.db 185, 45, 59, 1
  184 D1:BF99 A2 2D 40 02 	.db 162, 45, 64, 2
  185 D1:BF9D B6 2D 4A 02 	.db 182, 45, 74, 2
  186 D1:BFA1 8B 2D 4F 02 	.db 139, 45, 79, 2
  187 D1:BFA5 8B 2D 4F 02 	.db 139, 45, 79, 2
  188 D1:BFA9 A7 2D 66 02 	.db 167, 45, 102, 2
  189 D1:BFAD 80 2D 54 02 	.db 128, 45, 84, 2
  190 D1:BFB1 81 2D 24 01 	.db 129, 45, 36, 1
  191 D1:BFB5 50 2D 15 01 	.db 80, 45, 21, 1
  192 D1:BFB9 D1 2D 0F 03 	.db 209, 45, 15, 3
  193 D1:BFBD 14 17 38 04 	.db 20, 23, 56, 4
  194 D1:BFC1 FA 17 7D 04 	.db 250, 23, 125, 4
  195 D1:BFC5 D9 17 44 05 	.db 217, 23, 68, 5
  196 D1:BFC9 21 17 67 05 	.db 33, 23, 103, 5
  197 D1:BFCD -  -  -  -  
  198 D1:BFCD -  -  -  -  FG_Data_28:
  199 D1:BFCD F5 CE D1 -  	.dl Sprite_Table_0
  200 D1:BFD0 08 -  -  -  	.db 8
  201 D1:BFD1 98 2D 3F 01 	.db 152, 45, 63, 1
  202 D1:BFD5 C9 2D 60 01 	.db 201, 45, 96, 1
  203 D1:BFD9 6B 2D 83 01 	.db 107, 45, 131, 1
  204 D1:BFDD D3 2D 13 03 	.db 211, 45, 19, 3
  205 D1:BFE1 59 17 1A 04 	.db 89, 23, 26, 4
  206 D1:BFE5 64 17 6A 05 	.db 100, 23, 106, 5
  207 D1:BFE9 05 17 41 05 	.db 5, 23, 65, 5
  208 D1:BFED F1 2F 4A 09 	.db 241, 47, 74, 9
  209 D1:BFF1 -  -  -  -  
  210 D1:BFF1 -  -  -  -  FG_Data_27:
  211 D1:BFF1 F5 CE D1 -  	.dl Sprite_Table_0
  212 D1:BFF4 09 -  -  -  	.db 9
  213 D1:BFF5 64 2D 3F 02 	.db 100, 45, 63, 2
  214 D1:BFF9 79 2D 73 02 	.db 121, 45, 115, 2
  215 D1:BFFD DA 2D 2A 01 	.db 218, 45, 42, 1
  216 D1:C001 F7 2D 54 03 	.db 247, 45, 84, 3
  217 D1:C005 0D 2D 11 06 	.db 13, 45, 17, 6
  218 D1:C009 81 17 5E 04 	.db 129, 23, 94, 4
  219 D1:C00D 83 17 1E 05 	.db 131, 23, 30, 5
  220 D1:C011 14 17 34 00 	.db 20, 23, 52, 0
  221 D1:C015 5C 2F 18 09 	.db 92, 47, 24, 9
  222 D1:C019 -  -  -  -  
  223 D1:C019 -  -  -  -  FG_Data_26:
  224 D1:C019 F5 CE D1 -  	.dl Sprite_Table_0
  225 D1:C01C 0A -  -  -  	.db 10
  226 D1:C01D 78 2D 7F 02 	.db 120, 45, 127, 2
  227 D1:C021 5F 2D 20 02 	.db 95, 45, 32, 2
  228 D1:C025 D0 2D 4F 02 	.db 208, 45, 79, 2
  229 D1:C029 F9 2D 68 03 	.db 249, 45, 104, 3
  230 D1:C02D 52 2D 52 03 	.db 82, 45, 82, 3
  231 D1:C031 8D 17 1F 04 	.db 141, 23, 31, 4
  232 D1:C035 9A 17 43 00 	.db 154, 23, 67, 0
  233 D1:C039 33 2D 7E 02 	.db 51, 45, 126, 2
  234 D1:C03D 45 2D 42 03 	.db 69, 45, 66, 3
  235 D1:C041 02 2F 38 09 	.db 2, 47, 56, 9
  236 D1:C045 -  -  -  -  
  237 D1:C045 -  -  -  -  FG_Data_25:
  238 D1:C045 F5 CE D1 -  	.dl Sprite_Table_0
  239 D1:C048 25 -  -  -  	.db 37
  240 D1:C049 00 2D 23 01 	.db 0, 45, 35, 1
  241 D1:C04D 76 2D 28 02 	.db 118, 45, 40, 2
  242 D1:C051 70 2D 33 01 	.db 112, 45, 51, 1
  243 D1:C055 4E 2D 43 02 	.db 78, 45, 67, 2
  244 D1:C059 38 2D 47 01 	.db 56, 45, 71, 1
  245 D1:C05D 4B 2D 51 01 	.db 75, 45, 81, 1
  246 D1:C061 20 2D 56 01 	.db 32, 45, 86, 1
  247 D1:C065 20 2D 56 01 	.db 32, 45, 86, 1
  248 D1:C069 6E 17 4C 00 	.db 110, 23, 76, 0
  249 D1:C06D FB 17 23 05 	.db 251, 23, 35, 5
  250 D1:C071 8F 17 84 04 	.db 143, 23, 132, 4
  251 D1:C075 16 2D 2C 02 	.db 22, 45, 44, 2
  252 D1:C079 15 2D 5B 01 	.db 21, 45, 91, 1
  253 D1:C07D CA 2D 2E 02 	.db 202, 45, 46, 2
  254 D1:C081 DE 2D 58 01 	.db 222, 45, 88, 1
  255 D1:C085 3C 2D 6D 01 	.db 60, 45, 109, 1
  256 D1:C089 8C 2F 33 08 	.db 140, 47, 51, 8
  257 D1:C08D 66 2D 17 06 	.db 102, 45, 23, 6
  258 D1:C091 85 17 1F 00 	.db 133, 23, 31, 0
  259 D1:C095 CF 2D 3E 06 	.db 207, 45, 62, 6
  260 D1:C099 98 2D 26 02 	.db 152, 45, 38, 2
  261 D1:C09D D3 2D 4F 02 	.db 211, 45, 79, 2
  262 D1:C0A1 53 2D 0D 06 	.db 83, 45, 13, 6
  263 D1:C0A5 E1 2D 1B 06 	.db 225, 45, 27, 6
  264 D1:C0A9 30 2D 4D 06 	.db 48, 45, 77, 6
  265 D1:C0AD 7B 17 4E 04 	.db 123, 23, 78, 4
  266 D1:C0B1 D9 17 74 05 	.db 217, 23, 116, 5
  267 D1:C0B5 14 17 70 00 	.db 20, 23, 112, 0
  268 D1:C0B9 52 2D 7A 01 	.db 82, 45, 122, 1
  269 D1:C0BD 64 2D 3F 06 	.db 100, 45, 63, 6
  270 D1:C0C1 1A 17 20 00 	.db 26, 23, 32, 0
  271 D1:C0C5 21 2F 34 08 	.db 33, 47, 52, 8
  272 D1:C0C9 68 2D 54 02 	.db 104, 45, 84, 2
  273 D1:C0CD 54 2D 29 01 	.db 84, 45, 41, 1
  274 D1:C0D1 BD 2D 79 01 	.db 189, 45, 121, 1
  275 D1:C0D5 19 17 80 04 	.db 25, 23, 128, 4
  276 D1:C0D9 72 2D 75 02 	.db 114, 45, 117, 2
  277 D1:C0DD -  -  -  -  
  278 D1:C0DD -  -  -  -  FG_Data_24:
  279 D1:C0DD F5 CE D1 -  	.dl Sprite_Table_0
  280 D1:C0E0 27 -  -  -  	.db 39
  281 D1:C0E1 95 2D 24 02 	.db 149, 45, 36, 2
  282 D1:C0E5 FA 2D 2F 02 	.db 250, 45, 47, 2
  283 D1:C0E9 8F 2D 30 02 	.db 143, 45, 48, 2
  284 D1:C0ED D8 2D 3E 01 	.db 216, 45, 62, 1
  285 D1:C0F1 6D 2D 3F 01 	.db 109, 45, 63, 1
  286 D1:C0F5 D5 2D 4D 02 	.db 213, 45, 77, 2
  287 D1:C0F9 C2 2D 43 02 	.db 194, 45, 67, 2
  288 D1:C0FD 57 2D 44 02 	.db 87, 45, 68, 2
  289 D1:C101 6A 2D 4E 02 	.db 106, 45, 78, 2
  290 D1:C105 AA 2D 52 02 	.db 170, 45, 82, 2
  291 D1:C109 3F 2D 53 02 	.db 63, 45, 83, 2
  292 D1:C10D 3F 2D 53 02 	.db 63, 45, 83, 2
  293 D1:C111 AA 2D 52 02 	.db 170, 45, 82, 2
  294 D1:C115 A0 2D 27 01 	.db 160, 45, 39, 1
  295 D1:C119 9F 2D 57 02 	.db 159, 45, 87, 2
  296 D1:C11D 6F 2D 18 01 	.db 111, 45, 24, 1
  297 D1:C121 F0 2D 12 03 	.db 240, 45, 18, 3
  298 D1:C125 F8 17 47 05 	.db 248, 23, 71, 5
  299 D1:C129 C6 2D 69 02 	.db 198, 45, 105, 2
  300 D1:C12D FC 2D 14 02 	.db 252, 45, 20, 2
  301 D1:C131 8D 17 48 05 	.db 141, 23, 72, 5
  302 D1:C135 85 2D 13 03 	.db 133, 45, 19, 3
  303 D1:C139 03 2D 66 02 	.db 3, 45, 102, 2
  304 D1:C13D 5E 2D 1F 01 	.db 94, 45, 31, 1
  305 D1:C141 A3 2D 44 01 	.db 163, 45, 68, 1
  306 D1:C145 F1 2D 64 03 	.db 241, 45, 100, 3
  307 D1:C149 75 2D 68 03 	.db 117, 45, 104, 3
  308 D1:C14D 08 17 0E 07 	.db 8, 23, 14, 7
  309 D1:C151 A3 17 0F 04 	.db 163, 23, 15, 4
  310 D1:C155 D5 17 3E 00 	.db 213, 23, 62, 0
  311 D1:C159 30 17 47 05 	.db 48, 23, 71, 5
  312 D1:C15D 5B 2D 6A 02 	.db 91, 45, 106, 2
  313 D1:C161 FD 2D 55 02 	.db 253, 45, 85, 2
  314 D1:C165 E9 2D 2A 01 	.db 233, 45, 42, 1
  315 D1:C169 34 2D 58 02 	.db 52, 45, 88, 2
  316 D1:C16D 35 2D 28 01 	.db 53, 45, 40, 1
  317 D1:C171 04 2D 19 01 	.db 4, 45, 25, 1
  318 D1:C175 AE 17 80 07 	.db 174, 23, 128, 7
  319 D1:C179 E5 2D 1D 02 	.db 229, 45, 29, 2
  320 D1:C17D -  -  -  -  
  321 D1:C17D -  -  -  -  FG_Data_23:
  322 D1:C17D F5 CE D1 -  	.dl Sprite_Table_0
  323 D1:C180 1A -  -  -  	.db 26
  324 D1:C181 2D 2D 1A 02 	.db 45, 45, 26, 2
  325 D1:C185 27 2D 26 02 	.db 39, 45, 38, 2
  326 D1:C189 05 2D 35 01 	.db 5, 45, 53, 1
  327 D1:C18D 02 2D 44 02 	.db 2, 45, 68, 2
  328 D1:C191 AD 2D 28 02 	.db 173, 45, 40, 2
  329 D1:C195 25 17 3E 05 	.db 37, 23, 62, 5
  330 D1:C199 B2 17 16 00 	.db 178, 23, 22, 0
  331 D1:C19D 46 17 76 07 	.db 70, 23, 118, 7
  332 D1:C1A1 1D 2D 09 03 	.db 29, 45, 9, 3
  333 D1:C1A5 FC 2D 35 06 	.db 252, 45, 53, 6
  334 D1:C1A9 EA 2D 70 01 	.db 234, 45, 112, 1
  335 D1:C1AD 81 2D 20 01 	.db 129, 45, 32, 1
  336 D1:C1B1 95 2D 4B 02 	.db 149, 45, 75, 2
  337 D1:C1B5 24 2F 3F 08 	.db 36, 47, 63, 8
  338 D1:C1B9 67 2D 4A 06 	.db 103, 45, 74, 6
  339 D1:C1BD 55 2D 85 01 	.db 85, 45, 133, 1
  340 D1:C1C1 00 2D 60 02 	.db 0, 45, 96, 2
  341 D1:C1C5 C0 2F 44 08 	.db 192, 47, 68, 8
  342 D1:C1C9 73 17 03 00 	.db 115, 23, 3, 0
  343 D1:C1CD 0F 17 71 07 	.db 15, 23, 113, 7
  344 D1:C1D1 4B 2D 0B 06 	.db 75, 45, 11, 6
  345 D1:C1D5 1B 2D 46 03 	.db 27, 45, 70, 3
  346 D1:C1D9 9A 2D 59 06 	.db 154, 45, 89, 6
  347 D1:C1DD DA 2D 25 06 	.db 218, 45, 37, 6
  348 D1:C1E1 1D 17 2B 00 	.db 29, 23, 43, 0
  349 D1:C1E5 B9 2F 2A 08 	.db 185, 47, 42, 8
  350 D1:C1E9 -  -  -  -  
  351 D1:C1E9 -  -  -  -  FG_Data_22:
  352 D1:C1E9 F5 CE D1 -  	.dl Sprite_Table_0
  353 D1:C1EC 24 -  -  -  	.db 36
  354 D1:C1ED 98 2D 2F 01 	.db 152, 45, 47, 1
  355 D1:C1F1 92 2D 3B 02 	.db 146, 45, 59, 2
  356 D1:C1F5 70 2D 4A 01 	.db 112, 45, 74, 1
  357 D1:C1F9 EF 2D 3A 02 	.db 239, 45, 58, 2
  358 D1:C1FD 5A 2D 4F 02 	.db 90, 45, 79, 2
  359 D1:C201 6D 2D 59 02 	.db 109, 45, 89, 2
  360 D1:C205 42 2D 5E 02 	.db 66, 45, 94, 2
  361 D1:C209 D7 2D 48 01 	.db 215, 45, 72, 1
  362 D1:C20D 42 2D 5E 02 	.db 66, 45, 94, 2
  363 D1:C211 D7 2D 48 01 	.db 215, 45, 72, 1
  364 D1:C215 CC 2D 4E 02 	.db 204, 45, 78, 2
  365 D1:C219 CD 2D 1E 01 	.db 205, 45, 30, 1
  366 D1:C21D 07 2D 24 01 	.db 7, 45, 36, 1
  367 D1:C221 9C 2D 0F 01 	.db 156, 45, 15, 1
  368 D1:C225 90 17 53 05 	.db 144, 23, 83, 5
  369 D1:C229 B1 17 8B 07 	.db 177, 23, 139, 7
  370 D1:C22D 88 2D 1E 03 	.db 136, 45, 30, 3
  371 D1:C231 F3 2D 60 02 	.db 243, 45, 96, 2
  372 D1:C235 38 2D 33 01 	.db 56, 45, 51, 1
  373 D1:C239 EC 2D 35 01 	.db 236, 45, 53, 1
  374 D1:C23D D8 2D 22 02 	.db 216, 45, 34, 2
  375 D1:C241 CB 2D 5C 01 	.db 203, 45, 92, 1
  376 D1:C245 6C 2D 01 06 	.db 108, 45, 1, 6
  377 D1:C249 25 2D 35 06 	.db 37, 45, 53, 6
  378 D1:C24D 6F 17 46 04 	.db 111, 23, 70, 4
  379 D1:C251 A9 17 3A 05 	.db 169, 23, 58, 5
  380 D1:C255 37 2D 63 02 	.db 55, 45, 99, 2
  381 D1:C259 3C 17 69 05 	.db 60, 23, 105, 5
  382 D1:C25D 08 2D 2E 02 	.db 8, 45, 46, 2
  383 D1:C261 71 2D 7E 02 	.db 113, 45, 126, 2
  384 D1:C265 83 2D 42 03 	.db 131, 45, 66, 3
  385 D1:C269 39 17 23 05 	.db 57, 23, 35, 5
  386 D1:C26D 40 2F 38 09 	.db 64, 47, 56, 9
  387 D1:C271 5E 2D 75 02 	.db 94, 45, 117, 2
  388 D1:C275 1C 2D 58 01 	.db 28, 45, 88, 1
  389 D1:C279 13 2D 70 01 	.db 19, 45, 112, 1
  390 D1:C27D -  -  -  -  
  391 D1:C27D -  -  -  -  FG_Data_21:
  392 D1:C27D F5 CE D1 -  	.dl Sprite_Table_0
  393 D1:C280 1D -  -  -  	.db 29
  394 D1:C281 56 2D 1A 02 	.db 86, 45, 26, 2
  395 D1:C285 B4 2D 28 02 	.db 180, 45, 40, 2
  396 D1:C289 50 2D 26 02 	.db 80, 45, 38, 2
  397 D1:C28D AE 2D 33 01 	.db 174, 45, 51, 1
  398 D1:C291 2E 2D 35 01 	.db 46, 45, 53, 1
  399 D1:C295 8C 2D 43 02 	.db 140, 45, 67, 2
  400 D1:C299 76 2D 47 01 	.db 118, 45, 71, 1
  401 D1:C29D 18 2D 3A 02 	.db 24, 45, 58, 2
  402 D1:C2A1 2B 2D 44 02 	.db 43, 45, 68, 2
  403 D1:C2A5 89 2D 51 01 	.db 137, 45, 81, 1
  404 D1:C2A9 5E 2D 56 01 	.db 94, 45, 86, 1
  405 D1:C2AD 5E 2D 56 01 	.db 94, 45, 86, 1
  406 D1:C2B1 00 2D 48 01 	.db 0, 45, 72, 1
  407 D1:C2B5 00 2D 48 01 	.db 0, 45, 72, 1
  408 D1:C2B9 AC 17 4C 00 	.db 172, 23, 76, 0
  409 D1:C2BD CD 17 84 04 	.db 205, 23, 132, 4
  410 D1:C2C1 A4 2D 17 06 	.db 164, 45, 23, 6
  411 D1:C2C5 23 2D 1D 02 	.db 35, 45, 29, 2
  412 D1:C2C9 E2 2F 2A 08 	.db 226, 47, 42, 8
  413 D1:C2CD 53 2D 5B 01 	.db 83, 45, 91, 1
  414 D1:C2D1 7A 2D 6D 01 	.db 122, 45, 109, 1
  415 D1:C2D5 4E 17 3E 05 	.db 78, 23, 62, 5
  416 D1:C2D9 DB 17 16 00 	.db 219, 23, 22, 0
  417 D1:C2DD 6F 17 76 07 	.db 111, 23, 118, 7
  418 D1:C2E1 46 2D 09 03 	.db 70, 45, 9, 3
  419 D1:C2E5 AA 2D 20 01 	.db 170, 45, 32, 1
  420 D1:C2E9 BE 2D 4B 02 	.db 190, 45, 75, 2
  421 D1:C2ED 54 2D 2C 02 	.db 84, 45, 44, 2
  422 D1:C2F1 1C 2D 60 02 	.db 28, 45, 96, 2
  423 D1:C2F5 -  -  -  -  
  424 D1:C2F5 -  -  -  -  FG_Data_20:
  425 D1:C2F5 F5 CE D1 -  	.dl Sprite_Table_0
  426 D1:C2F8 09 -  -  -  	.db 9
  427 D1:C2F9 0D 2D 39 01 	.db 13, 45, 57, 1
  428 D1:C2FD F5 2D 4E 02 	.db 245, 45, 78, 2
  429 D1:C301 F6 2D 1E 01 	.db 246, 45, 30, 1
  430 D1:C305 C5 2D 0F 01 	.db 197, 45, 15, 1
  431 D1:C309 3E 2D 5A 01 	.db 62, 45, 90, 1
  432 D1:C30D 48 2D 0D 06 	.db 72, 45, 13, 6
  433 D1:C311 89 17 32 04 	.db 137, 23, 50, 4
  434 D1:C315 96 17 61 05 	.db 150, 23, 97, 5
  435 D1:C319 66 2F 44 09 	.db 102, 47, 68, 9
  436 D1:C31D -  -  -  -  
  437 D1:C31D -  -  -  -  FG_Data_19:
  438 D1:C31D F5 CE D1 -  	.dl Sprite_Table_0
  439 D1:C320 06 -  -  -  	.db 6
  440 D1:C321 4F 2D 24 01 	.db 79, 45, 36, 1
  441 D1:C325 E0 2D 7D 01 	.db 224, 45, 125, 1
  442 D1:C329 6C 2D 4E 06 	.db 108, 45, 78, 6
  443 D1:C32D CE 17 14 04 	.db 206, 23, 20, 4
  444 D1:C331 D9 17 64 05 	.db 217, 23, 100, 5
  445 D1:C335 7A 17 3B 05 	.db 122, 23, 59, 5
  446 D1:C339 -  -  -  -  
  447 D1:C339 -  -  -  -  FG_Data_18:
  448 D1:C339 F5 CE D1 -  	.dl Sprite_Table_0
  449 D1:C33C 0B -  -  -  	.db 11
  450 D1:C33D 45 2D 49 02 	.db 69, 45, 73, 2
  451 D1:C341 D9 2D 39 02 	.db 217, 45, 57, 2
  452 D1:C345 EE 2D 6D 02 	.db 238, 45, 109, 2
  453 D1:C349 82 2D 0A 03 	.db 130, 45, 10, 3
  454 D1:C34D 6E 2D 62 06 	.db 110, 45, 98, 6
  455 D1:C351 02 17 19 04 	.db 2, 23, 25, 4
  456 D1:C355 F6 17 57 07 	.db 246, 23, 87, 7
  457 D1:C359 F8 17 18 05 	.db 248, 23, 24, 5
  458 D1:C35D 89 17 2E 00 	.db 137, 23, 46, 0
  459 D1:C361 0F 17 3D 00 	.db 15, 23, 61, 0
  460 D1:C365 D1 2F 12 09 	.db 209, 47, 18, 9
  461 D1:C369 -  -  -  -  
  462 D1:C369 -  -  -  -  FG_Data_17:
  463 D1:C369 F5 CE D1 -  	.dl Sprite_Table_0
  464 D1:C36C 09 -  -  -  	.db 9
  465 D1:C36D 12 2D 77 01 	.db 18, 45, 119, 1
  466 D1:C371 38 2D 28 01 	.db 56, 45, 40, 1
  467 D1:C375 73 2D 51 01 	.db 115, 45, 81, 1
  468 D1:C379 81 2D 1D 03 	.db 129, 45, 29, 3
  469 D1:C37D 1B 17 50 07 	.db 27, 23, 80, 7
  470 D1:C381 79 17 77 00 	.db 121, 23, 119, 0
  471 D1:C385 ED 2D 79 02 	.db 237, 45, 121, 2
  472 D1:C389 D4 2D 1A 02 	.db 212, 45, 26, 2
  473 D1:C38D C7 2D 4C 06 	.db 199, 45, 76, 6
  474 D1:C391 -  -  -  -  
  475 D1:C391 -  -  -  -  FG_Data_16:
  476 D1:C391 F5 CE D1 -  	.dl Sprite_Table_0
  477 D1:C394 09 -  -  -  	.db 9
  478 D1:C395 9C 2D 16 01 	.db 156, 45, 22, 1
  479 D1:C399 43 2D 47 02 	.db 67, 45, 71, 2
  480 D1:C39D 91 2D 67 06 	.db 145, 45, 103, 6
  481 D1:C3A1 F3 2D 10 06 	.db 243, 45, 16, 6
  482 D1:C3A5 D0 2D 4F 03 	.db 208, 45, 79, 3
  483 D1:C3A9 15 2D 6B 03 	.db 21, 45, 107, 3
  484 D1:C3AD 43 17 11 07 	.db 67, 23, 17, 7
  485 D1:C3B1 B4 17 73 00 	.db 180, 23, 115, 0
  486 D1:C3B5 75 17 41 00 	.db 117, 23, 65, 0
  487 D1:C3B9 -  -  -  -  
  488 D1:C3B9 -  -  -  -  FG_Data_15:
  489 D1:C3B9 F5 CE D1 -  	.dl Sprite_Table_0
  490 D1:C3BC 09 -  -  -  	.db 9
  491 D1:C3BD 4D 2D 2A 01 	.db 77, 45, 42, 1
  492 D1:C3C1 A3 2D 68 01 	.db 163, 45, 104, 1
  493 D1:C3C5 FE 2D 22 02 	.db 254, 45, 34, 2
  494 D1:C3C9 7A 2D 27 03 	.db 122, 45, 39, 3
  495 D1:C3CD 3A 2D 5B 03 	.db 58, 45, 91, 3
  496 D1:C3D1 A8 17 11 04 	.db 168, 23, 17, 4
  497 D1:C3D5 D0 17 4A 05 	.db 208, 23, 74, 5
  498 D1:C3D9 13 17 05 05 	.db 19, 23, 5, 5
  499 D1:C3DD 60 2F 47 09 	.db 96, 47, 71, 9
  500 D1:C3E1 -  -  -  -  
  501 D1:C3E1 -  -  -  -  FG_Data_14:
  502 D1:C3E1 F5 CE D1 -  	.dl Sprite_Table_0
  503 D1:C3E4 08 -  -  -  	.db 8
  504 D1:C3E5 78 2D 24 01 	.db 120, 45, 36, 1
  505 D1:C3E9 6B 2D 5F 02 	.db 107, 45, 95, 2
  506 D1:C3ED BB 2D 49 03 	.db 187, 45, 73, 3
  507 D1:C3F1 EB 2D 0E 06 	.db 235, 45, 14, 6
  508 D1:C3F5 0C 2D 04 06 	.db 12, 45, 4, 6
  509 D1:C3F9 0F 17 48 07 	.db 15, 23, 72, 7
  510 D1:C3FD AF 17 74 04 	.db 175, 23, 116, 4
  511 D1:C401 49 17 3D 00 	.db 73, 23, 61, 0
  512 D1:C405 -  -  -  -  
  513 D1:C405 -  -  -  -  FG_Data_13:
  514 D1:C405 F5 CE D1 -  	.dl Sprite_Table_0
  515 D1:C408 08 -  -  -  	.db 8
  516 D1:C409 5E 2D 4D 01 	.db 94, 45, 77, 1
  517 D1:C40D 4A 2D 23 02 	.db 74, 45, 35, 2
  518 D1:C411 B3 2D 73 02 	.db 179, 45, 115, 2
  519 D1:C415 C5 2D 37 03 	.db 197, 45, 55, 3
  520 D1:C419 0F 17 79 04 	.db 15, 23, 121, 4
  521 D1:C41D DC 17 6C 00 	.db 220, 23, 108, 0
  522 D1:C421 7B 17 18 05 	.db 123, 23, 24, 5
  523 D1:C425 82 2F 2D 09 	.db 130, 47, 45, 9
  524 D1:C429 -  -  -  -  
  525 D1:C429 -  -  -  -  FG_Data_12:
  526 D1:C429 F5 CE D1 -  	.dl Sprite_Table_0
  527 D1:C42C 10 -  -  -  	.db 16
  528 D1:C42D F6 2D 1D 02 	.db 246, 45, 29, 2
  529 D1:C431 F0 2D 28 01 	.db 240, 45, 40, 1
  530 D1:C435 CE 2D 38 02 	.db 206, 45, 56, 2
  531 D1:C439 B8 2D 3C 01 	.db 184, 45, 60, 1
  532 D1:C43D CB 2D 46 01 	.db 203, 45, 70, 1
  533 D1:C441 A0 2D 4B 01 	.db 160, 45, 75, 1
  534 D1:C445 A0 2D 4B 01 	.db 160, 45, 75, 1
  535 D1:C449 BC 2D 62 01 	.db 188, 45, 98, 1
  536 D1:C44D 95 2D 50 01 	.db 149, 45, 80, 1
  537 D1:C451 96 2D 21 02 	.db 150, 45, 33, 2
  538 D1:C455 65 2D 12 02 	.db 101, 45, 18, 2
  539 D1:C459 E6 2D 0C 06 	.db 230, 45, 12, 6
  540 D1:C45D 29 17 34 07 	.db 41, 23, 52, 7
  541 D1:C461 EE 17 41 00 	.db 238, 23, 65, 0
  542 D1:C465 36 17 64 00 	.db 54, 23, 100, 0
  543 D1:C469 06 2F 46 08 	.db 6, 47, 70, 8
  544 D1:C46D -  -  -  -  
  545 D1:C46D -  -  -  -  FG_Data_11:
  546 D1:C46D F5 CE D1 -  	.dl Sprite_Table_0
  547 D1:C470 08 -  -  -  	.db 8
  548 D1:C471 AD 2D 3C 02 	.db 173, 45, 60, 2
  549 D1:C475 DE 2D 5D 02 	.db 222, 45, 93, 2
  550 D1:C479 80 2D 80 02 	.db 128, 45, 128, 2
  551 D1:C47D E8 2D 10 06 	.db 232, 45, 16, 6
  552 D1:C481 0C 2D 51 06 	.db 12, 45, 81, 6
  553 D1:C485 6E 17 16 07 	.db 110, 23, 22, 7
  554 D1:C489 79 17 67 00 	.db 121, 23, 103, 0
  555 D1:C48D 1A 17 3E 00 	.db 26, 23, 62, 0
  556 D1:C491 -  -  -  -  
  557 D1:C491 -  -  -  -  FG_Data_10:
  558 D1:C491 F5 CE D1 -  	.dl Sprite_Table_0
  559 D1:C494 09 -  -  -  	.db 9
  560 D1:C495 79 2D 3B 01 	.db 121, 45, 59, 1
  561 D1:C499 8E 2D 6F 01 	.db 142, 45, 111, 1
  562 D1:C49D EF 2D 27 02 	.db 239, 45, 39, 2
  563 D1:C4A1 22 2D 0D 03 	.db 34, 45, 13, 3
  564 D1:C4A5 0E 2D 65 06 	.db 14, 45, 101, 6
  565 D1:C4A9 96 17 5A 07 	.db 150, 23, 90, 7
  566 D1:C4AD 98 17 1B 00 	.db 152, 23, 27, 0
  567 D1:C4B1 29 17 30 05 	.db 41, 23, 48, 5
  568 D1:C4B5 71 2F 14 08 	.db 113, 47, 20, 8
  569 D1:C4B9 -  -  -  -  
  570 D1:C4B9 -  -  -  -  FG_Data_9:
  571 D1:C4B9 F5 CE D1 -  	.dl Sprite_Table_0
  572 D1:C4BC 09 -  -  -  	.db 9
  573 D1:C4BD 18 2D 56 01 	.db 24, 45, 86, 1
  574 D1:C4C1 26 2D 22 03 	.db 38, 45, 34, 3
  575 D1:C4C5 1E 17 7C 00 	.db 30, 23, 124, 0
  576 D1:C4C9 8D 2D 7B 01 	.db 141, 45, 123, 1
  577 D1:C4CD 74 2D 1C 01 	.db 116, 45, 28, 1
  578 D1:C4D1 E5 2D 4B 01 	.db 229, 45, 75, 1
  579 D1:C4D5 67 2D 4F 06 	.db 103, 45, 79, 6
  580 D1:C4D9 A2 17 1B 07 	.db 162, 23, 27, 7
  581 D1:C4DD AF 17 3F 05 	.db 175, 23, 63, 5
  582 D1:C4E1 -  -  -  -  
  583 D1:C4E1 -  -  -  -  FG_Data_8:
  584 D1:C4E1 F5 CE D1 -  	.dl Sprite_Table_0
  585 D1:C4E4 09 -  -  -  	.db 9
  586 D1:C4E5 41 2D 1B 01 	.db 65, 45, 27, 1
  587 D1:C4E9 B7 2D 7C 01 	.db 183, 45, 124, 1
  588 D1:C4ED DD 2D 2D 01 	.db 221, 45, 45, 1
  589 D1:C4F1 36 2D 6C 06 	.db 54, 45, 108, 6
  590 D1:C4F5 98 2D 15 06 	.db 152, 45, 21, 6
  591 D1:C4F9 75 2D 54 03 	.db 117, 45, 84, 3
  592 D1:C4FD C0 17 55 07 	.db 192, 23, 85, 7
  593 D1:C501 59 17 78 00 	.db 89, 23, 120, 0
  594 D1:C505 1A 17 46 00 	.db 26, 23, 70, 0
  595 D1:C509 -  -  -  -  
  596 D1:C509 -  -  -  -  FG_Data_7:
  597 D1:C509 F5 CE D1 -  	.dl Sprite_Table_0
  598 D1:C50C 09 -  -  -  	.db 9
  599 D1:C50D 48 2D 6D 01 	.db 72, 45, 109, 1
  600 D1:C511 A3 2D 27 02 	.db 163, 45, 39, 2
  601 D1:C515 E8 2D 4C 02 	.db 232, 45, 76, 2
  602 D1:C519 BA 2D 70 03 	.db 186, 45, 112, 3
  603 D1:C51D 1F 2D 2C 03 	.db 31, 45, 44, 3
  604 D1:C521 4D 17 16 04 	.db 77, 23, 22, 4
  605 D1:C525 E8 17 16 07 	.db 232, 23, 22, 7
  606 D1:C529 75 17 4F 05 	.db 117, 23, 79, 5
  607 D1:C52D 05 2F 4C 09 	.db 5, 47, 76, 9
  608 D1:C531 -  -  -  -  
  609 D1:C531 -  -  -  -  FG_Data_6:
  610 D1:C531 F5 CE D1 -  	.dl Sprite_Table_0
  611 D1:C534 08 -  -  -  	.db 8
  612 D1:C535 1D 2D 29 01 	.db 29, 45, 41, 1
  613 D1:C539 10 2D 64 02 	.db 16, 45, 100, 2
  614 D1:C53D F2 2D 2F 01 	.db 242, 45, 47, 1
  615 D1:C541 DF 2D 60 03 	.db 223, 45, 96, 3
  616 D1:C545 60 2D 4E 03 	.db 96, 45, 78, 3
  617 D1:C549 90 2D 13 06 	.db 144, 45, 19, 6
  618 D1:C54D 54 17 79 04 	.db 84, 23, 121, 4
  619 D1:C551 B8 17 0A 05 	.db 184, 23, 10, 5
  620 D1:C555 -  -  -  -  
  621 D1:C555 -  -  -  -  FG_Data_5:
  622 D1:C555 F5 CE D1 -  	.dl Sprite_Table_0
  623 D1:C558 09 -  -  -  	.db 9
  624 D1:C559 03 2D 52 01 	.db 3, 45, 82, 1
  625 D1:C55D 58 2D 78 02 	.db 88, 45, 120, 2
  626 D1:C561 B1 2D 09 06 	.db 177, 45, 9, 6
  627 D1:C565 6A 2D 3C 03 	.db 106, 45, 60, 3
  628 D1:C569 B4 17 4D 07 	.db 180, 23, 77, 7
  629 D1:C56D EE 17 42 00 	.db 238, 23, 66, 0
  630 D1:C571 81 17 71 00 	.db 129, 23, 113, 0
  631 D1:C575 20 17 1D 05 	.db 32, 23, 29, 5
  632 D1:C579 27 2F 32 09 	.db 39, 47, 50, 9
  633 D1:C57D -  -  -  -  
  634 D1:C57D -  -  -  -  FG_Data_4:
  635 D1:C57D F5 CE D1 -  	.dl Sprite_Table_0
  636 D1:C580 0F -  -  -  	.db 15
  637 D1:C581 9B 2D 22 02 	.db 155, 45, 34, 2
  638 D1:C585 95 2D 2D 01 	.db 149, 45, 45, 1
  639 D1:C589 73 2D 3D 02 	.db 115, 45, 61, 2
  640 D1:C58D 5D 2D 41 01 	.db 93, 45, 65, 1
  641 D1:C591 70 2D 4B 01 	.db 112, 45, 75, 1
  642 D1:C595 45 2D 50 01 	.db 69, 45, 80, 1
  643 D1:C599 45 2D 50 01 	.db 69, 45, 80, 1
  644 D1:C59D 61 2D 67 01 	.db 97, 45, 103, 1
  645 D1:C5A1 EF 2D 28 02 	.db 239, 45, 40, 2
  646 D1:C5A5 3A 2D 55 01 	.db 58, 45, 85, 1
  647 D1:C5A9 3B 2D 26 02 	.db 59, 45, 38, 2
  648 D1:C5AD 0A 2D 17 02 	.db 10, 45, 23, 2
  649 D1:C5B1 8B 2D 11 06 	.db 139, 45, 17, 6
  650 D1:C5B5 B4 17 7E 04 	.db 180, 23, 126, 4
  651 D1:C5B9 93 17 46 00 	.db 147, 23, 70, 0
  652 D1:C5BD -  -  -  -  
  653 D1:C5BD -  -  -  -  FG_Data_3:
  654 D1:C5BD F5 CE D1 -  	.dl Sprite_Table_0
  655 D1:C5C0 09 -  -  -  	.db 9
  656 D1:C5C1 52 2D 41 02 	.db 82, 45, 65, 2
  657 D1:C5C5 83 2D 62 02 	.db 131, 45, 98, 2
  658 D1:C5C9 25 2D 85 02 	.db 37, 45, 133, 2
  659 D1:C5CD 8D 2D 15 06 	.db 141, 45, 21, 6
  660 D1:C5D1 13 17 1B 07 	.db 19, 23, 27, 7
  661 D1:C5D5 CE 17 39 07 	.db 206, 23, 57, 7
  662 D1:C5D9 DB 17 69 00 	.db 219, 23, 105, 0
  663 D1:C5DD 1E 17 6C 00 	.db 30, 23, 108, 0
  664 D1:C5E1 AB 2F 4B 08 	.db 171, 47, 75, 8
  665 D1:C5E5 -  -  -  -  
  666 D1:C5E5 -  -  -  -  FG_Data_2:
  667 D1:C5E5 F5 CE D1 -  	.dl Sprite_Table_0
  668 D1:C5E8 08 -  -  -  	.db 8
  669 D1:C5E9 1E 2D 40 01 	.db 30, 45, 64, 1
  670 D1:C5ED 33 2D 74 01 	.db 51, 45, 116, 1
  671 D1:C5F1 94 2D 2C 02 	.db 148, 45, 44, 2
  672 D1:C5F5 B1 2D 56 06 	.db 177, 45, 86, 6
  673 D1:C5F9 3B 17 5F 07 	.db 59, 23, 95, 7
  674 D1:C5FD BF 17 43 00 	.db 191, 23, 67, 0
  675 D1:C601 3D 17 20 00 	.db 61, 23, 32, 0
  676 D1:C605 16 2F 19 08 	.db 22, 47, 25, 8
  677 D1:C609 -  -  -  -  
  678 D1:C609 -  -  -  -  FG_Data_1:
  679 D1:C609 F5 CE D1 -  	.dl Sprite_Table_0
  680 D1:C60C 08 -  -  -  	.db 8
  681 D1:C60D 15 2D 68 02 	.db 21, 45, 104, 2
  682 D1:C611 8A 2D 50 01 	.db 138, 45, 80, 1
  683 D1:C615 C7 2D 12 03 	.db 199, 45, 18, 3
  684 D1:C619 B3 2D 6A 06 	.db 179, 45, 106, 6
  685 D1:C61D 0C 2D 54 06 	.db 12, 45, 84, 6
  686 D1:C621 47 17 20 07 	.db 71, 23, 32, 7
  687 D1:C625 CE 17 35 05 	.db 206, 23, 53, 5
  688 D1:C629 54 17 44 05 	.db 84, 23, 68, 5
  689 D1:C62D -  -  -  -  
  690 D1:C62D -  -  -  -  FG_Data_0:
  691 D1:C62D F5 CE D1 -  	.dl Sprite_Table_0
  692 D1:C630 09 -  -  -  	.db 9
  693 D1:C631 36 17 66 00 	.db 54, 23, 102, 0
  694 D1:C635 87 2D 2B 01 	.db 135, 45, 43, 1
  695 D1:C639 FC 2D 09 02 	.db 252, 45, 9, 2
  696 D1:C63D B2 2D 84 02 	.db 178, 45, 132, 2
  697 D1:C641 81 2D 0E 03 	.db 129, 45, 14, 3
  698 D1:C645 2E 17 07 04 	.db 46, 23, 7, 4
  699 D1:C649 BD 17 61 04 	.db 189, 23, 97, 4
  700 D1:C64D C8 17 1A 05 	.db 200, 23, 26, 5
  701 D1:C651 36 17 47 00 	.db 54, 23, 71, 0
  702 D1:C655 -  -  -  -  
  703 D1:C655 -  -  -  -  
  704 D1:C655 -  -  -  -  
Listing for file "ascent.asm"
  273 D1:C655 -  -  -  -  #include "MG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\MG_Data.txt"
    1 D1:C655 -  -  -  -  MG_Data_frame_table:
    2 D1:C655 01 CB D1 -  	.dl MG_Data_0
    3 D1:C658 CD CA D1 -  	.dl MG_Data_1
    4 D1:C65B A5 CA D1 -  	.dl MG_Data_2
    5 D1:C65E 75 CA D1 -  	.dl MG_Data_3
    6 D1:C661 39 CA D1 -  	.dl MG_Data_4
    7 D1:C664 09 CA D1 -  	.dl MG_Data_5
    8 D1:C667 D9 C9 D1 -  	.dl MG_Data_6
    9 D1:C66A AD C9 D1 -  	.dl MG_Data_7
   10 D1:C66D 75 C9 D1 -  	.dl MG_Data_8
   11 D1:C670 51 C9 D1 -  	.dl MG_Data_9
   12 D1:C673 25 C9 D1 -  	.dl MG_Data_10
   13 D1:C676 ED C8 D1 -  	.dl MG_Data_11
   14 D1:C679 8D C8 D1 -  	.dl MG_Data_12
   15 D1:C67C 29 C8 D1 -  	.dl MG_Data_13
   16 D1:C67F CD C7 D1 -  	.dl MG_Data_14
   17 D1:C682 71 C7 D1 -  	.dl MG_Data_15
   18 D1:C685 15 C7 D1 -  	.dl MG_Data_16
   19 D1:C688 E9 C6 D1 -  	.dl MG_Data_17
   20 D1:C68B BD C6 D1 -  	.dl MG_Data_18
   21 D1:C68E 91 C6 D1 -  	.dl MG_Data_19
   22 D1:C691 -  -  -  -  
   23 D1:C691 -  -  -  -  
   24 D1:C691 -  -  -  -  
   25 D1:C691 -  -  -  -  MG_Data_19:
   26 D1:C691 F5 CE D1 -  	.dl Sprite_Table_0
   27 D1:C694 0A -  -  -  	.db 10
   28 D1:C695 9C 0E 5E 0A 	.db 156, 14, 94, 10
   29 D1:C699 0C 0E 2A 0B 	.db 12, 14, 42, 11
   30 D1:C69D 45 0E 82 0A 	.db 69, 14, 130, 10
   31 D1:C6A1 72 0E 26 0A 	.db 114, 14, 38, 10
   32 D1:C6A5 0C 0E 57 0B 	.db 12, 14, 87, 11
   33 D1:C6A9 43 2F 3F 08 	.db 67, 47, 63, 8
   34 D1:C6AD 63 2D 1A 01 	.db 99, 45, 26, 1
   35 D1:C6B1 63 2D 79 02 	.db 99, 45, 121, 2
   36 D1:C6B5 28 17 6C 0E 	.db 40, 23, 108, 14
   37 D1:C6B9 90 17 36 0E 	.db 144, 23, 54, 14
   38 D1:C6BD -  -  -  -  
   39 D1:C6BD -  -  -  -  MG_Data_18:
   40 D1:C6BD F5 CE D1 -  	.dl Sprite_Table_0
   41 D1:C6C0 0A -  -  -  	.db 10
   42 D1:C6C1 02 0E 75 0A 	.db 2, 14, 117, 10
   43 D1:C6C5 89 0E 35 0A 	.db 137, 14, 53, 10
   44 D1:C6C9 FE 0E 19 0B 	.db 254, 14, 25, 11
   45 D1:C6CD 8D 0E 6F 0A 	.db 141, 14, 111, 10
   46 D1:C6D1 2E 0E 3D 0B 	.db 46, 14, 61, 11
   47 D1:C6D5 03 2D 1F 02 	.db 3, 45, 31, 2
   48 D1:C6D9 BC 2D 67 02 	.db 188, 45, 103, 2
   49 D1:C6DD AE 2D 2A 02 	.db 174, 45, 42, 2
   50 D1:C6E1 39 2D 5D 03 	.db 57, 45, 93, 3
   51 D1:C6E5 4F 17 3F 0E 	.db 79, 23, 63, 14
   52 D1:C6E9 -  -  -  -  
   53 D1:C6E9 -  -  -  -  MG_Data_17:
   54 D1:C6E9 F5 CE D1 -  	.dl Sprite_Table_0
   55 D1:C6EC 0A -  -  -  	.db 10
   56 D1:C6ED 9F 0E 51 0A 	.db 159, 14, 81, 10
   57 D1:C6F1 76 0E 2C 0B 	.db 118, 14, 44, 11
   58 D1:C6F5 E7 0E 28 0B 	.db 231, 14, 40, 11
   59 D1:C6F9 6B 0E 64 0A 	.db 107, 14, 100, 10
   60 D1:C6FD CD 2F 78 09 	.db 205, 47, 120, 9
   61 D1:C701 21 2D 74 01 	.db 33, 45, 116, 1
   62 D1:C705 8D 2D 30 03 	.db 141, 45, 48, 3
   63 D1:C709 5C 17 75 0E 	.db 92, 23, 117, 14
   64 D1:C70D C7 17 40 0D 	.db 199, 23, 64, 13
   65 D1:C711 13 17 3E 0D 	.db 19, 23, 62, 13
   66 D1:C715 -  -  -  -  
   67 D1:C715 -  -  -  -  MG_Data_16:
   68 D1:C715 F5 CE D1 -  	.dl Sprite_Table_0
   69 D1:C718 16 -  -  -  	.db 22
   70 D1:C719 52 0E 1B 0A 	.db 82, 14, 27, 10
   71 D1:C71D 7E 2D 42 03 	.db 126, 45, 66, 3
   72 D1:C721 5B 2D 16 02 	.db 91, 45, 22, 2
   73 D1:C725 D1 2F 7A 08 	.db 209, 47, 122, 8
   74 D1:C729 DF 0E 42 0A 	.db 223, 14, 66, 10
   75 D1:C72D 58 0E 5E 0A 	.db 88, 14, 94, 10
   76 D1:C731 A4 0E 64 0A 	.db 164, 14, 100, 10
   77 D1:C735 A8 0E 22 0A 	.db 168, 14, 34, 10
   78 D1:C739 E4 17 38 0C 	.db 228, 23, 56, 12
   79 D1:C73D 7C 17 6E 0C 	.db 124, 23, 110, 12
   80 D1:C741 02 2D 2C 01 	.db 2, 45, 44, 1
   81 D1:C745 B7 2D 7B 01 	.db 183, 45, 123, 1
   82 D1:C749 B7 2D 1D 02 	.db 183, 45, 29, 2
   83 D1:C74D 10 2D 69 01 	.db 16, 45, 105, 1
   84 D1:C751 97 2F 42 09 	.db 151, 47, 66, 9
   85 D1:C755 60 0E 59 0A 	.db 96, 14, 89, 10
   86 D1:C759 C6 0E 29 0B 	.db 198, 14, 41, 11
   87 D1:C75D 99 0E 85 0B 	.db 153, 14, 133, 11
   88 D1:C761 60 0E 2C 0A 	.db 96, 14, 44, 10
   89 D1:C765 F0 0E 61 0B 	.db 240, 14, 97, 11
   90 D1:C769 D9 17 36 0E 	.db 217, 23, 54, 14
   91 D1:C76D 29 17 64 0F 	.db 41, 23, 100, 15
   92 D1:C771 -  -  -  -  
   93 D1:C771 -  -  -  -  MG_Data_15:
   94 D1:C771 F5 CE D1 -  	.dl Sprite_Table_0
   95 D1:C774 16 -  -  -  	.db 22
   96 D1:C775 56 0E 78 0B 	.db 86, 14, 120, 11
   97 D1:C779 39 2D 15 03 	.db 57, 45, 21, 3
   98 D1:C77D C6 2D 57 01 	.db 198, 45, 87, 1
   99 D1:C781 CB 2F 27 08 	.db 203, 47, 39, 8
  100 D1:C785 A0 2F 72 08 	.db 160, 47, 114, 8
  101 D1:C789 94 0E 8A 0B 	.db 148, 14, 138, 11
  102 D1:C78D 64 0E 6F 0A 	.db 100, 14, 111, 10
  103 D1:C791 F3 0E 2E 0B 	.db 243, 14, 46, 11
  104 D1:C795 F3 0E 6A 0B 	.db 243, 14, 106, 11
  105 D1:C799 82 0E 53 0A 	.db 130, 14, 83, 10
  106 D1:C79D 55 0E 20 0A 	.db 85, 14, 32, 10
  107 D1:C7A1 1B 17 42 0F 	.db 27, 23, 66, 15
  108 D1:C7A5 A3 17 41 0C 	.db 163, 23, 65, 12
  109 D1:C7A9 8D 2D 60 06 	.db 141, 45, 96, 6
  110 D1:C7AD 57 2D 21 01 	.db 87, 45, 33, 1
  111 D1:C7B1 21 2F 7A 08 	.db 33, 47, 122, 8
  112 D1:C7B5 82 0E 3F 0A 	.db 130, 14, 63, 10
  113 D1:C7B9 3B 0E 2A 0A 	.db 59, 14, 42, 10
  114 D1:C7BD E1 0E 72 0B 	.db 225, 14, 114, 11
  115 D1:C7C1 DD 0E 38 0B 	.db 221, 14, 56, 11
  116 D1:C7C5 5E 17 36 0E 	.db 94, 23, 54, 14
  117 D1:C7C9 EE 17 82 0C 	.db 238, 23, 130, 12
  118 D1:C7CD -  -  -  -  
  119 D1:C7CD -  -  -  -  MG_Data_14:
  120 D1:C7CD F5 CE D1 -  	.dl Sprite_Table_0
  121 D1:C7D0 16 -  -  -  	.db 22
  122 D1:C7D1 F3 0E 54 0B 	.db 243, 14, 84, 11
  123 D1:C7D5 BB 2D 7B 06 	.db 187, 45, 123, 6
  124 D1:C7D9 FF 2D 3C 01 	.db 255, 45, 60, 1
  125 D1:C7DD 78 2D 60 01 	.db 120, 45, 96, 1
  126 D1:C7E1 5A 2F 2A 08 	.db 90, 47, 42, 8
  127 D1:C7E5 C9 0E 1B 0B 	.db 201, 14, 27, 11
  128 D1:C7E9 89 0E 62 0A 	.db 137, 14, 98, 10
  129 D1:C7ED 8A 0E 1E 0A 	.db 138, 14, 30, 10
  130 D1:C7F1 BB 0E 8A 0B 	.db 187, 14, 138, 11
  131 D1:C7F5 CE 0E 4C 0B 	.db 206, 14, 76, 11
  132 D1:C7F9 3B 0E 60 0A 	.db 59, 14, 96, 10
  133 D1:C7FD 67 17 40 0F 	.db 103, 23, 64, 15
  134 D1:C801 B0 17 77 0C 	.db 176, 23, 119, 12
  135 D1:C805 2D 17 38 0C 	.db 45, 23, 56, 12
  136 D1:C809 E1 2D 33 06 	.db 225, 45, 51, 6
  137 D1:C80D 75 2D 77 02 	.db 117, 45, 119, 2
  138 D1:C811 25 2F 7D 09 	.db 37, 47, 125, 9
  139 D1:C815 33 0E 45 0B 	.db 51, 14, 69, 11
  140 D1:C819 BF 0E 67 0B 	.db 191, 14, 103, 11
  141 D1:C81D CA 0E 2E 0A 	.db 202, 14, 46, 10
  142 D1:C821 97 17 23 0C 	.db 151, 23, 35, 12
  143 D1:C825 F2 17 65 0E 	.db 242, 23, 101, 14
  144 D1:C829 -  -  -  -  
  145 D1:C829 -  -  -  -  MG_Data_13:
  146 D1:C829 F5 CE D1 -  	.dl Sprite_Table_0
  147 D1:C82C 18 -  -  -  	.db 24
  148 D1:C82D 47 0E 6C 0A 	.db 71, 14, 108, 10
  149 D1:C831 01 17 5A 0E 	.db 1, 23, 90, 14
  150 D1:C835 1C 2D 1A 06 	.db 28, 45, 26, 6
  151 D1:C839 D5 2D 4B 03 	.db 213, 45, 75, 3
  152 D1:C83D E3 2D 1F 02 	.db 227, 45, 31, 2
  153 D1:C841 01 2D 7B 01 	.db 1, 45, 123, 1
  154 D1:C845 7E 0E 4D 0A 	.db 126, 14, 77, 10
  155 D1:C849 7E 0E 2F 0A 	.db 126, 14, 47, 10
  156 D1:C84D 6B 0E 73 0A 	.db 107, 14, 115, 10
  157 D1:C851 C9 0E 6F 0A 	.db 201, 14, 111, 10
  158 D1:C855 D5 0E 48 0B 	.db 213, 14, 72, 11
  159 D1:C859 D2 0E 2C 0B 	.db 210, 14, 44, 11
  160 D1:C85D 7D 17 67 0D 	.db 125, 23, 103, 13
  161 D1:C861 42 17 85 0E 	.db 66, 23, 133, 14
  162 D1:C865 D2 2D 45 06 	.db 210, 45, 69, 6
  163 D1:C869 AF 2D 18 01 	.db 175, 45, 24, 1
  164 D1:C86D 1A 2D 5A 02 	.db 26, 45, 90, 2
  165 D1:C871 1F 2F 2A 09 	.db 31, 47, 42, 9
  166 D1:C875 AC 0E 61 0B 	.db 172, 14, 97, 11
  167 D1:C879 47 0E 30 0A 	.db 71, 14, 48, 10
  168 D1:C87D F8 0E 67 0B 	.db 248, 14, 103, 11
  169 D1:C881 FC 0E 25 0B 	.db 252, 14, 37, 11
  170 D1:C885 B6 17 79 0C 	.db 182, 23, 121, 12
  171 D1:C889 FE 17 29 0F 	.db 254, 23, 41, 15
  172 D1:C88D -  -  -  -  
  173 D1:C88D -  -  -  -  MG_Data_12:
  174 D1:C88D F5 CE D1 -  	.dl Sprite_Table_0
  175 D1:C890 17 -  -  -  	.db 23
  176 D1:C891 22 0E 4E 0A 	.db 34, 14, 78, 10
  177 D1:C895 63 2D 5D 03 	.db 99, 45, 93, 3
  178 D1:C899 D3 2F 22 08 	.db 211, 47, 34, 8
  179 D1:C89D AF 0E 55 0B 	.db 175, 14, 85, 11
  180 D1:C8A1 94 0E 84 0B 	.db 148, 14, 132, 11
  181 D1:C8A5 76 0E 2D 0A 	.db 118, 14, 45, 10
  182 D1:C8A9 EB 0E 73 0A 	.db 235, 14, 115, 10
  183 D1:C8AD F4 0E 3B 0B 	.db 244, 14, 59, 11
  184 D1:C8B1 74 0E 59 0B 	.db 116, 14, 89, 11
  185 D1:C8B5 B2 17 38 0C 	.db 178, 23, 56, 12
  186 D1:C8B9 3B 17 3F 0E 	.db 59, 23, 63, 14
  187 D1:C8BD 46 17 67 0C 	.db 70, 23, 103, 12
  188 D1:C8C1 0F 2D 7D 03 	.db 15, 45, 125, 3
  189 D1:C8C5 53 2D 3F 02 	.db 83, 45, 63, 2
  190 D1:C8C9 F4 2F 75 09 	.db 244, 47, 117, 9
  191 D1:C8CD E8 0E 8C 0A 	.db 232, 14, 140, 10
  192 D1:C8D1 1D 0E 1D 0A 	.db 29, 14, 29, 10
  193 D1:C8D5 0F 0E 8C 0A 	.db 15, 14, 140, 10
  194 D1:C8D9 B8 0E 72 0B 	.db 184, 14, 114, 11
  195 D1:C8DD D6 0E 56 0B 	.db 214, 14, 86, 11
  196 D1:C8E1 A9 0E 23 0B 	.db 169, 14, 35, 11
  197 D1:C8E5 8D 2D 18 06 	.db 141, 45, 24, 6
  198 D1:C8E9 3B 17 17 0F 	.db 59, 23, 23, 15
  199 D1:C8ED -  -  -  -  
  200 D1:C8ED -  -  -  -  MG_Data_11:
  201 D1:C8ED F5 CE D1 -  	.dl Sprite_Table_0
  202 D1:C8F0 0D -  -  -  	.db 13
  203 D1:C8F1 26 0E 2E 0A 	.db 38, 14, 46, 10
  204 D1:C8F5 8F 0E 63 0B 	.db 143, 14, 99, 11
  205 D1:C8F9 DE 0E 21 0B 	.db 222, 14, 33, 11
  206 D1:C8FD 29 0E 4A 0A 	.db 41, 14, 74, 10
  207 D1:C901 1D 0E 72 0B 	.db 29, 14, 114, 11
  208 D1:C905 DD 0E 65 0B 	.db 221, 14, 101, 11
  209 D1:C909 AE 2F 2D 09 	.db 174, 47, 45, 9
  210 D1:C90D 37 2D 21 01 	.db 55, 45, 33, 1
  211 D1:C911 CC 2D 63 02 	.db 204, 45, 99, 2
  212 D1:C915 29 2D 4E 06 	.db 41, 45, 78, 6
  213 D1:C919 0A 17 7C 0E 	.db 10, 23, 124, 14
  214 D1:C91D EB 17 26 0E 	.db 235, 23, 38, 14
  215 D1:C921 52 17 2C 0D 	.db 82, 23, 44, 13
  216 D1:C925 -  -  -  -  
  217 D1:C925 -  -  -  -  MG_Data_10:
  218 D1:C925 F5 CE D1 -  	.dl Sprite_Table_0
  219 D1:C928 0A -  -  -  	.db 10
  220 D1:C929 48 0E 3D 0A 	.db 72, 14, 61, 10
  221 D1:C92D BF 0E 76 0B 	.db 191, 14, 118, 11
  222 D1:C931 D2 0E 32 0B 	.db 210, 14, 50, 11
  223 D1:C935 3F 0E 76 0B 	.db 63, 14, 118, 11
  224 D1:C939 03 0E 57 0A 	.db 3, 14, 87, 10
  225 D1:C93D D2 0E 50 0B 	.db 210, 14, 80, 11
  226 D1:C941 27 2F 25 09 	.db 39, 47, 37, 9
  227 D1:C945 55 2D 7E 02 	.db 85, 45, 126, 2
  228 D1:C949 70 2D 1C 03 	.db 112, 45, 28, 3
  229 D1:C94D 55 17 5C 0C 	.db 85, 23, 92, 12
  230 D1:C951 -  -  -  -  
  231 D1:C951 -  -  -  -  MG_Data_9:
  232 D1:C951 F5 CE D1 -  	.dl Sprite_Table_0
  233 D1:C954 08 -  -  -  	.db 8
  234 D1:C955 24 0E 59 0B 	.db 36, 14, 89, 11
  235 D1:C959 18 17 30 0C 	.db 24, 23, 48, 12
  236 D1:C95D C8 0E 5B 0A 	.db 200, 14, 91, 10
  237 D1:C961 CA 0E 30 0B 	.db 202, 14, 48, 11
  238 D1:C965 E8 0E 86 0A 	.db 232, 14, 134, 10
  239 D1:C969 B7 2D 60 06 	.db 183, 45, 96, 6
  240 D1:C96D 8F 17 41 0C 	.db 143, 23, 65, 12
  241 D1:C971 8F 17 1A 0D 	.db 143, 23, 26, 13
  242 D1:C975 -  -  -  -  
  243 D1:C975 -  -  -  -  MG_Data_8:
  244 D1:C975 F5 CE D1 -  	.dl Sprite_Table_0
  245 D1:C978 0D -  -  -  	.db 13
  246 D1:C979 11 0E 30 0B 	.db 17, 14, 48, 11
  247 D1:C97D 86 0E 13 0A 	.db 134, 14, 19, 10
  248 D1:C981 15 0E 6A 0B 	.db 21, 14, 106, 11
  249 D1:C985 94 0E 24 0A 	.db 148, 14, 36, 10
  250 D1:C989 CD 0E 7D 0B 	.db 205, 14, 125, 11
  251 D1:C98D FA 0E 21 0B 	.db 250, 14, 33, 11
  252 D1:C991 94 0E 51 0A 	.db 148, 14, 81, 10
  253 D1:C995 CB 2F 3A 09 	.db 203, 47, 58, 9
  254 D1:C999 44 2D 61 01 	.db 68, 45, 97, 1
  255 D1:C99D EB 2D 15 02 	.db 235, 45, 21, 2
  256 D1:C9A1 EB 2D 73 01 	.db 235, 45, 115, 1
  257 D1:C9A5 36 2D 24 01 	.db 54, 45, 36, 1
  258 D1:C9A9 B0 17 66 0C 	.db 176, 23, 102, 12
  259 D1:C9AD -  -  -  -  
  260 D1:C9AD -  -  -  -  MG_Data_7:
  261 D1:C9AD F5 CE D1 -  	.dl Sprite_Table_0
  262 D1:C9B0 0A -  -  -  	.db 10
  263 D1:C9B1 27 0E 4C 0B 	.db 39, 14, 76, 11
  264 D1:C9B5 8A 0E 70 0B 	.db 138, 14, 112, 11
  265 D1:C9B9 6F 0E 22 0A 	.db 111, 14, 34, 10
  266 D1:C9BD B6 0E 37 0A 	.db 182, 14, 55, 10
  267 D1:C9C1 55 2F 72 08 	.db 85, 47, 114, 8
  268 D1:C9C5 8B 2D 19 01 	.db 139, 45, 25, 1
  269 D1:C9C9 C1 2D 58 06 	.db 193, 45, 88, 6
  270 D1:C9CD 15 2D 2B 06 	.db 21, 45, 43, 6
  271 D1:C9D1 D7 17 39 0C 	.db 215, 23, 57, 12
  272 D1:C9D5 4F 17 3A 0F 	.db 79, 23, 58, 15
  273 D1:C9D9 -  -  -  -  
  274 D1:C9D9 -  -  -  -  MG_Data_6:
  275 D1:C9D9 F5 CE D1 -  	.dl Sprite_Table_0
  276 D1:C9DC 0B -  -  -  	.db 11
  277 D1:C9DD 30 0E 1D 0B 	.db 48, 14, 29, 11
  278 D1:C9E1 FE 0E 26 0A 	.db 254, 14, 38, 10
  279 D1:C9E5 F3 0E 5F 0B 	.db 243, 14, 95, 11
  280 D1:C9E9 2C 0E 5F 0B 	.db 44, 14, 95, 11
  281 D1:C9ED 67 0E 3D 0B 	.db 103, 14, 61, 11
  282 D1:C9F1 59 2F 75 09 	.db 89, 47, 117, 9
  283 D1:C9F5 A9 2D 6F 02 	.db 169, 45, 111, 2
  284 D1:C9F9 06 2D 3D 06 	.db 6, 45, 61, 6
  285 D1:C9FD 61 17 30 0C 	.db 97, 23, 48, 12
  286 D1:CA01 E4 17 6F 0C 	.db 228, 23, 111, 12
  287 D1:CA05 9B 17 38 0F 	.db 155, 23, 56, 15
  288 D1:CA09 -  -  -  -  
  289 D1:CA09 -  -  -  -  MG_Data_5:
  290 D1:CA09 F5 CE D1 -  	.dl Sprite_Table_0
  291 D1:CA0C 0B -  -  -  	.db 11
  292 D1:CA0D 0A 0E 4E 0B 	.db 10, 14, 78, 11
  293 D1:CA11 7B 0E 64 0A 	.db 123, 14, 100, 10
  294 D1:CA15 7B 0E 28 0A 	.db 123, 14, 40, 10
  295 D1:CA19 1C 0E 84 0A 	.db 28, 14, 132, 10
  296 D1:CA1D E0 0E 59 0B 	.db 224, 14, 89, 11
  297 D1:CA21 28 2F 6D 09 	.db 40, 47, 109, 9
  298 D1:CA25 53 2F 22 09 	.db 83, 47, 34, 9
  299 D1:CA29 4E 2D 52 02 	.db 78, 45, 82, 2
  300 D1:CA2D E3 2D 10 01 	.db 227, 45, 16, 1
  301 D1:CA31 76 17 7D 0E 	.db 118, 23, 125, 14
  302 D1:CA35 B1 17 5F 0D 	.db 177, 23, 95, 13
  303 D1:CA39 -  -  -  -  
  304 D1:CA39 -  -  -  -  MG_Data_4:
  305 D1:CA39 F5 CE D1 -  	.dl Sprite_Table_0
  306 D1:CA3C 0E -  -  -  	.db 14
  307 D1:CA3D 56 0E 46 0A 	.db 86, 14, 70, 10
  308 D1:CA41 DD 0E 1B 0B 	.db 221, 14, 27, 11
  309 D1:CA45 EC 0E 6A 0B 	.db 236, 14, 106, 11
  310 D1:CA49 43 0E 84 0A 	.db 67, 14, 132, 10
  311 D1:CA4D 12 0E 19 0B 	.db 18, 14, 25, 11
  312 D1:CA51 11 0E 5D 0B 	.db 17, 14, 93, 11
  313 D1:CA55 51 0E 15 0A 	.db 81, 14, 21, 10
  314 D1:CA59 00 2D 5B 02 	.db 0, 45, 91, 2
  315 D1:CA5D 87 2D 37 02 	.db 135, 45, 55, 2
  316 D1:CA61 43 2D 75 03 	.db 67, 45, 117, 3
  317 D1:CA65 C1 2D 10 06 	.db 193, 45, 16, 6
  318 D1:CA69 1F 17 1E 0E 	.db 31, 23, 30, 14
  319 D1:CA6D 7A 17 5F 0C 	.db 122, 23, 95, 12
  320 D1:CA71 E6 17 30 0C 	.db 230, 23, 48, 12
  321 D1:CA75 -  -  -  -  
  322 D1:CA75 -  -  -  -  MG_Data_3:
  323 D1:CA75 F5 CE D1 -  	.dl Sprite_Table_0
  324 D1:CA78 0B -  -  -  	.db 11
  325 D1:CA79 5A 0E 26 0A 	.db 90, 14, 38, 10
  326 D1:CA7D C3 0E 5B 0B 	.db 195, 14, 91, 11
  327 D1:CA81 5D 0E 42 0A 	.db 93, 14, 66, 10
  328 D1:CA85 51 0E 6A 0B 	.db 81, 14, 106, 11
  329 D1:CA89 06 0E 2A 0B 	.db 6, 14, 42, 11
  330 D1:CA8D 06 0E 48 0B 	.db 6, 14, 72, 11
  331 D1:CA91 E2 2F 25 09 	.db 226, 47, 37, 9
  332 D1:CA95 6B 2D 19 01 	.db 107, 45, 25, 1
  333 D1:CA99 5D 2D 46 06 	.db 93, 45, 70, 6
  334 D1:CA9D 3E 17 74 0E 	.db 62, 23, 116, 14
  335 D1:CAA1 86 17 24 0D 	.db 134, 23, 36, 13
  336 D1:CAA5 -  -  -  -  
  337 D1:CAA5 -  -  -  -  MG_Data_2:
  338 D1:CAA5 F5 CE D1 -  	.dl Sprite_Table_0
  339 D1:CAA8 09 -  -  -  	.db 9
  340 D1:CAA9 7C 0E 35 0A 	.db 124, 14, 53, 10
  341 D1:CAAD F3 0E 6E 0B 	.db 243, 14, 110, 11
  342 D1:CAB1 73 0E 6E 0B 	.db 115, 14, 110, 11
  343 D1:CAB5 1C 0E 7E 0A 	.db 28, 14, 126, 10
  344 D1:CAB9 37 0E 4F 0A 	.db 55, 14, 79, 10
  345 D1:CABD 5B 2F 1D 09 	.db 91, 47, 29, 9
  346 D1:CAC1 89 2D 76 02 	.db 137, 45, 118, 2
  347 D1:CAC5 A4 2D 14 03 	.db 164, 45, 20, 3
  348 D1:CAC9 89 17 54 0C 	.db 137, 23, 84, 12
  349 D1:CACD -  -  -  -  
  350 D1:CACD -  -  -  -  MG_Data_1:
  351 D1:CACD F5 CE D1 -  	.dl Sprite_Table_0
  352 D1:CAD0 0C -  -  -  	.db 12
  353 D1:CAD1 4F 0E 31 0A 	.db 79, 14, 49, 10
  354 D1:CAD5 FC 0E 53 0A 	.db 252, 14, 83, 10
  355 D1:CAD9 FE 0E 28 0B 	.db 254, 14, 40, 11
  356 D1:CADD 77 0E 6A 0B 	.db 119, 14, 106, 11
  357 D1:CAE1 95 0E 20 0A 	.db 149, 14, 32, 10
  358 D1:CAE5 3F 2F 52 08 	.db 63, 47, 82, 8
  359 D1:CAE9 7F 2D 3B 01 	.db 127, 45, 59, 1
  360 D1:CAED EB 2D 58 06 	.db 235, 45, 88, 6
  361 D1:CAF1 91 17 75 0D 	.db 145, 23, 117, 13
  362 D1:CAF5 37 17 81 0C 	.db 55, 23, 129, 12
  363 D1:CAF9 C3 17 39 0C 	.db 195, 23, 57, 12
  364 D1:CAFD C3 17 12 0D 	.db 195, 23, 18, 13
  365 D1:CB01 -  -  -  -  
  366 D1:CB01 -  -  -  -  MG_Data_0:
  367 D1:CB01 F5 CE D1 -  	.dl Sprite_Table_0
  368 D1:CB04 0A -  -  -  	.db 10
  369 D1:CB05 5E 0E 15 0A 	.db 94, 14, 21, 10
  370 D1:CB09 80 0E 40 0A 	.db 128, 14, 64, 10
  371 D1:CB0D AF 0E 64 0A 	.db 175, 14, 100, 10
  372 D1:CB11 46 0E 75 0A 	.db 70, 14, 117, 10
  373 D1:CB15 37 0E 48 0B 	.db 55, 14, 72, 11
  374 D1:CB19 95 0E 24 0A 	.db 149, 14, 36, 10
  375 D1:CB1D 9E 2D 6E 03 	.db 158, 45, 110, 3
  376 D1:CB21 F8 2D 13 02 	.db 248, 45, 19, 2
  377 D1:CB25 3A 17 22 0C 	.db 58, 23, 34, 12
  378 D1:CB29 D8 17 3F 0D 	.db 216, 23, 63, 13
  379 D1:CB2D -  -  -  -  
  380 D1:CB2D -  -  -  -  
  381 D1:CB2D -  -  -  -  
Listing for file "ascent.asm"
  274 D1:CB2D -  -  -  -  #include "BG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\BG_Data.txt"
    1 D1:CB2D -  -  -  -  BG_Data_frame_table:
    2 D1:CB2D 38 CE D1 -  	.dl BG_Data_0
    3 D1:CB30 00 CE D1 -  	.dl BG_Data_1
    4 D1:CB33 B8 CD D1 -  	.dl BG_Data_2
    5 D1:CB36 68 CD D1 -  	.dl BG_Data_3
    6 D1:CB39 18 CD D1 -  	.dl BG_Data_4
    7 D1:CB3C C8 CC D1 -  	.dl BG_Data_5
    8 D1:CB3F 78 CC D1 -  	.dl BG_Data_6
    9 D1:CB42 28 CC D1 -  	.dl BG_Data_7
   10 D1:CB45 D0 CB D1 -  	.dl BG_Data_8
   11 D1:CB48 78 CB D1 -  	.dl BG_Data_9
   12 D1:CB4B 6C CB D1 -  	.dl BG_Data_10
   13 D1:CB4E 64 CB D1 -  	.dl BG_Data_11
   14 D1:CB51 54 CB D1 -  	.dl BG_Data_12
   15 D1:CB54 -  -  -  -  
   16 D1:CB54 -  -  -  -  
   17 D1:CB54 -  -  -  -  
   18 D1:CB54 -  -  -  -  BG_Data_12:
   19 D1:CB54 25 CF D1 -  	.dl Sprite_Table_1
   20 D1:CB57 03 -  -  -  	.db 3
   21 D1:CB58 D0 2D 2F 09 	.db 208, 45, 47, 9
   22 D1:CB5C 5E 2D 2F 09 	.db 94, 45, 47, 9
   23 D1:CB60 D0 2D 2F 09 	.db 208, 45, 47, 9
   24 D1:CB64 -  -  -  -  
   25 D1:CB64 -  -  -  -  BG_Data_11:
   26 D1:CB64 25 CF D1 -  	.dl Sprite_Table_1
   27 D1:CB67 01 -  -  -  	.db 1
   28 D1:CB68 D3 2D 2F 09 	.db 211, 45, 47, 9
   29 D1:CB6C -  -  -  -  
   30 D1:CB6C -  -  -  -  BG_Data_10:
   31 D1:CB6C 25 CF D1 -  	.dl Sprite_Table_1
   32 D1:CB6F 02 -  -  -  	.db 2
   33 D1:CB70 6B 2D 2F 09 	.db 107, 45, 47, 9
   34 D1:CB74 FE 2D 2F 09 	.db 254, 45, 47, 9
   35 D1:CB78 -  -  -  -  
   36 D1:CB78 -  -  -  -  BG_Data_9:
   37 D1:CB78 25 CF D1 -  	.dl Sprite_Table_1
   38 D1:CB7B 15 -  -  -  	.db 21
   39 D1:CB7C 4A 2D 49 09 	.db 74, 45, 73, 9
   40 D1:CB80 A3 0E 86 0C 	.db 163, 14, 134, 12
   41 D1:CB84 C1 0E 88 0C 	.db 193, 14, 136, 12
   42 D1:CB88 C2 0E 92 0E 	.db 194, 14, 146, 14
   43 D1:CB8C D6 0E 93 0E 	.db 214, 14, 147, 14
   44 D1:CB90 D8 0E 88 0C 	.db 216, 14, 136, 12
   45 D1:CB94 ED 0E 89 0C 	.db 237, 14, 137, 12
   46 D1:CB98 F0 0E 93 0C 	.db 240, 14, 147, 12
   47 D1:CB9C 8C 0E 8E 0C 	.db 140, 14, 142, 12
   48 D1:CBA0 A6 0E 92 0E 	.db 166, 14, 146, 14
   49 D1:CBA4 43 2D 77 09 	.db 67, 45, 119, 9
   50 D1:CBA8 48 2D 55 00 	.db 72, 45, 85, 0
   51 D1:CBAC 56 2D 3C 09 	.db 86, 45, 60, 9
   52 D1:CBB0 52 2D 1F 09 	.db 82, 45, 31, 9
   53 D1:CBB4 54 2D 12 00 	.db 84, 45, 18, 0
   54 D1:CBB8 4A 2D 49 09 	.db 74, 45, 73, 9
   55 D1:CBBC 43 2D 80 00 	.db 67, 45, 128, 0
   56 D1:CBC0 23 1F 25 06 	.db 35, 31, 37, 6
   57 D1:CBC4 12 1F 22 04 	.db 18, 31, 34, 4
   58 D1:CBC8 49 2D 66 00 	.db 73, 45, 102, 0
   59 D1:CBCC 8C 0E 8E 0C 	.db 140, 14, 142, 12
   60 D1:CBD0 -  -  -  -  
   61 D1:CBD0 -  -  -  -  BG_Data_8:
   62 D1:CBD0 25 CF D1 -  	.dl Sprite_Table_1
   63 D1:CBD3 15 -  -  -  	.db 21
   64 D1:CBD4 34 2D 38 01 	.db 52, 45, 56, 1
   65 D1:CBD8 CD 0E 8A 0E 	.db 205, 14, 138, 14
   66 D1:CBDC D1 0E 93 0C 	.db 209, 14, 147, 12
   67 D1:CBE0 E4 0E 94 0C 	.db 228, 14, 148, 12
   68 D1:CBE4 E2 0E 89 0C 	.db 226, 14, 137, 12
   69 D1:CBE8 F9 0E 8A 0E 	.db 249, 14, 138, 14
   70 D1:CBEC FA 0E 93 0C 	.db 250, 14, 147, 12
   71 D1:CBF0 02 1F 44 07 	.db 2, 31, 68, 7
   72 D1:CBF4 6F 1F 3A 0D 	.db 111, 31, 58, 13
   73 D1:CBF8 BB 0E 8A 0E 	.db 187, 14, 138, 14
   74 D1:CBFC D3 1F 6D 06 	.db 211, 31, 109, 6
   75 D1:CC00 0F 1F 13 06 	.db 15, 31, 19, 6
   76 D1:CC04 2A 1F 18 03 	.db 42, 31, 24, 3
   77 D1:CC08 8D 1F 57 04 	.db 141, 31, 87, 4
   78 D1:CC0C 08 1F 7F 04 	.db 8, 31, 127, 4
   79 D1:CC10 AE 2D 1F 00 	.db 174, 45, 31, 0
   80 D1:CC14 2D 2D 5C 09 	.db 45, 45, 92, 9
   81 D1:CC18 FA 2D 6C 02 	.db 250, 45, 108, 2
   82 D1:CC1C FA 2D 3E 02 	.db 250, 45, 62, 2
   83 D1:CC20 19 1F 87 0D 	.db 25, 31, 135, 13
   84 D1:CC24 B6 0E 93 0E 	.db 182, 14, 147, 14
   85 D1:CC28 -  -  -  -  
   86 D1:CC28 -  -  -  -  BG_Data_7:
   87 D1:CC28 25 CF D1 -  	.dl Sprite_Table_1
   88 D1:CC2B 13 -  -  -  	.db 19
   89 D1:CC2C 08 2D 55 02 	.db 8, 45, 85, 2
   90 D1:CC30 D5 0E 95 0C 	.db 213, 14, 149, 12
   91 D1:CC34 E5 0E 95 0C 	.db 229, 14, 149, 12
   92 D1:CC38 E6 0E 8C 0C 	.db 230, 14, 140, 12
   93 D1:CC3C FA 0E 8F 0E 	.db 250, 14, 143, 14
   94 D1:CC40 F9 0E 96 0C 	.db 249, 14, 150, 12
   95 D1:CC44 A8 1F 14 07 	.db 168, 31, 20, 7
   96 D1:CC48 AF 1F 4D 06 	.db 175, 31, 77, 6
   97 D1:CC4C D0 0E 8A 0C 	.db 208, 14, 138, 12
   98 D1:CC50 3E 1F 2B 06 	.db 62, 31, 43, 6
   99 D1:CC54 0D 1F 88 03 	.db 13, 31, 136, 3
  100 D1:CC58 4A 1F 38 03 	.db 74, 31, 56, 3
  101 D1:CC5C 2C 1F 62 03 	.db 44, 31, 98, 3
  102 D1:CC60 37 1F 0F 04 	.db 55, 31, 15, 4
  103 D1:CC64 A8 2D 4B 09 	.db 168, 45, 75, 9
  104 D1:CC68 D5 2D 7F 02 	.db 213, 45, 127, 2
  105 D1:CC6C CA 2D 23 01 	.db 202, 45, 35, 1
  106 D1:CC70 6D 1F 73 0F 	.db 109, 31, 115, 15
  107 D1:CC74 BB 0E 91 0E 	.db 187, 14, 145, 14
  108 D1:CC78 -  -  -  -  
  109 D1:CC78 -  -  -  -  BG_Data_6:
  110 D1:CC78 25 CF D1 -  	.dl Sprite_Table_1
  111 D1:CC7B 13 -  -  -  	.db 19
  112 D1:CC7C 0D 2D 22 02 	.db 13, 45, 34, 2
  113 D1:CC80 E1 0E 93 0C 	.db 225, 14, 147, 12
  114 D1:CC84 E0 0E 8B 0C 	.db 224, 14, 139, 12
  115 D1:CC88 F5 0E 8C 0E 	.db 245, 14, 140, 14
  116 D1:CC8C F8 0E 95 0C 	.db 248, 14, 149, 12
  117 D1:CC90 8D 1F 2A 05 	.db 141, 31, 42, 5
  118 D1:CC94 00 1F 77 05 	.db 0, 31, 119, 5
  119 D1:CC98 FB 1F 72 06 	.db 251, 31, 114, 6
  120 D1:CC9C CF 0E 92 0C 	.db 207, 14, 146, 12
  121 D1:CCA0 94 1F 54 0D 	.db 148, 31, 84, 13
  122 D1:CCA4 A2 1F 54 0A 	.db 162, 31, 84, 10
  123 D1:CCA8 40 1F 24 04 	.db 64, 31, 36, 4
  124 D1:CCAC 1A 1F 79 03 	.db 26, 31, 121, 3
  125 D1:CCB0 80 2D 32 00 	.db 128, 45, 50, 0
  126 D1:CCB4 9E 2D 80 09 	.db 158, 45, 128, 9
  127 D1:CCB8 F1 2D 18 01 	.db 241, 45, 24, 1
  128 D1:CCBC 2B 2D 4F 01 	.db 43, 45, 79, 1
  129 D1:CCC0 88 1F 0F 0A 	.db 136, 31, 15, 10
  130 D1:CCC4 CD 0E 8A 0C 	.db 205, 14, 138, 12
  131 D1:CCC8 -  -  -  -  
  132 D1:CCC8 -  -  -  -  BG_Data_5:
  133 D1:CCC8 25 CF D1 -  	.dl Sprite_Table_1
  134 D1:CCCB 13 -  -  -  	.db 19
  135 D1:CCCC 1E 2D 46 02 	.db 30, 45, 70, 2
  136 D1:CCD0 D6 0E 8B 0E 	.db 214, 14, 139, 14
  137 D1:CCD4 ED 0E 8B 0C 	.db 237, 14, 139, 12
  138 D1:CCD8 F1 0E 96 0C 	.db 241, 14, 150, 12
  139 D1:CCDC 59 2F 42 0B 	.db 89, 47, 66, 11
  140 D1:CCE0 BD 2F 40 08 	.db 189, 47, 64, 8
  141 D1:CCE4 5F 1F 25 05 	.db 95, 31, 37, 5
  142 D1:CCE8 19 1F 6A 05 	.db 25, 31, 106, 5
  143 D1:CCEC D7 0E 95 0E 	.db 215, 14, 149, 14
  144 D1:CCF0 E7 1F 32 0D 	.db 231, 31, 50, 13
  145 D1:CCF4 DE 1F 67 0A 	.db 222, 31, 103, 10
  146 D1:CCF8 90 1F 1F 04 	.db 144, 31, 31, 4
  147 D1:CCFC 5C 1F 18 03 	.db 92, 31, 24, 3
  148 D1:CD00 9C 2D 5A 00 	.db 156, 45, 90, 0
  149 D1:CD04 07 2D 0C 00 	.db 7, 45, 12, 0
  150 D1:CD08 94 2D 34 09 	.db 148, 45, 52, 9
  151 D1:CD0C 47 2D 75 01 	.db 71, 45, 117, 1
  152 D1:CD10 97 1F 64 0D 	.db 151, 31, 100, 13
  153 D1:CD14 BC 0E 8F 0E 	.db 188, 14, 143, 14
  154 D1:CD18 -  -  -  -  
  155 D1:CD18 -  -  -  -  BG_Data_4:
  156 D1:CD18 25 CF D1 -  	.dl Sprite_Table_1
  157 D1:CD1B 13 -  -  -  	.db 19
  158 D1:CD1C 17 2D 4D 01 	.db 23, 45, 77, 1
  159 D1:CD20 FB 0E 8A 0C 	.db 251, 14, 138, 12
  160 D1:CD24 FA 0E 95 0E 	.db 250, 14, 149, 14
  161 D1:CD28 D9 2F 77 0B 	.db 217, 47, 119, 11
  162 D1:CD2C 48 1F 2C 07 	.db 72, 31, 44, 7
  163 D1:CD30 D3 1F 2D 06 	.db 211, 31, 45, 6
  164 D1:CD34 45 1F 5C 0D 	.db 69, 31, 92, 13
  165 D1:CD38 CD 1F 54 0F 	.db 205, 31, 84, 15
  166 D1:CD3C E3 0E 8A 0E 	.db 227, 14, 138, 14
  167 D1:CD40 0C 1F 07 0A 	.db 12, 31, 7, 10
  168 D1:CD44 8F 1F 74 0A 	.db 143, 31, 116, 10
  169 D1:CD48 0E 1F 86 03 	.db 14, 31, 134, 3
  170 D1:CD4C C3 1F 3B 04 	.db 195, 31, 59, 4
  171 D1:CD50 C9 1F 7F 04 	.db 201, 31, 127, 4
  172 D1:CD54 8B 1F 4C 04 	.db 139, 31, 76, 4
  173 D1:CD58 5D 2D 64 09 	.db 93, 45, 100, 9
  174 D1:CD5C 67 2D 20 02 	.db 103, 45, 32, 2
  175 D1:CD60 A2 1F 09 0F 	.db 162, 31, 9, 15
  176 D1:CD64 E6 0E 93 0C 	.db 230, 14, 147, 12
  177 D1:CD68 -  -  -  -  
  178 D1:CD68 -  -  -  -  BG_Data_3:
  179 D1:CD68 25 CF D1 -  	.dl Sprite_Table_1
  180 D1:CD6B 13 -  -  -  	.db 19
  181 D1:CD6C 37 2D 42 02 	.db 55, 45, 66, 2
  182 D1:CD70 F9 0E 95 0E 	.db 249, 14, 149, 14
  183 D1:CD74 E5 2F 37 0B 	.db 229, 47, 55, 11
  184 D1:CD78 41 2F 43 08 	.db 65, 47, 67, 8
  185 D1:CD7C 6E 1F 14 07 	.db 110, 31, 20, 7
  186 D1:CD80 17 1F 22 05 	.db 23, 31, 34, 5
  187 D1:CD84 47 1F 72 05 	.db 71, 31, 114, 5
  188 D1:CD88 DB 1F 7E 07 	.db 219, 31, 126, 7
  189 D1:CD8C F9 0E 8B 0E 	.db 249, 14, 139, 14
  190 D1:CD90 F5 1F 1D 06 	.db 245, 31, 29, 6
  191 D1:CD94 2D 1F 16 0F 	.db 45, 31, 22, 15
  192 D1:CD98 7C 1F 7B 0F 	.db 124, 31, 123, 15
  193 D1:CD9C AF 1F 6E 04 	.db 175, 31, 110, 4
  194 D1:CDA0 8C 2D 51 09 	.db 140, 45, 81, 9
  195 D1:CDA4 D4 2D 1A 09 	.db 212, 45, 26, 9
  196 D1:CDA8 87 2D 29 01 	.db 135, 45, 41, 1
  197 D1:CDAC 56 2D 66 01 	.db 86, 45, 102, 1
  198 D1:CDB0 82 1F 59 0D 	.db 130, 31, 89, 13
  199 D1:CDB4 F9 0E 7F 0E 	.db 249, 14, 127, 14
  200 D1:CDB8 -  -  -  -  
  201 D1:CDB8 -  -  -  -  BG_Data_2:
  202 D1:CDB8 25 CF D1 -  	.dl Sprite_Table_1
  203 D1:CDBB 11 -  -  -  	.db 17
  204 D1:CDBC 7D 2D 20 02 	.db 125, 45, 32, 2
  205 D1:CDC0 9D 2F 7D 08 	.db 157, 47, 125, 8
  206 D1:CDC4 91 2F 40 08 	.db 145, 47, 64, 8
  207 D1:CDC8 56 1F 67 05 	.db 86, 31, 103, 5
  208 D1:CDCC 80 1F 1C 05 	.db 128, 31, 28, 5
  209 D1:CDD0 F1 1F 6C 0D 	.db 241, 31, 108, 13
  210 D1:CDD4 2D 1F 37 0D 	.db 45, 31, 55, 13
  211 D1:CDD8 FB 0E 95 0C 	.db 251, 14, 149, 12
  212 D1:CDDC 34 1F 19 0A 	.db 52, 31, 25, 10
  213 D1:CDE0 CF 1F 3B 04 	.db 207, 31, 59, 4
  214 D1:CDE4 11 1F 59 04 	.db 17, 31, 89, 4
  215 D1:CDE8 04 2D 23 00 	.db 4, 45, 35, 0
  216 D1:CDEC E1 2D 14 09 	.db 225, 45, 20, 9
  217 D1:CDF0 AC 2D 67 00 	.db 172, 45, 103, 0
  218 D1:CDF4 72 2D 59 02 	.db 114, 45, 89, 2
  219 D1:CDF8 2C 1F 82 0A 	.db 44, 31, 130, 10
  220 D1:CDFC FB 0E 8B 0E 	.db 251, 14, 139, 14
  221 D1:CE00 -  -  -  -  
  222 D1:CE00 -  -  -  -  BG_Data_1:
  223 D1:CE00 25 CF D1 -  	.dl Sprite_Table_1
  224 D1:CE03 0D -  -  -  	.db 13
  225 D1:CE04 43 2D 1F 02 	.db 67, 45, 31, 2
  226 D1:CE08 61 2D 5C 02 	.db 97, 45, 92, 2
  227 D1:CE0C 8A 2D 33 02 	.db 138, 45, 51, 2
  228 D1:CE10 C7 2D 46 02 	.db 199, 45, 70, 2
  229 D1:CE14 C0 2D 73 09 	.db 192, 45, 115, 9
  230 D1:CE18 6A 1F 79 0A 	.db 106, 31, 121, 10
  231 D1:CE1C 90 1F 0B 06 	.db 144, 31, 11, 6
  232 D1:CE20 93 1F 4E 07 	.db 147, 31, 78, 7
  233 D1:CE24 1F 1F 76 07 	.db 31, 31, 118, 7
  234 D1:CE28 13 2F 34 0B 	.db 19, 47, 52, 11
  235 D1:CE2C CD 2F 1F 0B 	.db 205, 47, 31, 11
  236 D1:CE30 EA 2F 59 0B 	.db 234, 47, 89, 11
  237 D1:CE34 F2 0E 94 0C 	.db 242, 14, 148, 12
  238 D1:CE38 -  -  -  -  
  239 D1:CE38 -  -  -  -  BG_Data_0:
  240 D1:CE38 25 CF D1 -  	.dl Sprite_Table_1
  241 D1:CE3B 0D -  -  -  	.db 13
  242 D1:CE3C C9 2D 14 00 	.db 201, 45, 20, 0
  243 D1:CE40 4C 2D 14 01 	.db 76, 45, 20, 1
  244 D1:CE44 B5 2D 41 02 	.db 181, 45, 65, 2
  245 D1:CE48 7D 2D 73 00 	.db 125, 45, 115, 0
  246 D1:CE4C 3E 1F 3C 03 	.db 62, 31, 60, 3
  247 D1:CE50 E5 1F 5F 04 	.db 229, 31, 95, 4
  248 D1:CE54 EC 1F 47 05 	.db 236, 31, 71, 5
  249 D1:CE58 F6 1F 08 06 	.db 246, 31, 8, 6
  250 D1:CE5C 3E 1F 67 05 	.db 62, 31, 103, 5
  251 D1:CE60 A8 1F 71 05 	.db 168, 31, 113, 5
  252 D1:CE64 62 1F 31 07 	.db 98, 31, 49, 7
  253 D1:CE68 EC 1F 47 05 	.db 236, 31, 71, 5
  254 D1:CE6C 79 2F 0D 08 	.db 121, 47, 13, 8
  255 D1:CE70 -  -  -  -  
  256 D1:CE70 -  -  -  -  
  257 D1:CE70 -  -  -  -  
Listing for file "ascent.asm"
  275 D1:CE70 -  -  -  -  #include "Palette_Setup.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\Palette_Setup.txt"
    1 D1:CE70 -  -  -  -  setup_palette_1:
    2 D1:CE70 21 00 02 E3 	ld hl,mpLcdPalette
    3 D1:CE74 3E 80 -  -  	ld a,%10000000
    4 D1:CE76 77 -  -  -  	ld (hl),a 
    5 D1:CE77 23 -  -  -  	inc hl
    6 D1:CE78 3E 10 -  -  	ld a,%00010000
    7 D1:CE7A 77 -  -  -  	ld (hl),a 
    8 D1:CE7B 23 -  -  -  	inc hl
    9 D1:CE7C 3E 61 -  -  	ld a,%01100001
   10 D1:CE7E 77 -  -  -  	ld (hl),a 
   11 D1:CE7F 23 -  -  -  	inc hl
   12 D1:CE80 3E 4E -  -  	ld a,%01001110
   13 D1:CE82 77 -  -  -  	ld (hl),a 
   14 D1:CE83 23 -  -  -  	inc hl
   15 D1:CE84 3E 65 -  -  	ld a,%01100101
   16 D1:CE86 77 -  -  -  	ld (hl),a 
   17 D1:CE87 23 -  -  -  	inc hl
   18 D1:CE88 3E 6B -  -  	ld a,%01101011
   19 D1:CE8A 77 -  -  -  	ld (hl),a 
   20 D1:CE8B 23 -  -  -  	inc hl
   21 D1:CE8C 3E A0 -  -  	ld a,%10100000
   22 D1:CE8E 77 -  -  -  	ld (hl),a 
   23 D1:CE8F 23 -  -  -  	inc hl
   24 D1:CE90 3E 5F -  -  	ld a,%01011111
   25 D1:CE92 77 -  -  -  	ld (hl),a 
   26 D1:CE93 23 -  -  -  	inc hl
   27 D1:CE94 3E E0 -  -  	ld a,%11100000
   28 D1:CE96 77 -  -  -  	ld (hl),a 
   29 D1:CE97 23 -  -  -  	inc hl
   30 D1:CE98 3E D3 -  -  	ld a,%11010011
   31 D1:CE9A 77 -  -  -  	ld (hl),a 
   32 D1:CE9B 23 -  -  -  	inc hl
   33 D1:CE9C 3E A2 -  -  	ld a,%10100010
   34 D1:CE9E 77 -  -  -  	ld (hl),a 
   35 D1:CE9F 23 -  -  -  	inc hl
   36 D1:CEA0 3E 12 -  -  	ld a,%00010010
   37 D1:CEA2 77 -  -  -  	ld (hl),a 
   38 D1:CEA3 23 -  -  -  	inc hl
   39 D1:CEA4 3E F9 -  -  	ld a,%11111001
   40 D1:CEA6 77 -  -  -  	ld (hl),a 
   41 D1:CEA7 23 -  -  -  	inc hl
   42 D1:CEA8 3E 0A -  -  	ld a,%00001010
   43 D1:CEAA 77 -  -  -  	ld (hl),a 
   44 D1:CEAB 23 -  -  -  	inc hl
   45 D1:CEAC 3E 1A -  -  	ld a,%00011010
   46 D1:CEAE 77 -  -  -  	ld (hl),a 
   47 D1:CEAF 23 -  -  -  	inc hl
   48 D1:CEB0 3E 31 -  -  	ld a,%00110001
   49 D1:CEB2 77 -  -  -  	ld (hl),a 
   50 D1:CEB3 23 -  -  -  	inc hl
   51 D1:CEB4 3E FF -  -  	ld a,%11111111
   52 D1:CEB6 77 -  -  -  	ld (hl),a 
   53 D1:CEB7 23 -  -  -  	inc hl
   54 D1:CEB8 3E FF -  -  	ld a,%11111111
   55 D1:CEBA 77 -  -  -  	ld (hl),a 
   56 D1:CEBB 23 -  -  -  	inc hl
   57 D1:CEBC 3E 1F -  -  	ld a,%00011111
   58 D1:CEBE 77 -  -  -  	ld (hl),a 
   59 D1:CEBF 23 -  -  -  	inc hl
   60 D1:CEC0 3E 81 -  -  	ld a,%10000001
   61 D1:CEC2 77 -  -  -  	ld (hl),a 
   62 D1:CEC3 23 -  -  -  	inc hl
   63 D1:CEC4 3E 00 -  -  	ld a,%00000000
   64 D1:CEC6 77 -  -  -  	ld (hl),a 
   65 D1:CEC7 23 -  -  -  	inc hl
   66 D1:CEC8 3E 68 -  -  	ld a,%01101000
   67 D1:CECA 77 -  -  -  	ld (hl),a 
   68 D1:CECB 23 -  -  -  	inc hl
   69 D1:CECC 3E 20 -  -  	ld a,%00100000
   70 D1:CECE 77 -  -  -  	ld (hl),a 
   71 D1:CECF 23 -  -  -  	inc hl
   72 D1:CED0 3E 6A -  -  	ld a,%01101010
   73 D1:CED2 77 -  -  -  	ld (hl),a 
   74 D1:CED3 23 -  -  -  	inc hl
   75 D1:CED4 3E 28 -  -  	ld a,%00101000
   76 D1:CED6 77 -  -  -  	ld (hl),a 
   77 D1:CED7 23 -  -  -  	inc hl
   78 D1:CED8 3E 21 -  -  	ld a,%00100001
   79 D1:CEDA 77 -  -  -  	ld (hl),a 
   80 D1:CEDB 23 -  -  -  	inc hl
   81 D1:CEDC 3E 00 -  -  	ld a,%00000000
   82 D1:CEDE 77 -  -  -  	ld (hl),a 
   83 D1:CEDF 23 -  -  -  	inc hl
   84 D1:CEE0 3E 00 -  -  	ld a,%00000000
   85 D1:CEE2 77 -  -  -  	ld (hl),a 
   86 D1:CEE3 23 -  -  -  	inc hl
   87 D1:CEE4 3E 23 -  -  	ld a,%00100011
   88 D1:CEE6 77 -  -  -  	ld (hl),a 
   89 D1:CEE7 23 -  -  -  	inc hl
   90 D1:CEE8 3E B1 -  -  	ld a,%10110001
   91 D1:CEEA 77 -  -  -  	ld (hl),a 
   92 D1:CEEB 23 -  -  -  	inc hl
   93 D1:CEEC 3E 1F -  -  	ld a,%00011111
   94 D1:CEEE 77 -  -  -  	ld (hl),a 
   95 D1:CEEF 23 -  -  -  	inc hl
   96 D1:CEF0 3E 68 -  -  	ld a,%01101000
   97 D1:CEF2 77 -  -  -  	ld (hl),a 
   98 D1:CEF3 23 -  -  -  	inc hl
   99 D1:CEF4 C9 -  -  -  	ret 
Listing for file "ascent.asm"
  276 D1:CEF5 -  -  -  -  #include "Equates.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\Equates.txt"
    1 D1:CEF5 -  -  -  -  Banana1_Slow .equ $d40001
    2 D1:CEF5 -  -  -  -  Banana1_Slow_F .equ $d40119
    3 D1:CEF5 -  -  -  -  Banana1_Slow_O .equ $d40231
    4 D1:CEF5 -  -  -  -  Banana1_Slow_O_F .equ $d40349
    5 D1:CEF5 -  -  -  -  Banana1Large_Slow_O .equ $d40461
    6 D1:CEF5 -  -  -  -  Banana1Large_Slow_O_F .equ $d4077d
    7 D1:CEF5 -  -  -  -  Banana1Large_Fast .equ $d40a98
    8 D1:CEF5 -  -  -  -  Banana1Large_Fast_F .equ $d40d2a
    9 D1:CEF5 -  -  -  -  Banana1Large_BG .equ $d40fbb
   10 D1:CEF5 -  -  -  -  Banana1Large_BG_O .equ $d41800
   11 D1:CEF5 -  -  -  -  Banana1Large_BG_F .equ $d420a1
   12 D1:CEF5 -  -  -  -  Banana1Large_BG_O_F .equ $d428e6
   13 D1:CEF5 -  -  -  -  Shittlogo_Slow .equ $d43187
   14 D1:CEF5 -  -  -  -  Shittlogo_Slow_O .equ $d436b7
   15 D1:CEF5 -  -  -  -  OrangeDot_Slow .equ $d43bd3
   16 D1:CEF5 -  -  -  -  OrangeDot_Slow_O .equ $d43c7f
   17 D1:CEF5 -  -  -  -  OrangeDot_BG .equ $d43d2a
   18 D1:CEF5 -  -  -  -  OrangeDot_BG_O .equ $d43e1b
   19 D1:CEF5 -  -  -  -  SquiggleL_Slow .equ $d43f0d
   20 D1:CEF5 -  -  -  -  SquiggleL_Slow_F .equ $d440ad
   21 D1:CEF5 -  -  -  -  SquiggleL_Slow_O .equ $d4424d
   22 D1:CEF5 -  -  -  -  SquiggleL_Slow_O_F .equ $d443f1
   23 D1:CEF5 -  -  -  -  Banana5_BG .equ $d44595
   24 D1:CEF5 -  -  -  -  Banana5_BG_O .equ $d44996
   25 D1:CEF5 -  -  -  -  Banana5_BG_F .equ $d44dd7
   26 D1:CEF5 -  -  -  -  Banana5_BG_O_F .equ $d451d8
   27 D1:CEF5 -  -  -  -  GreenCurl1_BG .equ $d45619
   28 D1:CEF5 -  -  -  -  GreenCurl1_BG_O .equ $d45a1a
   29 D1:CEF5 -  -  -  -  GreenCurl1_BG_F .equ $d45e5b
   30 D1:CEF5 -  -  -  -  GreenCurl1_BG_O_F .equ $d4625c
   31 D1:CEF5 -  -  -  -  Bluecurl_BG .equ $d4669d
   32 D1:CEF5 -  -  -  -  Bluecurl_BG_O .equ $d46f9e
Listing for file "ascent.asm"
  277 D1:CEF5 -  -  -  -  ;#include "Decompress_Calls.txt"
  278 D1:CEF5 -  -  -  -  #include "Sprite_Tables.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\Sprite_Tables.txt"
    1 D1:CEF5 -  -  -  -  Sprite_Table_0:
    2 D1:CEF5 19 01 D4 -  	.dl Banana1_Slow_F
    3 D1:CEF8 61 04 D4 -  	.dl Banana1Large_Slow_O
    4 D1:CEFB 98 0A D4 -  	.dl Banana1Large_Fast
    5 D1:CEFE 7D 07 D4 -  	.dl Banana1Large_Slow_O_F
    6 D1:CF01 01 00 D4 -  	.dl Banana1_Slow
    7 D1:CF04 49 03 D4 -  	.dl Banana1_Slow_O_F
    8 D1:CF07 2A 0D D4 -  	.dl Banana1Large_Fast_F
    9 D1:CF0A 31 02 D4 -  	.dl Banana1_Slow_O
   10 D1:CF0D B7 36 D4 -  	.dl Shittlogo_Slow_O
   11 D1:CF10 87 31 D4 -  	.dl Shittlogo_Slow
   12 D1:CF13 7F 3C D4 -  	.dl OrangeDot_Slow_O
   13 D1:CF16 D3 3B D4 -  	.dl OrangeDot_Slow
   14 D1:CF19 4D 42 D4 -  	.dl SquiggleL_Slow_O
   15 D1:CF1C AD 40 D4 -  	.dl SquiggleL_Slow_F
   16 D1:CF1F 0D 3F D4 -  	.dl SquiggleL_Slow
   17 D1:CF22 F1 43 D4 -  	.dl SquiggleL_Slow_O_F
   18 D1:CF25 -  -  -  -  
   19 D1:CF25 -  -  -  -  Sprite_Table_1:
   20 D1:CF25 E6 28 D4 -  	.dl Banana1Large_BG_O_F
   21 D1:CF28 00 18 D4 -  	.dl Banana1Large_BG_O
   22 D1:CF2B BB 0F D4 -  	.dl Banana1Large_BG
   23 D1:CF2E 96 49 D4 -  	.dl Banana5_BG_O
   24 D1:CF31 95 45 D4 -  	.dl Banana5_BG
   25 D1:CF34 5C 62 D4 -  	.dl GreenCurl1_BG_O_F
   26 D1:CF37 1A 5A D4 -  	.dl GreenCurl1_BG_O
   27 D1:CF3A 5B 5E D4 -  	.dl GreenCurl1_BG_F
   28 D1:CF3D 9E 6F D4 -  	.dl Bluecurl_BG_O
   29 D1:CF40 A1 20 D4 -  	.dl Banana1Large_BG_F
   30 D1:CF43 D7 4D D4 -  	.dl Banana5_BG_F
   31 D1:CF46 9D 66 D4 -  	.dl Bluecurl_BG
   32 D1:CF49 1B 3E D4 -  	.dl OrangeDot_BG_O
   33 D1:CF4C 19 56 D4 -  	.dl GreenCurl1_BG
   34 D1:CF4F 2A 3D D4 -  	.dl OrangeDot_BG
   35 D1:CF52 D8 51 D4 -  	.dl Banana5_BG_O_F
   36 D1:CF55 -  -  -  -  
   37 D1:CF55 -  -  -  -  Sprite_Table_2:
   38 D1:CF55 -  -  -  -  
Listing for file "ascent.asm"
  279 D1:CF55 -  -  -  -  
  280 D1:CF55 -  -  -  -  
