    1 00:0000 -  -  -  -  
    2 00:0000 -  -  -  -  #include "includes\ti84pce.inc"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\includes\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "ascent.asm"
    3 00:0000 -  -  -  -  
    4 00:0000 -  -  -  -   .assume ADL=1
    5 00:0000 -  -  -  -   .org userMem-2
    6 D1:A87F EF 7B -  -   .db tExtTok,tAsm84CeCmp
    7 D1:A881 -  -  -  -  
    8 D1:A881 -  -  -  -  
    9 D1:A881 -  -  -  -  
   10 D1:A881 -  -  -  -  ;0E30000h + 0200h
   11 D1:A881 -  -  -  -  
   12 D1:A881 CD 28 08 02 	call _homeup
   13 D1:A885 CD 10 08 02 	call _ClrScrnFull
   14 D1:A889 -  -  -  -  
   15 D1:A889 CD 48 08 02 	call _RunIndicOff		; turn off run indicator
   16 D1:A88D F3 -  -  -  	di			
   17 D1:A88E -  -  -  -  	
   18 D1:A88E -  -  -  -  	
   19 D1:A88E CD 5B D2 D1 	call setup_palette_1
   20 D1:A892 -  -  -  -  
   21 D1:A892 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255
   22 D1:A896 3E 25 -  -  	ld	a,lcdBpp4
   23 D1:A898 32 18 00 E3 	ld (mpLcdCtrl),a	
   24 D1:A89C -  -  -  -  
   25 D1:A89C -  -  -  -  
   26 D1:A89C -  -  -  -  
   27 D1:A89C -  -  -  -  
   28 D1:A89C -  -  -  -  	;call sdcomp_set_fast
   29 D1:A89C -  -  -  -  	;call sdcomp_set_flip
   30 D1:A89C -  -  -  -  	;call sdcomp_reset_offset
   31 D1:A89C -  -  -  -  	;ld hl, Tree_5 
   32 D1:A89C -  -  -  -  	;ld de, Tree_5_Fast_F_0
   33 D1:A89C -  -  -  -  	;call sdcomp_set_2bpc
   34 D1:A89C -  -  -  -  	;call sprite_decompress
   35 D1:A89C -  -  -  -  	
   36 D1:A89C -  -  -  -  	;call sdcomp_set_fast
   37 D1:A89C -  -  -  -  	;call sdcomp_reset_flip
   38 D1:A89C -  -  -  -  	;call sdcomp_reset_offset
   39 D1:A89C -  -  -  -  	;ld hl, Moss_0 
   40 D1:A89C -  -  -  -  	;ld de, Moss_0_Fast_0
   41 D1:A89C -  -  -  -  	;call sprite_decompress
   42 D1:A89C -  -  -  -  	
   43 D1:A89C -  -  -  -  	;call prgmpause
   44 D1:A89C -  -  -  -  	;call prgmpause
   45 D1:A89C -  -  -  -  
   46 D1:A89C 21 00 00 00 	ld hl,0
   47 D1:A8A0 22 D6 AB D1 	ld (cam_pos),hl
   48 D1:A8A4 22 D9 AB D1 	ld (bg_cam_pos),hl
   49 D1:A8A8 -  -  -  -  	
   50 D1:A8A8 -  -  -  -  	
   51 D1:A8A8 3E 02 -  -  	ld a,%00000010;disable, 32768hz
   52 D1:A8AA 32 30 00 F2 	ld ($F20030),a	
   53 D1:A8AE -  -  -  -  	
   54 D1:A8AE CD 95 B8 D1 	call setup_decompress_queue
   55 D1:A8B2 -  -  -  -  	
   56 D1:A8B2 -  -  -  -  	;Decompress sprites in preframes for setup
   57 D1:A8B2 21 8D C9 D1 	ld hl,decompress_frame_up_pre2 
   58 D1:A8B6 CD 9B B9 D1 	call cfdc_direct_add_decompress_frame
   59 D1:A8BA CD E2 B8 D1 	call continue_decompressions ;Run decompression (Will finish as timer has not started)
   60 D1:A8BE 21 BF C9 D1 	ld hl,decompress_frame_up_pre1
   61 D1:A8C2 CD 9B B9 D1 	call cfdc_direct_add_decompress_frame
   62 D1:A8C6 CD E2 B8 D1 	call continue_decompressions ;Run decompression (Will finish as timer has not started)
   63 D1:A8CA -  -  -  -  	
   64 D1:A8CA -  -  -  -  	;call draw_fg
   65 D1:A8CA -  -  -  -  	
   66 D1:A8CA 3E 00 -  -  	ld a,0
   67 D1:A8CC CD 8D B9 D1 	call cfdc_cam_move_up ;need to skip here for frame 0
   68 D1:A8D0 -  -  -  -  	
   69 D1:A8D0 -  -  -  -  	;call prgmpause
   70 D1:A8D0 -  -  -  -  
   71 D1:A8D0 CD E2 B8 D1 	call continue_decompressions
   72 D1:A8D4 -  -  -  -  	
   73 D1:A8D4 -  -  -  -  	;call prgmpause
   74 D1:A8D4 00 -  -  -  	nop ;This needs to be here for some reason
   75 D1:A8D5 -  -  -  -  ;	call decompress_calls
   76 D1:A8D5 -  -  -  -  	
   77 D1:A8D5 -  -  -  -  
   78 D1:A8D5 -  -  -  -  	
   79 D1:A8D5 -  -  -  -  	;gen purp timers
   80 D1:A8D5 -  -  -  -  		; 76543210	
   81 D1:A8D5 3E 03 -  -  	ld a,%00000011;enable, 32768hz
   82 D1:A8D7 32 30 00 F2 	ld ($F20030),a
   83 D1:A8DB -  -  -  -  	;	  fedcba98
   84 D1:A8DB 3E 02 -  -  	ld a,%00000010;count up
   85 D1:A8DD 32 31 00 F2 	ld ($F20031),a
   86 D1:A8E1 -  -  -  -  	
   87 D1:A8E1 21 00 2C D5 	ld hl,vRam + (160*240*2)
   88 D1:A8E5 22 DC AB D1 	ld (draw_buffer),hl
   89 D1:A8E9 21 00 C2 D5 	ld hl,vRam + (160*240*3)
   90 D1:A8ED 22 10 00 E3 	ld (mpLcdBase),hl
   91 D1:A8F1 -  -  -  -  	
   92 D1:A8F1 -  -  -  -  	
   93 D1:A8F1 21 00 E3 00 	ld hl,$00E300
   94 D1:A8F5 22 2B BE D1 	ld (player_x_pos),hl 
   95 D1:A8F9 21 00 EE 00 	ld hl,$00EE00
   96 D1:A8FD 22 2E BE D1 	ld (player_y_pos),hl 
   97 D1:A901 -  -  -  -  	
   98 D1:A901 -  -  -  -  
   99 D1:A901 -  -  -  -  	;ld hl,BG_buffer+(160*5)
  100 D1:A901 -  -  -  -  	;ld (dbgl_vram_line_start),hl
  101 D1:A901 -  -  -  -  
  102 D1:A901 -  -  -  -  	;ld hl,BG_Data_1
  103 D1:A901 -  -  -  -  	;ld a,10
  104 D1:A901 -  -  -  -  	;call draw_bg_line
  105 D1:A901 -  -  -  -  	
  106 D1:A901 -  -  -  -  	
  107 D1:A901 -  -  -  -  	;call prgmpause
  108 D1:A901 -  -  -  -  
  109 D1:A901 -  -  -  -  	;call draw_mg
  110 D1:A901 -  -  -  -  
  111 D1:A901 CD 2F AD D1 	call setup_bg ;after initial decompressions and cam setup
  112 D1:A905 -  -  -  -  	;call prgmpause
  113 D1:A905 -  -  -  -  	;call prgmpause
  114 D1:A905 -  -  -  -  main_loop:
  115 D1:A905 -  -  -  -  
  116 D1:A905 -  -  -  -  	
  117 D1:A905 -  -  -  -  
  118 D1:A905 -  -  -  -  	;clear timer
  119 D1:A905 3E 00 -  -  	ld a,0
  120 D1:A907 32 00 00 F2 	ld ($F20000),a;32768hz
  121 D1:A90B 32 01 00 F2 	ld ($F20001),a;128hz
  122 D1:A90F 32 02 00 F2 	ld ($F20002),a;0.5hz
  123 D1:A913 32 03 00 F2 	ld ($F20003),a
  124 D1:A917 -  -  -  -  	
  125 D1:A917 -  -  -  -  	;Instructions here 
  126 D1:A917 -  -  -  -  	
  127 D1:A917 -  -  -  -  	
  128 D1:A917 -  -  -  -  	;call input_cam_up
  129 D1:A917 C3 BB B9 D1 	jp get_inputs
  130 D1:A91B -  -  -  -  get_inputs_return:
  131 D1:A91B -  -  -  -  	;call move_bg Draw BG calls MoveBg
  132 D1:A91B -  -  -  -  	;call player_move_debug
  133 D1:A91B CD 87 BA D1 	call player_update
  134 D1:A91F CD C4 BC D1 	call check_collisions
  135 D1:A923 -  -  -  -  	
  136 D1:A923 CD BB BE D1 	call update_sine_vals
  137 D1:A927 3A A8 BF D1 	ld a,(sine_8_7_2)
  138 D1:A92B CD A3 AB D1 	call write_a_to_ram
  139 D1:A92F -  -  -  -  	
  140 D1:A92F CD B5 C0 D1 	call update_animations
  141 D1:A933 -  -  -  -  	
  142 D1:A933 -  -  -  -  	
  143 D1:A933 CD 3F AC D1 	call draw_bg
  144 D1:A937 -  -  -  -  
  145 D1:A937 -  -  -  -  	
  146 D1:A937 -  -  -  -  	
  147 D1:A937 -  -  -  -  	;TEsting
  148 D1:A937 21 00 00 00 	ld hl,0
  149 D1:A93B 3A 00 00 F2 	ld a,($F20000);32768hz
  150 D1:A93F 6F -  -  -  	ld l,a
  151 D1:A940 3A 01 00 F2 	ld a,($F20001);128hz 
  152 D1:A944 67 -  -  -  	ld h,a
  153 D1:A945 CB 3C -  -  	srl h ;div by 8
  154 D1:A947 CB 1D -  -  	rr l 
  155 D1:A949 CB 3C -  -  	srl h
  156 D1:A94B CB 1D -  -  	rr l 
  157 D1:A94D CB 3C -  -  	srl h
  158 D1:A94F CB 1D -  -  	rr l 
  159 D1:A951 7D -  -  -  	ld a,l
  160 D1:A952 32 E3 AB D1 	ld (draw_bg_time),a
  161 D1:A956 -  -  -  -  	
  162 D1:A956 -  -  -  -  	;TEST CLEAR BUFFER
  163 D1:A956 -  -  -  -  	;ld hl,BG_buffer
  164 D1:A956 -  -  -  -  	;ld de,(draw_buffer)
  165 D1:A956 -  -  -  -  	;ld bc, 160*240
  166 D1:A956 -  -  -  -  	;ldir
  167 D1:A956 -  -  -  -  	
  168 D1:A956 CD 47 B5 D1 	call draw_mg
  169 D1:A95A -  -  -  -  	
  170 D1:A95A CD 65 B5 D1 	call draw_mg2
  171 D1:A95E -  -  -  -  	
  172 D1:A95E -  -  -  -  	
  173 D1:A95E CD 06 BC D1 	call player_draw 
  174 D1:A962 -  -  -  -  	
  175 D1:A962 -  -  -  -  	;TEsting
  176 D1:A962 21 00 00 00 	ld hl,0
  177 D1:A966 3A 00 00 F2 	ld a,($F20000);32768hz
  178 D1:A96A 6F -  -  -  	ld l,a
  179 D1:A96B 3A 01 00 F2 	ld a,($F20001);128hz 
  180 D1:A96F 67 -  -  -  	ld h,a
  181 D1:A970 CB 3C -  -  	srl h ;div by 8
  182 D1:A972 CB 1D -  -  	rr l 
  183 D1:A974 CB 3C -  -  	srl h
  184 D1:A976 CB 1D -  -  	rr l 
  185 D1:A978 CB 3C -  -  	srl h
  186 D1:A97A CB 1D -  -  	rr l 
  187 D1:A97C 7D -  -  -  	ld a,l
  188 D1:A97D 32 E4 AB D1 	ld (draw_mg_time),a
  189 D1:A981 -  -  -  -  	
  190 D1:A981 CD 83 B5 D1 	call draw_fg
  191 D1:A985 -  -  -  -  	;Leaves_4_Slow_1 has issue
  192 D1:A985 -  -  -  -  	;Need to fix indexing of decompress segments
  193 D1:A985 -  -  -  -  	
  194 D1:A985 -  -  -  -  	;Sprite groups must all use the same load index of a given sprite, as they pull from same data
  195 D1:A985 -  -  -  -  	
  196 D1:A985 -  -  -  -  	
  197 D1:A985 -  -  -  -  	
  198 D1:A985 -  -  -  -  	;TEsting
  199 D1:A985 21 00 00 00 	ld hl,0
  200 D1:A989 3A 00 00 F2 	ld a,($F20000);32768hz
  201 D1:A98D 6F -  -  -  	ld l,a
  202 D1:A98E 3A 01 00 F2 	ld a,($F20001);128hz 
  203 D1:A992 67 -  -  -  	ld h,a
  204 D1:A993 CB 3C -  -  	srl h ;div by 8
  205 D1:A995 CB 1D -  -  	rr l 
  206 D1:A997 CB 3C -  -  	srl h
  207 D1:A999 CB 1D -  -  	rr l 
  208 D1:A99B CB 3C -  -  	srl h
  209 D1:A99D CB 1D -  -  	rr l 
  210 D1:A99F 7D -  -  -  	ld a,l
  211 D1:A9A0 32 E5 AB D1 	ld (draw_fg_time),a
  212 D1:A9A4 -  -  -  -  	
  213 D1:A9A4 21 00 00 00 	ld hl,0
  214 D1:A9A8 -  -  -  -  	
  215 D1:A9A8 -  -  -  -  	; for debug longest frame draw time
  216 D1:A9A8 3A 00 00 F2 	ld a,($F20000)
  217 D1:A9AC 6F -  -  -  	ld l,a
  218 D1:A9AD 3A 01 00 F2 	ld a,($F20001);128hz 
  219 D1:A9B1 67 -  -  -  	ld h,a
  220 D1:A9B2 E5 -  -  -  	push hl
  221 D1:A9B3 ED 4B E7 AB 
              D1 -  -  -  	ld bc,(longestFrame)
  222 D1:A9B8 ED 42 -  -  	sbc hl,bc 
  223 D1:A9BA DA CC A9 D1 	jp c,longest_frame_skip
  224 D1:A9BE -  -  -  -  	
  225 D1:A9BE E1 -  -  -  	pop hl 
  226 D1:A9BF E5 -  -  -  	push hl 
  227 D1:A9C0 22 E7 AB D1 	ld (longestFrame),hl 
  228 D1:A9C4 2A D6 AB D1 	ld hl,(cam_pos)
  229 D1:A9C8 22 EA AB D1 	ld (longestFramePos),hl
  230 D1:A9CC -  -  -  -  longest_frame_skip:
  231 D1:A9CC E1 -  -  -  	pop hl 
  232 D1:A9CD -  -  -  -  	
  233 D1:A9CD -  -  -  -  	;Add to frame counter
  234 D1:A9CD 2A F0 AB D1 	ld hl,(frameCount)
  235 D1:A9D1 23 -  -  -  	inc hl
  236 D1:A9D2 22 F0 AB D1 	ld (frameCount),hl
  237 D1:A9D6 -  -  -  -  	
  238 D1:A9D6 -  -  -  -  
  239 D1:A9D6 -  -  -  -  	
  240 D1:A9D6 -  -  -  -  	;check if lcd has drawn first frame
  241 D1:A9D6 -  -  -  -  
  242 D1:A9D6 CD 72 B9 D1 	call check_for_decompress_calls
  243 D1:A9DA -  -  -  -  	;Sprite decompression will occur here
  244 D1:A9DA CD E2 B8 D1 	call continue_decompressions
  245 D1:A9DE -  -  -  -  	
  246 D1:A9DE -  -  -  -  	;TEsting
  247 D1:A9DE 21 00 00 00 	ld hl,0
  248 D1:A9E2 3A 00 00 F2 	ld a,($F20000);32768hz
  249 D1:A9E6 6F -  -  -  	ld l,a
  250 D1:A9E7 3A 01 00 F2 	ld a,($F20001);128hz 
  251 D1:A9EB 67 -  -  -  	ld h,a
  252 D1:A9EC CB 3C -  -  	srl h ;div by 4
  253 D1:A9EE CB 1D -  -  	rr l 
  254 D1:A9F0 CB 3C -  -  	srl h
  255 D1:A9F2 CB 1D -  -  	rr l 
  256 D1:A9F4 CB 3C -  -  	srl h
  257 D1:A9F6 CB 1D -  -  	rr l 
  258 D1:A9F8 7D -  -  -  	ld a,l
  259 D1:A9F9 32 E6 AB D1 	ld (decompress_time),a
  260 D1:A9FD -  -  -  -  
  261 D1:A9FD -  -  -  -  
  262 D1:A9FD -  -  -  -  	
  263 D1:A9FD -  -  -  -  
  264 D1:A9FD -  -  -  -  	;Draw time bar at top of screen 
  265 D1:A9FD 2A DC AB D1 	ld hl, (draw_buffer)
  266 D1:AA01 01 00 00 00 	ld bc,0 
  267 D1:AA05 3A E6 AB D1 	ld a,(decompress_time)
  268 D1:AA09 4F -  -  -  	ld c,a 
  269 D1:AA0A 3E 55 -  -  	ld a, $55
  270 D1:AA0C CD E0 10 02 	call _MemSet
  271 D1:AA10 -  -  -  -  	
  272 D1:AA10 2A DC AB D1 	ld hl, (draw_buffer)
  273 D1:AA14 01 00 00 00 	ld bc,0 
  274 D1:AA18 3A E5 AB D1 	ld a,(draw_fg_time)
  275 D1:AA1C 4F -  -  -  	ld c,a 
  276 D1:AA1D 3E 44 -  -  	ld a, $44
  277 D1:AA1F CD E0 10 02 	call _MemSet
  278 D1:AA23 -  -  -  -  	
  279 D1:AA23 2A DC AB D1 	ld hl, (draw_buffer)
  280 D1:AA27 01 00 00 00 	ld bc,0 
  281 D1:AA2B 3A E4 AB D1 	ld a,(draw_mg_time)
  282 D1:AA2F 4F -  -  -  	ld c,a 
  283 D1:AA30 3E 33 -  -  	ld a, $33
  284 D1:AA32 CD E0 10 02 	call _MemSet
  285 D1:AA36 -  -  -  -  
  286 D1:AA36 2A DC AB D1 	ld hl, (draw_buffer)
  287 D1:AA3A 01 00 00 00 	ld bc,0 
  288 D1:AA3E 3A E3 AB D1 	ld a,(draw_bg_time)
  289 D1:AA42 4F -  -  -  	ld c,a 
  290 D1:AA43 3E 22 -  -  	ld a, $22
  291 D1:AA45 CD E0 10 02 	call _MemSet
  292 D1:AA49 -  -  -  -  	
  293 D1:AA49 -  -  -  -  	
  294 D1:AA49 -  -  -  -  	
  295 D1:AA49 2A DC AB D1 	ld hl, (draw_buffer)
  296 D1:AA4D 01 88 00 00 	ld bc, 136  ; =1000/4 /2 for 2pix/bit 
  297 D1:AA51 09 -  -  -  	add hl,bc 
  298 D1:AA52 3E 55 -  -  	ld a,$55
  299 D1:AA54 77 -  -  -  	ld (hl),a 
  300 D1:AA55 -  -  -  -  	
  301 D1:AA55 -  -  -  -  	
  302 D1:AA55 -  -  -  -  	;Again for thick line
  303 D1:AA55 -  -  -  -  	
  304 D1:AA55 2A DC AB D1 	ld hl, (draw_buffer)
  305 D1:AA59 01 A0 00 00 	ld bc,160
  306 D1:AA5D 09 -  -  -  	add hl,bc 
  307 D1:AA5E 3A E6 AB D1 	ld a,(decompress_time)
  308 D1:AA62 4F -  -  -  	ld c,a 
  309 D1:AA63 3E 55 -  -  	ld a, $55
  310 D1:AA65 CD E0 10 02 	call _MemSet
  311 D1:AA69 -  -  -  -  	
  312 D1:AA69 2A DC AB D1 	ld hl, (draw_buffer)
  313 D1:AA6D 01 A0 00 00 	ld bc,160
  314 D1:AA71 09 -  -  -  	add hl,bc 
  315 D1:AA72 3A E5 AB D1 	ld a,(draw_fg_time)
  316 D1:AA76 4F -  -  -  	ld c,a 
  317 D1:AA77 3E 44 -  -  	ld a, $44
  318 D1:AA79 CD E0 10 02 	call _MemSet
  319 D1:AA7D -  -  -  -  	
  320 D1:AA7D 2A DC AB D1 	ld hl, (draw_buffer)
  321 D1:AA81 01 A0 00 00 	ld bc,160
  322 D1:AA85 09 -  -  -  	add hl,bc
  323 D1:AA86 3A E4 AB D1 	ld a,(draw_mg_time)
  324 D1:AA8A 4F -  -  -  	ld c,a 
  325 D1:AA8B 3E 33 -  -  	ld a, $33
  326 D1:AA8D CD E0 10 02 	call _MemSet
  327 D1:AA91 -  -  -  -  
  328 D1:AA91 2A DC AB D1 	ld hl, (draw_buffer)
  329 D1:AA95 01 A0 00 00 	ld bc,160
  330 D1:AA99 09 -  -  -  	add hl,bc
  331 D1:AA9A 3A E3 AB D1 	ld a,(draw_bg_time)
  332 D1:AA9E 4F -  -  -  	ld c,a 
  333 D1:AA9F 3E 22 -  -  	ld a, $22
  334 D1:AAA1 CD E0 10 02 	call _MemSet
  335 D1:AAA5 -  -  -  -  	
  336 D1:AAA5 2A DC AB D1 	ld hl, (draw_buffer)
  337 D1:AAA9 01 28 01 00 	ld bc,296
  338 D1:AAAD 09 -  -  -  	add hl,bc 
  339 D1:AAAE 3E 55 -  -  	ld a,$55
  340 D1:AAB0 77 -  -  -  	ld (hl),a 
  341 D1:AAB1 -  -  -  -  	
  342 D1:AAB1 -  -  -  -  	
  343 D1:AAB1 -  -  -  -  
  344 D1:AAB1 -  -  -  -  
  345 D1:AAB1 -  -  -  -  	
  346 D1:AAB1 -  -  -  -  
  347 D1:AAB1 -  -  -  -  	;swap draw buffers
  348 D1:AAB1 2A 10 00 E3 	ld hl,(mpLcdBase)
  349 D1:AAB5 ED 5B DC AB 
              D1 -  -  -  	ld de,(draw_buffer)
  350 D1:AABA ED 53 10 00 
              E3 -  -  -  	ld (mpLcdBase),de
  351 D1:AABF 22 DC AB D1 	ld (draw_buffer),hl
  352 D1:AAC3 -  -  -  -  
  353 D1:AAC3 -  -  -  -  
  354 D1:AAC3 -  -  -  -  	;wait until finished drawing second frame
  355 D1:AAC3 -  -  -  -  	;Need to check clock here, there wont always be decompression to wait for
  356 D1:AAC3 -  -  -  -  main_clock_check_loop:
  357 D1:AAC3 3A 01 00 F2 	ld a,($F20001);128hz clock
  358 D1:AAC7 FE 03 -  -  	cp %00000011 ;check if reached 3 
  359 D1:AAC9 DA C3 AA D1 	jp c,main_clock_check_loop ;msb <= 2, can continue  
  360 D1:AACD 3A 00 00 F2 	ld a,($F20000);32768hz clock
  361 D1:AAD1 FE E8 -  -  	cp %11101000;check if reached value 
  362 D1:AAD3 DA C3 AA D1 	jp c,main_clock_check_loop ;msb = 3 and lsb < value, can continue
  363 D1:AAD7 -  -  -  -  	
  364 D1:AAD7 -  -  -  -  
  365 D1:AAD7 -  -  -  -  
  366 D1:AAD7 -  -  -  -  clear_int:      
  367 D1:AAD7 21 28 00 E3     ld hl, mpLcdIcr
  368 D1:AADB CB D6 -  -      set 2, (hl)            ; clear interrupt
  369 D1:AADD 21 20 00 E3     ld hl, mpLcdRis
  370 D1:AAE1 -  -  -  -  wait_int:
  371 D1:AAE1 CB 56 -  -      bit 2, (hl)
  372 D1:AAE3 28 FC -  -      jr z, wait_int  
  373 D1:AAE5 -  -  -  -  
  374 D1:AAE5 -  -  -  -  
  375 D1:AAE5 21 00 00 00 	ld hl,0
  376 D1:AAE9 -  -  -  -  	
  377 D1:AAE9 3A 02 00 F2 	ld a,($F20002)
  378 D1:AAED 67 -  -  -  	ld h,a
  379 D1:AAEE 3A 01 00 F2 	ld a,($F20001)
  380 D1:AAF2 6F -  -  -  	ld l,a
  381 D1:AAF3 ED 4B ED AB 
              D1 -  -  -  	ld bc,(totalTime)
  382 D1:AAF8 09 -  -  -  	add hl,bc 
  383 D1:AAF9 22 ED AB D1 	ld (totalTime),hl 
  384 D1:AAFD -  -  -  -  	
  385 D1:AAFD -  -  -  -  	
  386 D1:AAFD -  -  -  -  	
  387 D1:AAFD -  -  -  -  	
  388 D1:AAFD -  -  -  -  
  389 D1:AAFD -  -  -  -  	
  390 D1:AAFD -  -  -  -  
  391 D1:AAFD C2 05 A9 D1 	jp nz,main_loop
  392 D1:AB01 -  -  -  -  		
  393 D1:AB01 -  -  -  -  	;print debug times 
  394 D1:AB01 21 00 00 D4 	ld hl,vRam
  395 D1:AB05 22 10 00 E3 	ld (mpLcdBase),hl
  396 D1:AB09 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  397 D1:AB0D 3E 2D -  -  	ld	a,lcdBpp16
  398 D1:AB0F 32 18 00 E3 	ld (mpLcdCtrl),a
  399 D1:AB13 -  -  -  -  	
  400 D1:AB13 3E 00 -  -  	ld a,0
  401 D1:AB15 32 95 05 D0 	ld (curRow),a
  402 D1:AB19 32 96 05 D0 	ld (curCol),a
  403 D1:AB1D 2A E7 AB D1 	ld hl,(longestFrame)
  404 D1:AB21 CD E0 1E 02 	call _DispHL
  405 D1:AB25 3E 01 -  -  	ld a,1
  406 D1:AB27 32 95 05 D0 	ld (curRow),a
  407 D1:AB2B 3E 00 -  -  	ld a,0
  408 D1:AB2D 32 96 05 D0 	ld (curCol),a
  409 D1:AB31 2A EA AB D1 	ld hl,(longestFramePos)
  410 D1:AB35 CD E0 1E 02 	call _DispHL
  411 D1:AB39 3E 02 -  -  	ld a,2
  412 D1:AB3B 32 95 05 D0 	ld (curRow),a
  413 D1:AB3F 3E 00 -  -  	ld a,0
  414 D1:AB41 32 96 05 D0 	ld (curCol),a
  415 D1:AB45 2A ED AB D1 	ld hl,(totalTime)
  416 D1:AB49 CD E0 1E 02 	call _DispHL
  417 D1:AB4D 3E 03 -  -  	ld a,3
  418 D1:AB4F 32 95 05 D0 	ld (curRow),a
  419 D1:AB53 3E 00 -  -  	ld a,0
  420 D1:AB55 32 96 05 D0 	ld (curCol),a
  421 D1:AB59 2A F0 AB D1 	ld hl,(frameCount)
  422 D1:AB5D CD E0 1E 02 	call _DispHL
  423 D1:AB61 -  -  -  -  	
  424 D1:AB61 CD C5 AB D1 	call prgmpause
  425 D1:AB65 CD C5 AB D1 	call prgmpause
  426 D1:AB69 -  -  -  -  	
  427 D1:AB69 -  -  -  -  	
  428 D1:AB69 -  -  -  -  exit_prgm:
  429 D1:AB69 21 00 00 D4 	ld hl,vRam
  430 D1:AB6D 22 10 00 E3 	ld (mpLcdBase),hl
  431 D1:AB71 CD 10 08 02 	call _ClrScrnFull
  432 D1:AB75 3E 2D -  -  	ld	a,lcdBpp16
  433 D1:AB77 32 18 00 E3 	ld	(mpLcdCtrl),a
  434 D1:AB7B CD 3C 1A 02 	call _DrawStatusBar
  435 D1:AB7F -  -  -  -  	
  436 D1:AB7F FB -  -  -  	ei				; reset screen back to normal
  437 D1:AB80 C9 -  -  -  	ret			; return to os
  438 D1:AB81 -  -  -  -  
  439 D1:AB81 -  -  -  -  
  440 D1:AB81 -  -  -  -  printHL:;=================REMOVE
  441 D1:AB81 E5 -  -  -  	push hl
  442 D1:AB82 21 00 00 D4 	ld hl,vRam
  443 D1:AB86 22 10 00 E3 	ld (mpLcdBase),hl
  444 D1:AB8A CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  445 D1:AB8E 3E 2D -  -  	ld	a,lcdBpp16
  446 D1:AB90 32 18 00 E3 	ld (mpLcdCtrl),a
  447 D1:AB94 E1 -  -  -  	pop hl
  448 D1:AB95 CD E0 1E 02 	call _DispHL
  449 D1:AB99 FB -  -  -  	ei
  450 D1:AB9A CD 8C 0D 02 	call _GetKey
  451 D1:AB9E F3 -  -  -  	di
  452 D1:AB9F C3 69 AB D1 	jp exit_prgm
  453 D1:ABA3 -  -  -  -  
  454 D1:ABA3 -  -  -  -  
  455 D1:ABA3 -  -  -  -  write_a_to_ram:
  456 D1:ABA3 F5 -  -  -  	push af 
  457 D1:ABA4 E5 -  -  -  	push hl 
  458 D1:ABA5 -  -  -  -  write_a_to_ram_addr .equ $ + 1 
  459 D1:ABA5 21 00 60 D4 	ld hl, $d46000
  460 D1:ABA9 77 -  -  -  	ld (hl),a 
  461 D1:ABAA 23 -  -  -  	inc hl 
  462 D1:ABAB 22 A6 AB D1 	ld (write_a_to_ram_addr),hl 
  463 D1:ABAF E1 -  -  -  	pop hl 
  464 D1:ABB0 F1 -  -  -  	pop af 
  465 D1:ABB1 C9 -  -  -  	ret 
  466 D1:ABB2 -  -  -  -  	
  467 D1:ABB2 -  -  -  -  write_hl_to_ram:
  468 D1:ABB2 E5 -  -  -  	push hl 
  469 D1:ABB3 D5 -  -  -  	push de 
  470 D1:ABB4 EB -  -  -  	ex de,hl
  471 D1:ABB5 2A A6 AB D1 	ld hl,(write_a_to_ram_addr)
  472 D1:ABB9 ED 1F -  -  	ld (hl),de 
  473 D1:ABBB 23 -  -  -  	inc hl
  474 D1:ABBC 23 -  -  -  	inc hl
  475 D1:ABBD 23 -  -  -  	inc hl
  476 D1:ABBE 22 A6 AB D1 	ld (write_a_to_ram_addr),hl
  477 D1:ABC2 D1 -  -  -  	pop de 
  478 D1:ABC3 E1 -  -  -  	pop hl
  479 D1:ABC4 C9 -  -  -  	ret 
  480 D1:ABC5 -  -  -  -  
  481 D1:ABC5 -  -  -  -  prgmpause: ;for testing, interrupts code until key pressed. will destroy af register
  482 D1:ABC5 F5 -  -  -  	push af
  483 D1:ABC6 D5 -  -  -  	push de 
  484 D1:ABC7 E5 -  -  -  	push hl 
  485 D1:ABC8 08 -  -  -  	ex af,af';'
  486 D1:ABC9 F5 -  -  -  	push af 
  487 D1:ABCA FB -  -  -  	ei
  488 D1:ABCB CD 8C 0D 02 	call _GetKey
  489 D1:ABCF F3 -  -  -  	di
  490 D1:ABD0 F1 -  -  -  	pop af 
  491 D1:ABD1 08 -  -  -  	ex af,af';'
  492 D1:ABD2 E1 -  -  -  	pop hl 
  493 D1:ABD3 D1 -  -  -  	pop de 
  494 D1:ABD4 F1 -  -  -  	pop af
  495 D1:ABD5 C9 -  -  -  	ret
  496 D1:ABD6 -  -  -  -  
  497 D1:ABD6 -  -  -  -  cam_pos:;y position of lowest visible line in fg layer
  498 D1:ABD6 00 00 00 -  	.dl 0
  499 D1:ABD9 -  -  -  -  bg_cam_pos: ;y position of lowest visible line in bg layer (= cam pos / 8)
  500 D1:ABD9 00 00 00 -  	.dl 0
  501 D1:ABDC -  -  -  -  
  502 D1:ABDC -  -  -  -  
  503 D1:ABDC -  -  -  -  draw_buffer:;where new frame is drawn before lcd pointer is swapped 
  504 D1:ABDC 00 2C D5 -  	.dl $d52c00
  505 D1:ABDF -  -  -  -  	
  506 D1:ABDF -  -  -  -  BG_draw_buffer: ;Address of the uppermost line of the background buffer. This is where new lines of bg are drawn to 
  507 D1:ABDF 00 00 00 -  	.dl 0
  508 D1:ABE2 -  -  -  -  BG_buffer .equ vram + (160*240) ;Start of BG buffer 
  509 D1:ABE2 -  -  -  -  
  510 D1:ABE2 -  -  -  -  
  511 D1:ABE2 -  -  -  -  ;d40000 = Decompressed sprite data
  512 D1:ABE2 -  -  -  -  ;d49600 = BG buffer
  513 D1:ABE2 -  -  -  -  ;d52c00 = Frame draw buffer 1 
  514 D1:ABE2 -  -  -  -  ;d5c200 = frame draw buffer 2
  515 D1:ABE2 -  -  -  -  
  516 D1:ABE2 -  -  -  -  ;pixelShadow .equ $D031F6 
  517 D1:ABE2 -  -  -  -  
  518 D1:ABE2 -  -  -  -  move_bg_time:
  519 D1:ABE2 00 -  -  -  	.db 0
  520 D1:ABE3 -  -  -  -  draw_bg_time:
  521 D1:ABE3 00 -  -  -  	.db 0
  522 D1:ABE4 -  -  -  -  draw_mg_time:
  523 D1:ABE4 00 -  -  -  	.db 0
  524 D1:ABE5 -  -  -  -  draw_fg_time:
  525 D1:ABE5 00 -  -  -  	.db 0
  526 D1:ABE6 -  -  -  -  decompress_time:
  527 D1:ABE6 00 -  -  -  	.db 0
  528 D1:ABE7 -  -  -  -  
  529 D1:ABE7 -  -  -  -  
  530 D1:ABE7 -  -  -  -  longestFrame:
  531 D1:ABE7 00 00 00 -  	.dl 0
  532 D1:ABEA -  -  -  -  longestFramePos:
  533 D1:ABEA 00 00 00 -  	.dl 0
  534 D1:ABED -  -  -  -  totalTime:
  535 D1:ABED 00 00 00 -  	.dl 0
  536 D1:ABF0 -  -  -  -  frameCount:
  537 D1:ABF0 00 00 00 -  	.dl 0
  538 D1:ABF3 -  -  -  -  hasLagged:
  539 D1:ABF3 00 00 00 -  	.dl 0
  540 D1:ABF6 -  -  -  -  
  541 D1:ABF6 -  -  -  -  sd_test_a:
  542 D1:ABF6 00 00 00 -  	.dl 0 
  543 D1:ABF9 -  -  -  -  
  544 D1:ABF9 -  -  -  -  
  545 D1:ABF9 -  -  -  -  
  546 D1:ABF9 -  -  -  -  
  547 D1:ABF9 -  -  -  -  
  548 D1:ABF9 -  -  -  -  
  549 D1:ABF9 -  -  -  -  #include "timeTesting.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\timeTesting.txt"
    1 D1:ABF9 -  -  -  -  
    2 D1:ABF9 -  -  -  -  
    3 D1:ABF9 -  -  -  -  
    4 D1:ABF9 -  -  -  -  time_test_start:
    5 D1:ABF9 -  -  -  -  
    6 D1:ABF9 -  -  -  -  		; 76543210	
    7 D1:ABF9 3E 03 -  -  	ld a,%00000011;enable, 32768hz
    8 D1:ABFB 32 30 00 F2 	ld ($F20030),a
    9 D1:ABFF -  -  -  -  	;	  fedcba98
   10 D1:ABFF 3E 02 -  -  	ld a,%00000010;count up
   11 D1:AC01 32 31 00 F2 	ld ($F20031),a
   12 D1:AC05 3E 00 -  -  	ld a,0
   13 D1:AC07 32 00 00 F2 	ld ($F20000),a
   14 D1:AC0B 32 01 00 F2 	ld ($F20001),a
   15 D1:AC0F 32 02 00 F2 	ld ($F20002),a
   16 D1:AC13 32 03 00 F2 	ld ($F20003),a
   17 D1:AC17 -  -  -  -  	
   18 D1:AC17 21 2C 01 00 	ld hl,300
   19 D1:AC1B -  -  -  -  	
   20 D1:AC1B -  -  -  -  time_testing_loop:
   21 D1:AC1B E5 -  -  -  	push hl
   22 D1:AC1C 01 E8 03 00 	ld bc,1000
   23 D1:AC20 -  -  -  -  time_testing_loop_2:
   24 D1:AC20 C5 -  -  -  	push bc
   25 D1:AC21 -  -  -  -  	;instruction here
   26 D1:AC21 -  -  -  -  	
   27 D1:AC21 -  -  -  -  	
   28 D1:AC21 -  -  -  -  	;Instruction end
   29 D1:AC21 C1 -  -  -  	pop bc
   30 D1:AC22 0B -  -  -  	dec bc
   31 D1:AC23 79 -  -  -  	ld a,c
   32 D1:AC24 B0 -  -  -  	or b
   33 D1:AC25 C2 20 AC D1 	jp nz,time_testing_loop_2
   34 D1:AC29 E1 -  -  -  	pop hl
   35 D1:AC2A 2B -  -  -  	dec hl
   36 D1:AC2B 7D -  -  -  	ld a,l
   37 D1:AC2C B4 -  -  -  	or h
   38 D1:AC2D C2 1B AC D1 	jp nz,time_testing_loop
   39 D1:AC31 -  -  -  -  	
   40 D1:AC31 3A 01 00 F2 	ld a,($F20001);128hz
   41 D1:AC35 6F -  -  -  	ld l,a
   42 D1:AC36 3A 02 00 F2 	ld a,($F20002);0.5hz
   43 D1:AC3A 67 -  -  -  	ld h,a
   44 D1:AC3B C3 81 AB D1 	jp printHL;div by 128 for time
   45 D1:AC3F -  -  -  -  	
   46 D1:AC3F -  -  -  -  
   47 D1:AC3F -  -  -  -  ;60fps = .0166sec/f	
   48 D1:AC3F -  -  -  -  
   49 D1:AC3F -  -  -  -  ;1000 ldir in vram of 160*240 bytes
   50 D1:AC3F -  -  -  -  ;6.8sec, .0068 sec/instruction   0.4 of a frame
   51 D1:AC3F -  -  -  -  
   52 D1:AC3F -  -  -  -  
   53 D1:AC3F -  -  -  -  ;10,000 draw 1 bg line very complex 
   54 D1:AC3F -  -  -  -  ;9 sec  .07 of frame/instruction
   55 D1:AC3F -  -  -  -  
   56 D1:AC3F -  -  -  -  ;300k draw slow sprite 12*5 px complex
   57 D1:AC3F -  -  -  -  ;16.4RT, 14.8CLK
   58 D1:AC3F -  -  -  -  ;.00328 frames/sprite, 4.19 frames / screen
   59 D1:AC3F -  -  -  -  ;.24 screens/frame
   60 D1:AC3F -  -  -  -  
   61 D1:AC3F -  -  -  -  
   62 D1:AC3F -  -  -  -  ;300k slow sprite best case 12*5px
   63 D1:AC3F -  -  -  -  ;8.75RT 7.6clk
   64 D1:AC3F -  -  -  -  ;.00175 frames/spr 2.24 frames/screen
   65 D1:AC3F -  -  -  -  ;.446 screens/frame
   66 D1:AC3F -  -  -  -  
   67 D1:AC3F -  -  -  -  
   68 D1:AC3F -  -  -  -  
   69 D1:AC3F -  -  -  -  ;1,000,000 fast fg sprite 20*4 px
   70 D1:AC3F -  -  -  -  ;22.15RT,20.35clk
   71 D1:AC3F -  -  -  -  ;.00133 frames/spr 1.275 frames/screen
   72 D1:AC3F -  -  -  -  ;.78 screens/frame
   73 D1:AC3F -  -  -  -  
   74 D1:AC3F -  -  -  -  
   75 D1:AC3F -  -  -  -  ;for 60% of screen with fg sprites in 1 frame
   76 D1:AC3F -  -  -  -  ;.6 = .78*fast + .44*(1-fast)
   77 D1:AC3F -  -  -  -  ;.47 = FAST
   78 D1:AC3F -  -  -  -  
   79 D1:AC3F -  -  -  -  ;50% fast sprites, 50% slow sprites
   80 D1:AC3F -  -  -  -  
   81 D1:AC3F -  -  -  -  
   82 D1:AC3F -  -  -  -  
   83 D1:AC3F -  -  -  -  
   84 D1:AC3F -  -  -  -  
   85 D1:AC3F -  -  -  -  
   86 D1:AC3F -  -  -  -  
   87 D1:AC3F -  -  -  -  
   88 D1:AC3F -  -  -  -  
Listing for file "ascent.asm"
  550 D1:AC3F -  -  -  -  #include "drawBGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawBGSprite.txt"
    1 D1:AC3F -  -  -  -  
    2 D1:AC3F -  -  -  -  
    3 D1:AC3F -  -  -  -  BGMaxSpriteHeight .equ 120
    4 D1:AC3F -  -  -  -  
    5 D1:AC3F -  -  -  -  
    6 D1:AC3F -  -  -  -  draw_bg:; function for drawing background buffer to the draw buffer, clearing the frame for fg sprites to be drawn over 
    7 D1:AC3F CD 73 AC D1 	call move_bg
    8 D1:AC43 21 00 2C D5 	ld hl,$d52c00;BG_buffer_end
    9 D1:AC47 ED 4B DF AB 
              D1 -  -  -  	ld bc,(BG_draw_buffer)
   10 D1:AC4C 37 -  -  -  	scf 
   11 D1:AC4D 3F -  -  -  	ccf 
   12 D1:AC4E ED 42 -  -  	sbc hl,bc ;get number of bytes from the loop point in the buffer to end of the buffer 
   13 D1:AC50 E5 -  -  -  	push hl 
   14 D1:AC51 C1 -  -  -  	pop bc	;put into bc for ldir 
   15 D1:AC52 2A DF AB D1 	ld hl,(BG_draw_buffer)
   16 D1:AC56 ED 5B DC AB 
              D1 -  -  -  	ld de,(draw_buffer)
   17 D1:AC5B ED B0 -  -  	ldir
   18 D1:AC5D 2A DF AB D1 	ld hl,(BG_draw_buffer) ;loop point in buffer
   19 D1:AC61 01 00 96 D4 	ld bc,BG_buffer ;start of buffer
   20 D1:AC65 37 -  -  -  	scf 
   21 D1:AC66 3F -  -  -  	ccf 
   22 D1:AC67 ED 42 -  -  	sbc hl,bc ;number of bytes from start to loop point 
   23 D1:AC69 C8 -  -  -  	ret z ;if bg buffer line is at top of buffer, no second ldir
   24 D1:AC6A E5 -  -  -  	push hl 
   25 D1:AC6B C1 -  -  -  	pop bc
   26 D1:AC6C 21 00 96 D4 	ld hl,BG_buffer 
   27 D1:AC70 ED B0 -  -  	ldir 
   28 D1:AC72 C9 -  -  -  	ret 
   29 D1:AC73 -  -  -  -  	
   30 D1:AC73 -  -  -  -  	
   31 D1:AC73 -  -  -  -  ;function for moving the backgrond buffer. checks if camera has moved since the buffer was last updated.
   32 D1:AC73 -  -  -  -  ;if so will draw new lines of the bg buffer to move it up or down until it is in the correct position
   33 D1:AC73 -  -  -  -  move_bg:
   34 D1:AC73 2A D6 AB D1 	ld hl,(cam_pos);load cam pos 
   35 D1:AC77 -  -  -  -  	;call write_hl_to_ram
   36 D1:AC77 CB 3C -  -  	srl h
   37 D1:AC79 CB 1D -  -  	rr l
   38 D1:AC7B CB 3C -  -  	srl h
   39 D1:AC7D CB 1D -  -  	rr l
   40 D1:AC7F CB 3C -  -  	srl h
   41 D1:AC81 CB 1D -  -  	rr l	;div by 8 to get location of BG layer
   42 D1:AC83 -  -  -  -  	;hl holds bg cam pos, lowest visible line of bg layer 
   43 D1:AC83 ED 4B D9 AB 
              D1 -  -  -  	ld bc,(bg_cam_pos);previous BG cam location 
   44 D1:AC88 37 -  -  -  	scf
   45 D1:AC89 3F -  -  -  	ccf
   46 D1:AC8A ED 42 -  -  	sbc hl,bc ;compare to the updated location
   47 D1:AC8C C8 -  -  -  	ret z ;if 0, the bg buffer does not need to be moved 
   48 D1:AC8D DA 99 AC D1 	jp c,move_bg_down ;if previous cam pos id above current pos, screen has moved down, go to move bg down 1 line
   49 D1:AC91 CD E8 AC D1 	call inc_bg ;otherwise, screen has moved up, need to move bg up 1 line
   50 D1:AC95 C3 73 AC D1 	jp move_bg ;repeat until bg is in correct pos
   51 D1:AC99 -  -  -  -  move_bg_down:
   52 D1:AC99 CD A1 AC D1 	call dec_bg
   53 D1:AC9D C3 73 AC D1 	jp move_bg ;repeat until bg is in correct pos
   54 D1:ACA1 -  -  -  -  
   55 D1:ACA1 -  -  -  -  
   56 D1:ACA1 -  -  -  -  dec_bg:;move bg cam down 1px 
   57 D1:ACA1 -  -  -  -  
   58 D1:ACA1 -  -  -  -  	
   59 D1:ACA1 -  -  -  -  	;Testibng
   60 D1:ACA1 -  -  -  -  	;ld a,$AD
   61 D1:ACA1 -  -  -  -  	;call write_a_to_ram
   62 D1:ACA1 -  -  -  -  	
   63 D1:ACA1 -  -  -  -  
   64 D1:ACA1 -  -  -  -  	;write on draw buffer line 
   65 D1:ACA1 2A DF AB D1 	ld hl,(BG_draw_buffer) ;topmost line of bg buffer will be overwritten with new bottom line 
   66 D1:ACA5 22 F4 AD D1 	ld (dbgl_vram_line_start),hl 
   67 D1:ACA9 -  -  -  -  	
   68 D1:ACA9 2A D9 AB D1 	ld hl,(bg_cam_pos)
   69 D1:ACAD 2B -  -  -  	dec hl ;dec bg cam pos by 1 
   70 D1:ACAE 22 D9 AB D1 	ld (bg_cam_pos),hl 
   71 D1:ACB2 -  -  -  -  	
   72 D1:ACB2 01 00 00 00 	ld bc,0 ;clear bc reg
   73 D1:ACB6 4C -  -  -  	ld c,h;bottom y value msb 
   74 D1:ACB7 7D -  -  -  	ld a,l ;bottom y value lsb 
   75 D1:ACB8 21 E9 C0 D1 	ld hl,BG_Data_frame_table
   76 D1:ACBC 0C -  -  -  	inc c 
   77 D1:ACBD 09 -  -  -  	add hl,bc 
   78 D1:ACBE 09 -  -  -  	add hl,bc 
   79 D1:ACBF 09 -  -  -  	add hl,bc ;add 3*frame number to get to correct frame pointer
   80 D1:ACC0 ED 27 -  -  	ld hl,(hl) ;hl now points to bg frame data 
   81 D1:ACC2 CD 86 AD D1 	call draw_bg_line
   82 D1:ACC6 -  -  -  -  	
   83 D1:ACC6 -  -  -  -  
   84 D1:ACC6 -  -  -  -  	;move buffer pos
   85 D1:ACC6 2A DF AB D1 	ld hl,(BG_draw_buffer)
   86 D1:ACCA 01 60 2B D5 	ld bc,$d52b60;BG_buffer_end, start of last line of vram buffer 
   87 D1:ACCE 37 -  -  -  	scf 
   88 D1:ACCF 3F -  -  -  	ccf 
   89 D1:ACD0 ED 42 -  -  	sbc hl,bc ;compare to current line 
   90 D1:ACD2 2A DF AB D1 	ld hl,(BG_draw_buffer)
   91 D1:ACD6 C2 DE AC D1 	jp nz,dec_bg_bottom_skip
   92 D1:ACDA 21 60 95 D4 	ld hl,$d49560;1 row above top of bg buffer 
   93 D1:ACDE -  -  -  -  dec_bg_bottom_skip:
   94 D1:ACDE 01 A0 00 00 	ld bc,160 
   95 D1:ACE2 09 -  -  -  	add hl,bc
   96 D1:ACE3 22 DF AB D1 	ld (BG_draw_buffer),hl 
   97 D1:ACE7 C9 -  -  -  	ret
   98 D1:ACE8 -  -  -  -  
   99 D1:ACE8 -  -  -  -  
  100 D1:ACE8 -  -  -  -  inc_bg:;move cam up 
  101 D1:ACE8 -  -  -  -  
  102 D1:ACE8 -  -  -  -  	
  103 D1:ACE8 -  -  -  -  	;Testibng
  104 D1:ACE8 -  -  -  -  	;ld a,$00
  105 D1:ACE8 -  -  -  -  	;call write_a_to_ram
  106 D1:ACE8 -  -  -  -  	;call prgmpause
  107 D1:ACE8 -  -  -  -  
  108 D1:ACE8 2A DF AB D1 	ld hl,(BG_draw_buffer)
  109 D1:ACEC 01 00 96 D4 	ld bc,BG_buffer
  110 D1:ACF0 37 -  -  -  	scf 
  111 D1:ACF1 3F -  -  -  	ccf 
  112 D1:ACF2 ED 42 -  -  	sbc hl,bc ;compare current drawing line to top of bg buffer 
  113 D1:ACF4 2A DF AB D1 	ld hl,(BG_draw_buffer)
  114 D1:ACF8 C2 00 AD D1 	jp nz,inc_bg_top_skip ;if they are not equal, continue
  115 D1:ACFC 21 00 2C D5 	ld hl,$d52c00;otherwise need to wrap back to bottom of buffer, set hl to 1 below bottom of bg buffer 
  116 D1:AD00 -  -  -  -  inc_bg_top_skip:
  117 D1:AD00 01 A0 00 00 	ld bc,160 
  118 D1:AD04 37 -  -  -  	scf
  119 D1:AD05 3F -  -  -  	ccf 
  120 D1:AD06 ED 42 -  -  	sbc hl,bc ;move up line, hl now points to line drawing location in vram 
  121 D1:AD08 22 DF AB D1 	ld (BG_draw_buffer),hl 
  122 D1:AD0C 22 F4 AD D1 	ld (dbgl_vram_line_start),hl 
  123 D1:AD10 2A D9 AB D1 	ld hl,(bg_cam_pos)
  124 D1:AD14 23 -  -  -  	inc hl 
  125 D1:AD15 22 D9 AB D1 	ld (bg_cam_pos),hl ;incremnet cam pos 
  126 D1:AD19 -  -  -  -  	;call write_hl_to_ram
  127 D1:AD19 01 EF 00 00 	ld bc,239
  128 D1:AD1D 09 -  -  -  	add hl,bc ;gets uppermost visible line y value in bg layer
  129 D1:AD1E 4C -  -  -  	ld c,h;cam pos msb 
  130 D1:AD1F 7D -  -  -  	ld a,l ;a holds line number in target frame 
  131 D1:AD20 21 E9 C0 D1 	ld hl,BG_Data_frame_table
  132 D1:AD24 0C -  -  -  	inc c ;inc to get to upper frame 
  133 D1:AD25 09 -  -  -  	add hl,bc 
  134 D1:AD26 09 -  -  -  	add hl,bc 
  135 D1:AD27 09 -  -  -  	add hl,bc 
  136 D1:AD28 ED 27 -  -  	ld hl,(hl)
  137 D1:AD2A CD 86 AD D1 	call draw_bg_line
  138 D1:AD2E C9 -  -  -  	ret
  139 D1:AD2F -  -  -  -  	
  140 D1:AD2F -  -  -  -  
  141 D1:AD2F -  -  -  -  
  142 D1:AD2F -  -  -  -  
  143 D1:AD2F -  -  -  -  
  144 D1:AD2F -  -  -  -  setup_bg: ;Draws entire BG buffer when loading game 
  145 D1:AD2F 2A D6 AB D1 	ld hl,(cam_pos)
  146 D1:AD33 CB 3C -  -  	srl h
  147 D1:AD35 CB 1D -  -  	rr l
  148 D1:AD37 CB 3C -  -  	srl h
  149 D1:AD39 CB 1D -  -  	rr l ;div by 4
  150 D1:AD3B -  -  -  -  	;hl holds bg cam pos 
  151 D1:AD3B 22 D9 AB D1 	ld (bg_cam_pos),hl
  152 D1:AD3F -  -  -  -  	
  153 D1:AD3F 01 EF 00 00 	ld bc,239
  154 D1:AD43 09 -  -  -  	add hl,bc;hl holds y position of uppermost visible line in bg layer 
  155 D1:AD44 -  -  -  -  	
  156 D1:AD44 23 -  -  -  	inc hl;to be dec in loop
  157 D1:AD45 E5 -  -  -  	push hl ;save uppermost line y val
  158 D1:AD46 21 00 96 D4 	ld hl,BG_buffer ;start of bg drawing buffer 
  159 D1:AD4A 22 DF AB D1 	ld (BG_draw_buffer),hl ;set current bg line drawing location 
  160 D1:AD4E E5 -  -  -  	push hl 
  161 D1:AD4F -  -  -  -  	
  162 D1:AD4F 3E F0 -  -  	ld a,240 ;num loops
  163 D1:AD51 32 79 AD D1 	ld (setup_bg_loop_count),a
  164 D1:AD55 -  -  -  -  setup_bg_loop:
  165 D1:AD55 -  -  -  -  
  166 D1:AD55 E1 -  -  -  	pop hl;vram draw pos, next line of bg drawn here 
  167 D1:AD56 22 F4 AD D1 	ld (dbgl_vram_line_start),hl ;set drawing pos 
  168 D1:AD5A 01 A0 00 00 	ld bc,160
  169 D1:AD5E 09 -  -  -  	add hl,bc 
  170 D1:AD5F EB -  -  -  	ex de,hl ;put next vram pos in de 
  171 D1:AD60 E1 -  -  -  	pop hl;uppermost line y val
  172 D1:AD61 2B -  -  -  	dec hl ;dec line y value (move to next lowest line)
  173 D1:AD62 E5 -  -  -  	push hl;push uppermost line y val
  174 D1:AD63 D5 -  -  -  	push de ;push vram pos 
  175 D1:AD64 01 00 00 00 	ld bc,0
  176 D1:AD68 4C -  -  -  	ld c,h;cam pos msb 
  177 D1:AD69 7D -  -  -  	ld a,l ;a holds line number in current frame 
  178 D1:AD6A 21 E9 C0 D1 	ld hl,BG_Data_frame_table
  179 D1:AD6E 0C -  -  -  	inc c ;add 1 to get to upper frame
  180 D1:AD6F 09 -  -  -  	add hl,bc 
  181 D1:AD70 09 -  -  -  	add hl,bc 
  182 D1:AD71 09 -  -  -  	add hl,bc 
  183 D1:AD72 ED 27 -  -  	ld hl,(hl) ;hl now points to upper frame data 
  184 D1:AD74 CD 86 AD D1 	call draw_bg_line ;hl pts to upper frame data, a = line num in target frame
  185 D1:AD78 -  -  -  -  	
  186 D1:AD78 -  -  -  -  setup_bg_loop_count .equ $ + 1
  187 D1:AD78 3E 00 -  -  	ld a,0
  188 D1:AD7A 3D -  -  -  	dec a ;dec loop counter
  189 D1:AD7B 32 79 AD D1 	ld (setup_bg_loop_count),a
  190 D1:AD7F C2 55 AD D1 	jp nz,setup_bg_loop 
  191 D1:AD83 E1 -  -  -  	pop hl ;pop vram pos 
  192 D1:AD84 E1 -  -  -  	pop hl ;pop current line number 
  193 D1:AD85 C9 -  -  -  	ret 
  194 D1:AD86 -  -  -  -  
  195 D1:AD86 -  -  -  -  
  196 D1:AD86 -  -  -  -  
  197 D1:AD86 -  -  -  -  
  198 D1:AD86 -  -  -  -  
  199 D1:AD86 -  -  -  -  
  200 D1:AD86 -  -  -  -  ;hl = upper data frame, a = line number in target frame
  201 D1:AD86 -  -  -  -  ;for drawing BG, only 1 line is drawn at a time.
  202 D1:AD86 -  -  -  -  ;therefore only check sprites in the above frame that may extend downwards, 
  203 D1:AD86 -  -  -  -  ;and the sprites in the target frame which contains the y position of the line being drawn
  204 D1:AD86 -  -  -  -  ;set dbgl_vram_line_start before calling 
  205 D1:AD86 -  -  -  -  draw_bg_line:
  206 D1:AD86 -  -  -  -  	
  207 D1:AD86 -  -  -  -  	
  208 D1:AD86 32 D2 AD D1 	ld (dbgl_line_num),a ;write line num to required positions 
  209 D1:AD8A 32 B6 B5 D1 	ld (dfgs_cam_height_1), a ;Used to check if upper frame should be considered
  210 D1:AD8E ED 44 -  -  	neg 
  211 D1:AD90 32 BE AD D1 	ld (dbgl_lines_to_top_of_target_frame),a 
  212 D1:AD94 -  -  -  -  	
  213 D1:AD94 E5 -  -  -  	push hl ;upper frame sprite table pointer 
  214 D1:AD95 3E FF -  -  	ld a,$FF ;Set all of line to FF to clear it with color 16
  215 D1:AD97 01 A0 00 00 	ld bc,160
  216 D1:AD9B 2A F4 AD D1 	ld hl,(dbgl_vram_line_start) ;Drawing address of line 
  217 D1:AD9F CD E0 10 02 	call _MemSet ;Clear all of line 
  218 D1:ADA3 E1 -  -  -  	pop hl ;return upper frame ptr 
  219 D1:ADA4 -  -  -  -  
  220 D1:ADA4 -  -  -  -  	
  221 D1:ADA4 3E DA -  -  	ld a,%11011010;jp c
  222 D1:ADA6 32 E8 B5 D1 	ld (dfgs_bg_mode_1),a 
  223 D1:ADAA 32 4C B6 D1 	ld (dfgs_bg_mode_2),a 
  224 D1:ADAE -  -  -  -  	
  225 D1:ADAE 3E FF -  -  	ld a,255;
  226 D1:ADB0 32 E5 B6 D1 	ld (dfgs_cam_height_3),a ;Will skip drawing of lower frame
  227 D1:ADB4 32 FF B6 D1 	ld (dfgs_cam_height_4),a
  228 D1:ADB8 -  -  -  -  	
  229 D1:ADB8 -  -  -  -  
  230 D1:ADB8 -  -  -  -  	
  231 D1:ADB8 CD 9D B5 D1 	call draw_fg_sprites
  232 D1:ADBC -  -  -  -  	
  233 D1:ADBC C9 -  -  -  	ret
  234 D1:ADBD -  -  -  -  	
  235 D1:ADBD -  -  -  -  
  236 D1:ADBD -  -  -  -  
  237 D1:ADBD -  -  -  -  	;a = y value of sprite in upper frame, hl pts to height
  238 D1:ADBD -  -  -  -  dbgl_draw_upper_sprite:	
  239 D1:ADBD -  -  -  -  
  240 D1:ADBD -  -  -  -  	;push af 
  241 D1:ADBD -  -  -  -  	;call write_a_to_ram
  242 D1:ADBD -  -  -  -  	;ld a,(hl)
  243 D1:ADBD -  -  -  -  	;call write_a_to_ram
  244 D1:ADBD -  -  -  -  	;ld a,$BC
  245 D1:ADBD -  -  -  -  	;call write_a_to_ram
  246 D1:ADBD -  -  -  -  	;pop af
  247 D1:ADBD -  -  -  -  	
  248 D1:ADBD -  -  -  -  	;call write_hl_to_ram
  249 D1:ADBD -  -  -  -  	
  250 D1:ADBD -  -  -  -  	;call prgmpause
  251 D1:ADBD -  -  -  -  
  252 D1:ADBD -  -  -  -  dbgl_lines_to_top_of_target_frame .equ $ + 1
  253 D1:ADBD C6 00 -  -  	add a,0 ;a holds line number in sprite to draw (0 indexed)
  254 D1:ADBF -  -  -  -  	;call write_a_to_ram
  255 D1:ADBF DA CD AD D1 	jp c,dbgl_upper_skip_sprite ; if line to draw >255, skip (happens if sprite has large y val)
  256 D1:ADC3 BE -  -  -  	cp (hl) ;compare to sprite height 
  257 D1:ADC4 D2 CD AD D1 	jp nc, dbgl_upper_skip_sprite; Skip drawing, sprite does not extend to target line 
  258 D1:ADC8 -  -  -  -  	;Sprite is to be drawn, a holds line number 
  259 D1:ADC8 CD E5 AD D1 	call dbgl_setup_and_draw ;draw sprite line 
  260 D1:ADCC -  -  -  -  	;hl pts to next sprite y
  261 D1:ADCC C9 -  -  -  	ret
  262 D1:ADCD -  -  -  -  	
  263 D1:ADCD -  -  -  -  dbgl_upper_skip_sprite:
  264 D1:ADCD 23 -  -  -  	inc hl ;to x 
  265 D1:ADCE 23 -  -  -  	inc hl ;to index 
  266 D1:ADCF 23 -  -  -  	inc hl ;to next y
  267 D1:ADD0 C9 -  -  -  	ret
  268 D1:ADD1 -  -  -  -  	
  269 D1:ADD1 -  -  -  -  
  270 D1:ADD1 -  -  -  -  	;a holds y in frame, (hl) = height
  271 D1:ADD1 -  -  -  -  dbgl_draw_lower_sprite:
  272 D1:ADD1 -  -  -  -  	
  273 D1:ADD1 -  -  -  -  	;call write_a_to_ram
  274 D1:ADD1 -  -  -  -  	;call prgmpause
  275 D1:ADD1 -  -  -  -  	;call write_hl_to_ram
  276 D1:ADD1 -  -  -  -  	
  277 D1:ADD1 -  -  -  -  	;call prgmpause
  278 D1:ADD1 -  -  -  -  	
  279 D1:ADD1 -  -  -  -  dbgl_line_num .equ $ + 1
  280 D1:ADD1 D6 00 -  -  	sub 0;subtract line num 
  281 D1:ADD3 DA E1 AD D1 	jp c, dbgl_lower_skip_sprite ;if carry, line number was above sprite y pos 
  282 D1:ADD7 -  -  -  -  	;if a is 0, we draw first line of sprite, if a is 1, draw second... a holds line num of sprite to draw (0 indexed) 
  283 D1:ADD7 BE -  -  -  	cp (hl) ;compare to sprite height
  284 D1:ADD8 D2 E1 AD D1 	jp nc, dbgl_lower_skip_sprite; Skip drawing, sprite does not extend to target line 
  285 D1:ADDC -  -  -  -  	
  286 D1:ADDC -  -  -  -  	;Sprite is to be drawn, a holds line number 
  287 D1:ADDC CD E5 AD D1 	call dbgl_setup_and_draw ;draw sprite line 
  288 D1:ADE0 -  -  -  -  	;hl pts to next y
  289 D1:ADE0 C9 -  -  -  	ret
  290 D1:ADE1 -  -  -  -  	
  291 D1:ADE1 -  -  -  -  dbgl_lower_skip_sprite:
  292 D1:ADE1 -  -  -  -  
  293 D1:ADE1 -  -  -  -  	;ld a,$AA 
  294 D1:ADE1 -  -  -  -  	;call write_a_to_ram
  295 D1:ADE1 -  -  -  -  	;call prgmpause
  296 D1:ADE1 -  -  -  -  	
  297 D1:ADE1 23 -  -  -  	inc hl ;to x 
  298 D1:ADE2 23 -  -  -  	inc hl ;to index 
  299 D1:ADE3 23 -  -  -  	inc hl ;to y
  300 D1:ADE4 C9 -  -  -  	ret
  301 D1:ADE5 -  -  -  -  
  302 D1:ADE5 -  -  -  -  
  303 D1:ADE5 -  -  -  -  
  304 D1:ADE5 -  -  -  -  
  305 D1:ADE5 -  -  -  -  ;a holds 0 indexed line num of sprite, (hl) = height ,bc,de = 0
  306 D1:ADE5 -  -  -  -  ;returns hl holds next y val
  307 D1:ADE5 -  -  -  -  dbgl_setup_and_draw:
  308 D1:ADE5 -  -  -  -  
  309 D1:ADE5 -  -  -  -  	;push af 
  310 D1:ADE5 -  -  -  -  	;ld a,$AB 
  311 D1:ADE5 -  -  -  -  	;call write_a_to_ram
  312 D1:ADE5 -  -  -  -  	;call write_hl_to_ram
  313 D1:ADE5 -  -  -  -  	;pop af 
  314 D1:ADE5 -  -  -  -  	;call write_a_to_ram
  315 D1:ADE5 -  -  -  -  	
  316 D1:ADE5 -  -  -  -  	;call prgmpause
  317 D1:ADE5 -  -  -  -  
  318 D1:ADE5 01 00 00 00 	ld bc,0
  319 D1:ADE9 11 00 00 00 	ld de,0
  320 D1:ADED -  -  -  -  	
  321 D1:ADED 23 -  -  -  	inc hl;to x pos
  322 D1:ADEE 5E -  -  -  	ld e,(hl);e holds x pos 
  323 D1:ADEF 23 -  -  -  	inc hl 
  324 D1:ADF0 4E -  -  -  	ld c,(hl);sprite index 
  325 D1:ADF1 23 -  -  -  	inc hl ;next y
  326 D1:ADF2 E5 -  -  -  	push hl ;save location in data 
  327 D1:ADF3 -  -  -  -  dbgl_vram_line_start .equ $ + 1	
  328 D1:ADF3 21 00 00 00 	ld hl,0
  329 D1:ADF7 19 -  -  -  	add hl,de;add x pos
  330 D1:ADF8 -  -  -  -  dbgl_sg_x_origin .equ $ + 1
  331 D1:ADF8 1E 00 -  -  	ld e,0 
  332 D1:ADFA 19 -  -  -  	add hl,de;add x pos
  333 D1:ADFB -  -  -  -  	
  334 D1:ADFB EB -  -  -  	ex de,hl;put vram pos into de 
  335 D1:ADFC -  -  -  -  	
  336 D1:ADFC 26 A0 -  -  	ld h,160
  337 D1:ADFE 6F -  -  -  	ld l,a ;number of lines to subtract 
  338 D1:ADFF ED 6C -  -  	mlt hl;bytes to subtract from vram
  339 D1:AE01 37 -  -  -  	scf 
  340 D1:AE02 3F -  -  -  	ccf
  341 D1:AE03 EB -  -  -  	ex de,hl;hl holds initial vram pos, de is lines to subtract  
  342 D1:AE04 ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  343 D1:AE06 EB -  -  -  	ex de,hl;put in de
  344 D1:AE07 -  -  -  -  	
  345 D1:AE07 -  -  -  -  dbgl_sprite_pointers .equ $ + 1
  346 D1:AE07 21 00 00 00 	ld hl,0
  347 D1:AE0B 09 -  -  -  	add hl,bc
  348 D1:AE0C 09 -  -  -  	add hl,bc 
  349 D1:AE0D 09 -  -  -  	add hl,bc ;hl points to sprite data pointer 
  350 D1:AE0E ED 27 -  -  	ld hl,(hl);hl holds sprite data
  351 D1:AE10 -  -  -  -  
  352 D1:AE10 -  -  -  -  
  353 D1:AE10 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  354 D1:AE12 CA 1E AE D1 	jp z,dbgl_fast_sprite ;if even address, fast sprite 
  355 D1:AE16 CD F0 AE D1 	call draw_slow_sprite_single_line
  356 D1:AE1A C3 22 AE D1 	jp dbgl_slow_sprite
  357 D1:AE1E -  -  -  -  dbgl_fast_sprite:
  358 D1:AE1E CD 72 AE D1 	call draw_fast_sprite_single_line
  359 D1:AE22 -  -  -  -  dbgl_slow_sprite:
  360 D1:AE22 -  -  -  -  	
  361 D1:AE22 11 00 00 00 	ld de,0;clear de 
  362 D1:AE26 01 00 00 00 	ld bc,0
  363 D1:AE2A E1 -  -  -  	pop hl;back to data
  364 D1:AE2B C9 -  -  -  	ret
  365 D1:AE2C -  -  -  -  	
  366 D1:AE2C -  -  -  -  
  367 D1:AE2C -  -  -  -  
  368 D1:AE2C -  -  -  -  
  369 D1:AE2C -  -  -  -  
  370 D1:AE2C -  -  -  -  
  371 D1:AE2C -  -  -  -  
  372 D1:AE2C -  -  -  -  
  373 D1:AE2C -  -  -  -  
  374 D1:AE2C -  -  -  -  
  375 D1:AE2C -  -  -  -  
  376 D1:AE2C -  -  -  -  
  377 D1:AE2C -  -  -  -  
  378 D1:AE2C -  -  -  -  
  379 D1:AE2C -  -  -  -  
  380 D1:AE2C -  -  -  -  
  381 D1:AE2C -  -  -  -  
  382 D1:AE2C -  -  -  -  
  383 D1:AE2C -  -  -  -  
Listing for file "ascent.asm"
  551 D1:AE2C -  -  -  -  #include "drawFGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFGSprite.txt"
    1 D1:AE2C -  -  -  -  
    2 D1:AE2C -  -  -  -  ;hl = data, a = lines to draw. returns a = num loops to draw, hl = 1 before first gap length
    3 D1:AE2C -  -  -  -  setup_sprite_bottom_cut:
    4 D1:AE2C 1B -  -  -  	dec de
    5 D1:AE2D 01 00 00 00 	ld bc,0 ;clear bc
    6 D1:AE31 4F -  -  -  	ld c,a;c = lines to draw
    7 D1:AE32 E5 -  -  -  	push hl ;save data 
    8 D1:AE33 09 -  -  -  	add hl,bc
    9 D1:AE34 7E -  -  -  	ld a,(hl);num loops to draw
   10 D1:AE35 E1 -  -  -  	pop hl ;return to start of data
   11 D1:AE36 4E -  -  -  	ld c,(hl) ;height
   12 D1:AE37 09 -  -  -  	add hl,bc ;hl now points to 1 before first gap length
   13 D1:AE38 C9 -  -  -  	ret 
   14 D1:AE39 -  -  -  -  
   15 D1:AE39 -  -  -  -  setup_sprite_top_cut:
   16 D1:AE39 1B -  -  -  	dec de ;move to correct vram pos 
   17 D1:AE3A 01 00 00 00 	ld bc,0
   18 D1:AE3E 4F -  -  -  	ld c,a ;lines to skip (1 indexed)
   19 D1:AE3F D5 -  -  -  	push de
   20 D1:AE40 11 00 00 00 	ld de,0
   21 D1:AE44 E5 -  -  -  	push hl
   22 D1:AE45 5E -  -  -  	ld e,(hl);height
   23 D1:AE46 09 -  -  -  	add hl,bc;hl points to num skip loops 
   24 D1:AE47 4E -  -  -  	ld c,(hl);c holds num skip loops
   25 D1:AE48 E1 -  -  -  	pop hl;start of data
   26 D1:AE49 19 -  -  -  	add hl,de
   27 D1:AE4A 46 -  -  -  	ld b,(hl);total number of loops
   28 D1:AE4B 23 -  -  -  	inc hl;hl is pixel data
   29 D1:AE4C D1 -  -  -  	pop de;back to vram
   30 D1:AE4D 79 -  -  -  	ld a,c;loops to skip
   31 D1:AE4E C9 -  -  -  	ret 
   32 D1:AE4F -  -  -  -  
   33 D1:AE4F -  -  -  -  ;hl = data, a = line number to draw. returns a = c = number of loops to skip, b = loops to skip + loops to draw. HL = gap length  
   34 D1:AE4F -  -  -  -  setup_sprite_single_line: ;sets up for single line drawing mode 
   35 D1:AE4F 1B -  -  -  	dec de
   36 D1:AE50 01 00 00 00 	ld bc,0
   37 D1:AE54 4F -  -  -  	ld c,a ;line to draw
   38 D1:AE55 D5 -  -  -  	push de ;save vram 
   39 D1:AE56 11 00 00 00 	ld de,0
   40 D1:AE5A E5 -  -  -  	push hl
   41 D1:AE5B 5E -  -  -  	ld e,(hl);height
   42 D1:AE5C 09 -  -  -  	add hl,bc;hl points to num skip loops 
   43 D1:AE5D 4E -  -  -  	ld c,(hl);c holds num skip loops
   44 D1:AE5E 23 -  -  -  	inc hl 
   45 D1:AE5F 46 -  -  -  	ld b,(hl);b holds num loops after drawn line 
   46 D1:AE60 E1 -  -  -  	pop hl;start of data
   47 D1:AE61 19 -  -  -  	add hl,de
   48 D1:AE62 23 -  -  -  	inc hl;hl is pixel data points to gap length 
   49 D1:AE63 D1 -  -  -  	pop de;back to vram
   50 D1:AE64 79 -  -  -  	ld a,c;loops to skip
   51 D1:AE65 C9 -  -  -  	ret 
   52 D1:AE66 -  -  -  -  
   53 D1:AE66 -  -  -  -  
   54 D1:AE66 -  -  -  -  
   55 D1:AE66 -  -  -  -  draw_fast_sprite_bottom_cut_from_line:
   56 D1:AE66 3C -  -  -  	inc a 
   57 D1:AE67 -  -  -  -  ;de = vram , hl = data, a = number lines to draw
   58 D1:AE67 -  -  -  -  draw_fast_sprite_bottom_cut:
   59 D1:AE67 CD 2C AE D1 	call setup_sprite_bottom_cut
   60 D1:AE6B 23 -  -  -  	inc hl ;hl points to gap length 
   61 D1:AE6C 4E -  -  -  	ld c,(hl);load alpha length
   62 D1:AE6D EB -  -  -  	ex de,hl;hl is vram, de is data
   63 D1:AE6E C3 B5 AE D1 	jp dfgs_loop
   64 D1:AE72 -  -  -  -  
   65 D1:AE72 -  -  -  -  
   66 D1:AE72 -  -  -  -  ;de = vram , hl = data, a = line to draw (starting from 0)
   67 D1:AE72 -  -  -  -  draw_fast_sprite_single_line:
   68 D1:AE72 B7 -  -  -  	or a 
   69 D1:AE73 CA 66 AE D1 	jp z,draw_fast_sprite_bottom_cut_from_line ; if a is 0, same as drawing bottom cut
   70 D1:AE77 -  -  -  -  	;we know a is not 0 here 
   71 D1:AE77 CD 4F AE D1 	call setup_sprite_single_line
   72 D1:AE7B -  -  -  -  	
   73 D1:AE7B C5 -  -  -  	push bc;save total and skipped loops
   74 D1:AE7C 01 00 00 00 	ld bc,0
   75 D1:AE80 -  -  -  -  	
   76 D1:AE80 C3 8D AE D1 	jp draw_fast_sprite_top_loop 
   77 D1:AE84 -  -  -  -  
   78 D1:AE84 -  -  -  -  
   79 D1:AE84 -  -  -  -  
   80 D1:AE84 -  -  -  -  ;de = vram , hl = data, a = top lines to skip (1 indexed)
   81 D1:AE84 -  -  -  -  draw_fast_sprite_top_cut:
   82 D1:AE84 CD 39 AE D1 	call setup_sprite_top_cut
   83 D1:AE88 C5 -  -  -  	push bc ;save total and skipped loops 
   84 D1:AE89 01 00 00 00 	ld bc,0 
   85 D1:AE8D -  -  -  -  	
   86 D1:AE8D -  -  -  -  draw_fast_sprite_top_loop:; need to follow through gap and drawn lengths to find start of drawing
   87 D1:AE8D 4E -  -  -  	ld c,(hl);load with first gap length	
   88 D1:AE8E EB -  -  -  	ex de,hl;hl is vram
   89 D1:AE8F 09 -  -  -  	add hl,bc
   90 D1:AE90 EB -  -  -  	ex de,hl;hl is data
   91 D1:AE91 23 -  -  -  	inc hl
   92 D1:AE92 4E -  -  -  	ld c,(hl);ldir length
   93 D1:AE93 09 -  -  -  	add hl,bc;add ldir length
   94 D1:AE94 EB -  -  -  	ex de,hl;hl is vram
   95 D1:AE95 09 -  -  -  	add hl,bc;add ldir length
   96 D1:AE96 13 -  -  -  	inc de
   97 D1:AE97 EB -  -  -  	ex de,hl;hl is data
   98 D1:AE98 3D -  -  -  	dec a
   99 D1:AE99 C2 8D AE D1 	jp nz,draw_fast_sprite_top_loop
  100 D1:AE9D -  -  -  -  	
  101 D1:AE9D -  -  -  -  	
  102 D1:AE9D C1 -  -  -  	pop bc ;b is total loops, c is skipped loops 
  103 D1:AE9E 78 -  -  -  	ld a,b
  104 D1:AE9F 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
  105 D1:AEA0 -  -  -  -  		
  106 D1:AEA0 01 00 00 00 	ld bc,0
  107 D1:AEA4 4E -  -  -  	ld c,(hl);load c with gap length
  108 D1:AEA5 EB -  -  -  	ex de,hl ;setup for loop 
  109 D1:AEA6 C3 B5 AE D1 	jp dfgs_loop
  110 D1:AEAA -  -  -  -  
  111 D1:AEAA -  -  -  -  
  112 D1:AEAA -  -  -  -  ;de = vram , hl = data
  113 D1:AEAA -  -  -  -  draw_fast_sprite_full:
  114 D1:AEAA 1B -  -  -  	dec de
  115 D1:AEAB 01 00 00 00 	ld bc,0
  116 D1:AEAF 4E -  -  -  	ld c,(hl);height
  117 D1:AEB0 09 -  -  -  	add hl,bc
  118 D1:AEB1 7E -  -  -  	ld a,(hl);total loops
  119 D1:AEB2 23 -  -  -  	inc hl
  120 D1:AEB3 4E -  -  -  	ld c,(hl);first gap length
  121 D1:AEB4 EB -  -  -  	ex de,hl
  122 D1:AEB5 -  -  -  -  ;a = num loops, c = alphaLength,hl = vram
  123 D1:AEB5 -  -  -  -  dfgs_loop:;gap, colors
  124 D1:AEB5 09 -  -  -  	add hl,bc;add alpha length
  125 D1:AEB6 EB -  -  -  	ex de,hl;swap, hl is data, de is vram
  126 D1:AEB7 23 -  -  -  	inc hl
  127 D1:AEB8 4E -  -  -  	ld c,(hl);get ldir length
  128 D1:AEB9 23 -  -  -  	inc hl
  129 D1:AEBA ED B0 -  -  	ldir
  130 D1:AEBC 4E -  -  -  	ld c,(hl);load c with next alpha length
  131 D1:AEBD EB -  -  -  	ex de,hl;swap, hl is vram
  132 D1:AEBE 3D -  -  -  	dec a
  133 D1:AEBF C2 B5 AE D1 	jp nz,dfgs_loop
  134 D1:AEC3 C9 -  -  -  	ret
  135 D1:AEC4 -  -  -  -  	
  136 D1:AEC4 -  -  -  -  	
  137 D1:AEC4 -  -  -  -  	
  138 D1:AEC4 -  -  -  -  	
  139 D1:AEC4 -  -  -  -  
  140 D1:AEC4 -  -  -  -  
  141 D1:AEC4 -  -  -  -  ;hl = data, de = vram
  142 D1:AEC4 -  -  -  -  draw_slow_sprite_full:
  143 D1:AEC4 01 00 00 00 	ld bc,0
  144 D1:AEC8 4E -  -  -  	ld c,(hl);height
  145 D1:AEC9 09 -  -  -  	add hl,bc
  146 D1:AECA 7E -  -  -  	ld a,(hl);num loops
  147 D1:AECB 1B -  -  -  	dec de ;correct vram pos 
  148 D1:AECC D9 -  -  -  	exx;into shadow 
  149 D1:AECD 47 -  -  -  	ld b,a ;number of loops
  150 D1:AECE -  -  -  -  	;hl = (gap length) -1 de = vram-1 b' = loops
  151 D1:AECE -  -  -  -  dsfgs_line_loop:
  152 D1:AECE D9 -  -  -  	exx;out of shadow
  153 D1:AECF 23 -  -  -  	inc hl;gap length
  154 D1:AED0 4E -  -  -  	ld c,(hl);gap length
  155 D1:AED1 EB -  -  -  	ex de,hl;hl is vram
  156 D1:AED2 09 -  -  -  	add hl,bc;add aplha gap
  157 D1:AED3 EB -  -  -  	ex de,hl;hl is data
  158 D1:AED4 23 -  -  -  	inc hl;hl points to single pix mask
  159 D1:AED5 1A -  -  -  	ld a,(de);vram data
  160 D1:AED6 A6 -  -  -  	and (hl)
  161 D1:AED7 23 -  -  -  	inc hl;pixel data
  162 D1:AED8 B6 -  -  -  	or (hl)
  163 D1:AED9 12 -  -  -  	ld (de),a
  164 D1:AEDA 23 -  -  -  	inc hl;ldir length
  165 D1:AEDB -  -  -  -  	
  166 D1:AEDB 13 -  -  -  	inc de;move to next pixel
  167 D1:AEDC -  -  -  -  	
  168 D1:AEDC 7E -  -  -  	ld a,(hl);ldir length
  169 D1:AEDD 23 -  -  -  	inc hl;data
  170 D1:AEDE 4F -  -  -  	ld c,a
  171 D1:AEDF B7 -  -  -  	or a
  172 D1:AEE0 CA E6 AE D1 	jp z,dsfgs_ldir_skip
  173 D1:AEE4 ED B0 -  -  	ldir
  174 D1:AEE6 -  -  -  -  dsfgs_ldir_skip:
  175 D1:AEE6 1A -  -  -  	ld a,(de);vram data
  176 D1:AEE7 A6 -  -  -  	and (hl)
  177 D1:AEE8 23 -  -  -  	inc hl;pixel data
  178 D1:AEE9 B6 -  -  -  	or (hl)
  179 D1:AEEA 12 -  -  -  	ld (de),a
  180 D1:AEEB -  -  -  -  	
  181 D1:AEEB D9 -  -  -  	exx ;into shadow
  182 D1:AEEC 10 E0 -  -  	djnz dsfgs_line_loop
  183 D1:AEEE D9 -  -  -  	exx ;out 
  184 D1:AEEF C9 -  -  -  	ret
  185 D1:AEF0 -  -  -  -  
  186 D1:AEF0 -  -  -  -  
  187 D1:AEF0 -  -  -  -  
  188 D1:AEF0 -  -  -  -  ;de = vram , hl = data, a = line to draw (from 0)
  189 D1:AEF0 -  -  -  -  draw_slow_sprite_single_line:
  190 D1:AEF0 -  -  -  -  
  191 D1:AEF0 B7 -  -  -  	or a 
  192 D1:AEF1 CA 2E AF D1 	jp z,draw_slow_sprite_bottom_cut_from_line ; if a is 0, same as drawing bottom cut
  193 D1:AEF5 -  -  -  -  	;we know a is not 0 here
  194 D1:AEF5 CD 4F AE D1 	call setup_sprite_single_line
  195 D1:AEF9 C5 -  -  -  	push bc;save total and skipped loops
  196 D1:AEFA 01 00 00 00 	ld bc,0
  197 D1:AEFE -  -  -  -  	
  198 D1:AEFE C3 0B AF D1 	jp slow_sprite_data_traverse 
  199 D1:AF02 -  -  -  -  	
  200 D1:AF02 -  -  -  -  
  201 D1:AF02 -  -  -  -  ;de = vram , hl = data, a = top lines to skip (from 1)
  202 D1:AF02 -  -  -  -  draw_slow_sprite_top_cut:
  203 D1:AF02 CD 39 AE D1 	call setup_sprite_top_cut
  204 D1:AF06 C5 -  -  -  	push bc;save total and skipped loops
  205 D1:AF07 01 00 00 00 	ld bc,0
  206 D1:AF0B -  -  -  -  ;hl = data start, a = num loops to skip, bc = 0
  207 D1:AF0B -  -  -  -  slow_sprite_data_traverse:
  208 D1:AF0B 4E -  -  -  	ld c,(hl);gap length
  209 D1:AF0C EB -  -  -  	ex de,hl;hl is vram
  210 D1:AF0D 09 -  -  -  	add hl,bc
  211 D1:AF0E EB -  -  -  	ex de,hl
  212 D1:AF0F -  -  -  -  	
  213 D1:AF0F 23 -  -  -  	inc hl ;inc past leading pixels
  214 D1:AF10 23 -  -  -  	inc hl
  215 D1:AF11 23 -  -  -  	inc hl;ldir length
  216 D1:AF12 4E -  -  -  	ld c,(hl)
  217 D1:AF13 09 -  -  -  	add hl,bc
  218 D1:AF14 EB -  -  -  	ex de,hl
  219 D1:AF15 09 -  -  -  	add hl,bc
  220 D1:AF16 EB -  -  -  	ex de,hl
  221 D1:AF17 13 -  -  -  	inc de;inc for leading pix 
  222 D1:AF18 23 -  -  -  	inc hl;inc past ending pixels
  223 D1:AF19 23 -  -  -  	inc hl
  224 D1:AF1A 23 -  -  -  	inc hl;gap length
  225 D1:AF1B -  -  -  -  	
  226 D1:AF1B 3D -  -  -  	dec a 
  227 D1:AF1C C2 0B AF D1 	jp nz,slow_sprite_data_traverse
  228 D1:AF20 -  -  -  -  
  229 D1:AF20 -  -  -  -  
  230 D1:AF20 C1 -  -  -  	pop bc ;b is total loops, c is skipped loops 
  231 D1:AF21 78 -  -  -  	ld a,b
  232 D1:AF22 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
  233 D1:AF23 01 00 00 00 	ld bc,0;clear bc 
  234 D1:AF27 2B -  -  -  	dec hl	;hl points to 1 before gaplength
  235 D1:AF28 D9 -  -  -  	exx ;toshadow
  236 D1:AF29 47 -  -  -  	ld b,a 
  237 D1:AF2A C3 CE AE D1 	jp dsfgs_line_loop
  238 D1:AF2E -  -  -  -  	
  239 D1:AF2E -  -  -  -  	
  240 D1:AF2E -  -  -  -  	
  241 D1:AF2E -  -  -  -  draw_slow_sprite_bottom_cut_from_line:
  242 D1:AF2E 3C -  -  -  	inc a 
  243 D1:AF2F -  -  -  -  ;de = vram , hl = data, a = number lines to draw
  244 D1:AF2F -  -  -  -  draw_slow_sprite_bottom_cut:
  245 D1:AF2F -  -  -  -  
  246 D1:AF2F CD 2C AE D1 	call setup_sprite_bottom_cut
  247 D1:AF33 -  -  -  -  	;a = loops to draw, hl = 1 before gap length 
  248 D1:AF33 D9 -  -  -  	exx ;toshadow
  249 D1:AF34 47 -  -  -  	ld b,a
  250 D1:AF35 C3 CE AE D1 	jp dsfgs_line_loop
  251 D1:AF39 -  -  -  -  
  252 D1:AF39 -  -  -  -  
  253 D1:AF39 -  -  -  -  
  254 D1:AF39 -  -  -  -  
  255 D1:AF39 -  -  -  -  
  256 D1:AF39 -  -  -  -  
  257 D1:AF39 -  -  -  -  
  258 D1:AF39 -  -  -  -  
  259 D1:AF39 -  -  -  -  
  260 D1:AF39 -  -  -  -  
  261 D1:AF39 -  -  -  -  
  262 D1:AF39 -  -  -  -  
  263 D1:AF39 -  -  -  -  
  264 D1:AF39 -  -  -  -  
  265 D1:AF39 -  -  -  -  
  266 D1:AF39 -  -  -  -  
  267 D1:AF39 -  -  -  -  
  268 D1:AF39 -  -  -  -  
  269 D1:AF39 -  -  -  -  
  270 D1:AF39 -  -  -  -  
  271 D1:AF39 -  -  -  -  
  272 D1:AF39 -  -  -  -  
  273 D1:AF39 -  -  -  -  
  274 D1:AF39 -  -  -  -  
  275 D1:AF39 -  -  -  -  
  276 D1:AF39 -  -  -  -  
  277 D1:AF39 -  -  -  -  
  278 D1:AF39 -  -  -  -  
  279 D1:AF39 -  -  -  -  
  280 D1:AF39 -  -  -  -  
  281 D1:AF39 -  -  -  -  
  282 D1:AF39 -  -  -  -  
  283 D1:AF39 -  -  -  -  
  284 D1:AF39 -  -  -  -  
  285 D1:AF39 -  -  -  -  
  286 D1:AF39 -  -  -  -  
  287 D1:AF39 -  -  -  -   
  288 D1:AF39 -  -  -  -  
  289 D1:AF39 -  -  -  -  
  290 D1:AF39 -  -  -  -  
  291 D1:AF39 -  -  -  -  
  292 D1:AF39 -  -  -  -  
  293 D1:AF39 -  -  -  -  
  294 D1:AF39 -  -  -  -  
  295 D1:AF39 -  -  -  -  
  296 D1:AF39 -  -  -  -  
  297 D1:AF39 -  -  -  -  
  298 D1:AF39 -  -  -  -  
  299 D1:AF39 -  -  -  -  
  300 D1:AF39 -  -  -  -  
  301 D1:AF39 -  -  -  -  
  302 D1:AF39 -  -  -  -  
  303 D1:AF39 -  -  -  -  
  304 D1:AF39 -  -  -  -  
  305 D1:AF39 -  -  -  -  
  306 D1:AF39 -  -  -  -  
  307 D1:AF39 -  -  -  -  
  308 D1:AF39 -  -  -  -  
  309 D1:AF39 -  -  -  -  
  310 D1:AF39 -  -  -  -  
  311 D1:AF39 -  -  -  -  
  312 D1:AF39 -  -  -  -  
  313 D1:AF39 -  -  -  -  
  314 D1:AF39 -  -  -  -  
  315 D1:AF39 -  -  -  -  
  316 D1:AF39 -  -  -  -  
  317 D1:AF39 -  -  -  -  
  318 D1:AF39 -  -  -  -  
  319 D1:AF39 -  -  -  -  
  320 D1:AF39 -  -  -  -  
  321 D1:AF39 -  -  -  -  
  322 D1:AF39 -  -  -  -  
  323 D1:AF39 -  -  -  -  
  324 D1:AF39 -  -  -  -  
  325 D1:AF39 -  -  -  -  
  326 D1:AF39 -  -  -  -  
  327 D1:AF39 -  -  -  -  
  328 D1:AF39 -  -  -  -  
  329 D1:AF39 -  -  -  -  
  330 D1:AF39 -  -  -  -  
  331 D1:AF39 -  -  -  -  
  332 D1:AF39 -  -  -  -  
  333 D1:AF39 -  -  -  -  
  334 D1:AF39 -  -  -  -  
  335 D1:AF39 -  -  -  -  
  336 D1:AF39 -  -  -  -  
  337 D1:AF39 -  -  -  -  
  338 D1:AF39 -  -  -  -  
  339 D1:AF39 -  -  -  -  
  340 D1:AF39 -  -  -  -  
  341 D1:AF39 -  -  -  -  
  342 D1:AF39 -  -  -  -  
  343 D1:AF39 -  -  -  -  	
  344 D1:AF39 -  -  -  -  	
Listing for file "ascent.asm"
  552 D1:AF39 -  -  -  -  #include "BetterSpriteDecompress.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\BetterSpriteDecompress.txt"
    1 D1:AF39 -  -  -  -  
    2 D1:AF39 -  -  -  -  
    3 D1:AF39 -  -  -  -  
    4 D1:AF39 -  -  -  -  
    5 D1:AF39 -  -  -  -  
    6 D1:AF39 -  -  -  -  
    7 D1:AF39 -  -  -  -  
    8 D1:AF39 -  -  -  -  
    9 D1:AF39 -  -  -  -  ;REGISTER USEAGE
   10 D1:AF39 -  -  -  -  ;HL = sprite color data byte
   11 D1:AF39 -  -  -  -  ;C = bit selector for color data 
   12 D1:AF39 -  -  -  -  ;HL' = alpha data byte
   13 D1:AF39 -  -  -  -  ;C' = bit selector for alpha data
   14 D1:AF39 -  -  -  -  ;DE = output sprite data location
   15 D1:AF39 -  -  -  -  ;DE' = loops/line write location 
   16 D1:AF39 -  -  -  -  ;A' = alpha bits remaining to read in row
   17 D1:AF39 -  -  -  -  
   18 D1:AF39 -  -  -  -  ;SETUP ----------------
   19 D1:AF39 -  -  -  -  ;SET UP BPC MODE AND ALPHA/NOALPHA
   20 D1:AF39 -  -  -  -  ;write height or width(BG) data to decompressed sprite 
   21 D1:AF39 -  -  -  -  ;GET PER SPRITE PALETTE DATA
   22 D1:AF39 -  -  -  -  ;set registers to point to correct locations for decompression
   23 D1:AF39 -  -  -  -  ;------------
   24 D1:AF39 -  -  -  -  
   25 D1:AF39 -  -  -  -  ;GO TO EITHER FAST, SLOW, or BG SPRITE ALGORITHMS
   26 D1:AF39 -  -  -  -  
   27 D1:AF39 -  -  -  -  
   28 D1:AF39 -  -  -  -  ;FAST / SLOW ROUTINE ---------------------------
   29 D1:AF39 -  -  -  -  ;Parse through alpha data, count number of 00 pairs (gap length)
   30 D1:AF39 -  -  -  -  ;IF FAST, GOTO LDIR ROUTINE
   31 D1:AF39 -  -  -  -  ;leading pixel(s), either 11, 01, 10 in alpha data. 
   32 D1:AF39 -  -  -  -  ;write pixel mask and color data
   33 D1:AF39 -  -  -  -  
   34 D1:AF39 -  -  -  -  ;LDIR ROUTINE
   35 D1:AF39 -  -  -  -  ;Count number of 11 pairs in alpha data (LDIR length)
   36 D1:AF39 -  -  -  -  ;if slow and alpha data ends with 00, the last 11 pair becomes trailing pixels
   37 D1:AF39 -  -  -  -  ;Write LDIR length to sprite data 
   38 D1:AF39 -  -  -  -  ;Write LDIR pixel data (if nonzero)
   39 D1:AF39 -  -  -  -  ;IF FAST, GOTO END
   40 D1:AF39 -  -  -  -  
   41 D1:AF39 -  -  -  -  ;trailing pixels
   42 D1:AF39 -  -  -  -  ;11,10,01 in alpha data 
   43 D1:AF39 -  -  -  -  
   44 D1:AF39 -  -  -  -  ;END AND RESTART
   45 D1:AF39 -  -  -  -  ;Increment loops/line counter
   46 D1:AF39 -  -  -  -  ;check if end of line and write loops/line
   47 D1:AF39 -  -  -  -  
   48 D1:AF39 -  -  -  -  ;store registers and check if interrupt is required
   49 D1:AF39 -  -  -  -  ;if interruption required, return to main loop to draw next frame
   50 D1:AF39 -  -  -  -  ;otherwise return to start of loop
   51 D1:AF39 -  -  -  -  
   52 D1:AF39 -  -  -  -  ;
   53 D1:AF39 -  -  -  -  
   54 D1:AF39 -  -  -  -  
   55 D1:AF39 -  -  -  -  
   56 D1:AF39 -  -  -  -  
   57 D1:AF39 -  -  -  -  
   58 D1:AF39 -  -  -  -  
   59 D1:AF39 -  -  -  -  ;rotates c and incs hl if needed to point to next bit. can be flipped to dec bit 
   60 D1:AF39 -  -  -  -  sdcomp_next_in_bitstream:
   61 D1:AF39 -  -  -  -  sdcomp_flip_bitstream .equ $ + 1
   62 D1:AF39 CB 09 -  -  	rrc c;rlc flip
   63 D1:AF3B D0 -  -  -  	ret nc
   64 D1:AF3C -  -  -  -  sdcomp_flip_bitstream_2 .equ $
   65 D1:AF3C 23 -  -  -  	inc hl;dec hl flip
   66 D1:AF3D C9 -  -  -  	ret
   67 D1:AF3E -  -  -  -  
   68 D1:AF3E -  -  -  -  ;ALPHA HELPER FUNCS ================================================================================================	
   69 D1:AF3E -  -  -  -  
   70 D1:AF3E -  -  -  -  ;IN SHADOW
   71 D1:AF3E -  -  -  -  ;HL POINTS TO PIXEL ALPHA DATA
   72 D1:AF3E -  -  -  -  ;C IS BITMASK
   73 D1:AF3E -  -  -  -  ;RETURNS 0 OR nonzero IN A 
   74 D1:AF3E -  -  -  -  ;If final alpha bit in line is read, writes loop/line data, ...
   75 D1:AF3E -  -  -  -  ; sets some flags, decrements remaining lines, traverses sprite data if flip, returns the read data 
   76 D1:AF3E -  -  -  -  ; next call returns first bit in next row  
   77 D1:AF3E -  -  -  -  sdcomp_get_next_alpha:
   78 D1:AF3E -  -  -  -  	;ld a,$A2;test 
   79 D1:AF3E -  -  -  -  	;call write_a_to_ram
   80 D1:AF3E 79 -  -  -  	ld a,c 
   81 D1:AF3F -  -  -  -  	;call write_a_to_ram 
   82 D1:AF3F 7E -  -  -  	ld a,(hl)
   83 D1:AF40 -  -  -  -  	;call write_a_to_ram
   84 D1:AF40 -  -  -  -  	
   85 D1:AF40 37 -  -  -  	scf 
   86 D1:AF41 -  -  -  -  sdcomp_end_of_line_alp .equ $
   87 D1:AF41 DA 4E AF D1 	jp c, sdcomp_end_of_line_alp_skip
   88 D1:AF45 -  -  -  -  
   89 D1:AF45 -  -  -  -  	;ld a,$A3
   90 D1:AF45 -  -  -  -  	;call write_a_to_ram 
   91 D1:AF45 -  -  -  -  	
   92 D1:AF45 3E D2 -  -  	ld a, %11010010 ;jp nc 
   93 D1:AF47 32 B1 AF D1 	ld (sdcomp_end_vitrual_zero_read),a 
   94 D1:AF4B -  -  -  -  	
   95 D1:AF4B 3E 00 -  -  	ld a,0
   96 D1:AF4D C9 -  -  -  	ret ;returns virtual 0, outside of data range 
   97 D1:AF4E -  -  -  -  
   98 D1:AF4E -  -  -  -  sdcomp_end_of_line_alp_skip:
   99 D1:AF4E -  -  -  -  	
  100 D1:AF4E -  -  -  -  	
  101 D1:AF4E -  -  -  -  	
  102 D1:AF4E -  -  -  -  ;MUST BE RESET EVERY ROW
  103 D1:AF4E 37 -  -  -  	scf
  104 D1:AF4F -  -  -  -  sdcomp_bit_offset .equ $ ;jp nc for offset
  105 D1:AF4F DA 5C AF D1 	jp c,sdcomp_bit_offset_skip
  106 D1:AF53 3E DA -  -  	ld a,%11011010;jp c 
  107 D1:AF55 32 4F AF D1 	ld (sdcomp_bit_offset),a
  108 D1:AF59 -  -  -  -  	;ld a,$A9
  109 D1:AF59 -  -  -  -  	;call write_a_to_ram
  110 D1:AF59 3E 00 -  -  	ld a,0
  111 D1:AF5B C9 -  -  -  	ret ;return 0 first bit
  112 D1:AF5C -  -  -  -  sdcomp_bit_offset_skip:;skip bit offset
  113 D1:AF5C -  -  -  -  		
  114 D1:AF5C -  -  -  -  	;ld a,$EF
  115 D1:AF5C -  -  -  -  	;call write_a_to_ram
  116 D1:AF5C 7E -  -  -  	ld a,(hl)
  117 D1:AF5D -  -  -  -  	;push af 
  118 D1:AF5D -  -  -  -  	;call write_a_to_ram
  119 D1:AF5D -  -  -  -  	;ld a,c
  120 D1:AF5D -  -  -  -  	;call write_a_to_ram
  121 D1:AF5D -  -  -  -  	;pop af 
  122 D1:AF5D -  -  -  -  	
  123 D1:AF5D -  -  -  -  	
  124 D1:AF5D A1 -  -  -  	and c 
  125 D1:AF5E CD 39 AF D1 	call sdcomp_next_in_bitstream;incs bitstream
  126 D1:AF62 -  -  -  -  	;a holds data to return
  127 D1:AF62 -  -  -  -  	;call write_a_to_ram
  128 D1:AF62 37 -  -  -  	scf 
  129 D1:AF63 -  -  -  -  sdcomp_no_alpha_1 .equ $;Load a with 1 if no alpha
  130 D1:AF63 DA 69 AF D1 	jp c,sdcomp_no_alpha_1_skip
  131 D1:AF67 3E 01 -  -  	ld a,1
  132 D1:AF69 -  -  -  -  sdcomp_no_alpha_1_skip:
  133 D1:AF69 -  -  -  -  	
  134 D1:AF69 -  -  -  -  	
  135 D1:AF69 08 -  -  -  	ex af,af' ;';into shadow
  136 D1:AF6A 3D -  -  -  	dec a 
  137 D1:AF6B -  -  -  -  	;call write_a_to_ram
  138 D1:AF6B C2 97 AF D1 	jp nz, sdcomp_end_of_line_skip
  139 D1:AF6F -  -  -  -  	
  140 D1:AF6F -  -  -  -  	;HAve read last bit in line  
  141 D1:AF6F -  -  -  -  	
  142 D1:AF6F -  -  -  -  	;ld a,$AC;Test
  143 D1:AF6F -  -  -  -  	;call write_a_to_ram;Test
  144 D1:AF6F -  -  -  -  	;Decrement lines remaining in sprite
  145 D1:AF6F -  -  -  -  sdcomp_lines_remaining .equ $ + 1
  146 D1:AF6F 3E 00 -  -  	ld a,0
  147 D1:AF71 3D -  -  -  	dec a 
  148 D1:AF72 32 70 AF D1 	ld (sdcomp_lines_remaining),a
  149 D1:AF76 -  -  -  -  	;call write_a_to_ram
  150 D1:AF76 C2 80 AF D1 	jp nz,sdcomp_set_end_flag_skip
  151 D1:AF7A -  -  -  -  	;end of last line reached 
  152 D1:AF7A 3E DA -  -  	ld a,%11011010;jp c
  153 D1:AF7C 32 F6 B1 D1 	ld (sdcomp_end_reached_flag) , a ;set end reached flag to indicate sprite is done decompressing TODO 
  154 D1:AF80 -  -  -  -  	;ld a,$E9
  155 D1:AF80 -  -  -  -  	;call write_a_to_ram;TEST 
  156 D1:AF80 -  -  -  -  sdcomp_set_end_flag_skip:
  157 D1:AF80 -  -  -  -  	
  158 D1:AF80 -  -  -  -  
  159 D1:AF80 -  -  -  -  	
  160 D1:AF80 3E D2 -  -  	ld a, %11010010 ;jp nc 
  161 D1:AF82 32 D1 B1 D1 	ld (sdcomp_end_of_line_gaplength),a
  162 D1:AF86 32 41 AF D1 	ld (sdcomp_end_of_line_alp),a
  163 D1:AF8A -  -  -  -  	;ld (sdcomp_write_loops_per_line_flag),a 
  164 D1:AF8A 37 -  -  -  	scf ;Set offset bit for next line
  165 D1:AF8B -  -  -  -  sdcomp_offset_1 .equ $
  166 D1:AF8B DA 95 AF D1 	jp c,sdcomp_offset_1_skip
  167 D1:AF8F 3E D2 -  -  	ld a, %11010010 ;jp nc 
  168 D1:AF91 32 4F AF D1 	ld (sdcomp_bit_offset),a
  169 D1:AF95 -  -  -  -  sdcomp_offset_1_skip:
  170 D1:AF95 -  -  -  -  	
  171 D1:AF95 -  -  -  -  sdcomp_sprite_width_2 .equ $+1
  172 D1:AF95 3E 00 -  -  	ld a,0 ;Return sprite width to a'
  173 D1:AF97 -  -  -  -  	
  174 D1:AF97 -  -  -  -  	;call write_a_to_ram
  175 D1:AF97 -  -  -  -  	
  176 D1:AF97 -  -  -  -  sdcomp_end_of_line_skip:
  177 D1:AF97 08 -  -  -  	ex af,af' ;' ;out
  178 D1:AF98 -  -  -  -  	
  179 D1:AF98 -  -  -  -  	;push af ;testing
  180 D1:AF98 -  -  -  -  	;ld a,$A0
  181 D1:AF98 -  -  -  -  	;call write_a_to_ram
  182 D1:AF98 -  -  -  -  	;pop af 
  183 D1:AF98 -  -  -  -  	;call write_a_to_ram
  184 D1:AF98 -  -  -  -  	
  185 D1:AF98 C9 -  -  -  	ret 
  186 D1:AF99 -  -  -  -  	
  187 D1:AF99 -  -  -  -  
  188 D1:AF99 -  -  -  -  
  189 D1:AF99 -  -  -  -  ;in shadow,returns a $FF,$0F,$F0,$00
  190 D1:AF99 -  -  -  -  sdcomp_get_next_alpha_pair:
  191 D1:AF99 -  -  -  -  	;ld a,$A1
  192 D1:AF99 -  -  -  -  	;call write_a_to_ram
  193 D1:AF99 -  -  -  -  	
  194 D1:AF99 -  -  -  -  	;ld a,c ;test
  195 D1:AF99 -  -  -  -  	;call write_a_to_ram 
  196 D1:AF99 -  -  -  -  	;ld a,(hl) ;test
  197 D1:AF99 -  -  -  -  	;call write_a_to_ram
  198 D1:AF99 -  -  -  -  	
  199 D1:AF99 3E DA -  -  	ld a,%11011010;jp c 
  200 D1:AF9B 32 B1 AF D1 	ld(sdcomp_end_vitrual_zero_read),a ;reset vitrual zero read flag
  201 D1:AF9F -  -  -  -  	
  202 D1:AF9F CD 3E AF D1 	call sdcomp_get_next_alpha
  203 D1:AFA3 B7 -  -  -  	or a 
  204 D1:AFA4 CA AE AF D1 	jp z,sdcomp_get_next_alpha_pair0
  205 D1:AFA8 3E F0 -  -  	ld a,$F0;FIRST BIT WAS 1
  206 D1:AFAA -  -  -  -  	;call write_a_to_ram
  207 D1:AFAA C3 BD AF D1 	jp sdcomp_get_next_alpha_pair1
  208 D1:AFAE -  -  -  -  sdcomp_get_next_alpha_pair0:
  209 D1:AFAE 3E 00 -  -  	ld a,0
  210 D1:AFB0 -  -  -  -  	
  211 D1:AFB0 37 -  -  -  	scf 
  212 D1:AFB1 -  -  -  -  sdcomp_end_vitrual_zero_read .equ $
  213 D1:AFB1 DA BD AF D1 	jp c,sdcomp_get_next_alpha_pair1
  214 D1:AFB5 F5 -  -  -  	push af 
  215 D1:AFB6 -  -  -  -  	;This gets triggered when we have read a vitrual 0 (outside of line) as the first bit in an alpha pair 
  216 D1:AFB6 -  -  -  -  	
  217 D1:AFB6 3E 3D -  -  	ld a,%00111101 ;dec a 
  218 D1:AFB8 32 D8 B1 D1 	ld (sdcomp_dec_gap_btwn_rows),a 
  219 D1:AFBC -  -  -  -  	;We should subtract 1 from the next interline gap length whenever a virtual 00 is read.
  220 D1:AFBC -  -  -  -  	;ld a,$A4
  221 D1:AFBC -  -  -  -  	;call write_a_to_ram
  222 D1:AFBC F1 -  -  -  	pop af 
  223 D1:AFBD -  -  -  -  	
  224 D1:AFBD -  -  -  -  sdcomp_get_next_alpha_pair1:
  225 D1:AFBD -  -  -  -  
  226 D1:AFBD -  -  -  -  	
  227 D1:AFBD 32 D3 AF D1 	ld (sdcomp_get_next_alpha_pair_or),a 
  228 D1:AFC1 -  -  -  -  	
  229 D1:AFC1 CD 3E AF D1 	call sdcomp_get_next_alpha
  230 D1:AFC5 B7 -  -  -  	or a 
  231 D1:AFC6 CA D0 AF D1 	jp z,sdcomp_get_next_alpha_pair2
  232 D1:AFCA 3E 0F -  -  	ld a,$0F;SECOND BIT WAS 1
  233 D1:AFCC C3 D2 AF D1 	jp sdcomp_get_next_alpha_pair3
  234 D1:AFD0 -  -  -  -  sdcomp_get_next_alpha_pair2:
  235 D1:AFD0 3E 00 -  -  	ld a,0;SECOND BIT WAS 0
  236 D1:AFD2 -  -  -  -  sdcomp_get_next_alpha_pair3:	
  237 D1:AFD2 -  -  -  -  sdcomp_get_next_alpha_pair_or .equ $ + 1
  238 D1:AFD2 F6 00 -  -  	or 0;OR WITH FIRST BIT 
  239 D1:AFD4 -  -  -  -  	
  240 D1:AFD4 C9 -  -  -  	ret 
  241 D1:AFD5 -  -  -  -  	
  242 D1:AFD5 -  -  -  -  ;COLOR HELPER FUNCS =================================================================================================
  243 D1:AFD5 -  -  -  -  
  244 D1:AFD5 -  -  -  -  ;not in shadow, returns a = color0000
  245 D1:AFD5 -  -  -  -  sdcomp_get_next_color_leading_nibble:
  246 D1:AFD5 CD DE AF D1 	call sdcomp_get_next_color
  247 D1:AFD9 0F -  -  -  	rrca 
  248 D1:AFDA 0F -  -  -  	rrca 
  249 D1:AFDB 0F -  -  -  	rrca 
  250 D1:AFDC 0F -  -  -  	rrca
  251 D1:AFDD C9 -  -  -  	ret 
  252 D1:AFDE -  -  -  -  
  253 D1:AFDE -  -  -  -  
  254 D1:AFDE -  -  -  -  
  255 D1:AFDE -  -  -  -  ;bit orders
  256 D1:AFDE -  -  -  -  ;	noflip   flip 
  257 D1:AFDE -  -  -  -  ;4bpp 3210 	 0123
  258 D1:AFDE -  -  -  -  ;3bpp 210	 012
  259 D1:AFDE -  -  -  -  ;2bpp 10	 01
  260 D1:AFDE -  -  -  -  ;1bpp 0		 0
  261 D1:AFDE -  -  -  -  
  262 D1:AFDE -  -  -  -  ;not in shadow, returns a = 0000color
  263 D1:AFDE -  -  -  -  sdcomp_get_next_color:
  264 D1:AFDE D5 -  -  -  	push de ;save data write location
  265 D1:AFDF 1E 00 -  -  	ld e,0;E will store the final color data
  266 D1:AFE1 -  -  -  -  	
  267 D1:AFE1 37 -  -  -  	scf
  268 D1:AFE2 -  -  -  -  sdcomp_0bpc .equ $ ;if sprite is 0bpc, skip reading bitstream, set to jp c 
  269 D1:AFE2 D2 2C B0 D1 	jp nc,sdcomp_get_color_from_index
  270 D1:AFE6 -  -  -  -  	
  271 D1:AFE6 -  -  -  -  	;ld a,$C1
  272 D1:AFE6 -  -  -  -  	;call write_a_to_ram
  273 D1:AFE6 -  -  -  -  	
  274 D1:AFE6 7E -  -  -  	ld a,(hl) ;read next bit 
  275 D1:AFE7 -  -  -  -  	;call write_a_to_ram ;TEST
  276 D1:AFE7 A1 -  -  -  	and c
  277 D1:AFE8 -  -  -  -  	;call write_a_to_ram ;TEST
  278 D1:AFE8 CD 39 AF D1 	call sdcomp_next_in_bitstream  ;inc bitstream 
  279 D1:AFEC B7 -  -  -  	or a
  280 D1:AFED CA F3 AF D1 	jp z,sdcomp_get_color_data_set_skip_1
  281 D1:AFF1 -  -  -  -  sdcomp_color_bit_0 .equ $ + 1 
  282 D1:AFF1 CB CB -  -  	set 1,e  ;set bit of e reg to color, 0 for flip, else depends on bpc 
  283 D1:AFF3 -  -  -  -  sdcomp_get_color_data_set_skip_1:
  284 D1:AFF3 -  -  -  -  	
  285 D1:AFF3 37 -  -  -  	scf
  286 D1:AFF4 -  -  -  -  sdcomp_1bpc .equ $
  287 D1:AFF4 D2 2C B0 D1 	jp nc,sdcomp_get_color_from_index ;if 1bpc jump to end 
  288 D1:AFF8 -  -  -  -  
  289 D1:AFF8 -  -  -  -  	;ld a,$C2
  290 D1:AFF8 -  -  -  -  	;call write_a_to_ram
  291 D1:AFF8 -  -  -  -  	
  292 D1:AFF8 7E -  -  -  	ld a,(hl)
  293 D1:AFF9 -  -  -  -  	;call write_a_to_ram ;TEST
  294 D1:AFF9 A1 -  -  -  	and c 
  295 D1:AFFA -  -  -  -  	;call write_a_to_ram ;TEST
  296 D1:AFFA CD 39 AF D1 	call sdcomp_next_in_bitstream
  297 D1:AFFE B7 -  -  -  	or a
  298 D1:AFFF CA 05 B0 D1 	jp z,sdcomp_get_color_data_set_skip_2
  299 D1:B003 -  -  -  -  sdcomp_color_bit_1 .equ $ + 1 	
  300 D1:B003 CB C3 -  -  	set 0,e ;store next bit of color data in e  
  301 D1:B005 -  -  -  -  sdcomp_get_color_data_set_skip_2:
  302 D1:B005 -  -  -  -  	
  303 D1:B005 37 -  -  -  	scf
  304 D1:B006 -  -  -  -  sdcomp_2bpc .equ $ ;if 2bpc jump to end
  305 D1:B006 D2 2C B0 D1 	jp nc,sdcomp_get_color_from_index
  306 D1:B00A -  -  -  -  	
  307 D1:B00A 7E -  -  -  	ld a,(hl)
  308 D1:B00B A1 -  -  -  	and c 
  309 D1:B00C CD 39 AF D1 	call sdcomp_next_in_bitstream
  310 D1:B010 B7 -  -  -  	or a
  311 D1:B011 CA 17 B0 D1 	jp z,sdcomp_get_color_data_set_skip_3
  312 D1:B015 -  -  -  -  sdcomp_color_bit_2 .equ $ + 1 
  313 D1:B015 CB D3 -  -  	set 2,e 
  314 D1:B017 -  -  -  -  sdcomp_get_color_data_set_skip_3:
  315 D1:B017 -  -  -  -  	
  316 D1:B017 37 -  -  -  	scf
  317 D1:B018 -  -  -  -  sdcomp_3bpc .equ $
  318 D1:B018 D2 2C B0 D1 	jp nc,sdcomp_get_color_from_index	
  319 D1:B01C -  -  -  -  
  320 D1:B01C -  -  -  -  ;4bpp, interpret as color data, not indexed	
  321 D1:B01C 7E -  -  -  	ld a,(hl)
  322 D1:B01D A1 -  -  -  	and c 
  323 D1:B01E CD 39 AF D1 	call sdcomp_next_in_bitstream
  324 D1:B022 B7 -  -  -  	or a
  325 D1:B023 CA 29 B0 D1 	jp z,sdcomp_get_color_data_set_skip_4
  326 D1:B027 -  -  -  -  sdcomp_color_bit_3 .equ $ + 1 
  327 D1:B027 CB DB -  -  	set 3,e 
  328 D1:B029 -  -  -  -  sdcomp_get_color_data_set_skip_4:
  329 D1:B029 -  -  -  -  ;4bpp, interpret as color data, not indexed
  330 D1:B029 7B -  -  -  	ld a,e 
  331 D1:B02A D1 -  -  -  	pop de 
  332 D1:B02B C9 -  -  -  	ret 
  333 D1:B02C -  -  -  -  
  334 D1:B02C -  -  -  -  sdcomp_get_color_from_index: ; e holds index of color data, 1-8
  335 D1:B02C -  -  -  -  	
  336 D1:B02C -  -  -  -  	;ld a,$DD
  337 D1:B02C -  -  -  -  	;call write_a_to_ram
  338 D1:B02C -  -  -  -  	;ld a,e 
  339 D1:B02C -  -  -  -  	;call write_a_to_ram
  340 D1:B02C -  -  -  -  	
  341 D1:B02C -  -  -  -  	
  342 D1:B02C CB 53 -  -  	bit 2,e 
  343 D1:B02E CA 50 B0 D1 	jp z, sdcomp_get_color_from_index_2l
  344 D1:B032 -  -  -  -  	
  345 D1:B032 -  -  -  -  	;Bit 2 = 1 
  346 D1:B032 CB 4B -  -  	bit 1,e 
  347 D1:B034 CA 44 B0 D1 	jp z,sdcomp_get_color_from_index_2h1l
  348 D1:B038 -  -  -  -  
  349 D1:B038 -  -  -  -  	;bit 2 = 1 1 = 1
  350 D1:B038 -  -  -  -  sdcomp_indexed_color_data_4 .equ $ + 1	
  351 D1:B038 3E 00 -  -  	ld a,0
  352 D1:B03A CB 43 -  -  	bit 0,e 
  353 D1:B03C CA 72 B0 D1 	jp z,sdcomp_get_color_from_index_msn
  354 D1:B040 C3 6E B0 D1 	jp sdcomp_get_color_from_index_lsn
  355 D1:B044 -  -  -  -  
  356 D1:B044 -  -  -  -  sdcomp_get_color_from_index_2h1l:
  357 D1:B044 -  -  -  -  	;2 = 1 1 = 0 
  358 D1:B044 -  -  -  -  sdcomp_indexed_color_data_3 .equ $ + 1	
  359 D1:B044 3E 00 -  -  	ld a,0
  360 D1:B046 CB 43 -  -  	bit 0,e 
  361 D1:B048 CA 72 B0 D1 	jp z,sdcomp_get_color_from_index_msn
  362 D1:B04C C3 6E B0 D1 	jp sdcomp_get_color_from_index_lsn
  363 D1:B050 -  -  -  -  	
  364 D1:B050 -  -  -  -  sdcomp_get_color_from_index_2l:
  365 D1:B050 -  -  -  -  	;bit 2 was 0 
  366 D1:B050 CB 4B -  -  	bit 1,e 
  367 D1:B052 CA 62 B0 D1 	jp z,sdcomp_get_color_from_index_2l1l
  368 D1:B056 -  -  -  -  	
  369 D1:B056 -  -  -  -  	;bit 2 = 0 1 = 1
  370 D1:B056 -  -  -  -  sdcomp_indexed_color_data_2 .equ $ + 1	
  371 D1:B056 3E 00 -  -  	ld a,0
  372 D1:B058 CB 43 -  -  	bit 0,e 
  373 D1:B05A CA 72 B0 D1 	jp z,sdcomp_get_color_from_index_msn
  374 D1:B05E C3 6E B0 D1 	jp sdcomp_get_color_from_index_lsn
  375 D1:B062 -  -  -  -  	
  376 D1:B062 -  -  -  -  sdcomp_get_color_from_index_2l1l:
  377 D1:B062 -  -  -  -  	;bit 2 =0  1 = 0
  378 D1:B062 -  -  -  -  sdcomp_indexed_color_data_1 .equ $ + 1	
  379 D1:B062 3E 00 -  -  	ld a,0
  380 D1:B064 -  -  -  -  	
  381 D1:B064 CB 43 -  -  	bit 0,e 
  382 D1:B066 CA 72 B0 D1 	jp z,sdcomp_get_color_from_index_msn
  383 D1:B06A C3 6E B0 D1 	jp sdcomp_get_color_from_index_lsn
  384 D1:B06E -  -  -  -  sdcomp_get_color_from_index_lsn:
  385 D1:B06E E6 0F -  -  	and %00001111;and with least significant nibble 
  386 D1:B070 D1 -  -  -  	pop de 
  387 D1:B071 -  -  -  -  	
  388 D1:B071 -  -  -  -  	;push af 
  389 D1:B071 -  -  -  -  	;ld a,$C0
  390 D1:B071 -  -  -  -  	;call write_a_to_ram
  391 D1:B071 -  -  -  -  	;pop af 
  392 D1:B071 -  -  -  -  	;call write_a_to_ram
  393 D1:B071 -  -  -  -  	
  394 D1:B071 C9 -  -  -  	ret 
  395 D1:B072 -  -  -  -  	
  396 D1:B072 -  -  -  -  sdcomp_get_color_from_index_msn:
  397 D1:B072 E6 F0 -  -  	and %11110000;and with most significant nibble 
  398 D1:B074 0F -  -  -  	rrca 
  399 D1:B075 0F -  -  -  	rrca 
  400 D1:B076 0F -  -  -  	rrca 
  401 D1:B077 0F -  -  -  	rrca 
  402 D1:B078 D1 -  -  -  	pop de 
  403 D1:B079 -  -  -  -  	
  404 D1:B079 -  -  -  -  	;push af 
  405 D1:B079 -  -  -  -  	;ld a,$C0
  406 D1:B079 -  -  -  -  	;call write_a_to_ram
  407 D1:B079 -  -  -  -  	;pop af 
  408 D1:B079 -  -  -  -  	;call write_a_to_ram
  409 D1:B079 -  -  -  -  	
  410 D1:B079 C9 -  -  -  	ret 
  411 D1:B07A -  -  -  -  
  412 D1:B07A -  -  -  -  
  413 D1:B07A -  -  -  -  
  414 D1:B07A -  -  -  -  ;function for traversing sprite data for reversed sprites.
  415 D1:B07A -  -  -  -  ;Reads forward through alpha and color data to end of line, so that it can then be read backwards 
  416 D1:B07A -  -  -  -  ;in shadow ,destroys a
  417 D1:B07A -  -  -  -  sdcomp_traverse_line_data:
  418 D1:B07A D9 -  -  -  	exx ;OUT 
  419 D1:B07B -  -  -  -  sdcomp_color_data_line_end_byte .equ $ + 1
  420 D1:B07B 21 00 00 00 	ld hl,0 ;load end of previous color data line 
  421 D1:B07F -  -  -  -  sdcomp_color_data_line_end_mask .equ $ + 1
  422 D1:B07F 0E 00 -  -  	ld c,0 ;load end of previous color data line
  423 D1:B081 D9 -  -  -  	exx;toshadow 
  424 D1:B082 -  -  -  -  	
  425 D1:B082 -  -  -  -  	;load end of previous alpha data line 
  426 D1:B082 -  -  -  -  sdcomp_alpha_data_line_end_byte .equ $ + 1
  427 D1:B082 21 00 00 00 	ld hl,0
  428 D1:B086 -  -  -  -  sdcomp_alpha_data_line_end_mask .equ $ + 1
  429 D1:B086 0E 00 -  -  	ld c,0
  430 D1:B088 -  -  -  -  sdcomp_traverse_initial:
  431 D1:B088 D5 -  -  -  	push de
  432 D1:B089 -  -  -  -  sdcomp_sprite_width .equ $ + 1
  433 D1:B089 1E 00 -  -  	ld e, 0
  434 D1:B08B -  -  -  -  	;e holds sprite width 
  435 D1:B08B -  -  -  -  	
  436 D1:B08B -  -  -  -  	;Read forward through alpha data and inc color pointer if alpha is 1 
  437 D1:B08B -  -  -  -  sdcomp_traverse_line_data_loop:
  438 D1:B08B CB 09 -  -  	rrc c 
  439 D1:B08D D2 92 B0 D1 	jp nc,sdcomp_traverse_line_data_alpha_inc_skip ;if not reached end of byte, skip
  440 D1:B091 23 -  -  -  	inc hl ;have reached end of alpha byte, inc hl 
  441 D1:B092 -  -  -  -  sdcomp_traverse_line_data_alpha_inc_skip:
  442 D1:B092 7E -  -  -  	ld a,(hl)
  443 D1:B093 A1 -  -  -  	and c ;read alpha data 
  444 D1:B094 -  -  -  -  sdcomp_no_alpha_3 .equ $ ;jp c for no alpha sprites to always inc color 
  445 D1:B094 CA AA B0 D1 	jp z,sdcomp_traverse_line_data_color_skip;if no alpha skip incrementing color. 
  446 D1:B098 D9 -  -  -  	exx;out of shadow 
  447 D1:B099 -  -  -  -  
  448 D1:B099 CB 09 -  -  	rrc c ;rotate mask
  449 D1:B09B -  -  -  -  sdcomp_traverse_2bpp .equ $ + 1
  450 D1:B09B CB 0F -  -  	rrc a ;replace with rrc c for 2bpc (not nop because rrc c is 2 byte operation)
  451 D1:B09D -  -  -  -  sdcomp_traverse_3bpp .equ $ + 1
  452 D1:B09D CB 0F -  -  	rrc a;rrc c for 3bpc
  453 D1:B09F -  -  -  -  sdcomp_traverse_4bpp .equ $ + 1
  454 D1:B09F CB 0F -  -  	rrc a;rrc c for 4 bpc 
  455 D1:B0A1 -  -  -  -  	
  456 D1:B0A1 -  -  -  -  	;check if end of byte was reached during rotations
  457 D1:B0A1 79 -  -  -  	ld a,c
  458 D1:B0A2 -  -  -  -  sdcomp_traverse_bit_check .equ $ + 1
  459 D1:B0A2 E6 F0 -  -  	and %11110000 ; 4bpc = 11110000 3bpc = 11100000, 2bpc 11000000 1bpc 10000000 TODO 
  460 D1:B0A4 CA A9 B0 D1 	jp z,sdcomp_traverse_line_data_color_inc_skip
  461 D1:B0A8 23 -  -  -  	inc hl ;inc hl if end of byte was reached 
  462 D1:B0A9 -  -  -  -  sdcomp_traverse_line_data_color_inc_skip:
  463 D1:B0A9 D9 -  -  -  	exx ;toshadow
  464 D1:B0AA -  -  -  -  sdcomp_traverse_line_data_color_skip:
  465 D1:B0AA 1D -  -  -  	dec e ;e holds sprite width 
  466 D1:B0AB C2 8B B0 D1 	jp nz,sdcomp_traverse_line_data_loop ;loop until end of line reached 
  467 D1:B0AF D1 -  -  -  	pop de  ;back to write location 
  468 D1:B0B0 -  -  -  -  	;set new end of line pointers 
  469 D1:B0B0 -  -  -  -  	
  470 D1:B0B0 -  -  -  -  	;ld a,$BB 
  471 D1:B0B0 -  -  -  -  	;call write_a_to_ram 
  472 D1:B0B0 -  -  -  -  	;ld a,(hl) 
  473 D1:B0B0 -  -  -  -  	;call write_a_to_ram 
  474 D1:B0B0 -  -  -  -  	;ld a,c 
  475 D1:B0B0 -  -  -  -  	;call write_a_to_ram 
  476 D1:B0B0 -  -  -  -  	
  477 D1:B0B0 -  -  -  -  	
  478 D1:B0B0 22 83 B0 D1 	ld (sdcomp_alpha_data_line_end_byte),hl
  479 D1:B0B4 79 -  -  -  	ld a,c
  480 D1:B0B5 32 87 B0 D1 	ld (sdcomp_alpha_data_line_end_mask),a
  481 D1:B0B9 D9 -  -  -  	exx ;out
  482 D1:B0BA 22 7C B0 D1 	ld (sdcomp_color_data_line_end_byte),hl
  483 D1:B0BE 79 -  -  -  	ld a,c 
  484 D1:B0BF 32 80 B0 D1 	ld (sdcomp_color_data_line_end_mask),a
  485 D1:B0C3 -  -  -  -  	
  486 D1:B0C3 -  -  -  -  	;ld a,(hl) 
  487 D1:B0C3 -  -  -  -  	;call write_a_to_ram 
  488 D1:B0C3 -  -  -  -  	;ld a,c 
  489 D1:B0C3 -  -  -  -  	;call write_a_to_ram 
  490 D1:B0C3 -  -  -  -  	
  491 D1:B0C3 D9 -  -  -  	exx;to shadow 
  492 D1:B0C4 C9 -  -  -  	ret
  493 D1:B0C5 -  -  -  -  
  494 D1:B0C5 -  -  -  -  
  495 D1:B0C5 -  -  -  -  
  496 D1:B0C5 -  -  -  -  
  497 D1:B0C5 -  -  -  -  
  498 D1:B0C5 -  -  -  -  ;hl/c is color data, de is ldir write pos, b' is ldir length, not in shadow 
  499 D1:B0C5 -  -  -  -  sdcomp_write_ldir_data_loop:
  500 D1:B0C5 CD DE AF D1 	call sdcomp_get_next_color
  501 D1:B0C9 47 -  -  -  	ld b,a;first pixel
  502 D1:B0CA CD D5 AF D1 	call sdcomp_get_next_color_leading_nibble
  503 D1:B0CE B0 -  -  -  	or b
  504 D1:B0CF -  -  -  -  	
  505 D1:B0CF -  -  -  -  	
  506 D1:B0CF 12 -  -  -  	ld (de),a;write color data
  507 D1:B0D0 13 -  -  -  	inc de
  508 D1:B0D1 D9 -  -  -  	exx;to shadow
  509 D1:B0D2 05 -  -  -  	dec b;ldir length counter
  510 D1:B0D3 D9 -  -  -  	exx
  511 D1:B0D4 C2 C5 B0 D1 	jp nz,sdcomp_write_ldir_data_loop
  512 D1:B0D8 C9 -  -  -  	ret
  513 D1:B0D9 -  -  -  -  	
  514 D1:B0D9 -  -  -  -  
  515 D1:B0D9 -  -  -  -  ;Not in shadow, a holds alpha data pair, writes color and mask data to output 
  516 D1:B0D9 -  -  -  -  sdcomp_write_leading_or_end_pixels:
  517 D1:B0D9 D5 -  -  -  	push de ;output location	
  518 D1:B0DA 47 -  -  -  	ld b,a;save for later
  519 D1:B0DB CB 67 -  -  	bit 4,a ;check if first pixel has color 
  520 D1:B0DD 3E 00 -  -  	ld a,0
  521 D1:B0DF 16 FF -  -  	ld d,%11111111;pixel data mask assuming no colors 
  522 D1:B0E1 CA EB B0 D1 	jp z,sdcomp_leading_pixel_first_skip
  523 D1:B0E5 -  -  -  -  	;has first color
  524 D1:B0E5 16 F0 -  -  	ld d,%11110000;save second pixel of bg 
  525 D1:B0E7 CD DE AF D1 	call sdcomp_get_next_color
  526 D1:B0EB -  -  -  -  sdcomp_leading_pixel_first_skip:
  527 D1:B0EB -  -  -  -  	;a is either $00 or $0color1
  528 D1:B0EB -  -  -  -  	
  529 D1:B0EB 1E FF -  -  	ld e,%11111111;assuming no colors
  530 D1:B0ED -  -  -  -  	
  531 D1:B0ED CB 40 -  -  	bit 0,b;check second pixel alpha
  532 D1:B0EF 47 -  -  -  	ld b,a;save for later 
  533 D1:B0F0 3E 00 -  -  	ld a,0
  534 D1:B0F2 CA FC B0 D1 	jp z,sdcomp_leading_pixel_second_skip;
  535 D1:B0F6 -  -  -  -  	;has second color 
  536 D1:B0F6 CD D5 AF D1 	call sdcomp_get_next_color_leading_nibble
  537 D1:B0FA -  -  -  -  	;a = color2 0 
  538 D1:B0FA 1E 0F -  -  	ld e,%00001111;save first pixel of bg
  539 D1:B0FC -  -  -  -  	
  540 D1:B0FC -  -  -  -  sdcomp_leading_pixel_second_skip:
  541 D1:B0FC -  -  -  -  	;a is either 00 or c2 0 
  542 D1:B0FC -  -  -  -  	;b is either 00 or 0 c1 
  543 D1:B0FC B0 -  -  -  	or b 
  544 D1:B0FD 47 -  -  -  	ld b,a;final color data
  545 D1:B0FE 7A -  -  -  	ld a,d 
  546 D1:B0FF A3 -  -  -  	and e ;final mask data 
  547 D1:B100 -  -  -  -  	
  548 D1:B100 D1 -  -  -  	pop de;return to pointer 
  549 D1:B101 -  -  -  -  	
  550 D1:B101 12 -  -  -  	ld (de),a;write mask data 
  551 D1:B102 13 -  -  -  	inc de 
  552 D1:B103 78 -  -  -  	ld a,b;color data 
  553 D1:B104 12 -  -  -  	ld (de),a;write color data 
  554 D1:B105 -  -  -  -  	
  555 D1:B105 -  -  -  -  	
  556 D1:B105 -  -  -  -  	
  557 D1:B105 -  -  -  -  	;call write_a_to_ram
  558 D1:B105 -  -  -  -  	
  559 D1:B105 13 -  -  -  	inc de 
  560 D1:B106 C9 -  -  -  	ret 
  561 D1:B107 -  -  -  -  
  562 D1:B107 -  -  -  -  
  563 D1:B107 -  -  -  -  
  564 D1:B107 -  -  -  -  ;ENTRY POINT 
  565 D1:B107 -  -  -  -  
  566 D1:B107 -  -  -  -  
  567 D1:B107 -  -  -  -  ;hl = sprite data start, de = main data decompress location
  568 D1:B107 -  -  -  -  sprite_decompress:
  569 D1:B107 -  -  -  -  
  570 D1:B107 -  -  -  -  
  571 D1:B107 -  -  -  -  	;SETUP ===========================================================================================================
  572 D1:B107 -  -  -  -  
  573 D1:B107 -  -  -  -  	;SET UP BPC MODE AND ALPHA/NOALPHA
  574 D1:B107 -  -  -  -  
  575 D1:B107 -  -  -  -  	;HL pointing to flags registers
  576 D1:B107 -  -  -  -  	;TODO set up bpc and alpha modes, Sprite type and offset. Write conditional jumps where needed
  577 D1:B107 -  -  -  -  	;set bpc mode 
  578 D1:B107 CB 7E -  -  	bit 7,(hl)
  579 D1:B109 C4 D7 B3 D1 	call nz,sdcomp_set_4bpc
  580 D1:B10D CB 76 -  -  	bit 6,(hl)
  581 D1:B10F C4 74 B3 D1 	call nz,sdcomp_set_3bpc 
  582 D1:B113 CB 6E -  -  	bit 5,(hl)
  583 D1:B115 C4 21 B3 D1 	call nz,sdcomp_set_2bpc 
  584 D1:B119 CB 66 -  -  	bit 4,(hl)
  585 D1:B11B C4 EC B2 D1 	call nz,sdcomp_set_1bpc 
  586 D1:B11F CB 5E -  -  	bit 3,(hl)
  587 D1:B121 C4 D1 B2 D1 	call nz,sdcomp_set_0bpc 
  588 D1:B125 CB 56 -  -  	bit 2,(hl)
  589 D1:B127 C4 3E B4 D1 	call nz,sdcomp_set_noalpha
  590 D1:B12B CB 56 -  -  	bit 2,(hl)
  591 D1:B12D CC 4F B4 D1 	call z,sdcomp_reset_noalpha
  592 D1:B131 -  -  -  -  	
  593 D1:B131 -  -  -  -  	
  594 D1:B131 3E 00 -  -  	ld a,0
  595 D1:B133 32 5F B2 D1 	ld (sdcomp_loops_per_line_counter),a ;reset loops counter
  596 D1:B137 3E DA -  -  	ld a,%11011010;jp c 
  597 D1:B139 32 B1 AF D1 	ld(sdcomp_end_vitrual_zero_read),a ;reset vitrual zero read flag
  598 D1:B13D -  -  -  -  	;write height or width(BG) data to decompressed sprite 
  599 D1:B13D -  -  -  -  	
  600 D1:B13D 23 -  -  -  	inc hl ;hl points to width in px 
  601 D1:B13E -  -  -  -  	
  602 D1:B13E -  -  -  -  	
  603 D1:B13E 7E -  -  -  	ld a,(hl) 
  604 D1:B13F 32 8A B0 D1 	ld (sdcomp_sprite_width),a ;TODO set width in required locations
  605 D1:B143 32 96 AF D1 	ld (sdcomp_sprite_width_2),a
  606 D1:B147 47 -  -  -  	ld b,a;width
  607 D1:B148 08 -  -  -  	ex af,af' ;'
  608 D1:B149 78 -  -  -  	ld a,b;Number of alpha bits remaining in row
  609 D1:B14A 08 -  -  -  	ex af,af' ;' 
  610 D1:B14B -  -  -  -  
  611 D1:B14B -  -  -  -  
  612 D1:B14B -  -  -  -  sdcomp_offset_2 .equ $ 
  613 D1:B14B 00 -  -  -  	nop ;replace with inc b for offset 
  614 D1:B14C -  -  -  -  
  615 D1:B14C -  -  -  -  	;Calculate number of bytes to skip between rows for gap length  
  616 D1:B14C 04 -  -  -  	inc b ;round up on odd sprites
  617 D1:B14D CB 38 -  -  	srl b;divide by 2
  618 D1:B14F -  -  -  -  	
  619 D1:B14F -  -  -  -  	
  620 D1:B14F 3E A0 -  -  	ld a,160
  621 D1:B151 90 -  -  -  	sub b ;a holds 160 - (width in pairs)
  622 D1:B152 32 D6 B1 D1 	ld (sdcomp_gap_btwn_rows),a 
  623 D1:B156 -  -  -  -  	
  624 D1:B156 -  -  -  -  	;call write_a_to_ram
  625 D1:B156 -  -  -  -  	;ld a,$BE
  626 D1:B156 -  -  -  -  	;call write_a_to_ram
  627 D1:B156 -  -  -  -  	;ld a,b 
  628 D1:B156 -  -  -  -  	;call write_a_to_ram
  629 D1:B156 -  -  -  -  	
  630 D1:B156 -  -  -  -  	
  631 D1:B156 7E -  -  -  	ld a,(hl);load width again
  632 D1:B157 -  -  -  -  	
  633 D1:B157 47 -  -  -  	ld b,a 
  634 D1:B158 -  -  -  -  	
  635 D1:B158 -  -  -  -  
  636 D1:B158 23 -  -  -  	inc hl ;hl points to height 
  637 D1:B159 7E -  -  -  	ld a,(hl);height
  638 D1:B15A 32 70 AF D1 	ld (sdcomp_lines_remaining),a ;write height to lines remaining counter
  639 D1:B15E -  -  -  -  	
  640 D1:B15E -  -  -  -  	
  641 D1:B15E -  -  -  -  
  642 D1:B15E 12 -  -  -  	ld (de), a ;write height to first byte of sprite data 
  643 D1:B15F 13 -  -  -  	inc de 
  644 D1:B160 -  -  -  -  	
  645 D1:B160 23 -  -  -  	inc hl ;HL points to start of alpha data 
  646 D1:B161 -  -  -  -  
  647 D1:B161 E5 -  -  -  	push hl ;Save alpha data 
  648 D1:B162 -  -  -  -  	
  649 D1:B162 -  -  -  -  	
  650 D1:B162 -  -  -  -  	;Need to find start of color data
  651 D1:B162 -  -  -  -  	;at this point a = height, b = width 
  652 D1:B162 -  -  -  -  	
  653 D1:B162 37 -  -  -  	scf
  654 D1:B163 -  -  -  -  	
  655 D1:B163 -  -  -  -  sdcomp_no_alpha_2 .equ $
  656 D1:B163 D2 7C B1 D1 	jp nc,sdcomp_no_alpha_2_skip ; if no alpha skip this part
  657 D1:B167 -  -  -  -  	
  658 D1:B167 -  -  -  -  	;need to find number of pixels, div by 8 and skip that many bytes
  659 D1:B167 -  -  -  -  	
  660 D1:B167 E5 -  -  -  	push hl
  661 D1:B168 67 -  -  -  	ld h,a;height
  662 D1:B169 68 -  -  -  	ld l,b;width
  663 D1:B16A ED 6C -  -  	mlt hl;number of pixels
  664 D1:B16C -  -  -  -  	;rounds up to nearest multiple of 8
  665 D1:B16C 2B -  -  -  	dec hl
  666 D1:B16D CB 3C -  -  	srl h
  667 D1:B16F CB 1D -  -  	rr l
  668 D1:B171 CB 3C -  -  	srl h
  669 D1:B173 CB 1D -  -  	rr l 
  670 D1:B175 CB 3C -  -  	srl h 
  671 D1:B177 CB 1D -  -  	rr l 
  672 D1:B179 23 -  -  -  	inc hl 
  673 D1:B17A C1 -  -  -  	pop bc ;initial hl location
  674 D1:B17B -  -  -  -  	;add number of bytes to skip 
  675 D1:B17B 09 -  -  -  	add hl,bc ;HL points to start of color data 
  676 D1:B17C -  -  -  -  	
  677 D1:B17C -  -  -  -  	
  678 D1:B17C -  -  -  -  	
  679 D1:B17C -  -  -  -  sdcomp_no_alpha_2_skip:
  680 D1:B17C -  -  -  -  
  681 D1:B17C -  -  -  -  	
  682 D1:B17C -  -  -  -  	;HL POINTING TO COLOR PALETTE DATA
  683 D1:B17C -  -  -  -  
  684 D1:B17C -  -  -  -  	
  685 D1:B17C 47 -  -  -  	ld b,a ;save for after
  686 D1:B17D -  -  -  -  	;GET LOCAL PALETTE DATA
  687 D1:B17D -  -  -  -  	
  688 D1:B17D 37 -  -  -  	scf 
  689 D1:B17E -  -  -  -  sdcomp_1bpc_1 .equ $ 
  690 D1:B17E D2 88 B1 D1 	jp nc,sdcomp_1bpc_1_skip ;skip if not 1bpc or 2bpc or 3bpc
  691 D1:B182 -  -  -  -  	
  692 D1:B182 7E -  -  -  	ld a,(hl);color data 	
  693 D1:B183 32 63 B0 D1 	ld (sdcomp_indexed_color_data_1),a 
  694 D1:B187 23 -  -  -  	inc hl 
  695 D1:B188 -  -  -  -  	
  696 D1:B188 -  -  -  -  sdcomp_1bpc_1_skip:	
  697 D1:B188 -  -  -  -  
  698 D1:B188 -  -  -  -  
  699 D1:B188 37 -  -  -  	scf 
  700 D1:B189 -  -  -  -  sdcomp_2bpc_1 .equ $ 
  701 D1:B189 D2 93 B1 D1 	jp nc,sdcomp_2bpc_1_skip ;skip if not 2bpc or 3bpc
  702 D1:B18D -  -  -  -  	
  703 D1:B18D 7E -  -  -  	ld a,(hl);color data 
  704 D1:B18E 32 57 B0 D1 	ld (sdcomp_indexed_color_data_2),a 
  705 D1:B192 23 -  -  -  	inc hl 
  706 D1:B193 -  -  -  -  	
  707 D1:B193 -  -  -  -  sdcomp_2bpc_1_skip:	
  708 D1:B193 -  -  -  -  
  709 D1:B193 -  -  -  -  
  710 D1:B193 37 -  -  -  	scf 
  711 D1:B194 -  -  -  -  sdcomp_3bpc_1 .equ $ 
  712 D1:B194 DA A4 B1 D1 	jp c,sdcomp_3bpc_1_skip ;skip if not 3bpc
  713 D1:B198 -  -  -  -  	
  714 D1:B198 7E -  -  -  	ld a,(hl);color data 
  715 D1:B199 32 45 B0 D1 	ld (sdcomp_indexed_color_data_3),a 
  716 D1:B19D 23 -  -  -  	inc hl 
  717 D1:B19E 7E -  -  -  	ld a,(hl);color data 
  718 D1:B19F 32 39 B0 D1 	ld (sdcomp_indexed_color_data_4),a 
  719 D1:B1A3 23 -  -  -  	inc hl 
  720 D1:B1A4 -  -  -  -  	
  721 D1:B1A4 -  -  -  -  sdcomp_3bpc_1_skip:	
  722 D1:B1A4 -  -  -  -  
  723 D1:B1A4 -  -  -  -  	
  724 D1:B1A4 D5 -  -  -  	push de ;loops/line data location
  725 D1:B1A5 EB -  -  -  	ex de,hl
  726 D1:B1A6 78 -  -  -  	ld a,b
  727 D1:B1A7 01 00 00 00 	ld bc,0
  728 D1:B1AB 4F -  -  -  	ld c,a;height 
  729 D1:B1AC 09 -  -  -  	add hl,bc
  730 D1:B1AD EB -  -  -  	ex de,hl;de points to data write location
  731 D1:B1AE -  -  -  -  	
  732 D1:B1AE -  -  -  -  	
  733 D1:B1AE D9 -  -  -  	exx;in to shadow
  734 D1:B1AF D1 -  -  -  	pop de 
  735 D1:B1B0 E1 -  -  -  	pop hl ;alpha data stored from earlier
  736 D1:B1B1 0E 80 -  -  	ld c,%10000000;alpha mask
  737 D1:B1B3 D9 -  -  -  	exx;out 
  738 D1:B1B4 0E 80 -  -  	ld c,%10000000;color mask
  739 D1:B1B6 -  -  -  -  	
  740 D1:B1B6 -  -  -  -  	;HL now points to pixel color data 
  741 D1:B1B6 -  -  -  -  	;HL' points to pixel alpha data 
  742 D1:B1B6 -  -  -  -  	;C holds color mask
  743 D1:B1B6 -  -  -  -  	;C' holds alpha mask
  744 D1:B1B6 -  -  -  -  	;DE' holds loops/line output data location
  745 D1:B1B6 -  -  -  -  	;DE holds main data output location
  746 D1:B1B6 -  -  -  -  	;A holds height
  747 D1:B1B6 -  -  -  -  	;A' holds bits remaining in row
  748 D1:B1B6 -  -  -  -  
  749 D1:B1B6 -  -  -  -  
  750 D1:B1B6 37 -  -  -  	scf 
  751 D1:B1B7 -  -  -  -  sdcomp_flip_setup .equ $
  752 D1:B1B7 DA C7 B1 D1 	jp c,sdcomp_find_gap_length;continue if no flip
  753 D1:B1BB -  -  -  -  
  754 D1:B1BB -  -  -  -  	
  755 D1:B1BB 2B -  -  -  	dec hl;dec color pointer
  756 D1:B1BC 0E 01 -  -  	ld c, %00000001
  757 D1:B1BE D9 -  -  -  	exx;to shadow 
  758 D1:B1BF 2B -  -  -  	dec hl;dec alpha pointer
  759 D1:B1C0 0E 01 -  -  	ld c, %00000001;alpha mask
  760 D1:B1C2 CD 88 B0 D1 	call sdcomp_traverse_initial
  761 D1:B1C6 D9 -  -  -  	exx ;out of shadow 
  762 D1:B1C7 -  -  -  -  	
  763 D1:B1C7 -  -  -  -  	
  764 D1:B1C7 -  -  -  -  
  765 D1:B1C7 -  -  -  -  	;TODO jump to BG routine here
  766 D1:B1C7 -  -  -  -  	;END SETUP ======================================================================================================
  767 D1:B1C7 -  -  -  -  	
  768 D1:B1C7 -  -  -  -  	
  769 D1:B1C7 -  -  -  -  sdcomp_find_gap_length:
  770 D1:B1C7 -  -  -  -  	
  771 D1:B1C7 -  -  -  -  	
  772 D1:B1C7 -  -  -  -  	
  773 D1:B1C7 -  -  -  -  ;If virtual 0 was read as the start of an alpha pair, remove 1 from next gap length 
  774 D1:B1C7 -  -  -  -  ;this will occur if:
  775 D1:B1C7 -  -  -  -  ;Starting pixels are at the end of line, eg :00000001. ldir length = 0 as virtual 0s are read. interline length should be reduced by 1 
  776 D1:B1C7 -  -  -  -  ;
  777 D1:B1C7 -  -  -  -  ;if during ldir search, line data ends in 11, followed by virtual 00. In this case the 11 is the ending pixels if slow sprite, so gap length should not be reduced
  778 D1:B1C7 -  -  -  -  ; This is done from the addition of 1 gap length whenever the 11->00 case occurs, canceling the interline reduction due to reading vitrual 00. 
  779 D1:B1C7 -  -  -  -  	
  780 D1:B1C7 D9 -  -  -  	exx ;to shadow
  781 D1:B1C8 -  -  -  -  	
  782 D1:B1C8 -  -  -  -  sdcomp_add_1_gap_length .equ $ + 1
  783 D1:B1C8 06 00 -  -  	ld b,0;00 pairs found 
  784 D1:B1CA 3E 00 -  -  	ld a,0 ;reset
  785 D1:B1CC 32 C9 B1 D1 	ld (sdcomp_add_1_gap_length),a 
  786 D1:B1D0 -  -  -  -  
  787 D1:B1D0 -  -  -  -  sdcomp_find_gap_length_loop:
  788 D1:B1D0 -  -  -  -  
  789 D1:B1D0 37 -  -  -  	scf 
  790 D1:B1D1 -  -  -  -  sdcomp_end_of_line_gaplength .equ $ 
  791 D1:B1D1 DA FA B1 D1 	jp c, sdcomp_end_of_line_gaplength_skip
  792 D1:B1D5 -  -  -  -  	
  793 D1:B1D5 -  -  -  -  	;We have reached the end of the alpha data, add between line gap length 
  794 D1:B1D5 -  -  -  -  sdcomp_gap_btwn_rows .equ $ + 1
  795 D1:B1D5 3E 00 -  -  	ld a,0
  796 D1:B1D7 80 -  -  -  	add a,b 
  797 D1:B1D8 -  -  -  -  sdcomp_dec_gap_btwn_rows .equ $ 	
  798 D1:B1D8 00 -  -  -  	nop ;replace with dec a to decrease gap length 
  799 D1:B1D9 47 -  -  -  	ld b,a 
  800 D1:B1DA 3E 00 -  -  	ld a,%00000000 ;nop 
  801 D1:B1DC 32 D8 B1 D1 	ld (sdcomp_dec_gap_btwn_rows),a ;reset dec gap
  802 D1:B1E0 3E DA -  -  	ld a,%11011010;jp c
  803 D1:B1E2 32 41 AF D1 	ld (sdcomp_end_of_line_alp),a ;Reset virtual zero flag, reading alpha data will now be the next line 
  804 D1:B1E6 32 D1 B1 D1 	ld (sdcomp_end_of_line_gaplength),a ;Reset flag for adding interline gaplength 
  805 D1:B1EA -  -  -  -  	
  806 D1:B1EA 37 -  -  -  	scf
  807 D1:B1EB -  -  -  -  sdcomp_flip_traverse .equ $
  808 D1:B1EB D4 7A B0 D1 	call nc,sdcomp_traverse_line_data ;call line data traverse if flip
  809 D1:B1EF -  -  -  -  		
  810 D1:B1EF -  -  -  -  	;Write loops/line data as we have reached a gap btwn lines 
  811 D1:B1EF 3A 5F B2 D1 	ld a,(sdcomp_loops_per_line_counter)
  812 D1:B1F3 12 -  -  -  	ld (de),a ;write loops/line data 
  813 D1:B1F4 13 -  -  -  	inc de
  814 D1:B1F5 -  -  -  -  	
  815 D1:B1F5 -  -  -  -  	
  816 D1:B1F5 37 -  -  -  	scf 
  817 D1:B1F6 -  -  -  -  sdcomp_end_reached_flag .equ $;check if end of sprite reached
  818 D1:B1F6 D2 C8 B2 D1 	jp nc,sdcomp_end
  819 D1:B1FA -  -  -  -  
  820 D1:B1FA -  -  -  -  	
  821 D1:B1FA -  -  -  -  sdcomp_end_of_line_gaplength_skip:
  822 D1:B1FA CD 99 AF D1 	call sdcomp_get_next_alpha_pair
  823 D1:B1FE -  -  -  -  	;call write_a_to_ram
  824 D1:B1FE 04 -  -  -  	inc b 
  825 D1:B1FF -  -  -  -  
  826 D1:B1FF -  -  -  -  	;push af ;TEST
  827 D1:B1FF -  -  -  -  	;ld a,$AB;TEST
  828 D1:B1FF -  -  -  -  	;call write_a_to_ram
  829 D1:B1FF -  -  -  -  	
  830 D1:B1FF -  -  -  -  	;call write_a_to_ram
  831 D1:B1FF -  -  -  -  	;pop af ;TEST
  832 D1:B1FF -  -  -  -  	
  833 D1:B1FF B7 -  -  -  	or a
  834 D1:B200 CA D0 B1 D1 	jp z,sdcomp_find_gap_length_loop
  835 D1:B204 -  -  -  -  	
  836 D1:B204 -  -  -  -  ;END OF GAP LENGTH LOOP =====================	
  837 D1:B204 -  -  -  -  	
  838 D1:B204 F5 -  -  -  	push af; save leading pixel alpha data 
  839 D1:B205 -  -  -  -  	;B holds number of 00 pairs + 1
  840 D1:B205 -  -  -  -  	
  841 D1:B205 -  -  -  -  	;ld a,$AA ;test
  842 D1:B205 -  -  -  -  	;call write_a_to_ram
  843 D1:B205 -  -  -  -  	;ld a,b ;test
  844 D1:B205 -  -  -  -  	;call write_a_to_ram
  845 D1:B205 -  -  -  -  	
  846 D1:B205 -  -  -  -  	
  847 D1:B205 -  -  -  -  	
  848 D1:B205 -  -  -  -  	;Write gap length data to output
  849 D1:B205 78 -  -  -  	ld a,b 
  850 D1:B206 D9 -  -  -  	exx;out of shadow 
  851 D1:B207 12 -  -  -  	ld (de),a;GAP LENGTH 
  852 D1:B208 13 -  -  -  	inc de 
  853 D1:B209 D9 -  -  -  	exx;into shadow 	
  854 D1:B20A -  -  -  -  	
  855 D1:B20A -  -  -  -  	
  856 D1:B20A -  -  -  -  ;LEADING PIXELS ===================================================================================================
  857 D1:B20A F1 -  -  -  	pop af ;a holds leading pixel pair alpha data (FF,0F,F0)
  858 D1:B20B -  -  -  -  	
  859 D1:B20B 37 -  -  -  	scf 
  860 D1:B20C -  -  -  -  sdcomp_fast_1 .equ $ 
  861 D1:B20C D2 16 B2 D1 	jp nc, sdcomp_ldir_start 
  862 D1:B210 -  -  -  -  	
  863 D1:B210 D9 -  -  -  	exx;out of shadow
  864 D1:B211 CD D9 B0 D1 	call sdcomp_write_leading_or_end_pixels
  865 D1:B215 D9 -  -  -  	exx;into shadow 
  866 D1:B216 -  -  -  -  	
  867 D1:B216 -  -  -  -  
  868 D1:B216 -  -  -  -  	
  869 D1:B216 -  -  -  -  ;LDIR ==============================================================================================================	
  870 D1:B216 -  -  -  -  	;Count number of 11 pairs for LDIR section
  871 D1:B216 -  -  -  -  	;If end of line reached we know last pixels must be the ending pair
  872 D1:B216 -  -  -  -  	;
  873 D1:B216 -  -  -  -  	
  874 D1:B216 -  -  -  -  	;If ending is 11 -> 00 
  875 D1:B216 -  -  -  -  	;11 pair will need to become ending pixels if slow sprite
  876 D1:B216 -  -  -  -  	;Will need to reduce b by 1 
  877 D1:B216 -  -  -  -  	
  878 D1:B216 -  -  -  -  	;If ending is 11 ->01/10
  879 D1:B216 -  -  -  -  	;last pair wil become ending pixels, dont reduce b 
  880 D1:B216 -  -  -  -  	
  881 D1:B216 -  -  -  -  sdcomp_ldir_start:
  882 D1:B216 -  -  -  -  
  883 D1:B216 -  -  -  -  ;	ld a, %11010010 ;jp nc 
  884 D1:B216 -  -  -  -  ;	ld (sdcomp_end_of_line_2) , a ;reset end of line flag 
  885 D1:B216 -  -  -  -  
  886 D1:B216 06 00 -  -  	ld b,0; will hold number of 11 pairs found
  887 D1:B218 -  -  -  -  sdcomp_ldir_loop:
  888 D1:B218 CD 99 AF D1 	call sdcomp_get_next_alpha_pair ;get alpha data
  889 D1:B21C 04 -  -  -  	inc b 
  890 D1:B21D -  -  -  -  	
  891 D1:B21D -  -  -  -  	;push af 
  892 D1:B21D -  -  -  -  	;ld a,$DE 
  893 D1:B21D -  -  -  -  	;call write_a_to_ram
  894 D1:B21D -  -  -  -  	;pop af
  895 D1:B21D -  -  -  -  	;call write_a_to_ram
  896 D1:B21D -  -  -  -  	
  897 D1:B21D -  -  -  -  ;	scf 
  898 D1:B21D -  -  -  -  ;sdcomp_end_of_line_2 .equ $ ;set when end of line reached 
  899 D1:B21D -  -  -  -  ;	jp nc, sdcomp_ldir_loop_end;If read last in line
  900 D1:B21D -  -  -  -  	
  901 D1:B21D EE FF -  -  	xor %11111111 ;flip all bits  (CPL does not set flags :(  )
  902 D1:B21F CA 18 B2 D1 	jp z, sdcomp_ldir_loop; if a is 0 means a was $FF 
  903 D1:B223 2F -  -  -  	cpl ; flip back 
  904 D1:B224 -  -  -  -  sdcomp_ldir_loop_end:
  905 D1:B224 -  -  -  -  
  906 D1:B224 -  -  -  -  	
  907 D1:B224 -  -  -  -  	;at this point b holds # 11 pairs +1 
  908 D1:B224 37 -  -  -  	scf 
  909 D1:B225 -  -  -  -  sdcomp_fast_2 .equ $ 
  910 D1:B225 D2 40 B2 D1 	jp nc,sdcomp_ldir_write ;jump before dec b because we have read first 11 pair in searching for gaplength 
  911 D1:B229 -  -  -  -  
  912 D1:B229 -  -  -  -  	
  913 D1:B229 -  -  -  -  	
  914 D1:B229 05 -  -  -  	dec b ;b holds # 11 pairs 
  915 D1:B22A CA 53 B2 D1 	jp z,sdcomp_no_ldir;no pairs found,no ldir length
  916 D1:B22E B7 -  -  -  	or a
  917 D1:B22F C2 40 B2 D1 	jp nz,sdcomp_ldir_write;ends not in 00, has single ending pixel
  918 D1:B233 -  -  -  -  	
  919 D1:B233 -  -  -  -  	;ends in 11 -> 00,ending pixels will be 11 if slow sprite. If fast, jump to ldir write here 
  920 D1:B233 -  -  -  -  	
  921 D1:B233 -  -  -  -  	;ld a,$DF
  922 D1:B233 -  -  -  -  	;call write_a_to_ram
  923 D1:B233 -  -  -  -  	
  924 D1:B233 -  -  -  -  	;must add 1 to next gap length, have already read first 00
  925 D1:B233 -  -  -  -  	;for the case with virtual 00, this cancels the decrease in gap length 
  926 D1:B233 3E 01 -  -  	ld a,1;start w 1 gap len
  927 D1:B235 32 C9 B1 D1 	ld (sdcomp_add_1_gap_length),a 
  928 D1:B239 3E FF -  -  	ld a,$ff;ending pixels 11
  929 D1:B23B -  -  -  -  	
  930 D1:B23B 05 -  -  -  	dec b;reduce length by 1, final pair is end pixels
  931 D1:B23C CA 53 B2 D1 	jp z,sdcomp_no_ldir;no ldir length,ending pixels is 11 
  932 D1:B240 -  -  -  -  	;b holds ldir length 
  933 D1:B240 -  -  -  -  	
  934 D1:B240 -  -  -  -  
  935 D1:B240 -  -  -  -  ;b holds ldir length, a holds ending pixels
  936 D1:B240 -  -  -  -  sdcomp_ldir_write:
  937 D1:B240 -  -  -  -  
  938 D1:B240 -  -  -  -  	;b holds 11 pairs found 
  939 D1:B240 -  -  -  -  	
  940 D1:B240 -  -  -  -  	;push af;TEST
  941 D1:B240 -  -  -  -  	;ld a,$DA 
  942 D1:B240 -  -  -  -  	;call write_a_to_ram
  943 D1:B240 -  -  -  -  	;ld a,b 
  944 D1:B240 -  -  -  -  	;call write_a_to_ram
  945 D1:B240 -  -  -  -  	;pop af ;TEST
  946 D1:B240 -  -  -  -  
  947 D1:B240 F5 -  -  -  	push af;save ending pixels
  948 D1:B241 78 -  -  -  	ld a,b
  949 D1:B242 D9 -  -  -  	exx ;out 
  950 D1:B243 12 -  -  -  	ld (de),a;write ldir length
  951 D1:B244 13 -  -  -  	inc de 
  952 D1:B245 CD C5 B0 D1 	call sdcomp_write_ldir_data_loop
  953 D1:B249 -  -  -  -  
  954 D1:B249 F1 -  -  -  	pop af;return ending pixels
  955 D1:B24A -  -  -  -  	
  956 D1:B24A 37 -  -  -  	scf
  957 D1:B24B -  -  -  -  sdcomp_fast_3 .equ $ 
  958 D1:B24B D2 5E B2 D1 	jp nc,sdcomp_inc_loops_per_line ;skip ending pixels
  959 D1:B24F -  -  -  -  	
  960 D1:B24F C3 5A B2 D1 	jp sdcomp_write_end_pixels
  961 D1:B253 -  -  -  -  sdcomp_no_ldir:;no ldir length, a holds ending pixels,00,10,01,11
  962 D1:B253 -  -  -  -  
  963 D1:B253 -  -  -  -  
  964 D1:B253 -  -  -  -  	;push af ;TEST
  965 D1:B253 -  -  -  -  	;ld a,$DB
  966 D1:B253 -  -  -  -  	;call write_a_to_ram
  967 D1:B253 -  -  -  -  	;pop af ;TEST
  968 D1:B253 -  -  -  -  	;call write_a_to_ram
  969 D1:B253 -  -  -  -  
  970 D1:B253 F5 -  -  -  	push af;save end pixels
  971 D1:B254 -  -  -  -  	
  972 D1:B254 D9 -  -  -  	exx;out of shadow
  973 D1:B255 3E 00 -  -  	ld a,0
  974 D1:B257 12 -  -  -  	ld (de),a ;write 0 as ldir length
  975 D1:B258 13 -  -  -  	inc de 
  976 D1:B259 F1 -  -  -  	pop af;return ending pixels
  977 D1:B25A -  -  -  -  
  978 D1:B25A -  -  -  -  ;WRITE ENDING PIXELS ======================================================================================
  979 D1:B25A -  -  -  -  
  980 D1:B25A -  -  -  -  sdcomp_write_end_pixels:
  981 D1:B25A -  -  -  -  ;not in shadow
  982 D1:B25A -  -  -  -  	
  983 D1:B25A -  -  -  -  	;test
  984 D1:B25A -  -  -  -  	;push af 
  985 D1:B25A -  -  -  -  	;ld a,$E0
  986 D1:B25A -  -  -  -  	;call write_a_to_ram
  987 D1:B25A -  -  -  -  	;pop af 
  988 D1:B25A -  -  -  -  	
  989 D1:B25A -  -  -  -  
  990 D1:B25A CD D9 B0 D1 	call sdcomp_write_leading_or_end_pixels
  991 D1:B25E -  -  -  -  	
  992 D1:B25E -  -  -  -  	
  993 D1:B25E -  -  -  -  ;sdcomp_test_lines_stop .equ $ + 1 
  994 D1:B25E -  -  -  -  	;ld a,2
  995 D1:B25E -  -  -  -  	;dec a 
  996 D1:B25E -  -  -  -  	;jp z,sdcomp_end
  997 D1:B25E -  -  -  -  	;ld (sdcomp_test_lines_stop),a 
  998 D1:B25E -  -  -  -  
  999 D1:B25E -  -  -  -  sdcomp_inc_loops_per_line:	
 1000 D1:B25E -  -  -  -  	;INC LOOP/LINE count
 1001 D1:B25E -  -  -  -  sdcomp_loops_per_line_counter .equ $ + 1
 1002 D1:B25E 3E 00 -  -  	ld a,0;inc number of loops
 1003 D1:B260 3C -  -  -  	inc a 
 1004 D1:B261 32 5F B2 D1 	ld (sdcomp_loops_per_line_counter),a
 1005 D1:B265 -  -  -  -  
 1006 D1:B265 -  -  -  -  
 1007 D1:B265 -  -  -  -  	;jp sdcomp_find_gap_length ;TESTING REMOVE
 1008 D1:B265 -  -  -  -  	
 1009 D1:B265 -  -  -  -  	;Check the timer to see if we need to begin rendering next frame 
 1010 D1:B265 -  -  -  -  	;1090 cycles @ 32768hz ~= 1 frame (1/30s)
 1011 D1:B265 -  -  -  -  	;Should stop decompressions at 1000 cycles?
 1012 D1:B265 -  -  -  -  	; = %00000011, 11101000
 1013 D1:B265 -  -  -  -  sdcomp_clock_check_loop:
 1014 D1:B265 3A 01 00 F2 	ld a,($F20001);128hz clock
 1015 D1:B269 FE 03 -  -  	cp %00000011 ;check if reached 3 
 1016 D1:B26B DA C7 B1 D1 	jp c,sdcomp_find_gap_length ;msb <= 2, can continue  
 1017 D1:B26F 3A 00 00 F2 	ld a,($F20000);32768hz clock
 1018 D1:B273 FE E8 -  -  	cp %11101000;check if reached value 
 1019 D1:B275 DA C7 B1 D1 	jp c,sdcomp_find_gap_length ;msb = 3 and lsb < value, can continue
 1020 D1:B279 -  -  -  -  	
 1021 D1:B279 -  -  -  -  	;Past clock threshold, need to stop decompressions
 1022 D1:B279 -  -  -  -  
 1023 D1:B279 -  -  -  -  
 1024 D1:B279 -  -  -  -  	;TODO can prob not need to save (a) register
 1025 D1:B279 -  -  -  -  sdcomp_interrupt:
 1026 D1:B279 -  -  -  -  
 1027 D1:B279 -  -  -  -  
 1028 D1:B279 -  -  -  -  	;not in shadow 
 1029 D1:B279 22 A5 B2 D1 	ld (sdcomp_cont_hl),hl 
 1030 D1:B27D EB -  -  -  	ex de,hl
 1031 D1:B27E 22 A9 B2 D1 	ld (sdcomp_cont_de),hl 
 1032 D1:B282 C5 -  -  -  	push bc
 1033 D1:B283 E1 -  -  -  	pop hl
 1034 D1:B284 22 AD B2 D1 	ld (sdcomp_cont_bc),hl
 1035 D1:B288 32 B1 B2 D1 	ld (sdcomp_cont_a),a 
 1036 D1:B28C D9 -  -  -  	exx 
 1037 D1:B28D 08 -  -  -  	ex af,af' ;'
 1038 D1:B28E 22 B5 B2 D1 	ld (sdcomp_cont_hlP),hl 
 1039 D1:B292 EB -  -  -  	ex de,hl
 1040 D1:B293 22 B9 B2 D1 	ld (sdcomp_cont_deP),hl 
 1041 D1:B297 C5 -  -  -  	push bc 
 1042 D1:B298 E1 -  -  -  	pop hl
 1043 D1:B299 22 BD B2 D1 	ld (sdcomp_cont_bcP),hl
 1044 D1:B29D 32 C1 B2 D1 	ld (sdcomp_cont_aP),a 
 1045 D1:B2A1 -  -  -  -  	
 1046 D1:B2A1 -  -  -  -  	
 1047 D1:B2A1 -  -  -  -  	;ld a, $AA
 1048 D1:B2A1 -  -  -  -  	;call write_a_to_ram
 1049 D1:B2A1 -  -  -  -  	
 1050 D1:B2A1 3E 01 -  -  	ld a,1 ;Return 1 if interrupted
 1051 D1:B2A3 C9 -  -  -  	ret 
 1052 D1:B2A4 -  -  -  -  	
 1053 D1:B2A4 -  -  -  -  sdcomp_continue:
 1054 D1:B2A4 -  -  -  -  	;not in shadow 
 1055 D1:B2A4 -  -  -  -  sdcomp_cont_hl .equ $ + 1
 1056 D1:B2A4 21 00 00 00 	ld hl,0
 1057 D1:B2A8 -  -  -  -  sdcomp_cont_de .equ $ + 1
 1058 D1:B2A8 11 00 00 00 	ld de,0
 1059 D1:B2AC -  -  -  -  sdcomp_cont_bc .equ $ + 1
 1060 D1:B2AC 01 00 00 00 	ld bc,0
 1061 D1:B2B0 -  -  -  -  sdcomp_cont_a .equ $ + 1
 1062 D1:B2B0 3E 00 -  -  	ld a,0
 1063 D1:B2B2 D9 -  -  -  	exx 
 1064 D1:B2B3 08 -  -  -  	ex af,af' ;'
 1065 D1:B2B4 -  -  -  -  sdcomp_cont_hlP .equ $ + 1
 1066 D1:B2B4 21 00 00 00 	ld hl,0
 1067 D1:B2B8 -  -  -  -  sdcomp_cont_deP .equ $ + 1
 1068 D1:B2B8 11 00 00 00 	ld de,0
 1069 D1:B2BC -  -  -  -  sdcomp_cont_bcP .equ $ + 1
 1070 D1:B2BC 01 00 00 00 	ld bc,0
 1071 D1:B2C0 -  -  -  -  sdcomp_cont_aP .equ $ + 1
 1072 D1:B2C0 3E 00 -  -  	ld a,0	
 1073 D1:B2C2 -  -  -  -  	
 1074 D1:B2C2 D9 -  -  -  	exx ;out of shadow 
 1075 D1:B2C3 08 -  -  -  	ex af,af' ;'
 1076 D1:B2C4 -  -  -  -  
 1077 D1:B2C4 C3 C7 B1 D1 	jp sdcomp_find_gap_length
 1078 D1:B2C8 -  -  -  -  
 1079 D1:B2C8 -  -  -  -  	
 1080 D1:B2C8 -  -  -  -  
 1081 D1:B2C8 -  -  -  -  sdcomp_end:
 1082 D1:B2C8 -  -  -  -  	
 1083 D1:B2C8 -  -  -  -  	;ld a,$69
 1084 D1:B2C8 -  -  -  -  	;call write_a_to_ram
 1085 D1:B2C8 -  -  -  -  	
 1086 D1:B2C8 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1087 D1:B2CA 32 F6 B1 D1 	ld (sdcomp_end_reached_flag),a 
 1088 D1:B2CE -  -  -  -  	
 1089 D1:B2CE 3E 00 -  -  	ld a,0 ;return 0 if finished decompressing 
 1090 D1:B2D0 C9 -  -  -  	ret 
 1091 D1:B2D1 -  -  -  -  
 1092 D1:B2D1 -  -  -  -  
 1093 D1:B2D1 -  -  -  -  ;bit orders
 1094 D1:B2D1 -  -  -  -  ;	noflip   flip 
 1095 D1:B2D1 -  -  -  -  ;4bpp 3210 	 0123
 1096 D1:B2D1 -  -  -  -  ;3bpp 210	 012
 1097 D1:B2D1 -  -  -  -  ;2bpp 10	 01
 1098 D1:B2D1 -  -  -  -  ;1bpp 0		 0
 1099 D1:B2D1 -  -  -  -  
 1100 D1:B2D1 -  -  -  -  
 1101 D1:B2D1 -  -  -  -  sdcomp_set_0bpc:
 1102 D1:B2D1 3E DA -  -  	ld a,%11011010;jp c
 1103 D1:B2D3 32 E2 AF D1 	ld (sdcomp_0bpc),a
 1104 D1:B2D7 -  -  -  -  	
 1105 D1:B2D7 32 89 B1 D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
 1106 D1:B2DB 32 94 B1 D1 	ld (sdcomp_3bpc_1),a 
 1107 D1:B2DF -  -  -  -  	
 1108 D1:B2DF 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1109 D1:B2E1 32 7E B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1110 D1:B2E5 3E 00 -  -  	ld a,%00000000
 1111 D1:B2E7 32 A3 B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1112 D1:B2EB C9 -  -  -  	ret 
 1113 D1:B2EC -  -  -  -  	
 1114 D1:B2EC -  -  -  -  sdcomp_set_1bpc:
 1115 D1:B2EC 3E D2 -  -  	ld a,%11010010;jp nc
 1116 D1:B2EE 32 E2 AF D1 	ld (sdcomp_0bpc),a
 1117 D1:B2F2 3E DA -  -  	ld a,%11011010;jp c
 1118 D1:B2F4 32 F4 AF D1 	ld (sdcomp_1bpc),a
 1119 D1:B2F8 -  -  -  -  	
 1120 D1:B2F8 32 89 B1 D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
 1121 D1:B2FC 32 94 B1 D1 	ld (sdcomp_3bpc_1),a 
 1122 D1:B300 -  -  -  -  	
 1123 D1:B300 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1124 D1:B302 32 7E B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1125 D1:B306 -  -  -  -  	
 1126 D1:B306 -  -  -  -  	
 1127 D1:B306 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1128 D1:B308 32 F2 AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1129 D1:B30C -  -  -  -  	
 1130 D1:B30C 3E 80 -  -  	ld a,%10000000
 1131 D1:B30E 32 A3 B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1132 D1:B312 -  -  -  -  	
 1133 D1:B312 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1134 D1:B314 32 9C B0 D1 	ld (sdcomp_traverse_2bpp),a
 1135 D1:B318 32 9E B0 D1 	ld (sdcomp_traverse_3bpp),a
 1136 D1:B31C 32 A0 B0 D1 	ld (sdcomp_traverse_4bpp),a
 1137 D1:B320 C9 -  -  -  	ret 
 1138 D1:B321 -  -  -  -  
 1139 D1:B321 -  -  -  -  sdcomp_set_2bpc:
 1140 D1:B321 3E D2 -  -  	ld a,%11010010;jp nc
 1141 D1:B323 32 E2 AF D1 	ld (sdcomp_0bpc),a
 1142 D1:B327 32 F4 AF D1 	ld (sdcomp_1bpc),a
 1143 D1:B32B -  -  -  -  	
 1144 D1:B32B 3E DA -  -  	ld a,%11011010;jp c
 1145 D1:B32D 32 06 B0 D1 	ld (sdcomp_2bpc),a
 1146 D1:B331 -  -  -  -  	
 1147 D1:B331 32 94 B1 D1 	ld (sdcomp_3bpc_1),a ;for setting local pallete data
 1148 D1:B335 -  -  -  -  	
 1149 D1:B335 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1150 D1:B337 32 7E B1 D1 	ld (sdcomp_1bpc_1),a;for setting local pallete data
 1151 D1:B33B 32 89 B1 D1 	ld (sdcomp_2bpc_1),a 
 1152 D1:B33F -  -  -  -  	
 1153 D1:B33F 37 -  -  -  	scf 
 1154 D1:B340 -  -  -  -  sdcomp_flip_2bpc .equ $ 
 1155 D1:B340 D2 51 B3 D1 	jp nc, sdcomp_2bpc_flip
 1156 D1:B344 -  -  -  -  	
 1157 D1:B344 3E CB -  -  	ld a,%11001011 ;set 1,e
 1158 D1:B346 32 F2 AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1159 D1:B34A 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1160 D1:B34C 32 04 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1161 D1:B350 -  -  -  -  	
 1162 D1:B350 C9 -  -  -  	ret 
 1163 D1:B351 -  -  -  -  	
 1164 D1:B351 -  -  -  -  sdcomp_2bpc_flip:
 1165 D1:B351 3E CB -  -  	ld a,%11001011 ;set 1,e
 1166 D1:B353 32 04 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1167 D1:B357 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1168 D1:B359 32 F2 AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1169 D1:B35D 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1170 D1:B35F 32 9C B0 D1 	ld (sdcomp_traverse_2bpp),a
 1171 D1:B363 -  -  -  -  
 1172 D1:B363 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1173 D1:B365 32 9E B0 D1 	ld (sdcomp_traverse_3bpp),a
 1174 D1:B369 32 A0 B0 D1 	ld (sdcomp_traverse_4bpp),a
 1175 D1:B36D -  -  -  -  	
 1176 D1:B36D 3E C0 -  -  	ld a,%11000000
 1177 D1:B36F 32 A3 B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1178 D1:B373 C9 -  -  -  	ret 
 1179 D1:B374 -  -  -  -  
 1180 D1:B374 -  -  -  -  
 1181 D1:B374 -  -  -  -  sdcomp_set_3bpc:
 1182 D1:B374 -  -  -  -  	
 1183 D1:B374 3E D2 -  -  	ld a,%11010010;jp nc
 1184 D1:B376 32 E2 AF D1 	ld (sdcomp_0bpc),a
 1185 D1:B37A 32 F4 AF D1 	ld (sdcomp_1bpc),a
 1186 D1:B37E 32 06 B0 D1 	ld (sdcomp_2bpc),a
 1187 D1:B382 -  -  -  -  	
 1188 D1:B382 3E DA -  -  	ld a,%11011010;jp c
 1189 D1:B384 32 18 B0 D1 	ld (sdcomp_3bpc),a
 1190 D1:B388 -  -  -  -  	
 1191 D1:B388 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1192 D1:B38A 32 7E B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1193 D1:B38E 32 89 B1 D1 	ld (sdcomp_2bpc_1),a 
 1194 D1:B392 32 94 B1 D1 	ld (sdcomp_3bpc_1),a 
 1195 D1:B396 -  -  -  -  	
 1196 D1:B396 37 -  -  -  	scf 
 1197 D1:B397 -  -  -  -  sdcomp_flip_3bpc .equ $ 
 1198 D1:B397 D2 AE B3 D1 	jp nc, sdcomp_3bpc_flip	
 1199 D1:B39B -  -  -  -  	
 1200 D1:B39B 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1201 D1:B39D 32 F2 AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1202 D1:B3A1 3E CB -  -  	ld a,%11001011 ;set 1,e
 1203 D1:B3A3 32 04 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1204 D1:B3A7 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1205 D1:B3A9 32 16 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1206 D1:B3AD -  -  -  -  	
 1207 D1:B3AD C9 -  -  -  	ret 
 1208 D1:B3AE -  -  -  -  	
 1209 D1:B3AE -  -  -  -  sdcomp_3bpc_flip:
 1210 D1:B3AE 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1211 D1:B3B0 32 16 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1212 D1:B3B4 3E CB -  -  	ld a,%11001011 ;set 1,e
 1213 D1:B3B6 32 04 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1214 D1:B3BA 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1215 D1:B3BC 32 F2 AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1216 D1:B3C0 -  -  -  -  	
 1217 D1:B3C0 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1218 D1:B3C2 32 9C B0 D1 	ld (sdcomp_traverse_2bpp),a 
 1219 D1:B3C6 32 9E B0 D1 	ld (sdcomp_traverse_3bpp),a 
 1220 D1:B3CA -  -  -  -  	
 1221 D1:B3CA 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1222 D1:B3CC 32 A0 B0 D1 	ld (sdcomp_traverse_4bpp),a
 1223 D1:B3D0 -  -  -  -  	
 1224 D1:B3D0 3E E0 -  -  	ld a,%11100000
 1225 D1:B3D2 32 A3 B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1226 D1:B3D6 -  -  -  -  	
 1227 D1:B3D6 C9 -  -  -  	ret 
 1228 D1:B3D7 -  -  -  -  
 1229 D1:B3D7 -  -  -  -  sdcomp_set_4bpc:
 1230 D1:B3D7 -  -  -  -  
 1231 D1:B3D7 3E D2 -  -  	ld a,%11010010;jp nc
 1232 D1:B3D9 32 E2 AF D1 	ld (sdcomp_0bpc),a
 1233 D1:B3DD 32 F4 AF D1 	ld (sdcomp_1bpc),a
 1234 D1:B3E1 32 06 B0 D1 	ld (sdcomp_2bpc),a
 1235 D1:B3E5 -  -  -  -  
 1236 D1:B3E5 3E DA -  -  	ld a,%11011010;jp c
 1237 D1:B3E7 -  -  -  -  
 1238 D1:B3E7 32 7E B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1239 D1:B3EB 32 89 B1 D1 	ld (sdcomp_2bpc_1),a 
 1240 D1:B3EF 32 94 B1 D1 	ld (sdcomp_3bpc_1),a 
 1241 D1:B3F3 -  -  -  -  	
 1242 D1:B3F3 37 -  -  -  	scf 
 1243 D1:B3F4 -  -  -  -  sdcomp_flip_4bpc .equ $ 
 1244 D1:B3F4 D2 11 B4 D1 	jp nc, sdcomp_4bpc_flip	
 1245 D1:B3F8 3E DB -  -  	ld a,%11011011 ;set 3,e
 1246 D1:B3FA 32 F2 AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1247 D1:B3FE 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1248 D1:B400 32 04 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1249 D1:B404 3E CB -  -  	ld a,%11001011 ;set 1,e
 1250 D1:B406 32 16 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1251 D1:B40A 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1252 D1:B40C 32 28 B0 D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
 1253 D1:B410 C9 -  -  -  	ret 
 1254 D1:B411 -  -  -  -  sdcomp_4bpc_flip:
 1255 D1:B411 3E DB -  -  	ld a,%11011011 ;set 3,e
 1256 D1:B413 32 28 B0 D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
 1257 D1:B417 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1258 D1:B419 32 16 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1259 D1:B41D 3E CB -  -  	ld a,%11001011 ;set 1,e
 1260 D1:B41F 32 04 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1261 D1:B423 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1262 D1:B425 32 F2 AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1263 D1:B429 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1264 D1:B42B 32 9C B0 D1 	ld (sdcomp_traverse_2bpp),a 
 1265 D1:B42F 32 9E B0 D1 	ld (sdcomp_traverse_3bpp),a 
 1266 D1:B433 32 A0 B0 D1 	ld (sdcomp_traverse_4bpp),a 
 1267 D1:B437 -  -  -  -  	
 1268 D1:B437 3E F0 -  -  	ld a,%11110000
 1269 D1:B439 32 A3 B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1270 D1:B43D -  -  -  -  	
 1271 D1:B43D C9 -  -  -  	ret 
 1272 D1:B43E -  -  -  -  	
 1273 D1:B43E -  -  -  -  	
 1274 D1:B43E -  -  -  -  sdcomp_set_noalpha:
 1275 D1:B43E 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1276 D1:B440 32 63 AF D1 	ld (sdcomp_no_alpha_1),a 
 1277 D1:B444 3E DA -  -  	ld a,%11011010;jp c
 1278 D1:B446 32 63 B1 D1 	ld (sdcomp_no_alpha_2),a 
 1279 D1:B44A 32 94 B0 D1 	ld (sdcomp_no_alpha_3),a 
 1280 D1:B44E C9 -  -  -  	ret
 1281 D1:B44F -  -  -  -  	
 1282 D1:B44F -  -  -  -  sdcomp_reset_noalpha:
 1283 D1:B44F -  -  -  -  
 1284 D1:B44F 3E DA -  -  	ld a,%11011010;jp c
 1285 D1:B451 32 63 AF D1 	ld (sdcomp_no_alpha_1),a 
 1286 D1:B455 3E D2 -  -  	ld a, %11010010 ;jp nc
 1287 D1:B457 32 63 B1 D1 	ld (sdcomp_no_alpha_2),a 
 1288 D1:B45B 3E CA -  -  	ld a, %11001010 ;jp z
 1289 D1:B45D 32 94 B0 D1 	ld (sdcomp_no_alpha_3),a 
 1290 D1:B461 C9 -  -  -  	ret
 1291 D1:B462 -  -  -  -  
 1292 D1:B462 -  -  -  -  
 1293 D1:B462 -  -  -  -  sdcomp_set_offset:
 1294 D1:B462 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1295 D1:B464 32 8B AF D1 	ld (sdcomp_offset_1),a 
 1296 D1:B468 32 4F AF D1 	ld (sdcomp_bit_offset),a 
 1297 D1:B46C 3E 04 -  -  	ld a,%00000100 ;inc b 
 1298 D1:B46E 32 4B B1 D1 	ld (sdcomp_offset_2),a 
 1299 D1:B472 -  -  -  -  	
 1300 D1:B472 C9 -  -  -  	ret 
 1301 D1:B473 -  -  -  -  
 1302 D1:B473 -  -  -  -  sdcomp_reset_offset:
 1303 D1:B473 3E DA -  -  	ld a,%11011010;jp c
 1304 D1:B475 32 8B AF D1 	ld (sdcomp_offset_1),a 
 1305 D1:B479 32 4F AF D1 	ld (sdcomp_bit_offset),a 
 1306 D1:B47D 3E 00 -  -  	ld a,%00000000 ;nop
 1307 D1:B47F 32 4B B1 D1 	ld (sdcomp_offset_2),a 
 1308 D1:B483 C9 -  -  -  	ret 
 1309 D1:B484 -  -  -  -  	
 1310 D1:B484 -  -  -  -  sdcomp_set_flip:
 1311 D1:B484 3E 01 -  -  	ld a, %00000001 ;rlc c 
 1312 D1:B486 32 3A AF D1 	ld (sdcomp_flip_bitstream),a
 1313 D1:B48A 3E 2B -  -  	ld a, %00101011 ;dec hl 
 1314 D1:B48C 32 3C AF D1 	ld (sdcomp_flip_bitstream_2),a 
 1315 D1:B490 3E DC -  -  	ld a, %11011100 ;call c 
 1316 D1:B492 32 EB B1 D1 	ld (sdcomp_flip_traverse),a 
 1317 D1:B496 -  -  -  -  	
 1318 D1:B496 3E DA -  -  	ld a,%11011010;jp c
 1319 D1:B498 32 40 B3 D1 	ld (sdcomp_flip_2bpc),a
 1320 D1:B49C 32 97 B3 D1 	ld (sdcomp_flip_3bpc),a
 1321 D1:B4A0 32 F4 B3 D1 	ld (sdcomp_flip_4bpc),a
 1322 D1:B4A4 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1323 D1:B4A6 32 B7 B1 D1 	ld (sdcomp_flip_setup),a 
 1324 D1:B4AA -  -  -  -  	
 1325 D1:B4AA C9 -  -  -  	ret 
 1326 D1:B4AB -  -  -  -  
 1327 D1:B4AB -  -  -  -  sdcomp_reset_flip:
 1328 D1:B4AB 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1329 D1:B4AD 32 3A AF D1 	ld (sdcomp_flip_bitstream),a
 1330 D1:B4B1 3E 23 -  -  	ld a, %00100011 ;inc hl 
 1331 D1:B4B3 32 3C AF D1 	ld (sdcomp_flip_bitstream_2),a 
 1332 D1:B4B7 3E D4 -  -  	ld a, %11010100 ;call nc 
 1333 D1:B4B9 32 EB B1 D1 	ld (sdcomp_flip_traverse),a 
 1334 D1:B4BD -  -  -  -  	
 1335 D1:B4BD 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1336 D1:B4BF 32 40 B3 D1 	ld (sdcomp_flip_2bpc),a
 1337 D1:B4C3 32 97 B3 D1 	ld (sdcomp_flip_3bpc),a
 1338 D1:B4C7 32 F4 B3 D1 	ld (sdcomp_flip_4bpc),a
 1339 D1:B4CB 3E DA -  -  	ld a,%11011010;jp c
 1340 D1:B4CD 32 B7 B1 D1 	ld (sdcomp_flip_setup),a 
 1341 D1:B4D1 C9 -  -  -  	ret 
 1342 D1:B4D2 -  -  -  -  
 1343 D1:B4D2 -  -  -  -  
 1344 D1:B4D2 -  -  -  -  sdcomp_set_fast:
 1345 D1:B4D2 3E DA -  -  	ld a,%11011010;jp c
 1346 D1:B4D4 32 0C B2 D1 	ld(sdcomp_fast_1),a 
 1347 D1:B4D8 32 25 B2 D1 	ld(sdcomp_fast_2),a 
 1348 D1:B4DC 32 4B B2 D1 	ld(sdcomp_fast_3),a 
 1349 D1:B4E0 -  -  -  -  	
 1350 D1:B4E0 C9 -  -  -  	ret 
 1351 D1:B4E1 -  -  -  -  
 1352 D1:B4E1 -  -  -  -  sdcomp_reset_fast:
 1353 D1:B4E1 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1354 D1:B4E3 32 0C B2 D1 	ld(sdcomp_fast_1),a 
 1355 D1:B4E7 32 25 B2 D1 	ld(sdcomp_fast_2),a 
 1356 D1:B4EB 32 4B B2 D1 	ld(sdcomp_fast_3),a 
 1357 D1:B4EF -  -  -  -  	
 1358 D1:B4EF C9 -  -  -  	ret 
 1359 D1:B4F0 -  -  -  -  
 1360 D1:B4F0 -  -  -  -  
 1361 D1:B4F0 -  -  -  -  
 1362 D1:B4F0 -  -  -  -  
 1363 D1:B4F0 -  -  -  -  
 1364 D1:B4F0 -  -  -  -  
Listing for file "ascent.asm"
  553 D1:B4F0 -  -  -  -  #include "drawFG.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFG.txt"
    1 D1:B4F0 -  -  -  -  
    2 D1:B4F0 -  -  -  -  FGMaxSpriteHeight .equ 120
    3 D1:B4F0 -  -  -  -  
    4 D1:B4F0 -  -  -  -  draw_fg_setup:
    5 D1:B4F0 3E D2 -  -  	ld a, %11010010 ;jp nc
    6 D1:B4F2 32 E8 B5 D1 	ld (dfgs_bg_mode_1),a 
    7 D1:B4F6 32 4C B6 D1 	ld (dfgs_bg_mode_2),a 
    8 D1:B4FA -  -  -  -  
    9 D1:B4FA 2A DC AB D1 	ld hl,(draw_buffer)
   10 D1:B4FE 22 F8 B5 D1 	ld (dfgs_vram_top_1),hl
   11 D1:B502 22 AD B6 D1 	ld (dfgs_vram_top_2),hl
   12 D1:B506 01 00 96 00 	ld bc,160*240
   13 D1:B50A 09 -  -  -  	add hl,bc
   14 D1:B50B 22 68 B6 D1 	ld (dfgs_vram_bottom_1),hl 
   15 D1:B50F 22 88 B6 D1 	ld (dfgs_vram_bottom_2),hl 
   16 D1:B513 22 14 B7 D1 	ld (dfgs_vram_bottom_3),hl 
   17 D1:B517 22 34 B7 D1 	ld (dfgs_vram_bottom_4),hl 
   18 D1:B51B C9 -  -  -  	ret 
   19 D1:B51C -  -  -  -  
   20 D1:B51C -  -  -  -  
   21 D1:B51C -  -  -  -  draw_fg_setup_2:
   22 D1:B51C 01 EF 00 00 	ld bc,239
   23 D1:B520 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of fg layer
   24 D1:B521 7D -  -  -  	ld a,l ;lsb cam pos, = line number in middle frame
   25 D1:B522 32 B6 B5 D1 	ld (dfgs_cam_height_1),a
   26 D1:B526 32 51 B6 D1 	ld (dfgs_cam_height_2),a ;y value in dataframe of uppermost line of viewport
   27 D1:B52A 32 E5 B6 D1 	ld (dfgs_cam_height_3),a
   28 D1:B52E 32 FF B6 D1 	ld (dfgs_cam_height_4),a	
   29 D1:B532 ED 44 -  -  	neg 
   30 D1:B534 32 ED B5 D1 	ld (dfgs_viewport_to_upper_frame),a ;1 = top line of VP is top line of middle frame
   31 D1:B538 ED 44 -  -  	neg 
   32 D1:B53A D6 EF -  -  	sub 239
   33 D1:B53C 32 08 B7 D1 	ld (dfgs_viewport_bottom_y),a
   34 D1:B540 -  -  -  -  	
   35 D1:B540 01 00 00 00 	ld bc,0
   36 D1:B544 4C -  -  -  	ld c,h;msb ccam pos 
   37 D1:B545 0C -  -  -  	inc c 
   38 D1:B546 -  -  -  -  	
   39 D1:B546 C9 -  -  -  	ret 
   40 D1:B547 -  -  -  -  
   41 D1:B547 -  -  -  -  draw_mg:
   42 D1:B547 -  -  -  -  
   43 D1:B547 CD F0 B4 D1 	call draw_fg_setup
   44 D1:B54B -  -  -  -  	
   45 D1:B54B 2A D6 AB D1 	ld hl,(cam_pos)
   46 D1:B54F CB 3C -  -  	srl h ;div by 2
   47 D1:B551 CB 1D -  -  	rr l 
   48 D1:B553 -  -  -  -  	
   49 D1:B553 CD 1C B5 D1 	call draw_fg_setup_2
   50 D1:B557 -  -  -  -  
   51 D1:B557 21 17 C2 D1 	ld hl,MG_Data_frame_table
   52 D1:B55B 09 -  -  -  	add hl,bc
   53 D1:B55C 09 -  -  -  	add hl,bc 
   54 D1:B55D 09 -  -  -  	add hl,bc 	
   55 D1:B55E ED 27 -  -  	ld hl,(hl);upper frame 
   56 D1:B560 -  -  -  -  	
   57 D1:B560 CD 9D B5 D1 	call draw_fg_sprites
   58 D1:B564 C9 -  -  -  	ret
   59 D1:B565 -  -  -  -  
   60 D1:B565 -  -  -  -  draw_mg2:
   61 D1:B565 -  -  -  -  
   62 D1:B565 CD F0 B4 D1 	call draw_fg_setup
   63 D1:B569 -  -  -  -  	
   64 D1:B569 2A D6 AB D1 	ld hl,(cam_pos)
   65 D1:B56D CB 3C -  -  	srl h ;div by 2
   66 D1:B56F CB 1D -  -  	rr l 
   67 D1:B571 -  -  -  -  	
   68 D1:B571 CD 1C B5 D1 	call draw_fg_setup_2
   69 D1:B575 -  -  -  -  
   70 D1:B575 21 49 C5 D1 	ld hl,MG2_Data_frame_table
   71 D1:B579 09 -  -  -  	add hl,bc
   72 D1:B57A 09 -  -  -  	add hl,bc 
   73 D1:B57B 09 -  -  -  	add hl,bc 	
   74 D1:B57C ED 27 -  -  	ld hl,(hl);upper frame 
   75 D1:B57E -  -  -  -  
   76 D1:B57E CD 9D B5 D1 	call draw_fg_sprites
   77 D1:B582 C9 -  -  -  	ret
   78 D1:B583 -  -  -  -  	
   79 D1:B583 -  -  -  -  
   80 D1:B583 -  -  -  -  draw_fg:
   81 D1:B583 -  -  -  -  
   82 D1:B583 CD F0 B4 D1 	call draw_fg_setup
   83 D1:B587 -  -  -  -  	
   84 D1:B587 2A D6 AB D1 	ld hl,(cam_pos)
   85 D1:B58B -  -  -  -  	
   86 D1:B58B CD 1C B5 D1 	call draw_fg_setup_2
   87 D1:B58F -  -  -  -  	
   88 D1:B58F 21 17 C6 D1 	ld hl,FG_Data_frame_table
   89 D1:B593 09 -  -  -  	add hl,bc
   90 D1:B594 09 -  -  -  	add hl,bc 
   91 D1:B595 09 -  -  -  	add hl,bc 	
   92 D1:B596 ED 27 -  -  	ld hl,(hl);upper frame 
   93 D1:B598 -  -  -  -  
   94 D1:B598 CD 9D B5 D1 	call draw_fg_sprites
   95 D1:B59C C9 -  -  -  	ret
   96 D1:B59D -  -  -  -  
   97 D1:B59D -  -  -  -  
   98 D1:B59D -  -  -  -  ; Upper Frame =======================================================================================================
   99 D1:B59D -  -  -  -  ; Upper Frame =======================================================================================================
  100 D1:B59D -  -  -  -  ;hl = upper frame data
  101 D1:B59D -  -  -  -   
  102 D1:B59D -  -  -  -  ;load cam height 123,vram top 12 vram bottom 1234
  103 D1:B59D -  -  -  -  draw_fg_sprites:
  104 D1:B59D -  -  -  -  	;UPPER FRAME, bottom of upper frame is not on screen, bottom of mid frame is on screen bottom of lower is not on screen
  105 D1:B59D CD 7E B8 D1 	call sprite_table_from_index
  106 D1:B5A1 ED 53 75 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de ;write sprite table ptr to required locations 
  107 D1:B5A6 ED 53 B7 B7 
              D1 -  -  -  	ld (dfgs_sprite_pointers_2),de 
  108 D1:B5AB ED 53 08 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  109 D1:B5B0 -  -  -  -  	
  110 D1:B5B0 11 00 00 00 	ld de,0
  111 D1:B5B4 23 -  -  -  	inc hl;past data table 
  112 D1:B5B5 -  -  -  -  	;hl is number of elements
  113 D1:B5B5 -  -  -  -  	
  114 D1:B5B5 -  -  -  -  	
  115 D1:B5B5 -  -  -  -  	;if cam is far below upper frame, can skip upper frame 
  116 D1:B5B5 -  -  -  -  dfgs_cam_height_1 .equ $ + 1
  117 D1:B5B5 3E 00 -  -  	ld a,0 
  118 D1:B5B7 FE 78 -  -  	cp FGMaxSpriteHeight
  119 D1:B5B9 D2 CB B5 D1 	jp nc, dfgs_do_upper_loop
  120 D1:B5BD -  -  -  -  	;cam too low for upper frame sprites to be drawn
  121 D1:B5BD 01 00 00 00 	ld bc,0
  122 D1:B5C1 4E -  -  -  	ld c,(hl) ;bc holds number of elements
  123 D1:B5C2 09 -  -  -  	add hl,bc 
  124 D1:B5C3 09 -  -  -  	add hl,bc 
  125 D1:B5C4 09 -  -  -  	add hl,bc 
  126 D1:B5C5 09 -  -  -  	add hl,bc;hl points to end of current frame data 
  127 D1:B5C6 23 -  -  -  	inc hl;start of next frame
  128 D1:B5C7 C3 17 B6 D1 	jp dfgs_mid_start ;skip upper loop
  129 D1:B5CB -  -  -  -  	
  130 D1:B5CB -  -  -  -  	
  131 D1:B5CB -  -  -  -  dfgs_do_upper_loop:	
  132 D1:B5CB 08 -  -  -  	ex af,af' ;'
  133 D1:B5CC -  -  -  -  	
  134 D1:B5CC 7E -  -  -  	ld a,(hl);number of elements
  135 D1:B5CD -  -  -  -  	;TESTING
  136 D1:B5CD -  -  -  -  	;call write_a_to_ram
  137 D1:B5CD -  -  -  -  	;call prgmpause
  138 D1:B5CD -  -  -  -  	;TESTING
  139 D1:B5CD -  -  -  -  	
  140 D1:B5CD 3C -  -  -  	inc a ;to be decd later
  141 D1:B5CE 08 -  -  -  	ex af,af' ;'
  142 D1:B5CF 23 -  -  -  	inc hl;hl points to first sprite in upper frame  
  143 D1:B5D0 -  -  -  -  
  144 D1:B5D0 -  -  -  -  dfgs_upper_loop:;Want to check for sprites in upper frame that extend to lower frame 
  145 D1:B5D0 -  -  -  -  
  146 D1:B5D0 08 -  -  -  	ex af,af';'
  147 D1:B5D1 3D -  -  -  	dec a ;dec number of elements
  148 D1:B5D2 -  -  -  -  	;call write_a_to_ram
  149 D1:B5D2 CA 17 B6 D1 	jp z,dfgs_mid_start 
  150 D1:B5D6 08 -  -  -  	ex af,af';'
  151 D1:B5D7 -  -  -  -  
  152 D1:B5D7 7E -  -  -  	ld a,(hl);sprite y value 
  153 D1:B5D8 23 -  -  -  	inc hl ;to height
  154 D1:B5D9 -  -  -  -  	
  155 D1:B5D9 -  -  -  -  	;call write_a_to_ram
  156 D1:B5D9 -  -  -  -  	;call prgmpause
  157 D1:B5D9 CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  158 D1:B5DB C2 7E B7 D1 	jp nz, dfgs_sg_upper ;goto group loop 
  159 D1:B5DF -  -  -  -  	
  160 D1:B5DF -  -  -  -  	;otherwise single sprite, call draw routine 
  161 D1:B5DF CD E7 B5 D1 	call dfgs_draw_upper_sprite
  162 D1:B5E3 -  -  -  -  	
  163 D1:B5E3 C3 D0 B5 D1 	jp dfgs_upper_loop
  164 D1:B5E7 -  -  -  -  	
  165 D1:B5E7 -  -  -  -  
  166 D1:B5E7 -  -  -  -  ;Can be used for normal sprites and in sprite groups 
  167 D1:B5E7 -  -  -  -  ;a holds y pos in upper frame, hl pts to sprite height 
  168 D1:B5E7 -  -  -  -  dfgs_draw_upper_sprite:
  169 D1:B5E7 -  -  -  -  
  170 D1:B5E7 37 -  -  -  	scf 
  171 D1:B5E8 -  -  -  -  dfgs_bg_mode_1 .equ $ 
  172 D1:B5E8 D2 BD AD D1 	jp nc, dbgl_draw_upper_sprite ;if bg mode go to bg draw routine
  173 D1:B5EC -  -  -  -  
  174 D1:B5EC -  -  -  -  
  175 D1:B5EC -  -  -  -  dfgs_viewport_to_upper_frame .equ $ + 1
  176 D1:B5EC C6 00 -  -  	add a,0 ;a now holds number of lines to skip in current sprite (1 indexed)
  177 D1:B5EE -  -  -  -  	;call write_a_to_ram
  178 D1:B5EE DA 13 B6 D1 	jp c, dfgs_upper_skip ;if sprite has large y pos, can carry over
  179 D1:B5F2 BE -  -  -  	cp (hl) ;compare to sprite height 
  180 D1:B5F3 D2 13 B6 D1 	jp nc, dfgs_upper_skip ;skips drawing too many lines, sprite is not on screen
  181 D1:B5F7 -  -  -  -  	;a holds number of lines to skip drawing
  182 D1:B5F7 -  -  -  -  
  183 D1:B5F7 -  -  -  -  dfgs_vram_top_1 .equ $ + 1 
  184 D1:B5F7 11 00 00 00 	ld de,0;load top of vram 
  185 D1:B5FB E5 -  -  -  	push hl ;save height ptr
  186 D1:B5FC CD 5B B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  187 D1:B600 -  -  -  -  	
  188 D1:B600 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  189 D1:B602 CA 0E B6 D1 	jp z,dfgs_upper_fast
  190 D1:B606 CD 02 AF D1 	call draw_slow_sprite_top_cut
  191 D1:B60A C3 12 B6 D1 	jp dfgs_upper_skip_2
  192 D1:B60E -  -  -  -  dfgs_upper_fast:
  193 D1:B60E CD 84 AE D1 	call draw_fast_sprite_top_cut
  194 D1:B612 -  -  -  -  dfgs_upper_skip_2:
  195 D1:B612 E1 -  -  -  	pop hl ;hl holds (height)
  196 D1:B613 -  -  -  -  	
  197 D1:B613 -  -  -  -  
  198 D1:B613 -  -  -  -  dfgs_upper_skip:
  199 D1:B613 -  -  -  -  
  200 D1:B613 23 -  -  -  	inc hl ;to x
  201 D1:B614 23 -  -  -  	inc hl ;to index 
  202 D1:B615 23 -  -  -  	inc hl;to y 
  203 D1:B616 -  -  -  -  	
  204 D1:B616 C9 -  -  -  	ret ;end of dfgs_draw_upper_sprite
  205 D1:B617 -  -  -  -  	
  206 D1:B617 -  -  -  -  	;ld a,$AA
  207 D1:B617 -  -  -  -  	;call write_a_to_ram
  208 D1:B617 -  -  -  -  	;call prgmpause
  209 D1:B617 -  -  -  -  	
  210 D1:B617 -  -  -  -  
  211 D1:B617 -  -  -  -  ;MIDDLE FRAME ====================================================================================================
  212 D1:B617 -  -  -  -  	
  213 D1:B617 -  -  -  -  dfgs_mid_start:;MIDDLE FRAME, can be top cut, no cut, or bottom cut ===============================================
  214 D1:B617 -  -  -  -  	
  215 D1:B617 -  -  -  -  	;call prgmpause
  216 D1:B617 -  -  -  -  	
  217 D1:B617 CD 7E B8 D1 	call sprite_table_from_index
  218 D1:B61B ED 53 75 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  219 D1:B620 ED 53 01 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_3),de 
  220 D1:B625 ED 53 08 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  221 D1:B62A 11 00 00 00 	ld de,0
  222 D1:B62E 23 -  -  -  	inc hl;past sprite table ptr
  223 D1:B62F 08 -  -  -  	ex af,af' ;'
  224 D1:B630 7E -  -  -  	ld a,(hl);number of elements
  225 D1:B631 3C -  -  -  	inc a 
  226 D1:B632 08 -  -  -  	ex af,af' ;'
  227 D1:B633 -  -  -  -  	
  228 D1:B633 23 -  -  -  	inc hl ;to first y val 
  229 D1:B634 -  -  -  -  dfgs_mid_loop:
  230 D1:B634 -  -  -  -  	
  231 D1:B634 08 -  -  -  	ex af,af';'
  232 D1:B635 3D -  -  -  	dec a 
  233 D1:B636 CA CC B6 D1 	jp z,dfgs_lower_start ;check for end of data
  234 D1:B63A -  -  -  -  	
  235 D1:B63A 08 -  -  -  	ex af,af';'
  236 D1:B63B -  -  -  -  
  237 D1:B63B -  -  -  -  	;ld a, $AB
  238 D1:B63B -  -  -  -  	;call write_a_to_ram
  239 D1:B63B -  -  -  -  
  240 D1:B63B 7E -  -  -  	ld a,(hl);y val of sprite in dataframe
  241 D1:B63C -  -  -  -  	;call write_a_to_ram
  242 D1:B63C 23 -  -  -  	inc hl ;to height
  243 D1:B63D -  -  -  -  	
  244 D1:B63D CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  245 D1:B63F C2 C8 B7 D1 	jp nz, dfgs_sg_mid ;goto group loop 
  246 D1:B643 -  -  -  -  	
  247 D1:B643 -  -  -  -  	;otherwise, draw single sprite 
  248 D1:B643 CD 4B B6 D1 	call dfgs_draw_mid_sprite
  249 D1:B647 -  -  -  -  
  250 D1:B647 -  -  -  -  	
  251 D1:B647 C3 34 B6 D1 	jp dfgs_mid_loop
  252 D1:B64B -  -  -  -  	
  253 D1:B64B -  -  -  -  	
  254 D1:B64B -  -  -  -  	
  255 D1:B64B -  -  -  -  	;a = ypos in mid frame, hl pts to height
  256 D1:B64B -  -  -  -  dfgs_draw_mid_sprite:	
  257 D1:B64B -  -  -  -  	
  258 D1:B64B 37 -  -  -  	scf 
  259 D1:B64C -  -  -  -  dfgs_bg_mode_2 .equ $ 
  260 D1:B64C D2 D1 AD D1 	jp nc, dbgl_draw_lower_sprite ;if bg mode go to bg draw routine
  261 D1:B650 -  -  -  -  
  262 D1:B650 -  -  -  -  	;call write_a_to_ram
  263 D1:B650 -  -  -  -  	
  264 D1:B650 -  -  -  -  dfgs_cam_height_2 .equ $ + 1 ;y value in dataframe of uppermost line of viewport
  265 D1:B650 D6 00 -  -  	sub 0;subtract cam pos
  266 D1:B652 -  -  -  -  	;call write_a_to_ram
  267 D1:B652 -  -  -  -  
  268 D1:B652 CA 5A B6 D1 	jp z, dfgs_mid_sprite_topline ;check case where sprite is on top line of viewport
  269 D1:B656 D2 A7 B6 D1 	jp nc, dfgs_mid_sprite_above ; carried, sprite is above viewport boundary, a holds num lines to skip
  270 D1:B65A -  -  -  -  dfgs_mid_sprite_topline:
  271 D1:B65A -  -  -  -  
  272 D1:B65A -  -  -  -  	;Sprite is below viewport bound, either full or bottom cut 
  273 D1:B65A -  -  -  -  	
  274 D1:B65A -  -  -  -  	;a = sprite y - cam pos 
  275 D1:B65A 3D -  -  -  	dec a ;for case where sprite pos = cam pos
  276 D1:B65B C6 F0 -  -  	add a,240 
  277 D1:B65D -  -  -  -  
  278 D1:B65D D2 83 B6 D1 	jp nc, dfgs_mid_skip
  279 D1:B661 -  -  -  -  	;a holds y pos above bottom of vp (0 indexed )
  280 D1:B661 3C -  -  -  	inc a 
  281 D1:B662 -  -  -  -  	
  282 D1:B662 -  -  -  -  	
  283 D1:B662 -  -  -  -  	
  284 D1:B662 BE -  -  -  	cp (hl) ;compare to sprite height 
  285 D1:B663 DA 87 B6 D1 	jp c, dfgs_mid_bottom_cut ;height > lines to draw, bottom is cut off 
  286 D1:B667 -  -  -  -  	;otherwise, draw full sprite 
  287 D1:B667 -  -  -  -  	
  288 D1:B667 -  -  -  -  dfgs_vram_bottom_1 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  289 D1:B667 11 00 00 00 	ld de,0;load bottom of vram 
  290 D1:B66B E5 -  -  -  	push hl ;save height ptr
  291 D1:B66C CD 5B B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  292 D1:B670 -  -  -  -  	
  293 D1:B670 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  294 D1:B672 CA 7E B6 D1 	jp z,dfgs_mid_full_fast
  295 D1:B676 CD C4 AE D1 	call draw_slow_sprite_full
  296 D1:B67A C3 82 B6 D1 	jp dfgs_mid_skip_1
  297 D1:B67E -  -  -  -  dfgs_mid_full_fast:
  298 D1:B67E CD AA AE D1 	call draw_fast_sprite_full
  299 D1:B682 -  -  -  -  dfgs_mid_skip_1:
  300 D1:B682 E1 -  -  -  	pop hl ;hl holds (height)
  301 D1:B683 -  -  -  -  	
  302 D1:B683 -  -  -  -  	
  303 D1:B683 -  -  -  -  dfgs_mid_skip:;sprite is entirely above or below cam pos 
  304 D1:B683 23 -  -  -  	inc hl ;x
  305 D1:B684 23 -  -  -  	inc hl ;index 
  306 D1:B685 23 -  -  -  	inc hl;to y 
  307 D1:B686 -  -  -  -  	
  308 D1:B686 -  -  -  -  	
  309 D1:B686 -  -  -  -  	
  310 D1:B686 C9 -  -  -  	ret
  311 D1:B687 -  -  -  -  	
  312 D1:B687 -  -  -  -  
  313 D1:B687 -  -  -  -  dfgs_mid_bottom_cut:
  314 D1:B687 -  -  -  -  dfgs_vram_bottom_2 .equ $ + 1  ;Bottom Cut SPRITE, a = lines above bottom of viewport
  315 D1:B687 11 00 00 00 	ld de,0;load bottom of vram 
  316 D1:B68B E5 -  -  -  	push hl ;save height ptr
  317 D1:B68C CD 5B B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  318 D1:B690 -  -  -  -  	
  319 D1:B690 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  320 D1:B692 CA 9E B6 D1 	jp z,dfgs_mid_bcut_fast
  321 D1:B696 CD 2F AF D1 	call draw_slow_sprite_bottom_cut
  322 D1:B69A C3 A2 B6 D1 	jp dfgs_mid_skip_2
  323 D1:B69E -  -  -  -  dfgs_mid_bcut_fast:
  324 D1:B69E CD 67 AE D1 	call draw_fast_sprite_bottom_cut
  325 D1:B6A2 -  -  -  -  dfgs_mid_skip_2:
  326 D1:B6A2 E1 -  -  -  	pop hl ;hl holds (height)
  327 D1:B6A3 C3 83 B6 D1 	jp dfgs_mid_skip
  328 D1:B6A7 -  -  -  -  
  329 D1:B6A7 -  -  -  -  dfgs_mid_sprite_above:
  330 D1:B6A7 -  -  -  -  	
  331 D1:B6A7 -  -  -  -  	;a holds lines to skip 
  332 D1:B6A7 BE -  -  -  	cp (hl) ;compare to height
  333 D1:B6A8 D2 83 B6 D1 	jp nc, dfgs_mid_skip ;skip sprite, entirely above viewport
  334 D1:B6AC -  -  -  -  
  335 D1:B6AC -  -  -  -  dfgs_vram_top_2 .equ $ + 1
  336 D1:B6AC 11 00 00 00 	ld de,0;top of vram 
  337 D1:B6B0 E5 -  -  -  	push hl ;save height ptr
  338 D1:B6B1 CD 5B B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  339 D1:B6B5 -  -  -  -  	
  340 D1:B6B5 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  341 D1:B6B7 CA C3 B6 D1 	jp z,dfgs_mid_tcut_fast
  342 D1:B6BB CD 02 AF D1 	call draw_slow_sprite_top_cut
  343 D1:B6BF C3 C7 B6 D1 	jp dfgs_mid_skip_3
  344 D1:B6C3 -  -  -  -  dfgs_mid_tcut_fast:
  345 D1:B6C3 CD 84 AE D1 	call draw_fast_sprite_top_cut
  346 D1:B6C7 -  -  -  -  dfgs_mid_skip_3:
  347 D1:B6C7 E1 -  -  -  	pop hl ;hl holds (height)
  348 D1:B6C8 C3 83 B6 D1 	jp dfgs_mid_skip
  349 D1:B6CC -  -  -  -  	
  350 D1:B6CC -  -  -  -  	
  351 D1:B6CC -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================		
  352 D1:B6CC -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================	
  353 D1:B6CC -  -  -  -  dfgs_lower_start:
  354 D1:B6CC -  -  -  -  	
  355 D1:B6CC CD 7E B8 D1 	call sprite_table_from_index
  356 D1:B6D0 ED 53 75 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  357 D1:B6D5 ED 53 4A B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_4),de
  358 D1:B6DA 11 00 00 00 	ld de,0
  359 D1:B6DE 23 -  -  -  	inc hl;past data table 
  360 D1:B6DF -  -  -  -  	
  361 D1:B6DF 08 -  -  -  	ex af,af' ;'
  362 D1:B6E0 7E -  -  -  	ld a,(hl);number of elements
  363 D1:B6E1 3C -  -  -  	inc a 
  364 D1:B6E2 08 -  -  -  	ex af,af' ;'
  365 D1:B6E3 23 -  -  -  	inc hl
  366 D1:B6E4 -  -  -  -  	
  367 D1:B6E4 -  -  -  -  
  368 D1:B6E4 -  -  -  -  dfgs_cam_height_3 .equ $ + 1 
  369 D1:B6E4 3E 00 -  -  	ld a, 0
  370 D1:B6E6 D6 EF -  -  	sub 239
  371 D1:B6E8 D0 -  -  -  	ret nc;if bottom frame is offscreen 
  372 D1:B6E9 -  -  -  -  
  373 D1:B6E9 -  -  -  -  	;a holds y value of viewport bottom line in lower frame 
  374 D1:B6E9 -  -  -  -  	
  375 D1:B6E9 -  -  -  -  
  376 D1:B6E9 -  -  -  -  dfgs_lower_loop:
  377 D1:B6E9 -  -  -  -  
  378 D1:B6E9 08 -  -  -  	ex af,af';'
  379 D1:B6EA 3D -  -  -  	dec a 
  380 D1:B6EB C8 -  -  -  	ret z
  381 D1:B6EC 08 -  -  -  	ex af,af';'
  382 D1:B6ED -  -  -  -  	
  383 D1:B6ED 7E -  -  -  	ld a,(hl);y
  384 D1:B6EE -  -  -  -  	;call write_a_to_ram
  385 D1:B6EE 23 -  -  -  	inc hl ;inc to height
  386 D1:B6EF -  -  -  -  	
  387 D1:B6EF CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  388 D1:B6F1 C2 12 B8 D1 	jp nz, dfgs_sg_lower ;goto group loop 
  389 D1:B6F5 -  -  -  -  	
  390 D1:B6F5 -  -  -  -  	;otherwise, draw single sprite 
  391 D1:B6F5 CD FD B6 D1 	call dfgs_draw_lower_sprite
  392 D1:B6F9 -  -  -  -  	
  393 D1:B6F9 C3 E9 B6 D1 	jp dfgs_lower_loop
  394 D1:B6FD -  -  -  -  
  395 D1:B6FD -  -  -  -  	
  396 D1:B6FD -  -  -  -  dfgs_draw_lower_sprite: ;a = ypos, hl pts to height
  397 D1:B6FD -  -  -  -  	
  398 D1:B6FD -  -  -  -  
  399 D1:B6FD -  -  -  -  	;call write_a_to_ram
  400 D1:B6FD 47 -  -  -  	ld b,a ;save
  401 D1:B6FE -  -  -  -  dfgs_cam_height_4 .equ $ + 1 
  402 D1:B6FE 3E 00 -  -  	ld a, 0 ;check if bottom frame is in VP at all
  403 D1:B700 D6 EF -  -  	sub 239
  404 D1:B702 D2 2F B7 D1 	jp nc,dfgs_lower_skip
  405 D1:B706 78 -  -  -  	ld a,b
  406 D1:B707 -  -  -  -  dfgs_viewport_bottom_y .equ $ + 1
  407 D1:B707 D6 00 -  -  	sub 0;subtract y val of viewport bottom
  408 D1:B709 -  -  -  -  
  409 D1:B709 DA 2F B7 D1 	jp c,dfgs_lower_skip;sprite below screen
  410 D1:B70D -  -  -  -  	
  411 D1:B70D -  -  -  -  	;push af 
  412 D1:B70D -  -  -  -  	;ld a,$A0
  413 D1:B70D -  -  -  -  	;call write_a_to_ram
  414 D1:B70D -  -  -  -  	;pop af
  415 D1:B70D -  -  -  -  	
  416 D1:B70D -  -  -  -  	
  417 D1:B70D 3C -  -  -  	inc a
  418 D1:B70E -  -  -  -  	;a holds number of lines to draw 
  419 D1:B70E BE -  -  -  	cp (hl) ;compare to sprite height 
  420 D1:B70F DA 33 B7 D1 	jp c, dfgs_lower_bottom_cut ;bottom is below viewport 
  421 D1:B713 -  -  -  -  	
  422 D1:B713 -  -  -  -  	;draw full sprite 
  423 D1:B713 -  -  -  -  dfgs_vram_bottom_3 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  424 D1:B713 11 00 00 00 	ld de,0;load bottom of vram 
  425 D1:B717 E5 -  -  -  	push hl ;save height ptr
  426 D1:B718 CD 5B B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  427 D1:B71C -  -  -  -  	
  428 D1:B71C CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  429 D1:B71E CA 2A B7 D1 	jp z,dfgs_lower_full_fast
  430 D1:B722 CD C4 AE D1 	call draw_slow_sprite_full
  431 D1:B726 C3 2E B7 D1 	jp dfgs_lower_skip_1
  432 D1:B72A -  -  -  -  dfgs_lower_full_fast:
  433 D1:B72A CD AA AE D1 	call draw_fast_sprite_full
  434 D1:B72E -  -  -  -  dfgs_lower_skip_1:
  435 D1:B72E E1 -  -  -  	pop hl ;hl holds (height)
  436 D1:B72F -  -  -  -  
  437 D1:B72F -  -  -  -  	
  438 D1:B72F -  -  -  -  dfgs_lower_skip:;sprite offscreen
  439 D1:B72F 23 -  -  -  	inc hl ;x 
  440 D1:B730 23 -  -  -  	inc hl ;index 
  441 D1:B731 23 -  -  -  	inc hl;to y 
  442 D1:B732 -  -  -  -  	;call write_a_to_ram
  443 D1:B732 -  -  -  -  	;ld a,$AD
  444 D1:B732 -  -  -  -  	;call write_a_to_ram
  445 D1:B732 C9 -  -  -  	ret
  446 D1:B733 -  -  -  -  	
  447 D1:B733 -  -  -  -  dfgs_lower_bottom_cut: 
  448 D1:B733 -  -  -  -  dfgs_vram_bottom_4 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  449 D1:B733 11 00 00 00 	ld de,0;load bottom of vram 
  450 D1:B737 E5 -  -  -  	push hl ;save height ptr
  451 D1:B738 CD 5B B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  452 D1:B73C -  -  -  -  	
  453 D1:B73C CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  454 D1:B73E CA 4A B7 D1 	jp z,dfgs_lower_bcut_fast ;even= fast
  455 D1:B742 CD 2F AF D1 	call draw_slow_sprite_bottom_cut
  456 D1:B746 C3 4E B7 D1 	jp dfgs_lower_skip_2
  457 D1:B74A -  -  -  -  dfgs_lower_bcut_fast:
  458 D1:B74A CD 67 AE D1 	call draw_fast_sprite_bottom_cut
  459 D1:B74E -  -  -  -  dfgs_lower_skip_2:
  460 D1:B74E E1 -  -  -  	pop hl ;hl holds (height)
  461 D1:B74F C3 2F B7 D1 	jp dfgs_lower_skip
  462 D1:B753 -  -  -  -  	
  463 D1:B753 -  -  -  -  
  464 D1:B753 -  -  -  -  ;===================================================================================================================
  465 D1:B753 -  -  -  -  ;SPRITE GROUPS =====================================================================================================
  466 D1:B753 -  -  -  -  
  467 D1:B753 -  -  -  -  dfgs_sg_setup:
  468 D1:B753 23 -  -  -  	inc hl ;hl points to xPos of sprite group 
  469 D1:B754 7E -  -  -  	ld a,(hl)
  470 D1:B755 32 6F B8 D1 	ld (dfgs_sg_x_origin),a 
  471 D1:B759 32 F9 AD D1 	ld (dbgl_sg_x_origin),a
  472 D1:B75D -  -  -  -  	;call write_a_to_ram
  473 D1:B75D 01 00 00 00 	ld bc,0
  474 D1:B761 23 -  -  -  	inc hl ; index 
  475 D1:B762 4E -  -  -  	ld c,(hl) ;sprite group index 
  476 D1:B763 -  -  -  -  
  477 D1:B763 21 EB E4 D1 	ld hl, Sprite_Groups
  478 D1:B767 -  -  -  -  	;ld c,0 ;TESTING
  479 D1:B767 -  -  -  -  
  480 D1:B767 09 -  -  -  	add hl,bc 
  481 D1:B768 09 -  -  -  	add hl,bc 
  482 D1:B769 09 -  -  -  	add hl,bc 
  483 D1:B76A -  -  -  -  	
  484 D1:B76A -  -  -  -  	;hl now points to correct sprite group ptr 
  485 D1:B76A ED 27 -  -  	ld hl, (hl)	
  486 D1:B76C -  -  -  -  	;hl pts to sprite table for this group 
  487 D1:B76C -  -  -  -  
  488 D1:B76C CD 7E B8 D1 	call sprite_table_from_index
  489 D1:B770 ED 53 75 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1), de ;NEed to undo after loop is done 
  490 D1:B775 ED 53 08 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  491 D1:B77A 23 -  -  -  	inc hl ;to num sprites 
  492 D1:B77B -  -  -  -  
  493 D1:B77B 7E -  -  -  	ld a,(hl) ;num sprites in group
  494 D1:B77C 23 -  -  -  	inc hl;first sprite y 
  495 D1:B77D C9 -  -  -  	ret
  496 D1:B77E -  -  -  -  	
  497 D1:B77E -  -  -  -  	;Sprite group in upper frame. a holds y pos of sprite group. HL points to height (unused)
  498 D1:B77E -  -  -  -  dfgs_sg_upper:	
  499 D1:B77E 32 8C B7 D1 	ld (dfgs_sg_upper_y_origin),a
  500 D1:B782 E5 -  -  -  	push hl ;save frame data location (height ptr)
  501 D1:B783 CD 53 B7 D1 	call dfgs_sg_setup ;returns with a = num sprites
  502 D1:B787 -  -  -  -   
  503 D1:B787 32 A0 B7 D1 	ld (dfgs_sg_upper_count),a 
  504 D1:B78B -  -  -  -  	
  505 D1:B78B -  -  -  -  dfgs_sg_upper_loop:
  506 D1:B78B -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  507 D1:B78B -  -  -  -  	;if no carry, sprite is still in upper frame, a holds pos in upper frame 
  508 D1:B78B -  -  -  -  	;if carry sprite is entirely in mid frame, a holds y pos in mid frame 
  509 D1:B78B -  -  -  -  dfgs_sg_upper_y_origin .equ $ + 1 
  510 D1:B78B 3E 00 -  -  	ld a, 0
  511 D1:B78D 96 -  -  -  	sub a,(hl)
  512 D1:B78E -  -  -  -  	;call write_a_to_ram
  513 D1:B78E 23 -  -  -  	inc hl ;to height
  514 D1:B78F D2 9B B7 D1 	jp nc, dfgs_sg_upper_draw_upper
  515 D1:B793 -  -  -  -  	
  516 D1:B793 CD 4B B6 D1 	call dfgs_draw_mid_sprite
  517 D1:B797 C3 9F B7 D1 	jp dfgs_sg_upper_continue
  518 D1:B79B -  -  -  -  	;otherwise, sprite is entirely in mid frame, a holds y pos in mid frame
  519 D1:B79B -  -  -  -  	
  520 D1:B79B -  -  -  -  	
  521 D1:B79B -  -  -  -  dfgs_sg_upper_draw_upper:
  522 D1:B79B CD E7 B5 D1 	call dfgs_draw_upper_sprite
  523 D1:B79F -  -  -  -  dfgs_sg_upper_continue:
  524 D1:B79F -  -  -  -  dfgs_sg_upper_count .equ $ + 1
  525 D1:B79F 3E 00 -  -  	ld a, 0
  526 D1:B7A1 3D -  -  -  	dec a 
  527 D1:B7A2 32 A0 B7 D1 	ld (dfgs_sg_upper_count),a 
  528 D1:B7A6 C2 8B B7 D1 	jp nz, dfgs_sg_upper_loop 
  529 D1:B7AA -  -  -  -  	;otherwise, end of sprite group 
  530 D1:B7AA 32 6F B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  531 D1:B7AE 32 F9 AD D1 	ld (dbgl_sg_x_origin),a
  532 D1:B7B2 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  533 D1:B7B3 23 -  -  -  	inc hl
  534 D1:B7B4 23 -  -  -  	inc hl
  535 D1:B7B5 23 -  -  -  	inc hl ;to y pos of next sprite
  536 D1:B7B6 -  -  -  -  dfgs_sprite_pointers_2 .equ $ + 1
  537 D1:B7B6 11 00 00 00 	ld de, 0
  538 D1:B7BA ED 53 75 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  539 D1:B7BF ED 53 08 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  540 D1:B7C4 C3 D0 B5 D1 	jp dfgs_upper_loop
  541 D1:B7C8 -  -  -  -  	
  542 D1:B7C8 -  -  -  -  
  543 D1:B7C8 -  -  -  -  
  544 D1:B7C8 -  -  -  -  ;SG MID =========================================================================================================
  545 D1:B7C8 -  -  -  -  	;Sprite group in middle frame. a holds y pos of sprite group. HL points to height (unused)
  546 D1:B7C8 -  -  -  -  dfgs_sg_mid:	
  547 D1:B7C8 E5 -  -  -  	push hl
  548 D1:B7C9 32 D6 B7 D1 	ld (dfgs_sg_mid_y_origin),a
  549 D1:B7CD CD 53 B7 D1 	call dfgs_sg_setup 
  550 D1:B7D1 -  -  -  -  	
  551 D1:B7D1 32 EA B7 D1 	ld (dfgs_sg_mid_count),a
  552 D1:B7D5 -  -  -  -  	
  553 D1:B7D5 -  -  -  -  dfgs_sg_mid_loop:
  554 D1:B7D5 -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  555 D1:B7D5 -  -  -  -  	;if no carry, sprite is still in mid frame, a holds pos in mid frame 
  556 D1:B7D5 -  -  -  -  	;if carry sprite is entirely in lower frame, a holds y pos in lower frame 
  557 D1:B7D5 -  -  -  -  dfgs_sg_mid_y_origin .equ $ + 1 
  558 D1:B7D5 3E 00 -  -  	ld a, 0
  559 D1:B7D7 96 -  -  -  	sub a,(hl)
  560 D1:B7D8 23 -  -  -  	inc hl ;to height
  561 D1:B7D9 D2 E5 B7 D1 	jp nc, dfgs_sg_mid_draw_mid
  562 D1:B7DD -  -  -  -  	
  563 D1:B7DD CD FD B6 D1 	call dfgs_draw_lower_sprite
  564 D1:B7E1 C3 E9 B7 D1 	jp dfgs_sg_mid_continue
  565 D1:B7E5 -  -  -  -  
  566 D1:B7E5 -  -  -  -  		
  567 D1:B7E5 -  -  -  -  dfgs_sg_mid_draw_mid:
  568 D1:B7E5 CD 4B B6 D1 	call dfgs_draw_mid_sprite
  569 D1:B7E9 -  -  -  -  dfgs_sg_mid_continue:
  570 D1:B7E9 -  -  -  -  dfgs_sg_mid_count .equ $ + 1
  571 D1:B7E9 3E 00 -  -  	ld a, 0
  572 D1:B7EB 3D -  -  -  	dec a 
  573 D1:B7EC 32 EA B7 D1 	ld (dfgs_sg_mid_count),a 
  574 D1:B7F0 C2 D5 B7 D1 	jp nz, dfgs_sg_mid_loop 
  575 D1:B7F4 -  -  -  -  	;otherwise, end of sprite group 
  576 D1:B7F4 32 6F B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  577 D1:B7F8 32 F9 AD D1 	ld (dbgl_sg_x_origin),a 
  578 D1:B7FC E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  579 D1:B7FD 23 -  -  -  	inc hl
  580 D1:B7FE 23 -  -  -  	inc hl
  581 D1:B7FF 23 -  -  -  	inc hl ;to y pos of next sprite
  582 D1:B800 -  -  -  -  dfgs_sprite_pointers_3 .equ $ + 1
  583 D1:B800 11 00 00 00 	ld de, 0
  584 D1:B804 ED 53 75 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  585 D1:B809 ED 53 08 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  586 D1:B80E C3 34 B6 D1 	jp dfgs_mid_loop
  587 D1:B812 -  -  -  -  	
  588 D1:B812 -  -  -  -  	
  589 D1:B812 -  -  -  -  ;SG Lower =========================================================================================================
  590 D1:B812 -  -  -  -  	;Sprite group in lower frame. a holds y pos of sprite group. HL points to height (unused)
  591 D1:B812 -  -  -  -  dfgs_sg_lower:	
  592 D1:B812 32 20 B8 D1 	ld (dfgs_sg_lower_y_origin),a
  593 D1:B816 E5 -  -  -  	push hl
  594 D1:B817 CD 53 B7 D1 	call dfgs_sg_setup 
  595 D1:B81B 32 33 B8 D1 	ld (dfgs_sg_lower_count),a
  596 D1:B81F -  -  -  -  	;call write_a_to_ram
  597 D1:B81F -  -  -  -  dfgs_sg_lower_loop:
  598 D1:B81F -  -  -  -  
  599 D1:B81F -  -  -  -  	;call prgmpause
  600 D1:B81F -  -  -  -  
  601 D1:B81F -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  602 D1:B81F -  -  -  -  	;if no carry, sprite is still in lower frame, a holds pos in lower frame 
  603 D1:B81F -  -  -  -  	;if carry sprite is offscreen
  604 D1:B81F -  -  -  -  dfgs_sg_lower_y_origin .equ $ + 1 
  605 D1:B81F 3E 00 -  -  	ld a, 0
  606 D1:B821 96 -  -  -  	sub a,(hl)
  607 D1:B822 -  -  -  -  	;call write_a_to_ram
  608 D1:B822 23 -  -  -  	inc hl ;to height
  609 D1:B823 D2 2E B8 D1 	jp nc, dfgs_sg_lower_draw_lower
  610 D1:B827 -  -  -  -  	
  611 D1:B827 23 -  -  -  	inc hl 
  612 D1:B828 23 -  -  -  	inc hl
  613 D1:B829 23 -  -  -  	inc hl 
  614 D1:B82A C3 32 B8 D1 	jp dfgs_sg_lower_continue
  615 D1:B82E -  -  -  -  	;otherwise, sprite is entirely below lower frame, skip
  616 D1:B82E -  -  -  -  	
  617 D1:B82E -  -  -  -  	
  618 D1:B82E -  -  -  -  dfgs_sg_lower_draw_lower:
  619 D1:B82E CD FD B6 D1 	call dfgs_draw_lower_sprite
  620 D1:B832 -  -  -  -  dfgs_sg_lower_continue:
  621 D1:B832 -  -  -  -  dfgs_sg_lower_count .equ $ + 1
  622 D1:B832 3E 00 -  -  	ld a, 0
  623 D1:B834 -  -  -  -  	;call write_a_to_ram
  624 D1:B834 3D -  -  -  	dec a 
  625 D1:B835 32 33 B8 D1 	ld (dfgs_sg_lower_count),a 
  626 D1:B839 C2 1F B8 D1 	jp nz, dfgs_sg_lower_loop 
  627 D1:B83D -  -  -  -  	;otherwise, end of sprite group 
  628 D1:B83D 32 6F B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  629 D1:B841 32 F9 AD D1 	ld (dbgl_sg_x_origin),a 
  630 D1:B845 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  631 D1:B846 23 -  -  -  	inc hl
  632 D1:B847 23 -  -  -  	inc hl
  633 D1:B848 23 -  -  -  	inc hl ;to y pos of next sprite
  634 D1:B849 -  -  -  -  dfgs_sprite_pointers_4 .equ $ + 1
  635 D1:B849 11 00 00 00 	ld de, 0
  636 D1:B84D ED 53 75 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  637 D1:B852 ED 53 08 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  638 D1:B857 C3 E9 B6 D1 	jp dfgs_lower_loop
  639 D1:B85B -  -  -  -  	
  640 D1:B85B -  -  -  -  	
  641 D1:B85B -  -  -  -  	
  642 D1:B85B -  -  -  -  	
  643 D1:B85B -  -  -  -  ;a holds distance from bottom of screen, starting from 1, or for top cut dist above screen = num lines to skip 
  644 D1:B85B -  -  -  -  ;(hl) = height 	
  645 D1:B85B -  -  -  -  ;de = initial vram, top for top cut, otherwise bottom
  646 D1:B85B -  -  -  -  
  647 D1:B85B -  -  -  -  ;Subtracts a lines from de (initial vram pos),
  648 D1:B85B -  -  -  -  ;returns hl = sprite data, de = new vram position
  649 D1:B85B -  -  -  -  dfgs_setup_draw:
  650 D1:B85B 23 -  -  -  	inc hl ;x pos 
  651 D1:B85C 01 00 00 00 	ld bc,0
  652 D1:B860 4E -  -  -  	ld c,(hl); x pos
  653 D1:B861 23 -  -  -  	inc hl;to index
  654 D1:B862 E5 -  -  -  	push hl;save sprite index 
  655 D1:B863 26 A0 -  -  	ld h,160
  656 D1:B865 6F -  -  -  	ld l,a ;number of lines to subtract 
  657 D1:B866 ED 6C -  -  	mlt hl;subtract from vram
  658 D1:B868 37 -  -  -  	scf 
  659 D1:B869 3F -  -  -  	ccf
  660 D1:B86A EB -  -  -  	ex de,hl;hl holds initial vram pos, de is lines to subtract  
  661 D1:B86B ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  662 D1:B86D 09 -  -  -  	add hl,bc;add x pos ;hl now holds sprite draw start pos 
  663 D1:B86E -  -  -  -  dfgs_sg_x_origin .equ $ + 1 ;
  664 D1:B86E 0E 00 -  -  	ld c, 0
  665 D1:B870 09 -  -  -  	add hl,bc;add sprite group x pos offset (if applicable)
  666 D1:B871 EB -  -  -  	ex de,hl;put in de
  667 D1:B872 E1 -  -  -  	pop hl;back to frame data 
  668 D1:B873 4E -  -  -  	ld c,(hl);sprite index
  669 D1:B874 -  -  -  -  dfgs_sprite_pointers_1 .equ $ + 1	
  670 D1:B874 21 00 00 00 	ld hl,0 ;load sprite table 
  671 D1:B878 09 -  -  -  	add hl,bc
  672 D1:B879 09 -  -  -  	add hl,bc 
  673 D1:B87A 09 -  -  -  	add hl,bc;move to sprite ptr
  674 D1:B87B -  -  -  -  	;call prgmpause
  675 D1:B87B ED 27 -  -  	ld hl,(hl);hl holds sprite data, if even = fast sprite 
  676 D1:B87D -  -  -  -  
  677 D1:B87D C9 -  -  -  	ret
  678 D1:B87E -  -  -  -  
  679 D1:B87E -  -  -  -  	;hl pts to sprite table index, returns de = sprite table ptr
  680 D1:B87E -  -  -  -  	
  681 D1:B87E -  -  -  -  sprite_table_from_index:
  682 D1:B87E E5 -  -  -  	push hl ;save 
  683 D1:B87F 11 00 00 00 	ld de,0
  684 D1:B883 5E -  -  -  	ld e,(hl) ;e holds table index
  685 D1:B884 21 E0 D2 D1 	ld hl,Sprite_Table_Table
  686 D1:B888 19 -  -  -  	add hl,de 
  687 D1:B889 19 -  -  -  	add hl,de 
  688 D1:B88A 19 -  -  -  	add hl,de ;inc to correct table
  689 D1:B88B ED 17 -  -  	ld de,(hl)
  690 D1:B88D -  -  -  -  	
  691 D1:B88D -  -  -  -  
  692 D1:B88D -  -  -  -  	
  693 D1:B88D -  -  -  -  	;call prgmpause Seems to work
  694 D1:B88D -  -  -  -  	
  695 D1:B88D E1 -  -  -  	pop hl 
  696 D1:B88E C9 -  -  -  	ret 
  697 D1:B88F -  -  -  -  	
  698 D1:B88F -  -  -  -  
  699 D1:B88F -  -  -  -  
  700 D1:B88F -  -  -  -  	
  701 D1:B88F -  -  -  -  	
  702 D1:B88F -  -  -  -  	
  703 D1:B88F -  -  -  -  	
  704 D1:B88F -  -  -  -  	
  705 D1:B88F -  -  -  -  	
  706 D1:B88F -  -  -  -  	
  707 D1:B88F -  -  -  -  	
  708 D1:B88F -  -  -  -  	
  709 D1:B88F -  -  -  -  	
Listing for file "ascent.asm"
  554 D1:B88F -  -  -  -  #include "SpriteDecompressManager.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\SpriteDecompressManager.txt"
    1 D1:B88F -  -  -  -  
    2 D1:B88F -  -  -  -  
    3 D1:B88F -  -  -  -  decompress_queue_start .equ vram
    4 D1:B88F -  -  -  -  
    5 D1:B88F -  -  -  -  decompress_queue_end .equ vram + (7*64) ;Max queue length of 64
    6 D1:B88F -  -  -  -  
    7 D1:B88F -  -  -  -  decompress_tail_ptr:
    8 D1:B88F 06 00 D4 -  	.dl decompress_queue_start + 6  ;points to sprite being currently decompressed (parameters byte)
    9 D1:B892 -  -  -  -  
   10 D1:B892 -  -  -  -  decompress_head_ptr: ;points to where next element will be added to queue
   11 D1:B892 00 00 D4 -  	.dl decompress_queue_start
   12 D1:B895 -  -  -  -  
   13 D1:B895 -  -  -  -  ;Decompress queue format
   14 D1:B895 -  -  -  -  ; .dl Sprite data ptr, decompress location, parameters (7 = fast, 6 = offset, 5 = flip, 4 =started decompressing 3 = finished decompressing )
   15 D1:B895 -  -  -  -  
   16 D1:B895 -  -  -  -  setup_decompress_queue: ;clears memory in queue
   17 D1:B895 3E FF -  -  	ld a,$FF
   18 D1:B897 01 C0 01 00 	ld bc, 7*64
   19 D1:B89B 21 00 00 D4 	ld hl, decompress_queue_start
   20 D1:B89F 22 92 B8 D1 	ld (decompress_head_ptr),hl 
   21 D1:B8A3 CD E0 10 02 	call _MemSet
   22 D1:B8A7 21 06 00 D4 	ld hl, decompress_queue_start + 6
   23 D1:B8AB 22 8F B8 D1 	ld (decompress_tail_ptr),hl 
   24 D1:B8AF 3E 00 -  -  	ld a,0 
   25 D1:B8B1 32 BA B9 D1 	ld (last_decompressed_cam_pos),a
   26 D1:B8B5 C9 -  -  -  	ret 
   27 D1:B8B6 -  -  -  -  
   28 D1:B8B6 -  -  -  -  ;bc = sprite data ptr, de = decompress location, a = params
   29 D1:B8B6 -  -  -  -  ;adds sprite to queue
   30 D1:B8B6 -  -  -  -  add_to_decompress_queue:
   31 D1:B8B6 2A 92 B8 D1 	ld hl, (decompress_head_ptr)
   32 D1:B8BA ED 0F -  -  	ld (hl), bc 
   33 D1:B8BC 23 -  -  -  	inc hl
   34 D1:B8BD 23 -  -  -  	inc hl 
   35 D1:B8BE 23 -  -  -  	inc hl 
   36 D1:B8BF -  -  -  -  
   37 D1:B8BF ED 1F -  -  	ld (hl),de
   38 D1:B8C1 -  -  -  -  	
   39 D1:B8C1 23 -  -  -  	inc hl 
   40 D1:B8C2 23 -  -  -  	inc hl 
   41 D1:B8C3 23 -  -  -  	inc hl 
   42 D1:B8C4 -  -  -  -  	
   43 D1:B8C4 77 -  -  -  	ld (hl), a 
   44 D1:B8C5 23 -  -  -  	inc hl ;start of next element 
   45 D1:B8C6 -  -  -  -  	
   46 D1:B8C6 E5 -  -  -  	push hl 
   47 D1:B8C7 11 C0 01 D4 	ld de, decompress_queue_end
   48 D1:B8CB 37 -  -  -  	scf
   49 D1:B8CC 3F -  -  -  	ccf
   50 D1:B8CD ED 52 -  -  	sbc hl,de ;check if we have reached end of queue to wrap around
   51 D1:B8CF E1 -  -  -  	pop hl
   52 D1:B8D0 CA D9 B8 D1 	jp z, a2dq_back_to_start
   53 D1:B8D4 -  -  -  -  	
   54 D1:B8D4 22 92 B8 D1 	ld (decompress_head_ptr),hl
   55 D1:B8D8 -  -  -  -  	;ld a,$AB ;testing
   56 D1:B8D8 -  -  -  -  	;call write_a_to_ram
   57 D1:B8D8 C9 -  -  -  	ret
   58 D1:B8D9 -  -  -  -  	
   59 D1:B8D9 -  -  -  -  a2dq_back_to_start:
   60 D1:B8D9 -  -  -  -  	;ld a,$AA ;testing
   61 D1:B8D9 -  -  -  -  	;call write_a_to_ram
   62 D1:B8D9 -  -  -  -  
   63 D1:B8D9 21 00 00 D4 	ld hl,decompress_queue_start
   64 D1:B8DD 22 92 B8 D1 	ld (decompress_head_ptr),hl
   65 D1:B8E1 C9 -  -  -  	ret
   66 D1:B8E2 -  -  -  -  	
   67 D1:B8E2 -  -  -  -  	
   68 D1:B8E2 -  -  -  -  
   69 D1:B8E2 -  -  -  -  
   70 D1:B8E2 -  -  -  -  ;Runs after frame has been rendered. Checks through decompress queue and continues sprite decompressions
   71 D1:B8E2 -  -  -  -  	;if has ended, return. at end of queue
   72 D1:B8E2 -  -  -  -  	;if not started, begin decompression and set start flag
   73 D1:B8E2 -  -  -  -  	;if has started, but not ended, continue decompression 
   74 D1:B8E2 -  -  -  -  	;if started and ended, move to next element 
   75 D1:B8E2 -  -  -  -  continue_decompressions:
   76 D1:B8E2 2A 8F B8 D1 	ld hl, (decompress_tail_ptr)
   77 D1:B8E6 7E -  -  -  	ld a,(hl) ;decompress params 
   78 D1:B8E7 CB 5F -  -  	bit 3,a 
   79 D1:B8E9 C0 -  -  -  	ret nz ;sprite is done decompressing, at end of queue 
   80 D1:B8EA -  -  -  -  	
   81 D1:B8EA -  -  -  -  	;testing
   82 D1:B8EA -  -  -  -  	;push af
   83 D1:B8EA -  -  -  -  	;ld a,$55
   84 D1:B8EA -  -  -  -  	;call write_a_to_ram
   85 D1:B8EA -  -  -  -  	;pop af
   86 D1:B8EA -  -  -  -  	
   87 D1:B8EA -  -  -  -  	
   88 D1:B8EA -  -  -  -  	
   89 D1:B8EA -  -  -  -  	
   90 D1:B8EA CB 67 -  -  	bit 4,a
   91 D1:B8EC CA 28 B9 D1 	jp z, cd_begin_decompression
   92 D1:B8F0 -  -  -  -  	
   93 D1:B8F0 -  -  -  -  	;has started,not ended 
   94 D1:B8F0 CD A4 B2 D1 	call sdcomp_continue 
   95 D1:B8F4 B7 -  -  -  	or a 
   96 D1:B8F5 C0 -  -  -  	ret nz ;sprite not yet done decompressing 
   97 D1:B8F6 -  -  -  -  
   98 D1:B8F6 -  -  -  -  cd_done_decompressing:
   99 D1:B8F6 -  -  -  -  	;sprite finished decompressing
  100 D1:B8F6 2A 8F B8 D1 	ld hl, (decompress_tail_ptr)	
  101 D1:B8FA CB DE -  -  	set 3,(hl) ;set finished flag
  102 D1:B8FC 11 07 00 00 	ld de,7 
  103 D1:B900 19 -  -  -  	add hl,de ;points to next element in queue
  104 D1:B901 -  -  -  -  	
  105 D1:B901 E5 -  -  -  	push hl 
  106 D1:B902 11 C0 01 D4 	ld de, decompress_queue_end
  107 D1:B906 37 -  -  -  	scf
  108 D1:B907 3F -  -  -  	ccf
  109 D1:B908 ED 52 -  -  	sbc hl,de ;check if need to wrap to start of queue
  110 D1:B90A E1 -  -  -  	pop hl
  111 D1:B90B D2 17 B9 D1 	jp nc, cd_back_to_start
  112 D1:B90F 22 8F B8 D1 	ld (decompress_tail_ptr),hl
  113 D1:B913 C3 E2 B8 D1 	jp continue_decompressions ;Move on to next sprite 
  114 D1:B917 -  -  -  -  	
  115 D1:B917 -  -  -  -  cd_back_to_start:
  116 D1:B917 21 00 00 D4 	ld hl,decompress_queue_start
  117 D1:B91B 11 06 00 00 	ld de,6 ;tail points to the parameters byte
  118 D1:B91F 19 -  -  -  	add hl,de
  119 D1:B920 22 8F B8 D1 	ld (decompress_tail_ptr),hl
  120 D1:B924 C3 E2 B8 D1 	jp continue_decompressions ;Move on to next sprite 
  121 D1:B928 -  -  -  -  
  122 D1:B928 -  -  -  -  cd_begin_decompression:
  123 D1:B928 -  -  -  -  
  124 D1:B928 -  -  -  -  	;testing
  125 D1:B928 -  -  -  -  	;push af 
  126 D1:B928 -  -  -  -  	;ld a,$AA
  127 D1:B928 -  -  -  -  	;call write_a_to_ram
  128 D1:B928 -  -  -  -  	;pop af
  129 D1:B928 -  -  -  -  	
  130 D1:B928 -  -  -  -  	;setup and begin decompressing
  131 D1:B928 CB E6 -  -  	set 4,(hl) ;set start flag
  132 D1:B92A F5 -  -  -  	push af 
  133 D1:B92B CB 7F -  -  	bit 7,a 
  134 D1:B92D C4 D2 B4 D1 	call nz, sdcomp_set_fast
  135 D1:B931 F1 -  -  -  	pop af 
  136 D1:B932 -  -  -  -  	
  137 D1:B932 F5 -  -  -  	push af 
  138 D1:B933 CB 7F -  -  	bit 7,a 
  139 D1:B935 CC E1 B4 D1 	call z, sdcomp_reset_fast
  140 D1:B939 F1 -  -  -  	pop af 
  141 D1:B93A -  -  -  -  	
  142 D1:B93A F5 -  -  -  	push af 
  143 D1:B93B CB 77 -  -  	bit 6,a 
  144 D1:B93D C4 62 B4 D1 	call nz, sdcomp_set_offset
  145 D1:B941 F1 -  -  -  	pop af 
  146 D1:B942 -  -  -  -  	
  147 D1:B942 F5 -  -  -  	push af 
  148 D1:B943 CB 77 -  -  	bit 6,a 
  149 D1:B945 CC 73 B4 D1 	call z, sdcomp_reset_offset
  150 D1:B949 F1 -  -  -  	pop af 
  151 D1:B94A -  -  -  -  	
  152 D1:B94A F5 -  -  -  	push af 
  153 D1:B94B CB 6F -  -  	bit 5,a 
  154 D1:B94D C4 84 B4 D1 	call nz, sdcomp_set_flip
  155 D1:B951 F1 -  -  -  	pop af 
  156 D1:B952 -  -  -  -  	
  157 D1:B952 F5 -  -  -  	push af 
  158 D1:B953 CB 6F -  -  	bit 5,a 
  159 D1:B955 CC AB B4 D1 	call z, sdcomp_reset_flip
  160 D1:B959 F1 -  -  -  	pop af 
  161 D1:B95A -  -  -  -  	
  162 D1:B95A 2A 8F B8 D1 	ld hl, (decompress_tail_ptr) ;may be unnessecary
  163 D1:B95E -  -  -  -  	
  164 D1:B95E 2B -  -  -  	dec hl 
  165 D1:B95F 2B -  -  -  	dec hl 
  166 D1:B960 2B -  -  -  	dec hl 
  167 D1:B961 ED 17 -  -  	ld de,(hl) ;load decompress location
  168 D1:B963 -  -  -  -  
  169 D1:B963 2B -  -  -  	dec hl 
  170 D1:B964 2B -  -  -  	dec hl 
  171 D1:B965 2B -  -  -  	dec hl 
  172 D1:B966 ED 27 -  -  	ld hl,(hl) ;load sprite data ptr
  173 D1:B968 -  -  -  -  
  174 D1:B968 CD 07 B1 D1 	call sprite_decompress
  175 D1:B96C B7 -  -  -  	or a 
  176 D1:B96D C0 -  -  -  	ret nz ;sprite not yet done decompressing 
  177 D1:B96E C3 F6 B8 D1 	jp cd_done_decompressing
  178 D1:B972 -  -  -  -  
  179 D1:B972 -  -  -  -  
  180 D1:B972 -  -  -  -  ;Checks to see if cam has moved to a new frame and decompressions need to be added to queue
  181 D1:B972 -  -  -  -  check_for_decompress_calls:
  182 D1:B972 3A BA B9 D1 	ld a, (last_decompressed_cam_pos)
  183 D1:B976 47 -  -  -  	ld b,a ;put last decompressed pos in b
  184 D1:B977 3A D7 AB D1 	ld a, (cam_pos + 1) ;Current frame cam is in
  185 D1:B97B 32 BA B9 D1 	ld (last_decompressed_cam_pos),a ;store this frame as the last decompressed frame 
  186 D1:B97F -  -  -  -  	;need to check if cam has moved up or down since last time
  187 D1:B97F B8 -  -  -  	cp a,b 
  188 D1:B980 -  -  -  -  	
  189 D1:B980 -  -  -  -  	
  190 D1:B980 C8 -  -  -  	ret z ;if same, no new things to add to queue 
  191 D1:B981 D2 8D B9 D1 	jp nc, cfdc_cam_move_up ;camera has moved up since last time 
  192 D1:B985 -  -  -  -  	
  193 D1:B985 -  -  -  -  	;cam has moved down since last time 
  194 D1:B985 21 7F C8 D1 	ld hl, decompress_calls_table_down
  195 D1:B989 C3 91 B9 D1 	jp cfdc_add_calls_to_queue
  196 D1:B98D -  -  -  -  	
  197 D1:B98D -  -  -  -  	
  198 D1:B98D -  -  -  -  cfdc_cam_move_up:
  199 D1:B98D 21 71 C7 D1 	ld hl, decompress_calls_table_up
  200 D1:B991 -  -  -  -  
  201 D1:B991 -  -  -  -  	;a = cam frame, hl = decompress call table (up or down)
  202 D1:B991 -  -  -  -  cfdc_add_calls_to_queue:
  203 D1:B991 -  -  -  -  
  204 D1:B991 -  -  -  -  	;call write_a_to_ram
  205 D1:B991 -  -  -  -  
  206 D1:B991 01 00 00 00 	ld bc,0
  207 D1:B995 4F -  -  -  	ld c,a
  208 D1:B996 09 -  -  -  	add hl,bc 
  209 D1:B997 09 -  -  -  	add hl,bc 
  210 D1:B998 09 -  -  -  	add hl,bc 
  211 D1:B999 ED 27 -  -  	ld hl,(hl) ;hl now points to correct decompress frame 
  212 D1:B99B -  -  -  -  cfdc_direct_add_decompress_frame:
  213 D1:B99B -  -  -  -  
  214 D1:B99B 08 -  -  -  	ex af,af' ;'
  215 D1:B99C 7E -  -  -  	ld a,(hl) ;a' holds num elements 
  216 D1:B99D -  -  -  -  	
  217 D1:B99D -  -  -  -  	;call write_a_to_ram
  218 D1:B99D -  -  -  -  	
  219 D1:B99D -  -  -  -  	;call prgmpause
  220 D1:B99D -  -  -  -  	
  221 D1:B99D 3C -  -  -  	inc a ;to be decd later
  222 D1:B99E 08 -  -  -  	ex af,af' ;'
  223 D1:B99F -  -  -  -  	
  224 D1:B99F 23 -  -  -  	inc hl ;points to first sprite data 
  225 D1:B9A0 -  -  -  -  cfdc_add_to_queue_loop:
  226 D1:B9A0 08 -  -  -  	ex af,af' ;'
  227 D1:B9A1 -  -  -  -  	;call write_a_to_ram
  228 D1:B9A1 3D -  -  -  	dec a ;account for cases where frame has 0 elements 
  229 D1:B9A2 C8 -  -  -  	ret z
  230 D1:B9A3 08 -  -  -  	ex af,af' ;'
  231 D1:B9A4 ED 07 -  -  	ld bc ,(hl) ;load sprite data 
  232 D1:B9A6 23 -  -  -  	inc hl 
  233 D1:B9A7 23 -  -  -  	inc hl
  234 D1:B9A8 23 -  -  -  	inc hl 
  235 D1:B9A9 ED 17 -  -  	ld de,(hl) ;load decomp location 
  236 D1:B9AB 23 -  -  -  	inc hl 
  237 D1:B9AC 23 -  -  -  	inc hl
  238 D1:B9AD 23 -  -  -  	inc hl 
  239 D1:B9AE 7E -  -  -  	ld a,(hl) ;ld params
  240 D1:B9AF 23 -  -  -  	inc hl 
  241 D1:B9B0 E5 -  -  -  	push hl
  242 D1:B9B1 CD B6 B8 D1 	call add_to_decompress_queue
  243 D1:B9B5 E1 -  -  -  	pop hl
  244 D1:B9B6 C3 A0 B9 D1 	jp cfdc_add_to_queue_loop
  245 D1:B9BA -  -  -  -  	
  246 D1:B9BA -  -  -  -  	
  247 D1:B9BA -  -  -  -  
  248 D1:B9BA -  -  -  -  
  249 D1:B9BA -  -  -  -  last_decompressed_cam_pos:
  250 D1:B9BA 00 -  -  -  	.db 0 ;camera frame last time checking for decomp was called 
  251 D1:B9BB -  -  -  -  	
  252 D1:B9BB -  -  -  -  	
  253 D1:B9BB -  -  -  -  
  254 D1:B9BB -  -  -  -  
  255 D1:B9BB -  -  -  -  
  256 D1:B9BB -  -  -  -  
  257 D1:B9BB -  -  -  -  
  258 D1:B9BB -  -  -  -  
  259 D1:B9BB -  -  -  -  
  260 D1:B9BB -  -  -  -  
  261 D1:B9BB -  -  -  -  
  262 D1:B9BB -  -  -  -  
  263 D1:B9BB -  -  -  -  
  264 D1:B9BB -  -  -  -  
  265 D1:B9BB -  -  -  -  
  266 D1:B9BB -  -  -  -  
  267 D1:B9BB -  -  -  -  
  268 D1:B9BB -  -  -  -  
  269 D1:B9BB -  -  -  -  
  270 D1:B9BB -  -  -  -  
  271 D1:B9BB -  -  -  -  
  272 D1:B9BB -  -  -  -  
  273 D1:B9BB -  -  -  -  
  274 D1:B9BB -  -  -  -  
  275 D1:B9BB -  -  -  -  
  276 D1:B9BB -  -  -  -  
  277 D1:B9BB -  -  -  -  
Listing for file "ascent.asm"
  555 D1:B9BB -  -  -  -  #include "getInputs.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\getInputs.txt"
    1 D1:B9BB -  -  -  -  
    2 D1:B9BB -  -  -  -  
    3 D1:B9BB -  -  -  -  
    4 D1:B9BB -  -  -  -  get_inputs:
    5 D1:B9BB 21 00 00 F5 	ld	hl,DI_Mode		; register for keypad mode
    6 D1:B9BF 36 02 -  -  	ld	(hl),2			; set single scan mode
    7 D1:B9C1 -  -  -  -  
    8 D1:B9C1 AF -  -  -  	xor	a,a
    9 D1:B9C2 -  -  -  -  scan_wait:
   10 D1:B9C2 BE -  -  -  	cp	a,(hl)			; wait for keypad idle mode
   11 D1:B9C3 20 FD -  -  	jr	nz,scan_wait
   12 D1:B9C5 -  -  -  -  	
   13 D1:B9C5 -  -  -  -  	; https://wikiti.brandonw.net/index.php?title=84PCE:Ports:A000
   14 D1:B9C5 -  -  -  -  	
   15 D1:B9C5 3A 1E 00 F5 	ld	a,(kbdG7) ; $F5001E
   16 D1:B9C9 CB 5F -  -   	bit	kbitUp,a
   17 D1:B9CB F5 -  -  -  	push af 
   18 D1:B9CC C2 F9 B9 D1 	jp nz, input_cam_up
   19 D1:B9D0 F1 -  -  -  	pop af 
   20 D1:B9D1 -  -  -  -  	
   21 D1:B9D1 CB 47 -  -  	bit	kbitDown,a
   22 D1:B9D3 C2 19 BA D1 	jp nz, input_cam_down
   23 D1:B9D7 -  -  -  -  
   24 D1:B9D7 -  -  -  -  
   25 D1:B9D7 3A 1C 00 F5 	ld a,(kbdG6)
   26 D1:B9DB CB 77 -  -  	bit kbitClear,a
   27 D1:B9DD C2 69 AB D1 	jp nz,exit_prgm
   28 D1:B9E1 -  -  -  -  	
   29 D1:B9E1 3A 1A 00 F5 	ld a,(kbdG5)
   30 D1:B9E5 CB 57 -  -  	bit kbit6,a 
   31 D1:B9E7 C4 60 BA D1 	call nz, charge_jump_right
   32 D1:B9EB -  -  -  -  	
   33 D1:B9EB 3A 16 00 F5 	ld a,(kbdG3)
   34 D1:B9EF CB 57 -  -  	bit kbit4,a 
   35 D1:B9F1 C4 39 BA D1 	call nz, charge_jump_left
   36 D1:B9F5 -  -  -  -  	
   37 D1:B9F5 -  -  -  -  
   38 D1:B9F5 C3 1B A9 D1 	jp get_inputs_return
   39 D1:B9F9 -  -  -  -  	
   40 D1:B9F9 -  -  -  -  	
   41 D1:B9F9 -  -  -  -  input_cam_up:
   42 D1:B9F9 -  -  -  -  	;Move cam
   43 D1:B9F9 2A D6 AB D1 	ld hl,(cam_pos)
   44 D1:B9FD -  -  -  -  	
   45 D1:B9FD E5 -  -  -  	push hl 
   46 D1:B9FE 01 C4 09 00 	ld bc,2500
   47 D1:BA02 ED 42 -  -  	sbc hl,bc 
   48 D1:BA04 E1 -  -  -  	pop hl 
   49 D1:BA05 D2 1B A9 D1 	jp nc, get_inputs_return
   50 D1:BA09 -  -  -  -  	
   51 D1:BA09 23 -  -  -  	inc hl
   52 D1:BA0A 23 -  -  -  	inc hl
   53 D1:BA0B 23 -  -  -  	inc hl
   54 D1:BA0C 23 -  -  -  	inc hl
   55 D1:BA0D 23 -  -  -  	inc hl
   56 D1:BA0E 23 -  -  -  	inc hl
   57 D1:BA0F 23 -  -  -  	inc hl
   58 D1:BA10 23 -  -  -  	inc hl
   59 D1:BA11 -  -  -  -  	
   60 D1:BA11 22 D6 AB D1 	ld (cam_pos),hl
   61 D1:BA15 C3 1B A9 D1 	jp get_inputs_return
   62 D1:BA19 -  -  -  -  
   63 D1:BA19 -  -  -  -  
   64 D1:BA19 -  -  -  -  input_cam_down:
   65 D1:BA19 -  -  -  -  	;Move cam
   66 D1:BA19 2A D6 AB D1 	ld hl,(cam_pos)
   67 D1:BA1D -  -  -  -  	
   68 D1:BA1D -  -  -  -  	
   69 D1:BA1D E5 -  -  -  	push hl 
   70 D1:BA1E 01 0A 00 00 	ld bc,10 
   71 D1:BA22 ED 42 -  -  	sbc hl,bc 
   72 D1:BA24 E1 -  -  -  	pop hl 
   73 D1:BA25 DA 1B A9 D1 	jp c, get_inputs_return
   74 D1:BA29 -  -  -  -  	
   75 D1:BA29 2B -  -  -  	dec hl
   76 D1:BA2A 2B -  -  -  	dec hl
   77 D1:BA2B 2B -  -  -  	dec hl
   78 D1:BA2C 2B -  -  -  	dec hl
   79 D1:BA2D 2B -  -  -  	dec hl
   80 D1:BA2E 2B -  -  -  	dec hl
   81 D1:BA2F 2B -  -  -  	dec hl
   82 D1:BA30 2B -  -  -  	dec hl
   83 D1:BA31 -  -  -  -  	
   84 D1:BA31 -  -  -  -  	
   85 D1:BA31 -  -  -  -  	
   86 D1:BA31 -  -  -  -  	
   87 D1:BA31 -  -  -  -  	
   88 D1:BA31 22 D6 AB D1 	ld (cam_pos),hl
   89 D1:BA35 C3 1B A9 D1 	jp get_inputs_return
   90 D1:BA39 -  -  -  -  	
   91 D1:BA39 -  -  -  -  	
   92 D1:BA39 -  -  -  -  	
Listing for file "ascent.asm"
  556 D1:BA39 -  -  -  -  #include "PlayerController.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\PlayerController.txt"
    1 D1:BA39 -  -  -  -  
    2 D1:BA39 -  -  -  -  
    3 D1:BA39 -  -  -  -  
    4 D1:BA39 -  -  -  -  charge_jump_left:
    5 D1:BA39 -  -  -  -  	;Decrease jump right strength if it > -127 
    6 D1:BA39 -  -  -  -  	;Increase jump up strength 
    7 D1:BA39 -  -  -  -  	;Do nothing if jump left timer is above max value 
    8 D1:BA39 3A 3D BE D1 	ld a,(player_flags)
    9 D1:BA3D CB FF -  -  	set 7, a 
   10 D1:BA3F 32 3D BE D1 	ld (player_flags),a 
   11 D1:BA43 -  -  -  -  	
   12 D1:BA43 3A 2A BE D1 	ld a,(jump_charge_timer)
   13 D1:BA47 FE 1E -  -  	cp timer_max_val
   14 D1:BA49 D2 5F BA D1 	jp nc, cjl_skip
   15 D1:BA4D 3A 29 BE D1 	ld a,(jump_strength_right)
   16 D1:BA51 3D -  -  -  	dec a 
   17 D1:BA52 32 29 BE D1 	ld (jump_strength_right),a
   18 D1:BA56 3A 28 BE D1 	ld a,(jump_strength_up)
   19 D1:BA5A 3C -  -  -  	inc a 
   20 D1:BA5B 32 28 BE D1 	ld (jump_strength_up),a
   21 D1:BA5F -  -  -  -  
   22 D1:BA5F -  -  -  -  cjl_skip:
   23 D1:BA5F C9 -  -  -  	ret 
   24 D1:BA60 -  -  -  -  
   25 D1:BA60 -  -  -  -  
   26 D1:BA60 -  -  -  -  charge_jump_right:
   27 D1:BA60 -  -  -  -  	;Increase jump right strength if it < 127 
   28 D1:BA60 -  -  -  -  	;Increase jump up strength 
   29 D1:BA60 -  -  -  -  	;Do nothing if jump  timer is above max value 
   30 D1:BA60 -  -  -  -  	
   31 D1:BA60 3A 3D BE D1 	ld a,(player_flags)
   32 D1:BA64 CB FF -  -  	set 7, a 
   33 D1:BA66 32 3D BE D1 	ld (player_flags),a 
   34 D1:BA6A 3A 2A BE D1 	ld a,(jump_charge_timer)
   35 D1:BA6E FE 1E -  -  	cp timer_max_val
   36 D1:BA70 D2 86 BA D1 	jp nc, cjr_skip
   37 D1:BA74 3A 29 BE D1 	ld a,(jump_strength_right)
   38 D1:BA78 3C -  -  -  	inc a
   39 D1:BA79 32 29 BE D1 	ld (jump_strength_right),a
   40 D1:BA7D 3A 28 BE D1 	ld a,(jump_strength_up)
   41 D1:BA81 3C -  -  -  	inc a 
   42 D1:BA82 32 28 BE D1 	ld (jump_strength_up),a	
   43 D1:BA86 -  -  -  -  cjr_skip:
   44 D1:BA86 C9 -  -  -  	ret 
   45 D1:BA87 -  -  -  -  
   46 D1:BA87 -  -  -  -  
   47 D1:BA87 -  -  -  -  
   48 D1:BA87 -  -  -  -  player_update: ;Should be called after inputs
   49 D1:BA87 -  -  -  -  
   50 D1:BA87 3A 3D BE D1 	ld a,(player_flags)
   51 D1:BA8B CB 7F -  -  	bit 7,a ;jump key  flag 
   52 D1:BA8D CA A4 BA D1 	jp z, pu_try_jump
   53 D1:BA91 -  -  -  -  	
   54 D1:BA91 CB BF -  -  	res 7,a ;Reset jump hold check 
   55 D1:BA93 32 3D BE D1 	ld (player_flags),a 
   56 D1:BA97 -  -  -  -  	;Jump key is held, charge jump
   57 D1:BA97 3A 2A BE D1 	ld a,(jump_charge_timer)
   58 D1:BA9B 3C -  -  -  	inc a 
   59 D1:BA9C 32 2A BE D1 	ld (jump_charge_timer),a
   60 D1:BAA0 -  -  -  -  	;Jumps can be charged in air, for immediate jump
   61 D1:BAA0 -  -  -  -  	
   62 D1:BAA0 C3 40 BB D1 	jp pu_physics
   63 D1:BAA4 -  -  -  -  	
   64 D1:BAA4 -  -  -  -  pu_try_jump:
   65 D1:BAA4 -  -  -  -  	;no jump keys held this frame. If jump timer > 0 and on ground, then jump 
   66 D1:BAA4 -  -  -  -  	
   67 D1:BAA4 CB 77 -  -  	bit 6,a ;ground check 
   68 D1:BAA6 CA 32 BB D1 	jp z, pu_no_jump ;if not on ground, cant jump
   69 D1:BAAA 3A 2A BE D1 	ld a,(jump_charge_timer)
   70 D1:BAAE B7 -  -  -  	or a 
   71 D1:BAAF CA 32 BB D1 	jp z,pu_no_jump ;jump timers are 0 = no jump
   72 D1:BAB3 -  -  -  -  	
   73 D1:BAB3 FE 08 -  -  	cp 8;if timer < 8 set to min strength 
   74 D1:BAB5 D2 E0 BA D1 	jp nc, pu_jump_notmin
   75 D1:BAB9 -  -  -  -  	
   76 D1:BAB9 -  -  -  -  	;This is the minimum jump player can do 
   77 D1:BAB9 3A 29 BE D1 	ld a,(jump_strength_right)
   78 D1:BABD CB 7F -  -  	bit 7,a 
   79 D1:BABF C2 CE BA D1 	jp nz, pu_min_jump_left 
   80 D1:BAC3 B7 -  -  -  	or a 
   81 D1:BAC4 CA D0 BA D1 	jp z, pu_min_jump_up 
   82 D1:BAC8 3E 08 -  -  	ld a,8 
   83 D1:BACA C3 D0 BA D1 	jp pu_min_jump_up
   84 D1:BACE -  -  -  -  pu_min_jump_left:
   85 D1:BACE 3E F8 -  -  	ld a, -8
   86 D1:BAD0 -  -  -  -  pu_min_jump_up:
   87 D1:BAD0 32 29 BE D1 	ld (jump_strength_right),a 
   88 D1:BAD4 -  -  -  -  	
   89 D1:BAD4 3E 0A -  -  	ld a,10 
   90 D1:BAD6 32 28 BE D1 	ld (jump_strength_up),a 
   91 D1:BADA -  -  -  -  	
   92 D1:BADA -  -  -  -  	
   93 D1:BADA 3E 55 -  -  	ld a,$55
   94 D1:BADC CD A3 AB D1 	call write_a_to_ram
   95 D1:BAE0 -  -  -  -  	
   96 D1:BAE0 -  -  -  -  	;Player is on ground and should execute a jump 
   97 D1:BAE0 -  -  -  -  pu_jump_notmin:
   98 D1:BAE0 -  -  -  -  	
   99 D1:BAE0 21 00 00 00 	ld hl,0 
  100 D1:BAE4 3A 28 BE D1 	ld a,(jump_strength_up)
  101 D1:BAE8 6F -  -  -  	ld l,a
  102 D1:BAE9 CD A3 AB D1 	call write_a_to_ram
  103 D1:BAED -  -  -  -  	
  104 D1:BAED CB 25 -  -  	sla l ;mult by 2 
  105 D1:BAEF CB 14 -  -  	rl h 
  106 D1:BAF1 CB 25 -  -  	sla l ;mult by 2 
  107 D1:BAF3 CB 14 -  -  	rl h 
  108 D1:BAF5 -  -  -  -  
  109 D1:BAF5 22 34 BE D1 	ld (player_y_vel),hl 
  110 D1:BAF9 CD B2 AB D1 	call write_hl_to_ram
  111 D1:BAFD -  -  -  -  	
  112 D1:BAFD 3A 29 BE D1 	ld a,(jump_strength_right)
  113 D1:BB01 CD A3 AB D1 	call write_a_to_ram
  114 D1:BB05 CB 7F -  -  	bit 7, a 
  115 D1:BB07 C2 13 BB D1 	jp nz, pu_left_jump 
  116 D1:BB0B -  -  -  -  	;right jump 
  117 D1:BB0B 21 00 00 00 	ld hl,0
  118 D1:BB0F C3 17 BB D1 	jp pu_jump_cont
  119 D1:BB13 -  -  -  -  pu_left_jump:	
  120 D1:BB13 21 FF FF FF 	ld hl, $ffffff ;makes x vel negative 
  121 D1:BB17 -  -  -  -  pu_jump_cont:
  122 D1:BB17 6F -  -  -  	ld l,a 
  123 D1:BB18 CB 25 -  -  	sla l ;mult by 2 
  124 D1:BB1A CB 14 -  -  	rl h 
  125 D1:BB1C CB 25 -  -  	sla l ;mult by 2 
  126 D1:BB1E CB 14 -  -  	rl h 
  127 D1:BB20 -  -  -  -  	
  128 D1:BB20 22 31 BE D1 	ld (player_x_vel),hl 
  129 D1:BB24 CD B2 AB D1 	call write_hl_to_ram
  130 D1:BB28 -  -  -  -  	;Clear ground flag 
  131 D1:BB28 3A 3D BE D1 	ld a,(player_flags)
  132 D1:BB2C CB B7 -  -  	res 6, a 
  133 D1:BB2E 32 3D BE D1 	ld (player_flags),a 
  134 D1:BB32 -  -  -  -  	
  135 D1:BB32 -  -  -  -  pu_no_jump:	
  136 D1:BB32 -  -  -  -  	;reset jump timers 
  137 D1:BB32 3E 00 -  -  	ld a,0 
  138 D1:BB34 32 2A BE D1 	ld (jump_charge_timer),a 
  139 D1:BB38 32 29 BE D1 	ld (jump_strength_right),a 
  140 D1:BB3C 32 28 BE D1 	ld (jump_strength_up),a
  141 D1:BB40 -  -  -  -  	
  142 D1:BB40 -  -  -  -  	
  143 D1:BB40 -  -  -  -  	
  144 D1:BB40 -  -  -  -  	
  145 D1:BB40 -  -  -  -  	
  146 D1:BB40 -  -  -  -  	
  147 D1:BB40 -  -  -  -  pu_physics:
  148 D1:BB40 -  -  -  -  
  149 D1:BB40 -  -  -  -  	;Execute player physics update and check for collisions 
  150 D1:BB40 -  -  -  -  	;Run multiple times, 4 steps per frame? 
  151 D1:BB40 -  -  -  -  	;Move up first, then check collision, then move side and check again 
  152 D1:BB40 -  -  -  -  
  153 D1:BB40 3E 10 -  -  	ld a,16 ;num physics loops 
  154 D1:BB42 32 47 BB D1 	ld (pu_physics_count),a 
  155 D1:BB46 -  -  -  -  	
  156 D1:BB46 -  -  -  -  pu_physics_loop:
  157 D1:BB46 -  -  -  -  
  158 D1:BB46 -  -  -  -  pu_physics_count .equ $ + 1
  159 D1:BB46 3E 00 -  -  	ld a,0
  160 D1:BB48 3D -  -  -  	dec a 
  161 D1:BB49 CA DB BB D1 	jp z, pu_physics_end
  162 D1:BB4D 32 47 BB D1 	ld (pu_physics_count),a
  163 D1:BB51 -  -  -  -  	
  164 D1:BB51 3A 3D BE D1 	ld a,(player_flags)
  165 D1:BB55 -  -  -  -  	
  166 D1:BB55 CB AF -  -  	res 5,a ;reset in semisolid flag 
  167 D1:BB57 32 3D BE D1 	ld (player_flags),a 
  168 D1:BB5B CB 77 -  -  	bit 6,a 
  169 D1:BB5D C2 46 BB D1 	jp nz,pu_physics_loop ;If on ground, no need to do physics 
  170 D1:BB61 -  -  -  -  	
  171 D1:BB61 -  -  -  -  	
  172 D1:BB61 -  -  -  -  
  173 D1:BB61 -  -  -  -  ;Y POS UPDATE
  174 D1:BB61 -  -  -  -  
  175 D1:BB61 2A 34 BE D1 	ld hl, (player_y_vel) 	
  176 D1:BB65 EB -  -  -  	ex de,hl 
  177 D1:BB66 2A 2E BE D1 	ld hl, (player_y_pos) 
  178 D1:BB6A 19 -  -  -  	add hl,de ;add y vel to y pos 
  179 D1:BB6B 22 2E BE D1 	ld (player_y_pos),hl 
  180 D1:BB6F -  -  -  -  	
  181 D1:BB6F -  -  -  -  	;check for vertical collisions here 
  182 D1:BB6F 3E DA -  -  	ld a,%11011010;jp c
  183 D1:BB71 32 61 BD D1 	ld (collision_check_vertical),a
  184 D1:BB75 CD C4 BC D1 	call check_collisions
  185 D1:BB79 -  -  -  -  	
  186 D1:BB79 -  -  -  -  	;Temp ground check
  187 D1:BB79 2A 2E BE D1 	ld hl, (player_y_pos) 
  188 D1:BB7D 11 00 20 00 	ld de, $002000
  189 D1:BB81 ED 52 -  -  	sbc hl,de 
  190 D1:BB83 D2 99 BB D1 	jp nc, pu_update_x_pos 
  191 D1:BB87 -  -  -  -  
  192 D1:BB87 -  -  -  -  pu_ground_hit:
  193 D1:BB87 21 00 20 00 	ld hl,$002000 ;TEMP 
  194 D1:BB8B 22 2E BE D1 	ld (player_y_pos),hl 
  195 D1:BB8F 3A 3D BE D1 	ld a,(player_flags)
  196 D1:BB93 CB F7 -  -  	set 6,a 
  197 D1:BB95 32 3D BE D1 	ld (player_flags),a 
  198 D1:BB99 -  -  -  -  
  199 D1:BB99 -  -  -  -  pu_update_x_pos:
  200 D1:BB99 -  -  -  -  
  201 D1:BB99 -  -  -  -  ;X POS UPDATE
  202 D1:BB99 2A 31 BE D1 	ld hl, (player_x_vel) 
  203 D1:BB9D EB -  -  -  	ex de,hl 
  204 D1:BB9E 2A 2B BE D1 	ld hl, (player_x_pos) 
  205 D1:BBA2 19 -  -  -  	add hl,de ;add x vel to x pos 
  206 D1:BBA3 22 2B BE D1 	ld (player_x_pos),hl 
  207 D1:BBA7 -  -  -  -  	
  208 D1:BBA7 -  -  -  -  	;TODO check horizontal collisoins 
  209 D1:BBA7 3E D2 -  -  	ld a, %11010010 ;jp nc 
  210 D1:BBA9 32 61 BD D1 	ld (collision_check_vertical),a
  211 D1:BBAD CD C4 BC D1 	call check_collisions
  212 D1:BBB1 -  -  -  -  	
  213 D1:BBB1 -  -  -  -  	;Set previous position 
  214 D1:BBB1 2A 2E BE D1 	ld hl, (player_y_pos)
  215 D1:BBB5 22 3A BE D1 	ld (player_y_pos_prev), hl 
  216 D1:BBB9 2A 2B BE D1 	ld hl, (player_x_pos)
  217 D1:BBBD 22 37 BE D1 	ld (player_x_pos_prev), hl 
  218 D1:BBC1 -  -  -  -  	
  219 D1:BBC1 3A 3D BE D1 	ld a,(player_flags)
  220 D1:BBC5 CB 6F -  -  	bit 5,a ;in semisolid flag 
  221 D1:BBC7 CA D1 BB D1 	jp z, pu_no_semisolid
  222 D1:BBCB CB E7 -  -  	set 4,a	
  223 D1:BBCD C3 D3 BB D1 	jp pu_prev_semisolid
  224 D1:BBD1 -  -  -  -  pu_no_semisolid:
  225 D1:BBD1 CB A7 -  -  	res 4,a 
  226 D1:BBD3 -  -  -  -  pu_prev_semisolid:
  227 D1:BBD3 32 3D BE D1 	ld (player_flags),a 
  228 D1:BBD7 -  -  -  -  	
  229 D1:BBD7 C3 46 BB D1 	jp pu_physics_loop
  230 D1:BBDB -  -  -  -  	;Apply gravity and terminal v check after loop 
  231 D1:BBDB -  -  -  -  	
  232 D1:BBDB -  -  -  -  pu_physics_end:
  233 D1:BBDB -  -  -  -  	;Apply gravity 
  234 D1:BBDB 2A 34 BE D1 	ld hl,(player_y_vel)
  235 D1:BBDF CB 7C -  -  	bit 7,h  ;Check if vel is negative
  236 D1:BBE1 CA F0 BB D1 	jp z,pu_apply_gravity
  237 D1:BBE5 -  -  -  -  	
  238 D1:BBE5 E5 -  -  -  	push hl 
  239 D1:BBE6 -  -  -  -  	;check foor terminal vel 
  240 D1:BBE6 11 00 0F 00 	ld de, $000f00 ;15px per frame
  241 D1:BBEA 19 -  -  -  	add hl,de ;terminal V is negative
  242 D1:BBEB E1 -  -  -  	pop hl 
  243 D1:BBEC D2 FD BB D1 	jp nc, pu_terminal_vel
  244 D1:BBF0 -  -  -  -  pu_apply_gravity:
  245 D1:BBF0 11 0D 00 00 	ld de,13 ;GRAVITY CONSTANT
  246 D1:BBF4 37 -  -  -  	scf 
  247 D1:BBF5 3F -  -  -  	ccf ;reset carry flag 
  248 D1:BBF6 ED 52 -  -  	sbc hl,de 
  249 D1:BBF8 22 34 BE D1 	ld (player_y_vel),hl
  250 D1:BBFC -  -  -  -  
  251 D1:BBFC C9 -  -  -  	ret 
  252 D1:BBFD -  -  -  -  pu_terminal_vel:
  253 D1:BBFD 21 00 F1 FF 	ld hl, $fff100 ;-15 px per frame
  254 D1:BC01 22 34 BE D1 	ld (player_y_vel),hl
  255 D1:BC05 -  -  -  -  
  256 D1:BC05 C9 -  -  -  	ret 
  257 D1:BC06 -  -  -  -  
  258 D1:BC06 -  -  -  -  
  259 D1:BC06 -  -  -  -  
  260 D1:BC06 -  -  -  -  
  261 D1:BC06 -  -  -  -  player_draw:
  262 D1:BC06 -  -  -  -  ;Draw sprite and reset any flags 
  263 D1:BC06 -  -  -  -  
  264 D1:BC06 -  -  -  -  	;Todo Logic for choosing sprite index 
  265 D1:BC06 3E 00 -  -  	ld a,0 
  266 D1:BC08 32 BF BC D1 	ld (player_sprite_index),a 
  267 D1:BC0C 3E 13 -  -  	ld a, 19
  268 D1:BC0E 32 79 BC D1 	ld (pd_sprite_height_1),a 
  269 D1:BC12 32 98 BC D1 	ld (pd_sprite_height_2),a 
  270 D1:BC16 -  -  -  -  	
  271 D1:BC16 -  -  -  -  	
  272 D1:BC16 -  -  -  -  	;ld x pos
  273 D1:BC16 3A 2C BE D1 	ld a, (player_x_pos + 1) ;fullpixel byte
  274 D1:BC1A -  -  -  -  
  275 D1:BC1A CB 47 -  -  	bit 0, a ;least fullpixel bit 
  276 D1:BC1C CA 29 BC D1 	jp z, pd_even_px 
  277 D1:BC20 ED 5B 25 BE 
              D1 -  -  -  	ld de, (player_sprite_table_offset)
  278 D1:BC25 C3 2E BC D1 	jp pd_set_sprite_table
  279 D1:BC29 -  -  -  -  pd_even_px:
  280 D1:BC29 ED 5B 22 BE 
              D1 -  -  -  	ld de, (player_sprite_table)
  281 D1:BC2E -  -  -  -  pd_set_sprite_table:
  282 D1:BC2E ED 53 BB BC 
              D1 -  -  -  	ld (pd_sprite_table), de 
  283 D1:BC33 -  -  -  -  	
  284 D1:BC33 CB 3F -  -  	srl a ;div by 2
  285 D1:BC35 47 -  -  -  	ld b,a 
  286 D1:BC36 3A 2D BE D1 	ld a,(player_x_pos+2);MSB fullpixel 
  287 D1:BC3A 0F -  -  -  	rrca ;Move bit 0 to bit 7
  288 D1:BC3B B0 -  -  -  	or b 
  289 D1:BC3C -  -  -  -  
  290 D1:BC3C -  -  -  -  	
  291 D1:BC3C 32 B7 BC D1 	ld (pd_xpos_full),a 
  292 D1:BC40 -  -  -  -  	
  293 D1:BC40 -  -  -  -  	;call write_a_to_ram
  294 D1:BC40 -  -  -  -  	
  295 D1:BC40 21 00 00 00 	ld hl,0 
  296 D1:BC44 3A 30 BE D1 	ld a,(player_y_pos + 2) ;MSB
  297 D1:BC48 67 -  -  -  	ld h,a 
  298 D1:BC49 3A 2F BE D1 	ld a, (player_y_pos + 1) ;middle bit (fullpixel LSB)
  299 D1:BC4D 6F -  -  -  	ld l,a 
  300 D1:BC4E -  -  -  -  
  301 D1:BC4E EB -  -  -  	ex de,hl 
  302 D1:BC4F 2A D6 AB D1 	ld hl,(cam_pos)
  303 D1:BC53 CB 3C -  -  	srl h ;div by 2
  304 D1:BC55 CB 1D -  -  	rr l 
  305 D1:BC57 01 EF 00 00 	ld bc,239
  306 D1:BC5B 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of fg layer
  307 D1:BC5C 37 -  -  -  	scf 
  308 D1:BC5D 3F -  -  -  	ccf 
  309 D1:BC5E -  -  -  -  	;Uppermost vp line - player y  = lines below top to draw player 
  310 D1:BC5E ED 52 -  -  	sbc hl,de 
  311 D1:BC60 -  -  -  -  	;call write_hl_to_ram
  312 D1:BC60 DA 90 BC D1 	jp c, pd_top_cut
  313 D1:BC64 -  -  -  -  	
  314 D1:BC64 7C -  -  -  	ld a,h 
  315 D1:BC65 -  -  -  -  	
  316 D1:BC65 B7 -  -  -  	or a 
  317 D1:BC66 C0 -  -  -  	ret nz ;player is > 256 px below cam 
  318 D1:BC67 -  -  -  -  	
  319 D1:BC67 7D -  -  -  	ld a,l 
  320 D1:BC68 -  -  -  -  	;a holds lines below vp top to draw player
  321 D1:BC68 47 -  -  -  	ld b,a 
  322 D1:BC69 3E F0 -  -  	ld a,240
  323 D1:BC6B 90 -  -  -  	sub a,b ;lines above bottom of VP 
  324 D1:BC6C D8 -  -  -  	ret c ;player below VP 
  325 D1:BC6D -  -  -  -  
  326 D1:BC6D -  -  -  -  	
  327 D1:BC6D ED 5B DC AB 
              D1 -  -  -  	ld de, (draw_buffer)
  328 D1:BC72 21 00 96 00 	ld hl, 240*160
  329 D1:BC76 19 -  -  -  	add hl,de 
  330 D1:BC77 EB -  -  -  	ex de,hl ;DE hlds VP bottom 
  331 D1:BC78 -  -  -  -  	
  332 D1:BC78 -  -  -  -  pd_sprite_height_1 .equ $ + 1
  333 D1:BC78 FE 00 -  -  	cp 0 
  334 D1:BC7A DA 87 BC D1 	jp c, pd_bottom_cut 
  335 D1:BC7E -  -  -  -  
  336 D1:BC7E -  -  -  -  	;Otherwise, no top or bottm cut
  337 D1:BC7E -  -  -  -  	;a holds lines above bottom VP 
  338 D1:BC7E CD A8 BC D1 	call pd_setup_draw
  339 D1:BC82 -  -  -  -  	
  340 D1:BC82 -  -  -  -  
  341 D1:BC82 -  -  -  -  	;call prgmpause
  342 D1:BC82 -  -  -  -  	
  343 D1:BC82 CD C4 AE D1 	call draw_slow_sprite_full
  344 D1:BC86 -  -  -  -  	
  345 D1:BC86 -  -  -  -  	
  346 D1:BC86 C9 -  -  -  	ret
  347 D1:BC87 -  -  -  -  
  348 D1:BC87 -  -  -  -  pd_bottom_cut:
  349 D1:BC87 -  -  -  -  	;a holds lines to draw
  350 D1:BC87 -  -  -  -  	;DE holds vram bottom 
  351 D1:BC87 CD A8 BC D1 	call pd_setup_draw
  352 D1:BC8B CD 2F AF D1 	call draw_slow_sprite_bottom_cut
  353 D1:BC8F -  -  -  -  	
  354 D1:BC8F -  -  -  -  	;push af 
  355 D1:BC8F -  -  -  -  	;ld a,$33
  356 D1:BC8F -  -  -  -  	;call write_a_to_ram 
  357 D1:BC8F -  -  -  -  	;pop af 
  358 D1:BC8F -  -  -  -  	
  359 D1:BC8F C9 -  -  -  	ret 
  360 D1:BC90 -  -  -  -  	
  361 D1:BC90 -  -  -  -  
  362 D1:BC90 -  -  -  -  pd_top_cut:
  363 D1:BC90 -  -  -  -  	;call write_hl_to_ram
  364 D1:BC90 -  -  -  -  	;push af 
  365 D1:BC90 -  -  -  -  	;ld a,$44
  366 D1:BC90 -  -  -  -  	;call write_a_to_ram 
  367 D1:BC90 -  -  -  -  	;pop af 
  368 D1:BC90 -  -  -  -  
  369 D1:BC90 7C -  -  -  	ld a,h ;Upper byte after subtraction, check for chase where player > 256 px above cam to prevent overflow errors
  370 D1:BC91 EE FF -  -  	xor %11111111 ;flip all bits 
  371 D1:BC93 C0 -  -  -  	ret nz ;player is > 256 px above cam 
  372 D1:BC94 -  -  -  -  	
  373 D1:BC94 -  -  -  -   
  374 D1:BC94 -  -  -  -  	
  375 D1:BC94 7D -  -  -  	ld a,l ;lines below VP
  376 D1:BC95 ED 44 -  -  	neg 
  377 D1:BC97 -  -  -  -  
  378 D1:BC97 -  -  -  -  	;a holds lines above vp top = lines to cut 
  379 D1:BC97 -  -  -  -  pd_sprite_height_2 .equ $ + 1 
  380 D1:BC97 FE 00 -  -  	cp 0 ; compare to height 
  381 D1:BC99 D0 -  -  -  	ret nc 
  382 D1:BC9A -  -  -  -  
  383 D1:BC9A ED 5B DC AB 
              D1 -  -  -  	ld de,(draw_buffer)
  384 D1:BC9F CD A8 BC D1 	call pd_setup_draw ;Setup draw pos 
  385 D1:BCA3 -  -  -  -  	
  386 D1:BCA3 -  -  -  -  	;bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  387 D1:BCA3 -  -  -  -  	;jp z,pd_top_cut_fast
  388 D1:BCA3 CD 02 AF D1 	call draw_slow_sprite_top_cut ;for now assume all sprites are slow
  389 D1:BCA7 -  -  -  -  	
  390 D1:BCA7 -  -  -  -  	;jp pd_top_cut_slow
  391 D1:BCA7 -  -  -  -  ;pd_top_cut_fast:
  392 D1:BCA7 -  -  -  -  	;call draw_fast_sprite_top_cut
  393 D1:BCA7 -  -  -  -  ;pd_top_cut_slow:
  394 D1:BCA7 -  -  -  -  	
  395 D1:BCA7 C9 -  -  -  	ret 
  396 D1:BCA8 -  -  -  -  	
  397 D1:BCA8 -  -  -  -  
  398 D1:BCA8 -  -  -  -  
  399 D1:BCA8 -  -  -  -  
  400 D1:BCA8 -  -  -  -  pd_setup_draw:
  401 D1:BCA8 -  -  -  -  	;A holds lines above bottom (or top) line of VP 
  402 D1:BCA8 -  -  -  -  	;DE holds VP top or bottom
  403 D1:BCA8 26 A0 -  -  	ld h,160
  404 D1:BCAA 6F -  -  -  	ld l,a ;Num lines to subtract
  405 D1:BCAB ED 6C -  -  	mlt hl 
  406 D1:BCAD 37 -  -  -  	scf 
  407 D1:BCAE 3F -  -  -  	ccf 
  408 D1:BCAF EB -  -  -  	ex de,hl ;De holds lines to subtract, hl holds vram pos 
  409 D1:BCB0 ED 52 -  -  	sbc hl,de 
  410 D1:BCB2 01 00 00 00 	ld bc,0 
  411 D1:BCB6 -  -  -  -  pd_xpos_full .equ $ + 1 
  412 D1:BCB6 0E 00 -  -  	ld c, 0 ;ld x pos 
  413 D1:BCB8 09 -  -  -  	add hl,bc 
  414 D1:BCB9 EB -  -  -  	ex de,hl 
  415 D1:BCBA -  -  -  -  pd_sprite_table .equ $ + 1 
  416 D1:BCBA 21 00 00 00 	ld hl,0 ;Load sprite table (offset or even)
  417 D1:BCBE -  -  -  -  
  418 D1:BCBE -  -  -  -  player_sprite_index .equ $ + 1 
  419 D1:BCBE 0E 00 -  -  	ld c,0 ;load sprite index 
  420 D1:BCC0 09 -  -  -  	add hl,bc 
  421 D1:BCC1 09 -  -  -  	add hl,bc 
  422 D1:BCC2 09 -  -  -  	add hl,bc 
  423 D1:BCC3 -  -  -  -  	;HL holds sprite data, de holds draw pos 
  424 D1:BCC3 C9 -  -  -  	ret 
  425 D1:BCC4 -  -  -  -  
  426 D1:BCC4 -  -  -  -  
  427 D1:BCC4 -  -  -  -  
  428 D1:BCC4 -  -  -  -  
  429 D1:BCC4 -  -  -  -  check_collisions:
  430 D1:BCC4 3A 30 BE D1 	ld a,(player_y_pos+2) ;Frame Number
  431 D1:BCC8 01 00 00 00 	ld bc,0 
  432 D1:BCCC 21 EC E9 D1 	ld hl, Collision_Data_frame_table
  433 D1:BCD0 4F -  -  -  	ld c,a 
  434 D1:BCD1 09 -  -  -  	add hl,bc ;add frame num 
  435 D1:BCD2 09 -  -  -  	add hl,bc ;add frame num 
  436 D1:BCD3 09 -  -  -  	add hl,bc ;add frame num 
  437 D1:BCD4 ED 27 -  -  	ld hl,(hl)
  438 D1:BCD6 -  -  -  -  	
  439 D1:BCD6 3E DA -  -  	ld a,%11011010;jp c
  440 D1:BCD8 32 1A BE D1 	ld(check_col_lower_jump),a 
  441 D1:BCDC -  -  -  -  	
  442 D1:BCDC -  -  -  -  	;hl points to collision data for this frame 
  443 D1:BCDC 08 -  -  -  	ex af,af' ;' 
  444 D1:BCDD 7E -  -  -  	ld a,(hl) ;ld number of elements 
  445 D1:BCDE 3C -  -  -  	inc a ;for 0 case
  446 D1:BCDF 08 -  -  -  	ex af,af' ;' 
  447 D1:BCE0 23 -  -  -  	inc hl ;to first element
  448 D1:BCE1 -  -  -  -  
  449 D1:BCE1 -  -  -  -  check_collisions_same_loop:
  450 D1:BCE1 -  -  -  -  	;hl pts to ymin of collider 
  451 D1:BCE1 08 -  -  -  	ex af,af' ;'
  452 D1:BCE2 3D -  -  -  	dec a 
  453 D1:BCE3 CA 02 BD D1 	jp z, check_collisions_lower
  454 D1:BCE7 08 -  -  -  	ex af,af';' 
  455 D1:BCE8 -  -  -  -  	;Collider bottom is in same frame as player 
  456 D1:BCE8 3A 2F BE D1 	ld a,(player_y_pos + 1)
  457 D1:BCEC 96 -  -  -  	sub a,(hl); sub y pos of collider 
  458 D1:BCED -  -  -  -  	;call write_a_to_ram
  459 D1:BCED DA 14 BE D1 	jp c, check_col_skip_4 
  460 D1:BCF1 23 -  -  -  	inc hl; to height 
  461 D1:BCF2 -  -  -  -  	;Player top is above bottom of collider 
  462 D1:BCF2 -  -  -  -  	;a holds # pixels above bottom of collider (0 indexed)	
  463 D1:BCF2 0E 13 -  -  	ld c,player_collider_height
  464 D1:BCF4 -  -  -  -  	;call write_a_to_ram
  465 D1:BCF4 91 -  -  -  	sub a,c
  466 D1:BCF5 DA 2B BD D1 	jp c, check_col_y_collision
  467 D1:BCF9 96 -  -  -  	sub (hl); cokmpare to collider height -1 
  468 D1:BCFA DA 2B BD D1 	jp c,check_col_y_collision
  469 D1:BCFE -  -  -  -  	;Otherwise no collision 	
  470 D1:BCFE C3 15 BE D1 	jp check_col_skip_3
  471 D1:BD02 -  -  -  -  
  472 D1:BD02 -  -  -  -  check_collisions_lower:
  473 D1:BD02 -  -  -  -  	;hl pts to start of lower frame collisoin data 
  474 D1:BD02 08 -  -  -  	ex af,af' ;' 
  475 D1:BD03 7E -  -  -  	ld a,(hl) ;ld number of elements 
  476 D1:BD04 3C -  -  -  	inc a ;for 0 case
  477 D1:BD05 -  -  -  -  	;call write_a_to_ram
  478 D1:BD05 08 -  -  -  	ex af,af' ;' 
  479 D1:BD06 23 -  -  -  	inc hl ;to first element
  480 D1:BD07 3E D2 -  -  	ld a, %11010010 ;jp nc 
  481 D1:BD09 32 1A BE D1 	ld(check_col_lower_jump),a 
  482 D1:BD0D -  -  -  -  
  483 D1:BD0D -  -  -  -  check_collisions_lower_loop:
  484 D1:BD0D -  -  -  -  ;hl pts to ymin of collider 
  485 D1:BD0D 08 -  -  -  	ex af,af' ;'
  486 D1:BD0E 3D -  -  -  	dec a 
  487 D1:BD0F C8 -  -  -  	ret z 
  488 D1:BD10 08 -  -  -  	ex af,af';' 
  489 D1:BD11 -  -  -  -  	;collider y min is in frame below player
  490 D1:BD11 -  -  -  -  	;we already know player is above collider bottom 
  491 D1:BD11 3A 2F BE D1 	ld a,(player_y_pos + 1)
  492 D1:BD15 96 -  -  -  	sub (hl)
  493 D1:BD16 D2 14 BE D1 	jp nc,check_col_skip_4
  494 D1:BD1A -  -  -  -  	;call write_a_to_ram
  495 D1:BD1A 23 -  -  -  	inc hl ;to height 
  496 D1:BD1B -  -  -  -  	;a holds px from player top to collider bottom 
  497 D1:BD1B 0E 13 -  -  	ld c,player_collider_height
  498 D1:BD1D -  -  -  -  	;call write_a_to_ram
  499 D1:BD1D 91 -  -  -  	sub a,c
  500 D1:BD1E DA 2B BD D1 	jp c, check_col_y_collision
  501 D1:BD22 -  -  -  -  	
  502 D1:BD22 -  -  -  -  	
  503 D1:BD22 -  -  -  -  	;call write_a_to_ram
  504 D1:BD22 96 -  -  -  	sub (hl); cokmpare to collider height -1 
  505 D1:BD23 DA 2B BD D1 	jp c,check_col_y_collision
  506 D1:BD27 -  -  -  -  	;Otherwise no collision 	
  507 D1:BD27 C3 15 BE D1 	jp check_col_skip_3
  508 D1:BD2B -  -  -  -  	
  509 D1:BD2B -  -  -  -  check_col_y_collision:
  510 D1:BD2B -  -  -  -  	;call write_a_to_ram
  511 D1:BD2B -  -  -  -  
  512 D1:BD2B -  -  -  -  	;Player is within Y range of collider 
  513 D1:BD2B -  -  -  -  	;ld a,$AA 
  514 D1:BD2B -  -  -  -  	;call write_a_to_ram;TESTIng
  515 D1:BD2B -  -  -  -  	
  516 D1:BD2B 23 -  -  -  	inc hl ;to x max 
  517 D1:BD2C 3A 2C BE D1 	ld a,(player_x_pos+1);Fullpixels
  518 D1:BD30 CB 3F -  -  	srl a ;div by 2 
  519 D1:BD32 47 -  -  -  	ld b,a 
  520 D1:BD33 3A 2D BE D1 	ld a,(player_x_pos+2);MSB fullpixel 
  521 D1:BD37 0F -  -  -  	rrca ;Move bit 0 to bit 7
  522 D1:BD38 B0 -  -  -  	or b 
  523 D1:BD39 -  -  -  -  	;A holds x pos / 2 (paired pixels) 
  524 D1:BD39 -  -  -  -  	
  525 D1:BD39 BE -  -  -  	cp (hl) ;compare to x max 
  526 D1:BD3A -  -  -  -  	;zero or carry = collison 
  527 D1:BD3A CA 46 BD D1 	jp z, check_col_x_collision
  528 D1:BD3E DA 46 BD D1 	jp c, check_col_x_collision
  529 D1:BD42 -  -  -  -  	
  530 D1:BD42 C3 16 BE D1 	jp check_col_skip_2
  531 D1:BD46 -  -  -  -  	
  532 D1:BD46 -  -  -  -  check_col_x_collision:
  533 D1:BD46 -  -  -  -  
  534 D1:BD46 -  -  -  -  	;ld a,$BB
  535 D1:BD46 -  -  -  -  	;call write_a_to_ram
  536 D1:BD46 -  -  -  -  	;Need to find x pos of right of player, then div by 2 
  537 D1:BD46 3A 2C BE D1 	ld a,(player_x_pos+1);Fullpixels
  538 D1:BD4A C6 18 -  -  	add a, player_collider_width ;Will set carry flag if right side of player > 255 and left of player < 255 
  539 D1:BD4C 1F -  -  -  	rra ;div by 2 and move carry flag to bit 7. 
  540 D1:BD4D 47 -  -  -  	ld b,a 
  541 D1:BD4E 3A 2D BE D1 	ld a,(player_x_pos +2 ); MSB pixel 
  542 D1:BD52 0F -  -  -  	rrca ;move bit 0 to bit 7
  543 D1:BD53 B0 -  -  -  	or b ;a holds right pos of player / 2 
  544 D1:BD54 23 -  -  -  	inc hl ;to x min 
  545 D1:BD55 BE -  -  -  	cp (hl) 
  546 D1:BD56 -  -  -  -   
  547 D1:BD56 DA 17 BE D1 	jp c, check_col_skip_1 
  548 D1:BD5A -  -  -  -  
  549 D1:BD5A -  -  -  -  
  550 D1:BD5A -  -  -  -  
  551 D1:BD5A -  -  -  -  
  552 D1:BD5A -  -  -  -  
  553 D1:BD5A -  -  -  -  
  554 D1:BD5A -  -  -  -  	
  555 D1:BD5A -  -  -  -  collision_found: ;A collision has been detected
  556 D1:BD5A -  -  -  -  	
  557 D1:BD5A -  -  -  -  	;TESTing 
  558 D1:BD5A 23 -  -  -  	inc hl ;to flags 
  559 D1:BD5B 7E -  -  -  	ld a,(hl)
  560 D1:BD5C CD A3 AB D1 	call write_a_to_ram
  561 D1:BD60 -  -  -  -  	
  562 D1:BD60 37 -  -  -  	scf 
  563 D1:BD61 -  -  -  -  collision_check_vertical .equ $
  564 D1:BD61 DA 98 BD D1 	jp c, collision_check_vert 
  565 D1:BD65 -  -  -  -  	
  566 D1:BD65 -  -  -  -  
  567 D1:BD65 -  -  -  -  	;Player is moving horizontal 
  568 D1:BD65 7E -  -  -  	ld a,(hl) ;flags 
  569 D1:BD66 CB 7F -  -  	bit 7,a ;semisolid 
  570 D1:BD68 C2 C5 BD D1 	jp nz,vert_col_up_semisolid ;skips semisolid 
  571 D1:BD6C -  -  -  -  
  572 D1:BD6C CB 77 -  -  	bit 6,a 
  573 D1:BD6E C2 10 BE D1 	jp nz, collision_spikes
  574 D1:BD72 -  -  -  -  	
  575 D1:BD72 -  -  -  -  	;TODO breakaway platforms 
  576 D1:BD72 -  -  -  -  	
  577 D1:BD72 -  -  -  -  	;player has moved horiz and hit a solid wall 
  578 D1:BD72 -  -  -  -  	;Reverse x velocity 
  579 D1:BD72 E5 -  -  -  	push hl 
  580 D1:BD73 2A 31 BE D1 	ld hl,(player_x_vel)
  581 D1:BD77 EB -  -  -  	ex de,hl 
  582 D1:BD78 21 00 00 00 	ld hl,0
  583 D1:BD7C ED 52 -  -  	sbc hl, de  
  584 D1:BD7E -  -  -  -  	
  585 D1:BD7E 7C -  -  -  	ld a,h
  586 D1:BD7F E6 80 -  -  	and %10000000
  587 D1:BD81 CB 3C -  -  	srl h ;div by 2 
  588 D1:BD83 CB 1D -  -  	rr l 
  589 D1:BD85 B4 -  -  -  	or h
  590 D1:BD86 67 -  -  -  	ld h,a 
  591 D1:BD87 -  -  -  -  	
  592 D1:BD87 -  -  -  -  	
  593 D1:BD87 22 31 BE D1 	ld (player_x_vel),hl 
  594 D1:BD8B 2A 37 BE D1 	ld hl, (player_x_pos_prev) ;revert to previous y pos 
  595 D1:BD8F 22 2B BE D1 	ld (player_x_pos),hl 
  596 D1:BD93 E1 -  -  -  	pop hl 
  597 D1:BD94 -  -  -  -  	
  598 D1:BD94 C3 18 BE D1 	jp check_col_skip_0
  599 D1:BD98 -  -  -  -  
  600 D1:BD98 -  -  -  -  collision_check_vert:
  601 D1:BD98 -  -  -  -  	;Player is moving in vertical direction 
  602 D1:BD98 -  -  -  -  
  603 D1:BD98 3A 36 BE D1 	ld a,(player_y_vel + 2) ;MSB of y vel 
  604 D1:BD9C CB 7F -  -  	bit 7,a ;check if moving up or down 
  605 D1:BD9E C2 D3 BD D1 	jp nz, vert_col_down
  606 D1:BDA2 -  -  -  -  	
  607 D1:BDA2 -  -  -  -  	;player is moving up 
  608 D1:BDA2 7E -  -  -  	ld a,(hl) ;flags 
  609 D1:BDA3 CB 7F -  -  	bit 7,a ;semisolid 
  610 D1:BDA5 C2 C5 BD D1 	jp nz,vert_col_up_semisolid ;semisolid and moving up
  611 D1:BDA9 -  -  -  -  
  612 D1:BDA9 CB 77 -  -  	bit 6,a 
  613 D1:BDAB C2 10 BE D1 	jp nz, collision_spikes
  614 D1:BDAF -  -  -  -  
  615 D1:BDAF -  -  -  -  	;TODO breakaway platforms 
  616 D1:BDAF -  -  -  -  	
  617 D1:BDAF -  -  -  -  	;Plyaer has moved up and hit non spike object 
  618 D1:BDAF -  -  -  -  	;Set velocity to 0 
  619 D1:BDAF E5 -  -  -  	push hl 
  620 D1:BDB0 21 00 00 00 	ld hl,0
  621 D1:BDB4 22 34 BE D1 	ld (player_y_vel),hl 
  622 D1:BDB8 2A 3A BE D1 	ld hl, (player_y_pos_prev) ;revert to previous y pos 
  623 D1:BDBC 22 2E BE D1 	ld (player_y_pos),hl 
  624 D1:BDC0 E1 -  -  -  	pop hl 
  625 D1:BDC1 -  -  -  -  	
  626 D1:BDC1 C3 18 BE D1 	jp check_col_skip_0
  627 D1:BDC5 -  -  -  -  	
  628 D1:BDC5 -  -  -  -  vert_col_up_semisolid:
  629 D1:BDC5 3A 3D BE D1 	ld a,(player_flags)
  630 D1:BDC9 CB EF -  -  	set 5,a ;set semisolid flag 
  631 D1:BDCB 32 3D BE D1 	ld (player_flags),a 
  632 D1:BDCF C3 18 BE D1 	jp check_col_skip_0
  633 D1:BDD3 -  -  -  -  	
  634 D1:BDD3 -  -  -  -  	
  635 D1:BDD3 -  -  -  -  	
  636 D1:BDD3 -  -  -  -  vert_col_down:
  637 D1:BDD3 -  -  -  -  
  638 D1:BDD3 -  -  -  -  	;player is moving down 
  639 D1:BDD3 7E -  -  -  	ld a,(hl) ;flags 
  640 D1:BDD4 CB 7F -  -  	bit 7,a ;semisolid 
  641 D1:BDD6 CA EA BD D1 	jp z,vert_col_down_solid 
  642 D1:BDDA -  -  -  -  	
  643 D1:BDDA -  -  -  -  	;semisolid and moving down
  644 D1:BDDA 3A 3D BE D1 	ld a,(player_flags)
  645 D1:BDDE CB EF -  -  	set 5,a ;set semisolid flag 
  646 D1:BDE0 32 3D BE D1 	ld (player_flags),a 
  647 D1:BDE4 CB 67 -  -  	bit 4,a ;check we were not in semisolid last update 
  648 D1:BDE6 C2 18 BE D1 	jp nz, check_col_skip_0 ;we were already within semisolid collider 
  649 D1:BDEA -  -  -  -  	;otherwise, hit the collider 
  650 D1:BDEA -  -  -  -  	
  651 D1:BDEA -  -  -  -  
  652 D1:BDEA -  -  -  -  vert_col_down_solid:
  653 D1:BDEA CB 77 -  -  	bit 6,a 
  654 D1:BDEC C2 10 BE D1 	jp nz, collision_spikes
  655 D1:BDF0 -  -  -  -  
  656 D1:BDF0 -  -  -  -  	;TODO breakaway platforms 
  657 D1:BDF0 -  -  -  -  	
  658 D1:BDF0 -  -  -  -  	;Plyaer has moved down and hit non spike object 
  659 D1:BDF0 -  -  -  -  	;Set velocity to 0 
  660 D1:BDF0 E5 -  -  -  	push hl 
  661 D1:BDF1 21 00 00 00 	ld hl,0
  662 D1:BDF5 22 34 BE D1 	ld (player_y_vel),hl 
  663 D1:BDF9 2A 3A BE D1 	ld hl, (player_y_pos_prev) ;revert to previous y pos 
  664 D1:BDFD 22 2E BE D1 	ld (player_y_pos),hl 
  665 D1:BE01 E1 -  -  -  	pop hl 
  666 D1:BE02 -  -  -  -  	
  667 D1:BE02 3A 3D BE D1 	ld a,(player_flags)
  668 D1:BE06 CB F7 -  -  	set 6,a  ;set ground flag 
  669 D1:BE08 32 3D BE D1 	ld (player_flags),a
  670 D1:BE0C -  -  -  -  	
  671 D1:BE0C C3 18 BE D1 	jp check_col_skip_0 ;continue 
  672 D1:BE10 -  -  -  -  
  673 D1:BE10 -  -  -  -  
  674 D1:BE10 -  -  -  -  
  675 D1:BE10 -  -  -  -  
  676 D1:BE10 -  -  -  -  
  677 D1:BE10 -  -  -  -  collision_spikes:
  678 D1:BE10 -  -  -  -  	;player has collided with spikes 
  679 D1:BE10 -  -  -  -  
  680 D1:BE10 C3 18 BE D1 	jp check_col_skip_0
  681 D1:BE14 -  -  -  -  
  682 D1:BE14 -  -  -  -  check_col_skip_4:
  683 D1:BE14 23 -  -  -  	inc hl ;to height
  684 D1:BE15 -  -  -  -  check_col_skip_3:
  685 D1:BE15 23 -  -  -  	inc hl ;to xmax
  686 D1:BE16 -  -  -  -  check_col_skip_2:	
  687 D1:BE16 23 -  -  -  	inc hl ;to xmin
  688 D1:BE17 -  -  -  -  check_col_skip_1:	
  689 D1:BE17 23 -  -  -  	inc hl ;to flags
  690 D1:BE18 -  -  -  -  check_col_skip_0:
  691 D1:BE18 23 -  -  -  	inc hl ;to next element
  692 D1:BE19 -  -  -  -  	
  693 D1:BE19 37 -  -  -  	scf 
  694 D1:BE1A -  -  -  -  check_col_lower_jump .equ $
  695 D1:BE1A DA E1 BC D1 	jp c, check_collisions_same_loop
  696 D1:BE1E C3 0D BD D1 	jp check_collisions_lower_loop
  697 D1:BE22 -  -  -  -  
  698 D1:BE22 -  -  -  -  
  699 D1:BE22 -  -  -  -  
  700 D1:BE22 -  -  -  -  player_sprite_table:
  701 D1:BE22 E7 03 D4 -  	.dl Frog_0_Slow
  702 D1:BE25 -  -  -  -  
  703 D1:BE25 -  -  -  -  player_sprite_table_offset:
  704 D1:BE25 17 05 D4 -  	.dl Frog_0_Slow_O
  705 D1:BE28 -  -  -  -  
  706 D1:BE28 -  -  -  -  
  707 D1:BE28 -  -  -  -  
  708 D1:BE28 -  -  -  -  
  709 D1:BE28 -  -  -  -  
  710 D1:BE28 -  -  -  -  
  711 D1:BE28 -  -  -  -  jump_strength_up:
  712 D1:BE28 00 -  -  -  	.db 0 
  713 D1:BE29 -  -  -  -  jump_strength_right:
  714 D1:BE29 00 -  -  -  	.db 0 
  715 D1:BE2A -  -  -  -  jump_charge_timer:
  716 D1:BE2A 00 -  -  -  	.db 0 
  717 D1:BE2B -  -  -  -  
  718 D1:BE2B -  -  -  -  	
  719 D1:BE2B -  -  -  -  timer_max_val .equ 30
  720 D1:BE2B -  -  -  -  
  721 D1:BE2B -  -  -  -  player_collider_height .equ 19
  722 D1:BE2B -  -  -  -  player_collider_width .equ 24 ;width -1 
  723 D1:BE2B -  -  -  -  
  724 D1:BE2B -  -  -  -  
  725 D1:BE2B -  -  -  -  player_x_pos:
  726 D1:BE2B 00 00 00 -  	.dl 0 ; (MSB fullpixel, Fullpixels, subpixels)
  727 D1:BE2E -  -  -  -  	
  728 D1:BE2E -  -  -  -  player_y_pos:
  729 D1:BE2E 00 00 00 -  	.dl 0 ; (Frame #, Fullpixels, subpixels)
  730 D1:BE31 -  -  -  -  
  731 D1:BE31 -  -  -  -  player_x_vel:
  732 D1:BE31 00 00 00 -  	.dl 0 ; (Unused, Fullpixels, subpixels)
  733 D1:BE34 -  -  -  -  	
  734 D1:BE34 -  -  -  -  player_y_vel:
  735 D1:BE34 00 00 00 -  	.dl 0 ; (Unused, Fullpixels, subpixels)
  736 D1:BE37 -  -  -  -  
  737 D1:BE37 -  -  -  -  
  738 D1:BE37 -  -  -  -  player_x_pos_prev: ;x position before update, revert to this if collision 
  739 D1:BE37 00 00 00 -  	.dl 0 ; (MSB fullpixel, Fullpixels, subpixels)
  740 D1:BE3A -  -  -  -  	
  741 D1:BE3A -  -  -  -  player_y_pos_prev: ;y position before update, revert to this if collision :
  742 D1:BE3A 00 00 00 -  	.dl 0 ; (Frame #, Fullpixels, subpixels)
  743 D1:BE3D -  -  -  -  
  744 D1:BE3D -  -  -  -  
  745 D1:BE3D -  -  -  -  
  746 D1:BE3D -  -  -  -  player_flags:
  747 D1:BE3D 00 -  -  -  	.db %00000000 ; (7 = Any jump button held, 6 = on ground,5 = within semisolid, 4 = in semisolid last update)
  748 D1:BE3E -  -  -  -  	
  749 D1:BE3E -  -  -  -  	
  750 D1:BE3E -  -  -  -  	
  751 D1:BE3E -  -  -  -  	
  752 D1:BE3E -  -  -  -  	
  753 D1:BE3E -  -  -  -  	
  754 D1:BE3E -  -  -  -  	
  755 D1:BE3E -  -  -  -  	
  756 D1:BE3E -  -  -  -  	
  757 D1:BE3E -  -  -  -  	
  758 D1:BE3E -  -  -  -  	
  759 D1:BE3E -  -  -  -  	
  760 D1:BE3E -  -  -  -  	
  761 D1:BE3E -  -  -  -  	
  762 D1:BE3E -  -  -  -  	
  763 D1:BE3E -  -  -  -  player_move_debug:
  764 D1:BE3E -  -  -  -  ;DEBUG MODE ============================================================================= 
  765 D1:BE3E 21 00 00 F5 	ld	hl,DI_Mode		; register for keypad mode
  766 D1:BE42 36 02 -  -  	ld	(hl),2			; set single scan mode
  767 D1:BE44 AF -  -  -  	xor	a,a
  768 D1:BE45 -  -  -  -  dbg_scan_wait:
  769 D1:BE45 BE -  -  -  	cp	a,(hl)			; wait for keypad idle mode
  770 D1:BE46 20 FD -  -  	jr	nz,dbg_scan_wait
  771 D1:BE48 -  -  -  -  	
  772 D1:BE48 3A 1A 00 F5 	ld a,(kbdG5)
  773 D1:BE4C CB 57 -  -  	bit kbit6,a 
  774 D1:BE4E C2 84 BE D1 	jp nz, player_move_debug_right
  775 D1:BE52 -  -  -  -  	
  776 D1:BE52 3A 16 00 F5 	ld a,(kbdG3)
  777 D1:BE56 CB 57 -  -  	bit kbit4,a 
  778 D1:BE58 C2 71 BE D1 	jp nz, player_move_debug_left
  779 D1:BE5C -  -  -  -  	
  780 D1:BE5C 3A 18 00 F5 	ld a,(kbdG4)
  781 D1:BE60 CB 4F -  -  	bit kbit2,a 
  782 D1:BE62 C2 A8 BE D1 	jp nz, player_move_debug_down 
  783 D1:BE66 -  -  -  -  	
  784 D1:BE66 3A 18 00 F5 	ld a,(kbdG4)
  785 D1:BE6A CB 5F -  -  	bit kbit8,a 
  786 D1:BE6C C2 96 BE D1 	jp nz, player_move_debug_up
  787 D1:BE70 -  -  -  -  	
  788 D1:BE70 C9 -  -  -  	ret 
  789 D1:BE71 -  -  -  -  	
  790 D1:BE71 -  -  -  -  	
  791 D1:BE71 -  -  -  -  
  792 D1:BE71 -  -  -  -  
  793 D1:BE71 -  -  -  -  player_move_debug_left:
  794 D1:BE71 2A 2B BE D1 	ld hl,(player_x_pos)
  795 D1:BE75 01 80 00 00 	ld bc, 128
  796 D1:BE79 ED 42 -  -  	sbc hl,bc 
  797 D1:BE7B 22 2B BE D1 	ld (player_x_pos),hl 
  798 D1:BE7F CD C4 BC D1 	call check_collisions
  799 D1:BE83 C9 -  -  -  	ret 
  800 D1:BE84 -  -  -  -  
  801 D1:BE84 -  -  -  -  player_move_debug_right:
  802 D1:BE84 2A 2B BE D1 	ld hl,(player_x_pos)
  803 D1:BE88 01 80 00 00 	ld bc, 128
  804 D1:BE8C 09 -  -  -  	add hl,bc 
  805 D1:BE8D 22 2B BE D1 	ld (player_x_pos),hl 
  806 D1:BE91 CD C4 BC D1 	call check_collisions
  807 D1:BE95 C9 -  -  -  	ret 
  808 D1:BE96 -  -  -  -  
  809 D1:BE96 -  -  -  -  player_move_debug_up:
  810 D1:BE96 2A 2E BE D1 	ld hl,(player_y_pos)
  811 D1:BE9A 01 80 00 00 	ld bc, 128
  812 D1:BE9E 09 -  -  -  	add hl,bc 
  813 D1:BE9F 22 2E BE D1 	ld (player_y_pos),hl 
  814 D1:BEA3 CD C4 BC D1 	call check_collisions
  815 D1:BEA7 C9 -  -  -  	ret 
  816 D1:BEA8 -  -  -  -  
  817 D1:BEA8 -  -  -  -  player_move_debug_down:
  818 D1:BEA8 2A 2E BE D1 	ld hl,(player_y_pos)
  819 D1:BEAC 01 80 00 00 	ld bc, 128
  820 D1:BEB0 ED 42 -  -  	sbc hl,bc 
  821 D1:BEB2 22 2E BE D1 	ld (player_y_pos),hl 
  822 D1:BEB6 CD C4 BC D1 	call check_collisions
  823 D1:BEBA C9 -  -  -  	ret
Listing for file "ascent.asm"
  557 D1:BEBB -  -  -  -  #include "sineFunc.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\sineFunc.txt"
    1 D1:BEBB -  -  -  -  
    2 D1:BEBB -  -  -  -  update_sine_vals:
    3 D1:BEBB 01 00 00 00 	ld bc,0
    4 D1:BEBF -  -  -  -  	
    5 D1:BEBF 3A F1 AB D1 	ld a, (frameCount+1);middle byte 
    6 D1:BEC3 CB 3F -  -  	srl a ;put bit 0 to carry flag 
    7 D1:BEC5 3A F0 AB D1 	ld a, (frameCount)
    8 D1:BEC9 1F -  -  -  	rra ;a holds frame counter/2, ~16 second timer
    9 D1:BECA 21 15 BF D1 	ld hl,sine_modes_table
   10 D1:BECE 08 -  -  -  	ex af,af' ;' ;in
   11 D1:BECF 3E 14 -  -  	ld a,20 
   12 D1:BED1 -  -  -  -  	
   13 D1:BED1 -  -  -  -  update_sine_loop:
   14 D1:BED1 08 -  -  -  	ex af,af' ;' ;out
   15 D1:BED2 F5 -  -  -  	push af ;frame count 
   16 D1:BED3 ED 17 -  -  	ld de, (hl) ;de holds correct sine value table 
   17 D1:BED5 23 -  -  -  	inc hl 
   18 D1:BED6 23 -  -  -  	inc hl 
   19 D1:BED7 23 -  -  -  	inc hl 
   20 D1:BED8 E5 -  -  -  	push hl 
   21 D1:BED9 CD F5 BE D1 	call sine_apply_amplitudes
   22 D1:BEDD E1 -  -  -  	pop hl
   23 D1:BEDE F1 -  -  -  	pop af 
   24 D1:BEDF 0E 40 -  -  	ld c,64 ;add quarter phase offset 
   25 D1:BEE1 81 -  -  -  	add a,c 
   26 D1:BEE2 08 -  -  -  	ex af,af' ;' ;in
   27 D1:BEE3 3D -  -  -  	dec a 
   28 D1:BEE4 C8 -  -  -  	ret z 
   29 D1:BEE5 4F -  -  -  	ld c,a
   30 D1:BEE6 E6 03 -  -  	and %00000011 ;check last 2 bits
   31 D1:BEE8 79 -  -  -  	ld a,c
   32 D1:BEE9 C2 D1 BE D1 	jp nz,update_sine_loop
   33 D1:BEED -  -  -  -  	;otherwise, a is multiple of 4, multiply clock speed 
   34 D1:BEED 08 -  -  -  	ex af, af' ;' ;out
   35 D1:BEEE CB 27 -  -  	sla a ;mult by 2 
   36 D1:BEF0 08 -  -  -  	ex af, af' ;' ;in
   37 D1:BEF1 C3 D1 BE D1 	jp update_sine_loop
   38 D1:BEF5 -  -  -  -  	
   39 D1:BEF5 -  -  -  -  	
   40 D1:BEF5 -  -  -  -  	
   41 D1:BEF5 -  -  -  -  	
   42 D1:BEF5 -  -  -  -  	
   43 D1:BEF5 -  -  -  -  	
   44 D1:BEF5 -  -  -  -  sine_apply_amplitudes: ;a holds scaled frame count,de holds ptr to correct sine value table
   45 D1:BEF5 21 B5 BF D1 	ld hl, sine
   46 D1:BEF9 4F -  -  -  	ld c,a 
   47 D1:BEFA 09 -  -  -  	add hl,bc 
   48 D1:BEFB 7E -  -  -  	ld a,(hl); a holds sine value 
   49 D1:BEFC EB -  -  -  	ex de,hl 
   50 D1:BEFD CB 3F -  -  	srl a ;div 2 
   51 D1:BEFF CB 3F -  -  	srl a 
   52 D1:BF01 CB 3F -  -  	srl a ;amplitude of 31 
   53 D1:BF03 77 -  -  -  	ld (hl),a 
   54 D1:BF04 23 -  -  -  	inc hl 
   55 D1:BF05 CB 3F -  -  	srl a ;amplitude of 15 
   56 D1:BF07 77 -  -  -  	ld (hl),a 
   57 D1:BF08 23 -  -  -  	inc hl
   58 D1:BF09 CB 3F -  -  	srl a ;amplitude of 7 
   59 D1:BF0B 77 -  -  -  	ld (hl),a 
   60 D1:BF0C 23 -  -  -  	inc hl
   61 D1:BF0D CB 3F -  -  	srl a ;amplitude of 3 
   62 D1:BF0F 77 -  -  -  	ld (hl),a 
   63 D1:BF10 23 -  -  -  	inc hl
   64 D1:BF11 CB 3F -  -  	srl a ;amplitude of 1 
   65 D1:BF13 77 -  -  -  	ld (hl),a
   66 D1:BF14 C9 -  -  -  	ret 
   67 D1:BF15 -  -  -  -  
   68 D1:BF15 -  -  -  -  
   69 D1:BF15 -  -  -  -  
   70 D1:BF15 -  -  -  -  sine_modes_table:
   71 D1:BF15 51 BF D1 -  	.dl sine_05_1 
   72 D1:BF18 56 BF D1 -  	.dl sine_05_2
   73 D1:BF1B 5B BF D1 -  	.dl sine_05_3
   74 D1:BF1E 60 BF D1 -  	.dl sine_05_4
   75 D1:BF21 -  -  -  -  	
   76 D1:BF21 65 BF D1 -  	.dl sine_1_1
   77 D1:BF24 6A BF D1 -  	.dl sine_1_2
   78 D1:BF27 6F BF D1 -  	.dl sine_1_3
   79 D1:BF2A 74 BF D1 -  	.dl sine_1_4
   80 D1:BF2D -  -  -  -  	
   81 D1:BF2D 79 BF D1 -  	.dl sine_2_1
   82 D1:BF30 7E BF D1 -  	.dl sine_2_2
   83 D1:BF33 83 BF D1 -  	.dl sine_2_3
   84 D1:BF36 88 BF D1 -  	.dl sine_2_4
   85 D1:BF39 -  -  -  -  	
   86 D1:BF39 8D BF D1 -  	.dl sine_4_1
   87 D1:BF3C 92 BF D1 -  	.dl sine_4_2
   88 D1:BF3F 97 BF D1 -  	.dl sine_4_3
   89 D1:BF42 9C BF D1 -  	.dl sine_4_4
   90 D1:BF45 -  -  -  -  
   91 D1:BF45 A1 BF D1 -  	.dl sine_8_1
   92 D1:BF48 A6 BF D1 -  	.dl sine_8_2
   93 D1:BF4B AB BF D1 -  	.dl sine_8_3
   94 D1:BF4E B0 BF D1 -  	.dl sine_8_4
   95 D1:BF51 -  -  -  -  
   96 D1:BF51 -  -  -  -  
   97 D1:BF51 -  -  -  -  
   98 D1:BF51 -  -  -  -  
   99 D1:BF51 -  -  -  -  sine_05_1: ;half frequency, no phase shift
  100 D1:BF51 -  -  -  -  sine_05_31_1: ;freqMult, amplitude, phase 
  101 D1:BF51 00 -  -  -  	.db 0  
  102 D1:BF52 -  -  -  -  sine_05_15_1: ;freqMult, amplitude, phase 
  103 D1:BF52 00 -  -  -  	.db 0 
  104 D1:BF53 -  -  -  -  sine_05_7_1: ;freqMult, amplitude, phase 
  105 D1:BF53 00 -  -  -  	.db 0 
  106 D1:BF54 -  -  -  -  sine_05_3_1: ;freqMult, amplitude, phase 
  107 D1:BF54 00 -  -  -  	.db 0 
  108 D1:BF55 -  -  -  -  sine_05_1_1: ;freqMult, amplitude, phase 
  109 D1:BF55 00 -  -  -  	.db 0 
  110 D1:BF56 -  -  -  -  
  111 D1:BF56 -  -  -  -  	
  112 D1:BF56 -  -  -  -  	
  113 D1:BF56 -  -  -  -  sine_05_2: ;half frequency, no phase shift 
  114 D1:BF56 -  -  -  -  sine_05_31_2: ;freqMult, amplitude, phase 
  115 D1:BF56 00 -  -  -  	.db 0 
  116 D1:BF57 -  -  -  -  sine_05_15_2: ;freqMult, amplitude, phase 
  117 D1:BF57 00 -  -  -  	.db 0 
  118 D1:BF58 -  -  -  -  sine_05_7_2: ;freqMult, amplitude, phase 
  119 D1:BF58 00 -  -  -  	.db 0 
  120 D1:BF59 -  -  -  -  sine_05_3_2: ;freqMult, amplitude, phase 
  121 D1:BF59 00 -  -  -  	.db 0 
  122 D1:BF5A -  -  -  -  sine_05_1_2: ;freqMult, amplitude, phase 
  123 D1:BF5A 00 -  -  -  	.db 0 
  124 D1:BF5B -  -  -  -  
  125 D1:BF5B -  -  -  -  	
  126 D1:BF5B -  -  -  -  sine_05_3: ;half frequency, no phase shift
  127 D1:BF5B -  -  -  -  sine_05_31_3: ;freqMult, amplitude, phase 
  128 D1:BF5B 00 -  -  -  	.db 0  
  129 D1:BF5C -  -  -  -  sine_05_15_3: ;freqMult, amplitude, phase 
  130 D1:BF5C 00 -  -  -  	.db 0 
  131 D1:BF5D -  -  -  -  sine_05_7_3: ;freqMult, amplitude, phase 
  132 D1:BF5D 00 -  -  -  	.db 0 
  133 D1:BF5E -  -  -  -  sine_05_3_3: ;freqMult, amplitude, phase 
  134 D1:BF5E 00 -  -  -  	.db 0 
  135 D1:BF5F -  -  -  -  sine_05_1_3: ;freqMult, amplitude, phase 
  136 D1:BF5F 00 -  -  -  	.db 0 
  137 D1:BF60 -  -  -  -  
  138 D1:BF60 -  -  -  -  
  139 D1:BF60 -  -  -  -  sine_05_4: ;half frequency, no phase shift 
  140 D1:BF60 -  -  -  -  sine_05_31_4: ;freqMult, amplitude, phase 
  141 D1:BF60 00 -  -  -  	.db 0
  142 D1:BF61 -  -  -  -  sine_05_15_4: ;freqMult, amplitude, phase 
  143 D1:BF61 00 -  -  -  	.db 0 
  144 D1:BF62 -  -  -  -  sine_05_7_4: ;freqMult, amplitude, phase 
  145 D1:BF62 00 -  -  -  	.db 0 
  146 D1:BF63 -  -  -  -  sine_05_3_4: ;freqMult, amplitude, phase 
  147 D1:BF63 00 -  -  -  	.db 0 
  148 D1:BF64 -  -  -  -  sine_05_1_4: ;freqMult, amplitude, phase 
  149 D1:BF64 00 -  -  -  	.db 0 
  150 D1:BF65 -  -  -  -  
  151 D1:BF65 -  -  -  -  
  152 D1:BF65 -  -  -  -  	
  153 D1:BF65 -  -  -  -  sine_1_1: ;no freq mult, no phase shift
  154 D1:BF65 -  -  -  -  sine_1_31_1: ;freqMult, amplitude, phase 
  155 D1:BF65 00 -  -  -  	.db 0  
  156 D1:BF66 -  -  -  -  sine_1_15_1: ;freqMult, amplitude, phase 
  157 D1:BF66 00 -  -  -  	.db 0 
  158 D1:BF67 -  -  -  -  sine_1_7_1: ;freqMult, amplitude, phase 
  159 D1:BF67 00 -  -  -  	.db 0 
  160 D1:BF68 -  -  -  -  sine_1_3_1: ;freqMult, amplitude, phase 
  161 D1:BF68 00 -  -  -  	.db 0 
  162 D1:BF69 -  -  -  -  sine_1_1_1: ;freqMult, amplitude, phase 
  163 D1:BF69 00 -  -  -  	.db 0 
  164 D1:BF6A -  -  -  -  
  165 D1:BF6A -  -  -  -  	
  166 D1:BF6A -  -  -  -  sine_1_2: ;no freq mult, no phase shift 
  167 D1:BF6A -  -  -  -  sine_1_31_2: ;freqMult, amplitude, phase 
  168 D1:BF6A 00 -  -  -  	.db 0 
  169 D1:BF6B -  -  -  -  sine_1_15_2: ;freqMult, amplitude, phase 
  170 D1:BF6B 00 -  -  -  	.db 0 
  171 D1:BF6C -  -  -  -  sine_1_7_2: ;freqMult, amplitude, phase 
  172 D1:BF6C 00 -  -  -  	.db 0 
  173 D1:BF6D -  -  -  -  sine_1_3_2: ;freqMult, amplitude, phase 
  174 D1:BF6D 00 -  -  -  	.db 0 
  175 D1:BF6E -  -  -  -  sine_1_1_2: ;freqMult, amplitude, phase 
  176 D1:BF6E 00 -  -  -  	.db 0 
  177 D1:BF6F -  -  -  -  
  178 D1:BF6F -  -  -  -  sine_1_3: ;no freq mult, no phase shift 
  179 D1:BF6F -  -  -  -  sine_1_31_3: ;freqMult, amplitude, phase 
  180 D1:BF6F 00 -  -  -  	.db 0 
  181 D1:BF70 -  -  -  -  sine_1_15_3: ;freqMult, amplitude, phase 
  182 D1:BF70 00 -  -  -  	.db 0 
  183 D1:BF71 -  -  -  -  sine_1_7_3: ;freqMult, amplitude, phase 
  184 D1:BF71 00 -  -  -  	.db 0 
  185 D1:BF72 -  -  -  -  sine_1_3_3: ;freqMult, amplitude, phase 
  186 D1:BF72 00 -  -  -  	.db 0 
  187 D1:BF73 -  -  -  -  sine_1_1_3: ;freqMult, amplitude, phase 
  188 D1:BF73 00 -  -  -  	.db 0 
  189 D1:BF74 -  -  -  -  
  190 D1:BF74 -  -  -  -  	
  191 D1:BF74 -  -  -  -  sine_1_4: ;no freq mult, no phase shift
  192 D1:BF74 -  -  -  -  sine_1_31_4: ;freqMult, amplitude, phase 
  193 D1:BF74 00 -  -  -  	.db 0  
  194 D1:BF75 -  -  -  -  sine_1_15_4: ;freqMult, amplitude, phase 
  195 D1:BF75 00 -  -  -  	.db 0 
  196 D1:BF76 -  -  -  -  sine_1_7_4: ;freqMult, amplitude, phase 
  197 D1:BF76 00 -  -  -  	.db 0 
  198 D1:BF77 -  -  -  -  sine_1_3_4: ;freqMult, amplitude, phase 
  199 D1:BF77 00 -  -  -  	.db 0 
  200 D1:BF78 -  -  -  -  sine_1_1_4: ;freqMult, amplitude, phase 
  201 D1:BF78 00 -  -  -  	.db 0 
  202 D1:BF79 -  -  -  -  
  203 D1:BF79 -  -  -  -  
  204 D1:BF79 -  -  -  -  
  205 D1:BF79 -  -  -  -  
  206 D1:BF79 -  -  -  -  sine_2_1: ;double freq mult
  207 D1:BF79 -  -  -  -  sine_2_31_1: ;freqMult, amplitude, phase 
  208 D1:BF79 00 -  -  -  	.db 0 
  209 D1:BF7A -  -  -  -  sine_2_15_1: ;freqMult, amplitude, phase 
  210 D1:BF7A 00 -  -  -  	.db 0 
  211 D1:BF7B -  -  -  -  sine_2_7_1: ;freqMult, amplitude, phase 
  212 D1:BF7B 00 -  -  -  	.db 0 
  213 D1:BF7C -  -  -  -  sine_2_3_1: ;freqMult, amplitude, phase 
  214 D1:BF7C 00 -  -  -  	.db 0 
  215 D1:BF7D -  -  -  -  sine_2_1_1: ;freqMult, amplitude, phase 
  216 D1:BF7D 00 -  -  -  	.db 0 
  217 D1:BF7E -  -  -  -  
  218 D1:BF7E -  -  -  -  	
  219 D1:BF7E -  -  -  -  sine_2_2: 
  220 D1:BF7E -  -  -  -  sine_2_31_2: ;freqMult, amplitude, phase 
  221 D1:BF7E 00 -  -  -  	.db 0 
  222 D1:BF7F -  -  -  -  sine_2_15_2: ;freqMult, amplitude, phase 
  223 D1:BF7F 00 -  -  -  	.db 0 
  224 D1:BF80 -  -  -  -  sine_2_7_2: ;freqMult, amplitude, phase 
  225 D1:BF80 00 -  -  -  	.db 0 
  226 D1:BF81 -  -  -  -  sine_2_3_2: ;freqMult, amplitude, phase 
  227 D1:BF81 00 -  -  -  	.db 0 
  228 D1:BF82 -  -  -  -  sine_2_1_2: ;freqMult, amplitude, phase 
  229 D1:BF82 00 -  -  -  	.db 0 
  230 D1:BF83 -  -  -  -  
  231 D1:BF83 -  -  -  -  	
  232 D1:BF83 -  -  -  -  sine_2_3: 
  233 D1:BF83 -  -  -  -  sine_2_31_3: ;freqMult, amplitude, phase 
  234 D1:BF83 00 -  -  -  	.db 0 
  235 D1:BF84 -  -  -  -  sine_2_15_3: ;freqMult, amplitude, phase 
  236 D1:BF84 00 -  -  -  	.db 0 
  237 D1:BF85 -  -  -  -  sine_2_7_3: ;freqMult, amplitude, phase 
  238 D1:BF85 00 -  -  -  	.db 0 
  239 D1:BF86 -  -  -  -  sine_2_3_3: ;freqMult, amplitude, phase 
  240 D1:BF86 00 -  -  -  	.db 0 
  241 D1:BF87 -  -  -  -  sine_2_1_3: ;freqMult, amplitude, phase 
  242 D1:BF87 00 -  -  -  	.db 0 
  243 D1:BF88 -  -  -  -  
  244 D1:BF88 -  -  -  -  	
  245 D1:BF88 -  -  -  -  sine_2_4: 
  246 D1:BF88 -  -  -  -  sine_2_31_4: ;freqMult, amplitude, phase 
  247 D1:BF88 00 -  -  -  	.db 0	
  248 D1:BF89 -  -  -  -  sine_2_15_4: ;freqMult, amplitude, phase 
  249 D1:BF89 00 -  -  -  	.db 0 
  250 D1:BF8A -  -  -  -  sine_2_7_4: ;freqMult, amplitude, phase 
  251 D1:BF8A 00 -  -  -  	.db 0 
  252 D1:BF8B -  -  -  -  sine_2_3_4: ;freqMult, amplitude, phase 
  253 D1:BF8B 00 -  -  -  	.db 0 
  254 D1:BF8C -  -  -  -  sine_2_1_4: ;freqMult, amplitude, phase 
  255 D1:BF8C 00 -  -  -  	.db 0 
  256 D1:BF8D -  -  -  -  
  257 D1:BF8D -  -  -  -  
  258 D1:BF8D -  -  -  -  
  259 D1:BF8D -  -  -  -  
  260 D1:BF8D -  -  -  -  sine_4_1: ;double freq mult
  261 D1:BF8D -  -  -  -  sine_4_31_1: ;freqMult, amplitude, phase 
  262 D1:BF8D 00 -  -  -  	.db 0 
  263 D1:BF8E -  -  -  -  sine_4_15_1: ;freqMult, amplitude, phase 
  264 D1:BF8E 00 -  -  -  	.db 0 
  265 D1:BF8F -  -  -  -  sine_4_7_1: ;freqMult, amplitude, phase 
  266 D1:BF8F 00 -  -  -  	.db 0 
  267 D1:BF90 -  -  -  -  sine_4_3_1: ;freqMult, amplitude, phase 
  268 D1:BF90 00 -  -  -  	.db 0 
  269 D1:BF91 -  -  -  -  sine_4_1_1: ;freqMult, amplitude, phase 
  270 D1:BF91 00 -  -  -  	.db 0 
  271 D1:BF92 -  -  -  -  
  272 D1:BF92 -  -  -  -  	
  273 D1:BF92 -  -  -  -  sine_4_2: 
  274 D1:BF92 -  -  -  -  sine_4_31_2: ;freqMult, amplitude, phase 
  275 D1:BF92 00 -  -  -  	.db 0
  276 D1:BF93 -  -  -  -  sine_4_15_2: ;freqMult, amplitude, phase 
  277 D1:BF93 00 -  -  -  	.db 0 
  278 D1:BF94 -  -  -  -  sine_4_7_2: ;freqMult, amplitude, phase 
  279 D1:BF94 00 -  -  -  	.db 0 
  280 D1:BF95 -  -  -  -  sine_4_3_2: ;freqMult, amplitude, phase 
  281 D1:BF95 00 -  -  -  	.db 0 
  282 D1:BF96 -  -  -  -  sine_4_1_2: ;freqMult, amplitude, phase 
  283 D1:BF96 00 -  -  -  	.db 0 
  284 D1:BF97 -  -  -  -  
  285 D1:BF97 -  -  -  -  	
  286 D1:BF97 -  -  -  -  sine_4_3: 
  287 D1:BF97 -  -  -  -  sine_4_31_3: ;freqMult, amplitude, phase 
  288 D1:BF97 00 -  -  -  	.db 0 
  289 D1:BF98 -  -  -  -  sine_4_15_3: ;freqMult, amplitude, phase 
  290 D1:BF98 00 -  -  -  	.db 0 
  291 D1:BF99 -  -  -  -  sine_4_7_3: ;freqMult, amplitude, phase 
  292 D1:BF99 00 -  -  -  	.db 0 
  293 D1:BF9A -  -  -  -  sine_4_3_3: ;freqMult, amplitude, phase 
  294 D1:BF9A 00 -  -  -  	.db 0 
  295 D1:BF9B -  -  -  -  sine_4_1_3: ;freqMult, amplitude, phase 
  296 D1:BF9B 00 -  -  -  	.db 0 
  297 D1:BF9C -  -  -  -  
  298 D1:BF9C -  -  -  -  	
  299 D1:BF9C -  -  -  -  sine_4_4: 
  300 D1:BF9C -  -  -  -  sine_4_314: ;freqMult, amplitude, phase 
  301 D1:BF9C 00 -  -  -  	.db 0
  302 D1:BF9D -  -  -  -  sine_4_15_4: ;freqMult, amplitude, phase 
  303 D1:BF9D 00 -  -  -  	.db 0 
  304 D1:BF9E -  -  -  -  sine_4_7_4: ;freqMult, amplitude, phase 
  305 D1:BF9E 00 -  -  -  	.db 0 
  306 D1:BF9F -  -  -  -  sine_4_3_4: ;freqMult, amplitude, phase 
  307 D1:BF9F 00 -  -  -  	.db 0 
  308 D1:BFA0 -  -  -  -  sine_4_1_4: ;freqMult, amplitude, phase 
  309 D1:BFA0 00 -  -  -  	.db 0 
  310 D1:BFA1 -  -  -  -  
  311 D1:BFA1 -  -  -  -  
  312 D1:BFA1 -  -  -  -  
  313 D1:BFA1 -  -  -  -  
  314 D1:BFA1 -  -  -  -  
  315 D1:BFA1 -  -  -  -  sine_8_1: ;double freq mult
  316 D1:BFA1 -  -  -  -  sine_8_31_1: ;freqMult, amplitude, phase 
  317 D1:BFA1 00 -  -  -  	.db 0 
  318 D1:BFA2 -  -  -  -  sine_8_15_1: ;freqMult, amplitude, phase 
  319 D1:BFA2 00 -  -  -  	.db 0 
  320 D1:BFA3 -  -  -  -  sine_8_7_1: ;freqMult, amplitude, phase 
  321 D1:BFA3 00 -  -  -  	.db 0 
  322 D1:BFA4 -  -  -  -  sine_8_3_1: ;freqMult, amplitude, phase 
  323 D1:BFA4 00 -  -  -  	.db 0 
  324 D1:BFA5 -  -  -  -  sine_8_1_1: ;freqMult, amplitude, phase 
  325 D1:BFA5 00 -  -  -  	.db 0 
  326 D1:BFA6 -  -  -  -  
  327 D1:BFA6 -  -  -  -  	
  328 D1:BFA6 -  -  -  -  sine_8_2: 
  329 D1:BFA6 -  -  -  -  sine_8_31_2: ;freqMult, amplitude, phase 
  330 D1:BFA6 00 -  -  -  	.db 0 
  331 D1:BFA7 -  -  -  -  sine_8_15_2: ;freqMult, amplitude, phase 
  332 D1:BFA7 00 -  -  -  	.db 0 
  333 D1:BFA8 -  -  -  -  sine_8_7_2: ;freqMult, amplitude, phase 
  334 D1:BFA8 00 -  -  -  	.db 0 
  335 D1:BFA9 -  -  -  -  sine_8_3_2: ;freqMult, amplitude, phase 
  336 D1:BFA9 00 -  -  -  	.db 0 
  337 D1:BFAA -  -  -  -  sine_8_1_2: ;freqMult, amplitude, phase 
  338 D1:BFAA 00 -  -  -  	.db 0 
  339 D1:BFAB -  -  -  -  
  340 D1:BFAB -  -  -  -  	
  341 D1:BFAB -  -  -  -  sine_8_3: 
  342 D1:BFAB -  -  -  -  sine_8_313: ;freqMult, amplitude, phase 
  343 D1:BFAB 00 -  -  -  	.db 0 
  344 D1:BFAC -  -  -  -  sine_8_15_3: ;freqMult, amplitude, phase 
  345 D1:BFAC 00 -  -  -  	.db 0 
  346 D1:BFAD -  -  -  -  sine_8_7_3: ;freqMult, amplitude, phase 
  347 D1:BFAD 00 -  -  -  	.db 0 
  348 D1:BFAE -  -  -  -  sine_8_3_3: ;freqMult, amplitude, phase 
  349 D1:BFAE 00 -  -  -  	.db 0 
  350 D1:BFAF -  -  -  -  sine_8_1_3: ;freqMult, amplitude, phase 
  351 D1:BFAF 00 -  -  -  	.db 0 
  352 D1:BFB0 -  -  -  -  
  353 D1:BFB0 -  -  -  -  	
  354 D1:BFB0 -  -  -  -  sine_8_4: 
  355 D1:BFB0 -  -  -  -  sine_8_31_4: ;freqMult, amplitude, phase 
  356 D1:BFB0 00 -  -  -  	.db 0
  357 D1:BFB1 -  -  -  -  sine_8_15_4: ;freqMult, amplitude, phase 
  358 D1:BFB1 00 -  -  -  	.db 0 
  359 D1:BFB2 -  -  -  -  sine_8_7_4: ;freqMult, amplitude, phase 
  360 D1:BFB2 00 -  -  -  	.db 0 
  361 D1:BFB3 -  -  -  -  sine_8_3_4: ;freqMult, amplitude, phase 
  362 D1:BFB3 00 -  -  -  	.db 0 
  363 D1:BFB4 -  -  -  -  sine_8_1_4: ;freqMult, amplitude, phase 
  364 D1:BFB4 00 -  -  -  	.db 0 
  365 D1:BFB5 -  -  -  -  
  366 D1:BFB5 -  -  -  -  
  367 D1:BFB5 -  -  -  -  
  368 D1:BFB5 -  -  -  -  
  369 D1:BFB5 -  -  -  -  sine:
  370 D1:BFB5 80 -  -  -  	.db 128
  371 D1:BFB6 83 -  -  -  	.db 131
  372 D1:BFB7 86 -  -  -  	.db 134
  373 D1:BFB8 89 -  -  -  	.db 137
  374 D1:BFB9 8C -  -  -  	.db 140
  375 D1:BFBA 8F -  -  -  	.db 143
  376 D1:BFBB 92 -  -  -  	.db 146
  377 D1:BFBC 95 -  -  -  	.db 149
  378 D1:BFBD 98 -  -  -  	.db 152
  379 D1:BFBE 9C -  -  -  	.db 156
  380 D1:BFBF 9F -  -  -  	.db 159
  381 D1:BFC0 A2 -  -  -  	.db 162
  382 D1:BFC1 A5 -  -  -  	.db 165
  383 D1:BFC2 A8 -  -  -  	.db 168
  384 D1:BFC3 AB -  -  -  	.db 171
  385 D1:BFC4 AE -  -  -  	.db 174
  386 D1:BFC5 B0 -  -  -  	.db 176
  387 D1:BFC6 B3 -  -  -  	.db 179
  388 D1:BFC7 B6 -  -  -  	.db 182
  389 D1:BFC8 B9 -  -  -  	.db 185
  390 D1:BFC9 BC -  -  -  	.db 188
  391 D1:BFCA BF -  -  -  	.db 191
  392 D1:BFCB C1 -  -  -  	.db 193
  393 D1:BFCC C4 -  -  -  	.db 196
  394 D1:BFCD C7 -  -  -  	.db 199
  395 D1:BFCE C9 -  -  -  	.db 201
  396 D1:BFCF CC -  -  -  	.db 204
  397 D1:BFD0 CE -  -  -  	.db 206
  398 D1:BFD1 D1 -  -  -  	.db 209
  399 D1:BFD2 D3 -  -  -  	.db 211
  400 D1:BFD3 D5 -  -  -  	.db 213
  401 D1:BFD4 D8 -  -  -  	.db 216
  402 D1:BFD5 DA -  -  -  	.db 218
  403 D1:BFD6 DC -  -  -  	.db 220
  404 D1:BFD7 DE -  -  -  	.db 222
  405 D1:BFD8 E0 -  -  -  	.db 224
  406 D1:BFD9 E2 -  -  -  	.db 226
  407 D1:BFDA E4 -  -  -  	.db 228
  408 D1:BFDB E6 -  -  -  	.db 230
  409 D1:BFDC E8 -  -  -  	.db 232
  410 D1:BFDD EA -  -  -  	.db 234
  411 D1:BFDE EB -  -  -  	.db 235
  412 D1:BFDF ED -  -  -  	.db 237
  413 D1:BFE0 EF -  -  -  	.db 239
  414 D1:BFE1 F0 -  -  -  	.db 240
  415 D1:BFE2 F2 -  -  -  	.db 242
  416 D1:BFE3 F3 -  -  -  	.db 243
  417 D1:BFE4 F4 -  -  -  	.db 244
  418 D1:BFE5 F6 -  -  -  	.db 246
  419 D1:BFE6 F7 -  -  -  	.db 247
  420 D1:BFE7 F8 -  -  -  	.db 248
  421 D1:BFE8 F9 -  -  -  	.db 249
  422 D1:BFE9 FA -  -  -  	.db 250
  423 D1:BFEA FB -  -  -  	.db 251
  424 D1:BFEB FB -  -  -  	.db 251
  425 D1:BFEC FC -  -  -  	.db 252
  426 D1:BFED FD -  -  -  	.db 253
  427 D1:BFEE FD -  -  -  	.db 253
  428 D1:BFEF FE -  -  -  	.db 254
  429 D1:BFF0 FE -  -  -  	.db 254
  430 D1:BFF1 FE -  -  -  	.db 254
  431 D1:BFF2 FF -  -  -  	.db 255
  432 D1:BFF3 FF -  -  -  	.db 255
  433 D1:BFF4 FF -  -  -  	.db 255
  434 D1:BFF5 FF -  -  -  	.db 255
  435 D1:BFF6 FF -  -  -  	.db 255
  436 D1:BFF7 FF -  -  -  	.db 255
  437 D1:BFF8 FF -  -  -  	.db 255
  438 D1:BFF9 FE -  -  -  	.db 254
  439 D1:BFFA FE -  -  -  	.db 254
  440 D1:BFFB FD -  -  -  	.db 253
  441 D1:BFFC FD -  -  -  	.db 253
  442 D1:BFFD FC -  -  -  	.db 252
  443 D1:BFFE FC -  -  -  	.db 252
  444 D1:BFFF FB -  -  -  	.db 251
  445 D1:C000 FA -  -  -  	.db 250
  446 D1:C001 F9 -  -  -  	.db 249
  447 D1:C002 F8 -  -  -  	.db 248
  448 D1:C003 F7 -  -  -  	.db 247
  449 D1:C004 F6 -  -  -  	.db 246
  450 D1:C005 F5 -  -  -  	.db 245
  451 D1:C006 F4 -  -  -  	.db 244
  452 D1:C007 F2 -  -  -  	.db 242
  453 D1:C008 F1 -  -  -  	.db 241
  454 D1:C009 EF -  -  -  	.db 239
  455 D1:C00A EE -  -  -  	.db 238
  456 D1:C00B EC -  -  -  	.db 236
  457 D1:C00C EB -  -  -  	.db 235
  458 D1:C00D E9 -  -  -  	.db 233
  459 D1:C00E E7 -  -  -  	.db 231
  460 D1:C00F E5 -  -  -  	.db 229
  461 D1:C010 E3 -  -  -  	.db 227
  462 D1:C011 E1 -  -  -  	.db 225
  463 D1:C012 DF -  -  -  	.db 223
  464 D1:C013 DD -  -  -  	.db 221
  465 D1:C014 DB -  -  -  	.db 219
  466 D1:C015 D9 -  -  -  	.db 217
  467 D1:C016 D7 -  -  -  	.db 215
  468 D1:C017 D4 -  -  -  	.db 212
  469 D1:C018 D2 -  -  -  	.db 210
  470 D1:C019 CF -  -  -  	.db 207
  471 D1:C01A CD -  -  -  	.db 205
  472 D1:C01B CA -  -  -  	.db 202
  473 D1:C01C C8 -  -  -  	.db 200
  474 D1:C01D C5 -  -  -  	.db 197
  475 D1:C01E C3 -  -  -  	.db 195
  476 D1:C01F C0 -  -  -  	.db 192
  477 D1:C020 BD -  -  -  	.db 189
  478 D1:C021 BA -  -  -  	.db 186
  479 D1:C022 B8 -  -  -  	.db 184
  480 D1:C023 B5 -  -  -  	.db 181
  481 D1:C024 B2 -  -  -  	.db 178
  482 D1:C025 AF -  -  -  	.db 175
  483 D1:C026 AC -  -  -  	.db 172
  484 D1:C027 A9 -  -  -  	.db 169
  485 D1:C028 A6 -  -  -  	.db 166
  486 D1:C029 A3 -  -  -  	.db 163
  487 D1:C02A A0 -  -  -  	.db 160
  488 D1:C02B 9D -  -  -  	.db 157
  489 D1:C02C 9A -  -  -  	.db 154
  490 D1:C02D 97 -  -  -  	.db 151
  491 D1:C02E 94 -  -  -  	.db 148
  492 D1:C02F 91 -  -  -  	.db 145
  493 D1:C030 8E -  -  -  	.db 142
  494 D1:C031 8A -  -  -  	.db 138
  495 D1:C032 87 -  -  -  	.db 135
  496 D1:C033 84 -  -  -  	.db 132
  497 D1:C034 81 -  -  -  	.db 129
  498 D1:C035 7E -  -  -  	.db 126
  499 D1:C036 7B -  -  -  	.db 123
  500 D1:C037 78 -  -  -  	.db 120
  501 D1:C038 75 -  -  -  	.db 117
  502 D1:C039 71 -  -  -  	.db 113
  503 D1:C03A 6E -  -  -  	.db 110
  504 D1:C03B 6B -  -  -  	.db 107
  505 D1:C03C 68 -  -  -  	.db 104
  506 D1:C03D 65 -  -  -  	.db 101
  507 D1:C03E 62 -  -  -  	.db 98
  508 D1:C03F 5F -  -  -  	.db 95
  509 D1:C040 5C -  -  -  	.db 92
  510 D1:C041 59 -  -  -  	.db 89
  511 D1:C042 56 -  -  -  	.db 86
  512 D1:C043 53 -  -  -  	.db 83
  513 D1:C044 50 -  -  -  	.db 80
  514 D1:C045 4D -  -  -  	.db 77
  515 D1:C046 4A -  -  -  	.db 74
  516 D1:C047 47 -  -  -  	.db 71
  517 D1:C048 45 -  -  -  	.db 69
  518 D1:C049 42 -  -  -  	.db 66
  519 D1:C04A 3F -  -  -  	.db 63
  520 D1:C04B 3C -  -  -  	.db 60
  521 D1:C04C 3A -  -  -  	.db 58
  522 D1:C04D 37 -  -  -  	.db 55
  523 D1:C04E 35 -  -  -  	.db 53
  524 D1:C04F 32 -  -  -  	.db 50
  525 D1:C050 30 -  -  -  	.db 48
  526 D1:C051 2D -  -  -  	.db 45
  527 D1:C052 2B -  -  -  	.db 43
  528 D1:C053 28 -  -  -  	.db 40
  529 D1:C054 26 -  -  -  	.db 38
  530 D1:C055 24 -  -  -  	.db 36
  531 D1:C056 22 -  -  -  	.db 34
  532 D1:C057 20 -  -  -  	.db 32
  533 D1:C058 1E -  -  -  	.db 30
  534 D1:C059 1C -  -  -  	.db 28
  535 D1:C05A 1A -  -  -  	.db 26
  536 D1:C05B 18 -  -  -  	.db 24
  537 D1:C05C 16 -  -  -  	.db 22
  538 D1:C05D 14 -  -  -  	.db 20
  539 D1:C05E 13 -  -  -  	.db 19
  540 D1:C05F 11 -  -  -  	.db 17
  541 D1:C060 10 -  -  -  	.db 16
  542 D1:C061 0E -  -  -  	.db 14
  543 D1:C062 0D -  -  -  	.db 13
  544 D1:C063 0B -  -  -  	.db 11
  545 D1:C064 0A -  -  -  	.db 10
  546 D1:C065 09 -  -  -  	.db 9
  547 D1:C066 08 -  -  -  	.db 8
  548 D1:C067 07 -  -  -  	.db 7
  549 D1:C068 06 -  -  -  	.db 6
  550 D1:C069 05 -  -  -  	.db 5
  551 D1:C06A 04 -  -  -  	.db 4
  552 D1:C06B 03 -  -  -  	.db 3
  553 D1:C06C 03 -  -  -  	.db 3
  554 D1:C06D 02 -  -  -  	.db 2
  555 D1:C06E 02 -  -  -  	.db 2
  556 D1:C06F 01 -  -  -  	.db 1
  557 D1:C070 01 -  -  -  	.db 1
  558 D1:C071 00 -  -  -  	.db 0
  559 D1:C072 00 -  -  -  	.db 0
  560 D1:C073 00 -  -  -  	.db 0
  561 D1:C074 00 -  -  -  	.db 0
  562 D1:C075 00 -  -  -  	.db 0
  563 D1:C076 00 -  -  -  	.db 0
  564 D1:C077 00 -  -  -  	.db 0
  565 D1:C078 01 -  -  -  	.db 1
  566 D1:C079 01 -  -  -  	.db 1
  567 D1:C07A 01 -  -  -  	.db 1
  568 D1:C07B 02 -  -  -  	.db 2
  569 D1:C07C 02 -  -  -  	.db 2
  570 D1:C07D 03 -  -  -  	.db 3
  571 D1:C07E 04 -  -  -  	.db 4
  572 D1:C07F 04 -  -  -  	.db 4
  573 D1:C080 05 -  -  -  	.db 5
  574 D1:C081 06 -  -  -  	.db 6
  575 D1:C082 07 -  -  -  	.db 7
  576 D1:C083 08 -  -  -  	.db 8
  577 D1:C084 09 -  -  -  	.db 9
  578 D1:C085 0B -  -  -  	.db 11
  579 D1:C086 0C -  -  -  	.db 12
  580 D1:C087 0D -  -  -  	.db 13
  581 D1:C088 0F -  -  -  	.db 15
  582 D1:C089 10 -  -  -  	.db 16
  583 D1:C08A 12 -  -  -  	.db 18
  584 D1:C08B 14 -  -  -  	.db 20
  585 D1:C08C 15 -  -  -  	.db 21
  586 D1:C08D 17 -  -  -  	.db 23
  587 D1:C08E 19 -  -  -  	.db 25
  588 D1:C08F 1B -  -  -  	.db 27
  589 D1:C090 1D -  -  -  	.db 29
  590 D1:C091 1F -  -  -  	.db 31
  591 D1:C092 21 -  -  -  	.db 33
  592 D1:C093 23 -  -  -  	.db 35
  593 D1:C094 25 -  -  -  	.db 37
  594 D1:C095 27 -  -  -  	.db 39
  595 D1:C096 2A -  -  -  	.db 42
  596 D1:C097 2C -  -  -  	.db 44
  597 D1:C098 2E -  -  -  	.db 46
  598 D1:C099 31 -  -  -  	.db 49
  599 D1:C09A 33 -  -  -  	.db 51
  600 D1:C09B 36 -  -  -  	.db 54
  601 D1:C09C 38 -  -  -  	.db 56
  602 D1:C09D 3B -  -  -  	.db 59
  603 D1:C09E 3E -  -  -  	.db 62
  604 D1:C09F 40 -  -  -  	.db 64
  605 D1:C0A0 43 -  -  -  	.db 67
  606 D1:C0A1 46 -  -  -  	.db 70
  607 D1:C0A2 49 -  -  -  	.db 73
  608 D1:C0A3 4C -  -  -  	.db 76
  609 D1:C0A4 4F -  -  -  	.db 79
  610 D1:C0A5 51 -  -  -  	.db 81
  611 D1:C0A6 54 -  -  -  	.db 84
  612 D1:C0A7 57 -  -  -  	.db 87
  613 D1:C0A8 5A -  -  -  	.db 90
  614 D1:C0A9 5D -  -  -  	.db 93
  615 D1:C0AA 60 -  -  -  	.db 96
  616 D1:C0AB 63 -  -  -  	.db 99
  617 D1:C0AC 67 -  -  -  	.db 103
  618 D1:C0AD 6A -  -  -  	.db 106
  619 D1:C0AE 6D -  -  -  	.db 109
  620 D1:C0AF 70 -  -  -  	.db 112
  621 D1:C0B0 73 -  -  -  	.db 115
  622 D1:C0B1 76 -  -  -  	.db 118
  623 D1:C0B2 79 -  -  -  	.db 121
  624 D1:C0B3 7C -  -  -  	.db 124
  625 D1:C0B4 7F -  -  -  	.db 127
  626 D1:C0B5 -  -  -  -  	
Listing for file "ascent.asm"
  558 D1:C0B5 -  -  -  -  #include "animations.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\animations.txt"
    1 D1:C0B5 -  -  -  -   
    2 D1:C0B5 -  -  -  -  update_animations:
    3 D1:C0B5 -  -  -  -  	;Will update all animations every frame. Not significant performance impact
    4 D1:C0B5 -  -  -  -  	
    5 D1:C0B5 -  -  -  -  	;POSITION
    6 D1:C0B5 -  -  -  -  	;load hl with data pointer (dataframe or sprite group)
    7 D1:C0B5 -  -  -  -  	;ld bc with number of bytes to target property
    8 D1:C0B5 -  -  -  -  	;add hl bc 
    9 D1:C0B5 -  -  -  -  
   10 D1:C0B5 -  -  -  -  	;ld a with desired sine freq,phase,and amplitude 
   11 D1:C0B5 -  -  -  -  	;add a,xx ;Base value
   12 D1:C0B5 -  -  -  -  	;ld (hl),a
   13 D1:C0B5 -  -  -  -  
   14 D1:C0B5 -  -  -  -  	;7 bytes per animated value
   15 D1:C0B5 08 -  -  -  	ex af, af' ;'
   16 D1:C0B6 3E 01 -  -  	ld a,1 ;Number of animations 
   17 D1:C0B8 21 E2 C0 D1 	ld hl,position_animation_data
   18 D1:C0BC -  -  -  -  update_animation_position_loop:
   19 D1:C0BC 08 -  -  -  	ex af, af' ;'
   20 D1:C0BD ED 17 -  -  	ld de,(hl);load address of property
   21 D1:C0BF 23 -  -  -  	inc hl
   22 D1:C0C0 23 -  -  -  	inc hl 
   23 D1:C0C1 23 -  -  -  	inc hl 
   24 D1:C0C2 ED 07 -  -  	ld bc,(hl) ;address of anim curve 
   25 D1:C0C4 23 -  -  -  	inc hl 
   26 D1:C0C5 23 -  -  -  	inc hl 
   27 D1:C0C6 23 -  -  -  	inc hl
   28 D1:C0C7 0A -  -  -  	ld a,(bc) ;value of anim curve
   29 D1:C0C8 4E -  -  -  	ld c, (hl) ;base value
   30 D1:C0C9 23 -  -  -  	inc hl
   31 D1:C0CA 81 -  -  -  	add a,c
   32 D1:C0CB 12 -  -  -  	ld (de),a 
   33 D1:C0CC 08 -  -  -  	ex af, af' ;'
   34 D1:C0CD 3D -  -  -  	dec a 
   35 D1:C0CE C2 BC C0 D1 	jp nz,update_animation_position_loop
   36 D1:C0D2 -  -  -  -  	
   37 D1:C0D2 -  -  -  -  	
   38 D1:C0D2 08 -  -  -  	ex af, af' ;'
   39 D1:C0D3 3E 01 -  -  	ld a,1 ;Number of animations 
   40 D1:C0D5 21 E9 C0 D1 	ld hl,sprite_animation_data
   41 D1:C0D9 -  -  -  -  update_animation_sprite_loop:
   42 D1:C0D9 08 -  -  -  	ex af, af' ;'
   43 D1:C0DA ED 07 -  -  	ld bc,(hl) ;animation curve address
   44 D1:C0DC 23 -  -  -  	inc hl 
   45 D1:C0DD 23 -  -  -  	inc hl
   46 D1:C0DE 23 -  -  -  	inc hl
   47 D1:C0DF 1E 00 -  -  	ld e,(bc) 
   48 D1:C0E1 -  -  -  -  	
   49 D1:C0E1 -  -  -  -  	
   50 D1:C0E1 -  -  -  -  	;call write_a_to_ram
   51 D1:C0E1 C9 -  -  -  	ret 
   52 D1:C0E2 -  -  -  -  	
   53 D1:C0E2 -  -  -  -  	
   54 D1:C0E2 -  -  -  -  	
   55 D1:C0E2 -  -  -  -  	
   56 D1:C0E2 -  -  -  -  	;SPRITE
   57 D1:C0E2 -  -  -  -  	;ld hl with base data ptr
   58 D1:C0E2 -  -  -  -  	;ld bc with number of bytes to target property
   59 D1:C0E2 -  -  -  -  	
   60 D1:C0E2 -  -  -  -  
   61 D1:C0E2 -  -  -  -  position_animation_data: ;7 bytes per animation
   62 D1:C0E2 -  -  -  -  	;.dl address of target property
   63 D1:C0E2 -  -  -  -  	;.dl address of desired animation curve value (could use lookup table to reduce memory)
   64 D1:C0E2 -  -  -  -  	;.db base value 
   65 D1:C0E2 -  -  -  -  	;...
   66 D1:C0E2 99 C4 D1 -  	.dl MG_Data_0 + 18 
   67 D1:C0E5 A6 BF D1 -  	.dl sine_8_31_2
   68 D1:C0E8 A8 -  -  -  	.db 168
   69 D1:C0E9 -  -  -  -  	
   70 D1:C0E9 -  -  -  -  	
   71 D1:C0E9 -  -  -  -  
   72 D1:C0E9 -  -  -  -  sprite_animation_data: ;14 bytes per animation
   73 D1:C0E9 -  -  -  -  	;.dl address of desired animation curve value (could use lookup table to reduce memory)
   74 D1:C0E9 -  -  -  -  	;.db sprite frame 0 
   75 D1:C0E9 -  -  -  -  	;.db sprite frame 1
   76 D1:C0E9 -  -  -  -  	;.db sprite frame 2
   77 D1:C0E9 -  -  -  -  	;.db sprite frame 3
   78 D1:C0E9 -  -  -  -  	;.db sprite frame 4
   79 D1:C0E9 -  -  -  -  	;.db sprite frame 5
   80 D1:C0E9 -  -  -  -  	;.db sprite frame 6
   81 D1:C0E9 -  -  -  -  	;.db sprite frame 7
   82 D1:C0E9 -  -  -  -  	;.dl address of target property
   83 D1:C0E9 -  -  -  -  
   84 D1:C0E9 -  -  -  -  	
   85 D1:C0E9 -  -  -  -  	
   86 D1:C0E9 -  -  -  -  	
   87 D1:C0E9 -  -  -  -   
   88 D1:C0E9 -  -  -  -   
   89 D1:C0E9 -  -  -  -   
Listing for file "ascent.asm"
  559 D1:C0E9 -  -  -  -  ;#include "levelData.txt"
  560 D1:C0E9 -  -  -  -  ;#include "FGLevelData.txt"
  561 D1:C0E9 -  -  -  -  ;#include "testing/TestingCollisionData.txt"
  562 D1:C0E9 -  -  -  -  
  563 D1:C0E9 -  -  -  -  #include "generated/BG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\BG_Data.txt"
    1 D1:C0E9 -  -  -  -  BG_Data_frame_table:
    2 D1:C0E9 89 C1 D1 -  	.dl BG_Data_0
    3 D1:C0EC 7B C1 D1 -  	.dl BG_Data_1
    4 D1:C0EF 79 C1 D1 -  	.dl BG_Data_2
    5 D1:C0F2 77 C1 D1 -  	.dl BG_Data_3
    6 D1:C0F5 75 C1 D1 -  	.dl BG_Data_4
    7 D1:C0F8 73 C1 D1 -  	.dl BG_Data_5
    8 D1:C0FB 71 C1 D1 -  	.dl BG_Data_6
    9 D1:C0FE 6F C1 D1 -  	.dl BG_Data_7
   10 D1:C101 6D C1 D1 -  	.dl BG_Data_8
   11 D1:C104 6B C1 D1 -  	.dl BG_Data_9
   12 D1:C107 69 C1 D1 -  	.dl BG_Data_10
   13 D1:C10A 67 C1 D1 -  	.dl BG_Data_11
   14 D1:C10D 65 C1 D1 -  	.dl BG_Data_12
   15 D1:C110 63 C1 D1 -  	.dl BG_Data_13
   16 D1:C113 61 C1 D1 -  	.dl BG_Data_14
   17 D1:C116 5F C1 D1 -  	.dl BG_Data_15
   18 D1:C119 5D C1 D1 -  	.dl BG_Data_16
   19 D1:C11C 5B C1 D1 -  	.dl BG_Data_17
   20 D1:C11F 59 C1 D1 -  	.dl BG_Data_18
   21 D1:C122 57 C1 D1 -  	.dl BG_Data_19
   22 D1:C125 55 C1 D1 -  	.dl BG_Data_20
   23 D1:C128 53 C1 D1 -  	.dl BG_Data_21
   24 D1:C12B 51 C1 D1 -  	.dl BG_Data_22
   25 D1:C12E 4F C1 D1 -  	.dl BG_Data_23
   26 D1:C131 4D C1 D1 -  	.dl BG_Data_24
   27 D1:C134 4B C1 D1 -  	.dl BG_Data_25
   28 D1:C137 49 C1 D1 -  	.dl BG_Data_26
   29 D1:C13A 47 C1 D1 -  	.dl BG_Data_27
   30 D1:C13D 45 C1 D1 -  	.dl BG_Data_28
   31 D1:C140 43 C1 D1 -  	.dl BG_Data_29
   32 D1:C143 -  -  -  -  
   33 D1:C143 -  -  -  -  
   34 D1:C143 -  -  -  -  
   35 D1:C143 -  -  -  -  BG_Data_29:
   36 D1:C143 00 -  -  -  	.db 0
   37 D1:C144 00 -  -  -  	.db 0
   38 D1:C145 -  -  -  -  
   39 D1:C145 -  -  -  -  BG_Data_28:
   40 D1:C145 00 -  -  -  	.db 0
   41 D1:C146 00 -  -  -  	.db 0
   42 D1:C147 -  -  -  -  
   43 D1:C147 -  -  -  -  BG_Data_27:
   44 D1:C147 00 -  -  -  	.db 0
   45 D1:C148 00 -  -  -  	.db 0
   46 D1:C149 -  -  -  -  
   47 D1:C149 -  -  -  -  BG_Data_26:
   48 D1:C149 00 -  -  -  	.db 0
   49 D1:C14A 00 -  -  -  	.db 0
   50 D1:C14B -  -  -  -  
   51 D1:C14B -  -  -  -  BG_Data_25:
   52 D1:C14B 00 -  -  -  	.db 0
   53 D1:C14C 00 -  -  -  	.db 0
   54 D1:C14D -  -  -  -  
   55 D1:C14D -  -  -  -  BG_Data_24:
   56 D1:C14D 00 -  -  -  	.db 0
   57 D1:C14E 00 -  -  -  	.db 0
   58 D1:C14F -  -  -  -  
   59 D1:C14F -  -  -  -  BG_Data_23:
   60 D1:C14F 00 -  -  -  	.db 0
   61 D1:C150 00 -  -  -  	.db 0
   62 D1:C151 -  -  -  -  
   63 D1:C151 -  -  -  -  BG_Data_22:
   64 D1:C151 00 -  -  -  	.db 0
   65 D1:C152 00 -  -  -  	.db 0
   66 D1:C153 -  -  -  -  
   67 D1:C153 -  -  -  -  BG_Data_21:
   68 D1:C153 00 -  -  -  	.db 0
   69 D1:C154 00 -  -  -  	.db 0
   70 D1:C155 -  -  -  -  
   71 D1:C155 -  -  -  -  BG_Data_20:
   72 D1:C155 00 -  -  -  	.db 0
   73 D1:C156 00 -  -  -  	.db 0
   74 D1:C157 -  -  -  -  
   75 D1:C157 -  -  -  -  BG_Data_19:
   76 D1:C157 00 -  -  -  	.db 0
   77 D1:C158 00 -  -  -  	.db 0
   78 D1:C159 -  -  -  -  
   79 D1:C159 -  -  -  -  BG_Data_18:
   80 D1:C159 00 -  -  -  	.db 0
   81 D1:C15A 00 -  -  -  	.db 0
   82 D1:C15B -  -  -  -  
   83 D1:C15B -  -  -  -  BG_Data_17:
   84 D1:C15B 00 -  -  -  	.db 0
   85 D1:C15C 00 -  -  -  	.db 0
   86 D1:C15D -  -  -  -  
   87 D1:C15D -  -  -  -  BG_Data_16:
   88 D1:C15D 00 -  -  -  	.db 0
   89 D1:C15E 00 -  -  -  	.db 0
   90 D1:C15F -  -  -  -  
   91 D1:C15F -  -  -  -  BG_Data_15:
   92 D1:C15F 00 -  -  -  	.db 0
   93 D1:C160 00 -  -  -  	.db 0
   94 D1:C161 -  -  -  -  
   95 D1:C161 -  -  -  -  BG_Data_14:
   96 D1:C161 00 -  -  -  	.db 0
   97 D1:C162 00 -  -  -  	.db 0
   98 D1:C163 -  -  -  -  
   99 D1:C163 -  -  -  -  BG_Data_13:
  100 D1:C163 00 -  -  -  	.db 0
  101 D1:C164 00 -  -  -  	.db 0
  102 D1:C165 -  -  -  -  
  103 D1:C165 -  -  -  -  BG_Data_12:
  104 D1:C165 00 -  -  -  	.db 0
  105 D1:C166 00 -  -  -  	.db 0
  106 D1:C167 -  -  -  -  
  107 D1:C167 -  -  -  -  BG_Data_11:
  108 D1:C167 00 -  -  -  	.db 0
  109 D1:C168 00 -  -  -  	.db 0
  110 D1:C169 -  -  -  -  
  111 D1:C169 -  -  -  -  BG_Data_10:
  112 D1:C169 00 -  -  -  	.db 0
  113 D1:C16A 00 -  -  -  	.db 0
  114 D1:C16B -  -  -  -  
  115 D1:C16B -  -  -  -  BG_Data_9:
  116 D1:C16B 00 -  -  -  	.db 0
  117 D1:C16C 00 -  -  -  	.db 0
  118 D1:C16D -  -  -  -  
  119 D1:C16D -  -  -  -  BG_Data_8:
  120 D1:C16D 00 -  -  -  	.db 0
  121 D1:C16E 00 -  -  -  	.db 0
  122 D1:C16F -  -  -  -  
  123 D1:C16F -  -  -  -  BG_Data_7:
  124 D1:C16F 00 -  -  -  	.db 0
  125 D1:C170 00 -  -  -  	.db 0
  126 D1:C171 -  -  -  -  
  127 D1:C171 -  -  -  -  BG_Data_6:
  128 D1:C171 00 -  -  -  	.db 0
  129 D1:C172 00 -  -  -  	.db 0
  130 D1:C173 -  -  -  -  
  131 D1:C173 -  -  -  -  BG_Data_5:
  132 D1:C173 00 -  -  -  	.db 0
  133 D1:C174 00 -  -  -  	.db 0
  134 D1:C175 -  -  -  -  
  135 D1:C175 -  -  -  -  BG_Data_4:
  136 D1:C175 00 -  -  -  	.db 0
  137 D1:C176 00 -  -  -  	.db 0
  138 D1:C177 -  -  -  -  
  139 D1:C177 -  -  -  -  BG_Data_3:
  140 D1:C177 00 -  -  -  	.db 0
  141 D1:C178 00 -  -  -  	.db 0
  142 D1:C179 -  -  -  -  
  143 D1:C179 -  -  -  -  BG_Data_2:
  144 D1:C179 00 -  -  -  	.db 0
  145 D1:C17A 00 -  -  -  	.db 0
  146 D1:C17B -  -  -  -  
  147 D1:C17B -  -  -  -  BG_Data_1:
  148 D1:C17B 00 -  -  -  	.db 0
  149 D1:C17C 03 -  -  -  	.db 3
  150 D1:C17D 22 FF 7D 20 	.db 34, 255, 125, 32  ;SG_Cloud1
  151 D1:C181 70 FF 76 20 	.db 112, 255, 118, 32  ;SG_Cloud1
  152 D1:C185 A3 FF 15 20 	.db 163, 255, 21, 32  ;SG_Cloud1
  153 D1:C189 -  -  -  -  
  154 D1:C189 -  -  -  -  BG_Data_0:
  155 D1:C189 00 -  -  -  	.db 0
  156 D1:C18A 23 -  -  -  	.db 35
  157 D1:C18B 55 FF 00 1D 	.db 85, 255, 0, 29  ;SG_DarkGroundChunk
  158 D1:C18F 4F FF 88 1D 	.db 79, 255, 136, 29  ;SG_DarkGroundChunk
  159 D1:C193 55 FF 18 1D 	.db 85, 255, 24, 29  ;SG_DarkGroundChunk
  160 D1:C197 50 FF 70 1D 	.db 80, 255, 112, 29  ;SG_DarkGroundChunk
  161 D1:C19B 81 FF 72 1F 	.db 129, 255, 114, 31  ;SG_BGTree2
  162 D1:C19F 81 FF 89 1F 	.db 129, 255, 137, 31  ;SG_BGTree2
  163 D1:C1A3 88 FF 16 1F 	.db 136, 255, 22, 31  ;SG_BGTree2
  164 D1:C1A7 8D FF 0B 1F 	.db 141, 255, 11, 31  ;SG_BGTree2
  165 D1:C1AB 82 FF 91 1E 	.db 130, 255, 145, 30  ;SG_BGTree1
  166 D1:C1AF 80 FF 80 1E 	.db 128, 255, 128, 30  ;SG_BGTree1
  167 D1:C1B3 7F FF 77 1E 	.db 127, 255, 119, 30  ;SG_BGTree1
  168 D1:C1B7 81 FF 1F 1E 	.db 129, 255, 31, 30  ;SG_BGTree1
  169 D1:C1BB 84 FF 01 1E 	.db 132, 255, 1, 30  ;SG_BGTree1
  170 D1:C1BF 84 FF 7F 1F 	.db 132, 255, 127, 31  ;SG_BGTree2
  171 D1:C1C3 F2 FF 02 20 	.db 242, 255, 2, 32  ;SG_Cloud1
  172 D1:C1C7 43 FF 00 0D 	.db 67, 255, 0, 13  ;SG_GroundChunk1
  173 D1:C1CB 3D FF 70 0D 	.db 61, 255, 112, 13  ;SG_GroundChunk1
  174 D1:C1CF 3C FF 88 0C 	.db 60, 255, 136, 12  ;SG_GroundChunk2
  175 D1:C1D3 41 FF 18 0C 	.db 65, 255, 24, 12  ;SG_GroundChunk2
  176 D1:C1D7 2D FF 18 0D 	.db 45, 255, 24, 13  ;SG_GroundChunk1
  177 D1:C1DB 2A FF 00 0C 	.db 42, 255, 0, 12  ;SG_GroundChunk2
  178 D1:C1DF 26 FF 88 0D 	.db 38, 255, 136, 13  ;SG_GroundChunk1
  179 D1:C1E3 26 FF 70 0C 	.db 38, 255, 112, 12  ;SG_GroundChunk2
  180 D1:C1E7 34 0F 74 90 	.db 52, 15, 116, 144  ;GroundGrassSmall_Fast
  181 D1:C1EB 38 0F 96 90 	.db 56, 15, 150, 144  ;GroundGrassSmall_Fast
  182 D1:C1EF 42 0F 0C 90 	.db 66, 15, 12, 144  ;GroundGrassSmall_Fast
  183 D1:C1F3 3A 0F 20 91 	.db 58, 15, 32, 145  ;GroundGrassSmall_Fast_F
  184 D1:C1F7 35 0F 11 91 	.db 53, 15, 17, 145  ;GroundGrassSmall_Fast_F
  185 D1:C1FB 49 0F 0A 91 	.db 73, 15, 10, 145  ;GroundGrassSmall_Fast_F
  186 D1:C1FF 46 0F 1A 91 	.db 70, 15, 26, 145  ;GroundGrassSmall_Fast_F
  187 D1:C203 45 0F 27 91 	.db 69, 15, 39, 145  ;GroundGrassSmall_Fast_F
  188 D1:C207 40 0F 8D 90 	.db 64, 15, 141, 144  ;GroundGrassSmall_Fast
  189 D1:C20B 31 0F 84 90 	.db 49, 15, 132, 144  ;GroundGrassSmall_Fast
  190 D1:C20F 41 0F 82 90 	.db 65, 15, 130, 144  ;GroundGrassSmall_Fast
  191 D1:C213 2F 0F 8E 91 	.db 47, 15, 142, 145  ;GroundGrassSmall_Fast_F
  192 D1:C217 -  -  -  -  
  193 D1:C217 -  -  -  -  
  194 D1:C217 -  -  -  -  
Listing for file "ascent.asm"
  564 D1:C217 -  -  -  -  #include "generated/MG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\MG_Data.txt"
    1 D1:C217 -  -  -  -  MG_Data_frame_table:
    2 D1:C217 87 C4 D1 -  	.dl MG_Data_0
    3 D1:C21A 15 C4 D1 -  	.dl MG_Data_1
    4 D1:C21D AB C3 D1 -  	.dl MG_Data_2
    5 D1:C220 3D C3 D1 -  	.dl MG_Data_3
    6 D1:C223 E3 C2 D1 -  	.dl MG_Data_4
    7 D1:C226 A1 C2 D1 -  	.dl MG_Data_5
    8 D1:C229 9F C2 D1 -  	.dl MG_Data_6
    9 D1:C22C 9D C2 D1 -  	.dl MG_Data_7
   10 D1:C22F 9B C2 D1 -  	.dl MG_Data_8
   11 D1:C232 99 C2 D1 -  	.dl MG_Data_9
   12 D1:C235 97 C2 D1 -  	.dl MG_Data_10
   13 D1:C238 95 C2 D1 -  	.dl MG_Data_11
   14 D1:C23B 93 C2 D1 -  	.dl MG_Data_12
   15 D1:C23E 91 C2 D1 -  	.dl MG_Data_13
   16 D1:C241 8F C2 D1 -  	.dl MG_Data_14
   17 D1:C244 8D C2 D1 -  	.dl MG_Data_15
   18 D1:C247 8B C2 D1 -  	.dl MG_Data_16
   19 D1:C24A 89 C2 D1 -  	.dl MG_Data_17
   20 D1:C24D 87 C2 D1 -  	.dl MG_Data_18
   21 D1:C250 85 C2 D1 -  	.dl MG_Data_19
   22 D1:C253 83 C2 D1 -  	.dl MG_Data_20
   23 D1:C256 81 C2 D1 -  	.dl MG_Data_21
   24 D1:C259 7F C2 D1 -  	.dl MG_Data_22
   25 D1:C25C 7D C2 D1 -  	.dl MG_Data_23
   26 D1:C25F 7B C2 D1 -  	.dl MG_Data_24
   27 D1:C262 79 C2 D1 -  	.dl MG_Data_25
   28 D1:C265 77 C2 D1 -  	.dl MG_Data_26
   29 D1:C268 75 C2 D1 -  	.dl MG_Data_27
   30 D1:C26B 73 C2 D1 -  	.dl MG_Data_28
   31 D1:C26E 71 C2 D1 -  	.dl MG_Data_29
   32 D1:C271 -  -  -  -  
   33 D1:C271 -  -  -  -  
   34 D1:C271 -  -  -  -  
   35 D1:C271 -  -  -  -  MG_Data_29:
   36 D1:C271 00 -  -  -  	.db 0
   37 D1:C272 00 -  -  -  	.db 0
   38 D1:C273 -  -  -  -  
   39 D1:C273 -  -  -  -  MG_Data_28:
   40 D1:C273 00 -  -  -  	.db 0
   41 D1:C274 00 -  -  -  	.db 0
   42 D1:C275 -  -  -  -  
   43 D1:C275 -  -  -  -  MG_Data_27:
   44 D1:C275 00 -  -  -  	.db 0
   45 D1:C276 00 -  -  -  	.db 0
   46 D1:C277 -  -  -  -  
   47 D1:C277 -  -  -  -  MG_Data_26:
   48 D1:C277 00 -  -  -  	.db 0
   49 D1:C278 00 -  -  -  	.db 0
   50 D1:C279 -  -  -  -  
   51 D1:C279 -  -  -  -  MG_Data_25:
   52 D1:C279 00 -  -  -  	.db 0
   53 D1:C27A 00 -  -  -  	.db 0
   54 D1:C27B -  -  -  -  
   55 D1:C27B -  -  -  -  MG_Data_24:
   56 D1:C27B 00 -  -  -  	.db 0
   57 D1:C27C 00 -  -  -  	.db 0
   58 D1:C27D -  -  -  -  
   59 D1:C27D -  -  -  -  MG_Data_23:
   60 D1:C27D 00 -  -  -  	.db 0
   61 D1:C27E 00 -  -  -  	.db 0
   62 D1:C27F -  -  -  -  
   63 D1:C27F -  -  -  -  MG_Data_22:
   64 D1:C27F 00 -  -  -  	.db 0
   65 D1:C280 00 -  -  -  	.db 0
   66 D1:C281 -  -  -  -  
   67 D1:C281 -  -  -  -  MG_Data_21:
   68 D1:C281 00 -  -  -  	.db 0
   69 D1:C282 00 -  -  -  	.db 0
   70 D1:C283 -  -  -  -  
   71 D1:C283 -  -  -  -  MG_Data_20:
   72 D1:C283 00 -  -  -  	.db 0
   73 D1:C284 00 -  -  -  	.db 0
   74 D1:C285 -  -  -  -  
   75 D1:C285 -  -  -  -  MG_Data_19:
   76 D1:C285 00 -  -  -  	.db 0
   77 D1:C286 00 -  -  -  	.db 0
   78 D1:C287 -  -  -  -  
   79 D1:C287 -  -  -  -  MG_Data_18:
   80 D1:C287 00 -  -  -  	.db 0
   81 D1:C288 00 -  -  -  	.db 0
   82 D1:C289 -  -  -  -  
   83 D1:C289 -  -  -  -  MG_Data_17:
   84 D1:C289 00 -  -  -  	.db 0
   85 D1:C28A 00 -  -  -  	.db 0
   86 D1:C28B -  -  -  -  
   87 D1:C28B -  -  -  -  MG_Data_16:
   88 D1:C28B 00 -  -  -  	.db 0
   89 D1:C28C 00 -  -  -  	.db 0
   90 D1:C28D -  -  -  -  
   91 D1:C28D -  -  -  -  MG_Data_15:
   92 D1:C28D 00 -  -  -  	.db 0
   93 D1:C28E 00 -  -  -  	.db 0
   94 D1:C28F -  -  -  -  
   95 D1:C28F -  -  -  -  MG_Data_14:
   96 D1:C28F 00 -  -  -  	.db 0
   97 D1:C290 00 -  -  -  	.db 0
   98 D1:C291 -  -  -  -  
   99 D1:C291 -  -  -  -  MG_Data_13:
  100 D1:C291 00 -  -  -  	.db 0
  101 D1:C292 00 -  -  -  	.db 0
  102 D1:C293 -  -  -  -  
  103 D1:C293 -  -  -  -  MG_Data_12:
  104 D1:C293 00 -  -  -  	.db 0
  105 D1:C294 00 -  -  -  	.db 0
  106 D1:C295 -  -  -  -  
  107 D1:C295 -  -  -  -  MG_Data_11:
  108 D1:C295 00 -  -  -  	.db 0
  109 D1:C296 00 -  -  -  	.db 0
  110 D1:C297 -  -  -  -  
  111 D1:C297 -  -  -  -  MG_Data_10:
  112 D1:C297 00 -  -  -  	.db 0
  113 D1:C298 00 -  -  -  	.db 0
  114 D1:C299 -  -  -  -  
  115 D1:C299 -  -  -  -  MG_Data_9:
  116 D1:C299 00 -  -  -  	.db 0
  117 D1:C29A 00 -  -  -  	.db 0
  118 D1:C29B -  -  -  -  
  119 D1:C29B -  -  -  -  MG_Data_8:
  120 D1:C29B 00 -  -  -  	.db 0
  121 D1:C29C 00 -  -  -  	.db 0
  122 D1:C29D -  -  -  -  
  123 D1:C29D -  -  -  -  MG_Data_7:
  124 D1:C29D 00 -  -  -  	.db 0
  125 D1:C29E 00 -  -  -  	.db 0
  126 D1:C29F -  -  -  -  
  127 D1:C29F -  -  -  -  MG_Data_6:
  128 D1:C29F 00 -  -  -  	.db 0
  129 D1:C2A0 00 -  -  -  	.db 0
  130 D1:C2A1 -  -  -  -  
  131 D1:C2A1 -  -  -  -  MG_Data_5:
  132 D1:C2A1 00 -  -  -  	.db 0
  133 D1:C2A2 10 -  -  -  	.db 16
  134 D1:C2A3 0F FF 1C 11 	.db 15, 255, 28, 17  ;SG_TreeRow1
  135 D1:C2A7 FF FF 13 11 	.db 255, 255, 19, 17  ;SG_TreeRow1
  136 D1:C2AB 9F FF 16 11 	.db 159, 255, 22, 17  ;SG_TreeRow1
  137 D1:C2AF 1F FF 1B 10 	.db 31, 255, 27, 16  ;SG_TreeRow5
  138 D1:C2B3 BF FF 14 12 	.db 191, 255, 20, 18  ;SG_TreeRow2
  139 D1:C2B7 EF FF 14 10 	.db 239, 255, 20, 16  ;SG_TreeRow5
  140 D1:C2BB 7F FF 18 12 	.db 127, 255, 24, 18  ;SG_TreeRow2
  141 D1:C2BF DF FF 13 13 	.db 223, 255, 19, 19  ;SG_TreeRow4
  142 D1:C2C3 CF FF 13 13 	.db 207, 255, 19, 19  ;SG_TreeRow4
  143 D1:C2C7 AF FF 15 0F 	.db 175, 255, 21, 15  ;SG_TreeRow3
  144 D1:C2CB 6F FF 19 12 	.db 111, 255, 25, 18  ;SG_TreeRow2
  145 D1:C2CF 3F FF 19 12 	.db 63, 255, 25, 18  ;SG_TreeRow2
  146 D1:C2D3 5F FF 18 0F 	.db 95, 255, 24, 15  ;SG_TreeRow3
  147 D1:C2D7 2F FF 1A 13 	.db 47, 255, 26, 19  ;SG_TreeRow4
  148 D1:C2DB 8F FF 17 10 	.db 143, 255, 23, 16  ;SG_TreeRow5
  149 D1:C2DF 4F FF 19 10 	.db 79, 255, 25, 16  ;SG_TreeRow5
  150 D1:C2E3 -  -  -  -  
  151 D1:C2E3 -  -  -  -  MG_Data_4:
  152 D1:C2E3 00 -  -  -  	.db 0
  153 D1:C2E4 16 -  -  -  	.db 22
  154 D1:C2E5 F6 FF 74 09 	.db 246, 255, 116, 9  ;SG_Vine2
  155 D1:C2E9 72 FF 00 07 	.db 114, 255, 0, 7  ;SG_Vine6
  156 D1:C2ED 4F FF 26 10 	.db 79, 255, 38, 16  ;SG_TreeRow5
  157 D1:C2F1 8F FF 22 10 	.db 143, 255, 34, 16  ;SG_TreeRow5
  158 D1:C2F5 3F FF 27 13 	.db 63, 255, 39, 19  ;SG_TreeRow4
  159 D1:C2F9 2F FF 27 13 	.db 47, 255, 39, 19  ;SG_TreeRow4
  160 D1:C2FD 6F FF 24 12 	.db 111, 255, 36, 18  ;SG_TreeRow2
  161 D1:C301 BF FF 1F 13 	.db 191, 255, 31, 19  ;SG_TreeRow4
  162 D1:C305 9F FF 21 13 	.db 159, 255, 33, 19  ;SG_TreeRow4
  163 D1:C309 DF FF 1F 12 	.db 223, 255, 31, 18  ;SG_TreeRow2
  164 D1:C30D FF FF 1D 0F 	.db 255, 255, 29, 15  ;SG_TreeRow3
  165 D1:C311 1F FF 28 0F 	.db 31, 255, 40, 15  ;SG_TreeRow3
  166 D1:C315 5F FF 25 11 	.db 95, 255, 37, 17  ;SG_TreeRow1
  167 D1:C319 7F FF 23 11 	.db 127, 255, 35, 17  ;SG_TreeRow1
  168 D1:C31D AF FF 20 11 	.db 175, 255, 32, 17  ;SG_TreeRow1
  169 D1:C321 EF FF 1E 11 	.db 239, 255, 30, 17  ;SG_TreeRow1
  170 D1:C325 CF FF 1E 10 	.db 207, 255, 30, 16  ;SG_TreeRow5
  171 D1:C329 0F FF 29 11 	.db 15, 255, 41, 17  ;SG_TreeRow1
  172 D1:C32D 2E FF 00 14 	.db 46, 255, 0, 20  ;SG_Branch1
  173 D1:C331 C3 FF 54 1B 	.db 195, 255, 84, 27  ;SG_BranchBase4
  174 D1:C335 CF FF 65 05 	.db 207, 255, 101, 5  ;SG_Branch5
  175 D1:C339 E4 FF 69 05 	.db 228, 255, 105, 5  ;SG_Branch5
  176 D1:C33D -  -  -  -  
  177 D1:C33D -  -  -  -  MG_Data_3:
  178 D1:C33D 00 -  -  -  	.db 0
  179 D1:C33E 1B -  -  -  	.db 27
  180 D1:C33F 0F FF 28 10 	.db 15, 255, 40, 16  ;SG_TreeRow5
  181 D1:C343 5F FF 26 13 	.db 95, 255, 38, 19  ;SG_TreeRow4
  182 D1:C347 6F FF 25 10 	.db 111, 255, 37, 16  ;SG_TreeRow5
  183 D1:C34B 4F FF 27 0F 	.db 79, 255, 39, 15  ;SG_TreeRow3
  184 D1:C34F 7F FF 26 0F 	.db 127, 255, 38, 15  ;SG_TreeRow3
  185 D1:C353 8F FF 27 12 	.db 143, 255, 39, 18  ;SG_TreeRow2
  186 D1:C357 9F FF 27 0F 	.db 159, 255, 39, 15  ;SG_TreeRow3
  187 D1:C35B BF FF 29 12 	.db 191, 255, 41, 18  ;SG_TreeRow2
  188 D1:C35F 2F FF 28 12 	.db 47, 255, 40, 18  ;SG_TreeRow2
  189 D1:C363 EF FF 2A 13 	.db 239, 255, 42, 19  ;SG_TreeRow4
  190 D1:C367 FF FF 2A 0F 	.db 255, 255, 42, 15  ;SG_TreeRow3
  191 D1:C36B 1F FF 28 0F 	.db 31, 255, 40, 15  ;SG_TreeRow3
  192 D1:C36F 3F FF 28 11 	.db 63, 255, 40, 17  ;SG_TreeRow1
  193 D1:C373 AF FF 28 11 	.db 175, 255, 40, 17  ;SG_TreeRow1
  194 D1:C377 CF FF 29 11 	.db 207, 255, 41, 17  ;SG_TreeRow1
  195 D1:C37B DF FF 2A 10 	.db 223, 255, 42, 16  ;SG_TreeRow5
  196 D1:C37F 8E FF 21 16 	.db 142, 255, 33, 22  ;SG_Vine5
  197 D1:C383 5D FF 6C 08 	.db 93, 255, 108, 8  ;SG_Branch6
  198 D1:C387 95 0C 35 73 	.db 149, 12, 53, 115  ;Leaves_3_Slow_O_F
  199 D1:C38B 87 FF 02 02 	.db 135, 255, 2, 2  ;SG_Branch3
  200 D1:C38F 95 FF 1E 1A 	.db 149, 255, 30, 26  ;SG_BranchBase2
  201 D1:C393 F6 FF 2A 15 	.db 246, 255, 42, 21  ;SG_Vine4
  202 D1:C397 98 0B 3E 30 	.db 152, 11, 62, 48  ;Vines_9_Slow
  203 D1:C39B 96 18 49 74 	.db 150, 24, 73, 116  ;Vines_7_Slow_O
  204 D1:C39F 7E 18 4A 2A 	.db 126, 24, 74, 42  ;Vines_8_Slow
  205 D1:C3A3 67 0B 47 36 	.db 103, 11, 71, 54  ;Leaves_4_Slow_O
  206 D1:C3A7 9D 18 7D 74 	.db 157, 24, 125, 116  ;Vines_7_Slow_O
  207 D1:C3AB -  -  -  -  
  208 D1:C3AB -  -  -  -  MG_Data_2:
  209 D1:C3AB 00 -  -  -  	.db 0
  210 D1:C3AC 1A -  -  -  	.db 26
  211 D1:C3AD 83 FF 83 16 	.db 131, 255, 131, 22  ;SG_Vine5
  212 D1:C3B1 AC FF 0C 0B 	.db 172, 255, 12, 11  ;SG_Branch2
  213 D1:C3B5 0F FF 22 0F 	.db 15, 255, 34, 15  ;SG_TreeRow3
  214 D1:C3B9 4F FF 26 13 	.db 79, 255, 38, 19  ;SG_TreeRow4
  215 D1:C3BD 3F FF 25 10 	.db 63, 255, 37, 16  ;SG_TreeRow5
  216 D1:C3C1 6F FF 28 0F 	.db 111, 255, 40, 15  ;SG_TreeRow3
  217 D1:C3C5 9F FF 2B 13 	.db 159, 255, 43, 19  ;SG_TreeRow4
  218 D1:C3C9 AF FF 2A 10 	.db 175, 255, 42, 16  ;SG_TreeRow5
  219 D1:C3CD 1F FF 23 11 	.db 31, 255, 35, 17  ;SG_TreeRow1
  220 D1:C3D1 8F FF 2A 10 	.db 143, 255, 42, 16  ;SG_TreeRow5
  221 D1:C3D5 CF FF 2A 12 	.db 207, 255, 42, 18  ;SG_TreeRow2
  222 D1:C3D9 DF FF 29 13 	.db 223, 255, 41, 19  ;SG_TreeRow4
  223 D1:C3DD FF FF 28 0F 	.db 255, 255, 40, 15  ;SG_TreeRow3
  224 D1:C3E1 2F FF 24 11 	.db 47, 255, 36, 17  ;SG_TreeRow1
  225 D1:C3E5 7F FF 29 11 	.db 127, 255, 41, 17  ;SG_TreeRow1
  226 D1:C3E9 BF FF 2A 11 	.db 191, 255, 42, 17  ;SG_TreeRow1
  227 D1:C3ED EF FF 28 11 	.db 239, 255, 40, 17  ;SG_TreeRow1
  228 D1:C3F1 5F FF 27 12 	.db 95, 255, 39, 18  ;SG_TreeRow2
  229 D1:C3F5 96 FF 24 19 	.db 150, 255, 36, 25  ;SG_BranchBase1
  230 D1:C3F9 78 FF 60 17 	.db 120, 255, 96, 23  ;SG_BranchBase3
  231 D1:C3FD A8 FF 72 03 	.db 168, 255, 114, 3  ;SG_Branch7
  232 D1:C401 83 FF 00 06 	.db 131, 255, 0, 6  ;SG_Vine3
  233 D1:C405 78 FF 1F 07 	.db 120, 255, 31, 7  ;SG_Vine6
  234 D1:C409 37 FF 0D 02 	.db 55, 255, 13, 2  ;SG_Branch3
  235 D1:C40D 93 FF 08 02 	.db 147, 255, 8, 2  ;SG_Branch3
  236 D1:C411 8A FF 57 18 	.db 138, 255, 87, 24  ;SG_Vine1
  237 D1:C415 -  -  -  -  
  238 D1:C415 -  -  -  -  MG_Data_1:
  239 D1:C415 00 -  -  -  	.db 0
  240 D1:C416 1C -  -  -  	.db 28
  241 D1:C417 91 09 70 2F 	.db 145, 9, 112, 47  ;Vines_1_Slow_O
  242 D1:C41B 7F 0B 1E 30 	.db 127, 11, 30, 48  ;Vines_9_Slow
  243 D1:C41F F1 FF 7C 06 	.db 241, 255, 124, 6  ;SG_Vine3
  244 D1:C423 5F FF 1F 10 	.db 95, 255, 31, 16  ;SG_TreeRow5
  245 D1:C427 AF FF 1F 10 	.db 175, 255, 31, 16  ;SG_TreeRow5
  246 D1:C42B 3F FF 1F 12 	.db 63, 255, 31, 18  ;SG_TreeRow2
  247 D1:C42F 6F FF 1F 12 	.db 111, 255, 31, 18  ;SG_TreeRow2
  248 D1:C433 7F FF 1F 0F 	.db 127, 255, 31, 15  ;SG_TreeRow3
  249 D1:C437 9F FF 1F 13 	.db 159, 255, 31, 19  ;SG_TreeRow4
  250 D1:C43B 2F FF 20 13 	.db 47, 255, 32, 19  ;SG_TreeRow4
  251 D1:C43F EF FF 21 0F 	.db 239, 255, 33, 15  ;SG_TreeRow3
  252 D1:C443 CF FF 20 11 	.db 207, 255, 32, 17  ;SG_TreeRow1
  253 D1:C447 DF FF 21 13 	.db 223, 255, 33, 19  ;SG_TreeRow4
  254 D1:C44B BF FF 20 11 	.db 191, 255, 32, 17  ;SG_TreeRow1
  255 D1:C44F 0F FF 21 10 	.db 15, 255, 33, 16  ;SG_TreeRow5
  256 D1:C453 4F FF 1F 11 	.db 79, 255, 31, 17  ;SG_TreeRow1
  257 D1:C457 1F FF 20 0F 	.db 31, 255, 32, 15  ;SG_TreeRow3
  258 D1:C45B FF FF 22 13 	.db 255, 255, 34, 19  ;SG_TreeRow4
  259 D1:C45F 8F FF 1F 11 	.db 143, 255, 31, 17  ;SG_TreeRow1
  260 D1:C463 5E FF 48 18 	.db 94, 255, 72, 24  ;SG_Vine1
  261 D1:C467 77 FF 1E 09 	.db 119, 255, 30, 9  ;SG_Vine2
  262 D1:C46B 42 FF 50 09 	.db 66, 255, 80, 9  ;SG_Vine2
  263 D1:C46F 6B FF 5C 17 	.db 107, 255, 92, 23  ;SG_BranchBase3
  264 D1:C473 82 FF 77 05 	.db 130, 255, 119, 5  ;SG_Branch5
  265 D1:C477 68 FF 2C 02 	.db 104, 255, 44, 2  ;SG_Branch3
  266 D1:C47B CA FF 0C 0B 	.db 202, 255, 12, 11  ;SG_Branch2
  267 D1:C47F 60 10 79 64 	.db 96, 16, 121, 100  ;Vines_3_Slow_O_F
  268 D1:C483 57 0E 83 6F 	.db 87, 14, 131, 111  ;Vines_10_Slow_O
  269 D1:C487 -  -  -  -  
  270 D1:C487 -  -  -  -  MG_Data_0:
  271 D1:C487 00 -  -  -  	.db 0
  272 D1:C488 30 -  -  -  	.db 48
  273 D1:C489 39 FF 88 0C 	.db 57, 255, 136, 12  ;SG_GroundChunk2
  274 D1:C48D 3B FF 70 0D 	.db 59, 255, 112, 13  ;SG_GroundChunk1
  275 D1:C491 3F FF 16 0C 	.db 63, 255, 22, 12  ;SG_GroundChunk2
  276 D1:C495 42 FF 00 0D 	.db 66, 255, 0, 13  ;SG_GroundChunk1
  277 D1:C499 A8 FF 67 07 	.db 168, 255, 103, 7  ;SG_Vine6
  278 D1:C49D B3 FF 07 16 	.db 179, 255, 7, 22  ;SG_Vine5
  279 D1:C4A1 45 FF 78 01 	.db 69, 255, 120, 1  ;SG_GroundGrass
  280 D1:C4A5 2F FF 22 0F 	.db 47, 255, 34, 15  ;SG_TreeRow3
  281 D1:C4A9 3F FF 22 10 	.db 63, 255, 34, 16  ;SG_TreeRow5
  282 D1:C4AD 4F FF 22 11 	.db 79, 255, 34, 17  ;SG_TreeRow1
  283 D1:C4B1 5F FF 22 12 	.db 95, 255, 34, 18  ;SG_TreeRow2
  284 D1:C4B5 6F FF 23 10 	.db 111, 255, 35, 16  ;SG_TreeRow5
  285 D1:C4B9 7F FF 23 0F 	.db 127, 255, 35, 15  ;SG_TreeRow3
  286 D1:C4BD AF FF 22 13 	.db 175, 255, 34, 19  ;SG_TreeRow4
  287 D1:C4C1 9F FF 22 12 	.db 159, 255, 34, 18  ;SG_TreeRow2
  288 D1:C4C5 35 FF 12 0E 	.db 53, 255, 18, 14  ;SG_Root1
  289 D1:C4C9 BF FF 22 11 	.db 191, 255, 34, 17  ;SG_TreeRow1
  290 D1:C4CD CF FF 23 10 	.db 207, 255, 35, 16  ;SG_TreeRow5
  291 D1:C4D1 DF FF 22 11 	.db 223, 255, 34, 17  ;SG_TreeRow1
  292 D1:C4D5 EF FF 23 0F 	.db 239, 255, 35, 15  ;SG_TreeRow3
  293 D1:C4D9 FF FF 22 12 	.db 255, 255, 34, 18  ;SG_TreeRow2
  294 D1:C4DD 8F FF 23 11 	.db 143, 255, 35, 17  ;SG_TreeRow1
  295 D1:C4E1 33 FF 86 0E 	.db 51, 255, 134, 14  ;SG_Root1
  296 D1:C4E5 3B FF 79 0E 	.db 59, 255, 121, 14  ;SG_Root1
  297 D1:C4E9 4C FF 00 01 	.db 76, 255, 0, 1  ;SG_GroundGrass
  298 D1:C4ED 28 FF 88 0C 	.db 40, 255, 136, 12  ;SG_GroundChunk2
  299 D1:C4F1 AD 09 65 69 	.db 173, 9, 101, 105  ;Leaves_2_Slow
  300 D1:C4F5 A9 09 5F 24 	.db 169, 9, 95, 36  ;Leaves_2_Slow_O
  301 D1:C4F9 2A FF 18 0D 	.db 42, 255, 24, 13  ;SG_GroundChunk1
  302 D1:C4FD 2B FF 30 0D 	.db 43, 255, 48, 13  ;SG_GroundChunk1
  303 D1:C501 A8 FF 29 15 	.db 168, 255, 41, 21  ;SG_Vine4
  304 D1:C505 BE FF 00 14 	.db 190, 255, 0, 20  ;SG_Branch1
  305 D1:C509 28 FF 00 0C 	.db 40, 255, 0, 12  ;SG_GroundChunk2
  306 D1:C50D 2A FF 48 0C 	.db 42, 255, 72, 12  ;SG_GroundChunk2
  307 D1:C511 2B FF 60 0D 	.db 43, 255, 96, 13  ;SG_GroundChunk1
  308 D1:C515 2A FF 78 0C 	.db 42, 255, 120, 12  ;SG_GroundChunk2
  309 D1:C519 9B 0B 5C 1F 	.db 155, 11, 92, 31  ;Leaves_4_Slow
  310 D1:C51D A2 09 61 24 	.db 162, 9, 97, 36  ;Leaves_2_Slow_O
  311 D1:C521 29 FF 1F 0E 	.db 41, 255, 31, 14  ;SG_Root1
  312 D1:C525 35 10 06 08 	.db 53, 16, 6, 8  ;GroundGrassL1_Fast
  313 D1:C529 30 10 3B 08 	.db 48, 16, 59, 8  ;GroundGrassL1_Fast
  314 D1:C52D 2A 10 96 09 	.db 42, 16, 150, 9  ;GroundGrassL1_Fast_F
  315 D1:C531 27 FF 67 07 	.db 39, 255, 103, 7  ;SG_Vine6
  316 D1:C535 38 13 5D 6A 	.db 56, 19, 93, 106  ;Vines_2_Slow_O_F
  317 D1:C539 4A 18 5B 40 	.db 74, 24, 91, 64  ;Vines_8_Slow_F
  318 D1:C53D 27 FF 0E 0E 	.db 39, 255, 14, 14  ;SG_Root1
  319 D1:C541 27 FF 6B 0E 	.db 39, 255, 107, 14  ;SG_Root1
  320 D1:C545 21 FF 51 0E 	.db 33, 255, 81, 14  ;SG_Root1
  321 D1:C549 -  -  -  -  
  322 D1:C549 -  -  -  -  
  323 D1:C549 -  -  -  -  
Listing for file "ascent.asm"
  565 D1:C549 -  -  -  -  #include "generated/MG2_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\MG2_Data.txt"
    1 D1:C549 -  -  -  -  MG2_Data_frame_table:
    2 D1:C549 F9 C5 D1 -  	.dl MG2_Data_0
    3 D1:C54C DB C5 D1 -  	.dl MG2_Data_1
    4 D1:C54F D9 C5 D1 -  	.dl MG2_Data_2
    5 D1:C552 D7 C5 D1 -  	.dl MG2_Data_3
    6 D1:C555 D5 C5 D1 -  	.dl MG2_Data_4
    7 D1:C558 D3 C5 D1 -  	.dl MG2_Data_5
    8 D1:C55B D1 C5 D1 -  	.dl MG2_Data_6
    9 D1:C55E CF C5 D1 -  	.dl MG2_Data_7
   10 D1:C561 CD C5 D1 -  	.dl MG2_Data_8
   11 D1:C564 CB C5 D1 -  	.dl MG2_Data_9
   12 D1:C567 C9 C5 D1 -  	.dl MG2_Data_10
   13 D1:C56A C7 C5 D1 -  	.dl MG2_Data_11
   14 D1:C56D C5 C5 D1 -  	.dl MG2_Data_12
   15 D1:C570 C3 C5 D1 -  	.dl MG2_Data_13
   16 D1:C573 C1 C5 D1 -  	.dl MG2_Data_14
   17 D1:C576 BF C5 D1 -  	.dl MG2_Data_15
   18 D1:C579 BD C5 D1 -  	.dl MG2_Data_16
   19 D1:C57C BB C5 D1 -  	.dl MG2_Data_17
   20 D1:C57F B9 C5 D1 -  	.dl MG2_Data_18
   21 D1:C582 B7 C5 D1 -  	.dl MG2_Data_19
   22 D1:C585 B5 C5 D1 -  	.dl MG2_Data_20
   23 D1:C588 B3 C5 D1 -  	.dl MG2_Data_21
   24 D1:C58B B1 C5 D1 -  	.dl MG2_Data_22
   25 D1:C58E AF C5 D1 -  	.dl MG2_Data_23
   26 D1:C591 AD C5 D1 -  	.dl MG2_Data_24
   27 D1:C594 AB C5 D1 -  	.dl MG2_Data_25
   28 D1:C597 A9 C5 D1 -  	.dl MG2_Data_26
   29 D1:C59A A7 C5 D1 -  	.dl MG2_Data_27
   30 D1:C59D A5 C5 D1 -  	.dl MG2_Data_28
   31 D1:C5A0 A3 C5 D1 -  	.dl MG2_Data_29
   32 D1:C5A3 -  -  -  -  
   33 D1:C5A3 -  -  -  -  
   34 D1:C5A3 -  -  -  -  
   35 D1:C5A3 -  -  -  -  MG2_Data_29:
   36 D1:C5A3 00 -  -  -  	.db 0
   37 D1:C5A4 00 -  -  -  	.db 0
   38 D1:C5A5 -  -  -  -  
   39 D1:C5A5 -  -  -  -  MG2_Data_28:
   40 D1:C5A5 00 -  -  -  	.db 0
   41 D1:C5A6 00 -  -  -  	.db 0
   42 D1:C5A7 -  -  -  -  
   43 D1:C5A7 -  -  -  -  MG2_Data_27:
   44 D1:C5A7 00 -  -  -  	.db 0
   45 D1:C5A8 00 -  -  -  	.db 0
   46 D1:C5A9 -  -  -  -  
   47 D1:C5A9 -  -  -  -  MG2_Data_26:
   48 D1:C5A9 00 -  -  -  	.db 0
   49 D1:C5AA 00 -  -  -  	.db 0
   50 D1:C5AB -  -  -  -  
   51 D1:C5AB -  -  -  -  MG2_Data_25:
   52 D1:C5AB 00 -  -  -  	.db 0
   53 D1:C5AC 00 -  -  -  	.db 0
   54 D1:C5AD -  -  -  -  
   55 D1:C5AD -  -  -  -  MG2_Data_24:
   56 D1:C5AD 00 -  -  -  	.db 0
   57 D1:C5AE 00 -  -  -  	.db 0
   58 D1:C5AF -  -  -  -  
   59 D1:C5AF -  -  -  -  MG2_Data_23:
   60 D1:C5AF 00 -  -  -  	.db 0
   61 D1:C5B0 00 -  -  -  	.db 0
   62 D1:C5B1 -  -  -  -  
   63 D1:C5B1 -  -  -  -  MG2_Data_22:
   64 D1:C5B1 00 -  -  -  	.db 0
   65 D1:C5B2 00 -  -  -  	.db 0
   66 D1:C5B3 -  -  -  -  
   67 D1:C5B3 -  -  -  -  MG2_Data_21:
   68 D1:C5B3 00 -  -  -  	.db 0
   69 D1:C5B4 00 -  -  -  	.db 0
   70 D1:C5B5 -  -  -  -  
   71 D1:C5B5 -  -  -  -  MG2_Data_20:
   72 D1:C5B5 00 -  -  -  	.db 0
   73 D1:C5B6 00 -  -  -  	.db 0
   74 D1:C5B7 -  -  -  -  
   75 D1:C5B7 -  -  -  -  MG2_Data_19:
   76 D1:C5B7 00 -  -  -  	.db 0
   77 D1:C5B8 00 -  -  -  	.db 0
   78 D1:C5B9 -  -  -  -  
   79 D1:C5B9 -  -  -  -  MG2_Data_18:
   80 D1:C5B9 00 -  -  -  	.db 0
   81 D1:C5BA 00 -  -  -  	.db 0
   82 D1:C5BB -  -  -  -  
   83 D1:C5BB -  -  -  -  MG2_Data_17:
   84 D1:C5BB 00 -  -  -  	.db 0
   85 D1:C5BC 00 -  -  -  	.db 0
   86 D1:C5BD -  -  -  -  
   87 D1:C5BD -  -  -  -  MG2_Data_16:
   88 D1:C5BD 00 -  -  -  	.db 0
   89 D1:C5BE 00 -  -  -  	.db 0
   90 D1:C5BF -  -  -  -  
   91 D1:C5BF -  -  -  -  MG2_Data_15:
   92 D1:C5BF 00 -  -  -  	.db 0
   93 D1:C5C0 00 -  -  -  	.db 0
   94 D1:C5C1 -  -  -  -  
   95 D1:C5C1 -  -  -  -  MG2_Data_14:
   96 D1:C5C1 00 -  -  -  	.db 0
   97 D1:C5C2 00 -  -  -  	.db 0
   98 D1:C5C3 -  -  -  -  
   99 D1:C5C3 -  -  -  -  MG2_Data_13:
  100 D1:C5C3 00 -  -  -  	.db 0
  101 D1:C5C4 00 -  -  -  	.db 0
  102 D1:C5C5 -  -  -  -  
  103 D1:C5C5 -  -  -  -  MG2_Data_12:
  104 D1:C5C5 00 -  -  -  	.db 0
  105 D1:C5C6 00 -  -  -  	.db 0
  106 D1:C5C7 -  -  -  -  
  107 D1:C5C7 -  -  -  -  MG2_Data_11:
  108 D1:C5C7 00 -  -  -  	.db 0
  109 D1:C5C8 00 -  -  -  	.db 0
  110 D1:C5C9 -  -  -  -  
  111 D1:C5C9 -  -  -  -  MG2_Data_10:
  112 D1:C5C9 00 -  -  -  	.db 0
  113 D1:C5CA 00 -  -  -  	.db 0
  114 D1:C5CB -  -  -  -  
  115 D1:C5CB -  -  -  -  MG2_Data_9:
  116 D1:C5CB 00 -  -  -  	.db 0
  117 D1:C5CC 00 -  -  -  	.db 0
  118 D1:C5CD -  -  -  -  
  119 D1:C5CD -  -  -  -  MG2_Data_8:
  120 D1:C5CD 00 -  -  -  	.db 0
  121 D1:C5CE 00 -  -  -  	.db 0
  122 D1:C5CF -  -  -  -  
  123 D1:C5CF -  -  -  -  MG2_Data_7:
  124 D1:C5CF 00 -  -  -  	.db 0
  125 D1:C5D0 00 -  -  -  	.db 0
  126 D1:C5D1 -  -  -  -  
  127 D1:C5D1 -  -  -  -  MG2_Data_6:
  128 D1:C5D1 00 -  -  -  	.db 0
  129 D1:C5D2 00 -  -  -  	.db 0
  130 D1:C5D3 -  -  -  -  
  131 D1:C5D3 -  -  -  -  MG2_Data_5:
  132 D1:C5D3 00 -  -  -  	.db 0
  133 D1:C5D4 00 -  -  -  	.db 0
  134 D1:C5D5 -  -  -  -  
  135 D1:C5D5 -  -  -  -  MG2_Data_4:
  136 D1:C5D5 00 -  -  -  	.db 0
  137 D1:C5D6 00 -  -  -  	.db 0
  138 D1:C5D7 -  -  -  -  
  139 D1:C5D7 -  -  -  -  MG2_Data_3:
  140 D1:C5D7 00 -  -  -  	.db 0
  141 D1:C5D8 00 -  -  -  	.db 0
  142 D1:C5D9 -  -  -  -  
  143 D1:C5D9 -  -  -  -  MG2_Data_2:
  144 D1:C5D9 00 -  -  -  	.db 0
  145 D1:C5DA 00 -  -  -  	.db 0
  146 D1:C5DB -  -  -  -  
  147 D1:C5DB -  -  -  -  MG2_Data_1:
  148 D1:C5DB 00 -  -  -  	.db 0
  149 D1:C5DC 07 -  -  -  	.db 7
  150 D1:C5DD 2B FF 64 1C 	.db 43, 255, 100, 28  ;SG_CloudPlatform
  151 D1:C5E1 75 FF 40 1C 	.db 117, 255, 64, 28  ;SG_CloudPlatform
  152 D1:C5E5 A0 FF 0E 1C 	.db 160, 255, 14, 28  ;SG_CloudPlatform
  153 D1:C5E9 13 FF 11 1C 	.db 19, 255, 17, 28  ;SG_CloudPlatform
  154 D1:C5ED 34 10 0D 77 	.db 52, 16, 13, 119  ;Clouds_2_Fast
  155 D1:C5F1 24 10 0D 77 	.db 36, 16, 13, 119  ;Clouds_2_Fast
  156 D1:C5F5 14 10 0D 77 	.db 20, 16, 13, 119  ;Clouds_2_Fast
  157 D1:C5F9 -  -  -  -  
  158 D1:C5F9 -  -  -  -  MG2_Data_0:
  159 D1:C5F9 00 -  -  -  	.db 0
  160 D1:C5FA 07 -  -  -  	.db 7
  161 D1:C5FB 63 FF 05 1C 	.db 99, 255, 5, 28  ;SG_CloudPlatform
  162 D1:C5FF B6 FF 2A 1C 	.db 182, 255, 42, 28  ;SG_CloudPlatform
  163 D1:C603 7F FF 6B 1C 	.db 127, 255, 107, 28  ;SG_CloudPlatform
  164 D1:C607 59 FF 43 1C 	.db 89, 255, 67, 28  ;SG_CloudPlatform
  165 D1:C60B D1 10 8D 77 	.db 209, 16, 141, 119  ;Clouds_2_Fast
  166 D1:C60F C1 10 8D 77 	.db 193, 16, 141, 119  ;Clouds_2_Fast
  167 D1:C613 B1 10 8D 77 	.db 177, 16, 141, 119  ;Clouds_2_Fast
  168 D1:C617 -  -  -  -  
  169 D1:C617 -  -  -  -  
  170 D1:C617 -  -  -  -  
Listing for file "ascent.asm"
  566 D1:C617 -  -  -  -  #include "generated/FG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\FG_Data.txt"
    1 D1:C617 -  -  -  -  FG_Data_frame_table:
    2 D1:C617 4B C7 D1 -  	.dl FG_Data_0
    3 D1:C61A 3D C7 D1 -  	.dl FG_Data_1
    4 D1:C61D 17 C7 D1 -  	.dl FG_Data_2
    5 D1:C620 11 C7 D1 -  	.dl FG_Data_3
    6 D1:C623 07 C7 D1 -  	.dl FG_Data_4
    7 D1:C626 F5 C6 D1 -  	.dl FG_Data_5
    8 D1:C629 EF C6 D1 -  	.dl FG_Data_6
    9 D1:C62C E1 C6 D1 -  	.dl FG_Data_7
   10 D1:C62F CF C6 D1 -  	.dl FG_Data_8
   11 D1:C632 9D C6 D1 -  	.dl FG_Data_9
   12 D1:C635 97 C6 D1 -  	.dl FG_Data_10
   13 D1:C638 95 C6 D1 -  	.dl FG_Data_11
   14 D1:C63B 93 C6 D1 -  	.dl FG_Data_12
   15 D1:C63E 91 C6 D1 -  	.dl FG_Data_13
   16 D1:C641 8F C6 D1 -  	.dl FG_Data_14
   17 D1:C644 8D C6 D1 -  	.dl FG_Data_15
   18 D1:C647 8B C6 D1 -  	.dl FG_Data_16
   19 D1:C64A 89 C6 D1 -  	.dl FG_Data_17
   20 D1:C64D 87 C6 D1 -  	.dl FG_Data_18
   21 D1:C650 85 C6 D1 -  	.dl FG_Data_19
   22 D1:C653 83 C6 D1 -  	.dl FG_Data_20
   23 D1:C656 81 C6 D1 -  	.dl FG_Data_21
   24 D1:C659 7F C6 D1 -  	.dl FG_Data_22
   25 D1:C65C 7D C6 D1 -  	.dl FG_Data_23
   26 D1:C65F 7B C6 D1 -  	.dl FG_Data_24
   27 D1:C662 79 C6 D1 -  	.dl FG_Data_25
   28 D1:C665 77 C6 D1 -  	.dl FG_Data_26
   29 D1:C668 75 C6 D1 -  	.dl FG_Data_27
   30 D1:C66B 73 C6 D1 -  	.dl FG_Data_28
   31 D1:C66E 71 C6 D1 -  	.dl FG_Data_29
   32 D1:C671 -  -  -  -  
   33 D1:C671 -  -  -  -  
   34 D1:C671 -  -  -  -  
   35 D1:C671 -  -  -  -  FG_Data_29:
   36 D1:C671 00 -  -  -  	.db 0
   37 D1:C672 00 -  -  -  	.db 0
   38 D1:C673 -  -  -  -  
   39 D1:C673 -  -  -  -  FG_Data_28:
   40 D1:C673 00 -  -  -  	.db 0
   41 D1:C674 00 -  -  -  	.db 0
   42 D1:C675 -  -  -  -  
   43 D1:C675 -  -  -  -  FG_Data_27:
   44 D1:C675 00 -  -  -  	.db 0
   45 D1:C676 00 -  -  -  	.db 0
   46 D1:C677 -  -  -  -  
   47 D1:C677 -  -  -  -  FG_Data_26:
   48 D1:C677 00 -  -  -  	.db 0
   49 D1:C678 00 -  -  -  	.db 0
   50 D1:C679 -  -  -  -  
   51 D1:C679 -  -  -  -  FG_Data_25:
   52 D1:C679 00 -  -  -  	.db 0
   53 D1:C67A 00 -  -  -  	.db 0
   54 D1:C67B -  -  -  -  
   55 D1:C67B -  -  -  -  FG_Data_24:
   56 D1:C67B 00 -  -  -  	.db 0
   57 D1:C67C 00 -  -  -  	.db 0
   58 D1:C67D -  -  -  -  
   59 D1:C67D -  -  -  -  FG_Data_23:
   60 D1:C67D 00 -  -  -  	.db 0
   61 D1:C67E 00 -  -  -  	.db 0
   62 D1:C67F -  -  -  -  
   63 D1:C67F -  -  -  -  FG_Data_22:
   64 D1:C67F 00 -  -  -  	.db 0
   65 D1:C680 00 -  -  -  	.db 0
   66 D1:C681 -  -  -  -  
   67 D1:C681 -  -  -  -  FG_Data_21:
   68 D1:C681 00 -  -  -  	.db 0
   69 D1:C682 00 -  -  -  	.db 0
   70 D1:C683 -  -  -  -  
   71 D1:C683 -  -  -  -  FG_Data_20:
   72 D1:C683 00 -  -  -  	.db 0
   73 D1:C684 00 -  -  -  	.db 0
   74 D1:C685 -  -  -  -  
   75 D1:C685 -  -  -  -  FG_Data_19:
   76 D1:C685 00 -  -  -  	.db 0
   77 D1:C686 00 -  -  -  	.db 0
   78 D1:C687 -  -  -  -  
   79 D1:C687 -  -  -  -  FG_Data_18:
   80 D1:C687 00 -  -  -  	.db 0
   81 D1:C688 00 -  -  -  	.db 0
   82 D1:C689 -  -  -  -  
   83 D1:C689 -  -  -  -  FG_Data_17:
   84 D1:C689 00 -  -  -  	.db 0
   85 D1:C68A 00 -  -  -  	.db 0
   86 D1:C68B -  -  -  -  
   87 D1:C68B -  -  -  -  FG_Data_16:
   88 D1:C68B 00 -  -  -  	.db 0
   89 D1:C68C 00 -  -  -  	.db 0
   90 D1:C68D -  -  -  -  
   91 D1:C68D -  -  -  -  FG_Data_15:
   92 D1:C68D 00 -  -  -  	.db 0
   93 D1:C68E 00 -  -  -  	.db 0
   94 D1:C68F -  -  -  -  
   95 D1:C68F -  -  -  -  FG_Data_14:
   96 D1:C68F 00 -  -  -  	.db 0
   97 D1:C690 00 -  -  -  	.db 0
   98 D1:C691 -  -  -  -  
   99 D1:C691 -  -  -  -  FG_Data_13:
  100 D1:C691 00 -  -  -  	.db 0
  101 D1:C692 00 -  -  -  	.db 0
  102 D1:C693 -  -  -  -  
  103 D1:C693 -  -  -  -  FG_Data_12:
  104 D1:C693 00 -  -  -  	.db 0
  105 D1:C694 00 -  -  -  	.db 0
  106 D1:C695 -  -  -  -  
  107 D1:C695 -  -  -  -  FG_Data_11:
  108 D1:C695 00 -  -  -  	.db 0
  109 D1:C696 00 -  -  -  	.db 0
  110 D1:C697 -  -  -  -  
  111 D1:C697 -  -  -  -  FG_Data_10:
  112 D1:C697 00 -  -  -  	.db 0
  113 D1:C698 01 -  -  -  	.db 1
  114 D1:C699 CA FF 82 02 	.db 202, 255, 130, 2  ;SG_Branch3
  115 D1:C69D -  -  -  -  
  116 D1:C69D -  -  -  -  FG_Data_9:
  117 D1:C69D 00 -  -  -  	.db 0
  118 D1:C69E 0C -  -  -  	.db 12
  119 D1:C69F BD FF 22 09 	.db 189, 255, 34, 9  ;SG_Vine2
  120 D1:C6A3 AB 18 9B 40 	.db 171, 24, 155, 64  ;Vines_8_Slow_F
  121 D1:C6A7 B8 0B 13 41 	.db 184, 11, 19, 65  ;Vines_9_Slow_O
  122 D1:C6AB D5 FF 7D 04 	.db 213, 255, 125, 4  ;SG_Branch4
  123 D1:C6AF B0 0E 00 42 	.db 176, 14, 0, 66  ;Branches_3_Fast
  124 D1:C6B3 B1 0E 09 43 	.db 177, 14, 9, 67  ;Branches_2_Fast
  125 D1:C6B7 B1 0E 12 33 	.db 177, 14, 18, 51  ;Branches_4_Fast_F
  126 D1:C6BB EA FF 13 03 	.db 234, 255, 19, 3  ;SG_Branch7
  127 D1:C6BF 91 FF 4E 07 	.db 145, 255, 78, 7  ;SG_Vine6
  128 D1:C6C3 9B 10 86 44 	.db 155, 16, 134, 68  ;Vines_3_Slow_O
  129 D1:C6C7 AC 13 91 2B 	.db 172, 19, 145, 43  ;Vines_2_Slow_O
  130 D1:C6CB B0 FF 0E 0A 	.db 176, 255, 14, 10  ;SG_Vine7
  131 D1:C6CF -  -  -  -  
  132 D1:C6CF -  -  -  -  FG_Data_8:
  133 D1:C6CF 00 -  -  -  	.db 0
  134 D1:C6D0 04 -  -  -  	.db 4
  135 D1:C6D1 7C 0E 97 3E 	.db 124, 14, 151, 62  ;Branches_5_Fast
  136 D1:C6D5 7C 0E 8E 3F 	.db 124, 14, 142, 63  ;Branches_4_Fast
  137 D1:C6D9 A4 FF 77 0B 	.db 164, 255, 119, 11  ;SG_Branch2
  138 D1:C6DD 7B FF 8C 0A 	.db 123, 255, 140, 10  ;SG_Vine7
  139 D1:C6E1 -  -  -  -  
  140 D1:C6E1 -  -  -  -  FG_Data_7:
  141 D1:C6E1 00 -  -  -  	.db 0
  142 D1:C6E2 03 -  -  -  	.db 3
  143 D1:C6E3 87 FF 00 05 	.db 135, 255, 0, 5  ;SG_Branch5
  144 D1:C6E7 ED FF 00 08 	.db 237, 255, 0, 8  ;SG_Branch6
  145 D1:C6EB 64 FF 08 0A 	.db 100, 255, 8, 10  ;SG_Vine7
  146 D1:C6EF -  -  -  -  
  147 D1:C6EF -  -  -  -  FG_Data_6:
  148 D1:C6EF 00 -  -  -  	.db 0
  149 D1:C6F0 01 -  -  -  	.db 1
  150 D1:C6F1 64 FF 00 08 	.db 100, 255, 0, 8  ;SG_Branch6
  151 D1:C6F5 -  -  -  -  
  152 D1:C6F5 -  -  -  -  FG_Data_5:
  153 D1:C6F5 00 -  -  -  	.db 0
  154 D1:C6F6 04 -  -  -  	.db 4
  155 D1:C6F7 34 FF 10 09 	.db 52, 255, 16, 9  ;SG_Vine2
  156 D1:C6FB D7 FF 82 02 	.db 215, 255, 130, 2  ;SG_Branch3
  157 D1:C6FF 5D FF 00 05 	.db 93, 255, 0, 5  ;SG_Branch5
  158 D1:C703 08 FF 3B 09 	.db 8, 255, 59, 9  ;SG_Vine2
  159 D1:C707 -  -  -  -  
  160 D1:C707 -  -  -  -  FG_Data_4:
  161 D1:C707 00 -  -  -  	.db 0
  162 D1:C708 02 -  -  -  	.db 2
  163 D1:C709 B5 FF 82 02 	.db 181, 255, 130, 2  ;SG_Branch3
  164 D1:C70D DB FF 67 07 	.db 219, 255, 103, 7  ;SG_Vine6
  165 D1:C711 -  -  -  -  
  166 D1:C711 -  -  -  -  FG_Data_3:
  167 D1:C711 00 -  -  -  	.db 0
  168 D1:C712 01 -  -  -  	.db 1
  169 D1:C713 C1 FF 00 08 	.db 193, 255, 0, 8  ;SG_Branch6
  170 D1:C717 -  -  -  -  
  171 D1:C717 -  -  -  -  FG_Data_2:
  172 D1:C717 00 -  -  -  	.db 0
  173 D1:C718 09 -  -  -  	.db 9
  174 D1:C719 FB FF 7D 04 	.db 251, 255, 125, 4  ;SG_Branch4
  175 D1:C71D 93 FF 00 05 	.db 147, 255, 0, 5  ;SG_Branch5
  176 D1:C721 C9 FF 71 06 	.db 201, 255, 113, 6  ;SG_Vine3
  177 D1:C725 69 FF 38 07 	.db 105, 255, 56, 7  ;SG_Vine6
  178 D1:C729 71 0B 2C 31 	.db 113, 11, 44, 49  ;Vines_9_Slow_O_F
  179 D1:C72D 71 09 20 2F 	.db 113, 9, 32, 47  ;Vines_1_Slow_O
  180 D1:C731 6D 10 15 2C 	.db 109, 16, 21, 44  ;Vines_3_Slow
  181 D1:C735 6E 10 0E 32 	.db 110, 16, 14, 50  ;Vines_3_Slow_F
  182 D1:C739 D2 0B 94 30 	.db 210, 11, 148, 48  ;Vines_9_Slow
  183 D1:C73D -  -  -  -  
  184 D1:C73D -  -  -  -  FG_Data_1:
  185 D1:C73D 00 -  -  -  	.db 0
  186 D1:C73E 03 -  -  -  	.db 3
  187 D1:C73F C9 FF 82 02 	.db 201, 255, 130, 2  ;SG_Branch3
  188 D1:C743 87 FF 00 03 	.db 135, 255, 0, 3  ;SG_Branch7
  189 D1:C747 4B 0E 00 0B 	.db 75, 14, 0, 11  ;Branches_9_Fast
  190 D1:C74B -  -  -  -  
  191 D1:C74B -  -  -  -  FG_Data_0:
  192 D1:C74B 00 -  -  -  	.db 0
  193 D1:C74C 09 -  -  -  	.db 9
  194 D1:C74D 1B FF 00 00 	.db 27, 255, 0, 0  ;SG_GroundChunk3
  195 D1:C751 1B FF 20 00 	.db 27, 255, 32, 0  ;SG_GroundChunk3
  196 D1:C755 1B FF 40 00 	.db 27, 255, 64, 0  ;SG_GroundChunk3
  197 D1:C759 1B FF 60 00 	.db 27, 255, 96, 0  ;SG_GroundChunk3
  198 D1:C75D 1B FF 80 00 	.db 27, 255, 128, 0  ;SG_GroundChunk3
  199 D1:C761 27 FF 2A 01 	.db 39, 255, 42, 1  ;SG_GroundGrass
  200 D1:C765 2A FF 03 01 	.db 42, 255, 3, 1  ;SG_GroundGrass
  201 D1:C769 2A FF 4E 01 	.db 42, 255, 78, 1  ;SG_GroundGrass
  202 D1:C76D 27 FF 75 01 	.db 39, 255, 117, 1  ;SG_GroundGrass
  203 D1:C771 -  -  -  -  
  204 D1:C771 -  -  -  -  
  205 D1:C771 -  -  -  -  
Listing for file "ascent.asm"
  567 D1:C771 -  -  -  -  #include "generated/DecompressCalls.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\DecompressCalls.txt"
    1 D1:C771 -  -  -  -  decompress_calls_table_up:
    2 D1:C771 80 CB D1 -  	.dl decompress_frame_up_0
    3 D1:C774 41 CD D1 -  	.dl decompress_frame_up_1
    4 D1:C777 42 CD D1 -  	.dl decompress_frame_up_2
    5 D1:C77A 5F CD D1 -  	.dl decompress_frame_up_3
    6 D1:C77D 60 CD D1 -  	.dl decompress_frame_up_4
    7 D1:C780 84 CD D1 -  	.dl decompress_frame_up_5
    8 D1:C783 93 CD D1 -  	.dl decompress_frame_up_6
    9 D1:C786 A2 CD D1 -  	.dl decompress_frame_up_7
   10 D1:C789 A3 CD D1 -  	.dl decompress_frame_up_8
   11 D1:C78C A4 CD D1 -  	.dl decompress_frame_up_9
   12 D1:C78F A5 CD D1 -  	.dl decompress_frame_up_10
   13 D1:C792 A6 CD D1 -  	.dl decompress_frame_up_11
   14 D1:C795 A7 CD D1 -  	.dl decompress_frame_up_12
   15 D1:C798 A8 CD D1 -  	.dl decompress_frame_up_13
   16 D1:C79B A9 CD D1 -  	.dl decompress_frame_up_14
   17 D1:C79E AA CD D1 -  	.dl decompress_frame_up_15
   18 D1:C7A1 AB CD D1 -  	.dl decompress_frame_up_16
   19 D1:C7A4 AC CD D1 -  	.dl decompress_frame_up_17
   20 D1:C7A7 AD CD D1 -  	.dl decompress_frame_up_18
   21 D1:C7AA AE CD D1 -  	.dl decompress_frame_up_19
   22 D1:C7AD AF CD D1 -  	.dl decompress_frame_up_20
   23 D1:C7B0 B0 CD D1 -  	.dl decompress_frame_up_21
   24 D1:C7B3 B1 CD D1 -  	.dl decompress_frame_up_22
   25 D1:C7B6 B2 CD D1 -  	.dl decompress_frame_up_23
   26 D1:C7B9 B3 CD D1 -  	.dl decompress_frame_up_24
   27 D1:C7BC B4 CD D1 -  	.dl decompress_frame_up_25
   28 D1:C7BF B5 CD D1 -  	.dl decompress_frame_up_26
   29 D1:C7C2 B6 CD D1 -  	.dl decompress_frame_up_27
   30 D1:C7C5 B7 CD D1 -  	.dl decompress_frame_up_28
   31 D1:C7C8 B8 CD D1 -  	.dl decompress_frame_up_29
   32 D1:C7CB B9 CD D1 -  	.dl decompress_frame_up_30
   33 D1:C7CE BA CD D1 -  	.dl decompress_frame_up_31
   34 D1:C7D1 BB CD D1 -  	.dl decompress_frame_up_32
   35 D1:C7D4 BC CD D1 -  	.dl decompress_frame_up_33
   36 D1:C7D7 BD CD D1 -  	.dl decompress_frame_up_34
   37 D1:C7DA BE CD D1 -  	.dl decompress_frame_up_35
   38 D1:C7DD BF CD D1 -  	.dl decompress_frame_up_36
   39 D1:C7E0 C0 CD D1 -  	.dl decompress_frame_up_37
   40 D1:C7E3 C1 CD D1 -  	.dl decompress_frame_up_38
   41 D1:C7E6 C2 CD D1 -  	.dl decompress_frame_up_39
   42 D1:C7E9 C3 CD D1 -  	.dl decompress_frame_up_40
   43 D1:C7EC C4 CD D1 -  	.dl decompress_frame_up_41
   44 D1:C7EF C5 CD D1 -  	.dl decompress_frame_up_42
   45 D1:C7F2 C6 CD D1 -  	.dl decompress_frame_up_43
   46 D1:C7F5 C7 CD D1 -  	.dl decompress_frame_up_44
   47 D1:C7F8 C8 CD D1 -  	.dl decompress_frame_up_45
   48 D1:C7FB C9 CD D1 -  	.dl decompress_frame_up_46
   49 D1:C7FE CA CD D1 -  	.dl decompress_frame_up_47
   50 D1:C801 CB CD D1 -  	.dl decompress_frame_up_48
   51 D1:C804 CC CD D1 -  	.dl decompress_frame_up_49
   52 D1:C807 CD CD D1 -  	.dl decompress_frame_up_50
   53 D1:C80A CE CD D1 -  	.dl decompress_frame_up_51
   54 D1:C80D CF CD D1 -  	.dl decompress_frame_up_52
   55 D1:C810 D0 CD D1 -  	.dl decompress_frame_up_53
   56 D1:C813 D1 CD D1 -  	.dl decompress_frame_up_54
   57 D1:C816 D2 CD D1 -  	.dl decompress_frame_up_55
   58 D1:C819 D3 CD D1 -  	.dl decompress_frame_up_56
   59 D1:C81C D4 CD D1 -  	.dl decompress_frame_up_57
   60 D1:C81F D5 CD D1 -  	.dl decompress_frame_up_58
   61 D1:C822 D6 CD D1 -  	.dl decompress_frame_up_59
   62 D1:C825 D7 CD D1 -  	.dl decompress_frame_up_60
   63 D1:C828 D8 CD D1 -  	.dl decompress_frame_up_61
   64 D1:C82B D9 CD D1 -  	.dl decompress_frame_up_62
   65 D1:C82E DA CD D1 -  	.dl decompress_frame_up_63
   66 D1:C831 DB CD D1 -  	.dl decompress_frame_up_64
   67 D1:C834 DC CD D1 -  	.dl decompress_frame_up_65
   68 D1:C837 DD CD D1 -  	.dl decompress_frame_up_66
   69 D1:C83A DE CD D1 -  	.dl decompress_frame_up_67
   70 D1:C83D DF CD D1 -  	.dl decompress_frame_up_68
   71 D1:C840 E0 CD D1 -  	.dl decompress_frame_up_69
   72 D1:C843 E1 CD D1 -  	.dl decompress_frame_up_70
   73 D1:C846 E2 CD D1 -  	.dl decompress_frame_up_71
   74 D1:C849 E3 CD D1 -  	.dl decompress_frame_up_72
   75 D1:C84C E4 CD D1 -  	.dl decompress_frame_up_73
   76 D1:C84F E5 CD D1 -  	.dl decompress_frame_up_74
   77 D1:C852 E6 CD D1 -  	.dl decompress_frame_up_75
   78 D1:C855 E7 CD D1 -  	.dl decompress_frame_up_76
   79 D1:C858 E8 CD D1 -  	.dl decompress_frame_up_77
   80 D1:C85B E9 CD D1 -  	.dl decompress_frame_up_78
   81 D1:C85E EA CD D1 -  	.dl decompress_frame_up_79
   82 D1:C861 EB CD D1 -  	.dl decompress_frame_up_80
   83 D1:C864 EC CD D1 -  	.dl decompress_frame_up_81
   84 D1:C867 ED CD D1 -  	.dl decompress_frame_up_82
   85 D1:C86A EE CD D1 -  	.dl decompress_frame_up_83
   86 D1:C86D EF CD D1 -  	.dl decompress_frame_up_84
   87 D1:C870 F0 CD D1 -  	.dl decompress_frame_up_85
   88 D1:C873 F1 CD D1 -  	.dl decompress_frame_up_86
   89 D1:C876 F2 CD D1 -  	.dl decompress_frame_up_87
   90 D1:C879 F3 CD D1 -  	.dl decompress_frame_up_88
   91 D1:C87C F4 CD D1 -  	.dl decompress_frame_up_89
   92 D1:C87F -  -  -  -  
   93 D1:C87F -  -  -  -  
   94 D1:C87F -  -  -  -  decompress_calls_table_down:
   95 D1:C87F F5 CD D1 -  	.dl decompress_frame_down_0
   96 D1:C882 F6 CD D1 -  	.dl decompress_frame_down_1
   97 D1:C885 F7 CD D1 -  	.dl decompress_frame_down_2
   98 D1:C888 F8 CD D1 -  	.dl decompress_frame_down_3
   99 D1:C88B F9 CD D1 -  	.dl decompress_frame_down_4
  100 D1:C88E 39 CE D1 -  	.dl decompress_frame_down_5
  101 D1:C891 3A CE D1 -  	.dl decompress_frame_down_6
  102 D1:C894 42 CE D1 -  	.dl decompress_frame_down_7
  103 D1:C897 43 CE D1 -  	.dl decompress_frame_down_8
  104 D1:C89A 6E CE D1 -  	.dl decompress_frame_down_9
  105 D1:C89D 6F CE D1 -  	.dl decompress_frame_down_10
  106 D1:C8A0 E7 CE D1 -  	.dl decompress_frame_down_11
  107 D1:C8A3 7B CF D1 -  	.dl decompress_frame_down_12
  108 D1:C8A6 7F D0 D1 -  	.dl decompress_frame_down_13
  109 D1:C8A9 80 D0 D1 -  	.dl decompress_frame_down_14
  110 D1:C8AC 22 D1 D1 -  	.dl decompress_frame_down_15
  111 D1:C8AF 23 D1 D1 -  	.dl decompress_frame_down_16
  112 D1:C8B2 BE D1 D1 -  	.dl decompress_frame_down_17
  113 D1:C8B5 BF D1 D1 -  	.dl decompress_frame_down_18
  114 D1:C8B8 C0 D1 D1 -  	.dl decompress_frame_down_19
  115 D1:C8BB C1 D1 D1 -  	.dl decompress_frame_down_20
  116 D1:C8BE C2 D1 D1 -  	.dl decompress_frame_down_21
  117 D1:C8C1 C3 D1 D1 -  	.dl decompress_frame_down_22
  118 D1:C8C4 C4 D1 D1 -  	.dl decompress_frame_down_23
  119 D1:C8C7 C5 D1 D1 -  	.dl decompress_frame_down_24
  120 D1:C8CA 0C D2 D1 -  	.dl decompress_frame_down_25
  121 D1:C8CD 0D D2 D1 -  	.dl decompress_frame_down_26
  122 D1:C8D0 0E D2 D1 -  	.dl decompress_frame_down_27
  123 D1:C8D3 0F D2 D1 -  	.dl decompress_frame_down_28
  124 D1:C8D6 10 D2 D1 -  	.dl decompress_frame_down_29
  125 D1:C8D9 11 D2 D1 -  	.dl decompress_frame_down_30
  126 D1:C8DC 12 D2 D1 -  	.dl decompress_frame_down_31
  127 D1:C8DF 13 D2 D1 -  	.dl decompress_frame_down_32
  128 D1:C8E2 14 D2 D1 -  	.dl decompress_frame_down_33
  129 D1:C8E5 15 D2 D1 -  	.dl decompress_frame_down_34
  130 D1:C8E8 16 D2 D1 -  	.dl decompress_frame_down_35
  131 D1:C8EB 17 D2 D1 -  	.dl decompress_frame_down_36
  132 D1:C8EE 18 D2 D1 -  	.dl decompress_frame_down_37
  133 D1:C8F1 19 D2 D1 -  	.dl decompress_frame_down_38
  134 D1:C8F4 1A D2 D1 -  	.dl decompress_frame_down_39
  135 D1:C8F7 1B D2 D1 -  	.dl decompress_frame_down_40
  136 D1:C8FA 1C D2 D1 -  	.dl decompress_frame_down_41
  137 D1:C8FD 1D D2 D1 -  	.dl decompress_frame_down_42
  138 D1:C900 1E D2 D1 -  	.dl decompress_frame_down_43
  139 D1:C903 1F D2 D1 -  	.dl decompress_frame_down_44
  140 D1:C906 20 D2 D1 -  	.dl decompress_frame_down_45
  141 D1:C909 21 D2 D1 -  	.dl decompress_frame_down_46
  142 D1:C90C 22 D2 D1 -  	.dl decompress_frame_down_47
  143 D1:C90F 23 D2 D1 -  	.dl decompress_frame_down_48
  144 D1:C912 24 D2 D1 -  	.dl decompress_frame_down_49
  145 D1:C915 25 D2 D1 -  	.dl decompress_frame_down_50
  146 D1:C918 26 D2 D1 -  	.dl decompress_frame_down_51
  147 D1:C91B 27 D2 D1 -  	.dl decompress_frame_down_52
  148 D1:C91E 28 D2 D1 -  	.dl decompress_frame_down_53
  149 D1:C921 29 D2 D1 -  	.dl decompress_frame_down_54
  150 D1:C924 2A D2 D1 -  	.dl decompress_frame_down_55
  151 D1:C927 2B D2 D1 -  	.dl decompress_frame_down_56
  152 D1:C92A 2C D2 D1 -  	.dl decompress_frame_down_57
  153 D1:C92D 2D D2 D1 -  	.dl decompress_frame_down_58
  154 D1:C930 2E D2 D1 -  	.dl decompress_frame_down_59
  155 D1:C933 2F D2 D1 -  	.dl decompress_frame_down_60
  156 D1:C936 30 D2 D1 -  	.dl decompress_frame_down_61
  157 D1:C939 31 D2 D1 -  	.dl decompress_frame_down_62
  158 D1:C93C 32 D2 D1 -  	.dl decompress_frame_down_63
  159 D1:C93F 33 D2 D1 -  	.dl decompress_frame_down_64
  160 D1:C942 34 D2 D1 -  	.dl decompress_frame_down_65
  161 D1:C945 35 D2 D1 -  	.dl decompress_frame_down_66
  162 D1:C948 36 D2 D1 -  	.dl decompress_frame_down_67
  163 D1:C94B 37 D2 D1 -  	.dl decompress_frame_down_68
  164 D1:C94E 38 D2 D1 -  	.dl decompress_frame_down_69
  165 D1:C951 39 D2 D1 -  	.dl decompress_frame_down_70
  166 D1:C954 3A D2 D1 -  	.dl decompress_frame_down_71
  167 D1:C957 3B D2 D1 -  	.dl decompress_frame_down_72
  168 D1:C95A 3C D2 D1 -  	.dl decompress_frame_down_73
  169 D1:C95D 3D D2 D1 -  	.dl decompress_frame_down_74
  170 D1:C960 3E D2 D1 -  	.dl decompress_frame_down_75
  171 D1:C963 3F D2 D1 -  	.dl decompress_frame_down_76
  172 D1:C966 40 D2 D1 -  	.dl decompress_frame_down_77
  173 D1:C969 41 D2 D1 -  	.dl decompress_frame_down_78
  174 D1:C96C 42 D2 D1 -  	.dl decompress_frame_down_79
  175 D1:C96F 43 D2 D1 -  	.dl decompress_frame_down_80
  176 D1:C972 44 D2 D1 -  	.dl decompress_frame_down_81
  177 D1:C975 45 D2 D1 -  	.dl decompress_frame_down_82
  178 D1:C978 46 D2 D1 -  	.dl decompress_frame_down_83
  179 D1:C97B 47 D2 D1 -  	.dl decompress_frame_down_84
  180 D1:C97E 48 D2 D1 -  	.dl decompress_frame_down_85
  181 D1:C981 49 D2 D1 -  	.dl decompress_frame_down_86
  182 D1:C984 4A D2 D1 -  	.dl decompress_frame_down_87
  183 D1:C987 4B D2 D1 -  	.dl decompress_frame_down_88
  184 D1:C98A 4C D2 D1 -  	.dl decompress_frame_down_89
  185 D1:C98D -  -  -  -  
  186 D1:C98D -  -  -  -  
  187 D1:C98D -  -  -  -  
  188 D1:C98D -  -  -  -  decompress_frame_up_pre2:
  189 D1:C98D 07 -  -  -  	.db 7
  190 D1:C98E 80 E3 D1 C0 
              01 D4 -  -  	.dl Clouds_0, Clouds_0_Fast_F
  191 D1:C994 A0 -  -  -  	.db %10100000
  192 D1:C995 A9 E3 D1 26 
              02 D4 -  -  	.dl Clouds_1, Clouds_1_Fast_F
  193 D1:C99B A0 -  -  -  	.db %10100000
  194 D1:C99C FC E3 D1 8A 
              02 D4 -  -  	.dl Clouds_4, Clouds_4_Fast_F
  195 D1:C9A2 A0 -  -  -  	.db %10100000
  196 D1:C9A3 D0 E3 D1 CA 
              02 D4 -  -  	.dl Clouds_3, Clouds_3_Fast_F
  197 D1:C9A9 A0 -  -  -  	.db %10100000
  198 D1:C9AA 46 E2 D1 36 
              03 D4 -  -  	.dl Clouds_2, Clouds_2_Fast_F
  199 D1:C9B0 A0 -  -  -  	.db %10100000
  200 D1:C9B1 13 E4 D1 E7 
              03 D4 -  -  	.dl Frog_0, Frog_0_Slow
  201 D1:C9B7 00 -  -  -  	.db %00000000
  202 D1:C9B8 13 E4 D1 17 
              05 D4 -  -  	.dl Frog_0, Frog_0_Slow_O
  203 D1:C9BE 40 -  -  -  	.db %01000000
  204 D1:C9BF -  -  -  -  
  205 D1:C9BF -  -  -  -  decompress_frame_up_pre1:
  206 D1:C9BF 40 -  -  -  	.db 64
  207 D1:C9C0 AE D7 D1 46 
              06 D4 -  -  	.dl Branches_8, Branches_8_Fast_F
  208 D1:C9C6 A0 -  -  -  	.db %10100000
  209 D1:C9C7 8A D7 D1 A5 
              06 D4 -  -  	.dl Branches_15, Branches_15_Slow
  210 D1:C9CD 00 -  -  -  	.db %00000000
  211 D1:C9CE 53 DB D1 16 
              07 D4 -  -  	.dl Branches_3, Branches_3_Fast
  212 D1:C9D4 80 -  -  -  	.db %10000000
  213 D1:C9D5 64 D9 D1 BD 
              07 D4 -  -  	.dl Vines_2, Vines_2_Slow_F
  214 D1:C9DB 20 -  -  -  	.db %00100000
  215 D1:C9DC A2 DA D1 97 
              08 D4 -  -  	.dl Vines_1, Vines_1_Slow
  216 D1:C9E2 00 -  -  -  	.db %00000000
  217 D1:C9E3 38 DA D1 27 
              09 D4 -  -  	.dl Vines_9, Vines_9_Slow_O
  218 D1:C9E9 40 -  -  -  	.db %01000000
  219 D1:C9EA 9F DE D1 D8 
              09 D4 -  -  	.dl Tree_0, Tree_0_Fast_F
  220 D1:C9F0 A0 -  -  -  	.db %10100000
  221 D1:C9F1 32 DE D1 D4 
              0A D4 -  -  	.dl Tree_3, Tree_3_Fast
  222 D1:C9F7 80 -  -  -  	.db %10000000
  223 D1:C9F8 0A DF D1 D6 
              0B D4 -  -  	.dl Tree_8, Tree_8_Fast
  224 D1:C9FE 80 -  -  -  	.db %10000000
  225 D1:C9FF 58 DD D1 D8 
              0C D4 -  -  	.dl Tree_9, Tree_9_Fast_F
  226 D1:CA05 A0 -  -  -  	.db %10100000
  227 D1:CA06 0A DF D1 DA 
              0D D4 -  -  	.dl Tree_8, Tree_8_Fast_F
  228 D1:CA0C A0 -  -  -  	.db %10100000
  229 D1:CA0D 7E DC D1 DC 
              0E D4 -  -  	.dl Tree_4, Tree_4_Fast_F
  230 D1:CA13 A0 -  -  -  	.db %10100000
  231 D1:CA14 9F DE D1 DE 
              0F D4 -  -  	.dl Tree_0, Tree_0_Fast
  232 D1:CA1A 80 -  -  -  	.db %10000000
  233 D1:CA1B C5 DD D1 DA 
              10 D4 -  -  	.dl Tree_6, Tree_6_Fast
  234 D1:CA21 80 -  -  -  	.db %10000000
  235 D1:CA22 77 DF D1 DC 
              11 D4 -  -  	.dl Tree_10, Tree_10_Fast
  236 D1:CA28 80 -  -  -  	.db %10000000
  237 D1:CA29 EB DC D1 DE 
              12 D4 -  -  	.dl Tree_7, Tree_7_Fast_F
  238 D1:CA2F A0 -  -  -  	.db %10100000
  239 D1:CA30 E4 DF D1 E0 
              13 D4 -  -  	.dl Tree_1, Tree_1_Fast_F
  240 D1:CA36 A0 -  -  -  	.db %10100000
  241 D1:CA37 E4 DF D1 DE 
              14 D4 -  -  	.dl Tree_1, Tree_1_Fast
  242 D1:CA3D 80 -  -  -  	.db %10000000
  243 D1:CA3E 50 E0 D1 DC 
              15 D4 -  -  	.dl Tree_5, Tree_5_Fast
  244 D1:CA44 80 -  -  -  	.db %10000000
  245 D1:CA45 BD E0 D1 DE 
              16 D4 -  -  	.dl Tree_11, Tree_11_Fast
  246 D1:CA4B 80 -  -  -  	.db %10000000
  247 D1:CA4C 50 E0 D1 E0 
              17 D4 -  -  	.dl Tree_5, Tree_5_Fast_F
  248 D1:CA52 A0 -  -  -  	.db %10100000
  249 D1:CA53 13 DC D1 E2 
              18 D4 -  -  	.dl Tree_2, Tree_2_Fast_F
  250 D1:CA59 A0 -  -  -  	.db %10100000
  251 D1:CA5A BD E0 D1 DE 
              19 D4 -  -  	.dl Tree_11, Tree_11_Fast_F
  252 D1:CA60 A0 -  -  -  	.db %10100000
  253 D1:CA61 2A E1 D1 E0 
              1A D4 -  -  	.dl Branches_1, Branches_1_Fast
  254 D1:CA67 80 -  -  -  	.db %10000000
  255 D1:CA68 B3 DB D1 79 
              1B D4 -  -  	.dl Branches_2, Branches_2_Slow_O
  256 D1:CA6E 40 -  -  -  	.db %01000000
  257 D1:CA6F 53 DB D1 59 
              1C D4 -  -  	.dl Branches_3, Branches_3_Slow_O
  258 D1:CA75 40 -  -  -  	.db %01000000
  259 D1:CA76 CC DA D1 33 
              1D D4 -  -  	.dl Branches_5, Branches_5_Slow_O
  260 D1:CA7C 40 -  -  -  	.db %01000000
  261 D1:CA7D A5 D6 D1 03 
              1E D4 -  -  	.dl Leaves_3, Leaves_3_Slow_O
  262 D1:CA83 40 -  -  -  	.db %01000000
  263 D1:CA84 85 E1 D1 6F 
              1E D4 -  -  	.dl Vines_7, Vines_7_Slow
  264 D1:CA8A 00 -  -  -  	.db %00000000
  265 D1:CA8B EB D9 D1 2F 
              1F D4 -  -  	.dl Vines_5, Vines_5_Slow_O_F
  266 D1:CA91 60 -  -  -  	.db %01100000
  267 D1:CA92 AB D9 D1 1D 
              20 D4 -  -  	.dl Vines_3, Vines_3_Slow_O_F
  268 D1:CA98 60 -  -  -  	.db %01100000
  269 D1:CA99 6B DA D1 D3 
              20 D4 -  -  	.dl Vines_4, Vines_4_Slow_O
  270 D1:CA9F 40 -  -  -  	.db %01000000
  271 D1:CAA0 B1 E1 D1 85 
              21 D4 -  -  	.dl Vines_10, Vines_10_Slow
  272 D1:CAA6 00 -  -  -  	.db %00000000
  273 D1:CAA7 85 E1 D1 47 
              22 D4 -  -  	.dl Vines_7, Vines_7_Slow_F
  274 D1:CAAD 20 -  -  -  	.db %00100000
  275 D1:CAAE 64 D9 D1 07 
              23 D4 -  -  	.dl Vines_2, Vines_2_Slow
  276 D1:CAB4 00 -  -  -  	.db %00000000
  277 D1:CAB5 19 D8 D1 E3 
              23 D4 -  -  	.dl Leaves_2, Leaves_2_Slow
  278 D1:CABB 00 -  -  -  	.db %00000000
  279 D1:CABC 2A E1 D1 4C 
              24 D4 -  -  	.dl Branches_1, Branches_1_Fast_F
  280 D1:CAC2 A0 -  -  -  	.db %10100000
  281 D1:CAC3 B3 DB D1 E4 
              24 D4 -  -  	.dl Branches_2, Branches_2_Fast_F
  282 D1:CAC9 A0 -  -  -  	.db %10100000
  283 D1:CACA CC DA D1 8E 
              25 D4 -  -  	.dl Branches_5, Branches_5_Fast_F
  284 D1:CAD0 A0 -  -  -  	.db %10100000
  285 D1:CAD1 95 D8 D1 2F 
              26 D4 -  -  	.dl Branches_14, Branches_14_Slow
  286 D1:CAD7 00 -  -  -  	.db %00000000
  287 D1:CAD8 B1 E1 D1 9B 
              26 D4 -  -  	.dl Vines_10, Vines_10_Slow_O
  288 D1:CADE 40 -  -  -  	.db %01000000
  289 D1:CADF EE E1 D1 5A 
              27 D4 -  -  	.dl Branches_0, Branches_0_Fast
  290 D1:CAE5 80 -  -  -  	.db %10000000
  291 D1:CAE6 46 E2 D1 F2 
              27 D4 -  -  	.dl Clouds_2, Clouds_2_Fast
  292 D1:CAEC 80 -  -  -  	.db %10000000
  293 D1:CAED 6A E2 D1 A4 
              28 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast
  294 D1:CAF3 80 -  -  -  	.db %10000000
  295 D1:CAF4 6A E2 D1 2A 
              29 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast_F
  296 D1:CAFA A0 -  -  -  	.db %10100000
  297 D1:CAFB 9F E2 D1 B0 
              29 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast
  298 D1:CB01 80 -  -  -  	.db %10000000
  299 D1:CB02 9F E2 D1 36 
              2A D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast_F
  300 D1:CB08 A0 -  -  -  	.db %10100000
  301 D1:CB09 ED E2 D1 BC 
              2A D4 -  -  	.dl GroundGrassSmall, GroundGrassSmall_Fast
  302 D1:CB0F 80 -  -  -  	.db %10000000
  303 D1:CB10 ED E2 D1 64 
              2B D4 -  -  	.dl GroundGrassSmall, GroundGrassSmall_Fast_F
  304 D1:CB16 A0 -  -  -  	.db %10100000
  305 D1:CB17 0F E3 D1 0C 
              2C D4 -  -  	.dl Tree_16, Tree_16_Fast
  306 D1:CB1D 80 -  -  -  	.db %10000000
  307 D1:CB1E 27 E3 D1 61 
              2C D4 -  -  	.dl Tree_17, Tree_17_Slow_O
  308 D1:CB24 40 -  -  -  	.db %01000000
  309 D1:CB25 27 E3 D1 C9 
              2C D4 -  -  	.dl Tree_17, Tree_17_Slow_O_F
  310 D1:CB2B 60 -  -  -  	.db %01100000
  311 D1:CB2C 38 E3 D1 2E 
              2D D4 -  -  	.dl Leaves_8, Leaves_8_Fast
  312 D1:CB32 80 -  -  -  	.db %10000000
  313 D1:CB33 0F E3 D1 B5 
              2D D4 -  -  	.dl Tree_16, Tree_16_Slow_O
  314 D1:CB39 40 -  -  -  	.db %01000000
  315 D1:CB3A 27 E3 D1 3B 
              2E D4 -  -  	.dl Tree_17, Tree_17_Slow_F
  316 D1:CB40 20 -  -  -  	.db %00100000
  317 D1:CB41 6F E3 D1 A3 
              2E D4 -  -  	.dl Tree_18, Tree_18_Slow_O
  318 D1:CB47 40 -  -  -  	.db %01000000
  319 D1:CB48 27 E3 D1 07 
              2F D4 -  -  	.dl Tree_17, Tree_17_Slow
  320 D1:CB4E 00 -  -  -  	.db %00000000
  321 D1:CB4F 6F E3 D1 6D 
              2F D4 -  -  	.dl Tree_18, Tree_18_Slow_F
  322 D1:CB55 20 -  -  -  	.db %00100000
  323 D1:CB56 0F E3 D1 D1 
              2F D4 -  -  	.dl Tree_16, Tree_16_Slow_O_F
  324 D1:CB5C 60 -  -  -  	.db %01100000
  325 D1:CB5D 19 D8 D1 57 
              30 D4 -  -  	.dl Leaves_2, Leaves_2_Slow_F
  326 D1:CB63 20 -  -  -  	.db %00100000
  327 D1:CB64 80 E3 D1 BE 
              30 D4 -  -  	.dl Clouds_0, Clouds_0_Fast
  328 D1:CB6A 80 -  -  -  	.db %10000000
  329 D1:CB6B A9 E3 D1 24 
              31 D4 -  -  	.dl Clouds_1, Clouds_1_Fast
  330 D1:CB71 80 -  -  -  	.db %10000000
  331 D1:CB72 D0 E3 D1 88 
              31 D4 -  -  	.dl Clouds_3, Clouds_3_Fast
  332 D1:CB78 80 -  -  -  	.db %10000000
  333 D1:CB79 FC E3 D1 F4 
              31 D4 -  -  	.dl Clouds_4, Clouds_4_Fast
  334 D1:CB7F 80 -  -  -  	.db %10000000
  335 D1:CB80 -  -  -  -  
  336 D1:CB80 -  -  -  -  decompress_frame_up_0:
  337 D1:CB80 40 -  -  -  	.db 64
  338 D1:CB81 9C D4 D1 34 
              32 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast
  339 D1:CB87 80 -  -  -  	.db %10000000
  340 D1:CB88 9C D4 D1 E6 
              32 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast_F
  341 D1:CB8E A0 -  -  -  	.db %10100000
  342 D1:CB8F E1 D4 D1 98 
              33 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast
  343 D1:CB95 80 -  -  -  	.db %10000000
  344 D1:CB96 E1 D4 D1 18 
              34 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast_F
  345 D1:CB9C A0 -  -  -  	.db %10100000
  346 D1:CB9D 2B D5 D1 98 
              34 D4 -  -  	.dl GroundGrassL4, GroundGrassL4_Fast
  347 D1:CBA3 80 -  -  -  	.db %10000000
  348 D1:CBA4 4B D5 D1 22 
              35 D4 -  -  	.dl GroundGrassL2, GroundGrassL2_Fast
  349 D1:CBAA 80 -  -  -  	.db %10000000
  350 D1:CBAB 63 D5 D1 7A 
              35 D4 -  -  	.dl GroundGrassL5, GroundGrassL5_Fast
  351 D1:CBB1 80 -  -  -  	.db %10000000
  352 D1:CBB2 87 D5 D1 FC 
              35 D4 -  -  	.dl GroundGrassL3, GroundGrassL3_Fast
  353 D1:CBB8 80 -  -  -  	.db %10000000
  354 D1:CBB9 A4 D5 D1 56 
              36 D4 -  -  	.dl GroundGrassL1, GroundGrassL1_Fast
  355 D1:CBBF 80 -  -  -  	.db %10000000
  356 D1:CBC0 A4 D5 D1 C8 
              36 D4 -  -  	.dl GroundGrassL1, GroundGrassL1_Fast_F
  357 D1:CBC6 A0 -  -  -  	.db %10100000
  358 D1:CBC7 87 D5 D1 3A 
              37 D4 -  -  	.dl GroundGrassL3, GroundGrassL3_Fast_F
  359 D1:CBCD A0 -  -  -  	.db %10100000
  360 D1:CBCE C0 D5 D1 93 
              37 D4 -  -  	.dl Branches_10, Branches_10_Slow_O
  361 D1:CBD4 40 -  -  -  	.db %01000000
  362 D1:CBD5 0A D6 D1 38 
              38 D4 -  -  	.dl Branches_9, Branches_9_Fast
  363 D1:CBDB 80 -  -  -  	.db %10000000
  364 D1:CBDC 5A D6 D1 BB 
              38 D4 -  -  	.dl Branches_16, Branches_16_Slow
  365 D1:CBE2 00 -  -  -  	.db %00000000
  366 D1:CBE3 87 D6 D1 27 
              39 D4 -  -  	.dl Branches_13, Branches_13_Slow_O
  367 D1:CBE9 40 -  -  -  	.db %01000000
  368 D1:CBEA A5 D6 D1 6D 
              39 D4 -  -  	.dl Leaves_3, Leaves_3_Slow
  369 D1:CBF0 00 -  -  -  	.db %00000000
  370 D1:CBF1 C4 D6 D1 DA 
              39 D4 -  -  	.dl Leaves_7, Leaves_7_Fast
  371 D1:CBF7 80 -  -  -  	.db %10000000
  372 D1:CBF8 C4 D6 D1 62 
              3A D4 -  -  	.dl Leaves_7, Leaves_7_Fast_F
  373 D1:CBFE A0 -  -  -  	.db %10100000
  374 D1:CBFF FB D6 D1 E9 
              3A D4 -  -  	.dl Branches_6, Branches_6_Slow
  375 D1:CC05 00 -  -  -  	.db %00000000
  376 D1:CC06 C0 D5 D1 87 
              3B D4 -  -  	.dl Branches_10, Branches_10_Slow_O_F
  377 D1:CC0C 60 -  -  -  	.db %01100000
  378 D1:CC0D 45 D7 D1 2B 
              3C D4 -  -  	.dl Branches_7, Branches_7_Slow_O
  379 D1:CC13 40 -  -  -  	.db %01000000
  380 D1:CC14 5A D6 D1 CF 
              3C D4 -  -  	.dl Branches_16, Branches_16_Slow_O
  381 D1:CC1A 40 -  -  -  	.db %01000000
  382 D1:CC1B 8A D7 D1 3B 
              3D D4 -  -  	.dl Branches_15, Branches_15_Slow_O
  383 D1:CC21 40 -  -  -  	.db %01000000
  384 D1:CC22 AE D7 D1 A7 
              3D D4 -  -  	.dl Branches_8, Branches_8_Slow_O_F
  385 D1:CC28 60 -  -  -  	.db %01100000
  386 D1:CC29 DF D7 D1 2F 
              3E D4 -  -  	.dl Branches_12, Branches_12_Slow_O
  387 D1:CC2F 40 -  -  -  	.db %01000000
  388 D1:CC30 8A D7 D1 A9 
              3E D4 -  -  	.dl Branches_15, Branches_15_Slow_O_F
  389 D1:CC36 60 -  -  -  	.db %01100000
  390 D1:CC37 19 D8 D1 19 
              3F D4 -  -  	.dl Leaves_2, Leaves_2_Slow_O
  391 D1:CC3D 40 -  -  -  	.db %01000000
  392 D1:CC3E 32 D8 D1 83 
              3F D4 -  -  	.dl Leaves_4, Leaves_4_Slow
  393 D1:CC44 00 -  -  -  	.db %00000000
  394 D1:CC45 32 D8 D1 0D 
              40 D4 -  -  	.dl Leaves_4, Leaves_4_Slow_F
  395 D1:CC4B 20 -  -  -  	.db %00100000
  396 D1:CC4C 45 D7 D1 98 
              40 D4 -  -  	.dl Branches_7, Branches_7_Fast
  397 D1:CC52 80 -  -  -  	.db %10000000
  398 D1:CC53 AE D7 D1 12 
              41 D4 -  -  	.dl Branches_8, Branches_8_Fast
  399 D1:CC59 80 -  -  -  	.db %10000000
  400 D1:CC5A C0 D5 D1 70 
              41 D4 -  -  	.dl Branches_10, Branches_10_Fast_F
  401 D1:CC60 A0 -  -  -  	.db %10100000
  402 D1:CC61 57 D8 D1 E8 
              41 D4 -  -  	.dl Branches_11, Branches_11_Fast_F
  403 D1:CC67 A0 -  -  -  	.db %10100000
  404 D1:CC68 5A D6 D1 4F 
              42 D4 -  -  	.dl Branches_16, Branches_16_Slow_O_F
  405 D1:CC6E 60 -  -  -  	.db %01100000
  406 D1:CC6F 87 D6 D1 BC 
              42 D4 -  -  	.dl Branches_13, Branches_13_Fast_F
  407 D1:CC75 A0 -  -  -  	.db %10100000
  408 D1:CC76 95 D8 D1 ED 
              42 D4 -  -  	.dl Branches_14, Branches_14_Slow_O
  409 D1:CC7C 40 -  -  -  	.db %01000000
  410 D1:CC7D 8A D7 D1 5D 
              43 D4 -  -  	.dl Branches_15, Branches_15_Slow_F
  411 D1:CC83 20 -  -  -  	.db %00100000
  412 D1:CC84 B4 D8 D1 C9 
              43 D4 -  -  	.dl Leaves_6, Leaves_6_Slow
  413 D1:CC8A 00 -  -  -  	.db %00000000
  414 D1:CC8B D8 D8 D1 4C 
              44 D4 -  -  	.dl Branches_4, Branches_4_Fast_F
  415 D1:CC91 A0 -  -  -  	.db %10100000
  416 D1:CC92 45 D7 D1 EA 
              44 D4 -  -  	.dl Branches_7, Branches_7_Fast_F
  417 D1:CC98 A0 -  -  -  	.db %10100000
  418 D1:CC99 DF D7 D1 64 
              45 D4 -  -  	.dl Branches_12, Branches_12_Fast_F
  419 D1:CC9F A0 -  -  -  	.db %10100000
  420 D1:CCA0 32 D8 D1 BF 
              45 D4 -  -  	.dl Leaves_4, Leaves_4_Slow_O
  421 D1:CCA6 40 -  -  -  	.db %01000000
  422 D1:CCA7 AE D7 D1 4D 
              46 D4 -  -  	.dl Branches_8, Branches_8_Slow_O
  423 D1:CCAD 40 -  -  -  	.db %01000000
  424 D1:CCAE C0 D5 D1 D6 
              46 D4 -  -  	.dl Branches_10, Branches_10_Fast
  425 D1:CCB4 80 -  -  -  	.db %10000000
  426 D1:CCB5 B4 D8 D1 4D 
              47 D4 -  -  	.dl Leaves_6, Leaves_6_Slow_O
  427 D1:CCBB 40 -  -  -  	.db %01000000
  428 D1:CCBC A5 D6 D1 D1 
              47 D4 -  -  	.dl Leaves_3, Leaves_3_Slow_F
  429 D1:CCC2 20 -  -  -  	.db %00100000
  430 D1:CCC3 36 D9 D1 3D 
              48 D4 -  -  	.dl Vines_8, Vines_8_Slow
  431 D1:CCC9 00 -  -  -  	.db %00000000
  432 D1:CCCA 64 D9 D1 07 
              49 D4 -  -  	.dl Vines_2, Vines_2_Slow_O
  433 D1:CCD0 40 -  -  -  	.db %01000000
  434 D1:CCD1 AB D9 D1 DF 
              49 D4 -  -  	.dl Vines_3, Vines_3_Slow
  435 D1:CCD7 00 -  -  -  	.db %00000000
  436 D1:CCD8 EB D9 D1 8F 
              4A D4 -  -  	.dl Vines_5, Vines_5_Slow
  437 D1:CCDE 00 -  -  -  	.db %00000000
  438 D1:CCDF 38 DA D1 81 
              4B D4 -  -  	.dl Vines_9, Vines_9_Slow
  439 D1:CCE5 00 -  -  -  	.db %00000000
  440 D1:CCE6 6B DA D1 33 
              4C D4 -  -  	.dl Vines_4, Vines_4_Slow_F
  441 D1:CCEC 20 -  -  -  	.db %00100000
  442 D1:CCED A2 DA D1 EB 
              4C D4 -  -  	.dl Vines_1, Vines_1_Slow_O
  443 D1:CCF3 40 -  -  -  	.db %01000000
  444 D1:CCF4 38 DA D1 77 
              4D D4 -  -  	.dl Vines_9, Vines_9_Slow_O_F
  445 D1:CCFA 60 -  -  -  	.db %01100000
  446 D1:CCFB AB D9 D1 29 
              4E D4 -  -  	.dl Vines_3, Vines_3_Slow_F
  447 D1:CD01 20 -  -  -  	.db %00100000
  448 D1:CD02 36 D9 D1 D9 
              4E D4 -  -  	.dl Vines_8, Vines_8_Slow_F
  449 D1:CD08 20 -  -  -  	.db %00100000
  450 D1:CD09 0A D6 D1 A3 
              4F D4 -  -  	.dl Branches_9, Branches_9_Slow_O
  451 D1:CD0F 40 -  -  -  	.db %01000000
  452 D1:CD10 64 D9 D1 53 
              50 D4 -  -  	.dl Vines_2, Vines_2_Slow_O_F
  453 D1:CD16 60 -  -  -  	.db %01100000
  454 D1:CD17 13 DC D1 2C 
              51 D4 -  -  	.dl Tree_2, Tree_2_Fast
  455 D1:CD1D 80 -  -  -  	.db %10000000
  456 D1:CD1E 7E DC D1 28 
              52 D4 -  -  	.dl Tree_4, Tree_4_Fast
  457 D1:CD24 80 -  -  -  	.db %10000000
  458 D1:CD25 EB DC D1 2A 
              53 D4 -  -  	.dl Tree_7, Tree_7_Fast
  459 D1:CD2B 80 -  -  -  	.db %10000000
  460 D1:CD2C 58 DD D1 2C 
              54 D4 -  -  	.dl Tree_9, Tree_9_Fast
  461 D1:CD32 80 -  -  -  	.db %10000000
  462 D1:CD33 C5 DD D1 2E 
              55 D4 -  -  	.dl Tree_6, Tree_6_Fast_F
  463 D1:CD39 A0 -  -  -  	.db %10100000
  464 D1:CD3A 32 DE D1 30 
              56 D4 -  -  	.dl Tree_3, Tree_3_Fast_F
  465 D1:CD40 A0 -  -  -  	.db %10100000
  466 D1:CD41 -  -  -  -  
  467 D1:CD41 -  -  -  -  decompress_frame_up_1:
  468 D1:CD41 00 -  -  -  	.db 0
  469 D1:CD42 -  -  -  -  
  470 D1:CD42 -  -  -  -  decompress_frame_up_2:
  471 D1:CD42 04 -  -  -  	.db 4
  472 D1:CD43 2A E1 D1 31 
              57 D4 -  -  	.dl Branches_1, Branches_1_Slow_O
  473 D1:CD49 40 -  -  -  	.db %01000000
  474 D1:CD4A D8 D8 D1 F7 
              57 D4 -  -  	.dl Branches_4, Branches_4_Slow_O
  475 D1:CD50 40 -  -  -  	.db %01000000
  476 D1:CD51 A5 D6 D1 C3 
              58 D4 -  -  	.dl Leaves_3, Leaves_3_Slow_O_F
  477 D1:CD57 60 -  -  -  	.db %01100000
  478 D1:CD58 85 E1 D1 31 
              59 D4 -  -  	.dl Vines_7, Vines_7_Slow_O
  479 D1:CD5E 40 -  -  -  	.db %01000000
  480 D1:CD5F -  -  -  -  
  481 D1:CD5F -  -  -  -  decompress_frame_up_3:
  482 D1:CD5F 00 -  -  -  	.db 0
  483 D1:CD60 -  -  -  -  
  484 D1:CD60 -  -  -  -  decompress_frame_up_4:
  485 D1:CD60 05 -  -  -  	.db 5
  486 D1:CD61 36 D9 D1 F5 
              59 D4 -  -  	.dl Vines_8, Vines_8_Slow_O
  487 D1:CD67 40 -  -  -  	.db %01000000
  488 D1:CD68 36 D9 D1 BB 
              5A D4 -  -  	.dl Vines_8, Vines_8_Slow_O_F
  489 D1:CD6E 60 -  -  -  	.db %01100000
  490 D1:CD6F 2A DB D1 81 
              5B D4 -  -  	.dl Vines_6, Vines_6_Slow
  491 D1:CD75 00 -  -  -  	.db %00000000
  492 D1:CD76 EE E1 D1 38 
              5C D4 -  -  	.dl Branches_0, Branches_0_Fast_F
  493 D1:CD7C A0 -  -  -  	.db %10100000
  494 D1:CD7D 0A D6 D1 D0 
              5C D4 -  -  	.dl Branches_9, Branches_9_Fast_F
  495 D1:CD83 A0 -  -  -  	.db %10100000
  496 D1:CD84 -  -  -  -  
  497 D1:CD84 -  -  -  -  decompress_frame_up_5:
  498 D1:CD84 02 -  -  -  	.db 2
  499 D1:CD85 CC DA D1 98 
              34 D4 -  -  	.dl Branches_5, Branches_5_Fast
  500 D1:CD8B 80 -  -  -  	.db %10000000
  501 D1:CD8C D8 D8 D1 38 
              35 D4 -  -  	.dl Branches_4, Branches_4_Fast
  502 D1:CD92 80 -  -  -  	.db %10000000
  503 D1:CD93 -  -  -  -  
  504 D1:CD93 -  -  -  -  decompress_frame_up_6:
  505 D1:CD93 02 -  -  -  	.db 2
  506 D1:CD94 B3 DB D1 D6 
              35 D4 -  -  	.dl Branches_2, Branches_2_Fast
  507 D1:CD9A 80 -  -  -  	.db %10000000
  508 D1:CD9B AB D9 D1 7F 
              36 D4 -  -  	.dl Vines_3, Vines_3_Slow_O
  509 D1:CDA1 40 -  -  -  	.db %01000000
  510 D1:CDA2 -  -  -  -  
  511 D1:CDA2 -  -  -  -  decompress_frame_up_7:
  512 D1:CDA2 00 -  -  -  	.db 0
  513 D1:CDA3 -  -  -  -  
  514 D1:CDA3 -  -  -  -  decompress_frame_up_8:
  515 D1:CDA3 00 -  -  -  	.db 0
  516 D1:CDA4 -  -  -  -  
  517 D1:CDA4 -  -  -  -  decompress_frame_up_9:
  518 D1:CDA4 00 -  -  -  	.db 0
  519 D1:CDA5 -  -  -  -  
  520 D1:CDA5 -  -  -  -  decompress_frame_up_10:
  521 D1:CDA5 00 -  -  -  	.db 0
  522 D1:CDA6 -  -  -  -  
  523 D1:CDA6 -  -  -  -  decompress_frame_up_11:
  524 D1:CDA6 00 -  -  -  	.db 0
  525 D1:CDA7 -  -  -  -  
  526 D1:CDA7 -  -  -  -  decompress_frame_up_12:
  527 D1:CDA7 00 -  -  -  	.db 0
  528 D1:CDA8 -  -  -  -  
  529 D1:CDA8 -  -  -  -  decompress_frame_up_13:
  530 D1:CDA8 00 -  -  -  	.db 0
  531 D1:CDA9 -  -  -  -  
  532 D1:CDA9 -  -  -  -  decompress_frame_up_14:
  533 D1:CDA9 00 -  -  -  	.db 0
  534 D1:CDAA -  -  -  -  
  535 D1:CDAA -  -  -  -  decompress_frame_up_15:
  536 D1:CDAA 00 -  -  -  	.db 0
  537 D1:CDAB -  -  -  -  
  538 D1:CDAB -  -  -  -  decompress_frame_up_16:
  539 D1:CDAB 00 -  -  -  	.db 0
  540 D1:CDAC -  -  -  -  
  541 D1:CDAC -  -  -  -  decompress_frame_up_17:
  542 D1:CDAC 00 -  -  -  	.db 0
  543 D1:CDAD -  -  -  -  
  544 D1:CDAD -  -  -  -  decompress_frame_up_18:
  545 D1:CDAD 00 -  -  -  	.db 0
  546 D1:CDAE -  -  -  -  
  547 D1:CDAE -  -  -  -  decompress_frame_up_19:
  548 D1:CDAE 00 -  -  -  	.db 0
  549 D1:CDAF -  -  -  -  
  550 D1:CDAF -  -  -  -  decompress_frame_up_20:
  551 D1:CDAF 00 -  -  -  	.db 0
  552 D1:CDB0 -  -  -  -  
  553 D1:CDB0 -  -  -  -  decompress_frame_up_21:
  554 D1:CDB0 00 -  -  -  	.db 0
  555 D1:CDB1 -  -  -  -  
  556 D1:CDB1 -  -  -  -  decompress_frame_up_22:
  557 D1:CDB1 00 -  -  -  	.db 0
  558 D1:CDB2 -  -  -  -  
  559 D1:CDB2 -  -  -  -  decompress_frame_up_23:
  560 D1:CDB2 00 -  -  -  	.db 0
  561 D1:CDB3 -  -  -  -  
  562 D1:CDB3 -  -  -  -  decompress_frame_up_24:
  563 D1:CDB3 00 -  -  -  	.db 0
  564 D1:CDB4 -  -  -  -  
  565 D1:CDB4 -  -  -  -  decompress_frame_up_25:
  566 D1:CDB4 00 -  -  -  	.db 0
  567 D1:CDB5 -  -  -  -  
  568 D1:CDB5 -  -  -  -  decompress_frame_up_26:
  569 D1:CDB5 00 -  -  -  	.db 0
  570 D1:CDB6 -  -  -  -  
  571 D1:CDB6 -  -  -  -  decompress_frame_up_27:
  572 D1:CDB6 00 -  -  -  	.db 0
  573 D1:CDB7 -  -  -  -  
  574 D1:CDB7 -  -  -  -  decompress_frame_up_28:
  575 D1:CDB7 00 -  -  -  	.db 0
  576 D1:CDB8 -  -  -  -  
  577 D1:CDB8 -  -  -  -  decompress_frame_up_29:
  578 D1:CDB8 00 -  -  -  	.db 0
  579 D1:CDB9 -  -  -  -  
  580 D1:CDB9 -  -  -  -  decompress_frame_up_30:
  581 D1:CDB9 00 -  -  -  	.db 0
  582 D1:CDBA -  -  -  -  
  583 D1:CDBA -  -  -  -  decompress_frame_up_31:
  584 D1:CDBA 00 -  -  -  	.db 0
  585 D1:CDBB -  -  -  -  
  586 D1:CDBB -  -  -  -  decompress_frame_up_32:
  587 D1:CDBB 00 -  -  -  	.db 0
  588 D1:CDBC -  -  -  -  
  589 D1:CDBC -  -  -  -  decompress_frame_up_33:
  590 D1:CDBC 00 -  -  -  	.db 0
  591 D1:CDBD -  -  -  -  
  592 D1:CDBD -  -  -  -  decompress_frame_up_34:
  593 D1:CDBD 00 -  -  -  	.db 0
  594 D1:CDBE -  -  -  -  
  595 D1:CDBE -  -  -  -  decompress_frame_up_35:
  596 D1:CDBE 00 -  -  -  	.db 0
  597 D1:CDBF -  -  -  -  
  598 D1:CDBF -  -  -  -  decompress_frame_up_36:
  599 D1:CDBF 00 -  -  -  	.db 0
  600 D1:CDC0 -  -  -  -  
  601 D1:CDC0 -  -  -  -  decompress_frame_up_37:
  602 D1:CDC0 00 -  -  -  	.db 0
  603 D1:CDC1 -  -  -  -  
  604 D1:CDC1 -  -  -  -  decompress_frame_up_38:
  605 D1:CDC1 00 -  -  -  	.db 0
  606 D1:CDC2 -  -  -  -  
  607 D1:CDC2 -  -  -  -  decompress_frame_up_39:
  608 D1:CDC2 00 -  -  -  	.db 0
  609 D1:CDC3 -  -  -  -  
  610 D1:CDC3 -  -  -  -  decompress_frame_up_40:
  611 D1:CDC3 00 -  -  -  	.db 0
  612 D1:CDC4 -  -  -  -  
  613 D1:CDC4 -  -  -  -  decompress_frame_up_41:
  614 D1:CDC4 00 -  -  -  	.db 0
  615 D1:CDC5 -  -  -  -  
  616 D1:CDC5 -  -  -  -  decompress_frame_up_42:
  617 D1:CDC5 00 -  -  -  	.db 0
  618 D1:CDC6 -  -  -  -  
  619 D1:CDC6 -  -  -  -  decompress_frame_up_43:
  620 D1:CDC6 00 -  -  -  	.db 0
  621 D1:CDC7 -  -  -  -  
  622 D1:CDC7 -  -  -  -  decompress_frame_up_44:
  623 D1:CDC7 00 -  -  -  	.db 0
  624 D1:CDC8 -  -  -  -  
  625 D1:CDC8 -  -  -  -  decompress_frame_up_45:
  626 D1:CDC8 00 -  -  -  	.db 0
  627 D1:CDC9 -  -  -  -  
  628 D1:CDC9 -  -  -  -  decompress_frame_up_46:
  629 D1:CDC9 00 -  -  -  	.db 0
  630 D1:CDCA -  -  -  -  
  631 D1:CDCA -  -  -  -  decompress_frame_up_47:
  632 D1:CDCA 00 -  -  -  	.db 0
  633 D1:CDCB -  -  -  -  
  634 D1:CDCB -  -  -  -  decompress_frame_up_48:
  635 D1:CDCB 00 -  -  -  	.db 0
  636 D1:CDCC -  -  -  -  
  637 D1:CDCC -  -  -  -  decompress_frame_up_49:
  638 D1:CDCC 00 -  -  -  	.db 0
  639 D1:CDCD -  -  -  -  
  640 D1:CDCD -  -  -  -  decompress_frame_up_50:
  641 D1:CDCD 00 -  -  -  	.db 0
  642 D1:CDCE -  -  -  -  
  643 D1:CDCE -  -  -  -  decompress_frame_up_51:
  644 D1:CDCE 00 -  -  -  	.db 0
  645 D1:CDCF -  -  -  -  
  646 D1:CDCF -  -  -  -  decompress_frame_up_52:
  647 D1:CDCF 00 -  -  -  	.db 0
  648 D1:CDD0 -  -  -  -  
  649 D1:CDD0 -  -  -  -  decompress_frame_up_53:
  650 D1:CDD0 00 -  -  -  	.db 0
  651 D1:CDD1 -  -  -  -  
  652 D1:CDD1 -  -  -  -  decompress_frame_up_54:
  653 D1:CDD1 00 -  -  -  	.db 0
  654 D1:CDD2 -  -  -  -  
  655 D1:CDD2 -  -  -  -  decompress_frame_up_55:
  656 D1:CDD2 00 -  -  -  	.db 0
  657 D1:CDD3 -  -  -  -  
  658 D1:CDD3 -  -  -  -  decompress_frame_up_56:
  659 D1:CDD3 00 -  -  -  	.db 0
  660 D1:CDD4 -  -  -  -  
  661 D1:CDD4 -  -  -  -  decompress_frame_up_57:
  662 D1:CDD4 00 -  -  -  	.db 0
  663 D1:CDD5 -  -  -  -  
  664 D1:CDD5 -  -  -  -  decompress_frame_up_58:
  665 D1:CDD5 00 -  -  -  	.db 0
  666 D1:CDD6 -  -  -  -  
  667 D1:CDD6 -  -  -  -  decompress_frame_up_59:
  668 D1:CDD6 00 -  -  -  	.db 0
  669 D1:CDD7 -  -  -  -  
  670 D1:CDD7 -  -  -  -  decompress_frame_up_60:
  671 D1:CDD7 00 -  -  -  	.db 0
  672 D1:CDD8 -  -  -  -  
  673 D1:CDD8 -  -  -  -  decompress_frame_up_61:
  674 D1:CDD8 00 -  -  -  	.db 0
  675 D1:CDD9 -  -  -  -  
  676 D1:CDD9 -  -  -  -  decompress_frame_up_62:
  677 D1:CDD9 00 -  -  -  	.db 0
  678 D1:CDDA -  -  -  -  
  679 D1:CDDA -  -  -  -  decompress_frame_up_63:
  680 D1:CDDA 00 -  -  -  	.db 0
  681 D1:CDDB -  -  -  -  
  682 D1:CDDB -  -  -  -  decompress_frame_up_64:
  683 D1:CDDB 00 -  -  -  	.db 0
  684 D1:CDDC -  -  -  -  
  685 D1:CDDC -  -  -  -  decompress_frame_up_65:
  686 D1:CDDC 00 -  -  -  	.db 0
  687 D1:CDDD -  -  -  -  
  688 D1:CDDD -  -  -  -  decompress_frame_up_66:
  689 D1:CDDD 00 -  -  -  	.db 0
  690 D1:CDDE -  -  -  -  
  691 D1:CDDE -  -  -  -  decompress_frame_up_67:
  692 D1:CDDE 00 -  -  -  	.db 0
  693 D1:CDDF -  -  -  -  
  694 D1:CDDF -  -  -  -  decompress_frame_up_68:
  695 D1:CDDF 00 -  -  -  	.db 0
  696 D1:CDE0 -  -  -  -  
  697 D1:CDE0 -  -  -  -  decompress_frame_up_69:
  698 D1:CDE0 00 -  -  -  	.db 0
  699 D1:CDE1 -  -  -  -  
  700 D1:CDE1 -  -  -  -  decompress_frame_up_70:
  701 D1:CDE1 00 -  -  -  	.db 0
  702 D1:CDE2 -  -  -  -  
  703 D1:CDE2 -  -  -  -  decompress_frame_up_71:
  704 D1:CDE2 00 -  -  -  	.db 0
  705 D1:CDE3 -  -  -  -  
  706 D1:CDE3 -  -  -  -  decompress_frame_up_72:
  707 D1:CDE3 00 -  -  -  	.db 0
  708 D1:CDE4 -  -  -  -  
  709 D1:CDE4 -  -  -  -  decompress_frame_up_73:
  710 D1:CDE4 00 -  -  -  	.db 0
  711 D1:CDE5 -  -  -  -  
  712 D1:CDE5 -  -  -  -  decompress_frame_up_74:
  713 D1:CDE5 00 -  -  -  	.db 0
  714 D1:CDE6 -  -  -  -  
  715 D1:CDE6 -  -  -  -  decompress_frame_up_75:
  716 D1:CDE6 00 -  -  -  	.db 0
  717 D1:CDE7 -  -  -  -  
  718 D1:CDE7 -  -  -  -  decompress_frame_up_76:
  719 D1:CDE7 00 -  -  -  	.db 0
  720 D1:CDE8 -  -  -  -  
  721 D1:CDE8 -  -  -  -  decompress_frame_up_77:
  722 D1:CDE8 00 -  -  -  	.db 0
  723 D1:CDE9 -  -  -  -  
  724 D1:CDE9 -  -  -  -  decompress_frame_up_78:
  725 D1:CDE9 00 -  -  -  	.db 0
  726 D1:CDEA -  -  -  -  
  727 D1:CDEA -  -  -  -  decompress_frame_up_79:
  728 D1:CDEA 00 -  -  -  	.db 0
  729 D1:CDEB -  -  -  -  
  730 D1:CDEB -  -  -  -  decompress_frame_up_80:
  731 D1:CDEB 00 -  -  -  	.db 0
  732 D1:CDEC -  -  -  -  
  733 D1:CDEC -  -  -  -  decompress_frame_up_81:
  734 D1:CDEC 00 -  -  -  	.db 0
  735 D1:CDED -  -  -  -  
  736 D1:CDED -  -  -  -  decompress_frame_up_82:
  737 D1:CDED 00 -  -  -  	.db 0
  738 D1:CDEE -  -  -  -  
  739 D1:CDEE -  -  -  -  decompress_frame_up_83:
  740 D1:CDEE 00 -  -  -  	.db 0
  741 D1:CDEF -  -  -  -  
  742 D1:CDEF -  -  -  -  decompress_frame_up_84:
  743 D1:CDEF 00 -  -  -  	.db 0
  744 D1:CDF0 -  -  -  -  
  745 D1:CDF0 -  -  -  -  decompress_frame_up_85:
  746 D1:CDF0 00 -  -  -  	.db 0
  747 D1:CDF1 -  -  -  -  
  748 D1:CDF1 -  -  -  -  decompress_frame_up_86:
  749 D1:CDF1 00 -  -  -  	.db 0
  750 D1:CDF2 -  -  -  -  
  751 D1:CDF2 -  -  -  -  decompress_frame_up_87:
  752 D1:CDF2 00 -  -  -  	.db 0
  753 D1:CDF3 -  -  -  -  
  754 D1:CDF3 -  -  -  -  decompress_frame_up_88:
  755 D1:CDF3 00 -  -  -  	.db 0
  756 D1:CDF4 -  -  -  -  
  757 D1:CDF4 -  -  -  -  decompress_frame_up_89:
  758 D1:CDF4 00 -  -  -  	.db 0
  759 D1:CDF5 -  -  -  -  
  760 D1:CDF5 -  -  -  -  
  761 D1:CDF5 -  -  -  -  
  762 D1:CDF5 -  -  -  -  decompress_frame_down_0:
  763 D1:CDF5 00 -  -  -  	.db 0
  764 D1:CDF6 -  -  -  -  
  765 D1:CDF6 -  -  -  -  decompress_frame_down_1:
  766 D1:CDF6 00 -  -  -  	.db 0
  767 D1:CDF7 -  -  -  -  
  768 D1:CDF7 -  -  -  -  decompress_frame_down_2:
  769 D1:CDF7 00 -  -  -  	.db 0
  770 D1:CDF8 -  -  -  -  
  771 D1:CDF8 -  -  -  -  decompress_frame_down_3:
  772 D1:CDF8 00 -  -  -  	.db 0
  773 D1:CDF9 -  -  -  -  
  774 D1:CDF9 -  -  -  -  decompress_frame_down_4:
  775 D1:CDF9 09 -  -  -  	.db 9
  776 D1:CDFA 2B D5 D1 98 
              34 D4 -  -  	.dl GroundGrassL4, GroundGrassL4_Fast
  777 D1:CE00 80 -  -  -  	.db %10000000
  778 D1:CE01 4B D5 D1 22 
              35 D4 -  -  	.dl GroundGrassL2, GroundGrassL2_Fast
  779 D1:CE07 80 -  -  -  	.db %10000000
  780 D1:CE08 63 D5 D1 7A 
              35 D4 -  -  	.dl GroundGrassL5, GroundGrassL5_Fast
  781 D1:CE0E 80 -  -  -  	.db %10000000
  782 D1:CE0F 87 D5 D1 FC 
              35 D4 -  -  	.dl GroundGrassL3, GroundGrassL3_Fast
  783 D1:CE15 80 -  -  -  	.db %10000000
  784 D1:CE16 A4 D5 D1 56 
              36 D4 -  -  	.dl GroundGrassL1, GroundGrassL1_Fast
  785 D1:CE1C 80 -  -  -  	.db %10000000
  786 D1:CE1D A4 D5 D1 C8 
              36 D4 -  -  	.dl GroundGrassL1, GroundGrassL1_Fast_F
  787 D1:CE23 A0 -  -  -  	.db %10100000
  788 D1:CE24 87 D5 D1 3A 
              37 D4 -  -  	.dl GroundGrassL3, GroundGrassL3_Fast_F
  789 D1:CE2A A0 -  -  -  	.db %10100000
  790 D1:CE2B 38 DA D1 77 
              4D D4 -  -  	.dl Vines_9, Vines_9_Slow_O_F
  791 D1:CE31 60 -  -  -  	.db %01100000
  792 D1:CE32 64 D9 D1 53 
              50 D4 -  -  	.dl Vines_2, Vines_2_Slow_O_F
  793 D1:CE38 60 -  -  -  	.db %01100000
  794 D1:CE39 -  -  -  -  
  795 D1:CE39 -  -  -  -  decompress_frame_down_5:
  796 D1:CE39 00 -  -  -  	.db 0
  797 D1:CE3A -  -  -  -  
  798 D1:CE3A -  -  -  -  decompress_frame_down_6:
  799 D1:CE3A 01 -  -  -  	.db 1
  800 D1:CE3B B1 E1 D1 9B 
              26 D4 -  -  	.dl Vines_10, Vines_10_Slow_O
  801 D1:CE41 40 -  -  -  	.db %01000000
  802 D1:CE42 -  -  -  -  
  803 D1:CE42 -  -  -  -  decompress_frame_down_7:
  804 D1:CE42 00 -  -  -  	.db 0
  805 D1:CE43 -  -  -  -  
  806 D1:CE43 -  -  -  -  decompress_frame_down_8:
  807 D1:CE43 06 -  -  -  	.db 6
  808 D1:CE44 EB D9 D1 8F 
              4A D4 -  -  	.dl Vines_5, Vines_5_Slow
  809 D1:CE4A 00 -  -  -  	.db %00000000
  810 D1:CE4B 2A E1 D1 4C 
              24 D4 -  -  	.dl Branches_1, Branches_1_Fast_F
  811 D1:CE51 A0 -  -  -  	.db %10100000
  812 D1:CE52 B3 DB D1 E4 
              24 D4 -  -  	.dl Branches_2, Branches_2_Fast_F
  813 D1:CE58 A0 -  -  -  	.db %10100000
  814 D1:CE59 CC DA D1 8E 
              25 D4 -  -  	.dl Branches_5, Branches_5_Fast_F
  815 D1:CE5F A0 -  -  -  	.db %10100000
  816 D1:CE60 95 D8 D1 2F 
              26 D4 -  -  	.dl Branches_14, Branches_14_Slow
  817 D1:CE66 00 -  -  -  	.db %00000000
  818 D1:CE67 EE E1 D1 5A 
              27 D4 -  -  	.dl Branches_0, Branches_0_Fast
  819 D1:CE6D 80 -  -  -  	.db %10000000
  820 D1:CE6E -  -  -  -  
  821 D1:CE6E -  -  -  -  decompress_frame_down_9:
  822 D1:CE6E 00 -  -  -  	.db 0
  823 D1:CE6F -  -  -  -  
  824 D1:CE6F -  -  -  -  decompress_frame_down_10:
  825 D1:CE6F 11 -  -  -  	.db 17
  826 D1:CE70 45 D7 D1 EA 
              44 D4 -  -  	.dl Branches_7, Branches_7_Fast_F
  827 D1:CE76 A0 -  -  -  	.db %10100000
  828 D1:CE77 DF D7 D1 64 
              45 D4 -  -  	.dl Branches_12, Branches_12_Fast_F
  829 D1:CE7D A0 -  -  -  	.db %10100000
  830 D1:CE7E 36 D9 D1 3D 
              48 D4 -  -  	.dl Vines_8, Vines_8_Slow
  831 D1:CE84 00 -  -  -  	.db %00000000
  832 D1:CE85 CC DA D1 98 
              34 D4 -  -  	.dl Branches_5, Branches_5_Fast
  833 D1:CE8B 80 -  -  -  	.db %10000000
  834 D1:CE8C D8 D8 D1 38 
              35 D4 -  -  	.dl Branches_4, Branches_4_Fast
  835 D1:CE92 80 -  -  -  	.db %10000000
  836 D1:CE93 AE D7 D1 46 
              06 D4 -  -  	.dl Branches_8, Branches_8_Fast_F
  837 D1:CE99 A0 -  -  -  	.db %10100000
  838 D1:CE9A 85 E1 D1 6F 
              1E D4 -  -  	.dl Vines_7, Vines_7_Slow
  839 D1:CEA0 00 -  -  -  	.db %00000000
  840 D1:CEA1 EB D9 D1 2F 
              1F D4 -  -  	.dl Vines_5, Vines_5_Slow_O_F
  841 D1:CEA7 60 -  -  -  	.db %01100000
  842 D1:CEA8 AB D9 D1 1D 
              20 D4 -  -  	.dl Vines_3, Vines_3_Slow_O_F
  843 D1:CEAE 60 -  -  -  	.db %01100000
  844 D1:CEAF 6B DA D1 D3 
              20 D4 -  -  	.dl Vines_4, Vines_4_Slow_O
  845 D1:CEB5 40 -  -  -  	.db %01000000
  846 D1:CEB6 B1 E1 D1 85 
              21 D4 -  -  	.dl Vines_10, Vines_10_Slow
  847 D1:CEBC 00 -  -  -  	.db %00000000
  848 D1:CEBD 85 E1 D1 47 
              22 D4 -  -  	.dl Vines_7, Vines_7_Slow_F
  849 D1:CEC3 20 -  -  -  	.db %00100000
  850 D1:CEC4 64 D9 D1 07 
              23 D4 -  -  	.dl Vines_2, Vines_2_Slow
  851 D1:CECA 00 -  -  -  	.db %00000000
  852 D1:CECB 2A E1 D1 31 
              57 D4 -  -  	.dl Branches_1, Branches_1_Slow_O
  853 D1:CED1 40 -  -  -  	.db %01000000
  854 D1:CED2 D8 D8 D1 F7 
              57 D4 -  -  	.dl Branches_4, Branches_4_Slow_O
  855 D1:CED8 40 -  -  -  	.db %01000000
  856 D1:CED9 A5 D6 D1 C3 
              58 D4 -  -  	.dl Leaves_3, Leaves_3_Slow_O_F
  857 D1:CEDF 60 -  -  -  	.db %01100000
  858 D1:CEE0 85 E1 D1 31 
              59 D4 -  -  	.dl Vines_7, Vines_7_Slow_O
  859 D1:CEE6 40 -  -  -  	.db %01000000
  860 D1:CEE7 -  -  -  -  
  861 D1:CEE7 -  -  -  -  decompress_frame_down_11:
  862 D1:CEE7 15 -  -  -  	.db 21
  863 D1:CEE8 FB D6 D1 E9 
              3A D4 -  -  	.dl Branches_6, Branches_6_Slow
  864 D1:CEEE 00 -  -  -  	.db %00000000
  865 D1:CEEF C0 D5 D1 87 
              3B D4 -  -  	.dl Branches_10, Branches_10_Slow_O_F
  866 D1:CEF5 60 -  -  -  	.db %01100000
  867 D1:CEF6 8A D7 D1 3B 
              3D D4 -  -  	.dl Branches_15, Branches_15_Slow_O
  868 D1:CEFC 40 -  -  -  	.db %01000000
  869 D1:CEFD AE D7 D1 A7 
              3D D4 -  -  	.dl Branches_8, Branches_8_Slow_O_F
  870 D1:CF03 60 -  -  -  	.db %01100000
  871 D1:CF04 8A D7 D1 A9 
              3E D4 -  -  	.dl Branches_15, Branches_15_Slow_O_F
  872 D1:CF0A 60 -  -  -  	.db %01100000
  873 D1:CF0B 19 D8 D1 19 
              3F D4 -  -  	.dl Leaves_2, Leaves_2_Slow_O
  874 D1:CF11 40 -  -  -  	.db %01000000
  875 D1:CF12 32 D8 D1 83 
              3F D4 -  -  	.dl Leaves_4, Leaves_4_Slow
  876 D1:CF18 00 -  -  -  	.db %00000000
  877 D1:CF19 32 D8 D1 0D 
              40 D4 -  -  	.dl Leaves_4, Leaves_4_Slow_F
  878 D1:CF1F 20 -  -  -  	.db %00100000
  879 D1:CF20 D8 D8 D1 4C 
              44 D4 -  -  	.dl Branches_4, Branches_4_Fast_F
  880 D1:CF26 A0 -  -  -  	.db %10100000
  881 D1:CF27 C0 D5 D1 D6 
              46 D4 -  -  	.dl Branches_10, Branches_10_Fast
  882 D1:CF2D 80 -  -  -  	.db %10000000
  883 D1:CF2E B4 D8 D1 4D 
              47 D4 -  -  	.dl Leaves_6, Leaves_6_Slow_O
  884 D1:CF34 40 -  -  -  	.db %01000000
  885 D1:CF35 A5 D6 D1 D1 
              47 D4 -  -  	.dl Leaves_3, Leaves_3_Slow_F
  886 D1:CF3B 20 -  -  -  	.db %00100000
  887 D1:CF3C 64 D9 D1 07 
              49 D4 -  -  	.dl Vines_2, Vines_2_Slow_O
  888 D1:CF42 40 -  -  -  	.db %01000000
  889 D1:CF43 36 D9 D1 F5 
              59 D4 -  -  	.dl Vines_8, Vines_8_Slow_O
  890 D1:CF49 40 -  -  -  	.db %01000000
  891 D1:CF4A 36 D9 D1 BB 
              5A D4 -  -  	.dl Vines_8, Vines_8_Slow_O_F
  892 D1:CF50 60 -  -  -  	.db %01100000
  893 D1:CF51 2A DB D1 81 
              5B D4 -  -  	.dl Vines_6, Vines_6_Slow
  894 D1:CF57 00 -  -  -  	.db %00000000
  895 D1:CF58 53 DB D1 16 
              07 D4 -  -  	.dl Branches_3, Branches_3_Fast
  896 D1:CF5E 80 -  -  -  	.db %10000000
  897 D1:CF5F B3 DB D1 D6 
              35 D4 -  -  	.dl Branches_2, Branches_2_Fast
  898 D1:CF65 80 -  -  -  	.db %10000000
  899 D1:CF66 AB D9 D1 7F 
              36 D4 -  -  	.dl Vines_3, Vines_3_Slow_O
  900 D1:CF6C 40 -  -  -  	.db %01000000
  901 D1:CF6D 36 D9 D1 D9 
              4E D4 -  -  	.dl Vines_8, Vines_8_Slow_F
  902 D1:CF73 20 -  -  -  	.db %00100000
  903 D1:CF74 38 DA D1 27 
              09 D4 -  -  	.dl Vines_9, Vines_9_Slow_O
  904 D1:CF7A 40 -  -  -  	.db %01000000
  905 D1:CF7B -  -  -  -  
  906 D1:CF7B -  -  -  -  decompress_frame_down_12:
  907 D1:CF7B 25 -  -  -  	.db 37
  908 D1:CF7C C0 D5 D1 93 
              37 D4 -  -  	.dl Branches_10, Branches_10_Slow_O
  909 D1:CF82 40 -  -  -  	.db %01000000
  910 D1:CF83 0A D6 D1 38 
              38 D4 -  -  	.dl Branches_9, Branches_9_Fast
  911 D1:CF89 80 -  -  -  	.db %10000000
  912 D1:CF8A 5A D6 D1 BB 
              38 D4 -  -  	.dl Branches_16, Branches_16_Slow
  913 D1:CF90 00 -  -  -  	.db %00000000
  914 D1:CF91 87 D6 D1 27 
              39 D4 -  -  	.dl Branches_13, Branches_13_Slow_O
  915 D1:CF97 40 -  -  -  	.db %01000000
  916 D1:CF98 A5 D6 D1 6D 
              39 D4 -  -  	.dl Leaves_3, Leaves_3_Slow
  917 D1:CF9E 00 -  -  -  	.db %00000000
  918 D1:CF9F C4 D6 D1 DA 
              39 D4 -  -  	.dl Leaves_7, Leaves_7_Fast
  919 D1:CFA5 80 -  -  -  	.db %10000000
  920 D1:CFA6 C4 D6 D1 62 
              3A D4 -  -  	.dl Leaves_7, Leaves_7_Fast_F
  921 D1:CFAC A0 -  -  -  	.db %10100000
  922 D1:CFAD 45 D7 D1 2B 
              3C D4 -  -  	.dl Branches_7, Branches_7_Slow_O
  923 D1:CFB3 40 -  -  -  	.db %01000000
  924 D1:CFB4 5A D6 D1 CF 
              3C D4 -  -  	.dl Branches_16, Branches_16_Slow_O
  925 D1:CFBA 40 -  -  -  	.db %01000000
  926 D1:CFBB DF D7 D1 2F 
              3E D4 -  -  	.dl Branches_12, Branches_12_Slow_O
  927 D1:CFC1 40 -  -  -  	.db %01000000
  928 D1:CFC2 45 D7 D1 98 
              40 D4 -  -  	.dl Branches_7, Branches_7_Fast
  929 D1:CFC8 80 -  -  -  	.db %10000000
  930 D1:CFC9 AE D7 D1 12 
              41 D4 -  -  	.dl Branches_8, Branches_8_Fast
  931 D1:CFCF 80 -  -  -  	.db %10000000
  932 D1:CFD0 C0 D5 D1 70 
              41 D4 -  -  	.dl Branches_10, Branches_10_Fast_F
  933 D1:CFD6 A0 -  -  -  	.db %10100000
  934 D1:CFD7 57 D8 D1 E8 
              41 D4 -  -  	.dl Branches_11, Branches_11_Fast_F
  935 D1:CFDD A0 -  -  -  	.db %10100000
  936 D1:CFDE 5A D6 D1 4F 
              42 D4 -  -  	.dl Branches_16, Branches_16_Slow_O_F
  937 D1:CFE4 60 -  -  -  	.db %01100000
  938 D1:CFE5 87 D6 D1 BC 
              42 D4 -  -  	.dl Branches_13, Branches_13_Fast_F
  939 D1:CFEB A0 -  -  -  	.db %10100000
  940 D1:CFEC 95 D8 D1 ED 
              42 D4 -  -  	.dl Branches_14, Branches_14_Slow_O
  941 D1:CFF2 40 -  -  -  	.db %01000000
  942 D1:CFF3 8A D7 D1 5D 
              43 D4 -  -  	.dl Branches_15, Branches_15_Slow_F
  943 D1:CFF9 20 -  -  -  	.db %00100000
  944 D1:CFFA B4 D8 D1 C9 
              43 D4 -  -  	.dl Leaves_6, Leaves_6_Slow
  945 D1:D000 00 -  -  -  	.db %00000000
  946 D1:D001 32 D8 D1 BF 
              45 D4 -  -  	.dl Leaves_4, Leaves_4_Slow_O
  947 D1:D007 40 -  -  -  	.db %01000000
  948 D1:D008 AE D7 D1 4D 
              46 D4 -  -  	.dl Branches_8, Branches_8_Slow_O
  949 D1:D00E 40 -  -  -  	.db %01000000
  950 D1:D00F AB D9 D1 DF 
              49 D4 -  -  	.dl Vines_3, Vines_3_Slow
  951 D1:D015 00 -  -  -  	.db %00000000
  952 D1:D016 38 DA D1 81 
              4B D4 -  -  	.dl Vines_9, Vines_9_Slow
  953 D1:D01C 00 -  -  -  	.db %00000000
  954 D1:D01D 6B DA D1 33 
              4C D4 -  -  	.dl Vines_4, Vines_4_Slow_F
  955 D1:D023 20 -  -  -  	.db %00100000
  956 D1:D024 A2 DA D1 EB 
              4C D4 -  -  	.dl Vines_1, Vines_1_Slow_O
  957 D1:D02A 40 -  -  -  	.db %01000000
  958 D1:D02B AB D9 D1 29 
              4E D4 -  -  	.dl Vines_3, Vines_3_Slow_F
  959 D1:D031 20 -  -  -  	.db %00100000
  960 D1:D032 8A D7 D1 A5 
              06 D4 -  -  	.dl Branches_15, Branches_15_Slow
  961 D1:D038 00 -  -  -  	.db %00000000
  962 D1:D039 64 D9 D1 BD 
              07 D4 -  -  	.dl Vines_2, Vines_2_Slow_F
  963 D1:D03F 20 -  -  -  	.db %00100000
  964 D1:D040 A2 DA D1 97 
              08 D4 -  -  	.dl Vines_1, Vines_1_Slow
  965 D1:D046 00 -  -  -  	.db %00000000
  966 D1:D047 0A D6 D1 A3 
              4F D4 -  -  	.dl Branches_9, Branches_9_Slow_O
  967 D1:D04D 40 -  -  -  	.db %01000000
  968 D1:D04E 2A E1 D1 E0 
              1A D4 -  -  	.dl Branches_1, Branches_1_Fast
  969 D1:D054 80 -  -  -  	.db %10000000
  970 D1:D055 B3 DB D1 79 
              1B D4 -  -  	.dl Branches_2, Branches_2_Slow_O
  971 D1:D05B 40 -  -  -  	.db %01000000
  972 D1:D05C 53 DB D1 59 
              1C D4 -  -  	.dl Branches_3, Branches_3_Slow_O
  973 D1:D062 40 -  -  -  	.db %01000000
  974 D1:D063 CC DA D1 33 
              1D D4 -  -  	.dl Branches_5, Branches_5_Slow_O
  975 D1:D069 40 -  -  -  	.db %01000000
  976 D1:D06A A5 D6 D1 03 
              1E D4 -  -  	.dl Leaves_3, Leaves_3_Slow_O
  977 D1:D070 40 -  -  -  	.db %01000000
  978 D1:D071 EE E1 D1 38 
              5C D4 -  -  	.dl Branches_0, Branches_0_Fast_F
  979 D1:D077 A0 -  -  -  	.db %10100000
  980 D1:D078 0A D6 D1 D0 
              5C D4 -  -  	.dl Branches_9, Branches_9_Fast_F
  981 D1:D07E A0 -  -  -  	.db %10100000
  982 D1:D07F -  -  -  -  
  983 D1:D07F -  -  -  -  decompress_frame_down_13:
  984 D1:D07F 00 -  -  -  	.db 0
  985 D1:D080 -  -  -  -  
  986 D1:D080 -  -  -  -  decompress_frame_down_14:
  987 D1:D080 17 -  -  -  	.db 23
  988 D1:D081 13 DC D1 2C 
              51 D4 -  -  	.dl Tree_2, Tree_2_Fast
  989 D1:D087 80 -  -  -  	.db %10000000
  990 D1:D088 7E DC D1 28 
              52 D4 -  -  	.dl Tree_4, Tree_4_Fast
  991 D1:D08E 80 -  -  -  	.db %10000000
  992 D1:D08F EB DC D1 2A 
              53 D4 -  -  	.dl Tree_7, Tree_7_Fast
  993 D1:D095 80 -  -  -  	.db %10000000
  994 D1:D096 58 DD D1 2C 
              54 D4 -  -  	.dl Tree_9, Tree_9_Fast
  995 D1:D09C 80 -  -  -  	.db %10000000
  996 D1:D09D C5 DD D1 2E 
              55 D4 -  -  	.dl Tree_6, Tree_6_Fast_F
  997 D1:D0A3 A0 -  -  -  	.db %10100000
  998 D1:D0A4 32 DE D1 30 
              56 D4 -  -  	.dl Tree_3, Tree_3_Fast_F
  999 D1:D0AA A0 -  -  -  	.db %10100000
 1000 D1:D0AB 9F DE D1 D8 
              09 D4 -  -  	.dl Tree_0, Tree_0_Fast_F
 1001 D1:D0B1 A0 -  -  -  	.db %10100000
 1002 D1:D0B2 32 DE D1 D4 
              0A D4 -  -  	.dl Tree_3, Tree_3_Fast
 1003 D1:D0B8 80 -  -  -  	.db %10000000
 1004 D1:D0B9 0A DF D1 D6 
              0B D4 -  -  	.dl Tree_8, Tree_8_Fast
 1005 D1:D0BF 80 -  -  -  	.db %10000000
 1006 D1:D0C0 58 DD D1 D8 
              0C D4 -  -  	.dl Tree_9, Tree_9_Fast_F
 1007 D1:D0C6 A0 -  -  -  	.db %10100000
 1008 D1:D0C7 0A DF D1 DA 
              0D D4 -  -  	.dl Tree_8, Tree_8_Fast_F
 1009 D1:D0CD A0 -  -  -  	.db %10100000
 1010 D1:D0CE 7E DC D1 DC 
              0E D4 -  -  	.dl Tree_4, Tree_4_Fast_F
 1011 D1:D0D4 A0 -  -  -  	.db %10100000
 1012 D1:D0D5 9F DE D1 DE 
              0F D4 -  -  	.dl Tree_0, Tree_0_Fast
 1013 D1:D0DB 80 -  -  -  	.db %10000000
 1014 D1:D0DC C5 DD D1 DA 
              10 D4 -  -  	.dl Tree_6, Tree_6_Fast
 1015 D1:D0E2 80 -  -  -  	.db %10000000
 1016 D1:D0E3 77 DF D1 DC 
              11 D4 -  -  	.dl Tree_10, Tree_10_Fast
 1017 D1:D0E9 80 -  -  -  	.db %10000000
 1018 D1:D0EA EB DC D1 DE 
              12 D4 -  -  	.dl Tree_7, Tree_7_Fast_F
 1019 D1:D0F0 A0 -  -  -  	.db %10100000
 1020 D1:D0F1 E4 DF D1 E0 
              13 D4 -  -  	.dl Tree_1, Tree_1_Fast_F
 1021 D1:D0F7 A0 -  -  -  	.db %10100000
 1022 D1:D0F8 E4 DF D1 DE 
              14 D4 -  -  	.dl Tree_1, Tree_1_Fast
 1023 D1:D0FE 80 -  -  -  	.db %10000000
 1024 D1:D0FF 50 E0 D1 DC 
              15 D4 -  -  	.dl Tree_5, Tree_5_Fast
 1025 D1:D105 80 -  -  -  	.db %10000000
 1026 D1:D106 BD E0 D1 DE 
              16 D4 -  -  	.dl Tree_11, Tree_11_Fast
 1027 D1:D10C 80 -  -  -  	.db %10000000
 1028 D1:D10D 50 E0 D1 E0 
              17 D4 -  -  	.dl Tree_5, Tree_5_Fast_F
 1029 D1:D113 A0 -  -  -  	.db %10100000
 1030 D1:D114 13 DC D1 E2 
              18 D4 -  -  	.dl Tree_2, Tree_2_Fast_F
 1031 D1:D11A A0 -  -  -  	.db %10100000
 1032 D1:D11B BD E0 D1 DE 
              19 D4 -  -  	.dl Tree_11, Tree_11_Fast_F
 1033 D1:D121 A0 -  -  -  	.db %10100000
 1034 D1:D122 -  -  -  -  
 1035 D1:D122 -  -  -  -  decompress_frame_down_15:
 1036 D1:D122 00 -  -  -  	.db 0
 1037 D1:D123 -  -  -  -  
 1038 D1:D123 -  -  -  -  decompress_frame_down_16:
 1039 D1:D123 16 -  -  -  	.db 22
 1040 D1:D124 9C D4 D1 34 
              32 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast
 1041 D1:D12A 80 -  -  -  	.db %10000000
 1042 D1:D12B 9C D4 D1 E6 
              32 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast_F
 1043 D1:D131 A0 -  -  -  	.db %10100000
 1044 D1:D132 E1 D4 D1 98 
              33 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast
 1045 D1:D138 80 -  -  -  	.db %10000000
 1046 D1:D139 E1 D4 D1 18 
              34 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast_F
 1047 D1:D13F A0 -  -  -  	.db %10100000
 1048 D1:D140 19 D8 D1 E3 
              23 D4 -  -  	.dl Leaves_2, Leaves_2_Slow
 1049 D1:D146 00 -  -  -  	.db %00000000
 1050 D1:D147 6A E2 D1 A4 
              28 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast
 1051 D1:D14D 80 -  -  -  	.db %10000000
 1052 D1:D14E 6A E2 D1 2A 
              29 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast_F
 1053 D1:D154 A0 -  -  -  	.db %10100000
 1054 D1:D155 9F E2 D1 B0 
              29 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast
 1055 D1:D15B 80 -  -  -  	.db %10000000
 1056 D1:D15C 9F E2 D1 36 
              2A D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast_F
 1057 D1:D162 A0 -  -  -  	.db %10100000
 1058 D1:D163 ED E2 D1 BC 
              2A D4 -  -  	.dl GroundGrassSmall, GroundGrassSmall_Fast
 1059 D1:D169 80 -  -  -  	.db %10000000
 1060 D1:D16A ED E2 D1 64 
              2B D4 -  -  	.dl GroundGrassSmall, GroundGrassSmall_Fast_F
 1061 D1:D170 A0 -  -  -  	.db %10100000
 1062 D1:D171 0F E3 D1 0C 
              2C D4 -  -  	.dl Tree_16, Tree_16_Fast
 1063 D1:D177 80 -  -  -  	.db %10000000
 1064 D1:D178 27 E3 D1 61 
              2C D4 -  -  	.dl Tree_17, Tree_17_Slow_O
 1065 D1:D17E 40 -  -  -  	.db %01000000
 1066 D1:D17F 27 E3 D1 C9 
              2C D4 -  -  	.dl Tree_17, Tree_17_Slow_O_F
 1067 D1:D185 60 -  -  -  	.db %01100000
 1068 D1:D186 38 E3 D1 2E 
              2D D4 -  -  	.dl Leaves_8, Leaves_8_Fast
 1069 D1:D18C 80 -  -  -  	.db %10000000
 1070 D1:D18D 0F E3 D1 B5 
              2D D4 -  -  	.dl Tree_16, Tree_16_Slow_O
 1071 D1:D193 40 -  -  -  	.db %01000000
 1072 D1:D194 27 E3 D1 3B 
              2E D4 -  -  	.dl Tree_17, Tree_17_Slow_F
 1073 D1:D19A 20 -  -  -  	.db %00100000
 1074 D1:D19B 6F E3 D1 A3 
              2E D4 -  -  	.dl Tree_18, Tree_18_Slow_O
 1075 D1:D1A1 40 -  -  -  	.db %01000000
 1076 D1:D1A2 27 E3 D1 07 
              2F D4 -  -  	.dl Tree_17, Tree_17_Slow
 1077 D1:D1A8 00 -  -  -  	.db %00000000
 1078 D1:D1A9 6F E3 D1 6D 
              2F D4 -  -  	.dl Tree_18, Tree_18_Slow_F
 1079 D1:D1AF 20 -  -  -  	.db %00100000
 1080 D1:D1B0 0F E3 D1 D1 
              2F D4 -  -  	.dl Tree_16, Tree_16_Slow_O_F
 1081 D1:D1B6 60 -  -  -  	.db %01100000
 1082 D1:D1B7 19 D8 D1 57 
              30 D4 -  -  	.dl Leaves_2, Leaves_2_Slow_F
 1083 D1:D1BD 20 -  -  -  	.db %00100000
 1084 D1:D1BE -  -  -  -  
 1085 D1:D1BE -  -  -  -  decompress_frame_down_17:
 1086 D1:D1BE 00 -  -  -  	.db 0
 1087 D1:D1BF -  -  -  -  
 1088 D1:D1BF -  -  -  -  decompress_frame_down_18:
 1089 D1:D1BF 00 -  -  -  	.db 0
 1090 D1:D1C0 -  -  -  -  
 1091 D1:D1C0 -  -  -  -  decompress_frame_down_19:
 1092 D1:D1C0 00 -  -  -  	.db 0
 1093 D1:D1C1 -  -  -  -  
 1094 D1:D1C1 -  -  -  -  decompress_frame_down_20:
 1095 D1:D1C1 00 -  -  -  	.db 0
 1096 D1:D1C2 -  -  -  -  
 1097 D1:D1C2 -  -  -  -  decompress_frame_down_21:
 1098 D1:D1C2 00 -  -  -  	.db 0
 1099 D1:D1C3 -  -  -  -  
 1100 D1:D1C3 -  -  -  -  decompress_frame_down_22:
 1101 D1:D1C3 00 -  -  -  	.db 0
 1102 D1:D1C4 -  -  -  -  
 1103 D1:D1C4 -  -  -  -  decompress_frame_down_23:
 1104 D1:D1C4 00 -  -  -  	.db 0
 1105 D1:D1C5 -  -  -  -  
 1106 D1:D1C5 -  -  -  -  decompress_frame_down_24:
 1107 D1:D1C5 0A -  -  -  	.db 10
 1108 D1:D1C6 46 E2 D1 F2 
              27 D4 -  -  	.dl Clouds_2, Clouds_2_Fast
 1109 D1:D1CC 80 -  -  -  	.db %10000000
 1110 D1:D1CD 80 E3 D1 BE 
              30 D4 -  -  	.dl Clouds_0, Clouds_0_Fast
 1111 D1:D1D3 80 -  -  -  	.db %10000000
 1112 D1:D1D4 A9 E3 D1 24 
              31 D4 -  -  	.dl Clouds_1, Clouds_1_Fast
 1113 D1:D1DA 80 -  -  -  	.db %10000000
 1114 D1:D1DB D0 E3 D1 88 
              31 D4 -  -  	.dl Clouds_3, Clouds_3_Fast
 1115 D1:D1E1 80 -  -  -  	.db %10000000
 1116 D1:D1E2 FC E3 D1 F4 
              31 D4 -  -  	.dl Clouds_4, Clouds_4_Fast
 1117 D1:D1E8 80 -  -  -  	.db %10000000
 1118 D1:D1E9 80 E3 D1 C0 
              01 D4 -  -  	.dl Clouds_0, Clouds_0_Fast_F
 1119 D1:D1EF A0 -  -  -  	.db %10100000
 1120 D1:D1F0 A9 E3 D1 26 
              02 D4 -  -  	.dl Clouds_1, Clouds_1_Fast_F
 1121 D1:D1F6 A0 -  -  -  	.db %10100000
 1122 D1:D1F7 FC E3 D1 8A 
              02 D4 -  -  	.dl Clouds_4, Clouds_4_Fast_F
 1123 D1:D1FD A0 -  -  -  	.db %10100000
 1124 D1:D1FE D0 E3 D1 CA 
              02 D4 -  -  	.dl Clouds_3, Clouds_3_Fast_F
 1125 D1:D204 A0 -  -  -  	.db %10100000
 1126 D1:D205 46 E2 D1 36 
              03 D4 -  -  	.dl Clouds_2, Clouds_2_Fast_F
 1127 D1:D20B A0 -  -  -  	.db %10100000
 1128 D1:D20C -  -  -  -  
 1129 D1:D20C -  -  -  -  decompress_frame_down_25:
 1130 D1:D20C 00 -  -  -  	.db 0
 1131 D1:D20D -  -  -  -  
 1132 D1:D20D -  -  -  -  decompress_frame_down_26:
 1133 D1:D20D 00 -  -  -  	.db 0
 1134 D1:D20E -  -  -  -  
 1135 D1:D20E -  -  -  -  decompress_frame_down_27:
 1136 D1:D20E 00 -  -  -  	.db 0
 1137 D1:D20F -  -  -  -  
 1138 D1:D20F -  -  -  -  decompress_frame_down_28:
 1139 D1:D20F 00 -  -  -  	.db 0
 1140 D1:D210 -  -  -  -  
 1141 D1:D210 -  -  -  -  decompress_frame_down_29:
 1142 D1:D210 00 -  -  -  	.db 0
 1143 D1:D211 -  -  -  -  
 1144 D1:D211 -  -  -  -  decompress_frame_down_30:
 1145 D1:D211 00 -  -  -  	.db 0
 1146 D1:D212 -  -  -  -  
 1147 D1:D212 -  -  -  -  decompress_frame_down_31:
 1148 D1:D212 00 -  -  -  	.db 0
 1149 D1:D213 -  -  -  -  
 1150 D1:D213 -  -  -  -  decompress_frame_down_32:
 1151 D1:D213 00 -  -  -  	.db 0
 1152 D1:D214 -  -  -  -  
 1153 D1:D214 -  -  -  -  decompress_frame_down_33:
 1154 D1:D214 00 -  -  -  	.db 0
 1155 D1:D215 -  -  -  -  
 1156 D1:D215 -  -  -  -  decompress_frame_down_34:
 1157 D1:D215 00 -  -  -  	.db 0
 1158 D1:D216 -  -  -  -  
 1159 D1:D216 -  -  -  -  decompress_frame_down_35:
 1160 D1:D216 00 -  -  -  	.db 0
 1161 D1:D217 -  -  -  -  
 1162 D1:D217 -  -  -  -  decompress_frame_down_36:
 1163 D1:D217 00 -  -  -  	.db 0
 1164 D1:D218 -  -  -  -  
 1165 D1:D218 -  -  -  -  decompress_frame_down_37:
 1166 D1:D218 00 -  -  -  	.db 0
 1167 D1:D219 -  -  -  -  
 1168 D1:D219 -  -  -  -  decompress_frame_down_38:
 1169 D1:D219 00 -  -  -  	.db 0
 1170 D1:D21A -  -  -  -  
 1171 D1:D21A -  -  -  -  decompress_frame_down_39:
 1172 D1:D21A 00 -  -  -  	.db 0
 1173 D1:D21B -  -  -  -  
 1174 D1:D21B -  -  -  -  decompress_frame_down_40:
 1175 D1:D21B 00 -  -  -  	.db 0
 1176 D1:D21C -  -  -  -  
 1177 D1:D21C -  -  -  -  decompress_frame_down_41:
 1178 D1:D21C 00 -  -  -  	.db 0
 1179 D1:D21D -  -  -  -  
 1180 D1:D21D -  -  -  -  decompress_frame_down_42:
 1181 D1:D21D 00 -  -  -  	.db 0
 1182 D1:D21E -  -  -  -  
 1183 D1:D21E -  -  -  -  decompress_frame_down_43:
 1184 D1:D21E 00 -  -  -  	.db 0
 1185 D1:D21F -  -  -  -  
 1186 D1:D21F -  -  -  -  decompress_frame_down_44:
 1187 D1:D21F 00 -  -  -  	.db 0
 1188 D1:D220 -  -  -  -  
 1189 D1:D220 -  -  -  -  decompress_frame_down_45:
 1190 D1:D220 00 -  -  -  	.db 0
 1191 D1:D221 -  -  -  -  
 1192 D1:D221 -  -  -  -  decompress_frame_down_46:
 1193 D1:D221 00 -  -  -  	.db 0
 1194 D1:D222 -  -  -  -  
 1195 D1:D222 -  -  -  -  decompress_frame_down_47:
 1196 D1:D222 00 -  -  -  	.db 0
 1197 D1:D223 -  -  -  -  
 1198 D1:D223 -  -  -  -  decompress_frame_down_48:
 1199 D1:D223 00 -  -  -  	.db 0
 1200 D1:D224 -  -  -  -  
 1201 D1:D224 -  -  -  -  decompress_frame_down_49:
 1202 D1:D224 00 -  -  -  	.db 0
 1203 D1:D225 -  -  -  -  
 1204 D1:D225 -  -  -  -  decompress_frame_down_50:
 1205 D1:D225 00 -  -  -  	.db 0
 1206 D1:D226 -  -  -  -  
 1207 D1:D226 -  -  -  -  decompress_frame_down_51:
 1208 D1:D226 00 -  -  -  	.db 0
 1209 D1:D227 -  -  -  -  
 1210 D1:D227 -  -  -  -  decompress_frame_down_52:
 1211 D1:D227 00 -  -  -  	.db 0
 1212 D1:D228 -  -  -  -  
 1213 D1:D228 -  -  -  -  decompress_frame_down_53:
 1214 D1:D228 00 -  -  -  	.db 0
 1215 D1:D229 -  -  -  -  
 1216 D1:D229 -  -  -  -  decompress_frame_down_54:
 1217 D1:D229 00 -  -  -  	.db 0
 1218 D1:D22A -  -  -  -  
 1219 D1:D22A -  -  -  -  decompress_frame_down_55:
 1220 D1:D22A 00 -  -  -  	.db 0
 1221 D1:D22B -  -  -  -  
 1222 D1:D22B -  -  -  -  decompress_frame_down_56:
 1223 D1:D22B 00 -  -  -  	.db 0
 1224 D1:D22C -  -  -  -  
 1225 D1:D22C -  -  -  -  decompress_frame_down_57:
 1226 D1:D22C 00 -  -  -  	.db 0
 1227 D1:D22D -  -  -  -  
 1228 D1:D22D -  -  -  -  decompress_frame_down_58:
 1229 D1:D22D 00 -  -  -  	.db 0
 1230 D1:D22E -  -  -  -  
 1231 D1:D22E -  -  -  -  decompress_frame_down_59:
 1232 D1:D22E 00 -  -  -  	.db 0
 1233 D1:D22F -  -  -  -  
 1234 D1:D22F -  -  -  -  decompress_frame_down_60:
 1235 D1:D22F 00 -  -  -  	.db 0
 1236 D1:D230 -  -  -  -  
 1237 D1:D230 -  -  -  -  decompress_frame_down_61:
 1238 D1:D230 00 -  -  -  	.db 0
 1239 D1:D231 -  -  -  -  
 1240 D1:D231 -  -  -  -  decompress_frame_down_62:
 1241 D1:D231 00 -  -  -  	.db 0
 1242 D1:D232 -  -  -  -  
 1243 D1:D232 -  -  -  -  decompress_frame_down_63:
 1244 D1:D232 00 -  -  -  	.db 0
 1245 D1:D233 -  -  -  -  
 1246 D1:D233 -  -  -  -  decompress_frame_down_64:
 1247 D1:D233 00 -  -  -  	.db 0
 1248 D1:D234 -  -  -  -  
 1249 D1:D234 -  -  -  -  decompress_frame_down_65:
 1250 D1:D234 00 -  -  -  	.db 0
 1251 D1:D235 -  -  -  -  
 1252 D1:D235 -  -  -  -  decompress_frame_down_66:
 1253 D1:D235 00 -  -  -  	.db 0
 1254 D1:D236 -  -  -  -  
 1255 D1:D236 -  -  -  -  decompress_frame_down_67:
 1256 D1:D236 00 -  -  -  	.db 0
 1257 D1:D237 -  -  -  -  
 1258 D1:D237 -  -  -  -  decompress_frame_down_68:
 1259 D1:D237 00 -  -  -  	.db 0
 1260 D1:D238 -  -  -  -  
 1261 D1:D238 -  -  -  -  decompress_frame_down_69:
 1262 D1:D238 00 -  -  -  	.db 0
 1263 D1:D239 -  -  -  -  
 1264 D1:D239 -  -  -  -  decompress_frame_down_70:
 1265 D1:D239 00 -  -  -  	.db 0
 1266 D1:D23A -  -  -  -  
 1267 D1:D23A -  -  -  -  decompress_frame_down_71:
 1268 D1:D23A 00 -  -  -  	.db 0
 1269 D1:D23B -  -  -  -  
 1270 D1:D23B -  -  -  -  decompress_frame_down_72:
 1271 D1:D23B 00 -  -  -  	.db 0
 1272 D1:D23C -  -  -  -  
 1273 D1:D23C -  -  -  -  decompress_frame_down_73:
 1274 D1:D23C 00 -  -  -  	.db 0
 1275 D1:D23D -  -  -  -  
 1276 D1:D23D -  -  -  -  decompress_frame_down_74:
 1277 D1:D23D 00 -  -  -  	.db 0
 1278 D1:D23E -  -  -  -  
 1279 D1:D23E -  -  -  -  decompress_frame_down_75:
 1280 D1:D23E 00 -  -  -  	.db 0
 1281 D1:D23F -  -  -  -  
 1282 D1:D23F -  -  -  -  decompress_frame_down_76:
 1283 D1:D23F 00 -  -  -  	.db 0
 1284 D1:D240 -  -  -  -  
 1285 D1:D240 -  -  -  -  decompress_frame_down_77:
 1286 D1:D240 00 -  -  -  	.db 0
 1287 D1:D241 -  -  -  -  
 1288 D1:D241 -  -  -  -  decompress_frame_down_78:
 1289 D1:D241 00 -  -  -  	.db 0
 1290 D1:D242 -  -  -  -  
 1291 D1:D242 -  -  -  -  decompress_frame_down_79:
 1292 D1:D242 00 -  -  -  	.db 0
 1293 D1:D243 -  -  -  -  
 1294 D1:D243 -  -  -  -  decompress_frame_down_80:
 1295 D1:D243 00 -  -  -  	.db 0
 1296 D1:D244 -  -  -  -  
 1297 D1:D244 -  -  -  -  decompress_frame_down_81:
 1298 D1:D244 00 -  -  -  	.db 0
 1299 D1:D245 -  -  -  -  
 1300 D1:D245 -  -  -  -  decompress_frame_down_82:
 1301 D1:D245 00 -  -  -  	.db 0
 1302 D1:D246 -  -  -  -  
 1303 D1:D246 -  -  -  -  decompress_frame_down_83:
 1304 D1:D246 00 -  -  -  	.db 0
 1305 D1:D247 -  -  -  -  
 1306 D1:D247 -  -  -  -  decompress_frame_down_84:
 1307 D1:D247 00 -  -  -  	.db 0
 1308 D1:D248 -  -  -  -  
 1309 D1:D248 -  -  -  -  decompress_frame_down_85:
 1310 D1:D248 00 -  -  -  	.db 0
 1311 D1:D249 -  -  -  -  
 1312 D1:D249 -  -  -  -  decompress_frame_down_86:
 1313 D1:D249 00 -  -  -  	.db 0
 1314 D1:D24A -  -  -  -  
 1315 D1:D24A -  -  -  -  decompress_frame_down_87:
 1316 D1:D24A 00 -  -  -  	.db 0
 1317 D1:D24B -  -  -  -  
 1318 D1:D24B -  -  -  -  decompress_frame_down_88:
 1319 D1:D24B 00 -  -  -  	.db 0
 1320 D1:D24C -  -  -  -  
 1321 D1:D24C -  -  -  -  decompress_frame_down_89:
 1322 D1:D24C 02 -  -  -  	.db 2
 1323 D1:D24D 13 E4 D1 E7 
              03 D4 -  -  	.dl Frog_0, Frog_0_Slow
 1324 D1:D253 00 -  -  -  	.db %00000000
 1325 D1:D254 13 E4 D1 17 
              05 D4 -  -  	.dl Frog_0, Frog_0_Slow_O
 1326 D1:D25A 40 -  -  -  	.db %01000000
Listing for file "ascent.asm"
  568 D1:D25B -  -  -  -  #include "generated/Palette_Setup.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Palette_Setup.txt"
    1 D1:D25B -  -  -  -  setup_palette_1:
    2 D1:D25B 21 00 02 E3 	ld hl,mpLcdPalette
    3 D1:D25F 3E C2 -  -  	ld a,%11000010
    4 D1:D261 77 -  -  -  	ld (hl),a 
    5 D1:D262 23 -  -  -  	inc hl
    6 D1:D263 3E 20 -  -  	ld a,%00100000
    7 D1:D265 77 -  -  -  	ld (hl),a 
    8 D1:D266 23 -  -  -  	inc hl
    9 D1:D267 3E 24 -  -  	ld a,%00100100
   10 D1:D269 77 -  -  -  	ld (hl),a 
   11 D1:D26A 23 -  -  -  	inc hl
   12 D1:D26B 3E 39 -  -  	ld a,%00111001
   13 D1:D26D 77 -  -  -  	ld (hl),a 
   14 D1:D26E 23 -  -  -  	inc hl
   15 D1:D26F 3E 85 -  -  	ld a,%10000101
   16 D1:D271 77 -  -  -  	ld (hl),a 
   17 D1:D272 23 -  -  -  	inc hl
   18 D1:D273 3E 4D -  -  	ld a,%01001101
   19 D1:D275 77 -  -  -  	ld (hl),a 
   20 D1:D276 23 -  -  -  	inc hl
   21 D1:D277 3E E6 -  -  	ld a,%11100110
   22 D1:D279 77 -  -  -  	ld (hl),a 
   23 D1:D27A 23 -  -  -  	inc hl
   24 D1:D27B 3E E1 -  -  	ld a,%11100001
   25 D1:D27D 77 -  -  -  	ld (hl),a 
   26 D1:D27E 23 -  -  -  	inc hl
   27 D1:D27F 3E 2A -  -  	ld a,%00101010
   28 D1:D281 77 -  -  -  	ld (hl),a 
   29 D1:D282 23 -  -  -  	inc hl
   30 D1:D283 3E 2E -  -  	ld a,%00101110
   31 D1:D285 77 -  -  -  	ld (hl),a 
   32 D1:D286 23 -  -  -  	inc hl
   33 D1:D287 3E 65 -  -  	ld a,%01100101
   34 D1:D289 77 -  -  -  	ld (hl),a 
   35 D1:D28A 23 -  -  -  	inc hl
   36 D1:D28B 3E 95 -  -  	ld a,%10010101
   37 D1:D28D 77 -  -  -  	ld (hl),a 
   38 D1:D28E 23 -  -  -  	inc hl
   39 D1:D28F 3E FE -  -  	ld a,%11111110
   40 D1:D291 77 -  -  -  	ld (hl),a 
   41 D1:D292 23 -  -  -  	inc hl
   42 D1:D293 3E 73 -  -  	ld a,%01110011
   43 D1:D295 77 -  -  -  	ld (hl),a 
   44 D1:D296 23 -  -  -  	inc hl
   45 D1:D297 3E BC -  -  	ld a,%10111100
   46 D1:D299 77 -  -  -  	ld (hl),a 
   47 D1:D29A 23 -  -  -  	inc hl
   48 D1:D29B 3E 5B -  -  	ld a,%01011011
   49 D1:D29D 77 -  -  -  	ld (hl),a 
   50 D1:D29E 23 -  -  -  	inc hl
   51 D1:D29F 3E 8E -  -  	ld a,%10001110
   52 D1:D2A1 77 -  -  -  	ld (hl),a 
   53 D1:D2A2 23 -  -  -  	inc hl
   54 D1:D2A3 3E 4F -  -  	ld a,%01001111
   55 D1:D2A5 77 -  -  -  	ld (hl),a 
   56 D1:D2A6 23 -  -  -  	inc hl
   57 D1:D2A7 3E 20 -  -  	ld a,%00100000
   58 D1:D2A9 77 -  -  -  	ld (hl),a 
   59 D1:D2AA 23 -  -  -  	inc hl
   60 D1:D2AB 3E 80 -  -  	ld a,%10000000
   61 D1:D2AD 77 -  -  -  	ld (hl),a 
   62 D1:D2AE 23 -  -  -  	inc hl
   63 D1:D2AF 3E 1F -  -  	ld a,%00011111
   64 D1:D2B1 77 -  -  -  	ld (hl),a 
   65 D1:D2B2 23 -  -  -  	inc hl
   66 D1:D2B3 3E 81 -  -  	ld a,%10000001
   67 D1:D2B5 77 -  -  -  	ld (hl),a 
   68 D1:D2B6 23 -  -  -  	inc hl
   69 D1:D2B7 3E 00 -  -  	ld a,%00000000
   70 D1:D2B9 77 -  -  -  	ld (hl),a 
   71 D1:D2BA 23 -  -  -  	inc hl
   72 D1:D2BB 3E 00 -  -  	ld a,%00000000
   73 D1:D2BD 77 -  -  -  	ld (hl),a 
   74 D1:D2BE 23 -  -  -  	inc hl
   75 D1:D2BF 3E 1F -  -  	ld a,%00011111
   76 D1:D2C1 77 -  -  -  	ld (hl),a 
   77 D1:D2C2 23 -  -  -  	inc hl
   78 D1:D2C3 3E 81 -  -  	ld a,%10000001
   79 D1:D2C5 77 -  -  -  	ld (hl),a 
   80 D1:D2C6 23 -  -  -  	inc hl
   81 D1:D2C7 3E 1F -  -  	ld a,%00011111
   82 D1:D2C9 77 -  -  -  	ld (hl),a 
   83 D1:D2CA 23 -  -  -  	inc hl
   84 D1:D2CB 3E 81 -  -  	ld a,%10000001
   85 D1:D2CD 77 -  -  -  	ld (hl),a 
   86 D1:D2CE 23 -  -  -  	inc hl
   87 D1:D2CF 3E C6 -  -  	ld a,%11000110
   88 D1:D2D1 77 -  -  -  	ld (hl),a 
   89 D1:D2D2 23 -  -  -  	inc hl
   90 D1:D2D3 3E 98 -  -  	ld a,%10011000
   91 D1:D2D5 77 -  -  -  	ld (hl),a 
   92 D1:D2D6 23 -  -  -  	inc hl
   93 D1:D2D7 3E 95 -  -  	ld a,%10010101
   94 D1:D2D9 77 -  -  -  	ld (hl),a 
   95 D1:D2DA 23 -  -  -  	inc hl
   96 D1:D2DB 3E 99 -  -  	ld a,%10011001
   97 D1:D2DD 77 -  -  -  	ld (hl),a 
   98 D1:D2DE 23 -  -  -  	inc hl
   99 D1:D2DF C9 -  -  -  	ret 
Listing for file "ascent.asm"
  569 D1:D2E0 -  -  -  -  #include "generated/Sprite_Tables.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Tables.txt"
    1 D1:D2E0 -  -  -  -  Sprite_Table_Table:
    2 D1:D2E0 E6 D2 D1 -  	.dl Sprite_Table_0
    3 D1:D2E3 9C D4 D1 -  	.dl Sprite_Table_1
    4 D1:D2E6 -  -  -  -  
    5 D1:D2E6 -  -  -  -  
    6 D1:D2E6 -  -  -  -  Sprite_Table_0:
    7 D1:D2E6 34 32 D4 -  	.dl GroundDirtFull_Fast
    8 D1:D2E9 E6 32 D4 -  	.dl GroundDirtFull_Fast_F
    9 D1:D2EC 98 33 D4 -  	.dl GroundDirtMound_Fast
   10 D1:D2EF 18 34 D4 -  	.dl GroundDirtMound_Fast_F
   11 D1:D2F2 98 34 D4 -  	.dl GroundGrassL4_Fast
   12 D1:D2F5 22 35 D4 -  	.dl GroundGrassL2_Fast
   13 D1:D2F8 7A 35 D4 -  	.dl GroundGrassL5_Fast
   14 D1:D2FB FC 35 D4 -  	.dl GroundGrassL3_Fast
   15 D1:D2FE 56 36 D4 -  	.dl GroundGrassL1_Fast
   16 D1:D301 C8 36 D4 -  	.dl GroundGrassL1_Fast_F
   17 D1:D304 3A 37 D4 -  	.dl GroundGrassL3_Fast_F
   18 D1:D307 38 38 D4 -  	.dl Branches_9_Fast
   19 D1:D30A 27 39 D4 -  	.dl Branches_13_Slow_O
   20 D1:D30D 93 37 D4 -  	.dl Branches_10_Slow_O
   21 D1:D310 BB 38 D4 -  	.dl Branches_16_Slow
   22 D1:D313 6D 39 D4 -  	.dl Leaves_3_Slow
   23 D1:D316 DA 39 D4 -  	.dl Leaves_7_Fast
   24 D1:D319 62 3A D4 -  	.dl Leaves_7_Fast_F
   25 D1:D31C 4D 46 D4 -  	.dl Branches_8_Slow_O
   26 D1:D31F D1 47 D4 -  	.dl Leaves_3_Slow_F
   27 D1:D322 ED 42 D4 -  	.dl Branches_14_Slow_O
   28 D1:D325 A9 3E D4 -  	.dl Branches_15_Slow_O_F
   29 D1:D328 3B 3D D4 -  	.dl Branches_15_Slow_O
   30 D1:D32B E8 41 D4 -  	.dl Branches_11_Fast_F
   31 D1:D32E BC 42 D4 -  	.dl Branches_13_Fast_F
   32 D1:D331 70 41 D4 -  	.dl Branches_10_Fast_F
   33 D1:D334 D6 46 D4 -  	.dl Branches_10_Fast
   34 D1:D337 4D 47 D4 -  	.dl Leaves_6_Slow_O
   35 D1:D33A E9 3A D4 -  	.dl Branches_6_Slow
   36 D1:D33D 87 3B D4 -  	.dl Branches_10_Slow_O_F
   37 D1:D340 2F 3E D4 -  	.dl Branches_12_Slow_O
   38 D1:D343 83 3F D4 -  	.dl Leaves_4_Slow
   39 D1:D346 A7 3D D4 -  	.dl Branches_8_Slow_O_F
   40 D1:D349 CF 3C D4 -  	.dl Branches_16_Slow_O
   41 D1:D34C 2B 3C D4 -  	.dl Branches_7_Slow_O
   42 D1:D34F 0D 40 D4 -  	.dl Leaves_4_Slow_F
   43 D1:D352 19 3F D4 -  	.dl Leaves_2_Slow_O
   44 D1:D355 98 40 D4 -  	.dl Branches_7_Fast
   45 D1:D358 12 41 D4 -  	.dl Branches_8_Fast
   46 D1:D35B 5D 43 D4 -  	.dl Branches_15_Slow_F
   47 D1:D35E C9 43 D4 -  	.dl Leaves_6_Slow
   48 D1:D361 4F 42 D4 -  	.dl Branches_16_Slow_O_F
   49 D1:D364 3D 48 D4 -  	.dl Vines_8_Slow
   50 D1:D367 07 49 D4 -  	.dl Vines_2_Slow_O
   51 D1:D36A DF 49 D4 -  	.dl Vines_3_Slow
   52 D1:D36D 8F 4A D4 -  	.dl Vines_5_Slow
   53 D1:D370 33 4C D4 -  	.dl Vines_4_Slow_F
   54 D1:D373 EB 4C D4 -  	.dl Vines_1_Slow_O
   55 D1:D376 81 4B D4 -  	.dl Vines_9_Slow
   56 D1:D379 77 4D D4 -  	.dl Vines_9_Slow_O_F
   57 D1:D37C 29 4E D4 -  	.dl Vines_3_Slow_F
   58 D1:D37F 4C 44 D4 -  	.dl Branches_4_Fast_F
   59 D1:D382 EA 44 D4 -  	.dl Branches_7_Fast_F
   60 D1:D385 64 45 D4 -  	.dl Branches_12_Fast_F
   61 D1:D388 BF 45 D4 -  	.dl Leaves_4_Slow_O
   62 D1:D38B BD 07 D4 -  	.dl Vines_2_Slow_F
   63 D1:D38E 97 08 D4 -  	.dl Vines_1_Slow
   64 D1:D391 F5 59 D4 -  	.dl Vines_8_Slow_O
   65 D1:D394 BB 5A D4 -  	.dl Vines_8_Slow_O_F
   66 D1:D397 81 5B D4 -  	.dl Vines_6_Slow
   67 D1:D39A 46 06 D4 -  	.dl Branches_8_Fast_F
   68 D1:D39D A5 06 D4 -  	.dl Branches_15_Slow
   69 D1:D3A0 98 34 D4 -  	.dl Branches_5_Fast
   70 D1:D3A3 38 35 D4 -  	.dl Branches_4_Fast
   71 D1:D3A6 D9 4E D4 -  	.dl Vines_8_Slow_F
   72 D1:D3A9 27 09 D4 -  	.dl Vines_9_Slow_O
   73 D1:D3AC 16 07 D4 -  	.dl Branches_3_Fast
   74 D1:D3AF D6 35 D4 -  	.dl Branches_2_Fast
   75 D1:D3B2 7F 36 D4 -  	.dl Vines_3_Slow_O
   76 D1:D3B5 A3 4F D4 -  	.dl Branches_9_Slow_O
   77 D1:D3B8 2C 51 D4 -  	.dl Tree_2_Fast
   78 D1:D3BB 28 52 D4 -  	.dl Tree_4_Fast
   79 D1:D3BE 2A 53 D4 -  	.dl Tree_7_Fast
   80 D1:D3C1 2C 54 D4 -  	.dl Tree_9_Fast
   81 D1:D3C4 2E 55 D4 -  	.dl Tree_6_Fast_F
   82 D1:D3C7 30 56 D4 -  	.dl Tree_3_Fast_F
   83 D1:D3CA D8 09 D4 -  	.dl Tree_0_Fast_F
   84 D1:D3CD D4 0A D4 -  	.dl Tree_3_Fast
   85 D1:D3D0 D6 0B D4 -  	.dl Tree_8_Fast
   86 D1:D3D3 D8 0C D4 -  	.dl Tree_9_Fast_F
   87 D1:D3D6 DA 0D D4 -  	.dl Tree_8_Fast_F
   88 D1:D3D9 DC 0E D4 -  	.dl Tree_4_Fast_F
   89 D1:D3DC DE 0F D4 -  	.dl Tree_0_Fast
   90 D1:D3DF DA 10 D4 -  	.dl Tree_6_Fast
   91 D1:D3E2 DC 11 D4 -  	.dl Tree_10_Fast
   92 D1:D3E5 DE 12 D4 -  	.dl Tree_7_Fast_F
   93 D1:D3E8 E0 13 D4 -  	.dl Tree_1_Fast_F
   94 D1:D3EB DE 14 D4 -  	.dl Tree_1_Fast
   95 D1:D3EE DC 15 D4 -  	.dl Tree_5_Fast
   96 D1:D3F1 DE 16 D4 -  	.dl Tree_11_Fast
   97 D1:D3F4 E0 17 D4 -  	.dl Tree_5_Fast_F
   98 D1:D3F7 E2 18 D4 -  	.dl Tree_2_Fast_F
   99 D1:D3FA DE 19 D4 -  	.dl Tree_11_Fast_F
  100 D1:D3FD E0 1A D4 -  	.dl Branches_1_Fast
  101 D1:D400 79 1B D4 -  	.dl Branches_2_Slow_O
  102 D1:D403 59 1C D4 -  	.dl Branches_3_Slow_O
  103 D1:D406 33 1D D4 -  	.dl Branches_5_Slow_O
  104 D1:D409 03 1E D4 -  	.dl Leaves_3_Slow_O
  105 D1:D40C 6F 1E D4 -  	.dl Vines_7_Slow
  106 D1:D40F 2F 1F D4 -  	.dl Vines_5_Slow_O_F
  107 D1:D412 1D 20 D4 -  	.dl Vines_3_Slow_O_F
  108 D1:D415 D3 20 D4 -  	.dl Vines_4_Slow_O
  109 D1:D418 85 21 D4 -  	.dl Vines_10_Slow
  110 D1:D41B 47 22 D4 -  	.dl Vines_7_Slow_F
  111 D1:D41E 07 23 D4 -  	.dl Vines_2_Slow
  112 D1:D421 E3 23 D4 -  	.dl Leaves_2_Slow
  113 D1:D424 53 50 D4 -  	.dl Vines_2_Slow_O_F
  114 D1:D427 4C 24 D4 -  	.dl Branches_1_Fast_F
  115 D1:D42A E4 24 D4 -  	.dl Branches_2_Fast_F
  116 D1:D42D 8E 25 D4 -  	.dl Branches_5_Fast_F
  117 D1:D430 2F 26 D4 -  	.dl Branches_14_Slow
  118 D1:D433 9B 26 D4 -  	.dl Vines_10_Slow_O
  119 D1:D436 5A 27 D4 -  	.dl Branches_0_Fast
  120 D1:D439 31 57 D4 -  	.dl Branches_1_Slow_O
  121 D1:D43C F7 57 D4 -  	.dl Branches_4_Slow_O
  122 D1:D43F C3 58 D4 -  	.dl Leaves_3_Slow_O_F
  123 D1:D442 31 59 D4 -  	.dl Vines_7_Slow_O
  124 D1:D445 38 5C D4 -  	.dl Branches_0_Fast_F
  125 D1:D448 D0 5C D4 -  	.dl Branches_9_Fast_F
  126 D1:D44B F2 27 D4 -  	.dl Clouds_2_Fast
  127 D1:D44E A4 28 D4 -  	.dl GroundDirtDark_Fast
  128 D1:D451 2A 29 D4 -  	.dl GroundDirtDark_Fast_F
  129 D1:D454 B0 29 D4 -  	.dl GroundHumpDark_Fast
  130 D1:D457 36 2A D4 -  	.dl GroundHumpDark_Fast_F
  131 D1:D45A 0C 2C D4 -  	.dl Tree_16_Fast
  132 D1:D45D 61 2C D4 -  	.dl Tree_17_Slow_O
  133 D1:D460 C9 2C D4 -  	.dl Tree_17_Slow_O_F
  134 D1:D463 B5 2D D4 -  	.dl Tree_16_Slow_O
  135 D1:D466 3B 2E D4 -  	.dl Tree_17_Slow_F
  136 D1:D469 2E 2D D4 -  	.dl Leaves_8_Fast
  137 D1:D46C A3 2E D4 -  	.dl Tree_18_Slow_O
  138 D1:D46F 07 2F D4 -  	.dl Tree_17_Slow
  139 D1:D472 6D 2F D4 -  	.dl Tree_18_Slow_F
  140 D1:D475 D1 2F D4 -  	.dl Tree_16_Slow_O_F
  141 D1:D478 57 30 D4 -  	.dl Leaves_2_Slow_F
  142 D1:D47B BE 30 D4 -  	.dl Clouds_0_Fast
  143 D1:D47E 24 31 D4 -  	.dl Clouds_1_Fast
  144 D1:D481 88 31 D4 -  	.dl Clouds_3_Fast
  145 D1:D484 F4 31 D4 -  	.dl Clouds_4_Fast
  146 D1:D487 C0 01 D4 -  	.dl Clouds_0_Fast_F
  147 D1:D48A 26 02 D4 -  	.dl Clouds_1_Fast_F
  148 D1:D48D 8A 02 D4 -  	.dl Clouds_4_Fast_F
  149 D1:D490 CA 02 D4 -  	.dl Clouds_3_Fast_F
  150 D1:D493 36 03 D4 -  	.dl Clouds_2_Fast_F
  151 D1:D496 BC 2A D4 -  	.dl GroundGrassSmall_Fast
  152 D1:D499 64 2B D4 -  	.dl GroundGrassSmall_Fast_F
  153 D1:D49C -  -  -  -  
  154 D1:D49C -  -  -  -  Sprite_Table_1:
  155 D1:D49C -  -  -  -  
Listing for file "ascent.asm"
  570 D1:D49C -  -  -  -  #include "generated/Sprite_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Data.txt"
    1 D1:D49C -  -  -  -  GroundDirtFull:
    2 D1:D49C 24 -  -  -  	.db %00100100
    3 D1:D49D 10 10 -  -  	.db 16, 16
    4 D1:D49F 15 00 -  -  	.db %00010101, %00000000
    5 D1:D4A1 -  -  -  -  
    6 D1:D4A1 04 00 00 00 
              04 00 00 00 	.db %00000100, %00000000, %00000000, %00000000, %00000100, %00000000, %00000000, %00000000
    7 D1:D4A9 AA AA 40 4A 
              21 12 10 24 	.db %10101010, %10101010, %01000000, %01001010, %00100001, %00010010, %00010000, %00100100
    8 D1:D4B1 01 01 00 04 
              44 2A A8 10 	.db %00000001, %00000001, %00000000, %00000100, %01000100, %00101010, %10101000, %00010000
    9 D1:D4B9 10 A5 0A 80 
              04 00 00 A1 	.db %00010000, %10100101, %00001010, %10000000, %00000100, %00000000, %00000000, %10100001
   10 D1:D4C1 84 40 00 61 
              10 10 00 10 	.db %10000100, %01000000, %00000000, %01100001, %00010000, %00010000, %00000000, %00010000
   11 D1:D4C9 0A AA 94 00 
              29 10 12 84 	.db %00001010, %10101010, %10010100, %00000000, %00101001, %00010000, %00010010, %10000100
   12 D1:D4D1 10 00 42 84 
              01 29 00 80 	.db %00010000, %00000000, %01000010, %10000100, %00000001, %00101001, %00000000, %10000000
   13 D1:D4D9 04 A1 40 8A 
              A0 00 00 00 	.db %00000100, %10100001, %01000000, %10001010, %10100000, %00000000, %00000000, %00000000
   14 D1:D4E1 -  -  -  -  
   15 D1:D4E1 -  -  -  -  
   16 D1:D4E1 -  -  -  -  GroundDirtMound:
   17 D1:D4E1 20 -  -  -  	.db %00100000
   18 D1:D4E2 10 0C -  -  	.db 16, 12
   19 D1:D4E4 0F F0 3F FC 
              FF FF FF FF 	.db %00001111, %11110000, %00111111, %11111100, %11111111, %11111111, %11111111, %11111111
   20 D1:D4EC FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   21 D1:D4F4 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   22 D1:D4FC -  -  -  -  
   23 D1:D4FC 01 50 -  -  	.db %00000001, %01010000
   24 D1:D4FE -  -  -  -  
   25 D1:D4FE 00 00 05 55 
              50 05 56 59 	.db %00000000, %00000000, %00000101, %01010101, %01010000, %00000101, %01010110, %01011001
   26 D1:D506 50 55 96 5A 
              55 55 9A 56 	.db %01010000, %01010101, %10010110, %01011010, %01010101, %01010101, %10011010, %01010110
   27 D1:D50E 56 A5 54 00 
              01 59 55 65 	.db %01010110, %10100101, %01010100, %00000000, %00000001, %01011001, %01010101, %01100101
   28 D1:D516 50 00 15 69 
              55 15 59 59 	.db %01010000, %00000000, %00010101, %01101001, %01010101, %00010101, %01011001, %01011001
   29 D1:D51E 65 56 50 05 
              66 55 41 41 	.db %01100101, %01010110, %01010000, %00000101, %01100110, %01010101, %01000001, %01000001
   30 D1:D526 A6 65 95 55 
              95 -  -  -  	.db %10100110, %01100101, %10010101, %01010101, %10010101
   31 D1:D52B -  -  -  -  
   32 D1:D52B -  -  -  -  
   33 D1:D52B -  -  -  -  GroundGrassL4:
   34 D1:D52B 08 -  -  -  	.db %00001000
   35 D1:D52C 0E 10 -  -  	.db 14, 16
   36 D1:D52E 0F C0 3F C0 
              FF 03 FC 3F 	.db %00001111, %11000000, %00111111, %11000000, %11111111, %00000011, %11111100, %00111111
   37 D1:D536 F0 FF C3 FF 
              0F FC 3F F0 	.db %11110000, %11111111, %11000011, %11111111, %00001111, %11111100, %00111111, %11110000
   38 D1:D53E FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   39 D1:D546 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
   40 D1:D54A -  -  -  -  
   41 D1:D54A 50 -  -  -  	.db %01010000
   42 D1:D54B -  -  -  -  
   43 D1:D54B -  -  -  -  
   44 D1:D54B -  -  -  -  
   45 D1:D54B -  -  -  -  GroundGrassL2:
   46 D1:D54B 08 -  -  -  	.db %00001000
   47 D1:D54C 0A 10 -  -  	.db 10, 16
   48 D1:D54E 03 00 C0 30 
              0C 03 03 C0 	.db %00000011, %00000000, %11000000, %00110000, %00001100, %00000011, %00000011, %11000000
   49 D1:D556 FC 3F 0F C3 
              C3 F0 FC 3F 	.db %11111100, %00111111, %00001111, %11000011, %11000011, %11110000, %11111100, %00111111
   50 D1:D55E 0F CF F3 FC 	.db %00001111, %11001111, %11110011, %11111100
   51 D1:D562 -  -  -  -  
   52 D1:D562 50 -  -  -  	.db %01010000
   53 D1:D563 -  -  -  -  
   54 D1:D563 -  -  -  -  
   55 D1:D563 -  -  -  -  
   56 D1:D563 -  -  -  -  GroundGrassL5:
   57 D1:D563 08 -  -  -  	.db %00001000
   58 D1:D564 10 10 -  -  	.db 16, 16
   59 D1:D566 00 3F 00 3F 
              00 FF 00 FF 	.db %00000000, %00111111, %00000000, %00111111, %00000000, %11111111, %00000000, %11111111
   60 D1:D56E 03 FF 03 FF 
              0F FC 0F FC 	.db %00000011, %11111111, %00000011, %11111111, %00001111, %11111100, %00001111, %11111100
   61 D1:D576 3F FC 3F FC 
              3F FC 3F F0 	.db %00111111, %11111100, %00111111, %11111100, %00111111, %11111100, %00111111, %11110000
   62 D1:D57E FF F0 FF F0 
              FF F0 FF F0 	.db %11111111, %11110000, %11111111, %11110000, %11111111, %11110000, %11111111, %11110000
   63 D1:D586 -  -  -  -  
   64 D1:D586 50 -  -  -  	.db %01010000
   65 D1:D587 -  -  -  -  
   66 D1:D587 -  -  -  -  
   67 D1:D587 -  -  -  -  
   68 D1:D587 -  -  -  -  GroundGrassL3:
   69 D1:D587 08 -  -  -  	.db %00001000
   70 D1:D588 0E 0E -  -  	.db 14, 14
   71 D1:D58A C0 03 00 0C 
              00 3C 00 F0 	.db %11000000, %00000011, %00000000, %00001100, %00000000, %00111100, %00000000, %11110000
   72 D1:D592 03 F0 03 C0 
              0F C0 3F 0C 	.db %00000011, %11110000, %00000011, %11000000, %00001111, %11000000, %00111111, %00001100
   73 D1:D59A 3C 30 FC C3 
              F3 03 FC 0F 	.db %00111100, %00110000, %11111100, %11000011, %11110011, %00000011, %11111100, %00001111
   74 D1:D5A2 F0 -  -  -  	.db %11110000
   75 D1:D5A3 -  -  -  -  
   76 D1:D5A3 50 -  -  -  	.db %01010000
   77 D1:D5A4 -  -  -  -  
   78 D1:D5A4 -  -  -  -  
   79 D1:D5A4 -  -  -  -  
   80 D1:D5A4 -  -  -  -  GroundGrassL1:
   81 D1:D5A4 08 -  -  -  	.db %00001000
   82 D1:D5A5 0C 10 -  -  	.db 12, 16
   83 D1:D5A7 00 C0 0C C3 
              FC 3F F3 FF 	.db %00000000, %11000000, %00001100, %11000011, %11111100, %00111111, %11110011, %11111111
   84 D1:D5AF FF FF FF FF 
              3F F3 FF 3F 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11110011, %11111111, %00111111
   85 D1:D5B7 C3 FC 0F 00 
              F0 0F 00 F0 	.db %11000011, %11111100, %00001111, %00000000, %11110000, %00001111, %00000000, %11110000
   86 D1:D5BF -  -  -  -  
   87 D1:D5BF 50 -  -  -  	.db %01010000
   88 D1:D5C0 -  -  -  -  
   89 D1:D5C0 -  -  -  -  
   90 D1:D5C0 -  -  -  -  
   91 D1:D5C0 -  -  -  -  Branches_10:
   92 D1:D5C0 20 -  -  -  	.db %00100000
   93 D1:D5C1 12 0E -  -  	.db 18, 14
   94 D1:D5C3 00 0F C0 0F 
              F0 0F FC 03 	.db %00000000, %00001111, %11000000, %00001111, %11110000, %00001111, %11111100, %00000011
   95 D1:D5CB FF 03 FF C3 
              FF F3 FF FF 	.db %11111111, %00000011, %11111111, %11000011, %11111111, %11110011, %11111111, %11111111
   96 D1:D5D3 FF FC FF FC 
              3F FC 0F FC 	.db %11111111, %11111100, %11111111, %11111100, %00111111, %11111100, %00001111, %11111100
   97 D1:D5DB 03 FC 00 FF 
              00 33 00 00 	.db %00000011, %11111100, %00000000, %11111111, %00000000, %00110011, %00000000, %00000000
   98 D1:D5E3 -  -  -  -  
   99 D1:D5E3 01 23 -  -  	.db %00000001, %00100011
  100 D1:D5E5 -  -  -  -  
  101 D1:D5E5 04 60 46 F0 
              15 BE 14 2D 	.db %00000100, %01100000, %01000110, %11110000, %00010101, %10111110, %00010100, %00101101
  102 D1:D5ED 50 15 E5 00 
              55 39 55 04 	.db %01010000, %00010101, %11100101, %00000000, %01010101, %00111001, %01010101, %00000100
  103 D1:D5F5 4A A9 10 01 
              5A D8 40 55 	.db %01001010, %10101001, %00010000, %00000001, %01011010, %11011000, %01000000, %01010101
  104 D1:D5FD 2F 85 01 4E 
              25 0B E8 50 	.db %00101111, %10000101, %00000001, %01001110, %00100101, %00001011, %11101000, %01010000
  105 D1:D605 A9 10 50 40 
              00 -  -  -  	.db %10101001, %00010000, %01010000, %01000000, %00000000
  106 D1:D60A -  -  -  -  
  107 D1:D60A -  -  -  -  
  108 D1:D60A -  -  -  -  Branches_9:
  109 D1:D60A 20 -  -  -  	.db %00100000
  110 D1:D60B 12 0E -  -  	.db 18, 14
  111 D1:D60D 00 30 C0 3F 
              F0 0F FC 0F 	.db %00000000, %00110000, %11000000, %00111111, %11110000, %00001111, %11111100, %00001111
  112 D1:D615 FF 0F FF FF 
              FF FF FF FF 	.db %11111111, %00001111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  113 D1:D61D FF FF FF FF 
              FF FF CF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11001111, %11111111
  114 D1:D625 03 FF 00 FF 
              00 0C 00 00 	.db %00000011, %11111111, %00000000, %11111111, %00000000, %00001100, %00000000, %00000000
  115 D1:D62D -  -  -  -  
  116 D1:D62D 01 23 -  -  	.db %00000001, %00100011
  117 D1:D62F -  -  -  -  
  118 D1:D62F 00 00 00 51 
              51 40 06 50 	.db %00000000, %00000000, %00000000, %01010001, %01010001, %01000000, %00000110, %01010000
  119 D1:D637 55 04 58 AA 
              A0 01 51 FB 	.db %01010101, %00000100, %01011000, %10101010, %10100000, %00000001, %01010001, %11111011
  120 D1:D63F BF 05 45 B9 
              65 05 05 BA 	.db %10111111, %00000101, %01000101, %10111001, %01100101, %00000101, %00000101, %10111010
  121 D1:D647 50 11 BF BE 
              50 55 06 A9 	.db %01010000, %00010001, %10111111, %10111110, %01010000, %01010101, %00000110, %10101001
  122 D1:D64F 44 40 00 14 
              15 05 15 40 	.db %01000100, %01000000, %00000000, %00010100, %00010101, %00000101, %00010101, %01000000
  123 D1:D657 04 00 00 -  	.db %00000100, %00000000, %00000000
  124 D1:D65A -  -  -  -  
  125 D1:D65A -  -  -  -  
  126 D1:D65A -  -  -  -  Branches_16:
  127 D1:D65A 20 -  -  -  	.db %00100000
  128 D1:D65B 0D 0D -  -  	.db 13, 13
  129 D1:D65D 07 F8 3F 83 
              FC 1F C0 FC 	.db %00000111, %11111000, %00111111, %10000011, %11111100, %00011111, %11000000, %11111100
  130 D1:D665 0F C0 7C 07 
              C0 3C 03 C0 	.db %00001111, %11000000, %01111100, %00000111, %11000000, %00111100, %00000011, %11000000
  131 D1:D66D 1E 01 E0 0C 
              00 00 -  -  	.db %00011110, %00000001, %11100000, %00001100, %00000000, %00000000
  132 D1:D673 -  -  -  -  
  133 D1:D673 01 23 -  -  	.db %00000001, %00100011
  134 D1:D675 -  -  -  -  
  135 D1:D675 16 A4 12 D0 
              43 50 6C 00 	.db %00010110, %10100100, %00010010, %11010000, %01000011, %01010000, %01101100, %00000000
  136 D1:D67D 94 0A 01 40 
              64 24 18 14 	.db %10010100, %00001010, %00000001, %01000000, %01100100, %00100100, %00011000, %00010100
  137 D1:D685 10 00 -  -  	.db %00010000, %00000000
  138 D1:D687 -  -  -  -  
  139 D1:D687 -  -  -  -  
  140 D1:D687 -  -  -  -  Branches_13:
  141 D1:D687 20 -  -  -  	.db %00100000
  142 D1:D688 0E 06 -  -  	.db 14, 6
  143 D1:D68A 00 0C 33 FF 
              FF FF FF 3F 	.db %00000000, %00001100, %00110011, %11111111, %11111111, %11111111, %11111111, %00111111
  144 D1:D692 FC 03 F0 -  	.db %11111100, %00000011, %11110000
  145 D1:D695 -  -  -  -  
  146 D1:D695 01 20 -  -  	.db %00000001, %00100000
  147 D1:D697 -  -  -  -  
  148 D1:D697 00 00 10 00 
              01 59 08 45 	.db %00000000, %00000000, %00010000, %00000000, %00000001, %01011001, %00001000, %01000101
  149 D1:D69F AA 50 00 15 
              60 00 -  -  	.db %10101010, %01010000, %00000000, %00010101, %01100000, %00000000
  150 D1:D6A5 -  -  -  -  
  151 D1:D6A5 -  -  -  -  
  152 D1:D6A5 -  -  -  -  Leaves_3:
  153 D1:D6A5 10 -  -  -  	.db %00010000
  154 D1:D6A6 0B 0C -  -  	.db 11, 12
  155 D1:D6A8 78 0F C1 FC 
              1F 81 F8 1F 	.db %01111000, %00001111, %11000001, %11111100, %00011111, %10000001, %11111000, %00011111
  156 D1:D6B0 80 F1 DE 7F 
              8F F3 F8 7C 	.db %10000000, %11110001, %11011110, %01111111, %10001111, %11110011, %11111000, %01111100
  157 D1:D6B8 00 -  -  -  	.db %00000000
  158 D1:D6B9 -  -  -  -  
  159 D1:D6B9 45 -  -  -  	.db %01000101
  160 D1:D6BA -  -  -  -  
  161 D1:D6BA 02 08 18 20 
              8C 00 08 60 	.db %00000010, %00001000, %00011000, %00100000, %10001100, %00000000, %00001000, %01100000
  162 D1:D6C2 40 00 -  -  	.db %01000000, %00000000
  163 D1:D6C4 -  -  -  -  
  164 D1:D6C4 -  -  -  -  
  165 D1:D6C4 -  -  -  -  Leaves_7:
  166 D1:D6C4 10 -  -  -  	.db %00010000
  167 D1:D6C5 10 0E -  -  	.db 16, 14
  168 D1:D6C7 03 C0 0F F0 
              3F FC 3F FC 	.db %00000011, %11000000, %00001111, %11110000, %00111111, %11111100, %00111111, %11111100
  169 D1:D6CF FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  170 D1:D6D7 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  171 D1:D6DF FF FC 30 30 	.db %11111111, %11111100, %00110000, %00110000
  172 D1:D6E3 -  -  -  -  
  173 D1:D6E3 45 -  -  -  	.db %01000101
  174 D1:D6E4 -  -  -  -  
  175 D1:D6E4 08 03 02 19 
              C0 1C 20 00 	.db %00001000, %00000011, %00000010, %00011001, %11000000, %00011100, %00100000, %00000000
  176 D1:D6EC 3C 07 07 9C 
              00 60 44 00 	.db %00111100, %00000111, %00000111, %10011100, %00000000, %01100000, %01000100, %00000000
  177 D1:D6F4 FC 03 80 F0 
              00 00 00 -  	.db %11111100, %00000011, %10000000, %11110000, %00000000, %00000000, %00000000
  178 D1:D6FB -  -  -  -  
  179 D1:D6FB -  -  -  -  
  180 D1:D6FB -  -  -  -  Branches_6:
  181 D1:D6FB 20 -  -  -  	.db %00100000
  182 D1:D6FC 12 0B -  -  	.db 18, 11
  183 D1:D6FE 37 3F 3F FF 
              FF FF FF FF 	.db %00110111, %00111111, %00111111, %11111111, %11111111, %11111111, %11111111, %11111111
  184 D1:D706 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  185 D1:D70E FF FF FF FF 
              FC FF F0 00 	.db %11111111, %11111111, %11111111, %11111111, %11111100, %11111111, %11110000, %00000000
  186 D1:D716 0C -  -  -  	.db %00001100
  187 D1:D717 -  -  -  -  
  188 D1:D717 01 23 -  -  	.db %00000001, %00100011
  189 D1:D719 -  -  -  -  
  190 D1:D719 00 00 00 14 
              00 15 40 10 	.db %00000000, %00000000, %00000000, %00010100, %00000000, %00010101, %01000000, %00010000
  191 D1:D721 05 44 01 55 
              94 41 55 15 	.db %00000101, %01000100, %00000001, %01010101, %10010100, %01000001, %01010101, %00010101
  192 D1:D729 2D CA 86 99 
              AA E6 BF FF 	.db %00101101, %11001010, %10000110, %10011001, %10101010, %11100110, %10111111, %11111111
  193 D1:D731 FF C8 59 15 
              A6 A8 16 15 	.db %11111111, %11001000, %01011001, %00010101, %10100110, %10101000, %00010110, %00010101
  194 D1:D739 01 54 15 41 
              55 00 14 00 	.db %00000001, %01010100, %00010101, %01000001, %01010101, %00000000, %00010100, %00000000
  195 D1:D741 00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000
  196 D1:D745 -  -  -  -  
  197 D1:D745 -  -  -  -  
  198 D1:D745 -  -  -  -  Branches_7:
  199 D1:D745 20 -  -  -  	.db %00100000
  200 D1:D746 12 0A -  -  	.db 18, 10
  201 D1:D748 FF 3C FF FF 
              FF FF FF FF 	.db %11111111, %00111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  202 D1:D750 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  203 D1:D758 FF FF FF F3 
              C3 C0 F0 -  	.db %11111111, %11111111, %11111111, %11110011, %11000011, %11000000, %11110000
  204 D1:D75F -  -  -  -  
  205 D1:D75F 01 23 -  -  	.db %00000001, %00100011
  206 D1:D761 -  -  -  -  
  207 D1:D761 00 00 00 00 
              55 40 01 00 	.db %00000000, %00000000, %00000000, %00000000, %01010101, %01000000, %00000001, %00000000
  208 D1:D769 90 01 55 45 
              51 15 55 05 	.db %10010000, %00000001, %01010101, %01000101, %01010001, %00010101, %01010101, %00000101
  209 D1:D771 00 AB FA 9D 
              FA AF AA FB 	.db %00000000, %10101011, %11111010, %10011101, %11111010, %10101111, %10101010, %11111011
  210 D1:D779 AA BF 05 51 
              55 51 55 44 	.db %10101010, %10111111, %00000101, %01010001, %01010101, %01010001, %01010101, %01000100
  211 D1:D781 15 10 44 00 
              00 00 05 00 	.db %00010101, %00010000, %01000100, %00000000, %00000000, %00000000, %00000101, %00000000
  212 D1:D789 00 -  -  -  	.db %00000000
  213 D1:D78A -  -  -  -  
  214 D1:D78A -  -  -  -  
  215 D1:D78A -  -  -  -  Branches_15:
  216 D1:D78A 20 -  -  -  	.db %00100000
  217 D1:D78B 09 0E -  -  	.db 9, 14
  218 D1:D78D 80 60 38 1E 
              07 C3 F1 FE 	.db %10000000, %01100000, %00111000, %00011110, %00000111, %11000011, %11110001, %11111110
  219 D1:D795 7F 1F 87 C1 
              E0 F0 18 0C 	.db %01111111, %00011111, %10000111, %11000001, %11100000, %11110000, %00011000, %00001100
  220 D1:D79D -  -  -  -  
  221 D1:D79D 01 23 -  -  	.db %00000001, %00100011
  222 D1:D79F -  -  -  -  
  223 D1:D79F 00 01 01 00 
              64 00 84 01 	.db %00000000, %00000001, %00000001, %00000000, %01100100, %00000000, %10000100, %00000001
  224 D1:D7A7 A1 06 90 6C 
              68 10 40 -  	.db %10100001, %00000110, %10010000, %01101100, %01101000, %00010000, %01000000
  225 D1:D7AE -  -  -  -  
  226 D1:D7AE -  -  -  -  
  227 D1:D7AE -  -  -  -  Branches_8:
  228 D1:D7AE 20 -  -  -  	.db %00100000
  229 D1:D7AF 0A 0E -  -  	.db 10, 14
  230 D1:D7B1 03 C3 F3 FC 
              FF 3F FF FF 	.db %00000011, %11000011, %11110011, %11111100, %11111111, %00111111, %11111111, %11111111
  231 D1:D7B9 FF FF FF 3F 
              CF F3 F0 F0 	.db %11111111, %11111111, %11111111, %00111111, %11001111, %11110011, %11110000, %11110000
  232 D1:D7C1 3C 00 -  -  	.db %00111100, %00000000
  233 D1:D7C3 -  -  -  -  
  234 D1:D7C3 01 23 -  -  	.db %00000001, %00100011
  235 D1:D7C5 -  -  -  -  
  236 D1:D7C5 06 00 60 12 
              90 5B 51 1A 	.db %00000110, %00000000, %01100000, %00010010, %10010000, %01011011, %01010001, %00011010
  237 D1:D7CD 50 51 94 11 
              F9 45 6E 50 	.db %01010000, %01010001, %10010100, %00010001, %11111001, %01000101, %01101110, %01010000
  238 D1:D7D5 4B 84 5E 54 
              B8 50 A1 01 	.db %01001011, %10000100, %01011110, %01010100, %10111000, %01010000, %10100001, %00000001
  239 D1:D7DD 44 40 -  -  	.db %01000100, %01000000
  240 D1:D7DF -  -  -  -  
  241 D1:D7DF -  -  -  -  
  242 D1:D7DF -  -  -  -  Branches_12:
  243 D1:D7DF 20 -  -  -  	.db %00100000
  244 D1:D7E0 12 0A -  -  	.db 18, 10
  245 D1:D7E2 00 00 C0 3F 
              F0 FF FF FF 	.db %00000000, %00000000, %11000000, %00111111, %11110000, %11111111, %11111111, %11111111
  246 D1:D7EA FF FF FF FF 
              FF FF FF FC 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111100
  247 D1:D7F2 0F FF 00 0F 
              C0 00 F0 -  	.db %00001111, %11111111, %00000000, %00001111, %11000000, %00000000, %11110000
  248 D1:D7F9 -  -  -  -  
  249 D1:D7F9 01 23 -  -  	.db %00000001, %00100011
  250 D1:D7FB -  -  -  -  
  251 D1:D7FB 00 00 00 00 
              05 54 50 01 	.db %00000000, %00000000, %00000000, %00000000, %00000101, %01010100, %01010000, %00000001
  252 D1:D803 45 04 16 3A 
              5F 2A F8 F2 	.db %01000101, %00000100, %00010110, %00111010, %01011111, %00101010, %11111000, %11110010
  253 D1:D80B 12 9A C5 6A 
              00 00 15 06 	.db %00010010, %10011010, %11000101, %01101010, %00000000, %00000000, %00010101, %00000110
  254 D1:D813 90 00 14 10 
              14 00 -  -  	.db %10010000, %00000000, %00010100, %00010000, %00010100, %00000000
  255 D1:D819 -  -  -  -  
  256 D1:D819 -  -  -  -  
  257 D1:D819 -  -  -  -  Leaves_2:
  258 D1:D819 10 -  -  -  	.db %00010000
  259 D1:D81A 0C 09 -  -  	.db 12, 9
  260 D1:D81C 01 C0 1C 0F 
              C0 F7 6F 7F 	.db %00000001, %11000000, %00011100, %00001111, %11000000, %11110111, %01101111, %01111111
  261 D1:D824 C2 E7 0E 70 
              06 00 -  -  	.db %11000010, %11100111, %00001110, %01110000, %00000110, %00000000
  262 D1:D82A -  -  -  -  
  263 D1:D82A 45 -  -  -  	.db %01000101
  264 D1:D82B -  -  -  -  
  265 D1:D82B 0D 06 00 22 
              8F 0C 00 -  	.db %00001101, %00000110, %00000000, %00100010, %10001111, %00001100, %00000000
  266 D1:D832 -  -  -  -  
  267 D1:D832 -  -  -  -  
  268 D1:D832 -  -  -  -  Leaves_4:
  269 D1:D832 10 -  -  -  	.db %00010000
  270 D1:D833 0E 0B -  -  	.db 14, 11
  271 D1:D835 01 80 1F 83 
              7F 1F FC FF 	.db %00000001, %10000000, %00011111, %10000011, %01111111, %00011111, %11111100, %11111111
  272 D1:D83D F3 F7 FF 9F 
              FE 7F F1 FF 	.db %11110011, %11110111, %11111111, %10011111, %11111110, %01111111, %11110001, %11111111
  273 D1:D845 83 F0 03 C0 	.db %10000011, %11110000, %00000011, %11000000
  274 D1:D849 -  -  -  -  
  275 D1:D849 54 -  -  -  	.db %01010100
  276 D1:D84A -  -  -  -  
  277 D1:D84A 33 EF F3 7F 
              77 FF 7E FB 	.db %00110011, %11101111, %11110011, %01111111, %01110111, %11111111, %01111110, %11111011
  278 D1:D852 DF BD FD FE 
              F8 -  -  -  	.db %11011111, %10111101, %11111101, %11111110, %11111000
  279 D1:D857 -  -  -  -  
  280 D1:D857 -  -  -  -  
  281 D1:D857 -  -  -  -  Branches_11:
  282 D1:D857 20 -  -  -  	.db %00100000
  283 D1:D858 12 0A -  -  	.db 18, 10
  284 D1:D85A 00 03 C3 CF 
              FF FF FF FF 	.db %00000000, %00000011, %11000011, %11001111, %11111111, %11111111, %11111111, %11111111
  285 D1:D862 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  286 D1:D86A FF FF 03 F3 
              C0 00 30 -  	.db %11111111, %11111111, %00000011, %11110011, %11000000, %00000000, %00110000
  287 D1:D871 -  -  -  -  
  288 D1:D871 01 32 -  -  	.db %00000001, %00110010
  289 D1:D873 -  -  -  -  
  290 D1:D873 00 00 00 15 
              00 00 05 44 	.db %00000000, %00000000, %00000000, %00010101, %00000000, %00000000, %00000101, %01000100
  291 D1:D87B 15 65 55 04 
              10 FB FA 3F 	.db %00010101, %01100101, %01010101, %00000100, %00010000, %11111011, %11111010, %00111111
  292 D1:D883 FF B7 D3 FB 
              EA BE 15 54 	.db %11111111, %10110111, %11010011, %11111011, %11101010, %10111110, %00010101, %01010100
  293 D1:D88B 14 15 E0 00 
              14 10 15 00 	.db %00010100, %00010101, %11100000, %00000000, %00010100, %00010000, %00010101, %00000000
  294 D1:D893 00 10 -  -  	.db %00000000, %00010000
  295 D1:D895 -  -  -  -  
  296 D1:D895 -  -  -  -  
  297 D1:D895 -  -  -  -  Branches_14:
  298 D1:D895 20 -  -  -  	.db %00100000
  299 D1:D896 06 0E -  -  	.db 6, 14
  300 D1:D898 30 C3 0C 39 
              E7 9E FF FF 	.db %00110000, %11000011, %00001100, %00111001, %11100111, %10011110, %11111111, %11111111
  301 D1:D8A0 FF FF F0 -  	.db %11111111, %11111111, %11110000
  302 D1:D8A3 -  -  -  -  
  303 D1:D8A3 01 23 -  -  	.db %00000001, %00100011
  304 D1:D8A5 -  -  -  -  
  305 D1:D8A5 00 00 10 20 
              20 20 1D 06 	.db %00000000, %00000000, %00010000, %00100000, %00100000, %00100000, %00011101, %00000110
  306 D1:D8AD 90 65 06 10 
              59 07 90 -  	.db %10010000, %01100101, %00000110, %00010000, %01011001, %00000111, %10010000
  307 D1:D8B4 -  -  -  -  
  308 D1:D8B4 -  -  -  -  
  309 D1:D8B4 -  -  -  -  Leaves_6:
  310 D1:D8B4 10 -  -  -  	.db %00010000
  311 D1:D8B5 0D 0D -  -  	.db 13, 13
  312 D1:D8B7 60 1F C1 FF 
              0E FE F3 FF 	.db %01100000, %00011111, %11000001, %11111111, %00001110, %11111110, %11110011, %11111111
  313 D1:D8BF 87 F8 1F 80 
              3C 01 E0 07 	.db %10000111, %11111000, %00011111, %10000000, %00111100, %00000001, %11100000, %00000111
  314 D1:D8C7 80 3C 00 E0 
              03 00 -  -  	.db %10000000, %00111100, %00000000, %11100000, %00000011, %00000000
  315 D1:D8CD -  -  -  -  
  316 D1:D8CD 54 -  -  -  	.db %01010100
  317 D1:D8CE -  -  -  -  
  318 D1:D8CE 00 24 36 04 
              01 98 00 00 	.db %00000000, %00100100, %00110110, %00000100, %00000001, %10011000, %00000000, %00000000
  319 D1:D8D6 46 60 -  -  	.db %01000110, %01100000
  320 D1:D8D8 -  -  -  -  
  321 D1:D8D8 -  -  -  -  
  322 D1:D8D8 -  -  -  -  Branches_4:
  323 D1:D8D8 20 -  -  -  	.db %00100000
  324 D1:D8D9 12 0E -  -  	.db 18, 14
  325 D1:D8DB 00 03 CF FF 
              FF FF FF FF 	.db %00000000, %00000011, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111
  326 D1:D8E3 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  327 D1:D8EB FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  328 D1:D8F3 FF FF FF 3F 
              FF C0 FF 30 	.db %11111111, %11111111, %11111111, %00111111, %11111111, %11000000, %11111111, %00110000
  329 D1:D8FB -  -  -  -  
  330 D1:D8FB 01 23 -  -  	.db %00000001, %00100011
  331 D1:D8FD -  -  -  -  
  332 D1:D8FD 00 00 00 00 
              00 00 50 45 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %01010000, %01000101
  333 D1:D905 01 55 50 00 
              25 00 14 16 	.db %00000001, %01010101, %01010000, %00000000, %00100101, %00000000, %00010100, %00010110
  334 D1:D90D 11 45 5A 19 
              2A AA 58 3F 	.db %00010001, %01000101, %01011010, %00011001, %00101010, %10101010, %01011000, %00111111
  335 D1:D915 AA AA AF FE 
              BD FF DF E2 	.db %10101010, %10101010, %10101111, %11111110, %10111101, %11111111, %11011111, %11100010
  336 D1:D91D 55 64 02 AA 
              60 00 05 50 	.db %01010101, %01100100, %00000010, %10101010, %01100000, %00000000, %00000101, %01010000
  337 D1:D925 54 15 54 00 
              00 00 00 05 	.db %01010100, %00010101, %01010100, %00000000, %00000000, %00000000, %00000000, %00000101
  338 D1:D92D 10 55 00 00 
              00 00 00 00 	.db %00010000, %01010101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  339 D1:D935 00 -  -  -  	.db %00000000
  340 D1:D936 -  -  -  -  
  341 D1:D936 -  -  -  -  
  342 D1:D936 -  -  -  -  Vines_8:
  343 D1:D936 10 -  -  -  	.db %00010000
  344 D1:D937 0A 18 -  -  	.db 10, 24
  345 D1:D939 07 01 C1 F0 
              3C 07 01 C1 	.db %00000111, %00000001, %11000001, %11110000, %00111100, %00000111, %00000001, %11000001
  346 D1:D941 FC 3B 0E 03 
              80 E0 38 0E 	.db %11111100, %00111011, %00001110, %00000011, %10000000, %11100000, %00111000, %00001110
  347 D1:D949 07 A1 FB 78 
              FC 07 03 80 	.db %00000111, %10100001, %11111011, %01111000, %11111100, %00000111, %00000011, %10000000
  348 D1:D951 E0 3E 0D 87 
              01 C0 -  -  	.db %11100000, %00111110, %00001101, %10000111, %00000001, %11000000
  349 D1:D957 -  -  -  -  
  350 D1:D957 45 -  -  -  	.db %01000101
  351 D1:D958 -  -  -  -  
  352 D1:D958 24 66 D8 F7 
              B6 DB 3B E3 	.db %00100100, %01100110, %11011000, %11110111, %10110110, %11011011, %00111011, %11100011
  353 D1:D960 86 C9 7B B6 	.db %10000110, %11001001, %01111011, %10110110
  354 D1:D964 -  -  -  -  
  355 D1:D964 -  -  -  -  
  356 D1:D964 -  -  -  -  Vines_2:
  357 D1:D964 10 -  -  -  	.db %00010000
  358 D1:D965 16 13 -  -  	.db 22, 19
  359 D1:D967 00 00 04 00 
              00 30 00 39 	.db %00000000, %00000000, %00000100, %00000000, %00000000, %00110000, %00000000, %00111001
  360 D1:D96F C0 00 6F 00 
              10 78 00 63 	.db %11000000, %00000000, %01101111, %00000000, %00010000, %01111000, %00000000, %01100011
  361 D1:D977 C0 01 9F 00 
              07 F0 00 0F 	.db %11000000, %00000001, %10011111, %00000000, %00000111, %11110000, %00000000, %00001111
  362 D1:D97F C0 00 7D 80 
              63 E6 01 DF 	.db %11000000, %00000000, %01111101, %10000000, %01100011, %11100110, %00000001, %11011111
  363 D1:D987 80 01 F6 00 
              0F 80 00 F8 	.db %10000000, %00000001, %11110110, %00000000, %00001111, %10000000, %00000000, %11111000
  364 D1:D98F 00 1F F8 00 
              3C E0 01 E0 	.db %00000000, %00011111, %11111000, %00000000, %00111100, %11100000, %00000001, %11100000
  365 D1:D997 00 0E 00 00 
              00 -  -  -  	.db %00000000, %00001110, %00000000, %00000000, %00000000
  366 D1:D99C -  -  -  -  
  367 D1:D99C 45 -  -  -  	.db %01000101
  368 D1:D99D -  -  -  -  
  369 D1:D99D 21 86 30 C3 
              83 3C F8 7C 	.db %00100001, %10000110, %00110000, %11000011, %10000011, %00111100, %11111000, %01111100
  370 D1:D9A5 1E 7C E7 0F 
              CF 9B -  -  	.db %00011110, %01111100, %11100111, %00001111, %11001111, %10011011
  371 D1:D9AB -  -  -  -  
  372 D1:D9AB -  -  -  -  
  373 D1:D9AB -  -  -  -  Vines_3:
  374 D1:D9AB 10 -  -  -  	.db %00010000
  375 D1:D9AC 18 10 -  -  	.db 24, 16
  376 D1:D9AE 00 00 01 00 
              00 03 00 00 	.db %00000000, %00000000, %00000001, %00000000, %00000000, %00000011, %00000000, %00000000
  377 D1:D9B6 37 00 00 3E 
              00 00 1C 00 	.db %00110111, %00000000, %00000000, %00111110, %00000000, %00000000, %00011100, %00000000
  378 D1:D9BE 10 78 00 30 
              F8 00 1F EC 	.db %00010000, %01111000, %00000000, %00110000, %11111000, %00000000, %00011111, %11101100
  379 D1:D9C6 18 0F CC 18 
              3F 80 0B FE 	.db %00011000, %00001111, %11001100, %00011000, %00111111, %10000000, %00001011, %11111110
  380 D1:D9CE 00 FF F8 00 
              FF C0 00 01 	.db %00000000, %11111111, %11111000, %00000000, %11111111, %11000000, %00000000, %00000001
  381 D1:D9D6 00 00 03 00 
              00 03 00 00 	.db %00000000, %00000000, %00000011, %00000000, %00000000, %00000011, %00000000, %00000000
  382 D1:D9DE -  -  -  -  
  383 D1:D9DE 45 -  -  -  	.db %01000101
  384 D1:D9DF -  -  -  -  
  385 D1:D9DF 03 1B 18 70 
              3C 1F 07 81 	.db %00000011, %00011011, %00011000, %01110000, %00111100, %00011111, %00000111, %10000001
  386 D1:D9E7 E0 7F FF FE 	.db %11100000, %01111111, %11111111, %11111110
  387 D1:D9EB -  -  -  -  
  388 D1:D9EB -  -  -  -  
  389 D1:D9EB -  -  -  -  Vines_5:
  390 D1:D9EB 10 -  -  -  	.db %00010000
  391 D1:D9EC 14 17 -  -  	.db 20, 23
  392 D1:D9EE 00 00 30 00 
              1B 00 01 B0 	.db %00000000, %00000000, %00110000, %00000000, %00011011, %00000000, %00000001, %10110000
  393 D1:D9F6 00 07 00 00 
              F0 00 0E 00 	.db %00000000, %00000111, %00000000, %00000000, %11110000, %00000000, %00001110, %00000000
  394 D1:D9FE 31 C0 01 B8 
              00 0F 80 01 	.db %00110001, %11000000, %00000001, %10111000, %00000000, %00001111, %10000000, %00000001
  395 D1:DA06 F0 00 3E 00 
              47 E0 0F F8 	.db %11110000, %00000000, %00111110, %00000000, %01000111, %11100000, %00001111, %11111000
  396 D1:DA0E 00 5F 00 03 
              E8 00 3C C0 	.db %00000000, %01011111, %00000000, %00000011, %11101000, %00000000, %00111100, %11000000
  397 D1:DA16 0F 8C 00 F0 
              00 3D 00 07 	.db %00001111, %10001100, %00000000, %11110000, %00000000, %00111101, %00000000, %00000111
  398 D1:DA1E D8 00 79 00 
              0F 00 00 E0 	.db %11011000, %00000000, %01111001, %00000000, %00001111, %00000000, %00000000, %11100000
  399 D1:DA26 00 00 -  -  	.db %00000000, %00000000
  400 D1:DA28 -  -  -  -  
  401 D1:DA28 45 -  -  -  	.db %01000101
  402 D1:DA29 -  -  -  -  
  403 D1:DA29 00 59 B0 84 
              67 38 F0 38 	.db %00000000, %01011001, %10110000, %10000100, %01100111, %00111000, %11110000, %00111000
  404 D1:DA31 E7 BE 7D C6 
              7D E6 C0 -  	.db %11100111, %10111110, %01111101, %11000110, %01111101, %11100110, %11000000
  405 D1:DA38 -  -  -  -  
  406 D1:DA38 -  -  -  -  
  407 D1:DA38 -  -  -  -  Vines_9:
  408 D1:DA38 10 -  -  -  	.db %00010000
  409 D1:DA39 18 0B -  -  	.db 24, 11
  410 D1:DA3B 00 18 60 00 
              38 27 0C 27 	.db %00000000, %00011000, %01100000, %00000000, %00111000, %00100111, %00001100, %00100111
  411 D1:DA43 FF 0C 3F FF 
              07 FF F8 1F 	.db %11111111, %00001100, %00111111, %11111111, %00000111, %11111111, %11111000, %00011111
  412 D1:DA4B FE 08 7F F7 
              00 FE 43 00 	.db %11111110, %00001000, %01111111, %11110111, %00000000, %11111110, %01000011, %00000000
  413 D1:DA53 F0 C0 00 E0 
              C0 00 C0 00 	.db %11110000, %11000000, %00000000, %11100000, %11000000, %00000000, %11000000, %00000000
  414 D1:DA5B 00 -  -  -  	.db %00000000
  415 D1:DA5C -  -  -  -  
  416 D1:DA5C 45 -  -  -  	.db %01000101
  417 D1:DA5D -  -  -  -  
  418 D1:DA5D 00 00 03 81 
              FF 81 FF 8F 	.db %00000000, %00000000, %00000011, %10000001, %11111111, %10000001, %11111111, %10001111
  419 D1:DA65 FC 7F F3 FF 
              FF E0 -  -  	.db %11111100, %01111111, %11110011, %11111111, %11111111, %11100000
  420 D1:DA6B -  -  -  -  
  421 D1:DA6B -  -  -  -  
  422 D1:DA6B -  -  -  -  Vines_4:
  423 D1:DA6B 10 -  -  -  	.db %00010000
  424 D1:DA6C 18 0D -  -  	.db 24, 13
  425 D1:DA6E 00 00 C7 00 
              00 DF 00 00 	.db %00000000, %00000000, %11000111, %00000000, %00000000, %11011111, %00000000, %00000000
  426 D1:DA76 3F 00 00 FC 
              00 61 F8 20 	.db %00111111, %00000000, %00000000, %11111100, %00000000, %01100001, %11111000, %00100000
  427 D1:DA7E 6F E0 60 3F 
              80 41 FE 80 	.db %01101111, %11100000, %01100000, %00111111, %10000000, %01000001, %11111110, %10000000
  428 D1:DA86 CF F8 C0 FF 
              C0 40 7C C0 	.db %11001111, %11111000, %11000000, %11111111, %11000000, %01000000, %01111100, %11000000
  429 D1:DA8E 00 01 80 00 
              00 80 00 -  	.db %00000000, %00000001, %10000000, %00000000, %00000000, %10000000, %00000000
  430 D1:DA95 -  -  -  -  
  431 D1:DA95 45 -  -  -  	.db %01000101
  432 D1:DA96 -  -  -  -  
  433 D1:DA96 00 33 C7 0F 
              01 C1 E0 F8 	.db %00000000, %00110011, %11000111, %00001111, %00000001, %11000001, %11100000, %11111000
  434 D1:DA9E 1F F1 FF FE 	.db %00011111, %11110001, %11111111, %11111110
  435 D1:DAA2 -  -  -  -  
  436 D1:DAA2 -  -  -  -  
  437 D1:DAA2 -  -  -  -  Vines_1:
  438 D1:DAA2 10 -  -  -  	.db %00010000
  439 D1:DAA3 18 09 -  -  	.db 24, 9
  440 D1:DAA5 00 06 30 18 
              0E 33 F8 0C 	.db %00000000, %00000110, %00110000, %00011000, %00001110, %00110011, %11111000, %00001100
  441 D1:DAAD 1F FC 07 FF 
              FF FF F0 1F 	.db %00011111, %11111100, %00000111, %11111111, %11111111, %11111111, %11110000, %00011111
  442 D1:DAB5 FE 80 30 00 
              E0 30 00 60 	.db %11111110, %10000000, %00110000, %00000000, %11100000, %00110000, %00000000, %01100000
  443 D1:DABD 30 00 00 -  	.db %00110000, %00000000, %00000000
  444 D1:DAC0 -  -  -  -  
  445 D1:DAC0 45 -  -  -  	.db %01000101
  446 D1:DAC1 -  -  -  -  
  447 D1:DAC1 00 00 00 F0 
              03 FF 00 FF 	.db %00000000, %00000000, %00000000, %11110000, %00000011, %11111111, %00000000, %11111111
  448 D1:DAC9 FF FF FC -  	.db %11111111, %11111111, %11111100
  449 D1:DACC -  -  -  -  
  450 D1:DACC -  -  -  -  
  451 D1:DACC -  -  -  -  Branches_5:
  452 D1:DACC 20 -  -  -  	.db %00100000
  453 D1:DACD 12 0E -  -  	.db 18, 14
  454 D1:DACF 00 C0 CF FF 
              FF FF FF FF 	.db %00000000, %11000000, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111
  455 D1:DAD7 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  456 D1:DADF FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  457 D1:DAE7 FF FF FF 3F 
              FF C3 C3 F0 	.db %11111111, %11111111, %11111111, %00111111, %11111111, %11000011, %11000011, %11110000
  458 D1:DAEF -  -  -  -  
  459 D1:DAEF 01 23 -  -  	.db %00000001, %00100011
  460 D1:DAF1 -  -  -  -  
  461 D1:DAF1 00 00 00 00 
              01 00 05 05 	.db %00000000, %00000000, %00000000, %00000000, %00000001, %00000000, %00000101, %00000101
  462 D1:DAF9 41 41 45 40 
              00 01 15 45 	.db %01000001, %01000001, %01000101, %01000000, %00000000, %00000001, %00010101, %01000101
  463 D1:DB01 55 45 65 A5 
              AA 66 AA FA 	.db %01010101, %01000101, %01100101, %10100101, %10101010, %01100110, %10101010, %11111010
  464 D1:DB09 F9 FF BF FE 
              AA F6 BA 99 	.db %11111001, %11111111, %10111111, %11111110, %10101010, %11110110, %10111010, %10011001
  465 D1:DB11 50 55 55 55 
              51 50 00 01 	.db %01010000, %01010101, %01010101, %01010101, %01010001, %01010000, %00000000, %00000001
  466 D1:DB19 54 51 41 50 
              00 00 01 40 	.db %01010100, %01010001, %01000001, %01010000, %00000000, %00000000, %00000001, %01000000
  467 D1:DB21 15 45 00 00 
              00 00 00 00 	.db %00010101, %01000101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  468 D1:DB29 00 -  -  -  	.db %00000000
  469 D1:DB2A -  -  -  -  
  470 D1:DB2A -  -  -  -  
  471 D1:DB2A -  -  -  -  Vines_6:
  472 D1:DB2A 10 -  -  -  	.db %00010000
  473 D1:DB2B 08 18 -  -  	.db 8, 24
  474 D1:DB2D 38 F8 F8 78 
              3E 3E 38 38 	.db %00111000, %11111000, %11111000, %01111000, %00111110, %00111110, %00111000, %00111000
  475 D1:DB35 38 38 78 78 
              7C 3C 3C 3C 	.db %00111000, %00111000, %01111000, %01111000, %01111100, %00111100, %00111100, %00111100
  476 D1:DB3D 3E 1F 1C 1C 
              1F 1F 1C 1E 	.db %00111110, %00011111, %00011100, %00011100, %00011111, %00011111, %00011100, %00011110
  477 D1:DB45 -  -  -  -  
  478 D1:DB45 54 -  -  -  	.db %01010100
  479 D1:DB46 -  -  -  -  
  480 D1:DB46 56 D1 6F FB 
              25 5D C4 46 	.db %01010110, %11010001, %01101111, %11111011, %00100101, %01011101, %11000100, %01000110
  481 D1:DB4E 6F D2 5F F6 
              00 -  -  -  	.db %01101111, %11010010, %01011111, %11110110, %00000000
  482 D1:DB53 -  -  -  -  
  483 D1:DB53 -  -  -  -  
  484 D1:DB53 -  -  -  -  Branches_3:
  485 D1:DB53 20 -  -  -  	.db %00100000
  486 D1:DB54 12 0E -  -  	.db 18, 14
  487 D1:DB56 0F CF FF FF 
              FF FF FF FF 	.db %00001111, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  488 D1:DB5E FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  489 D1:DB66 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  490 D1:DB6E FF FF FF FF 
              3F FF 00 F0 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %00000000, %11110000
  491 D1:DB76 -  -  -  -  
  492 D1:DB76 01 23 -  -  	.db %00000001, %00100011
  493 D1:DB78 -  -  -  -  
  494 D1:DB78 00 00 00 00 
              50 00 15 55 	.db %00000000, %00000000, %00000000, %00000000, %01010000, %00000000, %00010101, %01010101
  495 D1:DB80 50 15 00 00 
              00 00 00 65 	.db %01010000, %00010101, %00000000, %00000000, %00000000, %00000000, %00000000, %01100101
  496 D1:DB88 05 98 A2 55 
              05 AA 32 AA 	.db %00000101, %10011000, %10100010, %01010101, %00000101, %10101010, %00110010, %10101010
  497 D1:DB90 BD 4B FF FF 
              FF BF EA 95 	.db %10111101, %01001011, %11111111, %11111111, %11111111, %10111111, %11101010, %10010101
  498 D1:DB98 5E AA E6 55 
              A9 55 6A 56 	.db %01011110, %10101010, %11100110, %01010101, %10101001, %01010101, %01101010, %01010110
  499 D1:DBA0 40 12 50 00 
              00 50 01 54 	.db %01000000, %00010010, %01010000, %00000000, %00000000, %01010000, %00000001, %01010100
  500 D1:DBA8 15 54 00 15 
              40 00 00 00 	.db %00010101, %01010100, %00000000, %00010101, %01000000, %00000000, %00000000, %00000000
  501 D1:DBB0 40 00 00 -  	.db %01000000, %00000000, %00000000
  502 D1:DBB3 -  -  -  -  
  503 D1:DBB3 -  -  -  -  
  504 D1:DBB3 -  -  -  -  Branches_2:
  505 D1:DBB3 20 -  -  -  	.db %00100000
  506 D1:DBB4 12 0E -  -  	.db 18, 14
  507 D1:DBB6 0F C3 FF FF 
              FF FF FF FF 	.db %00001111, %11000011, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  508 D1:DBBE FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  509 D1:DBC6 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  510 D1:DBCE FF FF FF FF 
              FF F3 0F 30 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11110011, %00001111, %00110000
  511 D1:DBD6 -  -  -  -  
  512 D1:DBD6 01 32 -  -  	.db %00000001, %00110010
  513 D1:DBD8 -  -  -  -  
  514 D1:DBD8 00 00 00 00 
              50 00 00 05 	.db %00000000, %00000000, %00000000, %00000000, %01010000, %00000000, %00000000, %00000101
  515 D1:DBE0 54 15 55 45 
              40 00 00 00 	.db %01010100, %00010101, %01010101, %01000101, %01000000, %00000000, %00000000, %00000000
  516 D1:DBE8 55 55 14 05 
              59 FF FD 55 	.db %01010101, %01010101, %00010100, %00000101, %01011001, %11111111, %11111101, %01010101
  517 D1:DBF0 47 EA AA AE 
              FF EF FF F6 	.db %01000111, %11101010, %10101010, %10101110, %11111111, %11101111, %11111111, %11110110
  518 D1:DBF8 AA AA 5D 07 
              F4 FF F5 55 	.db %10101010, %10101010, %01011101, %00000111, %11110100, %11111111, %11110101, %01010101
  519 D1:DC00 05 55 75 15 
              15 55 00 00 	.db %00000101, %01010101, %01110101, %00010101, %00010101, %01010101, %00000000, %00000000
  520 D1:DC08 01 00 05 50 
              00 40 05 50 	.db %00000001, %00000000, %00000101, %01010000, %00000000, %01000000, %00000101, %01010000
  521 D1:DC10 00 00 00 -  	.db %00000000, %00000000, %00000000
  522 D1:DC13 -  -  -  -  
  523 D1:DC13 -  -  -  -  
  524 D1:DC13 -  -  -  -  Tree_2:
  525 D1:DC13 10 -  -  -  	.db %00010000
  526 D1:DC14 1A 10 -  -  	.db 26, 16
  527 D1:DC16 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  528 D1:DC1E FF FF FF FF 
              FF 3F FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  529 D1:DC26 CF FF FF F3 
              FF FF FC FF 	.db %11001111, %11111111, %11111111, %11110011, %11111111, %11111111, %11111100, %11111111
  530 D1:DC2E FF FF 3F FF 
              FF CF FF FF 	.db %11111111, %11111111, %00111111, %11111111, %11111111, %11001111, %11111111, %11111111
  531 D1:DC36 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  532 D1:DC3E FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  533 D1:DC46 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  534 D1:DC4A -  -  -  -  
  535 D1:DC4A 01 -  -  -  	.db %00000001
  536 D1:DC4B -  -  -  -  
  537 D1:DC4B 01 12 40 80 
              4C DD 30 33 	.db %00000001, %00010010, %01000000, %10000000, %01001100, %11011101, %00110000, %00110011
  538 D1:DC53 27 CC 02 51 
              E4 02 59 D9 	.db %00100111, %11001100, %00000010, %01010001, %11100100, %00000010, %01011001, %11011001
  539 D1:DC5B 08 69 D9 01 
              69 9B 07 69 	.db %00001000, %01101001, %11011001, %00000001, %01101001, %10011011, %00000111, %01101001
  540 D1:DC63 1E 03 70 3E 
              03 D2 3E 00 	.db %00011110, %00000011, %01110000, %00111110, %00000011, %11010010, %00111110, %00000000
  541 D1:DC6B A5 5C 80 F9 
              75 60 1C 6D 	.db %10100101, %01011100, %10000000, %11111001, %01110101, %01100000, %00011100, %01101101
  542 D1:DC73 18 01 1B 86 
              02 46 69 41 	.db %00011000, %00000001, %00011011, %10000110, %00000010, %01000110, %01101001, %01000001
  543 D1:DC7B 91 82 40 -  	.db %10010001, %10000010, %01000000
  544 D1:DC7E -  -  -  -  
  545 D1:DC7E -  -  -  -  
  546 D1:DC7E -  -  -  -  Tree_4:
  547 D1:DC7E 24 -  -  -  	.db %00100100
  548 D1:DC7F 1A 10 -  -  	.db 26, 16
  549 D1:DC81 01 20 -  -  	.db %00000001, %00100000
  550 D1:DC83 -  -  -  -  
  551 D1:DC83 14 45 40 15 
              54 25 61 44 	.db %00010100, %01000101, %01000000, %00010101, %01010100, %00100101, %01100001, %01000100
  552 D1:DC8B 14 05 55 00 
              41 11 01 45 	.db %00010100, %00000101, %01010101, %00000000, %01000001, %00010001, %00000001, %01000101
  553 D1:DC93 50 54 24 21 
              10 00 95 05 	.db %01010000, %01010100, %00100100, %00100001, %00010000, %00000000, %10010101, %00000101
  554 D1:DC9B 41 41 11 00 
              09 10 94 15 	.db %01000001, %01000001, %00010001, %00000000, %00001001, %00010000, %10010100, %00010101
  555 D1:DCA3 11 11 00 95 
              09 49 45 10 	.db %00010001, %00010001, %00000000, %10010101, %00001001, %01001001, %01000101, %00010000
  556 D1:DCAB 01 09 50 94 
              95 51 00 50 	.db %00000001, %00001001, %01010000, %10010100, %10010101, %01010001, %00000000, %01010000
  557 D1:DCB3 95 09 49 45 
              40 45 09 40 	.db %10010101, %00001001, %01001001, %01000101, %01000000, %01000101, %00001001, %01000000
  558 D1:DCBB 90 95 54 01 
              50 A4 05 05 	.db %10010000, %10010101, %01010100, %00000001, %01010000, %10100100, %00000101, %00000101
  559 D1:DCC3 54 44 45 0A 
              42 50 55 00 	.db %01010100, %01000100, %01000101, %00001010, %01000010, %01010000, %01010101, %00000000
  560 D1:DCCB 10 54 14 95 
              41 02 04 11 	.db %00010000, %01010100, %00010100, %10010101, %01000001, %00000010, %00000100, %00010001
  561 D1:DCD3 52 49 51 00 
              20 51 11 10 	.db %01010010, %01001001, %01010001, %00000000, %00100000, %01010001, %00010001, %00010000
  562 D1:DCDB 91 50 A5 05 
              11 12 15 54 	.db %10010001, %01010000, %10100101, %00000101, %00010001, %00010010, %00010101, %01010100
  563 D1:DCE3 09 54 04 51 
              01 54 40 25 	.db %00001001, %01010100, %00000100, %01010001, %00000001, %01010100, %01000000, %00100101
  564 D1:DCEB -  -  -  -  
  565 D1:DCEB -  -  -  -  
  566 D1:DCEB -  -  -  -  Tree_7:
  567 D1:DCEB 24 -  -  -  	.db %00100100
  568 D1:DCEC 1A 10 -  -  	.db 26, 16
  569 D1:DCEE 10 23 -  -  	.db %00010000, %00100011
  570 D1:DCF0 -  -  -  -  
  571 D1:DCF0 10 05 08 28 
              85 28 81 62 	.db %00010000, %00000101, %00001000, %00101000, %10000101, %00101000, %10000001, %01100010
  572 D1:DCF8 5A 08 88 5C 
              BA 05 81 60 	.db %01011010, %00001000, %10001000, %01011100, %10111010, %00000101, %10000001, %01100000
  573 D1:DD00 88 95 CA B1 
              58 06 A0 49 	.db %10001000, %10010101, %11001010, %10110001, %01011000, %00000110, %10100000, %01001001
  574 D1:DD08 62 89 51 68 
              48 60 16 2A 	.db %01100010, %10001001, %01010001, %01101000, %01001000, %01100000, %00010110, %00101010
  575 D1:DD10 54 15 80 87 
              85 EA 96 00 	.db %01010100, %00010101, %10000000, %10000111, %10000101, %11101010, %10010110, %00000000
  576 D1:DD18 58 82 29 72 
              A1 C0 05 68 	.db %01011000, %10000010, %00101001, %01110010, %10100001, %11000000, %00000101, %01101000
  577 D1:DD20 2A 9E 22 1E 
              18 56 22 A5 	.db %00101010, %10011110, %00100010, %00011110, %00011000, %01010110, %00100010, %10100101
  578 D1:DD28 67 25 80 01 
              62 A9 55 72 	.db %01100111, %00100101, %10000000, %00000001, %01100010, %10101001, %01010101, %01110010
  579 D1:DD30 5A 06 15 8A 
              56 95 97 81 	.db %01011010, %00000110, %00010101, %10001010, %01010110, %10010101, %10010111, %10000001
  580 D1:DD38 00 51 25 A0 
              59 E5 00 15 	.db %00000000, %01010001, %00100101, %10100000, %01011001, %11100101, %00000000, %00010101
  581 D1:DD40 D2 02 A1 58 
              50 41 60 89 	.db %11010010, %00000010, %10100001, %01011000, %01010000, %01000001, %01100000, %10001001
  582 D1:DD48 28 97 96 10 
              16 08 A2 89 	.db %00101000, %10010111, %10010110, %00010000, %00010110, %00001000, %10100010, %10001001
  583 D1:DD50 7B 81 81 62 
              08 22 94 20 	.db %01111011, %10000001, %10000001, %01100010, %00001000, %00100010, %10010100, %00100000
  584 D1:DD58 -  -  -  -  
  585 D1:DD58 -  -  -  -  
  586 D1:DD58 -  -  -  -  Tree_9:
  587 D1:DD58 24 -  -  -  	.db %00100100
  588 D1:DD59 1A 10 -  -  	.db 26, 16
  589 D1:DD5B 20 31 -  -  	.db %00100000, %00110001
  590 D1:DD5D -  -  -  -  
  591 D1:DD5D 14 95 0A A8 
              A8 35 B3 49 	.db %00010100, %10010101, %00001010, %10101000, %10101000, %00110101, %10110011, %01001001
  592 D1:DD65 D2 28 A8 8C 
              58 A0 56 EA 	.db %11010010, %00101000, %10101000, %10001100, %01011000, %10100000, %01010110, %11101010
  593 D1:DD6D AA C8 CD 82 
              17 B8 AA AC 	.db %10101010, %11001000, %11001101, %10000010, %00010111, %10111000, %10101010, %10101100
  594 D1:DD75 83 5B 25 6E 
              CA A8 23 35 	.db %10000011, %01011011, %00100101, %01101110, %11001010, %10101000, %00100011, %00110101
  595 D1:DD7D 88 68 2C 8A 
              A3 8D 60 C6 	.db %10001000, %01101000, %00101100, %10001010, %10100011, %10001101, %01100000, %11000110
  596 D1:DD85 C2 7A AB 0B 
              5A 0B 34 25 	.db %11000010, %01111010, %10101011, %00001011, %01011010, %00001011, %00110100, %00100101
  597 D1:DD8D AA B0 85 0A 
              23 79 52 AA 	.db %10101010, %10110000, %10000101, %00001010, %00100011, %01111001, %01010010, %10101010
  598 D1:DD95 21 63 BE 1E 
              21 68 AA 14 	.db %00100001, %01100011, %10111110, %00011110, %00100001, %01101000, %10101010, %00010100
  599 D1:DD9D 00 71 20 A5 
              EA B5 08 55 	.db %00000000, %01110001, %00100000, %10100101, %11101010, %10110101, %00001000, %01010101
  600 D1:DDA5 80 88 16 2B 
              68 34 5E 20 	.db %10000000, %10001000, %00010110, %00101011, %01101000, %00110100, %01011110, %00100000
  601 D1:DDAD AB 48 AA 8D 
              CD A4 22 A2 	.db %10101011, %01001000, %10101010, %10001101, %11001101, %10100100, %00100010, %10100010
  602 D1:DDB5 8A 0F 5E D7 
              96 2A 28 88 	.db %10001010, %00001111, %01011110, %11010111, %10010110, %00101010, %00101000, %10001000
  603 D1:DDBD D7 81 79 42 
              AA A8 8D 63 	.db %11010111, %10000001, %01111001, %01000010, %10101010, %10101000, %10001101, %01100011
  604 D1:DDC5 -  -  -  -  
  605 D1:DDC5 -  -  -  -  
  606 D1:DDC5 -  -  -  -  Tree_6:
  607 D1:DDC5 24 -  -  -  	.db %00100100
  608 D1:DDC6 1A 10 -  -  	.db 26, 16
  609 D1:DDC8 01 23 -  -  	.db %00000001, %00100011
  610 D1:DDCA -  -  -  -  
  611 D1:DDCA 06 50 5A A5 
              80 A9 98 15 	.db %00000110, %01010000, %01011010, %10100101, %10000000, %10101001, %10011000, %00010101
  612 D1:DDD2 0A 9A 49 29 
              9B 49 50 99 	.db %00001010, %10011010, %01001001, %00101001, %10011011, %01001001, %01010000, %10011001
  613 D1:DDDA 61 83 50 85 
              59 43 66 48 	.db %01100001, %10000011, %01010000, %10000101, %01011001, %01000011, %01100110, %01001000
  614 D1:DDE2 A4 02 15 54 
              2A 69 96 83 	.db %10100100, %00000010, %00010101, %01010100, %00101010, %01101001, %10010110, %10000011
  615 D1:DDEA 80 45 00 9A 
              A9 A4 39 41 	.db %10000000, %01000101, %00000000, %10011010, %10101001, %10100100, %00111001, %01000001
  616 D1:DDF2 41 0B 69 99 
              42 A4 94 90 	.db %01000001, %00001011, %01101001, %10011001, %01000010, %10100100, %10010100, %10010000
  617 D1:DDFA 06 9A 58 19 
              55 05 04 A6 	.db %00000110, %10011010, %01011000, %00011001, %01010101, %00000101, %00000100, %10100110
  618 D1:DE02 66 43 54 42 
              A5 4D A6 55 	.db %01100110, %01000011, %01010100, %01000010, %10100101, %01001101, %10100110, %01010101
  619 D1:DE0A 37 50 95 65 
              69 89 92 75 	.db %00110111, %01010000, %10010101, %01100101, %01101001, %10001001, %10010010, %01110101
  620 D1:DE12 29 69 96 54 
              DA 04 55 54 	.db %00101001, %01101001, %10010110, %01010100, %11011010, %00000100, %01010101, %01010100
  621 D1:DE1A 98 66 4D 10 
              05 59 05 96 	.db %10011000, %01100110, %01001101, %00010000, %00000101, %01011001, %00000101, %10010110
  622 D1:DE22 68 29 0A 41 
              42 69 96 50 	.db %01101000, %00101001, %00001010, %01000001, %01000010, %01101001, %10010110, %01010000
  623 D1:DE2A D6 64 94 25 
              56 65 42 EA 	.db %11010110, %01100100, %10010100, %00100101, %01010110, %01100101, %01000010, %11101010
  624 D1:DE32 -  -  -  -  
  625 D1:DE32 -  -  -  -  
  626 D1:DE32 -  -  -  -  Tree_3:
  627 D1:DE32 24 -  -  -  	.db %00100100
  628 D1:DE33 1A 10 -  -  	.db 26, 16
  629 D1:DE35 10 20 -  -  	.db %00010000, %00100000
  630 D1:DE37 -  -  -  -  
  631 D1:DE37 05 11 05 00 
              05 80 01 45 	.db %00000101, %00010001, %00000101, %00000000, %00000101, %10000000, %00000001, %01000101
  632 D1:DE3F 11 48 45 51 
              40 11 45 10 	.db %00010001, %01001000, %01000101, %01010001, %01000000, %00010001, %01000101, %00010000
  633 D1:DE47 84 58 16 01 
              54 40 54 01 	.db %10000100, %01011000, %00010110, %00000001, %01010100, %01000000, %01010100, %00000001
  634 D1:DE4F 85 64 55 14 
              01 40 18 56 	.db %10000101, %01100100, %01010101, %00010100, %00000001, %01000000, %00011000, %01010110
  635 D1:DE57 04 55 50 56 
              41 85 60 51 	.db %00000100, %01010101, %01010000, %01010110, %01000001, %10000101, %01100000, %01010001
  636 D1:DE5F 51 05 60 14 
              56 05 55 10 	.db %01010001, %00000101, %01100000, %00010100, %01010110, %00000101, %01010101, %00010000
  637 D1:DE67 56 01 41 60 
              54 51 04 58 	.db %01010110, %00000001, %01000001, %01100000, %01010100, %01010001, %00000100, %01011000
  638 D1:DE6F 54 16 85 41 
              14 05 85 40 	.db %01010100, %00010110, %10000101, %01000001, %00010100, %00000101, %10000101, %01000000
  639 D1:DE77 58 45 10 50 
              58 50 01 64 	.db %01011000, %01000101, %00010000, %01010000, %01011000, %01010000, %00000001, %01100100
  640 D1:DE7F 41 10 05 95 
              05 05 44 10 	.db %01000001, %00010000, %00000101, %10010101, %00000101, %00000101, %01000100, %00010000
  641 D1:DE87 14 55 51 50 
              65 51 01 61 	.db %00010100, %01010101, %01010001, %01010000, %01100101, %01010001, %00000001, %01100001
  642 D1:DE8F 54 15 00 11 
              10 16 04 05 	.db %01010100, %00010101, %00000000, %00010001, %00010000, %00010110, %00000100, %00000101
  643 D1:DE97 61 01 15 41 
              60 00 56 00 	.db %01100001, %00000001, %00010101, %01000001, %01100000, %00000000, %01010110, %00000000
  644 D1:DE9F -  -  -  -  
  645 D1:DE9F -  -  -  -  
  646 D1:DE9F -  -  -  -  Tree_0:
  647 D1:DE9F 10 -  -  -  	.db %00010000
  648 D1:DEA0 1A 10 -  -  	.db 26, 16
  649 D1:DEA2 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  650 D1:DEAA FF FF FF FF 
              FF 3F FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  651 D1:DEB2 CF FF FF F3 
              FF FF FC FF 	.db %11001111, %11111111, %11111111, %11110011, %11111111, %11111111, %11111100, %11111111
  652 D1:DEBA FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  653 D1:DEC2 FF FF FF FC 
              FF FF FF 3F 	.db %11111111, %11111111, %11111111, %11111100, %11111111, %11111111, %11111111, %00111111
  654 D1:DECA FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  655 D1:DED2 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  656 D1:DED6 -  -  -  -  
  657 D1:DED6 01 -  -  -  	.db %00000001
  658 D1:DED7 -  -  -  -  
  659 D1:DED7 00 9A 4A 80 
              26 02 90 1A 	.db %00000000, %10011010, %01001010, %10000000, %00100110, %00000010, %10010000, %00011010
  660 D1:DEDF 40 A4 05 9A 
              71 08 AB 73 	.db %01000000, %10100100, %00000101, %10011010, %01110001, %00001000, %10101011, %01110011
  661 D1:DEE7 08 AB 74 09 
              5B 77 02 9A 	.db %00001000, %10101011, %01110100, %00001001, %01011011, %01110111, %00000010, %10011010
  662 D1:DEEF 75 00 B2 1D 
              00 BF 57 40 	.db %01110101, %00000000, %10110010, %00011101, %00000000, %10111111, %01010111, %01000000
  663 D1:DEF7 2B 56 10 2B 
              5F 18 01 9F 	.db %00101011, %01010110, %00010000, %00101011, %01011111, %00011000, %00000001, %10011111
  664 D1:DEFF 0C 00 23 83 
              01 22 E2 40 	.db %00001100, %00000000, %00100011, %10000011, %00000001, %00100010, %11100010, %01000000
  665 D1:DF07 66 2A A0 -  	.db %01100110, %00101010, %10100000
  666 D1:DF0A -  -  -  -  
  667 D1:DF0A -  -  -  -  
  668 D1:DF0A -  -  -  -  Tree_8:
  669 D1:DF0A 24 -  -  -  	.db %00100100
  670 D1:DF0B 1A 10 -  -  	.db 26, 16
  671 D1:DF0D 10 23 -  -  	.db %00010000, %00100011
  672 D1:DF0F -  -  -  -  
  673 D1:DF0F 10 05 62 22 
              85 20 80 40 	.db %00010000, %00000101, %01100010, %00100010, %10000101, %00100000, %10000000, %01000000
  674 D1:DF17 56 82 A0 52 
              2A 06 01 52 	.db %01010110, %10000010, %10100000, %01010010, %00101010, %00000110, %00000001, %01010010
  675 D1:DF1F 28 25 E0 B8 
              60 21 18 8A 	.db %00101000, %00100101, %11100000, %10111000, %01100000, %00100001, %00011000, %10001010
  676 D1:DF27 5E 22 08 12 
              15 8A A1 62 	.db %01011110, %00100010, %00001000, %00010010, %00010101, %10001010, %10100001, %01100010
  677 D1:DF2F 80 04 21 57 
              0A 85 43 00 	.db %10000000, %00000100, %00100001, %01010111, %00001010, %10000101, %01000011, %00000000
  678 D1:DF37 00 11 78 A9 
              17 80 60 02 	.db %00000000, %00010001, %01111000, %10101001, %00010111, %10000000, %01100000, %00000010
  679 D1:DF3F 15 A0 89 7A 
              05 A0 08 57 	.db %00010101, %10100000, %10001001, %01111010, %00000101, %10100000, %00001000, %01010111
  680 D1:DF47 A2 00 80 15 
              05 84 57 0A 	.db %10100010, %00000000, %10000000, %00010101, %00000101, %10000100, %01010111, %00001010
  681 D1:DF4F A6 00 19 5A 
              95 5C 82 55 	.db %10100110, %00000000, %00011001, %01011010, %10010101, %01011100, %10000010, %01010101
  682 D1:DF57 01 57 08 85 
              7A A5 14 15 	.db %00000001, %01010111, %00001000, %10000101, %01111010, %10100101, %00010100, %00010101
  683 D1:DF5F A2 AA 16 A0 
              61 41 68 22 	.db %10100010, %10101010, %00010110, %10100000, %01100001, %01000001, %01101000, %00100010
  684 D1:DF67 A1 56 96 08 
              16 06 22 21 	.db %10100001, %01010110, %10010110, %00001000, %00010110, %00000110, %00100010, %00100001
  685 D1:DF6F 71 61 01 60 
              22 0A 56 1E 	.db %01110001, %01100001, %00000001, %01100000, %00100010, %00001010, %01010110, %00011110
  686 D1:DF77 -  -  -  -  
  687 D1:DF77 -  -  -  -  
  688 D1:DF77 -  -  -  -  Tree_10:
  689 D1:DF77 24 -  -  -  	.db %00100100
  690 D1:DF78 1A 10 -  -  	.db 26, 16
  691 D1:DF7A 12 03 -  -  	.db %00010010, %00000011
  692 D1:DF7C -  -  -  -  
  693 D1:DF7C 19 2A 77 FD 
              DD FA D7 9E 	.db %00011001, %00101010, %01110111, %11111101, %11011101, %11111010, %11010111, %10011110
  694 D1:DF84 25 FF F7 DC 
              AC 65 2B 7F 	.db %00100101, %11111111, %11110111, %11011100, %10101100, %01100101, %00101011, %01111111
  695 D1:DF8C F7 5D D8 C2 
              94 BF 7F FC 	.db %11110111, %01011101, %11011000, %11000010, %10010100, %10111111, %01111111, %11111100
  696 D1:DF94 5F 21 79 77 
              DF FF 2D D6 	.db %01011111, %00100001, %01111001, %01110111, %11011111, %11111111, %00101101, %11010110
  697 D1:DF9C 31 A5 7D FF 
              DF DD 55 38 	.db %00110001, %10100101, %01111101, %11111111, %11011111, %11011101, %01010101, %00111000
  698 D1:DFA4 D7 C7 7D F5 
              73 54 AD 77 	.db %11010111, %11000111, %01111101, %11110101, %01110011, %01010100, %10101101, %01110111
  699 D1:DFAC FF FF 75 5D 
              59 D7 73 F7 	.db %11111111, %11111111, %01110101, %01011101, %01011001, %11010111, %01110011, %11110111
  700 D1:DFB4 61 47 A6 B4 
              77 7F F6 1D 	.db %01100001, %01000111, %10100110, %10110100, %01110111, %01111111, %11110110, %00011101
  701 D1:DFBC F9 60 05 D7 
              FF E8 7A 0A 	.db %11111001, %01100000, %00000101, %11010111, %11111111, %11101000, %01111010, %00001010
  702 D1:DFC4 35 2D 7F FD 
              A8 AA 95 18 	.db %00110101, %00101101, %01111111, %11111101, %10101000, %10101010, %10010101, %00011000
  703 D1:DFCC 1F FF CE A8 
              A1 96 95 FD 	.db %00011111, %11111111, %11001110, %10101000, %10100001, %10010110, %10010101, %11111101
  704 D1:DFD4 FD F2 12 6D 
              6B 5F FF DF 	.db %11111101, %11110010, %00010010, %01101101, %01101011, %01011111, %11111111, %11011111
  705 D1:DFDC E1 52 8E B7 
              F7 DD 5E B1 	.db %11100001, %01010010, %10001110, %10110111, %11110111, %11011101, %01011110, %10110001
  706 D1:DFE4 -  -  -  -  
  707 D1:DFE4 -  -  -  -  
  708 D1:DFE4 -  -  -  -  Tree_1:
  709 D1:DFE4 10 -  -  -  	.db %00010000
  710 D1:DFE5 1A 10 -  -  	.db 26, 16
  711 D1:DFE7 FF FF FF FF 
              FF FF F3 FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11110011, %11111111
  712 D1:DFEF FF FC FF FF 
              FF 3F FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  713 D1:DFF7 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  714 D1:DFFF FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  715 D1:E007 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  716 D1:E00F FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  717 D1:E017 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  718 D1:E01B -  -  -  -  
  719 D1:E01B 01 -  -  -  	.db %00000001
  720 D1:E01C -  -  -  -  
  721 D1:E01C 01 00 48 80 
              69 35 30 4A 	.db %00000001, %00000000, %01001000, %10000000, %01101001, %00110101, %00110000, %01001010
  722 D1:E024 27 20 48 C6 
              61 D5 C6 60 	.db %00100111, %00100000, %01001000, %11000110, %01100001, %11010101, %11000110, %01100000
  723 D1:E02C E7 73 AC 29 
              DC E9 0B 55 	.db %11100111, %01110011, %10101100, %00101001, %11011100, %11101001, %00001011, %01010101
  724 D1:E034 5A 44 FE 58 
              80 2B 92 28 	.db %01011010, %01000100, %11111110, %01011000, %10000000, %00101011, %10010010, %00101000
  725 D1:E03C 0E C2 82 03 
              B0 74 C1 2D 	.db %00001110, %11000010, %10000010, %00000011, %10110000, %01110100, %11000001, %00101101
  726 D1:E044 5F 10 09 73 
              E4 0A 5C F2 	.db %01011111, %00010000, %00001001, %01110011, %11100100, %00001010, %01011100, %11110010
  727 D1:E04C 04 92 3C 80 	.db %00000100, %10010010, %00111100, %10000000
  728 D1:E050 -  -  -  -  
  729 D1:E050 -  -  -  -  
  730 D1:E050 -  -  -  -  Tree_5:
  731 D1:E050 24 -  -  -  	.db %00100100
  732 D1:E051 1A 10 -  -  	.db 26, 16
  733 D1:E053 10 20 -  -  	.db %00010000, %00100000
  734 D1:E055 -  -  -  -  
  735 D1:E055 11 10 15 00 
              05 40 01 15 	.db %00010001, %00010000, %00010101, %00000000, %00000101, %01000000, %00000001, %00010101
  736 D1:E05D 05 50 04 56 
              00 15 44 41 	.db %00000101, %01010000, %00000100, %01010110, %00000000, %00010101, %01000100, %01000001
  737 D1:E065 60 05 60 61 
              04 55 16 04 	.db %01100000, %00000101, %01100000, %01100001, %00000100, %01010101, %00010110, %00000100
  738 D1:E06D 50 06 11 41 
              60 60 05 81 	.db %01010000, %00000110, %00010001, %01000001, %01100000, %01100000, %00000101, %10000001
  739 D1:E075 45 44 56 08 
              00 50 10 54 	.db %01000101, %01000100, %01010110, %00001000, %00000000, %01010000, %00010000, %01010100
  740 D1:E07D 45 60 00 16 
              05 80 44 44 	.db %01000101, %01100000, %00000000, %00010110, %00000101, %10000000, %01000100, %01000100
  741 D1:E085 10 15 80 58 
              15 44 41 04 	.db %00010000, %00010101, %10000000, %01011000, %00010101, %01000100, %01000001, %00000100
  742 D1:E08D 58 05 01 55 
              46 01 54 00 	.db %01011000, %00000101, %00000001, %01010101, %01000110, %00000001, %01010100, %00000000
  743 D1:E095 10 15 54 58 
              45 81 01 45 	.db %00010000, %00010101, %01010100, %01011000, %01000101, %10000001, %00000001, %01000101
  744 D1:E09D 45 45 05 60 
              00 04 50 44 	.db %01000101, %01000101, %00000101, %01100000, %00000000, %00000100, %01010000, %01000100
  745 D1:E0A5 19 5A 04 40 
              45 40 51 95 	.db %00011001, %01011010, %00000100, %01000000, %01000101, %01000000, %01010001, %10010101
  746 D1:E0AD A0 16 10 45 
              11 01 58 04 	.db %10100000, %00010110, %00010000, %01000101, %00010001, %00000001, %01011000, %00000100
  747 D1:E0B5 68 14 51 10 
              14 00 15 80 	.db %01101000, %00010100, %01010001, %00010000, %00010100, %00000000, %00010101, %10000000
  748 D1:E0BD -  -  -  -  
  749 D1:E0BD -  -  -  -  
  750 D1:E0BD -  -  -  -  Tree_11:
  751 D1:E0BD 24 -  -  -  	.db %00100100
  752 D1:E0BE 1A 10 -  -  	.db 26, 16
  753 D1:E0C0 20 13 -  -  	.db %00100000, %00010011
  754 D1:E0C2 -  -  -  -  
  755 D1:E0C2 10 95 33 CF 
              30 C5 C3 42 	.db %00010000, %10010101, %00110011, %11001111, %00110000, %11000101, %11000011, %01000010
  756 D1:E0CA 43 F3 F3 FF 
              58 37 97 FC 	.db %01000011, %11110011, %11110011, %11111111, %01011000, %00110111, %10010111, %11111100
  757 D1:E0D2 F3 6F 35 B3 
              E5 7F FC C6 	.db %11110011, %01101111, %00110101, %10110011, %11100101, %01111111, %11111100, %11000110
  758 D1:E0DA 3F 6E 3F 55 
              FF F9 4C D5 	.db %00111111, %01101110, %00111111, %01010101, %11111111, %11111001, %01001100, %11010101
  759 D1:E0E2 30 B7 97 FE 
              50 CD 6F C9 	.db %00110000, %10110111, %10010111, %11111110, %01010000, %11001101, %01101111, %11001001
  760 D1:E0EA 48 F3 96 C3 
              58 C8 54 CF 	.db %01001000, %11110011, %10010110, %11000011, %01011000, %11001000, %01010100, %11001111
  761 D1:E0F2 C5 6C CE 3C 
              15 CC F1 5B 	.db %11000101, %01101100, %11001110, %00111100, %00010101, %11001100, %11110001, %01011011
  762 D1:E0FA FC C3 05 50 
              CC 56 CE FC 	.db %11111100, %11000011, %00000101, %01010000, %11001100, %01010110, %11001110, %11111100
  763 D1:E102 DB 59 43 DA 
              FF E8 CE 5C 	.db %11011011, %01011001, %01000011, %11011010, %11111111, %11101000, %11001110, %01011100
  764 D1:E10A 94 31 FF FF 
              94 F5 C1 43 	.db %10010100, %00110001, %11111111, %11111111, %10010100, %11110101, %11000001, %01000011
  765 D1:E112 3F FF F9 73 
              11 25 33 CF 	.db %00111111, %11111111, %11111001, %01110011, %00010001, %00100101, %00110011, %11001111
  766 D1:E11A FC A5 3C 10 
              50 FF CC CE 	.db %11111100, %10100101, %00111100, %00010000, %01010000, %11111111, %11001100, %11001110
  767 D1:E122 5C C9 69 7F 
              33 F0 CD 4F 	.db %01011100, %11001001, %01101001, %01111111, %00110011, %11110000, %11001101, %01001111
  768 D1:E12A -  -  -  -  
  769 D1:E12A -  -  -  -  
  770 D1:E12A -  -  -  -  Branches_1:
  771 D1:E12A 20 -  -  -  	.db %00100000
  772 D1:E12B 12 0E -  -  	.db 18, 14
  773 D1:E12D 3F 00 3F FC 
              0F FF F3 FF 	.db %00111111, %00000000, %00111111, %11111100, %00001111, %11111111, %11110011, %11111111
  774 D1:E135 FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  775 D1:E13D FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  776 D1:E145 F3 FF FC FF 
              FC 3C FC 00 	.db %11110011, %11111111, %11111100, %11111111, %11111100, %00111100, %11111100, %00000000
  777 D1:E14D -  -  -  -  
  778 D1:E14D 01 23 -  -  	.db %00000001, %00100011
  779 D1:E14F -  -  -  -  
  780 D1:E14F 00 00 05 00 
              05 55 55 00 	.db %00000000, %00000000, %00000101, %00000000, %00000101, %01010101, %01010101, %00000000
  781 D1:E157 00 50 15 44 
              05 45 52 94 	.db %00000000, %01010000, %00010101, %01000100, %00000101, %01000101, %01010010, %10010100
  782 D1:E15F 40 4A AA 95 
              84 0A AE AB 	.db %01000000, %01001010, %10101010, %10010101, %10000100, %00001010, %10101110, %10101011
  783 D1:E167 F5 50 FF FF 
              EA A0 02 AA 	.db %11110101, %01010000, %11111111, %11111111, %11101010, %10100000, %00000010, %10101010
  784 D1:E16F A6 54 00 A1 
              15 40 14 00 	.db %10100110, %01010100, %00000000, %10100001, %00010101, %01000000, %00010100, %00000000
  785 D1:E177 05 45 44 01 
              45 50 00 00 	.db %00000101, %01000101, %01000100, %00000001, %01000101, %01010000, %00000000, %00000000
  786 D1:E17F 00 00 00 00 
              00 00 -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  787 D1:E185 -  -  -  -  
  788 D1:E185 -  -  -  -  
  789 D1:E185 -  -  -  -  Vines_7:
  790 D1:E185 10 -  -  -  	.db %00010000
  791 D1:E186 0A 18 -  -  	.db 10, 24
  792 D1:E188 C0 30 0C 03 
              90 EC 3F 07 	.db %11000000, %00110000, %00001100, %00000011, %10010000, %11101100, %00111111, %00000111
  793 D1:E190 00 C0 78 1E 
              03 80 E0 3C 	.db %00000000, %11000000, %01111000, %00011110, %00000011, %10000000, %11100000, %00111100
  794 D1:E198 07 00 C0 F0 
              3C 03 B0 7C 	.db %00000111, %00000000, %11000000, %11110000, %00111100, %00000011, %10110000, %01111100
  795 D1:E1A0 1C 03 00 E0 
              38 06 -  -  	.db %00011100, %00000011, %00000000, %11100000, %00111000, %00000110
  796 D1:E1A6 -  -  -  -  
  797 D1:E1A6 54 -  -  -  	.db %01010100
  798 D1:E1A7 -  -  -  -  
  799 D1:E1A7 54 CE 79 6F 
              49 36 FE 9D 	.db %01010100, %11001110, %01111001, %01101111, %01001001, %00110110, %11111110, %10011101
  800 D1:E1AF EF 4A -  -  	.db %11101111, %01001010
  801 D1:E1B1 -  -  -  -  
  802 D1:E1B1 -  -  -  -  
  803 D1:E1B1 -  -  -  -  Vines_10:
  804 D1:E1B1 10 -  -  -  	.db %00010000
  805 D1:E1B2 18 0E -  -  	.db 24, 14
  806 D1:E1B4 00 40 00 FC 
              E0 00 FF 80 	.db %00000000, %01000000, %00000000, %11111100, %11100000, %00000000, %11111111, %10000000
  807 D1:E1BC 00 FF 83 00 
              1F E6 00 33 	.db %00000000, %11111111, %10000011, %00000000, %00011111, %11100110, %00000000, %00110011
  808 D1:E1C4 FC 00 10 FF 
              0C 00 1F CC 	.db %11111100, %00000000, %00010000, %11111111, %00001100, %00000000, %00011111, %11001100
  809 D1:E1CC 00 37 E8 00 
              31 F8 00 01 	.db %00000000, %00110111, %11101000, %00000000, %00110001, %11111000, %00000000, %00000001
  810 D1:E1D4 FC 00 03 3F 
              00 03 9F 00 	.db %11111100, %00000000, %00000011, %00111111, %00000000, %00000011, %10011111, %00000000
  811 D1:E1DC 00 07 -  -  	.db %00000000, %00000111
  812 D1:E1DE -  -  -  -  
  813 D1:E1DE 45 -  -  -  	.db %01000101
  814 D1:E1DF -  -  -  -  
  815 D1:E1DF 00 3E 1F C3 
              F0 FE 3F 07 	.db %00000000, %00111110, %00011111, %11000011, %11110000, %11111110, %00111111, %00000111
  816 D1:E1E7 83 F1 F9 F3 
              E3 FF 80 -  	.db %10000011, %11110001, %11111001, %11110011, %11100011, %11111111, %10000000
  817 D1:E1EE -  -  -  -  
  818 D1:E1EE -  -  -  -  
  819 D1:E1EE -  -  -  -  Branches_0:
  820 D1:E1EE 20 -  -  -  	.db %00100000
  821 D1:E1EF 12 0E -  -  	.db 18, 14
  822 D1:E1F1 CC 00 3F CF 
              0F FF F3 FF 	.db %11001100, %00000000, %00111111, %11001111, %00001111, %11111111, %11110011, %11111111
  823 D1:E1F9 FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  824 D1:E201 FF FF FF FF 
              3F FF CF FF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11001111, %11111111
  825 D1:E209 F3 FF F0 FF 
              FC 3F 30 00 	.db %11110011, %11111111, %11110000, %11111111, %11111100, %00111111, %00110000, %00000000
  826 D1:E211 -  -  -  -  
  827 D1:E211 01 23 -  -  	.db %00000001, %00100011
  828 D1:E213 -  -  -  -  
  829 D1:E213 00 00 00 00 
              15 40 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00010101, %01000000, %00000000, %00000000
  830 D1:E21B 40 51 45 40 
              04 00 00 10 	.db %01000000, %01010001, %01000101, %01000000, %00000100, %00000000, %00000000, %00010000
  831 D1:E223 05 45 5A 01 
              10 BA AA F5 	.db %00000101, %01000101, %01011010, %00000001, %00010000, %10111010, %10101010, %11110101
  832 D1:E22B 41 0F FF FA 
              95 10 AA AA 	.db %01000001, %00001111, %11111111, %11111010, %10010101, %00010000, %10101010, %10101010
  833 D1:E233 55 04 55 51 
              44 00 00 05 	.db %01010101, %00000100, %01010101, %01010001, %01000100, %00000000, %00000000, %00000101
  834 D1:E23B 40 40 00 50 
              14 05 40 00 	.db %01000000, %01000000, %00000000, %01010000, %00010100, %00000101, %01000000, %00000000
  835 D1:E243 00 00 00 -  	.db %00000000, %00000000, %00000000
  836 D1:E246 -  -  -  -  
  837 D1:E246 -  -  -  -  
  838 D1:E246 -  -  -  -  Clouds_2:
  839 D1:E246 14 -  -  -  	.db %00010100
  840 D1:E247 10 10 -  -  	.db 16, 16
  841 D1:E249 67 -  -  -  	.db %01100111
  842 D1:E24A -  -  -  -  
  843 D1:E24A 00 00 00 00 
              00 08 40 0E 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001000, %01000000, %00001110
  844 D1:E252 B0 C3 1F 80 
              00 00 00 00 	.db %10110000, %11000011, %00011111, %10000000, %00000000, %00000000, %00000000, %00000000
  845 D1:E25A 60 02 80 01 
              01 F0 20 1E 	.db %01100000, %00000010, %10000000, %00000001, %00000001, %11110000, %00100000, %00011110
  846 D1:E262 30 00 1F 08 
              01 F8 00 00 	.db %00110000, %00000000, %00011111, %00001000, %00000001, %11111000, %00000000, %00000000
  847 D1:E26A -  -  -  -  
  848 D1:E26A -  -  -  -  
  849 D1:E26A -  -  -  -  GroundDirtDark:
  850 D1:E26A 24 -  -  -  	.db %00100100
  851 D1:E26B 10 0C -  -  	.db 16, 12
  852 D1:E26D 01 50 -  -  	.db %00000001, %01010000
  853 D1:E26F -  -  -  -  
  854 D1:E26F 00 00 00 00 
              00 00 00 04 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000100
  855 D1:E277 58 08 00 01 
              08 08 25 40 	.db %01011000, %00001000, %00000000, %00000001, %00001000, %00001000, %00100101, %01000000
  856 D1:E27F 00 00 20 54 
              01 50 00 08 	.db %00000000, %00000000, %00100000, %01010100, %00000001, %01010000, %00000000, %00001000
  857 D1:E287 00 14 00 08 
              20 00 00 00 	.db %00000000, %00010100, %00000000, %00001000, %00100000, %00000000, %00000000, %00000000
  858 D1:E28F 20 00 50 00 
              52 12 05 05 	.db %00100000, %00000000, %01010000, %00000000, %01010010, %00010010, %00000101, %00000101
  859 D1:E297 02 44 80 40 
              00 00 00 00 	.db %00000010, %01000100, %10000000, %01000000, %00000000, %00000000, %00000000, %00000000
  860 D1:E29F -  -  -  -  
  861 D1:E29F -  -  -  -  
  862 D1:E29F -  -  -  -  GroundHumpDark:
  863 D1:E29F 20 -  -  -  	.db %00100000
  864 D1:E2A0 10 0D -  -  	.db 16, 13
  865 D1:E2A2 03 F0 0F FC 
              3F FC FF FF 	.db %00000011, %11110000, %00001111, %11111100, %00111111, %11111100, %11111111, %11111111
  866 D1:E2AA FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  867 D1:E2B2 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  868 D1:E2BA FF FF -  -  	.db %11111111, %11111111
  869 D1:E2BC -  -  -  -  
  870 D1:E2BC 10 50 -  -  	.db %00010000, %01010000
  871 D1:E2BE -  -  -  -  
  872 D1:E2BE 00 00 55 40 
              01 55 54 05 	.db %00000000, %00000000, %01010101, %01000000, %00000001, %01010101, %01010100, %00000101
  873 D1:E2C6 55 56 50 95 
              59 56 55 95 	.db %01010101, %01010110, %01010000, %10010101, %01011001, %01010110, %01010101, %10010101
  874 D1:E2CE 59 05 59 51 
              59 50 09 44 	.db %01011001, %00000101, %01011001, %01010001, %01011001, %01010000, %00001001, %01000100
  875 D1:E2D6 05 55 55 56 
              55 56 55 56 	.db %00000101, %01010101, %01010101, %01010110, %01010101, %01010110, %01010101, %01010110
  876 D1:E2DE 95 49 55 45 
              94 18 15 11 	.db %10010101, %01001001, %01010101, %01000101, %10010100, %00011000, %00010101, %00010001
  877 D1:E2E6 56 55 54 55 
              59 55 55 -  	.db %01010110, %01010101, %01010100, %01010101, %01011001, %01010101, %01010101
  878 D1:E2ED -  -  -  -  
  879 D1:E2ED -  -  -  -  
  880 D1:E2ED -  -  -  -  GroundGrassSmall:
  881 D1:E2ED 08 -  -  -  	.db %00001000
  882 D1:E2EE 10 0F -  -  	.db 16, 15
  883 D1:E2F0 30 C0 30 C0 
              F3 CC F3 CC 	.db %00110000, %11000000, %00110000, %11000000, %11110011, %11001100, %11110011, %11001100
  884 D1:E2F8 F3 0C C3 0F 
              C3 0F C3 03 	.db %11110011, %00001100, %11000011, %00001111, %11000011, %00001111, %11000011, %00000011
  885 D1:E300 C3 03 C3 33 
              C3 33 C3 33 	.db %11000011, %00000011, %11000011, %00110011, %11000011, %00110011, %11000011, %00110011
  886 D1:E308 C3 33 C3 33 
              C0 33 -  -  	.db %11000011, %00110011, %11000011, %00110011, %11000000, %00110011
  887 D1:E30E -  -  -  -  
  888 D1:E30E 50 -  -  -  	.db %01010000
  889 D1:E30F -  -  -  -  
  890 D1:E30F -  -  -  -  
  891 D1:E30F -  -  -  -  
  892 D1:E30F -  -  -  -  Tree_16:
  893 D1:E30F 08 -  -  -  	.db %00001000
  894 D1:E310 0A 10 -  -  	.db 10, 16
  895 D1:E312 3C 0F 03 C0 
              F0 3C 0F 0F 	.db %00111100, %00001111, %00000011, %11000000, %11110000, %00111100, %00001111, %00001111
  896 D1:E31A C0 F0 3C 0F 
              03 FC FC 3C 	.db %11000000, %11110000, %00111100, %00001111, %00000011, %11111100, %11111100, %00111100
  897 D1:E322 0F 03 C0 F0 	.db %00001111, %00000011, %11000000, %11110000
  898 D1:E326 -  -  -  -  
  899 D1:E326 00 -  -  -  	.db %00000000
  900 D1:E327 -  -  -  -  
  901 D1:E327 -  -  -  -  
  902 D1:E327 -  -  -  -  
  903 D1:E327 -  -  -  -  Tree_17:
  904 D1:E327 08 -  -  -  	.db %00001000
  905 D1:E328 07 0E -  -  	.db 7, 14
  906 D1:E32A 0C 18 77 E1 
              C3 0F 9E 70 	.db %00001100, %00011000, %01110111, %11100001, %11000011, %00001111, %10011110, %01110000
  907 D1:E332 E3 C7 0C 18 
              00 -  -  -  	.db %11100011, %11000111, %00001100, %00011000, %00000000
  908 D1:E337 -  -  -  -  
  909 D1:E337 00 -  -  -  	.db %00000000
  910 D1:E338 -  -  -  -  
  911 D1:E338 -  -  -  -  
  912 D1:E338 -  -  -  -  
  913 D1:E338 -  -  -  -  Leaves_8:
  914 D1:E338 10 -  -  -  	.db %00010000
  915 D1:E339 10 0E -  -  	.db 16, 14
  916 D1:E33B 03 C0 0F F0 
              3F F0 3F FC 	.db %00000011, %11000000, %00001111, %11110000, %00111111, %11110000, %00111111, %11111100
  917 D1:E343 FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  918 D1:E34B FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  919 D1:E353 FF FC 30 30 	.db %11111111, %11111100, %00110000, %00110000
  920 D1:E357 -  -  -  -  
  921 D1:E357 54 -  -  -  	.db %01010100
  922 D1:E358 -  -  -  -  
  923 D1:E358 00 03 00 67 
              00 70 80 00 	.db %00000000, %00000011, %00000000, %01100111, %00000000, %01110000, %10000000, %00000000
  924 D1:E360 F0 1C 1E 70 
              01 81 10 03 	.db %11110000, %00011100, %00011110, %01110000, %00000001, %10000001, %00010000, %00000011
  925 D1:E368 F0 0E 03 C0 
              00 00 00 -  	.db %11110000, %00001110, %00000011, %11000000, %00000000, %00000000, %00000000
  926 D1:E36F -  -  -  -  
  927 D1:E36F -  -  -  -  
  928 D1:E36F -  -  -  -  Tree_18:
  929 D1:E36F 08 -  -  -  	.db %00001000
  930 D1:E370 07 0E -  -  	.db 7, 14
  931 D1:E372 18 30 C7 83 
              06 0C 1C 1E 	.db %00011000, %00110000, %11000111, %10000011, %00000110, %00001100, %00011100, %00011110
  932 D1:E37A 30 60 C1 83 
              00 -  -  -  	.db %00110000, %01100000, %11000001, %10000011, %00000000
  933 D1:E37F -  -  -  -  
  934 D1:E37F 00 -  -  -  	.db %00000000
  935 D1:E380 -  -  -  -  
  936 D1:E380 -  -  -  -  
  937 D1:E380 -  -  -  -  
  938 D1:E380 -  -  -  -  Clouds_0:
  939 D1:E380 10 -  -  -  	.db %00010000
  940 D1:E381 10 0A -  -  	.db 16, 10
  941 D1:E383 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  942 D1:E38B FF FF FF FF 
              FF FF 3F FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111
  943 D1:E393 0F CC 03 00 	.db %00001111, %11001100, %00000011, %00000000
  944 D1:E397 -  -  -  -  
  945 D1:E397 67 -  -  -  	.db %01100111
  946 D1:E398 -  -  -  -  
  947 D1:E398 00 40 31 84 
              13 1C 0E 20 	.db %00000000, %01000000, %00110001, %10000100, %00010011, %00011100, %00001110, %00100000
  948 D1:E3A0 00 00 E0 00 
              F0 77 F3 FF 	.db %00000000, %00000000, %11100000, %00000000, %11110000, %01110111, %11110011, %11111111
  949 D1:E3A8 FF -  -  -  	.db %11111111
  950 D1:E3A9 -  -  -  -  
  951 D1:E3A9 -  -  -  -  
  952 D1:E3A9 -  -  -  -  Clouds_1:
  953 D1:E3A9 10 -  -  -  	.db %00010000
  954 D1:E3AA 0C 0E -  -  	.db 12, 14
  955 D1:E3AC 03 F0 FF 3F 
              F3 FF FF FF 	.db %00000011, %11110000, %11111111, %00111111, %11110011, %11111111, %11111111, %11111111
  956 D1:E3B4 FF 3F F0 FF 
              0F F0 FF 0F 	.db %11111111, %00111111, %11110000, %11111111, %00001111, %11110000, %11111111, %00001111
  957 D1:E3BC F0 3F 00 F0 
              03 -  -  -  	.db %11110000, %00111111, %00000000, %11110000, %00000011
  958 D1:E3C1 -  -  -  -  
  959 D1:E3C1 76 -  -  -  	.db %01110110
  960 D1:E3C2 -  -  -  -  
  961 D1:E3C2 3C 7C 3B 3E 
              47 F0 37 C5 	.db %00111100, %01111100, %00111011, %00111110, %01000111, %11110000, %00110111, %11000101
  962 D1:E3CA F6 73 B1 F0 
              70 40 -  -  	.db %11110110, %01110011, %10110001, %11110000, %01110000, %01000000
  963 D1:E3D0 -  -  -  -  
  964 D1:E3D0 -  -  -  -  
  965 D1:E3D0 -  -  -  -  Clouds_3:
  966 D1:E3D0 10 -  -  -  	.db %00010000
  967 D1:E3D1 10 0B -  -  	.db 16, 11
  968 D1:E3D3 03 00 0F C0 
              3F C0 FF F3 	.db %00000011, %00000000, %00001111, %11000000, %00111111, %11000000, %11111111, %11110011
  969 D1:E3DB FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  970 D1:E3E3 FF FF FF FF 
              FF FF -  -  	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  971 D1:E3E9 -  -  -  -  
  972 D1:E3E9 76 -  -  -  	.db %01110110
  973 D1:E3EA -  -  -  -  
  974 D1:E3EA 00 0C 07 80 
              FF 03 FF C6 	.db %00000000, %00001100, %00000111, %10000000, %11111111, %00000011, %11111111, %11000110
  975 D1:E3F2 7F FF 3C FB 
              83 E7 FF FF 	.db %01111111, %11111111, %00111100, %11111011, %10000011, %11100111, %11111111, %11111111
  976 D1:E3FA FF FC -  -  	.db %11111111, %11111100
  977 D1:E3FC -  -  -  -  
  978 D1:E3FC -  -  -  -  
  979 D1:E3FC -  -  -  -  Clouds_4:
  980 D1:E3FC 10 -  -  -  	.db %00010000
  981 D1:E3FD 08 0A -  -  	.db 8, 10
  982 D1:E3FF 03 0F 3F 3F 
              FF FF FF FF 	.db %00000011, %00001111, %00111111, %00111111, %11111111, %11111111, %11111111, %11111111
  983 D1:E407 FF FF -  -  	.db %11111111, %11111111
  984 D1:E409 -  -  -  -  
  985 D1:E409 76 -  -  -  	.db %01110110
  986 D1:E40A -  -  -  -  
  987 D1:E40A 00 11 C3 C7 
              C5 CE 4F CF 	.db %00000000, %00010001, %11000011, %11000111, %11000101, %11001110, %01001111, %11001111
  988 D1:E412 C0 -  -  -  	.db %11000000
  989 D1:E413 -  -  -  -  
  990 D1:E413 -  -  -  -  
  991 D1:E413 -  -  -  -  Frog_0:
  992 D1:E413 40 -  -  -  	.db %01000000
  993 D1:E414 19 13 -  -  	.db 25, 19
  994 D1:E416 00 0F FE 00 
              1F FF 80 3F 	.db %00000000, %00001111, %11111110, %00000000, %00011111, %11111111, %10000000, %00111111
  995 D1:E41E FF E0 3F FF 
              F0 3F FF F8 	.db %11111111, %11100000, %00111111, %11111111, %11110000, %00111111, %11111111, %11111000
  996 D1:E426 7F FF FC 7F 
              FF FE FF FF 	.db %01111111, %11111111, %11111100, %01111111, %11111111, %11111110, %11111111, %11111111
  997 D1:E42E FF 7F FF FF 
              FF FF FF BF 	.db %11111111, %01111111, %11111111, %11111111, %11111111, %11111111, %11111111, %10111111
  998 D1:E436 FF FF DF FF 
              FF 8F FF FF 	.db %11111111, %11111111, %11011111, %11111111, %11111111, %10001111, %11111111, %11111111
  999 D1:E43E 87 FF FF C3 
              FF FF F1 FF 	.db %10000111, %11111111, %11111111, %11000011, %11111111, %11111111, %11110001, %11111111
 1000 D1:E446 FF FC FF FF 
              FE 7F FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111110, %01111111, %11111111, %11111111
 1001 D1:E44E 1F FF FF 80 	.db %00011111, %11111111, %11111111, %10000000
 1002 D1:E452 -  -  -  -  
 1003 D1:E452 95 46 80 00 	.db %10010101, %01000110, %10000000, %00000000
 1004 D1:E456 -  -  -  -  
 1005 D1:E456 00 00 00 00 
              00 09 24 92 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001001, %00100100, %10010010
 1006 D1:E45E 48 00 02 4A 
              49 24 89 00 	.db %01001000, %00000000, %00000010, %01001010, %01001001, %00100100, %10001001, %00000000
 1007 D1:E466 02 4A 49 26 
              4A 44 80 09 	.db %00000010, %01001010, %01001001, %00100110, %01001010, %01000100, %10000000, %00001001
 1008 D1:E46E 49 14 93 25 
              24 40 00 94 	.db %01001001, %00010100, %10010011, %00100101, %00100100, %01000000, %00000000, %10010100
 1009 D1:E476 91 45 26 DA 
              48 80 09 29 	.db %10010001, %01000101, %00100110, %11011010, %01001000, %10000000, %00001001, %00101001
 1010 D1:E47E 14 92 49 24 
              89 20 00 4A 	.db %00010100, %10010010, %01001001, %00100100, %10001001, %00100000, %00000000, %01001010
 1011 D1:E486 48 A4 92 48 
              92 64 20 12 	.db %01001000, %10100100, %10010010, %01001000, %10010010, %01100100, %00100000, %00010010
 1012 D1:E48E 52 29 24 92 
              92 49 21 00 	.db %01010010, %00101001, %00100100, %10010010, %10010010, %01001001, %00100001, %00000000
 1013 D1:E496 02 52 49 24 
              A4 92 49 21 	.db %00000010, %01010010, %01001001, %00100100, %10100100, %10010010, %01001001, %00100001
 1014 D1:E49E 20 12 92 48 
              C9 24 92 13 	.db %00100000, %00010010, %10010010, %01001000, %11001001, %00100100, %10010010, %00010011
 1015 D1:E4A6 08 00 12 92 
              49 19 24 90 	.db %00001000, %00000000, %00010010, %10010010, %01001001, %00011001, %00100100, %10010000
 1016 D1:E4AE A4 40 04 A4 
              92 46 49 21 	.db %10100100, %01000000, %00000100, %10100100, %10010010, %01000110, %01001001, %00100001
 1017 D1:E4B6 49 10 0A 29 
              24 8C 92 14 	.db %01001001, %00010000, %00001010, %00101001, %00100100, %10001100, %10010010, %00010100
 1018 D1:E4BE 92 20 12 8A 
              44 99 21 49 	.db %10010010, %00100000, %00010010, %10001010, %01000100, %10011001, %00100001, %01001001
 1019 D1:E4C6 22 40 04 94 
              92 48 C2 52 	.db %00100010, %01000000, %00000100, %10010100, %10010010, %01001000, %11000010, %01010010
 1020 D1:E4CE 25 22 00 25 
              14 92 48 82 	.db %00100101, %00100010, %00000000, %00100101, %00010100, %10010010, %01001000, %10000010
 1021 D1:E4D6 52 49 22 00 
              24 92 49 20 	.db %01010010, %01001001, %00100010, %00000000, %00100100, %10010010, %01001001, %00100000
 1022 D1:E4DE 02 49 24 90 
              00 00 00 00 	.db %00000010, %01001001, %00100100, %10010000, %00000000, %00000000, %00000000, %00000000
 1023 D1:E4E6 00 00 00 00 
              00 -  -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000
 1024 D1:E4EB -  -  -  -  
 1025 D1:E4EB -  -  -  -  
Listing for file "ascent.asm"
  571 D1:E4EB -  -  -  -  #include "generated/SpriteEquates.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\SpriteEquates.txt"
    1 D1:E4EB -  -  -  -  Clouds_0_Fast_F .equ 13894080 ; vRam + 0 - 101
    2 D1:E4EB -  -  -  -  Clouds_1_Fast_F .equ 13894182 ; vRam + 102 - 201
    3 D1:E4EB -  -  -  -  Clouds_4_Fast_F .equ 13894282 ; vRam + 202 - 266
    4 D1:E4EB -  -  -  -  Clouds_3_Fast_F .equ 13894346 ; vRam + 266 - 373
    5 D1:E4EB -  -  -  -  Clouds_2_Fast_F .equ 13894454 ; vRam + 374 - 551
    6 D1:E4EB -  -  -  -  Frog_0_Slow .equ 13894631 ; vRam + 551 - 854
    7 D1:E4EB -  -  -  -  Frog_0_Slow_O .equ 13894935 ; vRam + 855 - 1158
    8 D1:E4EB -  -  -  -  Branches_8_Fast_F .equ 13895238 ; vRam + 1158 - 1252
    9 D1:E4EB -  -  -  -  Branches_15_Slow .equ 13895333 ; vRam + 1253 - 1365
   10 D1:E4EB -  -  -  -  Branches_3_Fast .equ 13895446 ; vRam + 1366 - 1533
   11 D1:E4EB -  -  -  -  Vines_2_Slow_F .equ 13895613 ; vRam + 1533 - 1751
   12 D1:E4EB -  -  -  -  Vines_1_Slow .equ 13895831 ; vRam + 1751 - 1895
   13 D1:E4EB -  -  -  -  Vines_9_Slow_O .equ 13895975 ; vRam + 1895 - 2072
   14 D1:E4EB -  -  -  -  Tree_0_Fast_F .equ 13896152 ; vRam + 2072 - 2323
   15 D1:E4EB -  -  -  -  Tree_3_Fast .equ 13896404 ; vRam + 2324 - 2581
   16 D1:E4EB -  -  -  -  Tree_8_Fast .equ 13896662 ; vRam + 2582 - 2839
   17 D1:E4EB -  -  -  -  Tree_9_Fast_F .equ 13896920 ; vRam + 2840 - 3097
   18 D1:E4EB -  -  -  -  Tree_8_Fast_F .equ 13897178 ; vRam + 3098 - 3355
   19 D1:E4EB -  -  -  -  Tree_4_Fast_F .equ 13897436 ; vRam + 3356 - 3613
   20 D1:E4EB -  -  -  -  Tree_0_Fast .equ 13897694 ; vRam + 3614 - 3865
   21 D1:E4EB -  -  -  -  Tree_6_Fast .equ 13897946 ; vRam + 3866 - 4123
   22 D1:E4EB -  -  -  -  Tree_10_Fast .equ 13898204 ; vRam + 4124 - 4381
   23 D1:E4EB -  -  -  -  Tree_7_Fast_F .equ 13898462 ; vRam + 4382 - 4639
   24 D1:E4EB -  -  -  -  Tree_1_Fast_F .equ 13898720 ; vRam + 4640 - 4894
   25 D1:E4EB -  -  -  -  Tree_1_Fast .equ 13898974 ; vRam + 4894 - 5148
   26 D1:E4EB -  -  -  -  Tree_5_Fast .equ 13899228 ; vRam + 5148 - 5405
   27 D1:E4EB -  -  -  -  Tree_11_Fast .equ 13899486 ; vRam + 5406 - 5663
   28 D1:E4EB -  -  -  -  Tree_5_Fast_F .equ 13899744 ; vRam + 5664 - 5921
   29 D1:E4EB -  -  -  -  Tree_2_Fast_F .equ 13900002 ; vRam + 5922 - 6173
   30 D1:E4EB -  -  -  -  Tree_11_Fast_F .equ 13900254 ; vRam + 6174 - 6431
   31 D1:E4EB -  -  -  -  Branches_1_Fast .equ 13900512 ; vRam + 6432 - 6584
   32 D1:E4EB -  -  -  -  Branches_2_Slow_O .equ 13900665 ; vRam + 6585 - 6808
   33 D1:E4EB -  -  -  -  Branches_3_Slow_O .equ 13900889 ; vRam + 6809 - 7027
   34 D1:E4EB -  -  -  -  Branches_5_Slow_O .equ 13901107 ; vRam + 7027 - 7235
   35 D1:E4EB -  -  -  -  Leaves_3_Slow_O .equ 13901315 ; vRam + 7235 - 7343
   36 D1:E4EB -  -  -  -  Vines_7_Slow .equ 13901423 ; vRam + 7343 - 7534
   37 D1:E4EB -  -  -  -  Vines_5_Slow_O_F .equ 13901615 ; vRam + 7535 - 7773
   38 D1:E4EB -  -  -  -  Vines_3_Slow_O_F .equ 13901853 ; vRam + 7773 - 7955
   39 D1:E4EB -  -  -  -  Vines_4_Slow_O .equ 13902035 ; vRam + 7955 - 8133
   40 D1:E4EB -  -  -  -  Vines_10_Slow .equ 13902213 ; vRam + 8133 - 8327
   41 D1:E4EB -  -  -  -  Vines_7_Slow_F .equ 13902407 ; vRam + 8327 - 8518
   42 D1:E4EB -  -  -  -  Vines_2_Slow .equ 13902599 ; vRam + 8519 - 8738
   43 D1:E4EB -  -  -  -  Leaves_2_Slow .equ 13902819 ; vRam + 8739 - 8843
   44 D1:E4EB -  -  -  -  Branches_1_Fast_F .equ 13902924 ; vRam + 8844 - 8996
   45 D1:E4EB -  -  -  -  Branches_2_Fast_F .equ 13903076 ; vRam + 8996 - 9165
   46 D1:E4EB -  -  -  -  Branches_5_Fast_F .equ 13903246 ; vRam + 9166 - 9326
   47 D1:E4EB -  -  -  -  Branches_14_Slow .equ 13903407 ; vRam + 9327 - 9435
   48 D1:E4EB -  -  -  -  Vines_10_Slow_O .equ 13903515 ; vRam + 9435 - 9626
   49 D1:E4EB -  -  -  -  Branches_0_Fast .equ 13903706 ; vRam + 9626 - 9777
   50 D1:E4EB -  -  -  -  Clouds_2_Fast .equ 13903858 ; vRam + 9778 - 9955
   51 D1:E4EB -  -  -  -  GroundDirtDark_Fast .equ 13904036 ; vRam + 9956 - 10089
   52 D1:E4EB -  -  -  -  GroundDirtDark_Fast_F .equ 13904170 ; vRam + 10090 - 10223
   53 D1:E4EB -  -  -  -  GroundHumpDark_Fast .equ 13904304 ; vRam + 10224 - 10358
   54 D1:E4EB -  -  -  -  GroundHumpDark_Fast_F .equ 13904438 ; vRam + 10358 - 10492
   55 D1:E4EB -  -  -  -  GroundGrassSmall_Fast .equ 13904572 ; vRam + 10492 - 10659
   56 D1:E4EB -  -  -  -  GroundGrassSmall_Fast_F .equ 13904740 ; vRam + 10660 - 10827
   57 D1:E4EB -  -  -  -  Tree_16_Fast .equ 13904908 ; vRam + 10828 - 10913
   58 D1:E4EB -  -  -  -  Tree_17_Slow_O .equ 13904993 ; vRam + 10913 - 11017
   59 D1:E4EB -  -  -  -  Tree_17_Slow_O_F .equ 13905097 ; vRam + 11017 - 11118
   60 D1:E4EB -  -  -  -  Leaves_8_Fast .equ 13905198 ; vRam + 11118 - 11252
   61 D1:E4EB -  -  -  -  Tree_16_Slow_O .equ 13905333 ; vRam + 11253 - 11386
   62 D1:E4EB -  -  -  -  Tree_17_Slow_F .equ 13905467 ; vRam + 11387 - 11491
   63 D1:E4EB -  -  -  -  Tree_18_Slow_O .equ 13905571 ; vRam + 11491 - 11591
   64 D1:E4EB -  -  -  -  Tree_17_Slow .equ 13905671 ; vRam + 11591 - 11692
   65 D1:E4EB -  -  -  -  Tree_18_Slow_F .equ 13905773 ; vRam + 11693 - 11793
   66 D1:E4EB -  -  -  -  Tree_16_Slow_O_F .equ 13905873 ; vRam + 11793 - 11926
   67 D1:E4EB -  -  -  -  Leaves_2_Slow_F .equ 13906007 ; vRam + 11927 - 12030
   68 D1:E4EB -  -  -  -  Clouds_0_Fast .equ 13906110 ; vRam + 12030 - 12131
   69 D1:E4EB -  -  -  -  Clouds_1_Fast .equ 13906212 ; vRam + 12132 - 12231
   70 D1:E4EB -  -  -  -  Clouds_3_Fast .equ 13906312 ; vRam + 12232 - 12339
   71 D1:E4EB -  -  -  -  Clouds_4_Fast .equ 13906420 ; vRam + 12340 - 12404
   72 D1:E4EB -  -  -  -  GroundDirtFull_Fast .equ 13906484 ; vRam + 12404 - 12581
   73 D1:E4EB -  -  -  -  GroundDirtFull_Fast_F .equ 13906662 ; vRam + 12582 - 12759
   74 D1:E4EB -  -  -  -  GroundDirtMound_Fast .equ 13906840 ; vRam + 12760 - 12887
   75 D1:E4EB -  -  -  -  GroundDirtMound_Fast_F .equ 13906968 ; vRam + 12888 - 13015
   76 D1:E4EB -  -  -  -  GroundGrassL4_Fast .equ 13907096 ; vRam + 13016 - 13153
   77 D1:E4EB -  -  -  -  GroundGrassL2_Fast .equ 13907234 ; vRam + 13154 - 13241
   78 D1:E4EB -  -  -  -  GroundGrassL5_Fast .equ 13907322 ; vRam + 13242 - 13372
   79 D1:E4EB -  -  -  -  GroundGrassL3_Fast .equ 13907452 ; vRam + 13372 - 13461
   80 D1:E4EB -  -  -  -  GroundGrassL1_Fast .equ 13907542 ; vRam + 13462 - 13576
   81 D1:E4EB -  -  -  -  GroundGrassL1_Fast_F .equ 13907656 ; vRam + 13576 - 13690
   82 D1:E4EB -  -  -  -  GroundGrassL3_Fast_F .equ 13907770 ; vRam + 13690 - 13779
   83 D1:E4EB -  -  -  -  Branches_10_Slow_O .equ 13907859 ; vRam + 13779 - 13943
   84 D1:E4EB -  -  -  -  Branches_9_Fast .equ 13908024 ; vRam + 13944 - 14074
   85 D1:E4EB -  -  -  -  Branches_16_Slow .equ 13908155 ; vRam + 14075 - 14183
   86 D1:E4EB -  -  -  -  Branches_13_Slow_O .equ 13908263 ; vRam + 14183 - 14253
   87 D1:E4EB -  -  -  -  Leaves_3_Slow .equ 13908333 ; vRam + 14253 - 14362
   88 D1:E4EB -  -  -  -  Leaves_7_Fast .equ 13908442 ; vRam + 14362 - 14497
   89 D1:E4EB -  -  -  -  Leaves_7_Fast_F .equ 13908578 ; vRam + 14498 - 14633
   90 D1:E4EB -  -  -  -  Branches_6_Slow .equ 13908713 ; vRam + 14633 - 14790
   91 D1:E4EB -  -  -  -  Branches_10_Slow_O_F .equ 13908871 ; vRam + 14791 - 14955
   92 D1:E4EB -  -  -  -  Branches_7_Slow_O .equ 13909035 ; vRam + 14955 - 15118
   93 D1:E4EB -  -  -  -  Branches_16_Slow_O .equ 13909199 ; vRam + 15119 - 15227
   94 D1:E4EB -  -  -  -  Branches_15_Slow_O .equ 13909307 ; vRam + 15227 - 15335
   95 D1:E4EB -  -  -  -  Branches_8_Slow_O_F .equ 13909415 ; vRam + 15335 - 15471
   96 D1:E4EB -  -  -  -  Branches_12_Slow_O .equ 13909551 ; vRam + 15471 - 15592
   97 D1:E4EB -  -  -  -  Branches_15_Slow_O_F .equ 13909673 ; vRam + 15593 - 15705
   98 D1:E4EB -  -  -  -  Leaves_2_Slow_O .equ 13909785 ; vRam + 15705 - 15810
   99 D1:E4EB -  -  -  -  Leaves_4_Slow .equ 13909891 ; vRam + 15811 - 15948
  100 D1:E4EB -  -  -  -  Leaves_4_Slow_F .equ 13910029 ; vRam + 15949 - 16087
  101 D1:E4EB -  -  -  -  Branches_7_Fast .equ 13910168 ; vRam + 16088 - 16209
  102 D1:E4EB -  -  -  -  Branches_8_Fast .equ 13910290 ; vRam + 16210 - 16304
  103 D1:E4EB -  -  -  -  Branches_10_Fast_F .equ 13910384 ; vRam + 16304 - 16423
  104 D1:E4EB -  -  -  -  Branches_11_Fast_F .equ 13910504 ; vRam + 16424 - 16527
  105 D1:E4EB -  -  -  -  Branches_16_Slow_O_F .equ 13910607 ; vRam + 16527 - 16635
  106 D1:E4EB -  -  -  -  Branches_13_Fast_F .equ 13910716 ; vRam + 16636 - 16685
  107 D1:E4EB -  -  -  -  Branches_14_Slow_O .equ 13910765 ; vRam + 16685 - 16796
  108 D1:E4EB -  -  -  -  Branches_15_Slow_F .equ 13910877 ; vRam + 16797 - 16905
  109 D1:E4EB -  -  -  -  Leaves_6_Slow .equ 13910985 ; vRam + 16905 - 17036
  110 D1:E4EB -  -  -  -  Branches_4_Fast_F .equ 13911116 ; vRam + 17036 - 17194
  111 D1:E4EB -  -  -  -  Branches_7_Fast_F .equ 13911274 ; vRam + 17194 - 17315
  112 D1:E4EB -  -  -  -  Branches_12_Fast_F .equ 13911396 ; vRam + 17316 - 17407
  113 D1:E4EB -  -  -  -  Leaves_4_Slow_O .equ 13911487 ; vRam + 17407 - 17549
  114 D1:E4EB -  -  -  -  Branches_8_Slow_O .equ 13911629 ; vRam + 17549 - 17685
  115 D1:E4EB -  -  -  -  Branches_10_Fast .equ 13911766 ; vRam + 17686 - 17805
  116 D1:E4EB -  -  -  -  Leaves_6_Slow_O .equ 13911885 ; vRam + 17805 - 17936
  117 D1:E4EB -  -  -  -  Leaves_3_Slow_F .equ 13912017 ; vRam + 17937 - 18045
  118 D1:E4EB -  -  -  -  Vines_8_Slow .equ 13912125 ; vRam + 18045 - 18246
  119 D1:E4EB -  -  -  -  Vines_2_Slow_O .equ 13912327 ; vRam + 18247 - 18463
  120 D1:E4EB -  -  -  -  Vines_3_Slow .equ 13912543 ; vRam + 18463 - 18639
  121 D1:E4EB -  -  -  -  Vines_5_Slow .equ 13912719 ; vRam + 18639 - 18881
  122 D1:E4EB -  -  -  -  Vines_9_Slow .equ 13912961 ; vRam + 18881 - 19058
  123 D1:E4EB -  -  -  -  Vines_4_Slow_F .equ 13913139 ; vRam + 19059 - 19242
  124 D1:E4EB -  -  -  -  Vines_1_Slow_O .equ 13913323 ; vRam + 19243 - 19383
  125 D1:E4EB -  -  -  -  Vines_9_Slow_O_F .equ 13913463 ; vRam + 19383 - 19560
  126 D1:E4EB -  -  -  -  Vines_3_Slow_F .equ 13913641 ; vRam + 19561 - 19736
  127 D1:E4EB -  -  -  -  Vines_8_Slow_F .equ 13913817 ; vRam + 19737 - 19938
  128 D1:E4EB -  -  -  -  Branches_9_Slow_O .equ 13914019 ; vRam + 19939 - 20114
  129 D1:E4EB -  -  -  -  Vines_2_Slow_O_F .equ 13914195 ; vRam + 20115 - 20331
  130 D1:E4EB -  -  -  -  Tree_2_Fast .equ 13914412 ; vRam + 20332 - 20583
  131 D1:E4EB -  -  -  -  Tree_4_Fast .equ 13914664 ; vRam + 20584 - 20841
  132 D1:E4EB -  -  -  -  Tree_7_Fast .equ 13914922 ; vRam + 20842 - 21099
  133 D1:E4EB -  -  -  -  Tree_9_Fast .equ 13915180 ; vRam + 21100 - 21357
  134 D1:E4EB -  -  -  -  Tree_6_Fast_F .equ 13915438 ; vRam + 21358 - 21615
  135 D1:E4EB -  -  -  -  Tree_3_Fast_F .equ 13915696 ; vRam + 21616 - 21873
  136 D1:E4EB -  -  -  -  Branches_1_Slow_O .equ 13915953 ; vRam + 21873 - 22070
  137 D1:E4EB -  -  -  -  Branches_4_Slow_O .equ 13916151 ; vRam + 22071 - 22274
  138 D1:E4EB -  -  -  -  Leaves_3_Slow_O_F .equ 13916355 ; vRam + 22275 - 22385
  139 D1:E4EB -  -  -  -  Vines_7_Slow_O .equ 13916465 ; vRam + 22385 - 22580
  140 D1:E4EB -  -  -  -  Vines_8_Slow_O .equ 13916661 ; vRam + 22581 - 22778
  141 D1:E4EB -  -  -  -  Vines_8_Slow_O_F .equ 13916859 ; vRam + 22779 - 22976
  142 D1:E4EB -  -  -  -  Vines_6_Slow .equ 13917057 ; vRam + 22977 - 23159
  143 D1:E4EB -  -  -  -  Branches_0_Fast_F .equ 13917240 ; vRam + 23160 - 23311
  144 D1:E4EB -  -  -  -  Branches_9_Fast_F .equ 13917392 ; vRam + 23312 - 23442
  145 D1:E4EB -  -  -  -  Branches_5_Fast .equ 13907096 ; vRam + 13016 - 13176
  146 D1:E4EB -  -  -  -  Branches_4_Fast .equ 13907256 ; vRam + 13176 - 13334
  147 D1:E4EB -  -  -  -  Branches_2_Fast .equ 13907414 ; vRam + 13334 - 13503
  148 D1:E4EB -  -  -  -  Vines_3_Slow_O .equ 13907583 ; vRam + 13503 - 13684
Listing for file "ascent.asm"
  572 D1:E4EB -  -  -  -  #include "generated/Sprite_Groups.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Groups.txt"
    1 D1:E4EB -  -  -  -  Sprite_Groups:
    2 D1:E4EB 4E E5 D1 -  	.dl SG_GroundChunk3
    3 D1:E4EE 70 E5 D1 -  	.dl SG_GroundGrass
    4 D1:E4F1 A2 E5 D1 -  	.dl SG_Branch3
    5 D1:E4F4 C8 E5 D1 -  	.dl SG_Branch7
    6 D1:E4F7 1A E6 D1 -  	.dl SG_Branch4
    7 D1:E4FA 68 E6 D1 -  	.dl SG_Branch5
    8 D1:E4FD A6 E6 D1 -  	.dl SG_Vine3
    9 D1:E500 BC E6 D1 -  	.dl SG_Vine6
   10 D1:E503 D2 E6 D1 -  	.dl SG_Branch6
   11 D1:E506 04 E7 D1 -  	.dl SG_Vine2
   12 D1:E509 16 E7 D1 -  	.dl SG_Vine7
   13 D1:E50C 2C E7 D1 -  	.dl SG_Branch2
   14 D1:E50F 72 E7 D1 -  	.dl SG_GroundChunk2
   15 D1:E512 8C E7 D1 -  	.dl SG_GroundChunk1
   16 D1:E515 AA E7 D1 -  	.dl SG_Root1
   17 D1:E518 B8 E7 D1 -  	.dl SG_TreeRow3
   18 D1:E51B D6 E7 D1 -  	.dl SG_TreeRow5
   19 D1:E51E F4 E7 D1 -  	.dl SG_TreeRow1
   20 D1:E521 12 E8 D1 -  	.dl SG_TreeRow2
   21 D1:E524 30 E8 D1 -  	.dl SG_TreeRow4
   22 D1:E527 4E E8 D1 -  	.dl SG_Branch1
   23 D1:E52A 94 E8 D1 -  	.dl SG_Vine4
   24 D1:E52D BA E8 D1 -  	.dl SG_Vine5
   25 D1:E530 CC E8 D1 -  	.dl SG_BranchBase3
   26 D1:E533 DE E8 D1 -  	.dl SG_Vine1
   27 D1:E536 F0 E8 D1 -  	.dl SG_BranchBase1
   28 D1:E539 0E E9 D1 -  	.dl SG_BranchBase2
   29 D1:E53C 2C E9 D1 -  	.dl SG_BranchBase4
   30 D1:E53F 42 E9 D1 -  	.dl SG_CloudPlatform
   31 D1:E542 54 E9 D1 -  	.dl SG_DarkGroundChunk
   32 D1:E545 72 E9 D1 -  	.dl SG_BGTree1
   33 D1:E548 94 E9 D1 -  	.dl SG_BGTree2
   34 D1:E54B B6 E9 D1 -  	.dl SG_Cloud1
   35 D1:E54E -  -  -  -  
   36 D1:E54E -  -  -  -  
   37 D1:E54E -  -  -  -  
   38 D1:E54E -  -  -  -  SG_GroundChunk3:
   39 D1:E54E 00 -  -  -  	.db 0
   40 D1:E54F 08 -  -  -  	.db 8
   41 D1:E550 0C 10 00 00 	.db 12, 16, 0, 0  ;GroundDirtFull_Fast
   42 D1:E554 0C 10 08 00 	.db 12, 16, 8, 0  ;GroundDirtFull_Fast
   43 D1:E558 0C 10 10 01 	.db 12, 16, 16, 1  ;GroundDirtFull_Fast_F
   44 D1:E55C 0C 10 18 01 	.db 12, 16, 24, 1  ;GroundDirtFull_Fast_F
   45 D1:E560 00 0C 00 02 	.db 0, 12, 0, 2  ;GroundDirtMound_Fast
   46 D1:E564 00 0C 08 02 	.db 0, 12, 8, 2  ;GroundDirtMound_Fast
   47 D1:E568 01 0C 10 03 	.db 1, 12, 16, 3  ;GroundDirtMound_Fast_F
   48 D1:E56C 00 0C 18 03 	.db 0, 12, 24, 3  ;GroundDirtMound_Fast_F
   49 D1:E570 -  -  -  -  
   50 D1:E570 -  -  -  -  SG_GroundGrass:
   51 D1:E570 00 -  -  -  	.db 0
   52 D1:E571 0C -  -  -  	.db 12
   53 D1:E572 18 10 00 04 	.db 24, 16, 0, 4  ;GroundGrassL4_Fast
   54 D1:E576 09 10 02 05 	.db 9, 16, 2, 5  ;GroundGrassL2_Fast
   55 D1:E57A 17 10 0A 06 	.db 23, 16, 10, 6  ;GroundGrassL5_Fast
   56 D1:E57E 09 0E 0B 07 	.db 9, 14, 11, 7  ;GroundGrassL3_Fast
   57 D1:E582 17 0E 07 07 	.db 23, 14, 7, 7  ;GroundGrassL3_Fast
   58 D1:E586 01 10 11 08 	.db 1, 16, 17, 8  ;GroundGrassL1_Fast
   59 D1:E58A 18 10 19 04 	.db 24, 16, 25, 4  ;GroundGrassL4_Fast
   60 D1:E58E 00 10 1D 09 	.db 0, 16, 29, 9  ;GroundGrassL1_Fast_F
   61 D1:E592 02 10 22 05 	.db 2, 16, 34, 5  ;GroundGrassL2_Fast
   62 D1:E596 00 0E 01 07 	.db 0, 14, 1, 7  ;GroundGrassL3_Fast
   63 D1:E59A 03 0E 08 0A 	.db 3, 14, 8, 10  ;GroundGrassL3_Fast_F
   64 D1:E59E 0E 10 1A 06 	.db 14, 16, 26, 6  ;GroundGrassL5_Fast
   65 D1:E5A2 -  -  -  -  
   66 D1:E5A2 -  -  -  -  SG_Branch3:
   67 D1:E5A2 00 -  -  -  	.db 0
   68 D1:E5A3 09 -  -  -  	.db 9
   69 D1:E5A4 03 0E 15 0B 	.db 3, 14, 21, 11  ;Branches_9_Fast
   70 D1:E5A8 11 06 06 0C 	.db 17, 6, 6, 12  ;Branches_13_Slow_O
   71 D1:E5AC 0A 0E 0D 0D 	.db 10, 14, 13, 13  ;Branches_10_Slow_O
   72 D1:E5B0 15 0D 0B 0E 	.db 21, 13, 11, 14  ;Branches_16_Slow
   73 D1:E5B4 00 0C 13 0F 	.db 0, 12, 19, 15  ;Leaves_3_Slow
   74 D1:E5B8 08 0E 04 10 	.db 8, 14, 4, 16  ;Leaves_7_Fast
   75 D1:E5BC 0E 0E 00 10 	.db 14, 14, 0, 16  ;Leaves_7_Fast
   76 D1:E5C0 1A 0E 08 11 	.db 26, 14, 8, 17  ;Leaves_7_Fast_F
   77 D1:E5C4 17 0E 02 11 	.db 23, 14, 2, 17  ;Leaves_7_Fast_F
   78 D1:E5C8 -  -  -  -  
   79 D1:E5C8 -  -  -  -  SG_Branch7:
   80 D1:E5C8 00 -  -  -  	.db 0
   81 D1:E5C9 14 -  -  -  	.db 20
   82 D1:E5CA 36 0E 07 12 	.db 54, 14, 7, 18  ;Branches_8_Slow_O
   83 D1:E5CE 15 0E 02 10 	.db 21, 14, 2, 16  ;Leaves_7_Fast
   84 D1:E5D2 0A 0E 11 11 	.db 10, 14, 17, 17  ;Leaves_7_Fast_F
   85 D1:E5D6 12 0E 08 11 	.db 18, 14, 8, 17  ;Leaves_7_Fast_F
   86 D1:E5DA 00 0E 00 10 	.db 0, 14, 0, 16  ;Leaves_7_Fast
   87 D1:E5DE 0D 0E 00 11 	.db 13, 14, 0, 17  ;Leaves_7_Fast_F
   88 D1:E5E2 06 0E 07 11 	.db 6, 14, 7, 17  ;Leaves_7_Fast_F
   89 D1:E5E6 10 0E 1D 10 	.db 16, 14, 29, 16  ;Leaves_7_Fast
   90 D1:E5EA 32 0C 0D 13 	.db 50, 12, 13, 19  ;Leaves_3_Slow_F
   91 D1:E5EE 25 0E 24 10 	.db 37, 14, 36, 16  ;Leaves_7_Fast
   92 D1:E5F2 19 0E 1E 14 	.db 25, 14, 30, 20  ;Branches_14_Slow_O
   93 D1:E5F6 14 0E 11 15 	.db 20, 14, 17, 21  ;Branches_15_Slow_O_F
   94 D1:E5FA 15 0E 0A 16 	.db 21, 14, 10, 22  ;Branches_15_Slow_O
   95 D1:E5FE 23 0A 17 17 	.db 35, 10, 23, 23  ;Branches_11_Fast_F
   96 D1:E602 25 06 20 18 	.db 37, 6, 32, 24  ;Branches_13_Fast_F
   97 D1:E606 1F 0E 26 10 	.db 31, 14, 38, 16  ;Leaves_7_Fast
   98 D1:E60A 1D 0E 0F 19 	.db 29, 14, 15, 25  ;Branches_10_Fast_F
   99 D1:E60E 26 0E 0F 1A 	.db 38, 14, 15, 26  ;Branches_10_Fast
  100 D1:E612 2E 0E 0B 12 	.db 46, 14, 11, 18  ;Branches_8_Slow_O
  101 D1:E616 16 0D 0C 1B 	.db 22, 13, 12, 27  ;Leaves_6_Slow_O
  102 D1:E61A -  -  -  -  
  103 D1:E61A -  -  -  -  SG_Branch4:
  104 D1:E61A 00 -  -  -  	.db 0
  105 D1:E61B 13 -  -  -  	.db 19
  106 D1:E61C 2B 0B 1A 1C 	.db 43, 11, 26, 28  ;Branches_6_Slow
  107 D1:E620 24 0E 11 1D 	.db 36, 14, 17, 29  ;Branches_10_Slow_O_F
  108 D1:E624 11 0E 08 11 	.db 17, 14, 8, 17  ;Leaves_7_Fast_F
  109 D1:E628 2E 0E 09 0D 	.db 46, 14, 9, 13  ;Branches_10_Slow_O
  110 D1:E62C 02 0E 0A 11 	.db 2, 14, 10, 17  ;Leaves_7_Fast_F
  111 D1:E630 2F 0E 05 16 	.db 47, 14, 5, 22  ;Branches_15_Slow_O
  112 D1:E634 07 0E 05 10 	.db 7, 14, 5, 16  ;Leaves_7_Fast
  113 D1:E638 1A 0A 05 1E 	.db 26, 10, 5, 30  ;Branches_12_Slow_O
  114 D1:E63C 13 0E 0E 15 	.db 19, 14, 14, 21  ;Branches_15_Slow_O_F
  115 D1:E640 28 0E 02 11 	.db 40, 14, 2, 17  ;Leaves_7_Fast_F
  116 D1:E644 21 0B 09 1F 	.db 33, 11, 9, 31  ;Leaves_4_Slow
  117 D1:E648 09 0E 0F 10 	.db 9, 14, 15, 16  ;Leaves_7_Fast
  118 D1:E64C 11 0E 00 10 	.db 17, 14, 0, 16  ;Leaves_7_Fast
  119 D1:E650 3E 0E 03 10 	.db 62, 14, 3, 16  ;Leaves_7_Fast
  120 D1:E654 1D 0E 0E 20 	.db 29, 14, 14, 32  ;Branches_8_Slow_O_F
  121 D1:E658 3A 0D 06 21 	.db 58, 13, 6, 33  ;Branches_16_Slow_O
  122 D1:E65C 2C 0A 10 22 	.db 44, 10, 16, 34  ;Branches_7_Slow_O
  123 D1:E660 2E 0B 19 23 	.db 46, 11, 25, 35  ;Leaves_4_Slow_F
  124 D1:E664 2C 09 06 24 	.db 44, 9, 6, 36  ;Leaves_2_Slow_O
  125 D1:E668 -  -  -  -  
  126 D1:E668 -  -  -  -  SG_Branch5:
  127 D1:E668 00 -  -  -  	.db 0
  128 D1:E669 0F -  -  -  	.db 15
  129 D1:E66A 22 0A 00 25 	.db 34, 10, 0, 37  ;Branches_7_Fast
  130 D1:E66E 1B 0E 09 26 	.db 27, 14, 9, 38  ;Branches_8_Fast
  131 D1:E672 23 0A 0B 17 	.db 35, 10, 11, 23  ;Branches_11_Fast_F
  132 D1:E676 24 06 14 18 	.db 36, 6, 20, 24  ;Branches_13_Fast_F
  133 D1:E67A 0D 0E 0C 14 	.db 13, 14, 12, 20  ;Branches_14_Slow_O
  134 D1:E67E 13 0E 0E 27 	.db 19, 14, 14, 39  ;Branches_15_Slow_F
  135 D1:E682 1C 0D 02 28 	.db 28, 13, 2, 40  ;Leaves_6_Slow
  136 D1:E686 27 0E 08 19 	.db 39, 14, 8, 25  ;Branches_10_Fast_F
  137 D1:E68A 30 0D 0D 29 	.db 48, 13, 13, 41  ;Branches_16_Slow_O_F
  138 D1:E68E 04 0E 0A 10 	.db 4, 14, 10, 16  ;Leaves_7_Fast
  139 D1:E692 0B 0E 0F 10 	.db 11, 14, 15, 16  ;Leaves_7_Fast
  140 D1:E696 1C 0E 17 10 	.db 28, 14, 23, 16  ;Leaves_7_Fast
  141 D1:E69A 20 0E 1A 10 	.db 32, 14, 26, 16  ;Leaves_7_Fast
  142 D1:E69E 26 0E 15 10 	.db 38, 14, 21, 16  ;Leaves_7_Fast
  143 D1:E6A2 34 0E 0F 10 	.db 52, 14, 15, 16  ;Leaves_7_Fast
  144 D1:E6A6 -  -  -  -  
  145 D1:E6A6 -  -  -  -  SG_Vine3:
  146 D1:E6A6 00 -  -  -  	.db 0
  147 D1:E6A7 05 -  -  -  	.db 5
  148 D1:E6A8 16 18 17 2A 	.db 22, 24, 23, 42  ;Vines_8_Slow
  149 D1:E6AC 2E 18 15 2A 	.db 46, 24, 21, 42  ;Vines_8_Slow
  150 D1:E6B0 45 13 0B 2B 	.db 69, 19, 11, 43  ;Vines_2_Slow_O
  151 D1:E6B4 56 10 00 2C 	.db 86, 16, 0, 44  ;Vines_3_Slow
  152 D1:E6B8 00 17 1A 2D 	.db 0, 23, 26, 45  ;Vines_5_Slow
  153 D1:E6BC -  -  -  -  
  154 D1:E6BC -  -  -  -  SG_Vine6:
  155 D1:E6BC 00 -  -  -  	.db 0
  156 D1:E6BD 05 -  -  -  	.db 5
  157 D1:E6BE 00 0D 00 2E 	.db 0, 13, 0, 46  ;Vines_4_Slow_F
  158 D1:E6C2 09 0D 0B 2E 	.db 9, 13, 11, 46  ;Vines_4_Slow_F
  159 D1:E6C6 0F 09 16 2F 	.db 15, 9, 22, 47  ;Vines_1_Slow_O
  160 D1:E6CA 06 10 22 2C 	.db 6, 16, 34, 44  ;Vines_3_Slow
  161 D1:E6CE 00 0B 2D 30 	.db 0, 11, 45, 48  ;Vines_9_Slow
  162 D1:E6D2 -  -  -  -  
  163 D1:E6D2 -  -  -  -  SG_Branch6:
  164 D1:E6D2 00 -  -  -  	.db 0
  165 D1:E6D3 0C -  -  -  	.db 12
  166 D1:E6D4 12 0E 00 33 	.db 18, 14, 0, 51  ;Branches_4_Fast_F
  167 D1:E6D8 13 0A 09 34 	.db 19, 10, 9, 52  ;Branches_7_Fast_F
  168 D1:E6DC 0E 0E 12 0B 	.db 14, 14, 18, 11  ;Branches_9_Fast
  169 D1:E6E0 0D 0A 1B 35 	.db 13, 10, 27, 53  ;Branches_12_Fast_F
  170 D1:E6E4 1D 0B 05 36 	.db 29, 11, 5, 54  ;Leaves_4_Slow_O
  171 D1:E6E8 06 0E 0D 14 	.db 6, 14, 13, 20  ;Branches_14_Slow_O
  172 D1:E6EC 16 0D 16 29 	.db 22, 13, 22, 41  ;Branches_16_Slow_O_F
  173 D1:E6F0 00 0E 0C 10 	.db 0, 14, 12, 16  ;Leaves_7_Fast
  174 D1:E6F4 0A 0E 23 10 	.db 10, 14, 35, 16  ;Leaves_7_Fast
  175 D1:E6F8 02 0E 1E 11 	.db 2, 14, 30, 17  ;Leaves_7_Fast_F
  176 D1:E6FC 1C 0E 18 11 	.db 28, 14, 24, 17  ;Leaves_7_Fast_F
  177 D1:E700 14 0E 1C 11 	.db 20, 14, 28, 17  ;Leaves_7_Fast_F
  178 D1:E704 -  -  -  -  
  179 D1:E704 -  -  -  -  SG_Vine2:
  180 D1:E704 00 -  -  -  	.db 0
  181 D1:E705 04 -  -  -  	.db 4
  182 D1:E706 00 13 00 37 	.db 0, 19, 0, 55  ;Vines_2_Slow_F
  183 D1:E70A 11 13 0A 37 	.db 17, 19, 10, 55  ;Vines_2_Slow_F
  184 D1:E70E 22 10 14 32 	.db 34, 16, 20, 50  ;Vines_3_Slow_F
  185 D1:E712 2B 09 20 38 	.db 43, 9, 32, 56  ;Vines_1_Slow
  186 D1:E716 -  -  -  -  
  187 D1:E716 -  -  -  -  SG_Vine7:
  188 D1:E716 00 -  -  -  	.db 0
  189 D1:E717 05 -  -  -  	.db 5
  190 D1:E718 00 18 02 39 	.db 0, 24, 2, 57  ;Vines_8_Slow_O
  191 D1:E71C 18 18 01 3A 	.db 24, 24, 1, 58  ;Vines_8_Slow_O_F
  192 D1:E720 30 18 04 3B 	.db 48, 24, 4, 59  ;Vines_6_Slow
  193 D1:E724 47 0B 02 36 	.db 71, 11, 2, 54  ;Leaves_4_Slow_O
  194 D1:E728 35 0C 00 0F 	.db 53, 12, 0, 15  ;Leaves_3_Slow
  195 D1:E72C -  -  -  -  
  196 D1:E72C -  -  -  -  SG_Branch2:
  197 D1:E72C 00 -  -  -  	.db 0
  198 D1:E72D 11 -  -  -  	.db 17
  199 D1:E72E 24 0E 13 3C 	.db 36, 14, 19, 60  ;Branches_8_Fast_F
  200 D1:E732 1D 0E 0F 20 	.db 29, 14, 15, 32  ;Branches_8_Slow_O_F
  201 D1:E736 15 0E 08 19 	.db 21, 14, 8, 25  ;Branches_10_Fast_F
  202 D1:E73A 0E 0E 04 16 	.db 14, 14, 4, 22  ;Branches_15_Slow_O
  203 D1:E73E 18 0E 12 1A 	.db 24, 14, 18, 26  ;Branches_10_Fast
  204 D1:E742 11 0E 14 3D 	.db 17, 14, 20, 61  ;Branches_15_Slow
  205 D1:E746 17 06 1B 18 	.db 23, 6, 27, 24  ;Branches_13_Fast_F
  206 D1:E74A 0B 0E 00 11 	.db 11, 14, 0, 17  ;Leaves_7_Fast_F
  207 D1:E74E 18 0E 01 11 	.db 24, 14, 1, 17  ;Leaves_7_Fast_F
  208 D1:E752 1F 0E 05 10 	.db 31, 14, 5, 16  ;Leaves_7_Fast
  209 D1:E756 06 0E 06 10 	.db 6, 14, 6, 16  ;Leaves_7_Fast
  210 D1:E75A 1C 0D 07 21 	.db 28, 13, 7, 33  ;Branches_16_Slow_O
  211 D1:E75E 06 0E 10 11 	.db 6, 14, 16, 17  ;Leaves_7_Fast_F
  212 D1:E762 10 0E 19 27 	.db 16, 14, 25, 39  ;Branches_15_Slow_F
  213 D1:E766 07 0E 18 10 	.db 7, 14, 24, 16  ;Leaves_7_Fast
  214 D1:E76A 11 0E 1F 11 	.db 17, 14, 31, 17  ;Leaves_7_Fast_F
  215 D1:E76E 1F 09 14 24 	.db 31, 9, 20, 36  ;Leaves_2_Slow_O
  216 D1:E772 -  -  -  -  
  217 D1:E772 -  -  -  -  SG_GroundChunk2:
  218 D1:E772 00 -  -  -  	.db 0
  219 D1:E773 06 -  -  -  	.db 6
  220 D1:E774 0E 10 00 01 	.db 14, 16, 0, 1  ;GroundDirtFull_Fast_F
  221 D1:E778 0F 10 08 00 	.db 15, 16, 8, 0  ;GroundDirtFull_Fast
  222 D1:E77C 0E 10 10 01 	.db 14, 16, 16, 1  ;GroundDirtFull_Fast_F
  223 D1:E780 02 0C 00 02 	.db 2, 12, 0, 2  ;GroundDirtMound_Fast
  224 D1:E784 03 0C 08 02 	.db 3, 12, 8, 2  ;GroundDirtMound_Fast
  225 D1:E788 02 0C 10 02 	.db 2, 12, 16, 2  ;GroundDirtMound_Fast
  226 D1:E78C -  -  -  -  
  227 D1:E78C -  -  -  -  SG_GroundChunk1:
  228 D1:E78C 00 -  -  -  	.db 0
  229 D1:E78D 07 -  -  -  	.db 7
  230 D1:E78E 10 10 00 00 	.db 16, 16, 0, 0  ;GroundDirtFull_Fast
  231 D1:E792 0F 10 08 00 	.db 15, 16, 8, 0  ;GroundDirtFull_Fast
  232 D1:E796 0E 10 10 01 	.db 14, 16, 16, 1  ;GroundDirtFull_Fast_F
  233 D1:E79A 02 0C 10 02 	.db 2, 12, 16, 2  ;GroundDirtMound_Fast
  234 D1:E79E 03 0C 08 02 	.db 3, 12, 8, 2  ;GroundDirtMound_Fast
  235 D1:E7A2 04 0C 00 03 	.db 4, 12, 0, 3  ;GroundDirtMound_Fast_F
  236 D1:E7A6 00 0C 0C 02 	.db 0, 12, 12, 2  ;GroundDirtMound_Fast
  237 D1:E7AA -  -  -  -  
  238 D1:E7AA -  -  -  -  SG_Root1:
  239 D1:E7AA 00 -  -  -  	.db 0
  240 D1:E7AB 03 -  -  -  	.db 3
  241 D1:E7AC 06 0E 00 26 	.db 6, 14, 0, 38  ;Branches_8_Fast
  242 D1:E7B0 03 0E 0D 20 	.db 3, 14, 13, 32  ;Branches_8_Slow_O_F
  243 D1:E7B4 00 0E 04 45 	.db 0, 14, 4, 69  ;Branches_9_Slow_O
  244 D1:E7B8 -  -  -  -  
  245 D1:E7B8 -  -  -  -  SG_TreeRow3:
  246 D1:E7B8 00 -  -  -  	.db 0
  247 D1:E7B9 07 -  -  -  	.db 7
  248 D1:E7BA 00 10 00 46 	.db 0, 16, 0, 70  ;Tree_2_Fast
  249 D1:E7BE 00 10 0D 47 	.db 0, 16, 13, 71  ;Tree_4_Fast
  250 D1:E7C2 00 10 1A 48 	.db 0, 16, 26, 72  ;Tree_7_Fast
  251 D1:E7C6 00 10 27 49 	.db 0, 16, 39, 73  ;Tree_9_Fast
  252 D1:E7CA 00 10 34 4A 	.db 0, 16, 52, 74  ;Tree_6_Fast_F
  253 D1:E7CE 00 10 41 4B 	.db 0, 16, 65, 75  ;Tree_3_Fast_F
  254 D1:E7D2 00 10 4E 4C 	.db 0, 16, 78, 76  ;Tree_0_Fast_F
  255 D1:E7D6 -  -  -  -  
  256 D1:E7D6 -  -  -  -  SG_TreeRow5:
  257 D1:E7D6 00 -  -  -  	.db 0
  258 D1:E7D7 07 -  -  -  	.db 7
  259 D1:E7D8 00 10 00 46 	.db 0, 16, 0, 70  ;Tree_2_Fast
  260 D1:E7DC 00 10 0D 4D 	.db 0, 16, 13, 77  ;Tree_3_Fast
  261 D1:E7E0 00 10 1A 4E 	.db 0, 16, 26, 78  ;Tree_8_Fast
  262 D1:E7E4 00 10 27 4F 	.db 0, 16, 39, 79  ;Tree_9_Fast_F
  263 D1:E7E8 00 10 34 50 	.db 0, 16, 52, 80  ;Tree_8_Fast_F
  264 D1:E7EC 00 10 41 51 	.db 0, 16, 65, 81  ;Tree_4_Fast_F
  265 D1:E7F0 00 10 4E 4C 	.db 0, 16, 78, 76  ;Tree_0_Fast_F
  266 D1:E7F4 -  -  -  -  
  267 D1:E7F4 -  -  -  -  SG_TreeRow1:
  268 D1:E7F4 00 -  -  -  	.db 0
  269 D1:E7F5 07 -  -  -  	.db 7
  270 D1:E7F6 00 10 00 52 	.db 0, 16, 0, 82  ;Tree_0_Fast
  271 D1:E7FA 00 10 0D 4D 	.db 0, 16, 13, 77  ;Tree_3_Fast
  272 D1:E7FE 00 10 1A 53 	.db 0, 16, 26, 83  ;Tree_6_Fast
  273 D1:E802 00 10 27 54 	.db 0, 16, 39, 84  ;Tree_10_Fast
  274 D1:E806 00 10 34 55 	.db 0, 16, 52, 85  ;Tree_7_Fast_F
  275 D1:E80A 00 10 41 51 	.db 0, 16, 65, 81  ;Tree_4_Fast_F
  276 D1:E80E 00 10 4E 56 	.db 0, 16, 78, 86  ;Tree_1_Fast_F
  277 D1:E812 -  -  -  -  
  278 D1:E812 -  -  -  -  SG_TreeRow2:
  279 D1:E812 00 -  -  -  	.db 0
  280 D1:E813 07 -  -  -  	.db 7
  281 D1:E814 00 10 00 57 	.db 0, 16, 0, 87  ;Tree_1_Fast
  282 D1:E818 00 10 0D 58 	.db 0, 16, 13, 88  ;Tree_5_Fast
  283 D1:E81C 00 10 1A 4E 	.db 0, 16, 26, 78  ;Tree_8_Fast
  284 D1:E820 00 10 27 59 	.db 0, 16, 39, 89  ;Tree_11_Fast
  285 D1:E824 00 10 34 50 	.db 0, 16, 52, 80  ;Tree_8_Fast_F
  286 D1:E828 00 10 41 5A 	.db 0, 16, 65, 90  ;Tree_5_Fast_F
  287 D1:E82C 00 10 4E 5B 	.db 0, 16, 78, 91  ;Tree_2_Fast_F
  288 D1:E830 -  -  -  -  
  289 D1:E830 -  -  -  -  SG_TreeRow4:
  290 D1:E830 00 -  -  -  	.db 0
  291 D1:E831 07 -  -  -  	.db 7
  292 D1:E832 00 10 00 52 	.db 0, 16, 0, 82  ;Tree_0_Fast
  293 D1:E836 00 10 0D 58 	.db 0, 16, 13, 88  ;Tree_5_Fast
  294 D1:E83A 00 10 1A 53 	.db 0, 16, 26, 83  ;Tree_6_Fast
  295 D1:E83E 00 10 27 5C 	.db 0, 16, 39, 92  ;Tree_11_Fast_F
  296 D1:E842 00 10 34 4A 	.db 0, 16, 52, 74  ;Tree_6_Fast_F
  297 D1:E846 00 10 41 4B 	.db 0, 16, 65, 75  ;Tree_3_Fast_F
  298 D1:E84A 00 10 4E 56 	.db 0, 16, 78, 86  ;Tree_1_Fast_F
  299 D1:E84E -  -  -  -  
  300 D1:E84E -  -  -  -  SG_Branch1:
  301 D1:E84E 00 -  -  -  	.db 0
  302 D1:E84F 11 -  -  -  	.db 17
  303 D1:E850 0D 0E 34 5D 	.db 13, 14, 52, 93  ;Branches_1_Fast
  304 D1:E854 0D 0E 2B 5E 	.db 13, 14, 43, 94  ;Branches_2_Slow_O
  305 D1:E858 0E 0E 22 5F 	.db 14, 14, 34, 95  ;Branches_3_Slow_O
  306 D1:E85C 0F 0E 19 60 	.db 15, 14, 25, 96  ;Branches_5_Slow_O
  307 D1:E860 11 0A 10 22 	.db 17, 10, 16, 34  ;Branches_7_Slow_O
  308 D1:E864 11 0A 07 1E 	.db 17, 10, 7, 30  ;Branches_12_Slow_O
  309 D1:E868 08 0E 17 3D 	.db 8, 14, 23, 61  ;Branches_15_Slow
  310 D1:E86C 13 0E 21 12 	.db 19, 14, 33, 18  ;Branches_8_Slow_O
  311 D1:E870 1D 0D 1E 21 	.db 29, 13, 30, 33  ;Branches_16_Slow_O
  312 D1:E874 15 0E 06 10 	.db 21, 14, 6, 16  ;Leaves_7_Fast
  313 D1:E878 00 0E 14 10 	.db 0, 14, 20, 16  ;Leaves_7_Fast
  314 D1:E87C 07 0E 07 10 	.db 7, 14, 7, 16  ;Leaves_7_Fast
  315 D1:E880 05 0E 02 11 	.db 5, 14, 2, 17  ;Leaves_7_Fast_F
  316 D1:E884 0C 0E 00 10 	.db 12, 14, 0, 16  ;Leaves_7_Fast
  317 D1:E888 20 0E 1C 10 	.db 32, 14, 28, 16  ;Leaves_7_Fast
  318 D1:E88C 13 0C 1D 61 	.db 19, 12, 29, 97  ;Leaves_3_Slow_O
  319 D1:E890 18 0B 28 36 	.db 24, 11, 40, 54  ;Leaves_4_Slow_O
  320 D1:E894 -  -  -  -  
  321 D1:E894 -  -  -  -  SG_Vine4:
  322 D1:E894 00 -  -  -  	.db 0
  323 D1:E895 09 -  -  -  	.db 9
  324 D1:E896 00 18 00 62 	.db 0, 24, 0, 98  ;Vines_7_Slow
  325 D1:E89A 18 18 02 40 	.db 24, 24, 2, 64  ;Vines_8_Slow_F
  326 D1:E89E 2F 17 05 63 	.db 47, 23, 5, 99  ;Vines_5_Slow_O_F
  327 D1:E8A2 44 13 0F 37 	.db 68, 19, 15, 55  ;Vines_2_Slow_F
  328 D1:E8A6 55 10 19 64 	.db 85, 16, 25, 100  ;Vines_3_Slow_O_F
  329 D1:E8AA 5E 09 25 2F 	.db 94, 9, 37, 47  ;Vines_1_Slow_O
  330 D1:E8AE 57 0D 31 65 	.db 87, 13, 49, 101  ;Vines_4_Slow_O
  331 D1:E8B2 4E 0B 3D 41 	.db 78, 11, 61, 65  ;Vines_9_Slow_O
  332 D1:E8B6 4E 0E 49 66 	.db 78, 14, 73, 102  ;Vines_10_Slow
  333 D1:E8BA -  -  -  -  
  334 D1:E8BA -  -  -  -  SG_Vine5:
  335 D1:E8BA 00 -  -  -  	.db 0
  336 D1:E8BB 04 -  -  -  	.db 4
  337 D1:E8BC 06 18 00 40 	.db 6, 24, 0, 64  ;Vines_8_Slow_F
  338 D1:E8C0 1B 10 03 64 	.db 27, 16, 3, 100  ;Vines_3_Slow_O_F
  339 D1:E8C4 00 18 18 67 	.db 0, 24, 24, 103  ;Vines_7_Slow_F
  340 D1:E8C8 15 13 0E 68 	.db 21, 19, 14, 104  ;Vines_2_Slow
  341 D1:E8CC -  -  -  -  
  342 D1:E8CC -  -  -  -  SG_BranchBase3:
  343 D1:E8CC 00 -  -  -  	.db 0
  344 D1:E8CD 04 -  -  -  	.db 4
  345 D1:E8CE 0B 0E 00 6B 	.db 11, 14, 0, 107  ;Branches_1_Fast_F
  346 D1:E8D2 0A 0E 09 6C 	.db 10, 14, 9, 108  ;Branches_2_Fast_F
  347 D1:E8D6 09 0E 12 6D 	.db 9, 14, 18, 109  ;Branches_5_Fast_F
  348 D1:E8DA 00 0E 0E 6E 	.db 0, 14, 14, 110  ;Branches_14_Slow
  349 D1:E8DE -  -  -  -  
  350 D1:E8DE -  -  -  -  SG_Vine1:
  351 D1:E8DE 00 -  -  -  	.db 0
  352 D1:E8DF 04 -  -  -  	.db 4
  353 D1:E8E0 11 10 18 2C 	.db 17, 16, 24, 44  ;Vines_3_Slow
  354 D1:E8E4 00 13 23 68 	.db 0, 19, 35, 104  ;Vines_2_Slow
  355 D1:E8E8 1B 09 0C 38 	.db 27, 9, 12, 56  ;Vines_1_Slow
  356 D1:E8EC 13 10 00 32 	.db 19, 16, 0, 50  ;Vines_3_Slow_F
  357 D1:E8F0 -  -  -  -  
  358 D1:E8F0 -  -  -  -  SG_BranchBase1:
  359 D1:E8F0 00 -  -  -  	.db 0
  360 D1:E8F1 07 -  -  -  	.db 7
  361 D1:E8F2 04 0E 14 70 	.db 4, 14, 20, 112  ;Branches_0_Fast
  362 D1:E8F6 04 0E 0B 42 	.db 4, 14, 11, 66  ;Branches_3_Fast
  363 D1:E8FA 06 0B 02 1C 	.db 6, 11, 2, 28  ;Branches_6_Slow
  364 D1:E8FE 0F 0E 00 0B 	.db 15, 14, 0, 11  ;Branches_9_Fast
  365 D1:E902 09 0E 07 12 	.db 9, 14, 7, 18  ;Branches_8_Slow_O
  366 D1:E906 0D 09 0B 24 	.db 13, 9, 11, 36  ;Leaves_2_Slow_O
  367 D1:E90A 00 0D 0F 1B 	.db 0, 13, 15, 27  ;Leaves_6_Slow_O
  368 D1:E90E -  -  -  -  
  369 D1:E90E -  -  -  -  SG_BranchBase2:
  370 D1:E90E 00 -  -  -  	.db 0
  371 D1:E90F 07 -  -  -  	.db 7
  372 D1:E910 00 0E 2A 71 	.db 0, 14, 42, 113  ;Branches_1_Slow_O
  373 D1:E914 01 0E 21 5E 	.db 1, 14, 33, 94  ;Branches_2_Slow_O
  374 D1:E918 02 0E 18 72 	.db 2, 14, 24, 114  ;Branches_4_Slow_O
  375 D1:E91C 04 0E 06 45 	.db 4, 14, 6, 69  ;Branches_9_Slow_O
  376 D1:E920 04 0A 0F 22 	.db 4, 10, 15, 34  ;Branches_7_Slow_O
  377 D1:E924 0B 0E 00 1A 	.db 11, 14, 0, 26  ;Branches_10_Fast
  378 D1:E928 00 0C 17 73 	.db 0, 12, 23, 115  ;Leaves_3_Slow_O_F
  379 D1:E92C -  -  -  -  
  380 D1:E92C -  -  -  -  SG_BranchBase4:
  381 D1:E92C 00 -  -  -  	.db 0
  382 D1:E92D 05 -  -  -  	.db 5
  383 D1:E92E 0D 0E 00 75 	.db 13, 14, 0, 117  ;Branches_0_Fast_F
  384 D1:E932 07 0E 08 12 	.db 7, 14, 8, 18  ;Branches_8_Slow_O
  385 D1:E936 12 0E 09 76 	.db 18, 14, 9, 118  ;Branches_9_Fast_F
  386 D1:E93A 00 0E 0C 45 	.db 0, 14, 12, 69  ;Branches_9_Slow_O
  387 D1:E93E 0A 09 0B 69 	.db 10, 9, 11, 105  ;Leaves_2_Slow
  388 D1:E942 -  -  -  -  
  389 D1:E942 -  -  -  -  SG_CloudPlatform:
  390 D1:E942 00 -  -  -  	.db 0
  391 D1:E943 04 -  -  -  	.db 4
  392 D1:E944 00 10 00 77 	.db 0, 16, 0, 119  ;Clouds_2_Fast
  393 D1:E948 00 10 08 77 	.db 0, 16, 8, 119  ;Clouds_2_Fast
  394 D1:E94C 00 10 10 77 	.db 0, 16, 16, 119  ;Clouds_2_Fast
  395 D1:E950 00 10 18 77 	.db 0, 16, 24, 119  ;Clouds_2_Fast
  396 D1:E954 -  -  -  -  
  397 D1:E954 -  -  -  -  SG_DarkGroundChunk:
  398 D1:E954 00 -  -  -  	.db 0
  399 D1:E955 07 -  -  -  	.db 7
  400 D1:E956 11 0C 00 78 	.db 17, 12, 0, 120  ;GroundDirtDark_Fast
  401 D1:E95A 11 0C 08 78 	.db 17, 12, 8, 120  ;GroundDirtDark_Fast
  402 D1:E95E 10 0C 10 79 	.db 16, 12, 16, 121  ;GroundDirtDark_Fast_F
  403 D1:E962 05 0D 00 7A 	.db 5, 13, 0, 122  ;GroundHumpDark_Fast
  404 D1:E966 05 0D 08 7A 	.db 5, 13, 8, 122  ;GroundHumpDark_Fast
  405 D1:E96A 04 0D 10 7B 	.db 4, 13, 16, 123  ;GroundHumpDark_Fast_F
  406 D1:E96E 00 0D 0C 7B 	.db 0, 13, 12, 123  ;GroundHumpDark_Fast_F
  407 D1:E972 -  -  -  -  
  408 D1:E972 -  -  -  -  SG_BGTree1:
  409 D1:E972 00 -  -  -  	.db 0
  410 D1:E973 08 -  -  -  	.db 8
  411 D1:E974 16 10 05 7C 	.db 22, 16, 5, 124  ;Tree_16_Fast
  412 D1:E978 0A 0E 07 7D 	.db 10, 14, 7, 125  ;Tree_17_Slow_O
  413 D1:E97C 0C 0E 03 7E 	.db 12, 14, 3, 126  ;Tree_17_Slow_O_F
  414 D1:E980 26 10 04 7F 	.db 38, 16, 4, 127  ;Tree_16_Slow_O
  415 D1:E984 20 0E 02 80 	.db 32, 14, 2, 128  ;Tree_17_Slow_F
  416 D1:E988 00 0E 07 81 	.db 0, 14, 7, 129  ;Leaves_8_Fast
  417 D1:E98C 02 0E 00 81 	.db 2, 14, 0, 129  ;Leaves_8_Fast
  418 D1:E990 1D 09 00 69 	.db 29, 9, 0, 105  ;Leaves_2_Slow
  419 D1:E994 -  -  -  -  
  420 D1:E994 -  -  -  -  SG_BGTree2:
  421 D1:E994 00 -  -  -  	.db 0
  422 D1:E995 08 -  -  -  	.db 8
  423 D1:E996 31 0E 07 82 	.db 49, 14, 7, 130  ;Tree_18_Slow_O
  424 D1:E99A 31 0E 01 83 	.db 49, 14, 1, 131  ;Tree_17_Slow
  425 D1:E99E 31 0E 02 84 	.db 49, 14, 2, 132  ;Tree_18_Slow_F
  426 D1:E9A2 24 10 00 85 	.db 36, 16, 0, 133  ;Tree_16_Slow_O_F
  427 D1:E9A6 14 10 01 7F 	.db 20, 16, 1, 127  ;Tree_16_Slow_O
  428 D1:E9AA 0B 0E 01 82 	.db 11, 14, 1, 130  ;Tree_18_Slow_O
  429 D1:E9AE 00 0E 00 81 	.db 0, 14, 0, 129  ;Leaves_8_Fast
  430 D1:E9B2 2B 09 06 86 	.db 43, 9, 6, 134  ;Leaves_2_Slow_F
  431 D1:E9B6 -  -  -  -  
  432 D1:E9B6 -  -  -  -  SG_Cloud1:
  433 D1:E9B6 00 -  -  -  	.db 0
  434 D1:E9B7 0D -  -  -  	.db 13
  435 D1:E9B8 14 0A 06 87 	.db 20, 10, 6, 135  ;Clouds_0_Fast
  436 D1:E9BC 0D 0E 00 88 	.db 13, 14, 0, 136  ;Clouds_1_Fast
  437 D1:E9C0 00 0B 07 89 	.db 0, 11, 7, 137  ;Clouds_3_Fast
  438 D1:E9C4 03 0A 03 8A 	.db 3, 10, 3, 138  ;Clouds_4_Fast
  439 D1:E9C8 08 10 06 77 	.db 8, 16, 6, 119  ;Clouds_2_Fast
  440 D1:E9CC 14 0A 0E 87 	.db 20, 10, 14, 135  ;Clouds_0_Fast
  441 D1:E9D0 13 0A 14 8B 	.db 19, 10, 20, 139  ;Clouds_0_Fast_F
  442 D1:E9D4 0B 0E 1C 8C 	.db 11, 14, 28, 140  ;Clouds_1_Fast_F
  443 D1:E9D8 03 0A 1B 8D 	.db 3, 10, 27, 141  ;Clouds_4_Fast_F
  444 D1:E9DC 01 0B 0F 8E 	.db 1, 11, 15, 142  ;Clouds_3_Fast_F
  445 D1:E9E0 01 0B 15 89 	.db 1, 11, 21, 137  ;Clouds_3_Fast
  446 D1:E9E4 06 10 14 77 	.db 6, 16, 20, 119  ;Clouds_2_Fast
  447 D1:E9E8 06 10 0C 8F 	.db 6, 16, 12, 143  ;Clouds_2_Fast_F
  448 D1:E9EC -  -  -  -  
  449 D1:E9EC -  -  -  -  
  450 D1:E9EC -  -  -  -  
Listing for file "ascent.asm"
  573 D1:E9EC -  -  -  -  #include "generated/Collision_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Collision_Data.txt"
    1 D1:E9EC -  -  -  -  Collision_Data_Frame_Table: 
    2 D1:E9EC 0C EA D1 -  	.dl collision_data_0
    3 D1:E9EF F2 E9 D1 -  	.dl collision_data_1
    4 D1:E9F2 -  -  -  -  
    5 D1:E9F2 -  -  -  -  
    6 D1:E9F2 -  -  -  -  collision_data_1:
    7 D1:E9F2 05 -  -  -  	.db 5
    8 D1:E9F3 1C 0F 83 64 
              00 -  -  -  	.db 28,15,131,100,%00000000
    9 D1:E9F8 66 0F 5F 40 
              00 -  -  -  	.db 102,15,95,64,%00000000
   10 D1:E9FD 91 0F 2D 0E 
              00 -  -  -  	.db 145,15,45,14,%00000000
   11 D1:EA02 04 0F 30 11 
              80 -  -  -  	.db 4,15,48,17,%10000000
   12 D1:EA07 05 2F 14 0D 
              00 -  -  -  	.db 5,47,20,13,%00000000
   13 D1:EA0C -  -  -  -  
   14 D1:EA0C -  -  -  -  
   15 D1:EA0C -  -  -  -  collision_data_0:
   16 D1:EA0C 06 -  -  -  	.db 6
   17 D1:EA0D 18 01 9F 00 
              00 -  -  -  	.db 24,1,159,0,%00000000
   18 D1:EA12 54 0F 24 05 
              00 -  -  -  	.db 84,15,36,5,%00000000
   19 D1:EA17 A7 0F 49 2A 
              00 -  -  -  	.db 167,15,73,42,%00000000
   20 D1:EA1C 70 0F 8A 6B 
              00 -  -  -  	.db 112,15,138,107,%00000000
   21 D1:EA21 4A 0F 62 43 
              80 -  -  -  	.db 74,15,98,67,%10000000
   22 D1:EA26 A2 2F 94 8D 
              00 -  -  -  	.db 162,47,148,141,%00000000
   23 D1:EA2B -  -  -  -  
   24 D1:EA2B 00 -  -  -  	.db 0 ;Terminate Data
Listing for file "ascent.asm"
  574 D1:EA2C -  -  -  -  
  575 D1:EA2C -  -  -  -  ;#include "testing/SpriteGroups.txt"
  576 D1:EA2C -  -  -  -  ;#include "TestingSpriteData.txt"
  577 D1:EA2C -  -  -  -  ;#include "TestGeneratedSpriteData.txt"
  578 D1:EA2C -  -  -  -  ;#include "Sprite_Data.txt"
  579 D1:EA2C -  -  -  -  ;#include "FG_Data.txt"
  580 D1:EA2C -  -  -  -  ;#include "MG_Data.txt"
  581 D1:EA2C -  -  -  -  ;#include "BG_Data.txt"
  582 D1:EA2C -  -  -  -  ;#include "Palette_Setup.txt"
  583 D1:EA2C -  -  -  -  ;#include "Equates.txt"
  584 D1:EA2C -  -  -  -  ;#include "Decompress_Calls.txt"
  585 D1:EA2C -  -  -  -  ;#include "Sprite_Tables.txt"
  586 D1:EA2C -  -  -  -  ;#include "TestingBGData.txt"
  587 D1:EA2C -  -  -  -  ;#include "TestingFGData.txt"
  588 D1:EA2C -  -  -  -  
  589 D1:EA2C -  -  -  -  
