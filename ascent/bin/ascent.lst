    1 00:0000 -  -  -  -  
    2 00:0000 -  -  -  -  #include "includes\ti84pce.inc"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\includes\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "ascent.asm"
    3 00:0000 -  -  -  -  
    4 00:0000 -  -  -  -   .assume ADL=1
    5 00:0000 -  -  -  -   .org userMem-2
    6 D1:A87F EF 7B -  -   .db tExtTok,tAsm84CeCmp
    7 D1:A881 -  -  -  -  
    8 D1:A881 -  -  -  -  
    9 D1:A881 -  -  -  -  
   10 D1:A881 -  -  -  -  ;0E30000h + 0200h
   11 D1:A881 -  -  -  -  
   12 D1:A881 CD 28 08 02 	call _homeup
   13 D1:A885 CD 10 08 02 	call _ClrScrnFull
   14 D1:A889 -  -  -  -  
   15 D1:A889 CD 48 08 02 	call _RunIndicOff		; turn off run indicator
   16 D1:A88D F3 -  -  -  	di			
   17 D1:A88E -  -  -  -  	
   18 D1:A88E -  -  -  -  	
   19 D1:A88E CD 9E DE D1 	call setup_palette_1
   20 D1:A892 -  -  -  -  
   21 D1:A892 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255
   22 D1:A896 3E 25 -  -  	ld	a,lcdBpp4
   23 D1:A898 32 18 00 E3 	ld (mpLcdCtrl),a	
   24 D1:A89C -  -  -  -  
   25 D1:A89C -  -  -  -  
   26 D1:A89C -  -  -  -  
   27 D1:A89C -  -  -  -  
   28 D1:A89C -  -  -  -  	;call sdcomp_set_fast
   29 D1:A89C -  -  -  -  	;call sdcomp_set_flip
   30 D1:A89C -  -  -  -  	;call sdcomp_reset_offset
   31 D1:A89C -  -  -  -  	;ld hl, Tree_5 
   32 D1:A89C -  -  -  -  	;ld de, Tree_5_Fast_F_0
   33 D1:A89C -  -  -  -  	;call sdcomp_set_2bpc
   34 D1:A89C -  -  -  -  	;call sprite_decompress
   35 D1:A89C -  -  -  -  	
   36 D1:A89C -  -  -  -  	;call sdcomp_set_fast
   37 D1:A89C -  -  -  -  	;call sdcomp_reset_flip
   38 D1:A89C -  -  -  -  	;call sdcomp_reset_offset
   39 D1:A89C -  -  -  -  	;ld hl, Moss_0 
   40 D1:A89C -  -  -  -  	;ld de, Moss_0_Fast_0
   41 D1:A89C -  -  -  -  	;call sprite_decompress
   42 D1:A89C -  -  -  -  	
   43 D1:A89C -  -  -  -  	;call prgmpause
   44 D1:A89C -  -  -  -  	;call prgmpause
   45 D1:A89C -  -  -  -  
   46 D1:A89C -  -  -  -  
   47 D1:A89C 21 00 83 00 	ld hl,$008300
   48 D1:A8A0 22 E5 BF D1 	ld (player_x_pos),hl 
   49 D1:A8A4 21 00 6E 00 	ld hl,$006E00
   50 D1:A8A8 22 E8 BF D1 	ld (player_y_pos),hl 
   51 D1:A8AC 22 F4 BF D1 	ld (player_y_pos_prev),hl
   52 D1:A8B0 -  -  -  -  	
   53 D1:A8B0 CD 59 C5 D1 	call player_to_cam_coords
   54 D1:A8B4 11 50 00 00 	ld de,80
   55 D1:A8B8 ED 52 -  -  	sbc hl,de 
   56 D1:A8BA D2 C2 A8 D1 	jp nc, set_cam_0_pos_skip_start
   57 D1:A8BE 21 00 00 00 	ld hl,0
   58 D1:A8C2 -  -  -  -  set_cam_0_pos_skip_start:
   59 D1:A8C2 22 EE AB D1 	ld (cam_pos),hl
   60 D1:A8C6 -  -  -  -  	;ld (bg_cam_pos),hl
   61 D1:A8C6 -  -  -  -  	
   62 D1:A8C6 -  -  -  -  	
   63 D1:A8C6 3E 02 -  -  	ld a,%00000010;disable, 32768hz
   64 D1:A8C8 32 30 00 F2 	ld ($F20030),a	
   65 D1:A8CC -  -  -  -  	
   66 D1:A8CC CD B1 B8 D1 	call setup_decompress_queue
   67 D1:A8D0 -  -  -  -  	
   68 D1:A8D0 -  -  -  -  	;Decompress sprites in preframes for setup
   69 D1:A8D0 21 BC D3 D1 	ld hl,decompress_frame_up_pre2 
   70 D1:A8D4 CD B7 B9 D1 	call cfdc_direct_add_decompress_frame
   71 D1:A8D8 CD FE B8 D1 	call continue_decompressions ;Run decompression (Will finish as timer has not started)
   72 D1:A8DC 21 F8 D4 D1 	ld hl,decompress_frame_up_pre1
   73 D1:A8E0 CD B7 B9 D1 	call cfdc_direct_add_decompress_frame
   74 D1:A8E4 CD FE B8 D1 	call continue_decompressions ;Run decompression (Will finish as timer has not started)
   75 D1:A8E8 -  -  -  -  	
   76 D1:A8E8 -  -  -  -  	;call draw_fg
   77 D1:A8E8 -  -  -  -  	
   78 D1:A8E8 3E 00 -  -  	ld a,0
   79 D1:A8EA CD A9 B9 D1 	call cfdc_cam_move_up ;need to skip here for frame 0
   80 D1:A8EE -  -  -  -  	
   81 D1:A8EE -  -  -  -  	;call prgmpause
   82 D1:A8EE -  -  -  -  
   83 D1:A8EE CD FE B8 D1 	call continue_decompressions
   84 D1:A8F2 -  -  -  -  	
   85 D1:A8F2 -  -  -  -  	;call prgmpause
   86 D1:A8F2 00 -  -  -  	nop ;This needs to be here for some reason
   87 D1:A8F3 -  -  -  -  ;	call decompress_calls
   88 D1:A8F3 -  -  -  -  	
   89 D1:A8F3 -  -  -  -  
   90 D1:A8F3 -  -  -  -  	
   91 D1:A8F3 -  -  -  -  	;gen purp timers
   92 D1:A8F3 -  -  -  -  		; 76543210	
   93 D1:A8F3 3E 03 -  -  	ld a,%00000011;enable, 32768hz
   94 D1:A8F5 32 30 00 F2 	ld ($F20030),a
   95 D1:A8F9 -  -  -  -  	;	  fedcba98
   96 D1:A8F9 3E 02 -  -  	ld a,%00000010;count up
   97 D1:A8FB 32 31 00 F2 	ld ($F20031),a
   98 D1:A8FF -  -  -  -  	
   99 D1:A8FF 21 00 2C D5 	ld hl,vRam + (160*240*2)
  100 D1:A903 22 F4 AB D1 	ld (draw_buffer),hl
  101 D1:A907 21 00 C2 D5 	ld hl,vRam + (160*240*3)
  102 D1:A90B 22 10 00 E3 	ld (mpLcdBase),hl
  103 D1:A90F -  -  -  -  	
  104 D1:A90F -  -  -  -  	
  105 D1:A90F -  -  -  -  
  106 D1:A90F -  -  -  -  	;ld hl,BG_buffer+(160*5)
  107 D1:A90F -  -  -  -  	;ld (dbgl_vram_line_start),hl
  108 D1:A90F -  -  -  -  
  109 D1:A90F -  -  -  -  	;ld hl,BG_Data_1
  110 D1:A90F -  -  -  -  	;ld a,10
  111 D1:A90F -  -  -  -  	;call draw_bg_line
  112 D1:A90F -  -  -  -  	
  113 D1:A90F -  -  -  -  	
  114 D1:A90F -  -  -  -  	;call prgmpause
  115 D1:A90F -  -  -  -  
  116 D1:A90F -  -  -  -  	;call draw_mg
  117 D1:A90F -  -  -  -  
  118 D1:A90F CD 47 AD D1 	call setup_bg ;after initial decompressions and cam setup
  119 D1:A913 -  -  -  -  	;call prgmpause
  120 D1:A913 -  -  -  -  	;call prgmpause
  121 D1:A913 -  -  -  -  main_loop:
  122 D1:A913 -  -  -  -  
  123 D1:A913 -  -  -  -  	
  124 D1:A913 -  -  -  -  
  125 D1:A913 -  -  -  -  	;clear timer
  126 D1:A913 3E 00 -  -  	ld a,0
  127 D1:A915 32 00 00 F2 	ld ($F20000),a;32768hz
  128 D1:A919 32 01 00 F2 	ld ($F20001),a;128hz
  129 D1:A91D 32 02 00 F2 	ld ($F20002),a;0.5hz
  130 D1:A921 32 03 00 F2 	ld ($F20003),a
  131 D1:A925 -  -  -  -  	
  132 D1:A925 -  -  -  -  	;Instructions here 
  133 D1:A925 -  -  -  -  	
  134 D1:A925 -  -  -  -  	
  135 D1:A925 -  -  -  -  	;call input_cam_up
  136 D1:A925 C3 D7 B9 D1 	jp get_inputs ;use jp so can jump to prgmexit to not have pushed PC pointer
  137 D1:A929 -  -  -  -  get_inputs_return:
  138 D1:A929 -  -  -  -  	;call move_bg Draw BG calls MoveBg
  139 D1:A929 -  -  -  -  	;call player_move_debug
  140 D1:A929 CD 1E BB D1 	call player_update
  141 D1:A92D CD 26 BD D1 	call check_collisions
  142 D1:A931 -  -  -  -  	
  143 D1:A931 CD 3E C7 D1 	call update_sine_vals
  144 D1:A935 -  -  -  -  	;ld a,(lin_4_7_1)
  145 D1:A935 -  -  -  -  	;call write_a_to_ram
  146 D1:A935 -  -  -  -  	
  147 D1:A935 CD 9B CA D1 	call update_animations
  148 D1:A939 -  -  -  -  	
  149 D1:A939 CD 05 C0 D1 	call breakaway_timer_update
  150 D1:A93D -  -  -  -  	
  151 D1:A93D CD 59 C1 D1 	call player_move_cam
  152 D1:A941 -  -  -  -  	
  153 D1:A941 CD 57 AC D1 	call draw_bg
  154 D1:A945 -  -  -  -  
  155 D1:A945 -  -  -  -  	
  156 D1:A945 -  -  -  -  	
  157 D1:A945 -  -  -  -  	;TEsting
  158 D1:A945 21 00 00 00 	ld hl,0
  159 D1:A949 3A 00 00 F2 	ld a,($F20000);32768hz
  160 D1:A94D 6F -  -  -  	ld l,a
  161 D1:A94E 3A 01 00 F2 	ld a,($F20001);128hz 
  162 D1:A952 67 -  -  -  	ld h,a
  163 D1:A953 CB 3C -  -  	srl h ;div by 8
  164 D1:A955 CB 1D -  -  	rr l 
  165 D1:A957 CB 3C -  -  	srl h
  166 D1:A959 CB 1D -  -  	rr l 
  167 D1:A95B CB 3C -  -  	srl h
  168 D1:A95D CB 1D -  -  	rr l 
  169 D1:A95F 7D -  -  -  	ld a,l
  170 D1:A960 32 FB AB D1 	ld (draw_bg_time),a
  171 D1:A964 -  -  -  -  	
  172 D1:A964 -  -  -  -  	;TEST CLEAR BUFFER
  173 D1:A964 -  -  -  -  	;ld hl,BG_buffer
  174 D1:A964 -  -  -  -  	;ld de,(draw_buffer)
  175 D1:A964 -  -  -  -  	;ld bc, 160*240
  176 D1:A964 -  -  -  -  	;ldir
  177 D1:A964 -  -  -  -  	
  178 D1:A964 CD 63 B5 D1 	call draw_mg
  179 D1:A968 -  -  -  -  	
  180 D1:A968 CD 81 B5 D1 	call draw_mg2
  181 D1:A96C -  -  -  -  	
  182 D1:A96C -  -  -  -  	
  183 D1:A96C CD D1 C2 D1 	call player_draw 
  184 D1:A970 3A FE BF D1 	ld a,(player_flags)
  185 D1:A974 CB BF -  -  	res 7,a ;Reset jump hold flag
  186 D1:A976 32 FE BF D1 	ld (player_flags),a 
  187 D1:A97A -  -  -  -  	
  188 D1:A97A -  -  -  -  	
  189 D1:A97A -  -  -  -  	;ld hl,121
  190 D1:A97A -  -  -  -  	;ld (tongue_ring_y_pos),hl 
  191 D1:A97A -  -  -  -  	;ld a, 50
  192 D1:A97A -  -  -  -  	;ld (tongue_ring_x_pos),a 
  193 D1:A97A -  -  -  -  	
  194 D1:A97A -  -  -  -  	;ld c,20 
  195 D1:A97A -  -  -  -  	;call draw_tongue
  196 D1:A97A -  -  -  -  	
  197 D1:A97A -  -  -  -  	
  198 D1:A97A -  -  -  -  	
  199 D1:A97A -  -  -  -  	;TEsting
  200 D1:A97A 21 00 00 00 	ld hl,0
  201 D1:A97E 3A 00 00 F2 	ld a,($F20000);32768hz
  202 D1:A982 6F -  -  -  	ld l,a
  203 D1:A983 3A 01 00 F2 	ld a,($F20001);128hz 
  204 D1:A987 67 -  -  -  	ld h,a
  205 D1:A988 CB 3C -  -  	srl h ;div by 8
  206 D1:A98A CB 1D -  -  	rr l 
  207 D1:A98C CB 3C -  -  	srl h
  208 D1:A98E CB 1D -  -  	rr l 
  209 D1:A990 CB 3C -  -  	srl h
  210 D1:A992 CB 1D -  -  	rr l 
  211 D1:A994 7D -  -  -  	ld a,l
  212 D1:A995 32 FC AB D1 	ld (draw_mg_time),a
  213 D1:A999 -  -  -  -  	
  214 D1:A999 CD 9F B5 D1 	call draw_fg
  215 D1:A99D -  -  -  -  	
  216 D1:A99D -  -  -  -  	
  217 D1:A99D -  -  -  -  	;call dl_set_negative
  218 D1:A99D -  -  -  -  	;Line draw test 
  219 D1:A99D -  -  -  -  	;ld hl, (draw_buffer)
  220 D1:A99D -  -  -  -  	;ld de, 160*96  + 25
  221 D1:A99D -  -  -  -  	;add hl,de 
  222 D1:A99D -  -  -  -  	;ld a, 35; x dist 
  223 D1:A99D -  -  -  -  	;ld (dl_x_dist),a 
  224 D1:A99D -  -  -  -  	;ld a, 22; y dist 
  225 D1:A99D -  -  -  -  	;ld c,a 
  226 D1:A99D -  -  -  -  	;ld (dl_y_dist_1),a 
  227 D1:A99D -  -  -  -  	;ld (dl_y_dist_2),a 
  228 D1:A99D -  -  -  -  	;ld de,0
  229 D1:A99D -  -  -  -  	;ld a,0 
  230 D1:A99D -  -  -  -  	;ld b,0
  231 D1:A99D -  -  -  -  	;call draw_line_loop
  232 D1:A99D -  -  -  -  	
  233 D1:A99D -  -  -  -  	
  234 D1:A99D -  -  -  -  	
  235 D1:A99D -  -  -  -  	;ld hl, (draw_buffer)
  236 D1:A99D -  -  -  -  	;ld de, 160*96  + 25
  237 D1:A99D -  -  -  -  	;add hl,de
  238 D1:A99D -  -  -  -  	;ex de, hl
  239 D1:A99D -  -  -  -  	;ld hl,Unlucky_0_Fast
  240 D1:A99D -  -  -  -  	;call draw_fast_sprite_full
  241 D1:A99D -  -  -  -  	
  242 D1:A99D -  -  -  -  	;Leaves_4_Slow_1 has issue
  243 D1:A99D -  -  -  -  	;Need to fix indexing of decompress segments
  244 D1:A99D -  -  -  -  	
  245 D1:A99D -  -  -  -  	;Sprite groups must all use the same load index of a given sprite, as they pull from same data
  246 D1:A99D -  -  -  -  	
  247 D1:A99D -  -  -  -  	
  248 D1:A99D -  -  -  -  	
  249 D1:A99D -  -  -  -  	;TEsting
  250 D1:A99D 21 00 00 00 	ld hl,0
  251 D1:A9A1 3A 00 00 F2 	ld a,($F20000);32768hz
  252 D1:A9A5 6F -  -  -  	ld l,a
  253 D1:A9A6 3A 01 00 F2 	ld a,($F20001);128hz 
  254 D1:A9AA 67 -  -  -  	ld h,a
  255 D1:A9AB CB 3C -  -  	srl h ;div by 8
  256 D1:A9AD CB 1D -  -  	rr l 
  257 D1:A9AF CB 3C -  -  	srl h
  258 D1:A9B1 CB 1D -  -  	rr l 
  259 D1:A9B3 CB 3C -  -  	srl h
  260 D1:A9B5 CB 1D -  -  	rr l 
  261 D1:A9B7 7D -  -  -  	ld a,l
  262 D1:A9B8 32 FD AB D1 	ld (draw_fg_time),a
  263 D1:A9BC -  -  -  -  	
  264 D1:A9BC 21 00 00 00 	ld hl,0
  265 D1:A9C0 -  -  -  -  	
  266 D1:A9C0 -  -  -  -  	; for debug longest frame draw time
  267 D1:A9C0 3A 00 00 F2 	ld a,($F20000)
  268 D1:A9C4 6F -  -  -  	ld l,a
  269 D1:A9C5 3A 01 00 F2 	ld a,($F20001);128hz 
  270 D1:A9C9 67 -  -  -  	ld h,a
  271 D1:A9CA E5 -  -  -  	push hl
  272 D1:A9CB ED 4B FF AB 
              D1 -  -  -  	ld bc,(longestFrame)
  273 D1:A9D0 ED 42 -  -  	sbc hl,bc 
  274 D1:A9D2 DA E4 A9 D1 	jp c,longest_frame_skip
  275 D1:A9D6 -  -  -  -  	
  276 D1:A9D6 E1 -  -  -  	pop hl 
  277 D1:A9D7 E5 -  -  -  	push hl 
  278 D1:A9D8 22 FF AB D1 	ld (longestFrame),hl 
  279 D1:A9DC 2A EE AB D1 	ld hl,(cam_pos)
  280 D1:A9E0 22 02 AC D1 	ld (longestFramePos),hl
  281 D1:A9E4 -  -  -  -  longest_frame_skip:
  282 D1:A9E4 E1 -  -  -  	pop hl 
  283 D1:A9E5 -  -  -  -  	
  284 D1:A9E5 -  -  -  -  	;Add to frame counter
  285 D1:A9E5 2A 08 AC D1 	ld hl,(frameCount)
  286 D1:A9E9 23 -  -  -  	inc hl
  287 D1:A9EA 22 08 AC D1 	ld (frameCount),hl
  288 D1:A9EE -  -  -  -  	
  289 D1:A9EE -  -  -  -  
  290 D1:A9EE -  -  -  -  	
  291 D1:A9EE -  -  -  -  	;check if lcd has drawn first frame
  292 D1:A9EE -  -  -  -  
  293 D1:A9EE CD 8E B9 D1 	call check_for_decompress_calls
  294 D1:A9F2 -  -  -  -  	;Sprite decompression will occur here
  295 D1:A9F2 CD FE B8 D1 	call continue_decompressions
  296 D1:A9F6 -  -  -  -  	
  297 D1:A9F6 -  -  -  -  	;TEsting
  298 D1:A9F6 21 00 00 00 	ld hl,0
  299 D1:A9FA 3A 00 00 F2 	ld a,($F20000);32768hz
  300 D1:A9FE 6F -  -  -  	ld l,a
  301 D1:A9FF 3A 01 00 F2 	ld a,($F20001);128hz 
  302 D1:AA03 67 -  -  -  	ld h,a
  303 D1:AA04 CB 3C -  -  	srl h ;div by 8
  304 D1:AA06 CB 1D -  -  	rr l 
  305 D1:AA08 CB 3C -  -  	srl h
  306 D1:AA0A CB 1D -  -  	rr l 
  307 D1:AA0C CB 3C -  -  	srl h
  308 D1:AA0E CB 1D -  -  	rr l 
  309 D1:AA10 7D -  -  -  	ld a,l
  310 D1:AA11 32 FE AB D1 	ld (decompress_time),a
  311 D1:AA15 -  -  -  -  
  312 D1:AA15 -  -  -  -  
  313 D1:AA15 -  -  -  -  	
  314 D1:AA15 -  -  -  -  
  315 D1:AA15 -  -  -  -  	;Draw time bar at top of screen 
  316 D1:AA15 2A F4 AB D1 	ld hl, (draw_buffer)
  317 D1:AA19 01 00 00 00 	ld bc,0 
  318 D1:AA1D 3A FE AB D1 	ld a,(decompress_time)
  319 D1:AA21 4F -  -  -  	ld c,a 
  320 D1:AA22 3E 55 -  -  	ld a, $55
  321 D1:AA24 CD E0 10 02 	call _MemSet
  322 D1:AA28 -  -  -  -  	
  323 D1:AA28 2A F4 AB D1 	ld hl, (draw_buffer)
  324 D1:AA2C 01 00 00 00 	ld bc,0 
  325 D1:AA30 3A FD AB D1 	ld a,(draw_fg_time)
  326 D1:AA34 4F -  -  -  	ld c,a 
  327 D1:AA35 3E 44 -  -  	ld a, $44
  328 D1:AA37 CD E0 10 02 	call _MemSet
  329 D1:AA3B -  -  -  -  	
  330 D1:AA3B 2A F4 AB D1 	ld hl, (draw_buffer)
  331 D1:AA3F 01 00 00 00 	ld bc,0 
  332 D1:AA43 3A FC AB D1 	ld a,(draw_mg_time)
  333 D1:AA47 4F -  -  -  	ld c,a 
  334 D1:AA48 3E 33 -  -  	ld a, $33
  335 D1:AA4A CD E0 10 02 	call _MemSet
  336 D1:AA4E -  -  -  -  
  337 D1:AA4E 2A F4 AB D1 	ld hl, (draw_buffer)
  338 D1:AA52 01 00 00 00 	ld bc,0 
  339 D1:AA56 3A FB AB D1 	ld a,(draw_bg_time)
  340 D1:AA5A 4F -  -  -  	ld c,a 
  341 D1:AA5B 3E 22 -  -  	ld a, $22
  342 D1:AA5D CD E0 10 02 	call _MemSet
  343 D1:AA61 -  -  -  -  	
  344 D1:AA61 -  -  -  -  
  345 D1:AA61 2A F4 AB D1 	ld hl, (draw_buffer)
  346 D1:AA65 -  -  -  -  	;max time = 00000011 11100010
  347 D1:AA65 -  -  -  -  	;after 3x shift, a = 01111100 = 120
  348 D1:AA65 01 78 00 00 	ld bc, 120  ; =1000/4 /2 for 2pix/bit 
  349 D1:AA69 09 -  -  -  	add hl,bc 
  350 D1:AA6A 3E 55 -  -  	ld a,$55
  351 D1:AA6C 77 -  -  -  	ld (hl),a 
  352 D1:AA6D -  -  -  -  	
  353 D1:AA6D -  -  -  -  	
  354 D1:AA6D -  -  -  -  	;Again for thick line
  355 D1:AA6D -  -  -  -  	
  356 D1:AA6D 2A F4 AB D1 	ld hl, (draw_buffer)
  357 D1:AA71 01 A0 00 00 	ld bc,160
  358 D1:AA75 09 -  -  -  	add hl,bc 
  359 D1:AA76 3A FE AB D1 	ld a,(decompress_time)
  360 D1:AA7A 4F -  -  -  	ld c,a 
  361 D1:AA7B 3E 55 -  -  	ld a, $55
  362 D1:AA7D CD E0 10 02 	call _MemSet
  363 D1:AA81 -  -  -  -  	
  364 D1:AA81 2A F4 AB D1 	ld hl, (draw_buffer)
  365 D1:AA85 01 A0 00 00 	ld bc,160
  366 D1:AA89 09 -  -  -  	add hl,bc 
  367 D1:AA8A 3A FD AB D1 	ld a,(draw_fg_time)
  368 D1:AA8E 4F -  -  -  	ld c,a 
  369 D1:AA8F 3E 44 -  -  	ld a, $44
  370 D1:AA91 CD E0 10 02 	call _MemSet
  371 D1:AA95 -  -  -  -  	
  372 D1:AA95 2A F4 AB D1 	ld hl, (draw_buffer)
  373 D1:AA99 01 A0 00 00 	ld bc,160
  374 D1:AA9D 09 -  -  -  	add hl,bc
  375 D1:AA9E 3A FC AB D1 	ld a,(draw_mg_time)
  376 D1:AAA2 4F -  -  -  	ld c,a 
  377 D1:AAA3 3E 33 -  -  	ld a, $33
  378 D1:AAA5 CD E0 10 02 	call _MemSet
  379 D1:AAA9 -  -  -  -  
  380 D1:AAA9 2A F4 AB D1 	ld hl, (draw_buffer)
  381 D1:AAAD 01 A0 00 00 	ld bc,160
  382 D1:AAB1 09 -  -  -  	add hl,bc
  383 D1:AAB2 3A FB AB D1 	ld a,(draw_bg_time)
  384 D1:AAB6 4F -  -  -  	ld c,a 
  385 D1:AAB7 3E 22 -  -  	ld a, $22
  386 D1:AAB9 CD E0 10 02 	call _MemSet
  387 D1:AABD -  -  -  -  	
  388 D1:AABD 2A F4 AB D1 	ld hl, (draw_buffer)
  389 D1:AAC1 01 18 01 00 	ld bc,280
  390 D1:AAC5 09 -  -  -  	add hl,bc 
  391 D1:AAC6 3E 55 -  -  	ld a,$55
  392 D1:AAC8 77 -  -  -  	ld (hl),a 
  393 D1:AAC9 -  -  -  -  	
  394 D1:AAC9 -  -  -  -  	
  395 D1:AAC9 -  -  -  -  
  396 D1:AAC9 -  -  -  -  
  397 D1:AAC9 -  -  -  -  	
  398 D1:AAC9 -  -  -  -  
  399 D1:AAC9 -  -  -  -  	;swap draw buffers
  400 D1:AAC9 2A 10 00 E3 	ld hl,(mpLcdBase)
  401 D1:AACD ED 5B F4 AB 
              D1 -  -  -  	ld de,(draw_buffer)
  402 D1:AAD2 ED 53 10 00 
              E3 -  -  -  	ld (mpLcdBase),de
  403 D1:AAD7 22 F4 AB D1 	ld (draw_buffer),hl
  404 D1:AADB -  -  -  -  
  405 D1:AADB -  -  -  -  
  406 D1:AADB -  -  -  -  	;wait until finished drawing second frame
  407 D1:AADB -  -  -  -  	;Need to check clock here, there wont always be decompression to wait for
  408 D1:AADB -  -  -  -  	;Max time = 00000011 11000000
  409 D1:AADB -  -  -  -  main_clock_check_loop:
  410 D1:AADB 3A 01 00 F2 	ld a,($F20001);128hz clock
  411 D1:AADF FE 03 -  -  	cp %00000011 ;check if reached 4 
  412 D1:AAE1 DA DB AA D1 	jp c,main_clock_check_loop ;msb <= 2, can continue  
  413 D1:AAE5 3A 00 00 F2 	ld a,($F20000);32768hz clock
  414 D1:AAE9 FE E0 -  -  	cp %11100000;check if reached value 
  415 D1:AAEB DA DB AA D1 	jp c,main_clock_check_loop ;msb = 3 and lsb < value, can continue
  416 D1:AAEF -  -  -  -  	
  417 D1:AAEF -  -  -  -  
  418 D1:AAEF -  -  -  -  
  419 D1:AAEF -  -  -  -  clear_int:      
  420 D1:AAEF 21 28 00 E3     ld hl, mpLcdIcr
  421 D1:AAF3 CB D6 -  -      set 2, (hl)            ; clear interrupt
  422 D1:AAF5 21 20 00 E3     ld hl, mpLcdRis
  423 D1:AAF9 -  -  -  -  wait_int:
  424 D1:AAF9 CB 56 -  -      bit 2, (hl)
  425 D1:AAFB 28 FC -  -      jr z, wait_int  
  426 D1:AAFD -  -  -  -  
  427 D1:AAFD -  -  -  -  
  428 D1:AAFD 21 00 00 00 	ld hl,0
  429 D1:AB01 -  -  -  -  	
  430 D1:AB01 3A 02 00 F2 	ld a,($F20002)
  431 D1:AB05 67 -  -  -  	ld h,a
  432 D1:AB06 3A 01 00 F2 	ld a,($F20001)
  433 D1:AB0A 6F -  -  -  	ld l,a
  434 D1:AB0B ED 4B 05 AC 
              D1 -  -  -  	ld bc,(totalTime)
  435 D1:AB10 09 -  -  -  	add hl,bc 
  436 D1:AB11 22 05 AC D1 	ld (totalTime),hl 
  437 D1:AB15 -  -  -  -  	
  438 D1:AB15 -  -  -  -  	
  439 D1:AB15 -  -  -  -  	
  440 D1:AB15 -  -  -  -  	
  441 D1:AB15 -  -  -  -  
  442 D1:AB15 -  -  -  -  	
  443 D1:AB15 -  -  -  -  
  444 D1:AB15 C2 13 A9 D1 	jp nz,main_loop
  445 D1:AB19 -  -  -  -  		
  446 D1:AB19 -  -  -  -  	;print debug times 
  447 D1:AB19 21 00 00 D4 	ld hl,vRam
  448 D1:AB1D 22 10 00 E3 	ld (mpLcdBase),hl
  449 D1:AB21 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  450 D1:AB25 3E 2D -  -  	ld	a,lcdBpp16
  451 D1:AB27 32 18 00 E3 	ld (mpLcdCtrl),a
  452 D1:AB2B -  -  -  -  	
  453 D1:AB2B 3E 00 -  -  	ld a,0
  454 D1:AB2D 32 95 05 D0 	ld (curRow),a
  455 D1:AB31 32 96 05 D0 	ld (curCol),a
  456 D1:AB35 2A FF AB D1 	ld hl,(longestFrame)
  457 D1:AB39 CD E0 1E 02 	call _DispHL
  458 D1:AB3D 3E 01 -  -  	ld a,1
  459 D1:AB3F 32 95 05 D0 	ld (curRow),a
  460 D1:AB43 3E 00 -  -  	ld a,0
  461 D1:AB45 32 96 05 D0 	ld (curCol),a
  462 D1:AB49 2A 02 AC D1 	ld hl,(longestFramePos)
  463 D1:AB4D CD E0 1E 02 	call _DispHL
  464 D1:AB51 3E 02 -  -  	ld a,2
  465 D1:AB53 32 95 05 D0 	ld (curRow),a
  466 D1:AB57 3E 00 -  -  	ld a,0
  467 D1:AB59 32 96 05 D0 	ld (curCol),a
  468 D1:AB5D 2A 05 AC D1 	ld hl,(totalTime)
  469 D1:AB61 CD E0 1E 02 	call _DispHL
  470 D1:AB65 3E 03 -  -  	ld a,3
  471 D1:AB67 32 95 05 D0 	ld (curRow),a
  472 D1:AB6B 3E 00 -  -  	ld a,0
  473 D1:AB6D 32 96 05 D0 	ld (curCol),a
  474 D1:AB71 2A 08 AC D1 	ld hl,(frameCount)
  475 D1:AB75 CD E0 1E 02 	call _DispHL
  476 D1:AB79 -  -  -  -  	
  477 D1:AB79 CD DD AB D1 	call prgmpause
  478 D1:AB7D CD DD AB D1 	call prgmpause
  479 D1:AB81 -  -  -  -  	
  480 D1:AB81 -  -  -  -  	
  481 D1:AB81 -  -  -  -  exit_prgm:
  482 D1:AB81 21 00 00 D4 	ld hl,vRam
  483 D1:AB85 22 10 00 E3 	ld (mpLcdBase),hl
  484 D1:AB89 CD 10 08 02 	call _ClrScrnFull
  485 D1:AB8D 3E 2D -  -  	ld	a,lcdBpp16
  486 D1:AB8F 32 18 00 E3 	ld	(mpLcdCtrl),a
  487 D1:AB93 CD 3C 1A 02 	call _DrawStatusBar
  488 D1:AB97 -  -  -  -  	
  489 D1:AB97 FB -  -  -  	ei				; reset screen back to normal
  490 D1:AB98 C9 -  -  -  	ret			; return to os
  491 D1:AB99 -  -  -  -  
  492 D1:AB99 -  -  -  -  
  493 D1:AB99 -  -  -  -  printHL:;=================REMOVE
  494 D1:AB99 E5 -  -  -  	push hl
  495 D1:AB9A 21 00 00 D4 	ld hl,vRam
  496 D1:AB9E 22 10 00 E3 	ld (mpLcdBase),hl
  497 D1:ABA2 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  498 D1:ABA6 3E 2D -  -  	ld	a,lcdBpp16
  499 D1:ABA8 32 18 00 E3 	ld (mpLcdCtrl),a
  500 D1:ABAC E1 -  -  -  	pop hl
  501 D1:ABAD CD E0 1E 02 	call _DispHL
  502 D1:ABB1 FB -  -  -  	ei
  503 D1:ABB2 CD 8C 0D 02 	call _GetKey
  504 D1:ABB6 F3 -  -  -  	di
  505 D1:ABB7 C3 81 AB D1 	jp exit_prgm
  506 D1:ABBB -  -  -  -  
  507 D1:ABBB -  -  -  -  
  508 D1:ABBB -  -  -  -  write_a_to_ram:
  509 D1:ABBB F5 -  -  -  	push af 
  510 D1:ABBC E5 -  -  -  	push hl 
  511 D1:ABBD -  -  -  -  write_a_to_ram_addr .equ $ + 1 
  512 D1:ABBD 21 F6 31 D0 	ld hl, $D031F6 ;pixel shadow
  513 D1:ABC1 77 -  -  -  	ld (hl),a 
  514 D1:ABC2 23 -  -  -  	inc hl 
  515 D1:ABC3 22 BE AB D1 	ld (write_a_to_ram_addr),hl 
  516 D1:ABC7 E1 -  -  -  	pop hl 
  517 D1:ABC8 F1 -  -  -  	pop af 
  518 D1:ABC9 C9 -  -  -  	ret 
  519 D1:ABCA -  -  -  -  	
  520 D1:ABCA -  -  -  -  write_hl_to_ram:
  521 D1:ABCA E5 -  -  -  	push hl 
  522 D1:ABCB D5 -  -  -  	push de 
  523 D1:ABCC EB -  -  -  	ex de,hl
  524 D1:ABCD 2A BE AB D1 	ld hl,(write_a_to_ram_addr)
  525 D1:ABD1 ED 1F -  -  	ld (hl),de 
  526 D1:ABD3 23 -  -  -  	inc hl
  527 D1:ABD4 23 -  -  -  	inc hl
  528 D1:ABD5 23 -  -  -  	inc hl
  529 D1:ABD6 22 BE AB D1 	ld (write_a_to_ram_addr),hl
  530 D1:ABDA D1 -  -  -  	pop de 
  531 D1:ABDB E1 -  -  -  	pop hl
  532 D1:ABDC C9 -  -  -  	ret 
  533 D1:ABDD -  -  -  -  
  534 D1:ABDD -  -  -  -  prgmpause: ;for testing, interrupts code until key pressed. will destroy af register
  535 D1:ABDD F5 -  -  -  	push af
  536 D1:ABDE D5 -  -  -  	push de 
  537 D1:ABDF E5 -  -  -  	push hl 
  538 D1:ABE0 08 -  -  -  	ex af,af';'
  539 D1:ABE1 F5 -  -  -  	push af 
  540 D1:ABE2 FB -  -  -  	ei
  541 D1:ABE3 CD 8C 0D 02 	call _GetKey
  542 D1:ABE7 F3 -  -  -  	di
  543 D1:ABE8 F1 -  -  -  	pop af 
  544 D1:ABE9 08 -  -  -  	ex af,af';'
  545 D1:ABEA E1 -  -  -  	pop hl 
  546 D1:ABEB D1 -  -  -  	pop de 
  547 D1:ABEC F1 -  -  -  	pop af
  548 D1:ABED C9 -  -  -  	ret
  549 D1:ABEE -  -  -  -  
  550 D1:ABEE -  -  -  -  cam_pos:;y position of lowest visible line in fg layer
  551 D1:ABEE 00 00 00 -  	.dl 0
  552 D1:ABF1 -  -  -  -  bg_cam_pos: ;y position of lowest visible line in bg layer (= cam pos / 8)
  553 D1:ABF1 00 00 00 -  	.dl 0
  554 D1:ABF4 -  -  -  -  
  555 D1:ABF4 -  -  -  -  
  556 D1:ABF4 -  -  -  -  draw_buffer:;where new frame is drawn before lcd pointer is swapped 
  557 D1:ABF4 00 2C D5 -  	.dl $d52c00
  558 D1:ABF7 -  -  -  -  	
  559 D1:ABF7 -  -  -  -  BG_draw_buffer: ;Address of the uppermost line of the background buffer. This is where new lines of bg are drawn to 
  560 D1:ABF7 00 00 00 -  	.dl 0
  561 D1:ABFA -  -  -  -  BG_buffer .equ vram + (160*240) ;Start of BG buffer 
  562 D1:ABFA -  -  -  -  
  563 D1:ABFA -  -  -  -  
  564 D1:ABFA -  -  -  -  ;d40000 = Decompressed sprite data
  565 D1:ABFA -  -  -  -  ;d49600 = BG buffer
  566 D1:ABFA -  -  -  -  ;d52c00 = Frame draw buffer 1 
  567 D1:ABFA -  -  -  -  ;d5c200 = frame draw buffer 2
  568 D1:ABFA -  -  -  -  
  569 D1:ABFA -  -  -  -  ;pixelShadow .equ $D031F6 
  570 D1:ABFA -  -  -  -  
  571 D1:ABFA -  -  -  -  move_bg_time:
  572 D1:ABFA 00 -  -  -  	.db 0
  573 D1:ABFB -  -  -  -  draw_bg_time:
  574 D1:ABFB 00 -  -  -  	.db 0
  575 D1:ABFC -  -  -  -  draw_mg_time:
  576 D1:ABFC 00 -  -  -  	.db 0
  577 D1:ABFD -  -  -  -  draw_fg_time:
  578 D1:ABFD 00 -  -  -  	.db 0
  579 D1:ABFE -  -  -  -  decompress_time:
  580 D1:ABFE 00 -  -  -  	.db 0
  581 D1:ABFF -  -  -  -  
  582 D1:ABFF -  -  -  -  
  583 D1:ABFF -  -  -  -  longestFrame:
  584 D1:ABFF 00 00 00 -  	.dl 0
  585 D1:AC02 -  -  -  -  longestFramePos:
  586 D1:AC02 00 00 00 -  	.dl 0
  587 D1:AC05 -  -  -  -  totalTime:
  588 D1:AC05 00 00 00 -  	.dl 0
  589 D1:AC08 -  -  -  -  frameCount:
  590 D1:AC08 00 00 00 -  	.dl 0
  591 D1:AC0B -  -  -  -  hasLagged:
  592 D1:AC0B 00 00 00 -  	.dl 0
  593 D1:AC0E -  -  -  -  
  594 D1:AC0E -  -  -  -  sd_test_a:
  595 D1:AC0E 00 00 00 -  	.dl 0 
  596 D1:AC11 -  -  -  -  
  597 D1:AC11 -  -  -  -  
  598 D1:AC11 -  -  -  -  
  599 D1:AC11 -  -  -  -  
  600 D1:AC11 -  -  -  -  
  601 D1:AC11 -  -  -  -  
  602 D1:AC11 -  -  -  -  #include "timeTesting.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\timeTesting.txt"
    1 D1:AC11 -  -  -  -  
    2 D1:AC11 -  -  -  -  
    3 D1:AC11 -  -  -  -  
    4 D1:AC11 -  -  -  -  time_test_start:
    5 D1:AC11 -  -  -  -  
    6 D1:AC11 -  -  -  -  		; 76543210	
    7 D1:AC11 3E 03 -  -  	ld a,%00000011;enable, 32768hz
    8 D1:AC13 32 30 00 F2 	ld ($F20030),a
    9 D1:AC17 -  -  -  -  	;	  fedcba98
   10 D1:AC17 3E 02 -  -  	ld a,%00000010;count up
   11 D1:AC19 32 31 00 F2 	ld ($F20031),a
   12 D1:AC1D 3E 00 -  -  	ld a,0
   13 D1:AC1F 32 00 00 F2 	ld ($F20000),a
   14 D1:AC23 32 01 00 F2 	ld ($F20001),a
   15 D1:AC27 32 02 00 F2 	ld ($F20002),a
   16 D1:AC2B 32 03 00 F2 	ld ($F20003),a
   17 D1:AC2F -  -  -  -  	
   18 D1:AC2F 21 2C 01 00 	ld hl,300
   19 D1:AC33 -  -  -  -  	
   20 D1:AC33 -  -  -  -  time_testing_loop:
   21 D1:AC33 E5 -  -  -  	push hl
   22 D1:AC34 01 E8 03 00 	ld bc,1000
   23 D1:AC38 -  -  -  -  time_testing_loop_2:
   24 D1:AC38 C5 -  -  -  	push bc
   25 D1:AC39 -  -  -  -  	;instruction here
   26 D1:AC39 -  -  -  -  	
   27 D1:AC39 -  -  -  -  	
   28 D1:AC39 -  -  -  -  	;Instruction end
   29 D1:AC39 C1 -  -  -  	pop bc
   30 D1:AC3A 0B -  -  -  	dec bc
   31 D1:AC3B 79 -  -  -  	ld a,c
   32 D1:AC3C B0 -  -  -  	or b
   33 D1:AC3D C2 38 AC D1 	jp nz,time_testing_loop_2
   34 D1:AC41 E1 -  -  -  	pop hl
   35 D1:AC42 2B -  -  -  	dec hl
   36 D1:AC43 7D -  -  -  	ld a,l
   37 D1:AC44 B4 -  -  -  	or h
   38 D1:AC45 C2 33 AC D1 	jp nz,time_testing_loop
   39 D1:AC49 -  -  -  -  	
   40 D1:AC49 3A 01 00 F2 	ld a,($F20001);128hz
   41 D1:AC4D 6F -  -  -  	ld l,a
   42 D1:AC4E 3A 02 00 F2 	ld a,($F20002);0.5hz
   43 D1:AC52 67 -  -  -  	ld h,a
   44 D1:AC53 C3 99 AB D1 	jp printHL;div by 128 for time
   45 D1:AC57 -  -  -  -  	
   46 D1:AC57 -  -  -  -  
   47 D1:AC57 -  -  -  -  ;60fps = .0166sec/f	
   48 D1:AC57 -  -  -  -  
   49 D1:AC57 -  -  -  -  ;1000 ldir in vram of 160*240 bytes
   50 D1:AC57 -  -  -  -  ;6.8sec, .0068 sec/instruction   0.4 of a frame
   51 D1:AC57 -  -  -  -  
   52 D1:AC57 -  -  -  -  
   53 D1:AC57 -  -  -  -  ;10,000 draw 1 bg line very complex 
   54 D1:AC57 -  -  -  -  ;9 sec  .07 of frame/instruction
   55 D1:AC57 -  -  -  -  
   56 D1:AC57 -  -  -  -  ;300k draw slow sprite 12*5 px complex
   57 D1:AC57 -  -  -  -  ;16.4RT, 14.8CLK
   58 D1:AC57 -  -  -  -  ;.00328 frames/sprite, 4.19 frames / screen
   59 D1:AC57 -  -  -  -  ;.24 screens/frame
   60 D1:AC57 -  -  -  -  
   61 D1:AC57 -  -  -  -  
   62 D1:AC57 -  -  -  -  ;300k slow sprite best case 12*5px
   63 D1:AC57 -  -  -  -  ;8.75RT 7.6clk
   64 D1:AC57 -  -  -  -  ;.00175 frames/spr 2.24 frames/screen
   65 D1:AC57 -  -  -  -  ;.446 screens/frame
   66 D1:AC57 -  -  -  -  
   67 D1:AC57 -  -  -  -  
   68 D1:AC57 -  -  -  -  
   69 D1:AC57 -  -  -  -  ;1,000,000 fast fg sprite 20*4 px
   70 D1:AC57 -  -  -  -  ;22.15RT,20.35clk
   71 D1:AC57 -  -  -  -  ;.00133 frames/spr 1.275 frames/screen
   72 D1:AC57 -  -  -  -  ;.78 screens/frame
   73 D1:AC57 -  -  -  -  
   74 D1:AC57 -  -  -  -  
   75 D1:AC57 -  -  -  -  ;for 60% of screen with fg sprites in 1 frame
   76 D1:AC57 -  -  -  -  ;.6 = .78*fast + .44*(1-fast)
   77 D1:AC57 -  -  -  -  ;.47 = FAST
   78 D1:AC57 -  -  -  -  
   79 D1:AC57 -  -  -  -  ;50% fast sprites, 50% slow sprites
   80 D1:AC57 -  -  -  -  
   81 D1:AC57 -  -  -  -  
   82 D1:AC57 -  -  -  -  
   83 D1:AC57 -  -  -  -  
   84 D1:AC57 -  -  -  -  
   85 D1:AC57 -  -  -  -  
   86 D1:AC57 -  -  -  -  
   87 D1:AC57 -  -  -  -  
   88 D1:AC57 -  -  -  -  
Listing for file "ascent.asm"
  603 D1:AC57 -  -  -  -  #include "drawBGSprite.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\drawBGSprite.txt"
    1 D1:AC57 -  -  -  -  
    2 D1:AC57 -  -  -  -  
    3 D1:AC57 -  -  -  -  BGMaxSpriteHeight .equ 120
    4 D1:AC57 -  -  -  -  
    5 D1:AC57 -  -  -  -  
    6 D1:AC57 -  -  -  -  draw_bg:; function for drawing background buffer to the draw buffer, clearing the frame for fg sprites to be drawn over 
    7 D1:AC57 CD 8B AC D1 	call move_bg
    8 D1:AC5B 21 00 2C D5 	ld hl,$d52c00;BG_buffer_end
    9 D1:AC5F ED 4B F7 AB 
              D1 -  -  -  	ld bc,(BG_draw_buffer)
   10 D1:AC64 37 -  -  -  	scf 
   11 D1:AC65 3F -  -  -  	ccf 
   12 D1:AC66 ED 42 -  -  	sbc hl,bc ;get number of bytes from the loop point in the buffer to end of the buffer 
   13 D1:AC68 E5 -  -  -  	push hl 
   14 D1:AC69 C1 -  -  -  	pop bc	;put into bc for ldir 
   15 D1:AC6A 2A F7 AB D1 	ld hl,(BG_draw_buffer)
   16 D1:AC6E ED 5B F4 AB 
              D1 -  -  -  	ld de,(draw_buffer)
   17 D1:AC73 ED B0 -  -  	ldir
   18 D1:AC75 2A F7 AB D1 	ld hl,(BG_draw_buffer) ;loop point in buffer
   19 D1:AC79 01 00 96 D4 	ld bc,BG_buffer ;start of buffer
   20 D1:AC7D 37 -  -  -  	scf 
   21 D1:AC7E 3F -  -  -  	ccf 
   22 D1:AC7F ED 42 -  -  	sbc hl,bc ;number of bytes from start to loop point 
   23 D1:AC81 C8 -  -  -  	ret z ;if bg buffer line is at top of buffer, no second ldir
   24 D1:AC82 E5 -  -  -  	push hl 
   25 D1:AC83 C1 -  -  -  	pop bc
   26 D1:AC84 21 00 96 D4 	ld hl,BG_buffer 
   27 D1:AC88 ED B0 -  -  	ldir 
   28 D1:AC8A C9 -  -  -  	ret 
   29 D1:AC8B -  -  -  -  	
   30 D1:AC8B -  -  -  -  	
   31 D1:AC8B -  -  -  -  ;function for moving the backgrond buffer. checks if camera has moved since the buffer was last updated.
   32 D1:AC8B -  -  -  -  ;if so will draw new lines of the bg buffer to move it up or down until it is in the correct position
   33 D1:AC8B -  -  -  -  move_bg:
   34 D1:AC8B 2A EE AB D1 	ld hl,(cam_pos);load cam pos 
   35 D1:AC8F -  -  -  -  	;call write_hl_to_ram
   36 D1:AC8F CB 3C -  -  	srl h
   37 D1:AC91 CB 1D -  -  	rr l
   38 D1:AC93 CB 3C -  -  	srl h
   39 D1:AC95 CB 1D -  -  	rr l
   40 D1:AC97 CB 3C -  -  	srl h
   41 D1:AC99 CB 1D -  -  	rr l	;div by 8 to get location of BG layer
   42 D1:AC9B -  -  -  -  	;hl holds bg cam pos, lowest visible line of bg layer 
   43 D1:AC9B ED 4B F1 AB 
              D1 -  -  -  	ld bc,(bg_cam_pos);previous BG cam location 
   44 D1:ACA0 37 -  -  -  	scf
   45 D1:ACA1 3F -  -  -  	ccf
   46 D1:ACA2 ED 42 -  -  	sbc hl,bc ;compare to the updated location
   47 D1:ACA4 C8 -  -  -  	ret z ;if 0, the bg buffer does not need to be moved 
   48 D1:ACA5 DA B1 AC D1 	jp c,move_bg_down ;if previous cam pos id above current pos, screen has moved down, go to move bg down 1 line
   49 D1:ACA9 CD 00 AD D1 	call inc_bg ;otherwise, screen has moved up, need to move bg up 1 line
   50 D1:ACAD C3 8B AC D1 	jp move_bg ;repeat until bg is in correct pos
   51 D1:ACB1 -  -  -  -  move_bg_down:
   52 D1:ACB1 CD B9 AC D1 	call dec_bg
   53 D1:ACB5 C3 8B AC D1 	jp move_bg ;repeat until bg is in correct pos
   54 D1:ACB9 -  -  -  -  
   55 D1:ACB9 -  -  -  -  
   56 D1:ACB9 -  -  -  -  dec_bg:;move bg cam down 1px 
   57 D1:ACB9 -  -  -  -  
   58 D1:ACB9 -  -  -  -  	
   59 D1:ACB9 -  -  -  -  	;Testibng
   60 D1:ACB9 -  -  -  -  	;ld a,$AD
   61 D1:ACB9 -  -  -  -  	;call write_a_to_ram
   62 D1:ACB9 -  -  -  -  	
   63 D1:ACB9 -  -  -  -  
   64 D1:ACB9 -  -  -  -  	;write on draw buffer line 
   65 D1:ACB9 2A F7 AB D1 	ld hl,(BG_draw_buffer) ;topmost line of bg buffer will be overwritten with new bottom line 
   66 D1:ACBD 22 10 AE D1 	ld (dbgl_vram_line_start),hl 
   67 D1:ACC1 -  -  -  -  	
   68 D1:ACC1 2A F1 AB D1 	ld hl,(bg_cam_pos)
   69 D1:ACC5 2B -  -  -  	dec hl ;dec bg cam pos by 1 
   70 D1:ACC6 22 F1 AB D1 	ld (bg_cam_pos),hl 
   71 D1:ACCA -  -  -  -  	
   72 D1:ACCA 01 00 00 00 	ld bc,0 ;clear bc reg
   73 D1:ACCE 4C -  -  -  	ld c,h;bottom y value msb 
   74 D1:ACCF 7D -  -  -  	ld a,l ;bottom y value lsb 
   75 D1:ACD0 21 E0 CA D1 	ld hl,BG_Data_frame_table
   76 D1:ACD4 0C -  -  -  	inc c 
   77 D1:ACD5 09 -  -  -  	add hl,bc 
   78 D1:ACD6 09 -  -  -  	add hl,bc 
   79 D1:ACD7 09 -  -  -  	add hl,bc ;add 3*frame number to get to correct frame pointer
   80 D1:ACD8 ED 27 -  -  	ld hl,(hl) ;hl now points to bg frame data 
   81 D1:ACDA CD A2 AD D1 	call draw_bg_line
   82 D1:ACDE -  -  -  -  	
   83 D1:ACDE -  -  -  -  
   84 D1:ACDE -  -  -  -  	;move buffer pos
   85 D1:ACDE 2A F7 AB D1 	ld hl,(BG_draw_buffer)
   86 D1:ACE2 01 60 2B D5 	ld bc,$d52b60;BG_buffer_end, start of last line of vram buffer 
   87 D1:ACE6 37 -  -  -  	scf 
   88 D1:ACE7 3F -  -  -  	ccf 
   89 D1:ACE8 ED 42 -  -  	sbc hl,bc ;compare to current line 
   90 D1:ACEA 2A F7 AB D1 	ld hl,(BG_draw_buffer)
   91 D1:ACEE C2 F6 AC D1 	jp nz,dec_bg_bottom_skip
   92 D1:ACF2 21 60 95 D4 	ld hl,$d49560;1 row above top of bg buffer 
   93 D1:ACF6 -  -  -  -  dec_bg_bottom_skip:
   94 D1:ACF6 01 A0 00 00 	ld bc,160 
   95 D1:ACFA 09 -  -  -  	add hl,bc
   96 D1:ACFB 22 F7 AB D1 	ld (BG_draw_buffer),hl 
   97 D1:ACFF C9 -  -  -  	ret
   98 D1:AD00 -  -  -  -  
   99 D1:AD00 -  -  -  -  
  100 D1:AD00 -  -  -  -  inc_bg:;move cam up 
  101 D1:AD00 -  -  -  -  
  102 D1:AD00 -  -  -  -  	
  103 D1:AD00 -  -  -  -  	;Testibng
  104 D1:AD00 -  -  -  -  	;ld a,$00
  105 D1:AD00 -  -  -  -  	;call write_a_to_ram
  106 D1:AD00 -  -  -  -  	;call prgmpause
  107 D1:AD00 -  -  -  -  
  108 D1:AD00 2A F7 AB D1 	ld hl,(BG_draw_buffer)
  109 D1:AD04 01 00 96 D4 	ld bc,BG_buffer
  110 D1:AD08 37 -  -  -  	scf 
  111 D1:AD09 3F -  -  -  	ccf 
  112 D1:AD0A ED 42 -  -  	sbc hl,bc ;compare current drawing line to top of bg buffer 
  113 D1:AD0C 2A F7 AB D1 	ld hl,(BG_draw_buffer)
  114 D1:AD10 C2 18 AD D1 	jp nz,inc_bg_top_skip ;if they are not equal, continue
  115 D1:AD14 21 00 2C D5 	ld hl,$d52c00;otherwise need to wrap back to bottom of buffer, set hl to 1 below bottom of bg buffer 
  116 D1:AD18 -  -  -  -  inc_bg_top_skip:
  117 D1:AD18 01 A0 00 00 	ld bc,160 
  118 D1:AD1C 37 -  -  -  	scf
  119 D1:AD1D 3F -  -  -  	ccf 
  120 D1:AD1E ED 42 -  -  	sbc hl,bc ;move up line, hl now points to line drawing location in vram 
  121 D1:AD20 22 F7 AB D1 	ld (BG_draw_buffer),hl 
  122 D1:AD24 22 10 AE D1 	ld (dbgl_vram_line_start),hl 
  123 D1:AD28 2A F1 AB D1 	ld hl,(bg_cam_pos)
  124 D1:AD2C 23 -  -  -  	inc hl 
  125 D1:AD2D 22 F1 AB D1 	ld (bg_cam_pos),hl ;incremnet cam pos 
  126 D1:AD31 -  -  -  -  	;call write_hl_to_ram
  127 D1:AD31 01 EF 00 00 	ld bc,239
  128 D1:AD35 09 -  -  -  	add hl,bc ;gets uppermost visible line y value in bg layer
  129 D1:AD36 4C -  -  -  	ld c,h;cam pos msb 
  130 D1:AD37 7D -  -  -  	ld a,l ;a holds line number in target frame 
  131 D1:AD38 21 E0 CA D1 	ld hl,BG_Data_frame_table
  132 D1:AD3C 0C -  -  -  	inc c ;inc to get to upper frame 
  133 D1:AD3D 09 -  -  -  	add hl,bc 
  134 D1:AD3E 09 -  -  -  	add hl,bc 
  135 D1:AD3F 09 -  -  -  	add hl,bc 
  136 D1:AD40 ED 27 -  -  	ld hl,(hl)
  137 D1:AD42 CD A2 AD D1 	call draw_bg_line
  138 D1:AD46 C9 -  -  -  	ret
  139 D1:AD47 -  -  -  -  	
  140 D1:AD47 -  -  -  -  
  141 D1:AD47 -  -  -  -  
  142 D1:AD47 -  -  -  -  
  143 D1:AD47 -  -  -  -  
  144 D1:AD47 -  -  -  -  setup_bg: ;Draws entire BG buffer when loading game 
  145 D1:AD47 2A EE AB D1 	ld hl,(cam_pos)
  146 D1:AD4B CB 3C -  -  	srl h
  147 D1:AD4D CB 1D -  -  	rr l
  148 D1:AD4F CB 3C -  -  	srl h
  149 D1:AD51 CB 1D -  -  	rr l
  150 D1:AD53 CB 3C -  -  	srl h
  151 D1:AD55 CB 1D -  -  	rr l ;div by 8
  152 D1:AD57 -  -  -  -  	;hl holds bg cam pos 
  153 D1:AD57 22 F1 AB D1 	ld (bg_cam_pos),hl
  154 D1:AD5B -  -  -  -  	
  155 D1:AD5B 01 EF 00 00 	ld bc,239
  156 D1:AD5F 09 -  -  -  	add hl,bc;hl holds y position of uppermost visible line in bg layer 
  157 D1:AD60 -  -  -  -  	
  158 D1:AD60 23 -  -  -  	inc hl;to be dec in loop
  159 D1:AD61 E5 -  -  -  	push hl ;save uppermost line y val
  160 D1:AD62 21 00 96 D4 	ld hl,BG_buffer ;start of bg drawing buffer 
  161 D1:AD66 22 F7 AB D1 	ld (BG_draw_buffer),hl ;set current bg line drawing location 
  162 D1:AD6A E5 -  -  -  	push hl 
  163 D1:AD6B -  -  -  -  	
  164 D1:AD6B 3E F0 -  -  	ld a,240 ;num loops
  165 D1:AD6D 32 95 AD D1 	ld (setup_bg_loop_count),a
  166 D1:AD71 -  -  -  -  setup_bg_loop:
  167 D1:AD71 -  -  -  -  
  168 D1:AD71 E1 -  -  -  	pop hl;vram draw pos, next line of bg drawn here 
  169 D1:AD72 22 10 AE D1 	ld (dbgl_vram_line_start),hl ;set drawing pos 
  170 D1:AD76 01 A0 00 00 	ld bc,160
  171 D1:AD7A 09 -  -  -  	add hl,bc 
  172 D1:AD7B EB -  -  -  	ex de,hl ;put next vram pos in de 
  173 D1:AD7C E1 -  -  -  	pop hl;uppermost line y val
  174 D1:AD7D 2B -  -  -  	dec hl ;dec line y value (move to next lowest line)
  175 D1:AD7E E5 -  -  -  	push hl;push uppermost line y val
  176 D1:AD7F D5 -  -  -  	push de ;push vram pos 
  177 D1:AD80 01 00 00 00 	ld bc,0
  178 D1:AD84 4C -  -  -  	ld c,h;cam pos msb 
  179 D1:AD85 7D -  -  -  	ld a,l ;a holds line number in current frame 
  180 D1:AD86 21 E0 CA D1 	ld hl,BG_Data_frame_table
  181 D1:AD8A 0C -  -  -  	inc c ;add 1 to get to upper frame
  182 D1:AD8B 09 -  -  -  	add hl,bc 
  183 D1:AD8C 09 -  -  -  	add hl,bc 
  184 D1:AD8D 09 -  -  -  	add hl,bc 
  185 D1:AD8E ED 27 -  -  	ld hl,(hl) ;hl now points to upper frame data 
  186 D1:AD90 CD A2 AD D1 	call draw_bg_line ;hl pts to upper frame data, a = line num in target frame
  187 D1:AD94 -  -  -  -  	
  188 D1:AD94 -  -  -  -  setup_bg_loop_count .equ $ + 1
  189 D1:AD94 3E 00 -  -  	ld a,0
  190 D1:AD96 3D -  -  -  	dec a ;dec loop counter
  191 D1:AD97 32 95 AD D1 	ld (setup_bg_loop_count),a
  192 D1:AD9B C2 71 AD D1 	jp nz,setup_bg_loop 
  193 D1:AD9F E1 -  -  -  	pop hl ;pop vram pos 
  194 D1:ADA0 E1 -  -  -  	pop hl ;pop current line number 
  195 D1:ADA1 C9 -  -  -  	ret 
  196 D1:ADA2 -  -  -  -  
  197 D1:ADA2 -  -  -  -  
  198 D1:ADA2 -  -  -  -  
  199 D1:ADA2 -  -  -  -  
  200 D1:ADA2 -  -  -  -  
  201 D1:ADA2 -  -  -  -  
  202 D1:ADA2 -  -  -  -  ;hl = upper data frame, a = line number in target frame
  203 D1:ADA2 -  -  -  -  ;for drawing BG, only 1 line is drawn at a time.
  204 D1:ADA2 -  -  -  -  ;therefore only check sprites in the above frame that may extend downwards, 
  205 D1:ADA2 -  -  -  -  ;and the sprites in the target frame which contains the y position of the line being drawn
  206 D1:ADA2 -  -  -  -  ;set dbgl_vram_line_start before calling 
  207 D1:ADA2 -  -  -  -  draw_bg_line:
  208 D1:ADA2 -  -  -  -  	
  209 D1:ADA2 -  -  -  -  	
  210 D1:ADA2 32 EE AD D1 	ld (dbgl_line_num),a ;write line num to required positions 
  211 D1:ADA6 32 D2 B5 D1 	ld (dfgs_cam_height_1), a ;Used to check if upper frame should be considered
  212 D1:ADAA ED 44 -  -  	neg 
  213 D1:ADAC 32 DA AD D1 	ld (dbgl_lines_to_top_of_target_frame),a 
  214 D1:ADB0 -  -  -  -  	
  215 D1:ADB0 E5 -  -  -  	push hl ;upper frame sprite table pointer 
  216 D1:ADB1 3E FF -  -  	ld a,$FF ;Set all of line to FF to clear it with color 16
  217 D1:ADB3 01 A0 00 00 	ld bc,160
  218 D1:ADB7 2A 10 AE D1 	ld hl,(dbgl_vram_line_start) ;Drawing address of line 
  219 D1:ADBB CD E0 10 02 	call _MemSet ;Clear all of line 
  220 D1:ADBF E1 -  -  -  	pop hl ;return upper frame ptr 
  221 D1:ADC0 -  -  -  -  
  222 D1:ADC0 -  -  -  -  	
  223 D1:ADC0 3E DA -  -  	ld a,%11011010;jp c
  224 D1:ADC2 32 04 B6 D1 	ld (dfgs_bg_mode_1),a 
  225 D1:ADC6 32 68 B6 D1 	ld (dfgs_bg_mode_2),a 
  226 D1:ADCA -  -  -  -  	
  227 D1:ADCA 3E FF -  -  	ld a,255;
  228 D1:ADCC 32 01 B7 D1 	ld (dfgs_cam_height_3),a ;Will skip drawing of lower frame
  229 D1:ADD0 32 1B B7 D1 	ld (dfgs_cam_height_4),a
  230 D1:ADD4 -  -  -  -  	
  231 D1:ADD4 -  -  -  -  
  232 D1:ADD4 -  -  -  -  	
  233 D1:ADD4 CD B9 B5 D1 	call draw_fg_sprites
  234 D1:ADD8 -  -  -  -  	
  235 D1:ADD8 C9 -  -  -  	ret
  236 D1:ADD9 -  -  -  -  	
  237 D1:ADD9 -  -  -  -  
  238 D1:ADD9 -  -  -  -  
  239 D1:ADD9 -  -  -  -  	;a = y value of sprite in upper frame, hl pts to height
  240 D1:ADD9 -  -  -  -  dbgl_draw_upper_sprite:	
  241 D1:ADD9 -  -  -  -  
  242 D1:ADD9 -  -  -  -  	;push af 
  243 D1:ADD9 -  -  -  -  	;call write_a_to_ram
  244 D1:ADD9 -  -  -  -  	;ld a,(hl)
  245 D1:ADD9 -  -  -  -  	;call write_a_to_ram
  246 D1:ADD9 -  -  -  -  	;ld a,$BC
  247 D1:ADD9 -  -  -  -  	;call write_a_to_ram
  248 D1:ADD9 -  -  -  -  	;pop af
  249 D1:ADD9 -  -  -  -  	
  250 D1:ADD9 -  -  -  -  	;call write_hl_to_ram
  251 D1:ADD9 -  -  -  -  	
  252 D1:ADD9 -  -  -  -  	;call prgmpause
  253 D1:ADD9 -  -  -  -  
  254 D1:ADD9 -  -  -  -  dbgl_lines_to_top_of_target_frame .equ $ + 1
  255 D1:ADD9 C6 00 -  -  	add a,0 ;a holds line number in sprite to draw (0 indexed)
  256 D1:ADDB -  -  -  -  	;call write_a_to_ram
  257 D1:ADDB DA E9 AD D1 	jp c,dbgl_upper_skip_sprite ; if line to draw >255, skip (happens if sprite has large y val)
  258 D1:ADDF BE -  -  -  	cp (hl) ;compare to sprite height 
  259 D1:ADE0 D2 E9 AD D1 	jp nc, dbgl_upper_skip_sprite; Skip drawing, sprite does not extend to target line 
  260 D1:ADE4 -  -  -  -  	;Sprite is to be drawn, a holds line number 
  261 D1:ADE4 CD 01 AE D1 	call dbgl_setup_and_draw ;draw sprite line 
  262 D1:ADE8 -  -  -  -  	;hl pts to next sprite y
  263 D1:ADE8 C9 -  -  -  	ret
  264 D1:ADE9 -  -  -  -  	
  265 D1:ADE9 -  -  -  -  dbgl_upper_skip_sprite:
  266 D1:ADE9 23 -  -  -  	inc hl ;to x 
  267 D1:ADEA 23 -  -  -  	inc hl ;to index 
  268 D1:ADEB 23 -  -  -  	inc hl ;to next y
  269 D1:ADEC C9 -  -  -  	ret
  270 D1:ADED -  -  -  -  	
  271 D1:ADED -  -  -  -  
  272 D1:ADED -  -  -  -  	;a holds y in frame, (hl) = height
  273 D1:ADED -  -  -  -  dbgl_draw_lower_sprite:
  274 D1:ADED -  -  -  -  	
  275 D1:ADED -  -  -  -  	;call write_a_to_ram
  276 D1:ADED -  -  -  -  	;call prgmpause
  277 D1:ADED -  -  -  -  	;call write_hl_to_ram
  278 D1:ADED -  -  -  -  	
  279 D1:ADED -  -  -  -  	;call prgmpause
  280 D1:ADED -  -  -  -  	
  281 D1:ADED -  -  -  -  dbgl_line_num .equ $ + 1
  282 D1:ADED D6 00 -  -  	sub 0;subtract line num 
  283 D1:ADEF DA FD AD D1 	jp c, dbgl_lower_skip_sprite ;if carry, line number was above sprite y pos 
  284 D1:ADF3 -  -  -  -  	;if a is 0, we draw first line of sprite, if a is 1, draw second... a holds line num of sprite to draw (0 indexed) 
  285 D1:ADF3 BE -  -  -  	cp (hl) ;compare to sprite height
  286 D1:ADF4 D2 FD AD D1 	jp nc, dbgl_lower_skip_sprite; Skip drawing, sprite does not extend to target line 
  287 D1:ADF8 -  -  -  -  	
  288 D1:ADF8 -  -  -  -  	;Sprite is to be drawn, a holds line number 
  289 D1:ADF8 CD 01 AE D1 	call dbgl_setup_and_draw ;draw sprite line 
  290 D1:ADFC -  -  -  -  	;hl pts to next y
  291 D1:ADFC C9 -  -  -  	ret
  292 D1:ADFD -  -  -  -  	
  293 D1:ADFD -  -  -  -  dbgl_lower_skip_sprite:
  294 D1:ADFD -  -  -  -  
  295 D1:ADFD -  -  -  -  	;ld a,$AA 
  296 D1:ADFD -  -  -  -  	;call write_a_to_ram
  297 D1:ADFD -  -  -  -  	;call prgmpause
  298 D1:ADFD -  -  -  -  	
  299 D1:ADFD 23 -  -  -  	inc hl ;to x 
  300 D1:ADFE 23 -  -  -  	inc hl ;to index 
  301 D1:ADFF 23 -  -  -  	inc hl ;to y
  302 D1:AE00 C9 -  -  -  	ret
  303 D1:AE01 -  -  -  -  
  304 D1:AE01 -  -  -  -  
  305 D1:AE01 -  -  -  -  
  306 D1:AE01 -  -  -  -  
  307 D1:AE01 -  -  -  -  ;a holds 0 indexed line num of sprite, (hl) = height ,bc,de = 0
  308 D1:AE01 -  -  -  -  ;returns hl holds next y val
  309 D1:AE01 -  -  -  -  dbgl_setup_and_draw:
  310 D1:AE01 -  -  -  -  
  311 D1:AE01 -  -  -  -  	;push af 
  312 D1:AE01 -  -  -  -  	;ld a,$AB 
  313 D1:AE01 -  -  -  -  	;call write_a_to_ram
  314 D1:AE01 -  -  -  -  	;call write_hl_to_ram
  315 D1:AE01 -  -  -  -  	;pop af 
  316 D1:AE01 -  -  -  -  	;call write_a_to_ram
  317 D1:AE01 -  -  -  -  	
  318 D1:AE01 -  -  -  -  	;call prgmpause
  319 D1:AE01 -  -  -  -  
  320 D1:AE01 01 00 00 00 	ld bc,0
  321 D1:AE05 11 00 00 00 	ld de,0
  322 D1:AE09 -  -  -  -  	
  323 D1:AE09 23 -  -  -  	inc hl;to x pos
  324 D1:AE0A 5E -  -  -  	ld e,(hl);e holds x pos 
  325 D1:AE0B 23 -  -  -  	inc hl 
  326 D1:AE0C 4E -  -  -  	ld c,(hl);sprite index 
  327 D1:AE0D 23 -  -  -  	inc hl ;next y
  328 D1:AE0E E5 -  -  -  	push hl ;save location in data 
  329 D1:AE0F -  -  -  -  dbgl_vram_line_start .equ $ + 1	
  330 D1:AE0F 21 00 00 00 	ld hl,0
  331 D1:AE13 19 -  -  -  	add hl,de;add x pos
  332 D1:AE14 -  -  -  -  dbgl_sg_x_origin .equ $ + 1
  333 D1:AE14 1E 00 -  -  	ld e,0 
  334 D1:AE16 19 -  -  -  	add hl,de;add x pos
  335 D1:AE17 -  -  -  -  	
  336 D1:AE17 EB -  -  -  	ex de,hl;put vram pos into de 
  337 D1:AE18 -  -  -  -  	
  338 D1:AE18 26 A0 -  -  	ld h,160
  339 D1:AE1A 6F -  -  -  	ld l,a ;number of lines to subtract 
  340 D1:AE1B ED 6C -  -  	mlt hl;bytes to subtract from vram
  341 D1:AE1D 37 -  -  -  	scf 
  342 D1:AE1E 3F -  -  -  	ccf
  343 D1:AE1F EB -  -  -  	ex de,hl;hl holds initial vram pos, de is lines to subtract  
  344 D1:AE20 ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  345 D1:AE22 EB -  -  -  	ex de,hl;put in de
  346 D1:AE23 -  -  -  -  	
  347 D1:AE23 -  -  -  -  dbgl_sprite_pointers .equ $ + 1
  348 D1:AE23 21 00 00 00 	ld hl,0
  349 D1:AE27 09 -  -  -  	add hl,bc
  350 D1:AE28 09 -  -  -  	add hl,bc 
  351 D1:AE29 09 -  -  -  	add hl,bc ;hl points to sprite data pointer 
  352 D1:AE2A ED 27 -  -  	ld hl,(hl);hl holds sprite data
  353 D1:AE2C -  -  -  -  
  354 D1:AE2C -  -  -  -  
  355 D1:AE2C CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  356 D1:AE2E CA 3A AE D1 	jp z,dbgl_fast_sprite ;if even address, fast sprite 
  357 D1:AE32 CD 0C AF D1 	call draw_slow_sprite_single_line
  358 D1:AE36 C3 3E AE D1 	jp dbgl_slow_sprite
  359 D1:AE3A -  -  -  -  dbgl_fast_sprite:
  360 D1:AE3A CD 8E AE D1 	call draw_fast_sprite_single_line
  361 D1:AE3E -  -  -  -  dbgl_slow_sprite:
  362 D1:AE3E -  -  -  -  	
  363 D1:AE3E 11 00 00 00 	ld de,0;clear de 
  364 D1:AE42 01 00 00 00 	ld bc,0
  365 D1:AE46 E1 -  -  -  	pop hl;back to data
  366 D1:AE47 C9 -  -  -  	ret
  367 D1:AE48 -  -  -  -  	
  368 D1:AE48 -  -  -  -  
  369 D1:AE48 -  -  -  -  
  370 D1:AE48 -  -  -  -  
  371 D1:AE48 -  -  -  -  
  372 D1:AE48 -  -  -  -  
  373 D1:AE48 -  -  -  -  
  374 D1:AE48 -  -  -  -  
  375 D1:AE48 -  -  -  -  
  376 D1:AE48 -  -  -  -  
  377 D1:AE48 -  -  -  -  
  378 D1:AE48 -  -  -  -  
  379 D1:AE48 -  -  -  -  
  380 D1:AE48 -  -  -  -  
  381 D1:AE48 -  -  -  -  
  382 D1:AE48 -  -  -  -  
  383 D1:AE48 -  -  -  -  
  384 D1:AE48 -  -  -  -  
  385 D1:AE48 -  -  -  -  
Listing for file "ascent.asm"
  604 D1:AE48 -  -  -  -  #include "drawFGSprite.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\drawFGSprite.txt"
    1 D1:AE48 -  -  -  -  
    2 D1:AE48 -  -  -  -  ;hl = data, a = lines to draw. returns a = num loops to draw, hl = 1 before first gap length
    3 D1:AE48 -  -  -  -  setup_sprite_bottom_cut:
    4 D1:AE48 1B -  -  -  	dec de
    5 D1:AE49 01 00 00 00 	ld bc,0 ;clear bc
    6 D1:AE4D 4F -  -  -  	ld c,a;c = lines to draw
    7 D1:AE4E E5 -  -  -  	push hl ;save data 
    8 D1:AE4F 09 -  -  -  	add hl,bc
    9 D1:AE50 7E -  -  -  	ld a,(hl);num loops to draw
   10 D1:AE51 E1 -  -  -  	pop hl ;return to start of data
   11 D1:AE52 4E -  -  -  	ld c,(hl) ;height
   12 D1:AE53 09 -  -  -  	add hl,bc ;hl now points to 1 before first gap length
   13 D1:AE54 C9 -  -  -  	ret 
   14 D1:AE55 -  -  -  -  
   15 D1:AE55 -  -  -  -  setup_sprite_top_cut:
   16 D1:AE55 1B -  -  -  	dec de ;move to correct vram pos 
   17 D1:AE56 01 00 00 00 	ld bc,0
   18 D1:AE5A 4F -  -  -  	ld c,a ;lines to skip (1 indexed)
   19 D1:AE5B D5 -  -  -  	push de
   20 D1:AE5C 11 00 00 00 	ld de,0
   21 D1:AE60 E5 -  -  -  	push hl
   22 D1:AE61 5E -  -  -  	ld e,(hl);height
   23 D1:AE62 09 -  -  -  	add hl,bc;hl points to num skip loops 
   24 D1:AE63 4E -  -  -  	ld c,(hl);c holds num skip loops
   25 D1:AE64 E1 -  -  -  	pop hl;start of data
   26 D1:AE65 19 -  -  -  	add hl,de
   27 D1:AE66 46 -  -  -  	ld b,(hl);total number of loops
   28 D1:AE67 23 -  -  -  	inc hl;hl is pixel data
   29 D1:AE68 D1 -  -  -  	pop de;back to vram
   30 D1:AE69 79 -  -  -  	ld a,c;loops to skip
   31 D1:AE6A C9 -  -  -  	ret 
   32 D1:AE6B -  -  -  -  
   33 D1:AE6B -  -  -  -  ;hl = data, a = line number to draw. returns a = c = number of loops to skip, b = loops to skip + loops to draw. HL = gap length  
   34 D1:AE6B -  -  -  -  setup_sprite_single_line: ;sets up for single line drawing mode 
   35 D1:AE6B 1B -  -  -  	dec de
   36 D1:AE6C 01 00 00 00 	ld bc,0
   37 D1:AE70 4F -  -  -  	ld c,a ;line to draw
   38 D1:AE71 D5 -  -  -  	push de ;save vram 
   39 D1:AE72 11 00 00 00 	ld de,0
   40 D1:AE76 E5 -  -  -  	push hl
   41 D1:AE77 5E -  -  -  	ld e,(hl);height
   42 D1:AE78 09 -  -  -  	add hl,bc;hl points to num skip loops 
   43 D1:AE79 4E -  -  -  	ld c,(hl);c holds num skip loops
   44 D1:AE7A 23 -  -  -  	inc hl 
   45 D1:AE7B 46 -  -  -  	ld b,(hl);b holds num loops after drawn line 
   46 D1:AE7C E1 -  -  -  	pop hl;start of data
   47 D1:AE7D 19 -  -  -  	add hl,de
   48 D1:AE7E 23 -  -  -  	inc hl;hl is pixel data points to gap length 
   49 D1:AE7F D1 -  -  -  	pop de;back to vram
   50 D1:AE80 79 -  -  -  	ld a,c;loops to skip
   51 D1:AE81 C9 -  -  -  	ret 
   52 D1:AE82 -  -  -  -  
   53 D1:AE82 -  -  -  -  
   54 D1:AE82 -  -  -  -  
   55 D1:AE82 -  -  -  -  draw_fast_sprite_bottom_cut_from_line:
   56 D1:AE82 3C -  -  -  	inc a 
   57 D1:AE83 -  -  -  -  ;de = vram , hl = data, a = number lines to draw
   58 D1:AE83 -  -  -  -  draw_fast_sprite_bottom_cut:
   59 D1:AE83 CD 48 AE D1 	call setup_sprite_bottom_cut
   60 D1:AE87 23 -  -  -  	inc hl ;hl points to gap length 
   61 D1:AE88 4E -  -  -  	ld c,(hl);load alpha length
   62 D1:AE89 EB -  -  -  	ex de,hl;hl is vram, de is data
   63 D1:AE8A C3 D1 AE D1 	jp dfgs_loop
   64 D1:AE8E -  -  -  -  
   65 D1:AE8E -  -  -  -  
   66 D1:AE8E -  -  -  -  ;de = vram , hl = data, a = line to draw (starting from 0)
   67 D1:AE8E -  -  -  -  draw_fast_sprite_single_line:
   68 D1:AE8E B7 -  -  -  	or a 
   69 D1:AE8F CA 82 AE D1 	jp z,draw_fast_sprite_bottom_cut_from_line ; if a is 0, same as drawing bottom cut
   70 D1:AE93 -  -  -  -  	;we know a is not 0 here 
   71 D1:AE93 CD 6B AE D1 	call setup_sprite_single_line
   72 D1:AE97 -  -  -  -  	
   73 D1:AE97 C5 -  -  -  	push bc;save total and skipped loops
   74 D1:AE98 01 00 00 00 	ld bc,0
   75 D1:AE9C -  -  -  -  	
   76 D1:AE9C C3 A9 AE D1 	jp draw_fast_sprite_top_loop 
   77 D1:AEA0 -  -  -  -  
   78 D1:AEA0 -  -  -  -  
   79 D1:AEA0 -  -  -  -  
   80 D1:AEA0 -  -  -  -  ;de = vram , hl = data, a = top lines to skip (1 indexed)
   81 D1:AEA0 -  -  -  -  draw_fast_sprite_top_cut:
   82 D1:AEA0 CD 55 AE D1 	call setup_sprite_top_cut
   83 D1:AEA4 C5 -  -  -  	push bc ;save total and skipped loops 
   84 D1:AEA5 01 00 00 00 	ld bc,0 
   85 D1:AEA9 -  -  -  -  	
   86 D1:AEA9 -  -  -  -  draw_fast_sprite_top_loop:; need to follow through gap and drawn lengths to find start of drawing
   87 D1:AEA9 4E -  -  -  	ld c,(hl);load with first gap length	
   88 D1:AEAA EB -  -  -  	ex de,hl;hl is vram
   89 D1:AEAB 09 -  -  -  	add hl,bc
   90 D1:AEAC EB -  -  -  	ex de,hl;hl is data
   91 D1:AEAD 23 -  -  -  	inc hl
   92 D1:AEAE 4E -  -  -  	ld c,(hl);ldir length
   93 D1:AEAF 09 -  -  -  	add hl,bc;add ldir length
   94 D1:AEB0 EB -  -  -  	ex de,hl;hl is vram
   95 D1:AEB1 09 -  -  -  	add hl,bc;add ldir length
   96 D1:AEB2 13 -  -  -  	inc de
   97 D1:AEB3 EB -  -  -  	ex de,hl;hl is data
   98 D1:AEB4 3D -  -  -  	dec a
   99 D1:AEB5 C2 A9 AE D1 	jp nz,draw_fast_sprite_top_loop
  100 D1:AEB9 -  -  -  -  	
  101 D1:AEB9 -  -  -  -  	
  102 D1:AEB9 C1 -  -  -  	pop bc ;b is total loops, c is skipped loops 
  103 D1:AEBA 78 -  -  -  	ld a,b
  104 D1:AEBB 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
  105 D1:AEBC -  -  -  -  		
  106 D1:AEBC 01 00 00 00 	ld bc,0
  107 D1:AEC0 4E -  -  -  	ld c,(hl);load c with gap length
  108 D1:AEC1 EB -  -  -  	ex de,hl ;setup for loop 
  109 D1:AEC2 C3 D1 AE D1 	jp dfgs_loop
  110 D1:AEC6 -  -  -  -  
  111 D1:AEC6 -  -  -  -  
  112 D1:AEC6 -  -  -  -  ;de = vram , hl = data
  113 D1:AEC6 -  -  -  -  draw_fast_sprite_full:
  114 D1:AEC6 1B -  -  -  	dec de
  115 D1:AEC7 01 00 00 00 	ld bc,0
  116 D1:AECB 4E -  -  -  	ld c,(hl);height
  117 D1:AECC 09 -  -  -  	add hl,bc
  118 D1:AECD 7E -  -  -  	ld a,(hl);total loops
  119 D1:AECE 23 -  -  -  	inc hl
  120 D1:AECF 4E -  -  -  	ld c,(hl);first gap length
  121 D1:AED0 EB -  -  -  	ex de,hl
  122 D1:AED1 -  -  -  -  ;a = num loops, c = alphaLength,hl = vram
  123 D1:AED1 -  -  -  -  dfgs_loop:;gap, colors
  124 D1:AED1 09 -  -  -  	add hl,bc;add alpha length
  125 D1:AED2 EB -  -  -  	ex de,hl;swap, hl is data, de is vram
  126 D1:AED3 23 -  -  -  	inc hl
  127 D1:AED4 4E -  -  -  	ld c,(hl);get ldir length
  128 D1:AED5 23 -  -  -  	inc hl
  129 D1:AED6 ED B0 -  -  	ldir
  130 D1:AED8 4E -  -  -  	ld c,(hl);load c with next alpha length
  131 D1:AED9 EB -  -  -  	ex de,hl;swap, hl is vram
  132 D1:AEDA 3D -  -  -  	dec a
  133 D1:AEDB C2 D1 AE D1 	jp nz,dfgs_loop
  134 D1:AEDF C9 -  -  -  	ret
  135 D1:AEE0 -  -  -  -  	
  136 D1:AEE0 -  -  -  -  	
  137 D1:AEE0 -  -  -  -  	
  138 D1:AEE0 -  -  -  -  	
  139 D1:AEE0 -  -  -  -  
  140 D1:AEE0 -  -  -  -  
  141 D1:AEE0 -  -  -  -  ;hl = data, de = vram
  142 D1:AEE0 -  -  -  -  draw_slow_sprite_full:
  143 D1:AEE0 01 00 00 00 	ld bc,0
  144 D1:AEE4 4E -  -  -  	ld c,(hl);height
  145 D1:AEE5 09 -  -  -  	add hl,bc
  146 D1:AEE6 7E -  -  -  	ld a,(hl);num loops
  147 D1:AEE7 1B -  -  -  	dec de ;correct vram pos 
  148 D1:AEE8 D9 -  -  -  	exx;into shadow 
  149 D1:AEE9 47 -  -  -  	ld b,a ;number of loops
  150 D1:AEEA -  -  -  -  	;hl = (gap length) -1 de = vram-1 b' = loops
  151 D1:AEEA -  -  -  -  dsfgs_line_loop:
  152 D1:AEEA D9 -  -  -  	exx;out of shadow
  153 D1:AEEB 23 -  -  -  	inc hl;gap length
  154 D1:AEEC 4E -  -  -  	ld c,(hl);gap length
  155 D1:AEED EB -  -  -  	ex de,hl;hl is vram
  156 D1:AEEE 09 -  -  -  	add hl,bc;add aplha gap
  157 D1:AEEF EB -  -  -  	ex de,hl;hl is data
  158 D1:AEF0 23 -  -  -  	inc hl;hl points to single pix mask
  159 D1:AEF1 1A -  -  -  	ld a,(de);vram data
  160 D1:AEF2 A6 -  -  -  	and (hl)
  161 D1:AEF3 23 -  -  -  	inc hl;pixel data
  162 D1:AEF4 B6 -  -  -  	or (hl)
  163 D1:AEF5 12 -  -  -  	ld (de),a
  164 D1:AEF6 23 -  -  -  	inc hl;ldir length
  165 D1:AEF7 -  -  -  -  	
  166 D1:AEF7 13 -  -  -  	inc de;move to next pixel
  167 D1:AEF8 -  -  -  -  	
  168 D1:AEF8 7E -  -  -  	ld a,(hl);ldir length
  169 D1:AEF9 23 -  -  -  	inc hl;data
  170 D1:AEFA 4F -  -  -  	ld c,a
  171 D1:AEFB B7 -  -  -  	or a
  172 D1:AEFC CA 02 AF D1 	jp z,dsfgs_ldir_skip
  173 D1:AF00 ED B0 -  -  	ldir
  174 D1:AF02 -  -  -  -  dsfgs_ldir_skip:
  175 D1:AF02 1A -  -  -  	ld a,(de);vram data
  176 D1:AF03 A6 -  -  -  	and (hl)
  177 D1:AF04 23 -  -  -  	inc hl;pixel data
  178 D1:AF05 B6 -  -  -  	or (hl)
  179 D1:AF06 12 -  -  -  	ld (de),a
  180 D1:AF07 -  -  -  -  	
  181 D1:AF07 D9 -  -  -  	exx ;into shadow
  182 D1:AF08 10 E0 -  -  	djnz dsfgs_line_loop
  183 D1:AF0A D9 -  -  -  	exx ;out 
  184 D1:AF0B C9 -  -  -  	ret
  185 D1:AF0C -  -  -  -  
  186 D1:AF0C -  -  -  -  
  187 D1:AF0C -  -  -  -  
  188 D1:AF0C -  -  -  -  ;de = vram , hl = data, a = line to draw (from 0)
  189 D1:AF0C -  -  -  -  draw_slow_sprite_single_line:
  190 D1:AF0C -  -  -  -  
  191 D1:AF0C B7 -  -  -  	or a 
  192 D1:AF0D CA 4A AF D1 	jp z,draw_slow_sprite_bottom_cut_from_line ; if a is 0, same as drawing bottom cut
  193 D1:AF11 -  -  -  -  	;we know a is not 0 here
  194 D1:AF11 CD 6B AE D1 	call setup_sprite_single_line
  195 D1:AF15 C5 -  -  -  	push bc;save total and skipped loops
  196 D1:AF16 01 00 00 00 	ld bc,0
  197 D1:AF1A -  -  -  -  	
  198 D1:AF1A C3 27 AF D1 	jp slow_sprite_data_traverse 
  199 D1:AF1E -  -  -  -  	
  200 D1:AF1E -  -  -  -  
  201 D1:AF1E -  -  -  -  ;de = vram , hl = data, a = top lines to skip (from 1)
  202 D1:AF1E -  -  -  -  draw_slow_sprite_top_cut:
  203 D1:AF1E CD 55 AE D1 	call setup_sprite_top_cut
  204 D1:AF22 C5 -  -  -  	push bc;save total and skipped loops
  205 D1:AF23 01 00 00 00 	ld bc,0
  206 D1:AF27 -  -  -  -  ;hl = data start, a = num loops to skip, bc = 0
  207 D1:AF27 -  -  -  -  slow_sprite_data_traverse:
  208 D1:AF27 4E -  -  -  	ld c,(hl);gap length
  209 D1:AF28 EB -  -  -  	ex de,hl;hl is vram
  210 D1:AF29 09 -  -  -  	add hl,bc
  211 D1:AF2A EB -  -  -  	ex de,hl
  212 D1:AF2B -  -  -  -  	
  213 D1:AF2B 23 -  -  -  	inc hl ;inc past leading pixels
  214 D1:AF2C 23 -  -  -  	inc hl
  215 D1:AF2D 23 -  -  -  	inc hl;ldir length
  216 D1:AF2E 4E -  -  -  	ld c,(hl)
  217 D1:AF2F 09 -  -  -  	add hl,bc
  218 D1:AF30 EB -  -  -  	ex de,hl
  219 D1:AF31 09 -  -  -  	add hl,bc
  220 D1:AF32 EB -  -  -  	ex de,hl
  221 D1:AF33 13 -  -  -  	inc de;inc for leading pix 
  222 D1:AF34 23 -  -  -  	inc hl;inc past ending pixels
  223 D1:AF35 23 -  -  -  	inc hl
  224 D1:AF36 23 -  -  -  	inc hl;gap length
  225 D1:AF37 -  -  -  -  	
  226 D1:AF37 3D -  -  -  	dec a 
  227 D1:AF38 C2 27 AF D1 	jp nz,slow_sprite_data_traverse
  228 D1:AF3C -  -  -  -  
  229 D1:AF3C -  -  -  -  
  230 D1:AF3C C1 -  -  -  	pop bc ;b is total loops, c is skipped loops 
  231 D1:AF3D 78 -  -  -  	ld a,b
  232 D1:AF3E 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
  233 D1:AF3F 01 00 00 00 	ld bc,0;clear bc 
  234 D1:AF43 2B -  -  -  	dec hl	;hl points to 1 before gaplength
  235 D1:AF44 D9 -  -  -  	exx ;toshadow
  236 D1:AF45 47 -  -  -  	ld b,a 
  237 D1:AF46 C3 EA AE D1 	jp dsfgs_line_loop
  238 D1:AF4A -  -  -  -  	
  239 D1:AF4A -  -  -  -  	
  240 D1:AF4A -  -  -  -  	
  241 D1:AF4A -  -  -  -  draw_slow_sprite_bottom_cut_from_line:
  242 D1:AF4A 3C -  -  -  	inc a 
  243 D1:AF4B -  -  -  -  ;de = vram , hl = data, a = number lines to draw
  244 D1:AF4B -  -  -  -  draw_slow_sprite_bottom_cut:
  245 D1:AF4B -  -  -  -  
  246 D1:AF4B CD 48 AE D1 	call setup_sprite_bottom_cut
  247 D1:AF4F -  -  -  -  	;a = loops to draw, hl = 1 before gap length 
  248 D1:AF4F D9 -  -  -  	exx ;toshadow
  249 D1:AF50 47 -  -  -  	ld b,a
  250 D1:AF51 C3 EA AE D1 	jp dsfgs_line_loop
  251 D1:AF55 -  -  -  -  
  252 D1:AF55 -  -  -  -  
  253 D1:AF55 -  -  -  -  
  254 D1:AF55 -  -  -  -  
  255 D1:AF55 -  -  -  -  
  256 D1:AF55 -  -  -  -  
  257 D1:AF55 -  -  -  -  
  258 D1:AF55 -  -  -  -  
  259 D1:AF55 -  -  -  -  
  260 D1:AF55 -  -  -  -  
  261 D1:AF55 -  -  -  -  
  262 D1:AF55 -  -  -  -  
  263 D1:AF55 -  -  -  -  
  264 D1:AF55 -  -  -  -  
  265 D1:AF55 -  -  -  -  
  266 D1:AF55 -  -  -  -  
  267 D1:AF55 -  -  -  -  
  268 D1:AF55 -  -  -  -  
  269 D1:AF55 -  -  -  -  
  270 D1:AF55 -  -  -  -  
  271 D1:AF55 -  -  -  -  
  272 D1:AF55 -  -  -  -  
  273 D1:AF55 -  -  -  -  
  274 D1:AF55 -  -  -  -  
  275 D1:AF55 -  -  -  -  
  276 D1:AF55 -  -  -  -  
  277 D1:AF55 -  -  -  -  
  278 D1:AF55 -  -  -  -  
  279 D1:AF55 -  -  -  -  
  280 D1:AF55 -  -  -  -  
  281 D1:AF55 -  -  -  -  
  282 D1:AF55 -  -  -  -  
  283 D1:AF55 -  -  -  -  
  284 D1:AF55 -  -  -  -  
  285 D1:AF55 -  -  -  -  
  286 D1:AF55 -  -  -  -  
  287 D1:AF55 -  -  -  -   
  288 D1:AF55 -  -  -  -  
  289 D1:AF55 -  -  -  -  
  290 D1:AF55 -  -  -  -  
  291 D1:AF55 -  -  -  -  
  292 D1:AF55 -  -  -  -  
  293 D1:AF55 -  -  -  -  
  294 D1:AF55 -  -  -  -  
  295 D1:AF55 -  -  -  -  
  296 D1:AF55 -  -  -  -  
  297 D1:AF55 -  -  -  -  
  298 D1:AF55 -  -  -  -  
  299 D1:AF55 -  -  -  -  
  300 D1:AF55 -  -  -  -  
  301 D1:AF55 -  -  -  -  
  302 D1:AF55 -  -  -  -  
  303 D1:AF55 -  -  -  -  
  304 D1:AF55 -  -  -  -  
  305 D1:AF55 -  -  -  -  
  306 D1:AF55 -  -  -  -  
  307 D1:AF55 -  -  -  -  
  308 D1:AF55 -  -  -  -  
  309 D1:AF55 -  -  -  -  
  310 D1:AF55 -  -  -  -  
  311 D1:AF55 -  -  -  -  
  312 D1:AF55 -  -  -  -  
  313 D1:AF55 -  -  -  -  
  314 D1:AF55 -  -  -  -  
  315 D1:AF55 -  -  -  -  
  316 D1:AF55 -  -  -  -  
  317 D1:AF55 -  -  -  -  
  318 D1:AF55 -  -  -  -  
  319 D1:AF55 -  -  -  -  
  320 D1:AF55 -  -  -  -  
  321 D1:AF55 -  -  -  -  
  322 D1:AF55 -  -  -  -  
  323 D1:AF55 -  -  -  -  
  324 D1:AF55 -  -  -  -  
  325 D1:AF55 -  -  -  -  
  326 D1:AF55 -  -  -  -  
  327 D1:AF55 -  -  -  -  
  328 D1:AF55 -  -  -  -  
  329 D1:AF55 -  -  -  -  
  330 D1:AF55 -  -  -  -  
  331 D1:AF55 -  -  -  -  
  332 D1:AF55 -  -  -  -  
  333 D1:AF55 -  -  -  -  
  334 D1:AF55 -  -  -  -  
  335 D1:AF55 -  -  -  -  
  336 D1:AF55 -  -  -  -  
  337 D1:AF55 -  -  -  -  
  338 D1:AF55 -  -  -  -  
  339 D1:AF55 -  -  -  -  
  340 D1:AF55 -  -  -  -  
  341 D1:AF55 -  -  -  -  
  342 D1:AF55 -  -  -  -  
  343 D1:AF55 -  -  -  -  	
  344 D1:AF55 -  -  -  -  	
Listing for file "ascent.asm"
  605 D1:AF55 -  -  -  -  #include "BetterSpriteDecompress.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\BetterSpriteDecompress.txt"
    1 D1:AF55 -  -  -  -  
    2 D1:AF55 -  -  -  -  
    3 D1:AF55 -  -  -  -  
    4 D1:AF55 -  -  -  -  
    5 D1:AF55 -  -  -  -  
    6 D1:AF55 -  -  -  -  
    7 D1:AF55 -  -  -  -  
    8 D1:AF55 -  -  -  -  
    9 D1:AF55 -  -  -  -  ;REGISTER USEAGE
   10 D1:AF55 -  -  -  -  ;HL = sprite color data byte
   11 D1:AF55 -  -  -  -  ;C = bit selector for color data 
   12 D1:AF55 -  -  -  -  ;HL' = alpha data byte
   13 D1:AF55 -  -  -  -  ;C' = bit selector for alpha data
   14 D1:AF55 -  -  -  -  ;DE = output sprite data location
   15 D1:AF55 -  -  -  -  ;DE' = loops/line write location 
   16 D1:AF55 -  -  -  -  ;A' = alpha bits remaining to read in row
   17 D1:AF55 -  -  -  -  
   18 D1:AF55 -  -  -  -  ;SETUP ----------------
   19 D1:AF55 -  -  -  -  ;SET UP BPC MODE AND ALPHA/NOALPHA
   20 D1:AF55 -  -  -  -  ;write height or width(BG) data to decompressed sprite 
   21 D1:AF55 -  -  -  -  ;GET PER SPRITE PALETTE DATA
   22 D1:AF55 -  -  -  -  ;set registers to point to correct locations for decompression
   23 D1:AF55 -  -  -  -  ;------------
   24 D1:AF55 -  -  -  -  
   25 D1:AF55 -  -  -  -  ;GO TO EITHER FAST, SLOW, or BG SPRITE ALGORITHMS
   26 D1:AF55 -  -  -  -  
   27 D1:AF55 -  -  -  -  
   28 D1:AF55 -  -  -  -  ;FAST / SLOW ROUTINE ---------------------------
   29 D1:AF55 -  -  -  -  ;Parse through alpha data, count number of 00 pairs (gap length)
   30 D1:AF55 -  -  -  -  ;IF FAST, GOTO LDIR ROUTINE
   31 D1:AF55 -  -  -  -  ;leading pixel(s), either 11, 01, 10 in alpha data. 
   32 D1:AF55 -  -  -  -  ;write pixel mask and color data
   33 D1:AF55 -  -  -  -  
   34 D1:AF55 -  -  -  -  ;LDIR ROUTINE
   35 D1:AF55 -  -  -  -  ;Count number of 11 pairs in alpha data (LDIR length)
   36 D1:AF55 -  -  -  -  ;if slow and alpha data ends with 00, the last 11 pair becomes trailing pixels
   37 D1:AF55 -  -  -  -  ;Write LDIR length to sprite data 
   38 D1:AF55 -  -  -  -  ;Write LDIR pixel data (if nonzero)
   39 D1:AF55 -  -  -  -  ;IF FAST, GOTO END
   40 D1:AF55 -  -  -  -  
   41 D1:AF55 -  -  -  -  ;trailing pixels
   42 D1:AF55 -  -  -  -  ;11,10,01 in alpha data 
   43 D1:AF55 -  -  -  -  
   44 D1:AF55 -  -  -  -  ;END AND RESTART
   45 D1:AF55 -  -  -  -  ;Increment loops/line counter
   46 D1:AF55 -  -  -  -  ;check if end of line and write loops/line
   47 D1:AF55 -  -  -  -  
   48 D1:AF55 -  -  -  -  ;store registers and check if interrupt is required
   49 D1:AF55 -  -  -  -  ;if interruption required, return to main loop to draw next frame
   50 D1:AF55 -  -  -  -  ;otherwise return to start of loop
   51 D1:AF55 -  -  -  -  
   52 D1:AF55 -  -  -  -  ;
   53 D1:AF55 -  -  -  -  
   54 D1:AF55 -  -  -  -  
   55 D1:AF55 -  -  -  -  
   56 D1:AF55 -  -  -  -  
   57 D1:AF55 -  -  -  -  
   58 D1:AF55 -  -  -  -  
   59 D1:AF55 -  -  -  -  ;rotates c and incs hl if needed to point to next bit. can be flipped to dec bit 
   60 D1:AF55 -  -  -  -  sdcomp_next_in_bitstream:
   61 D1:AF55 -  -  -  -  sdcomp_flip_bitstream .equ $ + 1
   62 D1:AF55 CB 09 -  -  	rrc c;rlc flip
   63 D1:AF57 D0 -  -  -  	ret nc
   64 D1:AF58 -  -  -  -  sdcomp_flip_bitstream_2 .equ $
   65 D1:AF58 23 -  -  -  	inc hl;dec hl flip
   66 D1:AF59 C9 -  -  -  	ret
   67 D1:AF5A -  -  -  -  
   68 D1:AF5A -  -  -  -  ;ALPHA HELPER FUNCS ================================================================================================	
   69 D1:AF5A -  -  -  -  
   70 D1:AF5A -  -  -  -  ;IN SHADOW
   71 D1:AF5A -  -  -  -  ;HL POINTS TO PIXEL ALPHA DATA
   72 D1:AF5A -  -  -  -  ;C IS BITMASK
   73 D1:AF5A -  -  -  -  ;RETURNS 0 OR nonzero IN A 
   74 D1:AF5A -  -  -  -  ;If final alpha bit in line is read, writes loop/line data, ...
   75 D1:AF5A -  -  -  -  ; sets some flags, decrements remaining lines, traverses sprite data if flip, returns the read data 
   76 D1:AF5A -  -  -  -  ; next call returns first bit in next row  
   77 D1:AF5A -  -  -  -  sdcomp_get_next_alpha:
   78 D1:AF5A -  -  -  -  	;ld a,$A2;test 
   79 D1:AF5A -  -  -  -  	;call write_a_to_ram
   80 D1:AF5A 79 -  -  -  	ld a,c 
   81 D1:AF5B -  -  -  -  	;call write_a_to_ram 
   82 D1:AF5B 7E -  -  -  	ld a,(hl)
   83 D1:AF5C -  -  -  -  	;call write_a_to_ram
   84 D1:AF5C -  -  -  -  	
   85 D1:AF5C 37 -  -  -  	scf 
   86 D1:AF5D -  -  -  -  sdcomp_end_of_line_alp .equ $
   87 D1:AF5D DA 6A AF D1 	jp c, sdcomp_end_of_line_alp_skip
   88 D1:AF61 -  -  -  -  
   89 D1:AF61 -  -  -  -  	;ld a,$A3
   90 D1:AF61 -  -  -  -  	;call write_a_to_ram 
   91 D1:AF61 -  -  -  -  	
   92 D1:AF61 3E D2 -  -  	ld a, %11010010 ;jp nc 
   93 D1:AF63 32 CD AF D1 	ld (sdcomp_end_vitrual_zero_read),a 
   94 D1:AF67 -  -  -  -  	
   95 D1:AF67 3E 00 -  -  	ld a,0
   96 D1:AF69 C9 -  -  -  	ret ;returns virtual 0, outside of data range 
   97 D1:AF6A -  -  -  -  
   98 D1:AF6A -  -  -  -  sdcomp_end_of_line_alp_skip:
   99 D1:AF6A -  -  -  -  	
  100 D1:AF6A -  -  -  -  	
  101 D1:AF6A -  -  -  -  	
  102 D1:AF6A -  -  -  -  ;MUST BE RESET EVERY ROW
  103 D1:AF6A 37 -  -  -  	scf
  104 D1:AF6B -  -  -  -  sdcomp_bit_offset .equ $ ;jp nc for offset
  105 D1:AF6B DA 78 AF D1 	jp c,sdcomp_bit_offset_skip
  106 D1:AF6F 3E DA -  -  	ld a,%11011010;jp c 
  107 D1:AF71 32 6B AF D1 	ld (sdcomp_bit_offset),a
  108 D1:AF75 -  -  -  -  	;ld a,$A9
  109 D1:AF75 -  -  -  -  	;call write_a_to_ram
  110 D1:AF75 3E 00 -  -  	ld a,0
  111 D1:AF77 C9 -  -  -  	ret ;return 0 first bit
  112 D1:AF78 -  -  -  -  sdcomp_bit_offset_skip:;skip bit offset
  113 D1:AF78 -  -  -  -  		
  114 D1:AF78 -  -  -  -  	;ld a,$EF
  115 D1:AF78 -  -  -  -  	;call write_a_to_ram
  116 D1:AF78 7E -  -  -  	ld a,(hl)
  117 D1:AF79 -  -  -  -  	;push af 
  118 D1:AF79 -  -  -  -  	;call write_a_to_ram
  119 D1:AF79 -  -  -  -  	;ld a,c
  120 D1:AF79 -  -  -  -  	;call write_a_to_ram
  121 D1:AF79 -  -  -  -  	;pop af 
  122 D1:AF79 -  -  -  -  	
  123 D1:AF79 -  -  -  -  	
  124 D1:AF79 A1 -  -  -  	and c 
  125 D1:AF7A CD 55 AF D1 	call sdcomp_next_in_bitstream;incs bitstream
  126 D1:AF7E -  -  -  -  	;a holds data to return
  127 D1:AF7E -  -  -  -  	;call write_a_to_ram
  128 D1:AF7E 37 -  -  -  	scf 
  129 D1:AF7F -  -  -  -  sdcomp_no_alpha_1 .equ $;Load a with 1 if no alpha
  130 D1:AF7F DA 85 AF D1 	jp c,sdcomp_no_alpha_1_skip
  131 D1:AF83 3E 01 -  -  	ld a,1
  132 D1:AF85 -  -  -  -  sdcomp_no_alpha_1_skip:
  133 D1:AF85 -  -  -  -  	
  134 D1:AF85 -  -  -  -  	
  135 D1:AF85 08 -  -  -  	ex af,af' ;';into shadow
  136 D1:AF86 3D -  -  -  	dec a 
  137 D1:AF87 -  -  -  -  	;call write_a_to_ram
  138 D1:AF87 C2 B3 AF D1 	jp nz, sdcomp_end_of_line_skip
  139 D1:AF8B -  -  -  -  	
  140 D1:AF8B -  -  -  -  	;HAve read last bit in line  
  141 D1:AF8B -  -  -  -  	
  142 D1:AF8B -  -  -  -  	;ld a,$AC;Test
  143 D1:AF8B -  -  -  -  	;call write_a_to_ram;Test
  144 D1:AF8B -  -  -  -  	;Decrement lines remaining in sprite
  145 D1:AF8B -  -  -  -  sdcomp_lines_remaining .equ $ + 1
  146 D1:AF8B 3E 00 -  -  	ld a,0
  147 D1:AF8D 3D -  -  -  	dec a 
  148 D1:AF8E 32 8C AF D1 	ld (sdcomp_lines_remaining),a
  149 D1:AF92 -  -  -  -  	;call write_a_to_ram
  150 D1:AF92 C2 9C AF D1 	jp nz,sdcomp_set_end_flag_skip
  151 D1:AF96 -  -  -  -  	;end of last line reached 
  152 D1:AF96 3E DA -  -  	ld a,%11011010;jp c
  153 D1:AF98 32 12 B2 D1 	ld (sdcomp_end_reached_flag) , a ;set end reached flag to indicate sprite is done decompressing TODO 
  154 D1:AF9C -  -  -  -  	;ld a,$E9
  155 D1:AF9C -  -  -  -  	;call write_a_to_ram;TEST 
  156 D1:AF9C -  -  -  -  sdcomp_set_end_flag_skip:
  157 D1:AF9C -  -  -  -  	
  158 D1:AF9C -  -  -  -  
  159 D1:AF9C -  -  -  -  	
  160 D1:AF9C 3E D2 -  -  	ld a, %11010010 ;jp nc 
  161 D1:AF9E 32 ED B1 D1 	ld (sdcomp_end_of_line_gaplength),a
  162 D1:AFA2 32 5D AF D1 	ld (sdcomp_end_of_line_alp),a
  163 D1:AFA6 -  -  -  -  	;ld (sdcomp_write_loops_per_line_flag),a 
  164 D1:AFA6 37 -  -  -  	scf ;Set offset bit for next line
  165 D1:AFA7 -  -  -  -  sdcomp_offset_1 .equ $
  166 D1:AFA7 DA B1 AF D1 	jp c,sdcomp_offset_1_skip
  167 D1:AFAB 3E D2 -  -  	ld a, %11010010 ;jp nc 
  168 D1:AFAD 32 6B AF D1 	ld (sdcomp_bit_offset),a
  169 D1:AFB1 -  -  -  -  sdcomp_offset_1_skip:
  170 D1:AFB1 -  -  -  -  	
  171 D1:AFB1 -  -  -  -  sdcomp_sprite_width_2 .equ $+1
  172 D1:AFB1 3E 00 -  -  	ld a,0 ;Return sprite width to a'
  173 D1:AFB3 -  -  -  -  	
  174 D1:AFB3 -  -  -  -  	;call write_a_to_ram
  175 D1:AFB3 -  -  -  -  	
  176 D1:AFB3 -  -  -  -  sdcomp_end_of_line_skip:
  177 D1:AFB3 08 -  -  -  	ex af,af' ;' ;out
  178 D1:AFB4 -  -  -  -  	
  179 D1:AFB4 -  -  -  -  	;push af ;testing
  180 D1:AFB4 -  -  -  -  	;ld a,$A0
  181 D1:AFB4 -  -  -  -  	;call write_a_to_ram
  182 D1:AFB4 -  -  -  -  	;pop af 
  183 D1:AFB4 -  -  -  -  	;call write_a_to_ram
  184 D1:AFB4 -  -  -  -  	
  185 D1:AFB4 C9 -  -  -  	ret 
  186 D1:AFB5 -  -  -  -  	
  187 D1:AFB5 -  -  -  -  
  188 D1:AFB5 -  -  -  -  
  189 D1:AFB5 -  -  -  -  ;in shadow,returns a $FF,$0F,$F0,$00
  190 D1:AFB5 -  -  -  -  sdcomp_get_next_alpha_pair:
  191 D1:AFB5 -  -  -  -  	;ld a,$A1
  192 D1:AFB5 -  -  -  -  	;call write_a_to_ram
  193 D1:AFB5 -  -  -  -  	
  194 D1:AFB5 -  -  -  -  	;ld a,c ;test
  195 D1:AFB5 -  -  -  -  	;call write_a_to_ram 
  196 D1:AFB5 -  -  -  -  	;ld a,(hl) ;test
  197 D1:AFB5 -  -  -  -  	;call write_a_to_ram
  198 D1:AFB5 -  -  -  -  	
  199 D1:AFB5 3E DA -  -  	ld a,%11011010;jp c 
  200 D1:AFB7 32 CD AF D1 	ld(sdcomp_end_vitrual_zero_read),a ;reset vitrual zero read flag
  201 D1:AFBB -  -  -  -  	
  202 D1:AFBB CD 5A AF D1 	call sdcomp_get_next_alpha
  203 D1:AFBF B7 -  -  -  	or a 
  204 D1:AFC0 CA CA AF D1 	jp z,sdcomp_get_next_alpha_pair0
  205 D1:AFC4 3E F0 -  -  	ld a,$F0;FIRST BIT WAS 1
  206 D1:AFC6 -  -  -  -  	;call write_a_to_ram
  207 D1:AFC6 C3 D9 AF D1 	jp sdcomp_get_next_alpha_pair1
  208 D1:AFCA -  -  -  -  sdcomp_get_next_alpha_pair0:
  209 D1:AFCA 3E 00 -  -  	ld a,0
  210 D1:AFCC -  -  -  -  	
  211 D1:AFCC 37 -  -  -  	scf 
  212 D1:AFCD -  -  -  -  sdcomp_end_vitrual_zero_read .equ $
  213 D1:AFCD DA D9 AF D1 	jp c,sdcomp_get_next_alpha_pair1
  214 D1:AFD1 F5 -  -  -  	push af 
  215 D1:AFD2 -  -  -  -  	;This gets triggered when we have read a vitrual 0 (outside of line) as the first bit in an alpha pair 
  216 D1:AFD2 -  -  -  -  	
  217 D1:AFD2 3E 3D -  -  	ld a,%00111101 ;dec a 
  218 D1:AFD4 32 F4 B1 D1 	ld (sdcomp_dec_gap_btwn_rows),a 
  219 D1:AFD8 -  -  -  -  	;We should subtract 1 from the next interline gap length whenever a virtual 00 is read.
  220 D1:AFD8 -  -  -  -  	;ld a,$A4
  221 D1:AFD8 -  -  -  -  	;call write_a_to_ram
  222 D1:AFD8 F1 -  -  -  	pop af 
  223 D1:AFD9 -  -  -  -  	
  224 D1:AFD9 -  -  -  -  sdcomp_get_next_alpha_pair1:
  225 D1:AFD9 -  -  -  -  
  226 D1:AFD9 -  -  -  -  	
  227 D1:AFD9 32 EF AF D1 	ld (sdcomp_get_next_alpha_pair_or),a 
  228 D1:AFDD -  -  -  -  	
  229 D1:AFDD CD 5A AF D1 	call sdcomp_get_next_alpha
  230 D1:AFE1 B7 -  -  -  	or a 
  231 D1:AFE2 CA EC AF D1 	jp z,sdcomp_get_next_alpha_pair2
  232 D1:AFE6 3E 0F -  -  	ld a,$0F;SECOND BIT WAS 1
  233 D1:AFE8 C3 EE AF D1 	jp sdcomp_get_next_alpha_pair3
  234 D1:AFEC -  -  -  -  sdcomp_get_next_alpha_pair2:
  235 D1:AFEC 3E 00 -  -  	ld a,0;SECOND BIT WAS 0
  236 D1:AFEE -  -  -  -  sdcomp_get_next_alpha_pair3:	
  237 D1:AFEE -  -  -  -  sdcomp_get_next_alpha_pair_or .equ $ + 1
  238 D1:AFEE F6 00 -  -  	or 0;OR WITH FIRST BIT 
  239 D1:AFF0 -  -  -  -  	
  240 D1:AFF0 C9 -  -  -  	ret 
  241 D1:AFF1 -  -  -  -  	
  242 D1:AFF1 -  -  -  -  ;COLOR HELPER FUNCS =================================================================================================
  243 D1:AFF1 -  -  -  -  
  244 D1:AFF1 -  -  -  -  ;not in shadow, returns a = color0000
  245 D1:AFF1 -  -  -  -  sdcomp_get_next_color_leading_nibble:
  246 D1:AFF1 CD FA AF D1 	call sdcomp_get_next_color
  247 D1:AFF5 0F -  -  -  	rrca 
  248 D1:AFF6 0F -  -  -  	rrca 
  249 D1:AFF7 0F -  -  -  	rrca 
  250 D1:AFF8 0F -  -  -  	rrca
  251 D1:AFF9 C9 -  -  -  	ret 
  252 D1:AFFA -  -  -  -  
  253 D1:AFFA -  -  -  -  
  254 D1:AFFA -  -  -  -  
  255 D1:AFFA -  -  -  -  ;bit orders
  256 D1:AFFA -  -  -  -  ;	noflip   flip 
  257 D1:AFFA -  -  -  -  ;4bpp 3210 	 0123
  258 D1:AFFA -  -  -  -  ;3bpp 210	 012
  259 D1:AFFA -  -  -  -  ;2bpp 10	 01
  260 D1:AFFA -  -  -  -  ;1bpp 0		 0
  261 D1:AFFA -  -  -  -  
  262 D1:AFFA -  -  -  -  ;not in shadow, returns a = 0000color
  263 D1:AFFA -  -  -  -  sdcomp_get_next_color:
  264 D1:AFFA D5 -  -  -  	push de ;save data write location
  265 D1:AFFB 1E 00 -  -  	ld e,0;E will store the final color data
  266 D1:AFFD -  -  -  -  	
  267 D1:AFFD 37 -  -  -  	scf
  268 D1:AFFE -  -  -  -  sdcomp_0bpc .equ $ ;if sprite is 0bpc, skip reading bitstream, set to jp c 
  269 D1:AFFE D2 48 B0 D1 	jp nc,sdcomp_get_color_from_index
  270 D1:B002 -  -  -  -  	
  271 D1:B002 -  -  -  -  	;ld a,$C1
  272 D1:B002 -  -  -  -  	;call write_a_to_ram
  273 D1:B002 -  -  -  -  	
  274 D1:B002 7E -  -  -  	ld a,(hl) ;read next bit 
  275 D1:B003 -  -  -  -  	;call write_a_to_ram ;TEST
  276 D1:B003 A1 -  -  -  	and c
  277 D1:B004 -  -  -  -  	;call write_a_to_ram ;TEST
  278 D1:B004 CD 55 AF D1 	call sdcomp_next_in_bitstream  ;inc bitstream 
  279 D1:B008 B7 -  -  -  	or a
  280 D1:B009 CA 0F B0 D1 	jp z,sdcomp_get_color_data_set_skip_1
  281 D1:B00D -  -  -  -  sdcomp_color_bit_0 .equ $ + 1 
  282 D1:B00D CB CB -  -  	set 1,e  ;set bit of e reg to color, 0 for flip, else depends on bpc 
  283 D1:B00F -  -  -  -  sdcomp_get_color_data_set_skip_1:
  284 D1:B00F -  -  -  -  	
  285 D1:B00F 37 -  -  -  	scf
  286 D1:B010 -  -  -  -  sdcomp_1bpc .equ $
  287 D1:B010 D2 48 B0 D1 	jp nc,sdcomp_get_color_from_index ;if 1bpc jump to end 
  288 D1:B014 -  -  -  -  
  289 D1:B014 -  -  -  -  	;ld a,$C2
  290 D1:B014 -  -  -  -  	;call write_a_to_ram
  291 D1:B014 -  -  -  -  	
  292 D1:B014 7E -  -  -  	ld a,(hl)
  293 D1:B015 -  -  -  -  	;call write_a_to_ram ;TEST
  294 D1:B015 A1 -  -  -  	and c 
  295 D1:B016 -  -  -  -  	;call write_a_to_ram ;TEST
  296 D1:B016 CD 55 AF D1 	call sdcomp_next_in_bitstream
  297 D1:B01A B7 -  -  -  	or a
  298 D1:B01B CA 21 B0 D1 	jp z,sdcomp_get_color_data_set_skip_2
  299 D1:B01F -  -  -  -  sdcomp_color_bit_1 .equ $ + 1 	
  300 D1:B01F CB C3 -  -  	set 0,e ;store next bit of color data in e  
  301 D1:B021 -  -  -  -  sdcomp_get_color_data_set_skip_2:
  302 D1:B021 -  -  -  -  	
  303 D1:B021 37 -  -  -  	scf
  304 D1:B022 -  -  -  -  sdcomp_2bpc .equ $ ;if 2bpc jump to end
  305 D1:B022 D2 48 B0 D1 	jp nc,sdcomp_get_color_from_index
  306 D1:B026 -  -  -  -  	
  307 D1:B026 7E -  -  -  	ld a,(hl)
  308 D1:B027 A1 -  -  -  	and c 
  309 D1:B028 CD 55 AF D1 	call sdcomp_next_in_bitstream
  310 D1:B02C B7 -  -  -  	or a
  311 D1:B02D CA 33 B0 D1 	jp z,sdcomp_get_color_data_set_skip_3
  312 D1:B031 -  -  -  -  sdcomp_color_bit_2 .equ $ + 1 
  313 D1:B031 CB D3 -  -  	set 2,e 
  314 D1:B033 -  -  -  -  sdcomp_get_color_data_set_skip_3:
  315 D1:B033 -  -  -  -  	
  316 D1:B033 37 -  -  -  	scf
  317 D1:B034 -  -  -  -  sdcomp_3bpc .equ $
  318 D1:B034 D2 48 B0 D1 	jp nc,sdcomp_get_color_from_index	
  319 D1:B038 -  -  -  -  
  320 D1:B038 -  -  -  -  ;4bpp, interpret as color data, not indexed	
  321 D1:B038 7E -  -  -  	ld a,(hl)
  322 D1:B039 A1 -  -  -  	and c 
  323 D1:B03A CD 55 AF D1 	call sdcomp_next_in_bitstream
  324 D1:B03E B7 -  -  -  	or a
  325 D1:B03F CA 45 B0 D1 	jp z,sdcomp_get_color_data_set_skip_4
  326 D1:B043 -  -  -  -  sdcomp_color_bit_3 .equ $ + 1 
  327 D1:B043 CB DB -  -  	set 3,e 
  328 D1:B045 -  -  -  -  sdcomp_get_color_data_set_skip_4:
  329 D1:B045 -  -  -  -  ;4bpp, interpret as color data, not indexed
  330 D1:B045 7B -  -  -  	ld a,e 
  331 D1:B046 D1 -  -  -  	pop de 
  332 D1:B047 C9 -  -  -  	ret 
  333 D1:B048 -  -  -  -  
  334 D1:B048 -  -  -  -  sdcomp_get_color_from_index: ; e holds index of color data, 1-8
  335 D1:B048 -  -  -  -  	
  336 D1:B048 -  -  -  -  	;ld a,$DD
  337 D1:B048 -  -  -  -  	;call write_a_to_ram
  338 D1:B048 -  -  -  -  	;ld a,e 
  339 D1:B048 -  -  -  -  	;call write_a_to_ram
  340 D1:B048 -  -  -  -  	
  341 D1:B048 -  -  -  -  	
  342 D1:B048 CB 53 -  -  	bit 2,e 
  343 D1:B04A CA 6C B0 D1 	jp z, sdcomp_get_color_from_index_2l
  344 D1:B04E -  -  -  -  	
  345 D1:B04E -  -  -  -  	;Bit 2 = 1 
  346 D1:B04E CB 4B -  -  	bit 1,e 
  347 D1:B050 CA 60 B0 D1 	jp z,sdcomp_get_color_from_index_2h1l
  348 D1:B054 -  -  -  -  
  349 D1:B054 -  -  -  -  	;bit 2 = 1 1 = 1
  350 D1:B054 -  -  -  -  sdcomp_indexed_color_data_4 .equ $ + 1	
  351 D1:B054 3E 00 -  -  	ld a,0
  352 D1:B056 CB 43 -  -  	bit 0,e 
  353 D1:B058 CA 8E B0 D1 	jp z,sdcomp_get_color_from_index_msn
  354 D1:B05C C3 8A B0 D1 	jp sdcomp_get_color_from_index_lsn
  355 D1:B060 -  -  -  -  
  356 D1:B060 -  -  -  -  sdcomp_get_color_from_index_2h1l:
  357 D1:B060 -  -  -  -  	;2 = 1 1 = 0 
  358 D1:B060 -  -  -  -  sdcomp_indexed_color_data_3 .equ $ + 1	
  359 D1:B060 3E 00 -  -  	ld a,0
  360 D1:B062 CB 43 -  -  	bit 0,e 
  361 D1:B064 CA 8E B0 D1 	jp z,sdcomp_get_color_from_index_msn
  362 D1:B068 C3 8A B0 D1 	jp sdcomp_get_color_from_index_lsn
  363 D1:B06C -  -  -  -  	
  364 D1:B06C -  -  -  -  sdcomp_get_color_from_index_2l:
  365 D1:B06C -  -  -  -  	;bit 2 was 0 
  366 D1:B06C CB 4B -  -  	bit 1,e 
  367 D1:B06E CA 7E B0 D1 	jp z,sdcomp_get_color_from_index_2l1l
  368 D1:B072 -  -  -  -  	
  369 D1:B072 -  -  -  -  	;bit 2 = 0 1 = 1
  370 D1:B072 -  -  -  -  sdcomp_indexed_color_data_2 .equ $ + 1	
  371 D1:B072 3E 00 -  -  	ld a,0
  372 D1:B074 CB 43 -  -  	bit 0,e 
  373 D1:B076 CA 8E B0 D1 	jp z,sdcomp_get_color_from_index_msn
  374 D1:B07A C3 8A B0 D1 	jp sdcomp_get_color_from_index_lsn
  375 D1:B07E -  -  -  -  	
  376 D1:B07E -  -  -  -  sdcomp_get_color_from_index_2l1l:
  377 D1:B07E -  -  -  -  	;bit 2 =0  1 = 0
  378 D1:B07E -  -  -  -  sdcomp_indexed_color_data_1 .equ $ + 1	
  379 D1:B07E 3E 00 -  -  	ld a,0
  380 D1:B080 -  -  -  -  	
  381 D1:B080 CB 43 -  -  	bit 0,e 
  382 D1:B082 CA 8E B0 D1 	jp z,sdcomp_get_color_from_index_msn
  383 D1:B086 C3 8A B0 D1 	jp sdcomp_get_color_from_index_lsn
  384 D1:B08A -  -  -  -  sdcomp_get_color_from_index_lsn:
  385 D1:B08A E6 0F -  -  	and %00001111;and with least significant nibble 
  386 D1:B08C D1 -  -  -  	pop de 
  387 D1:B08D -  -  -  -  	
  388 D1:B08D -  -  -  -  	;push af 
  389 D1:B08D -  -  -  -  	;ld a,$C0
  390 D1:B08D -  -  -  -  	;call write_a_to_ram
  391 D1:B08D -  -  -  -  	;pop af 
  392 D1:B08D -  -  -  -  	;call write_a_to_ram
  393 D1:B08D -  -  -  -  	
  394 D1:B08D C9 -  -  -  	ret 
  395 D1:B08E -  -  -  -  	
  396 D1:B08E -  -  -  -  sdcomp_get_color_from_index_msn:
  397 D1:B08E E6 F0 -  -  	and %11110000;and with most significant nibble 
  398 D1:B090 0F -  -  -  	rrca 
  399 D1:B091 0F -  -  -  	rrca 
  400 D1:B092 0F -  -  -  	rrca 
  401 D1:B093 0F -  -  -  	rrca 
  402 D1:B094 D1 -  -  -  	pop de 
  403 D1:B095 -  -  -  -  	
  404 D1:B095 -  -  -  -  	;push af 
  405 D1:B095 -  -  -  -  	;ld a,$C0
  406 D1:B095 -  -  -  -  	;call write_a_to_ram
  407 D1:B095 -  -  -  -  	;pop af 
  408 D1:B095 -  -  -  -  	;call write_a_to_ram
  409 D1:B095 -  -  -  -  	
  410 D1:B095 C9 -  -  -  	ret 
  411 D1:B096 -  -  -  -  
  412 D1:B096 -  -  -  -  
  413 D1:B096 -  -  -  -  
  414 D1:B096 -  -  -  -  ;function for traversing sprite data for reversed sprites.
  415 D1:B096 -  -  -  -  ;Reads forward through alpha and color data to end of line, so that it can then be read backwards 
  416 D1:B096 -  -  -  -  ;in shadow ,destroys a
  417 D1:B096 -  -  -  -  sdcomp_traverse_line_data:
  418 D1:B096 D9 -  -  -  	exx ;OUT 
  419 D1:B097 -  -  -  -  sdcomp_color_data_line_end_byte .equ $ + 1
  420 D1:B097 21 00 00 00 	ld hl,0 ;load end of previous color data line 
  421 D1:B09B -  -  -  -  sdcomp_color_data_line_end_mask .equ $ + 1
  422 D1:B09B 0E 00 -  -  	ld c,0 ;load end of previous color data line
  423 D1:B09D D9 -  -  -  	exx;toshadow 
  424 D1:B09E -  -  -  -  	
  425 D1:B09E -  -  -  -  	;load end of previous alpha data line 
  426 D1:B09E -  -  -  -  sdcomp_alpha_data_line_end_byte .equ $ + 1
  427 D1:B09E 21 00 00 00 	ld hl,0
  428 D1:B0A2 -  -  -  -  sdcomp_alpha_data_line_end_mask .equ $ + 1
  429 D1:B0A2 0E 00 -  -  	ld c,0
  430 D1:B0A4 -  -  -  -  sdcomp_traverse_initial:
  431 D1:B0A4 D5 -  -  -  	push de
  432 D1:B0A5 -  -  -  -  sdcomp_sprite_width .equ $ + 1
  433 D1:B0A5 1E 00 -  -  	ld e, 0
  434 D1:B0A7 -  -  -  -  	;e holds sprite width 
  435 D1:B0A7 -  -  -  -  	
  436 D1:B0A7 -  -  -  -  	;Read forward through alpha data and inc color pointer if alpha is 1 
  437 D1:B0A7 -  -  -  -  sdcomp_traverse_line_data_loop:
  438 D1:B0A7 CB 09 -  -  	rrc c 
  439 D1:B0A9 D2 AE B0 D1 	jp nc,sdcomp_traverse_line_data_alpha_inc_skip ;if not reached end of byte, skip
  440 D1:B0AD 23 -  -  -  	inc hl ;have reached end of alpha byte, inc hl 
  441 D1:B0AE -  -  -  -  sdcomp_traverse_line_data_alpha_inc_skip:
  442 D1:B0AE 7E -  -  -  	ld a,(hl)
  443 D1:B0AF A1 -  -  -  	and c ;read alpha data 
  444 D1:B0B0 -  -  -  -  sdcomp_no_alpha_3 .equ $ ;jp c for no alpha sprites to always inc color 
  445 D1:B0B0 CA C6 B0 D1 	jp z,sdcomp_traverse_line_data_color_skip;if no alpha skip incrementing color. 
  446 D1:B0B4 D9 -  -  -  	exx;out of shadow 
  447 D1:B0B5 -  -  -  -  
  448 D1:B0B5 CB 09 -  -  	rrc c ;rotate mask
  449 D1:B0B7 -  -  -  -  sdcomp_traverse_2bpp .equ $ + 1
  450 D1:B0B7 CB 0F -  -  	rrc a ;replace with rrc c for 2bpc (not nop because rrc c is 2 byte operation)
  451 D1:B0B9 -  -  -  -  sdcomp_traverse_3bpp .equ $ + 1
  452 D1:B0B9 CB 0F -  -  	rrc a;rrc c for 3bpc
  453 D1:B0BB -  -  -  -  sdcomp_traverse_4bpp .equ $ + 1
  454 D1:B0BB CB 0F -  -  	rrc a;rrc c for 4 bpc 
  455 D1:B0BD -  -  -  -  	
  456 D1:B0BD -  -  -  -  	;check if end of byte was reached during rotations
  457 D1:B0BD 79 -  -  -  	ld a,c
  458 D1:B0BE -  -  -  -  sdcomp_traverse_bit_check .equ $ + 1
  459 D1:B0BE E6 F0 -  -  	and %11110000 ; 4bpc = 11110000 3bpc = 11100000, 2bpc 11000000 1bpc 10000000 TODO 
  460 D1:B0C0 CA C5 B0 D1 	jp z,sdcomp_traverse_line_data_color_inc_skip
  461 D1:B0C4 23 -  -  -  	inc hl ;inc hl if end of byte was reached 
  462 D1:B0C5 -  -  -  -  sdcomp_traverse_line_data_color_inc_skip:
  463 D1:B0C5 D9 -  -  -  	exx ;toshadow
  464 D1:B0C6 -  -  -  -  sdcomp_traverse_line_data_color_skip:
  465 D1:B0C6 1D -  -  -  	dec e ;e holds sprite width 
  466 D1:B0C7 C2 A7 B0 D1 	jp nz,sdcomp_traverse_line_data_loop ;loop until end of line reached 
  467 D1:B0CB D1 -  -  -  	pop de  ;back to write location 
  468 D1:B0CC -  -  -  -  	;set new end of line pointers 
  469 D1:B0CC -  -  -  -  	
  470 D1:B0CC -  -  -  -  	;ld a,$BB 
  471 D1:B0CC -  -  -  -  	;call write_a_to_ram 
  472 D1:B0CC -  -  -  -  	;ld a,(hl) 
  473 D1:B0CC -  -  -  -  	;call write_a_to_ram 
  474 D1:B0CC -  -  -  -  	;ld a,c 
  475 D1:B0CC -  -  -  -  	;call write_a_to_ram 
  476 D1:B0CC -  -  -  -  	
  477 D1:B0CC -  -  -  -  	
  478 D1:B0CC 22 9F B0 D1 	ld (sdcomp_alpha_data_line_end_byte),hl
  479 D1:B0D0 79 -  -  -  	ld a,c
  480 D1:B0D1 32 A3 B0 D1 	ld (sdcomp_alpha_data_line_end_mask),a
  481 D1:B0D5 D9 -  -  -  	exx ;out
  482 D1:B0D6 22 98 B0 D1 	ld (sdcomp_color_data_line_end_byte),hl
  483 D1:B0DA 79 -  -  -  	ld a,c 
  484 D1:B0DB 32 9C B0 D1 	ld (sdcomp_color_data_line_end_mask),a
  485 D1:B0DF -  -  -  -  	
  486 D1:B0DF -  -  -  -  	;ld a,(hl) 
  487 D1:B0DF -  -  -  -  	;call write_a_to_ram 
  488 D1:B0DF -  -  -  -  	;ld a,c 
  489 D1:B0DF -  -  -  -  	;call write_a_to_ram 
  490 D1:B0DF -  -  -  -  	
  491 D1:B0DF D9 -  -  -  	exx;to shadow 
  492 D1:B0E0 C9 -  -  -  	ret
  493 D1:B0E1 -  -  -  -  
  494 D1:B0E1 -  -  -  -  
  495 D1:B0E1 -  -  -  -  
  496 D1:B0E1 -  -  -  -  
  497 D1:B0E1 -  -  -  -  
  498 D1:B0E1 -  -  -  -  ;hl/c is color data, de is ldir write pos, b' is ldir length, not in shadow 
  499 D1:B0E1 -  -  -  -  sdcomp_write_ldir_data_loop:
  500 D1:B0E1 CD FA AF D1 	call sdcomp_get_next_color
  501 D1:B0E5 47 -  -  -  	ld b,a;first pixel
  502 D1:B0E6 CD F1 AF D1 	call sdcomp_get_next_color_leading_nibble
  503 D1:B0EA B0 -  -  -  	or b
  504 D1:B0EB -  -  -  -  	
  505 D1:B0EB -  -  -  -  	
  506 D1:B0EB 12 -  -  -  	ld (de),a;write color data
  507 D1:B0EC 13 -  -  -  	inc de
  508 D1:B0ED D9 -  -  -  	exx;to shadow
  509 D1:B0EE 05 -  -  -  	dec b;ldir length counter
  510 D1:B0EF D9 -  -  -  	exx
  511 D1:B0F0 C2 E1 B0 D1 	jp nz,sdcomp_write_ldir_data_loop
  512 D1:B0F4 C9 -  -  -  	ret
  513 D1:B0F5 -  -  -  -  	
  514 D1:B0F5 -  -  -  -  
  515 D1:B0F5 -  -  -  -  ;Not in shadow, a holds alpha data pair, writes color and mask data to output 
  516 D1:B0F5 -  -  -  -  sdcomp_write_leading_or_end_pixels:
  517 D1:B0F5 D5 -  -  -  	push de ;output location	
  518 D1:B0F6 47 -  -  -  	ld b,a;save for later
  519 D1:B0F7 CB 67 -  -  	bit 4,a ;check if first pixel has color 
  520 D1:B0F9 3E 00 -  -  	ld a,0
  521 D1:B0FB 16 FF -  -  	ld d,%11111111;pixel data mask assuming no colors 
  522 D1:B0FD CA 07 B1 D1 	jp z,sdcomp_leading_pixel_first_skip
  523 D1:B101 -  -  -  -  	;has first color
  524 D1:B101 16 F0 -  -  	ld d,%11110000;save second pixel of bg 
  525 D1:B103 CD FA AF D1 	call sdcomp_get_next_color
  526 D1:B107 -  -  -  -  sdcomp_leading_pixel_first_skip:
  527 D1:B107 -  -  -  -  	;a is either $00 or $0color1
  528 D1:B107 -  -  -  -  	
  529 D1:B107 1E FF -  -  	ld e,%11111111;assuming no colors
  530 D1:B109 -  -  -  -  	
  531 D1:B109 CB 40 -  -  	bit 0,b;check second pixel alpha
  532 D1:B10B 47 -  -  -  	ld b,a;save for later 
  533 D1:B10C 3E 00 -  -  	ld a,0
  534 D1:B10E CA 18 B1 D1 	jp z,sdcomp_leading_pixel_second_skip;
  535 D1:B112 -  -  -  -  	;has second color 
  536 D1:B112 CD F1 AF D1 	call sdcomp_get_next_color_leading_nibble
  537 D1:B116 -  -  -  -  	;a = color2 0 
  538 D1:B116 1E 0F -  -  	ld e,%00001111;save first pixel of bg
  539 D1:B118 -  -  -  -  	
  540 D1:B118 -  -  -  -  sdcomp_leading_pixel_second_skip:
  541 D1:B118 -  -  -  -  	;a is either 00 or c2 0 
  542 D1:B118 -  -  -  -  	;b is either 00 or 0 c1 
  543 D1:B118 B0 -  -  -  	or b 
  544 D1:B119 47 -  -  -  	ld b,a;final color data
  545 D1:B11A 7A -  -  -  	ld a,d 
  546 D1:B11B A3 -  -  -  	and e ;final mask data 
  547 D1:B11C -  -  -  -  	
  548 D1:B11C D1 -  -  -  	pop de;return to pointer 
  549 D1:B11D -  -  -  -  	
  550 D1:B11D 12 -  -  -  	ld (de),a;write mask data 
  551 D1:B11E 13 -  -  -  	inc de 
  552 D1:B11F 78 -  -  -  	ld a,b;color data 
  553 D1:B120 12 -  -  -  	ld (de),a;write color data 
  554 D1:B121 -  -  -  -  	
  555 D1:B121 -  -  -  -  	
  556 D1:B121 -  -  -  -  	
  557 D1:B121 -  -  -  -  	;call write_a_to_ram
  558 D1:B121 -  -  -  -  	
  559 D1:B121 13 -  -  -  	inc de 
  560 D1:B122 C9 -  -  -  	ret 
  561 D1:B123 -  -  -  -  
  562 D1:B123 -  -  -  -  
  563 D1:B123 -  -  -  -  
  564 D1:B123 -  -  -  -  ;ENTRY POINT 
  565 D1:B123 -  -  -  -  
  566 D1:B123 -  -  -  -  
  567 D1:B123 -  -  -  -  ;hl = sprite data start, de = main data decompress location
  568 D1:B123 -  -  -  -  sprite_decompress:
  569 D1:B123 -  -  -  -  
  570 D1:B123 -  -  -  -  
  571 D1:B123 -  -  -  -  	;SETUP ===========================================================================================================
  572 D1:B123 -  -  -  -  
  573 D1:B123 -  -  -  -  	;SET UP BPC MODE AND ALPHA/NOALPHA
  574 D1:B123 -  -  -  -  
  575 D1:B123 -  -  -  -  	;HL pointing to flags registers
  576 D1:B123 -  -  -  -  	;TODO set up bpc and alpha modes, Sprite type and offset. Write conditional jumps where needed
  577 D1:B123 -  -  -  -  	;set bpc mode 
  578 D1:B123 CB 7E -  -  	bit 7,(hl)
  579 D1:B125 C4 F3 B3 D1 	call nz,sdcomp_set_4bpc
  580 D1:B129 CB 76 -  -  	bit 6,(hl)
  581 D1:B12B C4 90 B3 D1 	call nz,sdcomp_set_3bpc 
  582 D1:B12F CB 6E -  -  	bit 5,(hl)
  583 D1:B131 C4 3D B3 D1 	call nz,sdcomp_set_2bpc 
  584 D1:B135 CB 66 -  -  	bit 4,(hl)
  585 D1:B137 C4 08 B3 D1 	call nz,sdcomp_set_1bpc 
  586 D1:B13B CB 5E -  -  	bit 3,(hl)
  587 D1:B13D C4 ED B2 D1 	call nz,sdcomp_set_0bpc 
  588 D1:B141 CB 56 -  -  	bit 2,(hl)
  589 D1:B143 C4 5A B4 D1 	call nz,sdcomp_set_noalpha
  590 D1:B147 CB 56 -  -  	bit 2,(hl)
  591 D1:B149 CC 6B B4 D1 	call z,sdcomp_reset_noalpha
  592 D1:B14D -  -  -  -  	
  593 D1:B14D -  -  -  -  	
  594 D1:B14D 3E 00 -  -  	ld a,0
  595 D1:B14F 32 7B B2 D1 	ld (sdcomp_loops_per_line_counter),a ;reset loops counter
  596 D1:B153 3E DA -  -  	ld a,%11011010;jp c 
  597 D1:B155 32 CD AF D1 	ld(sdcomp_end_vitrual_zero_read),a ;reset vitrual zero read flag
  598 D1:B159 -  -  -  -  	;write height or width(BG) data to decompressed sprite 
  599 D1:B159 -  -  -  -  	
  600 D1:B159 23 -  -  -  	inc hl ;hl points to width in px 
  601 D1:B15A -  -  -  -  	
  602 D1:B15A -  -  -  -  	
  603 D1:B15A 7E -  -  -  	ld a,(hl) 
  604 D1:B15B 32 A6 B0 D1 	ld (sdcomp_sprite_width),a ;TODO set width in required locations
  605 D1:B15F 32 B2 AF D1 	ld (sdcomp_sprite_width_2),a
  606 D1:B163 47 -  -  -  	ld b,a;width
  607 D1:B164 08 -  -  -  	ex af,af' ;'
  608 D1:B165 78 -  -  -  	ld a,b;Number of alpha bits remaining in row
  609 D1:B166 08 -  -  -  	ex af,af' ;' 
  610 D1:B167 -  -  -  -  
  611 D1:B167 -  -  -  -  
  612 D1:B167 -  -  -  -  sdcomp_offset_2 .equ $ 
  613 D1:B167 00 -  -  -  	nop ;replace with inc b for offset 
  614 D1:B168 -  -  -  -  
  615 D1:B168 -  -  -  -  	;Calculate number of bytes to skip between rows for gap length  
  616 D1:B168 04 -  -  -  	inc b ;round up on odd sprites
  617 D1:B169 CB 38 -  -  	srl b;divide by 2
  618 D1:B16B -  -  -  -  	
  619 D1:B16B -  -  -  -  	
  620 D1:B16B 3E A0 -  -  	ld a,160
  621 D1:B16D 90 -  -  -  	sub b ;a holds 160 - (width in pairs)
  622 D1:B16E 32 F2 B1 D1 	ld (sdcomp_gap_btwn_rows),a 
  623 D1:B172 -  -  -  -  	
  624 D1:B172 -  -  -  -  	;call write_a_to_ram
  625 D1:B172 -  -  -  -  	;ld a,$BE
  626 D1:B172 -  -  -  -  	;call write_a_to_ram
  627 D1:B172 -  -  -  -  	;ld a,b 
  628 D1:B172 -  -  -  -  	;call write_a_to_ram
  629 D1:B172 -  -  -  -  	
  630 D1:B172 -  -  -  -  	
  631 D1:B172 7E -  -  -  	ld a,(hl);load width again
  632 D1:B173 -  -  -  -  	
  633 D1:B173 47 -  -  -  	ld b,a 
  634 D1:B174 -  -  -  -  	
  635 D1:B174 -  -  -  -  
  636 D1:B174 23 -  -  -  	inc hl ;hl points to height 
  637 D1:B175 7E -  -  -  	ld a,(hl);height
  638 D1:B176 32 8C AF D1 	ld (sdcomp_lines_remaining),a ;write height to lines remaining counter
  639 D1:B17A -  -  -  -  	
  640 D1:B17A -  -  -  -  	
  641 D1:B17A -  -  -  -  
  642 D1:B17A 12 -  -  -  	ld (de), a ;write height to first byte of sprite data 
  643 D1:B17B 13 -  -  -  	inc de 
  644 D1:B17C -  -  -  -  	
  645 D1:B17C 23 -  -  -  	inc hl ;HL points to start of alpha data 
  646 D1:B17D -  -  -  -  
  647 D1:B17D E5 -  -  -  	push hl ;Save alpha data 
  648 D1:B17E -  -  -  -  	
  649 D1:B17E -  -  -  -  	
  650 D1:B17E -  -  -  -  	;Need to find start of color data
  651 D1:B17E -  -  -  -  	;at this point a = height, b = width 
  652 D1:B17E -  -  -  -  	
  653 D1:B17E 37 -  -  -  	scf
  654 D1:B17F -  -  -  -  	
  655 D1:B17F -  -  -  -  sdcomp_no_alpha_2 .equ $
  656 D1:B17F D2 98 B1 D1 	jp nc,sdcomp_no_alpha_2_skip ; if no alpha skip this part
  657 D1:B183 -  -  -  -  	
  658 D1:B183 -  -  -  -  	;need to find number of pixels, div by 8 and skip that many bytes
  659 D1:B183 -  -  -  -  	
  660 D1:B183 E5 -  -  -  	push hl
  661 D1:B184 67 -  -  -  	ld h,a;height
  662 D1:B185 68 -  -  -  	ld l,b;width
  663 D1:B186 ED 6C -  -  	mlt hl;number of pixels
  664 D1:B188 -  -  -  -  	;rounds up to nearest multiple of 8
  665 D1:B188 2B -  -  -  	dec hl
  666 D1:B189 CB 3C -  -  	srl h
  667 D1:B18B CB 1D -  -  	rr l
  668 D1:B18D CB 3C -  -  	srl h
  669 D1:B18F CB 1D -  -  	rr l 
  670 D1:B191 CB 3C -  -  	srl h 
  671 D1:B193 CB 1D -  -  	rr l 
  672 D1:B195 23 -  -  -  	inc hl 
  673 D1:B196 C1 -  -  -  	pop bc ;initial hl location
  674 D1:B197 -  -  -  -  	;add number of bytes to skip 
  675 D1:B197 09 -  -  -  	add hl,bc ;HL points to start of color data 
  676 D1:B198 -  -  -  -  	
  677 D1:B198 -  -  -  -  	
  678 D1:B198 -  -  -  -  	
  679 D1:B198 -  -  -  -  sdcomp_no_alpha_2_skip:
  680 D1:B198 -  -  -  -  
  681 D1:B198 -  -  -  -  	
  682 D1:B198 -  -  -  -  	;HL POINTING TO COLOR PALETTE DATA
  683 D1:B198 -  -  -  -  
  684 D1:B198 -  -  -  -  	
  685 D1:B198 47 -  -  -  	ld b,a ;save for after
  686 D1:B199 -  -  -  -  	;GET LOCAL PALETTE DATA
  687 D1:B199 -  -  -  -  	
  688 D1:B199 37 -  -  -  	scf 
  689 D1:B19A -  -  -  -  sdcomp_1bpc_1 .equ $ 
  690 D1:B19A D2 A4 B1 D1 	jp nc,sdcomp_1bpc_1_skip ;skip if not 1bpc or 2bpc or 3bpc
  691 D1:B19E -  -  -  -  	
  692 D1:B19E 7E -  -  -  	ld a,(hl);color data 	
  693 D1:B19F 32 7F B0 D1 	ld (sdcomp_indexed_color_data_1),a 
  694 D1:B1A3 23 -  -  -  	inc hl 
  695 D1:B1A4 -  -  -  -  	
  696 D1:B1A4 -  -  -  -  sdcomp_1bpc_1_skip:	
  697 D1:B1A4 -  -  -  -  
  698 D1:B1A4 -  -  -  -  
  699 D1:B1A4 37 -  -  -  	scf 
  700 D1:B1A5 -  -  -  -  sdcomp_2bpc_1 .equ $ 
  701 D1:B1A5 D2 AF B1 D1 	jp nc,sdcomp_2bpc_1_skip ;skip if not 2bpc or 3bpc
  702 D1:B1A9 -  -  -  -  	
  703 D1:B1A9 7E -  -  -  	ld a,(hl);color data 
  704 D1:B1AA 32 73 B0 D1 	ld (sdcomp_indexed_color_data_2),a 
  705 D1:B1AE 23 -  -  -  	inc hl 
  706 D1:B1AF -  -  -  -  	
  707 D1:B1AF -  -  -  -  sdcomp_2bpc_1_skip:	
  708 D1:B1AF -  -  -  -  
  709 D1:B1AF -  -  -  -  
  710 D1:B1AF 37 -  -  -  	scf 
  711 D1:B1B0 -  -  -  -  sdcomp_3bpc_1 .equ $ 
  712 D1:B1B0 DA C0 B1 D1 	jp c,sdcomp_3bpc_1_skip ;skip if not 3bpc
  713 D1:B1B4 -  -  -  -  	
  714 D1:B1B4 7E -  -  -  	ld a,(hl);color data 
  715 D1:B1B5 32 61 B0 D1 	ld (sdcomp_indexed_color_data_3),a 
  716 D1:B1B9 23 -  -  -  	inc hl 
  717 D1:B1BA 7E -  -  -  	ld a,(hl);color data 
  718 D1:B1BB 32 55 B0 D1 	ld (sdcomp_indexed_color_data_4),a 
  719 D1:B1BF 23 -  -  -  	inc hl 
  720 D1:B1C0 -  -  -  -  	
  721 D1:B1C0 -  -  -  -  sdcomp_3bpc_1_skip:	
  722 D1:B1C0 -  -  -  -  
  723 D1:B1C0 -  -  -  -  	
  724 D1:B1C0 D5 -  -  -  	push de ;loops/line data location
  725 D1:B1C1 EB -  -  -  	ex de,hl
  726 D1:B1C2 78 -  -  -  	ld a,b
  727 D1:B1C3 01 00 00 00 	ld bc,0
  728 D1:B1C7 4F -  -  -  	ld c,a;height 
  729 D1:B1C8 09 -  -  -  	add hl,bc
  730 D1:B1C9 EB -  -  -  	ex de,hl;de points to data write location
  731 D1:B1CA -  -  -  -  	
  732 D1:B1CA -  -  -  -  	
  733 D1:B1CA D9 -  -  -  	exx;in to shadow
  734 D1:B1CB D1 -  -  -  	pop de 
  735 D1:B1CC E1 -  -  -  	pop hl ;alpha data stored from earlier
  736 D1:B1CD 0E 80 -  -  	ld c,%10000000;alpha mask
  737 D1:B1CF D9 -  -  -  	exx;out 
  738 D1:B1D0 0E 80 -  -  	ld c,%10000000;color mask
  739 D1:B1D2 -  -  -  -  	
  740 D1:B1D2 -  -  -  -  	;HL now points to pixel color data 
  741 D1:B1D2 -  -  -  -  	;HL' points to pixel alpha data 
  742 D1:B1D2 -  -  -  -  	;C holds color mask
  743 D1:B1D2 -  -  -  -  	;C' holds alpha mask
  744 D1:B1D2 -  -  -  -  	;DE' holds loops/line output data location
  745 D1:B1D2 -  -  -  -  	;DE holds main data output location
  746 D1:B1D2 -  -  -  -  	;A holds height
  747 D1:B1D2 -  -  -  -  	;A' holds bits remaining in row
  748 D1:B1D2 -  -  -  -  
  749 D1:B1D2 -  -  -  -  
  750 D1:B1D2 37 -  -  -  	scf 
  751 D1:B1D3 -  -  -  -  sdcomp_flip_setup .equ $
  752 D1:B1D3 DA E3 B1 D1 	jp c,sdcomp_find_gap_length;continue if no flip
  753 D1:B1D7 -  -  -  -  
  754 D1:B1D7 -  -  -  -  	
  755 D1:B1D7 2B -  -  -  	dec hl;dec color pointer
  756 D1:B1D8 0E 01 -  -  	ld c, %00000001
  757 D1:B1DA D9 -  -  -  	exx;to shadow 
  758 D1:B1DB 2B -  -  -  	dec hl;dec alpha pointer
  759 D1:B1DC 0E 01 -  -  	ld c, %00000001;alpha mask
  760 D1:B1DE CD A4 B0 D1 	call sdcomp_traverse_initial
  761 D1:B1E2 D9 -  -  -  	exx ;out of shadow 
  762 D1:B1E3 -  -  -  -  	
  763 D1:B1E3 -  -  -  -  	
  764 D1:B1E3 -  -  -  -  
  765 D1:B1E3 -  -  -  -  	;TODO jump to BG routine here
  766 D1:B1E3 -  -  -  -  	;END SETUP ======================================================================================================
  767 D1:B1E3 -  -  -  -  	
  768 D1:B1E3 -  -  -  -  	
  769 D1:B1E3 -  -  -  -  sdcomp_find_gap_length:
  770 D1:B1E3 -  -  -  -  	
  771 D1:B1E3 -  -  -  -  	
  772 D1:B1E3 -  -  -  -  	
  773 D1:B1E3 -  -  -  -  ;If virtual 0 was read as the start of an alpha pair, remove 1 from next gap length 
  774 D1:B1E3 -  -  -  -  ;this will occur if:
  775 D1:B1E3 -  -  -  -  ;Starting pixels are at the end of line, eg :00000001. ldir length = 0 as virtual 0s are read. interline length should be reduced by 1 
  776 D1:B1E3 -  -  -  -  ;
  777 D1:B1E3 -  -  -  -  ;if during ldir search, line data ends in 11, followed by virtual 00. In this case the 11 is the ending pixels if slow sprite, so gap length should not be reduced
  778 D1:B1E3 -  -  -  -  ; This is done from the addition of 1 gap length whenever the 11->00 case occurs, canceling the interline reduction due to reading vitrual 00. 
  779 D1:B1E3 -  -  -  -  	
  780 D1:B1E3 D9 -  -  -  	exx ;to shadow
  781 D1:B1E4 -  -  -  -  	
  782 D1:B1E4 -  -  -  -  sdcomp_add_1_gap_length .equ $ + 1
  783 D1:B1E4 06 00 -  -  	ld b,0;00 pairs found 
  784 D1:B1E6 3E 00 -  -  	ld a,0 ;reset
  785 D1:B1E8 32 E5 B1 D1 	ld (sdcomp_add_1_gap_length),a 
  786 D1:B1EC -  -  -  -  
  787 D1:B1EC -  -  -  -  sdcomp_find_gap_length_loop:
  788 D1:B1EC -  -  -  -  
  789 D1:B1EC 37 -  -  -  	scf 
  790 D1:B1ED -  -  -  -  sdcomp_end_of_line_gaplength .equ $ 
  791 D1:B1ED DA 16 B2 D1 	jp c, sdcomp_end_of_line_gaplength_skip
  792 D1:B1F1 -  -  -  -  	
  793 D1:B1F1 -  -  -  -  	;We have reached the end of the alpha data, add between line gap length 
  794 D1:B1F1 -  -  -  -  sdcomp_gap_btwn_rows .equ $ + 1
  795 D1:B1F1 3E 00 -  -  	ld a,0
  796 D1:B1F3 80 -  -  -  	add a,b 
  797 D1:B1F4 -  -  -  -  sdcomp_dec_gap_btwn_rows .equ $ 	
  798 D1:B1F4 00 -  -  -  	nop ;replace with dec a to decrease gap length 
  799 D1:B1F5 47 -  -  -  	ld b,a 
  800 D1:B1F6 3E 00 -  -  	ld a,%00000000 ;nop 
  801 D1:B1F8 32 F4 B1 D1 	ld (sdcomp_dec_gap_btwn_rows),a ;reset dec gap
  802 D1:B1FC 3E DA -  -  	ld a,%11011010;jp c
  803 D1:B1FE 32 5D AF D1 	ld (sdcomp_end_of_line_alp),a ;Reset virtual zero flag, reading alpha data will now be the next line 
  804 D1:B202 32 ED B1 D1 	ld (sdcomp_end_of_line_gaplength),a ;Reset flag for adding interline gaplength 
  805 D1:B206 -  -  -  -  	
  806 D1:B206 37 -  -  -  	scf
  807 D1:B207 -  -  -  -  sdcomp_flip_traverse .equ $
  808 D1:B207 D4 96 B0 D1 	call nc,sdcomp_traverse_line_data ;call line data traverse if flip
  809 D1:B20B -  -  -  -  		
  810 D1:B20B -  -  -  -  	;Write loops/line data as we have reached a gap btwn lines 
  811 D1:B20B 3A 7B B2 D1 	ld a,(sdcomp_loops_per_line_counter)
  812 D1:B20F 12 -  -  -  	ld (de),a ;write loops/line data 
  813 D1:B210 13 -  -  -  	inc de
  814 D1:B211 -  -  -  -  	
  815 D1:B211 -  -  -  -  	
  816 D1:B211 37 -  -  -  	scf 
  817 D1:B212 -  -  -  -  sdcomp_end_reached_flag .equ $;check if end of sprite reached
  818 D1:B212 D2 E4 B2 D1 	jp nc,sdcomp_end
  819 D1:B216 -  -  -  -  
  820 D1:B216 -  -  -  -  	
  821 D1:B216 -  -  -  -  sdcomp_end_of_line_gaplength_skip:
  822 D1:B216 CD B5 AF D1 	call sdcomp_get_next_alpha_pair
  823 D1:B21A -  -  -  -  	;call write_a_to_ram
  824 D1:B21A 04 -  -  -  	inc b 
  825 D1:B21B -  -  -  -  
  826 D1:B21B -  -  -  -  	;push af ;TEST
  827 D1:B21B -  -  -  -  	;ld a,$AB;TEST
  828 D1:B21B -  -  -  -  	;call write_a_to_ram
  829 D1:B21B -  -  -  -  	
  830 D1:B21B -  -  -  -  	;call write_a_to_ram
  831 D1:B21B -  -  -  -  	;pop af ;TEST
  832 D1:B21B -  -  -  -  	
  833 D1:B21B B7 -  -  -  	or a
  834 D1:B21C CA EC B1 D1 	jp z,sdcomp_find_gap_length_loop
  835 D1:B220 -  -  -  -  	
  836 D1:B220 -  -  -  -  ;END OF GAP LENGTH LOOP =====================	
  837 D1:B220 -  -  -  -  	
  838 D1:B220 F5 -  -  -  	push af; save leading pixel alpha data 
  839 D1:B221 -  -  -  -  	;B holds number of 00 pairs + 1
  840 D1:B221 -  -  -  -  	
  841 D1:B221 -  -  -  -  	;ld a,$AA ;test
  842 D1:B221 -  -  -  -  	;call write_a_to_ram
  843 D1:B221 -  -  -  -  	;ld a,b ;test
  844 D1:B221 -  -  -  -  	;call write_a_to_ram
  845 D1:B221 -  -  -  -  	
  846 D1:B221 -  -  -  -  	
  847 D1:B221 -  -  -  -  	
  848 D1:B221 -  -  -  -  	;Write gap length data to output
  849 D1:B221 78 -  -  -  	ld a,b 
  850 D1:B222 D9 -  -  -  	exx;out of shadow 
  851 D1:B223 12 -  -  -  	ld (de),a;GAP LENGTH 
  852 D1:B224 13 -  -  -  	inc de 
  853 D1:B225 D9 -  -  -  	exx;into shadow 	
  854 D1:B226 -  -  -  -  	
  855 D1:B226 -  -  -  -  	
  856 D1:B226 -  -  -  -  ;LEADING PIXELS ===================================================================================================
  857 D1:B226 F1 -  -  -  	pop af ;a holds leading pixel pair alpha data (FF,0F,F0)
  858 D1:B227 -  -  -  -  	
  859 D1:B227 37 -  -  -  	scf 
  860 D1:B228 -  -  -  -  sdcomp_fast_1 .equ $ 
  861 D1:B228 D2 32 B2 D1 	jp nc, sdcomp_ldir_start 
  862 D1:B22C -  -  -  -  	
  863 D1:B22C D9 -  -  -  	exx;out of shadow
  864 D1:B22D CD F5 B0 D1 	call sdcomp_write_leading_or_end_pixels
  865 D1:B231 D9 -  -  -  	exx;into shadow 
  866 D1:B232 -  -  -  -  	
  867 D1:B232 -  -  -  -  
  868 D1:B232 -  -  -  -  	
  869 D1:B232 -  -  -  -  ;LDIR ==============================================================================================================	
  870 D1:B232 -  -  -  -  	;Count number of 11 pairs for LDIR section
  871 D1:B232 -  -  -  -  	;If end of line reached we know last pixels must be the ending pair
  872 D1:B232 -  -  -  -  	;
  873 D1:B232 -  -  -  -  	
  874 D1:B232 -  -  -  -  	;If ending is 11 -> 00 
  875 D1:B232 -  -  -  -  	;11 pair will need to become ending pixels if slow sprite
  876 D1:B232 -  -  -  -  	;Will need to reduce b by 1 
  877 D1:B232 -  -  -  -  	
  878 D1:B232 -  -  -  -  	;If ending is 11 ->01/10
  879 D1:B232 -  -  -  -  	;last pair wil become ending pixels, dont reduce b 
  880 D1:B232 -  -  -  -  	
  881 D1:B232 -  -  -  -  sdcomp_ldir_start:
  882 D1:B232 -  -  -  -  
  883 D1:B232 -  -  -  -  ;	ld a, %11010010 ;jp nc 
  884 D1:B232 -  -  -  -  ;	ld (sdcomp_end_of_line_2) , a ;reset end of line flag 
  885 D1:B232 -  -  -  -  
  886 D1:B232 06 00 -  -  	ld b,0; will hold number of 11 pairs found
  887 D1:B234 -  -  -  -  sdcomp_ldir_loop:
  888 D1:B234 CD B5 AF D1 	call sdcomp_get_next_alpha_pair ;get alpha data
  889 D1:B238 04 -  -  -  	inc b 
  890 D1:B239 -  -  -  -  	
  891 D1:B239 -  -  -  -  	;push af 
  892 D1:B239 -  -  -  -  	;ld a,$DE 
  893 D1:B239 -  -  -  -  	;call write_a_to_ram
  894 D1:B239 -  -  -  -  	;pop af
  895 D1:B239 -  -  -  -  	;call write_a_to_ram
  896 D1:B239 -  -  -  -  	
  897 D1:B239 -  -  -  -  ;	scf 
  898 D1:B239 -  -  -  -  ;sdcomp_end_of_line_2 .equ $ ;set when end of line reached 
  899 D1:B239 -  -  -  -  ;	jp nc, sdcomp_ldir_loop_end;If read last in line
  900 D1:B239 -  -  -  -  	
  901 D1:B239 EE FF -  -  	xor %11111111 ;flip all bits  (CPL does not set flags :(  )
  902 D1:B23B CA 34 B2 D1 	jp z, sdcomp_ldir_loop; if a is 0 means a was $FF 
  903 D1:B23F 2F -  -  -  	cpl ; flip back 
  904 D1:B240 -  -  -  -  sdcomp_ldir_loop_end:
  905 D1:B240 -  -  -  -  
  906 D1:B240 -  -  -  -  	
  907 D1:B240 -  -  -  -  	;at this point b holds # 11 pairs +1 
  908 D1:B240 37 -  -  -  	scf 
  909 D1:B241 -  -  -  -  sdcomp_fast_2 .equ $ 
  910 D1:B241 D2 5C B2 D1 	jp nc,sdcomp_ldir_write ;jump before dec b because we have read first 11 pair in searching for gaplength 
  911 D1:B245 -  -  -  -  
  912 D1:B245 -  -  -  -  	
  913 D1:B245 -  -  -  -  	
  914 D1:B245 05 -  -  -  	dec b ;b holds # 11 pairs 
  915 D1:B246 CA 6F B2 D1 	jp z,sdcomp_no_ldir;no pairs found,no ldir length
  916 D1:B24A B7 -  -  -  	or a
  917 D1:B24B C2 5C B2 D1 	jp nz,sdcomp_ldir_write;ends not in 00, has single ending pixel
  918 D1:B24F -  -  -  -  	
  919 D1:B24F -  -  -  -  	;ends in 11 -> 00,ending pixels will be 11 if slow sprite. If fast, jump to ldir write here 
  920 D1:B24F -  -  -  -  	
  921 D1:B24F -  -  -  -  	;ld a,$DF
  922 D1:B24F -  -  -  -  	;call write_a_to_ram
  923 D1:B24F -  -  -  -  	
  924 D1:B24F -  -  -  -  	;must add 1 to next gap length, have already read first 00
  925 D1:B24F -  -  -  -  	;for the case with virtual 00, this cancels the decrease in gap length 
  926 D1:B24F 3E 01 -  -  	ld a,1;start w 1 gap len
  927 D1:B251 32 E5 B1 D1 	ld (sdcomp_add_1_gap_length),a 
  928 D1:B255 3E FF -  -  	ld a,$ff;ending pixels 11
  929 D1:B257 -  -  -  -  	
  930 D1:B257 05 -  -  -  	dec b;reduce length by 1, final pair is end pixels
  931 D1:B258 CA 6F B2 D1 	jp z,sdcomp_no_ldir;no ldir length,ending pixels is 11 
  932 D1:B25C -  -  -  -  	;b holds ldir length 
  933 D1:B25C -  -  -  -  	
  934 D1:B25C -  -  -  -  
  935 D1:B25C -  -  -  -  ;b holds ldir length, a holds ending pixels
  936 D1:B25C -  -  -  -  sdcomp_ldir_write:
  937 D1:B25C -  -  -  -  
  938 D1:B25C -  -  -  -  	;b holds 11 pairs found 
  939 D1:B25C -  -  -  -  	
  940 D1:B25C -  -  -  -  	;push af;TEST
  941 D1:B25C -  -  -  -  	;ld a,$DA 
  942 D1:B25C -  -  -  -  	;call write_a_to_ram
  943 D1:B25C -  -  -  -  	;ld a,b 
  944 D1:B25C -  -  -  -  	;call write_a_to_ram
  945 D1:B25C -  -  -  -  	;pop af ;TEST
  946 D1:B25C -  -  -  -  
  947 D1:B25C F5 -  -  -  	push af;save ending pixels
  948 D1:B25D 78 -  -  -  	ld a,b
  949 D1:B25E D9 -  -  -  	exx ;out 
  950 D1:B25F 12 -  -  -  	ld (de),a;write ldir length
  951 D1:B260 13 -  -  -  	inc de 
  952 D1:B261 CD E1 B0 D1 	call sdcomp_write_ldir_data_loop
  953 D1:B265 -  -  -  -  
  954 D1:B265 F1 -  -  -  	pop af;return ending pixels
  955 D1:B266 -  -  -  -  	
  956 D1:B266 37 -  -  -  	scf
  957 D1:B267 -  -  -  -  sdcomp_fast_3 .equ $ 
  958 D1:B267 D2 7A B2 D1 	jp nc,sdcomp_inc_loops_per_line ;skip ending pixels
  959 D1:B26B -  -  -  -  	
  960 D1:B26B C3 76 B2 D1 	jp sdcomp_write_end_pixels
  961 D1:B26F -  -  -  -  sdcomp_no_ldir:;no ldir length, a holds ending pixels,00,10,01,11
  962 D1:B26F -  -  -  -  
  963 D1:B26F -  -  -  -  
  964 D1:B26F -  -  -  -  	;push af ;TEST
  965 D1:B26F -  -  -  -  	;ld a,$DB
  966 D1:B26F -  -  -  -  	;call write_a_to_ram
  967 D1:B26F -  -  -  -  	;pop af ;TEST
  968 D1:B26F -  -  -  -  	;call write_a_to_ram
  969 D1:B26F -  -  -  -  
  970 D1:B26F F5 -  -  -  	push af;save end pixels
  971 D1:B270 -  -  -  -  	
  972 D1:B270 D9 -  -  -  	exx;out of shadow
  973 D1:B271 3E 00 -  -  	ld a,0
  974 D1:B273 12 -  -  -  	ld (de),a ;write 0 as ldir length
  975 D1:B274 13 -  -  -  	inc de 
  976 D1:B275 F1 -  -  -  	pop af;return ending pixels
  977 D1:B276 -  -  -  -  
  978 D1:B276 -  -  -  -  ;WRITE ENDING PIXELS ======================================================================================
  979 D1:B276 -  -  -  -  
  980 D1:B276 -  -  -  -  sdcomp_write_end_pixels:
  981 D1:B276 -  -  -  -  ;not in shadow
  982 D1:B276 -  -  -  -  	
  983 D1:B276 -  -  -  -  	;test
  984 D1:B276 -  -  -  -  	;push af 
  985 D1:B276 -  -  -  -  	;ld a,$E0
  986 D1:B276 -  -  -  -  	;call write_a_to_ram
  987 D1:B276 -  -  -  -  	;pop af 
  988 D1:B276 -  -  -  -  	
  989 D1:B276 -  -  -  -  
  990 D1:B276 CD F5 B0 D1 	call sdcomp_write_leading_or_end_pixels
  991 D1:B27A -  -  -  -  	
  992 D1:B27A -  -  -  -  	
  993 D1:B27A -  -  -  -  ;sdcomp_test_lines_stop .equ $ + 1 
  994 D1:B27A -  -  -  -  	;ld a,2
  995 D1:B27A -  -  -  -  	;dec a 
  996 D1:B27A -  -  -  -  	;jp z,sdcomp_end
  997 D1:B27A -  -  -  -  	;ld (sdcomp_test_lines_stop),a 
  998 D1:B27A -  -  -  -  
  999 D1:B27A -  -  -  -  sdcomp_inc_loops_per_line:	
 1000 D1:B27A -  -  -  -  	;INC LOOP/LINE count
 1001 D1:B27A -  -  -  -  sdcomp_loops_per_line_counter .equ $ + 1
 1002 D1:B27A 3E 00 -  -  	ld a,0;inc number of loops
 1003 D1:B27C 3C -  -  -  	inc a 
 1004 D1:B27D 32 7B B2 D1 	ld (sdcomp_loops_per_line_counter),a
 1005 D1:B281 -  -  -  -  
 1006 D1:B281 -  -  -  -  
 1007 D1:B281 -  -  -  -  	;jp sdcomp_find_gap_length ;TESTING REMOVE
 1008 D1:B281 -  -  -  -  	
 1009 D1:B281 -  -  -  -  	;Check the timer to see if we need to begin rendering next frame 
 1010 D1:B281 -  -  -  -  	;1090 cycles @ 32768hz ~= 1 frame (1/30s)
 1011 D1:B281 -  -  -  -  	;Should stop decompressions at 1000 cycles?
 1012 D1:B281 -  -  -  -  	; = %00000011, 11100000
 1013 D1:B281 -  -  -  -  sdcomp_clock_check_loop:
 1014 D1:B281 3A 01 00 F2 	ld a,($F20001);128hz clock
 1015 D1:B285 FE 03 -  -  	cp %00000011 ;check if reached 3 
 1016 D1:B287 DA E3 B1 D1 	jp c,sdcomp_find_gap_length ;msb <= 2, can continue  
 1017 D1:B28B 3A 00 00 F2 	ld a,($F20000);32768hz clock
 1018 D1:B28F FE E0 -  -  	cp %11100000;check if reached value 
 1019 D1:B291 DA E3 B1 D1 	jp c,sdcomp_find_gap_length ;msb = 3 and lsb < value, can continue
 1020 D1:B295 -  -  -  -  	
 1021 D1:B295 -  -  -  -  	;Past clock threshold, need to stop decompressions
 1022 D1:B295 -  -  -  -  
 1023 D1:B295 -  -  -  -  
 1024 D1:B295 -  -  -  -  	;TODO can prob not need to save (a) register
 1025 D1:B295 -  -  -  -  sdcomp_interrupt:
 1026 D1:B295 -  -  -  -  
 1027 D1:B295 -  -  -  -  
 1028 D1:B295 -  -  -  -  	;not in shadow 
 1029 D1:B295 22 C1 B2 D1 	ld (sdcomp_cont_hl),hl 
 1030 D1:B299 EB -  -  -  	ex de,hl
 1031 D1:B29A 22 C5 B2 D1 	ld (sdcomp_cont_de),hl 
 1032 D1:B29E C5 -  -  -  	push bc
 1033 D1:B29F E1 -  -  -  	pop hl
 1034 D1:B2A0 22 C9 B2 D1 	ld (sdcomp_cont_bc),hl
 1035 D1:B2A4 32 CD B2 D1 	ld (sdcomp_cont_a),a 
 1036 D1:B2A8 D9 -  -  -  	exx 
 1037 D1:B2A9 08 -  -  -  	ex af,af' ;'
 1038 D1:B2AA 22 D1 B2 D1 	ld (sdcomp_cont_hlP),hl 
 1039 D1:B2AE EB -  -  -  	ex de,hl
 1040 D1:B2AF 22 D5 B2 D1 	ld (sdcomp_cont_deP),hl 
 1041 D1:B2B3 C5 -  -  -  	push bc 
 1042 D1:B2B4 E1 -  -  -  	pop hl
 1043 D1:B2B5 22 D9 B2 D1 	ld (sdcomp_cont_bcP),hl
 1044 D1:B2B9 32 DD B2 D1 	ld (sdcomp_cont_aP),a 
 1045 D1:B2BD -  -  -  -  	
 1046 D1:B2BD -  -  -  -  	
 1047 D1:B2BD -  -  -  -  	;ld a, $AA
 1048 D1:B2BD -  -  -  -  	;call write_a_to_ram
 1049 D1:B2BD -  -  -  -  	
 1050 D1:B2BD 3E 01 -  -  	ld a,1 ;Return 1 if interrupted
 1051 D1:B2BF C9 -  -  -  	ret 
 1052 D1:B2C0 -  -  -  -  	
 1053 D1:B2C0 -  -  -  -  sdcomp_continue:
 1054 D1:B2C0 -  -  -  -  	;not in shadow 
 1055 D1:B2C0 -  -  -  -  sdcomp_cont_hl .equ $ + 1
 1056 D1:B2C0 21 00 00 00 	ld hl,0
 1057 D1:B2C4 -  -  -  -  sdcomp_cont_de .equ $ + 1
 1058 D1:B2C4 11 00 00 00 	ld de,0
 1059 D1:B2C8 -  -  -  -  sdcomp_cont_bc .equ $ + 1
 1060 D1:B2C8 01 00 00 00 	ld bc,0
 1061 D1:B2CC -  -  -  -  sdcomp_cont_a .equ $ + 1
 1062 D1:B2CC 3E 00 -  -  	ld a,0
 1063 D1:B2CE D9 -  -  -  	exx 
 1064 D1:B2CF 08 -  -  -  	ex af,af' ;'
 1065 D1:B2D0 -  -  -  -  sdcomp_cont_hlP .equ $ + 1
 1066 D1:B2D0 21 00 00 00 	ld hl,0
 1067 D1:B2D4 -  -  -  -  sdcomp_cont_deP .equ $ + 1
 1068 D1:B2D4 11 00 00 00 	ld de,0
 1069 D1:B2D8 -  -  -  -  sdcomp_cont_bcP .equ $ + 1
 1070 D1:B2D8 01 00 00 00 	ld bc,0
 1071 D1:B2DC -  -  -  -  sdcomp_cont_aP .equ $ + 1
 1072 D1:B2DC 3E 00 -  -  	ld a,0	
 1073 D1:B2DE -  -  -  -  	
 1074 D1:B2DE D9 -  -  -  	exx ;out of shadow 
 1075 D1:B2DF 08 -  -  -  	ex af,af' ;'
 1076 D1:B2E0 -  -  -  -  
 1077 D1:B2E0 C3 E3 B1 D1 	jp sdcomp_find_gap_length
 1078 D1:B2E4 -  -  -  -  
 1079 D1:B2E4 -  -  -  -  	
 1080 D1:B2E4 -  -  -  -  
 1081 D1:B2E4 -  -  -  -  sdcomp_end:
 1082 D1:B2E4 -  -  -  -  	
 1083 D1:B2E4 -  -  -  -  	;ld a,$69
 1084 D1:B2E4 -  -  -  -  	;call write_a_to_ram
 1085 D1:B2E4 -  -  -  -  	
 1086 D1:B2E4 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1087 D1:B2E6 32 12 B2 D1 	ld (sdcomp_end_reached_flag),a 
 1088 D1:B2EA -  -  -  -  	
 1089 D1:B2EA 3E 00 -  -  	ld a,0 ;return 0 if finished decompressing 
 1090 D1:B2EC C9 -  -  -  	ret 
 1091 D1:B2ED -  -  -  -  
 1092 D1:B2ED -  -  -  -  
 1093 D1:B2ED -  -  -  -  ;bit orders
 1094 D1:B2ED -  -  -  -  ;	noflip   flip 
 1095 D1:B2ED -  -  -  -  ;4bpp 3210 	 0123
 1096 D1:B2ED -  -  -  -  ;3bpp 210	 012
 1097 D1:B2ED -  -  -  -  ;2bpp 10	 01
 1098 D1:B2ED -  -  -  -  ;1bpp 0		 0
 1099 D1:B2ED -  -  -  -  
 1100 D1:B2ED -  -  -  -  
 1101 D1:B2ED -  -  -  -  sdcomp_set_0bpc:
 1102 D1:B2ED 3E DA -  -  	ld a,%11011010;jp c
 1103 D1:B2EF 32 FE AF D1 	ld (sdcomp_0bpc),a
 1104 D1:B2F3 -  -  -  -  	
 1105 D1:B2F3 32 A5 B1 D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
 1106 D1:B2F7 32 B0 B1 D1 	ld (sdcomp_3bpc_1),a 
 1107 D1:B2FB -  -  -  -  	
 1108 D1:B2FB 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1109 D1:B2FD 32 9A B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1110 D1:B301 3E 00 -  -  	ld a,%00000000
 1111 D1:B303 32 BF B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1112 D1:B307 C9 -  -  -  	ret 
 1113 D1:B308 -  -  -  -  	
 1114 D1:B308 -  -  -  -  sdcomp_set_1bpc:
 1115 D1:B308 3E D2 -  -  	ld a,%11010010;jp nc
 1116 D1:B30A 32 FE AF D1 	ld (sdcomp_0bpc),a
 1117 D1:B30E 3E DA -  -  	ld a,%11011010;jp c
 1118 D1:B310 32 10 B0 D1 	ld (sdcomp_1bpc),a
 1119 D1:B314 -  -  -  -  	
 1120 D1:B314 32 A5 B1 D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
 1121 D1:B318 32 B0 B1 D1 	ld (sdcomp_3bpc_1),a 
 1122 D1:B31C -  -  -  -  	
 1123 D1:B31C 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1124 D1:B31E 32 9A B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1125 D1:B322 -  -  -  -  	
 1126 D1:B322 -  -  -  -  	
 1127 D1:B322 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1128 D1:B324 32 0E B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1129 D1:B328 -  -  -  -  	
 1130 D1:B328 3E 80 -  -  	ld a,%10000000
 1131 D1:B32A 32 BF B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1132 D1:B32E -  -  -  -  	
 1133 D1:B32E 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1134 D1:B330 32 B8 B0 D1 	ld (sdcomp_traverse_2bpp),a
 1135 D1:B334 32 BA B0 D1 	ld (sdcomp_traverse_3bpp),a
 1136 D1:B338 32 BC B0 D1 	ld (sdcomp_traverse_4bpp),a
 1137 D1:B33C C9 -  -  -  	ret 
 1138 D1:B33D -  -  -  -  
 1139 D1:B33D -  -  -  -  sdcomp_set_2bpc:
 1140 D1:B33D 3E D2 -  -  	ld a,%11010010;jp nc
 1141 D1:B33F 32 FE AF D1 	ld (sdcomp_0bpc),a
 1142 D1:B343 32 10 B0 D1 	ld (sdcomp_1bpc),a
 1143 D1:B347 -  -  -  -  	
 1144 D1:B347 3E DA -  -  	ld a,%11011010;jp c
 1145 D1:B349 32 22 B0 D1 	ld (sdcomp_2bpc),a
 1146 D1:B34D -  -  -  -  	
 1147 D1:B34D 32 B0 B1 D1 	ld (sdcomp_3bpc_1),a ;for setting local pallete data
 1148 D1:B351 -  -  -  -  	
 1149 D1:B351 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1150 D1:B353 32 9A B1 D1 	ld (sdcomp_1bpc_1),a;for setting local pallete data
 1151 D1:B357 32 A5 B1 D1 	ld (sdcomp_2bpc_1),a 
 1152 D1:B35B -  -  -  -  	
 1153 D1:B35B 37 -  -  -  	scf 
 1154 D1:B35C -  -  -  -  sdcomp_flip_2bpc .equ $ 
 1155 D1:B35C D2 6D B3 D1 	jp nc, sdcomp_2bpc_flip
 1156 D1:B360 -  -  -  -  	
 1157 D1:B360 3E CB -  -  	ld a,%11001011 ;set 1,e
 1158 D1:B362 32 0E B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1159 D1:B366 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1160 D1:B368 32 20 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1161 D1:B36C -  -  -  -  	
 1162 D1:B36C C9 -  -  -  	ret 
 1163 D1:B36D -  -  -  -  	
 1164 D1:B36D -  -  -  -  sdcomp_2bpc_flip:
 1165 D1:B36D 3E CB -  -  	ld a,%11001011 ;set 1,e
 1166 D1:B36F 32 20 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1167 D1:B373 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1168 D1:B375 32 0E B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1169 D1:B379 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1170 D1:B37B 32 B8 B0 D1 	ld (sdcomp_traverse_2bpp),a
 1171 D1:B37F -  -  -  -  
 1172 D1:B37F 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1173 D1:B381 32 BA B0 D1 	ld (sdcomp_traverse_3bpp),a
 1174 D1:B385 32 BC B0 D1 	ld (sdcomp_traverse_4bpp),a
 1175 D1:B389 -  -  -  -  	
 1176 D1:B389 3E C0 -  -  	ld a,%11000000
 1177 D1:B38B 32 BF B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1178 D1:B38F C9 -  -  -  	ret 
 1179 D1:B390 -  -  -  -  
 1180 D1:B390 -  -  -  -  
 1181 D1:B390 -  -  -  -  sdcomp_set_3bpc:
 1182 D1:B390 -  -  -  -  	
 1183 D1:B390 3E D2 -  -  	ld a,%11010010;jp nc
 1184 D1:B392 32 FE AF D1 	ld (sdcomp_0bpc),a
 1185 D1:B396 32 10 B0 D1 	ld (sdcomp_1bpc),a
 1186 D1:B39A 32 22 B0 D1 	ld (sdcomp_2bpc),a
 1187 D1:B39E -  -  -  -  	
 1188 D1:B39E 3E DA -  -  	ld a,%11011010;jp c
 1189 D1:B3A0 32 34 B0 D1 	ld (sdcomp_3bpc),a
 1190 D1:B3A4 -  -  -  -  	
 1191 D1:B3A4 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1192 D1:B3A6 32 9A B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1193 D1:B3AA 32 A5 B1 D1 	ld (sdcomp_2bpc_1),a 
 1194 D1:B3AE 32 B0 B1 D1 	ld (sdcomp_3bpc_1),a 
 1195 D1:B3B2 -  -  -  -  	
 1196 D1:B3B2 37 -  -  -  	scf 
 1197 D1:B3B3 -  -  -  -  sdcomp_flip_3bpc .equ $ 
 1198 D1:B3B3 D2 CA B3 D1 	jp nc, sdcomp_3bpc_flip	
 1199 D1:B3B7 -  -  -  -  	
 1200 D1:B3B7 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1201 D1:B3B9 32 0E B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1202 D1:B3BD 3E CB -  -  	ld a,%11001011 ;set 1,e
 1203 D1:B3BF 32 20 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1204 D1:B3C3 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1205 D1:B3C5 32 32 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1206 D1:B3C9 -  -  -  -  	
 1207 D1:B3C9 C9 -  -  -  	ret 
 1208 D1:B3CA -  -  -  -  	
 1209 D1:B3CA -  -  -  -  sdcomp_3bpc_flip:
 1210 D1:B3CA 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1211 D1:B3CC 32 32 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1212 D1:B3D0 3E CB -  -  	ld a,%11001011 ;set 1,e
 1213 D1:B3D2 32 20 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1214 D1:B3D6 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1215 D1:B3D8 32 0E B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1216 D1:B3DC -  -  -  -  	
 1217 D1:B3DC 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1218 D1:B3DE 32 B8 B0 D1 	ld (sdcomp_traverse_2bpp),a 
 1219 D1:B3E2 32 BA B0 D1 	ld (sdcomp_traverse_3bpp),a 
 1220 D1:B3E6 -  -  -  -  	
 1221 D1:B3E6 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1222 D1:B3E8 32 BC B0 D1 	ld (sdcomp_traverse_4bpp),a
 1223 D1:B3EC -  -  -  -  	
 1224 D1:B3EC 3E E0 -  -  	ld a,%11100000
 1225 D1:B3EE 32 BF B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1226 D1:B3F2 -  -  -  -  	
 1227 D1:B3F2 C9 -  -  -  	ret 
 1228 D1:B3F3 -  -  -  -  
 1229 D1:B3F3 -  -  -  -  sdcomp_set_4bpc:
 1230 D1:B3F3 -  -  -  -  
 1231 D1:B3F3 3E D2 -  -  	ld a,%11010010;jp nc
 1232 D1:B3F5 32 FE AF D1 	ld (sdcomp_0bpc),a
 1233 D1:B3F9 32 10 B0 D1 	ld (sdcomp_1bpc),a
 1234 D1:B3FD 32 22 B0 D1 	ld (sdcomp_2bpc),a
 1235 D1:B401 -  -  -  -  
 1236 D1:B401 3E DA -  -  	ld a,%11011010;jp c
 1237 D1:B403 -  -  -  -  
 1238 D1:B403 32 9A B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1239 D1:B407 32 A5 B1 D1 	ld (sdcomp_2bpc_1),a 
 1240 D1:B40B 32 B0 B1 D1 	ld (sdcomp_3bpc_1),a 
 1241 D1:B40F -  -  -  -  	
 1242 D1:B40F 37 -  -  -  	scf 
 1243 D1:B410 -  -  -  -  sdcomp_flip_4bpc .equ $ 
 1244 D1:B410 D2 2D B4 D1 	jp nc, sdcomp_4bpc_flip	
 1245 D1:B414 3E DB -  -  	ld a,%11011011 ;set 3,e
 1246 D1:B416 32 0E B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1247 D1:B41A 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1248 D1:B41C 32 20 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1249 D1:B420 3E CB -  -  	ld a,%11001011 ;set 1,e
 1250 D1:B422 32 32 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1251 D1:B426 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1252 D1:B428 32 44 B0 D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
 1253 D1:B42C C9 -  -  -  	ret 
 1254 D1:B42D -  -  -  -  sdcomp_4bpc_flip:
 1255 D1:B42D 3E DB -  -  	ld a,%11011011 ;set 3,e
 1256 D1:B42F 32 44 B0 D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
 1257 D1:B433 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1258 D1:B435 32 32 B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1259 D1:B439 3E CB -  -  	ld a,%11001011 ;set 1,e
 1260 D1:B43B 32 20 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1261 D1:B43F 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1262 D1:B441 32 0E B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1263 D1:B445 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1264 D1:B447 32 B8 B0 D1 	ld (sdcomp_traverse_2bpp),a 
 1265 D1:B44B 32 BA B0 D1 	ld (sdcomp_traverse_3bpp),a 
 1266 D1:B44F 32 BC B0 D1 	ld (sdcomp_traverse_4bpp),a 
 1267 D1:B453 -  -  -  -  	
 1268 D1:B453 3E F0 -  -  	ld a,%11110000
 1269 D1:B455 32 BF B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1270 D1:B459 -  -  -  -  	
 1271 D1:B459 C9 -  -  -  	ret 
 1272 D1:B45A -  -  -  -  	
 1273 D1:B45A -  -  -  -  	
 1274 D1:B45A -  -  -  -  sdcomp_set_noalpha:
 1275 D1:B45A 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1276 D1:B45C 32 7F AF D1 	ld (sdcomp_no_alpha_1),a 
 1277 D1:B460 3E DA -  -  	ld a,%11011010;jp c
 1278 D1:B462 32 7F B1 D1 	ld (sdcomp_no_alpha_2),a 
 1279 D1:B466 32 B0 B0 D1 	ld (sdcomp_no_alpha_3),a 
 1280 D1:B46A C9 -  -  -  	ret
 1281 D1:B46B -  -  -  -  	
 1282 D1:B46B -  -  -  -  sdcomp_reset_noalpha:
 1283 D1:B46B -  -  -  -  
 1284 D1:B46B 3E DA -  -  	ld a,%11011010;jp c
 1285 D1:B46D 32 7F AF D1 	ld (sdcomp_no_alpha_1),a 
 1286 D1:B471 3E D2 -  -  	ld a, %11010010 ;jp nc
 1287 D1:B473 32 7F B1 D1 	ld (sdcomp_no_alpha_2),a 
 1288 D1:B477 3E CA -  -  	ld a, %11001010 ;jp z
 1289 D1:B479 32 B0 B0 D1 	ld (sdcomp_no_alpha_3),a 
 1290 D1:B47D C9 -  -  -  	ret
 1291 D1:B47E -  -  -  -  
 1292 D1:B47E -  -  -  -  
 1293 D1:B47E -  -  -  -  sdcomp_set_offset:
 1294 D1:B47E 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1295 D1:B480 32 A7 AF D1 	ld (sdcomp_offset_1),a 
 1296 D1:B484 32 6B AF D1 	ld (sdcomp_bit_offset),a 
 1297 D1:B488 3E 04 -  -  	ld a,%00000100 ;inc b 
 1298 D1:B48A 32 67 B1 D1 	ld (sdcomp_offset_2),a 
 1299 D1:B48E -  -  -  -  	
 1300 D1:B48E C9 -  -  -  	ret 
 1301 D1:B48F -  -  -  -  
 1302 D1:B48F -  -  -  -  sdcomp_reset_offset:
 1303 D1:B48F 3E DA -  -  	ld a,%11011010;jp c
 1304 D1:B491 32 A7 AF D1 	ld (sdcomp_offset_1),a 
 1305 D1:B495 32 6B AF D1 	ld (sdcomp_bit_offset),a 
 1306 D1:B499 3E 00 -  -  	ld a,%00000000 ;nop
 1307 D1:B49B 32 67 B1 D1 	ld (sdcomp_offset_2),a 
 1308 D1:B49F C9 -  -  -  	ret 
 1309 D1:B4A0 -  -  -  -  	
 1310 D1:B4A0 -  -  -  -  sdcomp_set_flip:
 1311 D1:B4A0 3E 01 -  -  	ld a, %00000001 ;rlc c 
 1312 D1:B4A2 32 56 AF D1 	ld (sdcomp_flip_bitstream),a
 1313 D1:B4A6 3E 2B -  -  	ld a, %00101011 ;dec hl 
 1314 D1:B4A8 32 58 AF D1 	ld (sdcomp_flip_bitstream_2),a 
 1315 D1:B4AC 3E DC -  -  	ld a, %11011100 ;call c 
 1316 D1:B4AE 32 07 B2 D1 	ld (sdcomp_flip_traverse),a 
 1317 D1:B4B2 -  -  -  -  	
 1318 D1:B4B2 3E DA -  -  	ld a,%11011010;jp c
 1319 D1:B4B4 32 5C B3 D1 	ld (sdcomp_flip_2bpc),a
 1320 D1:B4B8 32 B3 B3 D1 	ld (sdcomp_flip_3bpc),a
 1321 D1:B4BC 32 10 B4 D1 	ld (sdcomp_flip_4bpc),a
 1322 D1:B4C0 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1323 D1:B4C2 32 D3 B1 D1 	ld (sdcomp_flip_setup),a 
 1324 D1:B4C6 -  -  -  -  	
 1325 D1:B4C6 C9 -  -  -  	ret 
 1326 D1:B4C7 -  -  -  -  
 1327 D1:B4C7 -  -  -  -  sdcomp_reset_flip:
 1328 D1:B4C7 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1329 D1:B4C9 32 56 AF D1 	ld (sdcomp_flip_bitstream),a
 1330 D1:B4CD 3E 23 -  -  	ld a, %00100011 ;inc hl 
 1331 D1:B4CF 32 58 AF D1 	ld (sdcomp_flip_bitstream_2),a 
 1332 D1:B4D3 3E D4 -  -  	ld a, %11010100 ;call nc 
 1333 D1:B4D5 32 07 B2 D1 	ld (sdcomp_flip_traverse),a 
 1334 D1:B4D9 -  -  -  -  	
 1335 D1:B4D9 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1336 D1:B4DB 32 5C B3 D1 	ld (sdcomp_flip_2bpc),a
 1337 D1:B4DF 32 B3 B3 D1 	ld (sdcomp_flip_3bpc),a
 1338 D1:B4E3 32 10 B4 D1 	ld (sdcomp_flip_4bpc),a
 1339 D1:B4E7 3E DA -  -  	ld a,%11011010;jp c
 1340 D1:B4E9 32 D3 B1 D1 	ld (sdcomp_flip_setup),a 
 1341 D1:B4ED C9 -  -  -  	ret 
 1342 D1:B4EE -  -  -  -  
 1343 D1:B4EE -  -  -  -  
 1344 D1:B4EE -  -  -  -  sdcomp_set_fast:
 1345 D1:B4EE 3E DA -  -  	ld a,%11011010;jp c
 1346 D1:B4F0 32 28 B2 D1 	ld(sdcomp_fast_1),a 
 1347 D1:B4F4 32 41 B2 D1 	ld(sdcomp_fast_2),a 
 1348 D1:B4F8 32 67 B2 D1 	ld(sdcomp_fast_3),a 
 1349 D1:B4FC -  -  -  -  	
 1350 D1:B4FC C9 -  -  -  	ret 
 1351 D1:B4FD -  -  -  -  
 1352 D1:B4FD -  -  -  -  sdcomp_reset_fast:
 1353 D1:B4FD 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1354 D1:B4FF 32 28 B2 D1 	ld(sdcomp_fast_1),a 
 1355 D1:B503 32 41 B2 D1 	ld(sdcomp_fast_2),a 
 1356 D1:B507 32 67 B2 D1 	ld(sdcomp_fast_3),a 
 1357 D1:B50B -  -  -  -  	
 1358 D1:B50B C9 -  -  -  	ret 
 1359 D1:B50C -  -  -  -  
 1360 D1:B50C -  -  -  -  
 1361 D1:B50C -  -  -  -  
 1362 D1:B50C -  -  -  -  
 1363 D1:B50C -  -  -  -  
 1364 D1:B50C -  -  -  -  
Listing for file "ascent.asm"
  606 D1:B50C -  -  -  -  #include "drawFG.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\drawFG.txt"
    1 D1:B50C -  -  -  -  
    2 D1:B50C -  -  -  -  FGMaxSpriteHeight .equ 120
    3 D1:B50C -  -  -  -  
    4 D1:B50C -  -  -  -  draw_fg_setup:
    5 D1:B50C 3E D2 -  -  	ld a, %11010010 ;jp nc
    6 D1:B50E 32 04 B6 D1 	ld (dfgs_bg_mode_1),a 
    7 D1:B512 32 68 B6 D1 	ld (dfgs_bg_mode_2),a 
    8 D1:B516 -  -  -  -  
    9 D1:B516 2A F4 AB D1 	ld hl,(draw_buffer)
   10 D1:B51A 22 14 B6 D1 	ld (dfgs_vram_top_1),hl
   11 D1:B51E 22 C9 B6 D1 	ld (dfgs_vram_top_2),hl
   12 D1:B522 01 00 96 00 	ld bc,160*240
   13 D1:B526 09 -  -  -  	add hl,bc
   14 D1:B527 22 84 B6 D1 	ld (dfgs_vram_bottom_1),hl 
   15 D1:B52B 22 A4 B6 D1 	ld (dfgs_vram_bottom_2),hl 
   16 D1:B52F 22 30 B7 D1 	ld (dfgs_vram_bottom_3),hl 
   17 D1:B533 22 50 B7 D1 	ld (dfgs_vram_bottom_4),hl 
   18 D1:B537 C9 -  -  -  	ret 
   19 D1:B538 -  -  -  -  
   20 D1:B538 -  -  -  -  
   21 D1:B538 -  -  -  -  draw_fg_setup_2:
   22 D1:B538 01 EF 00 00 	ld bc,239
   23 D1:B53C 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of fg layer
   24 D1:B53D 7D -  -  -  	ld a,l ;lsb cam pos, = line number in middle frame
   25 D1:B53E 32 D2 B5 D1 	ld (dfgs_cam_height_1),a
   26 D1:B542 32 6D B6 D1 	ld (dfgs_cam_height_2),a ;y value in dataframe of uppermost line of viewport
   27 D1:B546 32 01 B7 D1 	ld (dfgs_cam_height_3),a
   28 D1:B54A 32 1B B7 D1 	ld (dfgs_cam_height_4),a	
   29 D1:B54E ED 44 -  -  	neg 
   30 D1:B550 32 09 B6 D1 	ld (dfgs_viewport_to_upper_frame),a ;1 = top line of VP is top line of middle frame
   31 D1:B554 ED 44 -  -  	neg 
   32 D1:B556 D6 EF -  -  	sub 239
   33 D1:B558 32 24 B7 D1 	ld (dfgs_viewport_bottom_y),a
   34 D1:B55C -  -  -  -  	
   35 D1:B55C 01 00 00 00 	ld bc,0
   36 D1:B560 4C -  -  -  	ld c,h;msb ccam pos 
   37 D1:B561 0C -  -  -  	inc c 
   38 D1:B562 -  -  -  -  	
   39 D1:B562 C9 -  -  -  	ret 
   40 D1:B563 -  -  -  -  
   41 D1:B563 -  -  -  -  draw_mg:
   42 D1:B563 -  -  -  -  
   43 D1:B563 CD 0C B5 D1 	call draw_fg_setup
   44 D1:B567 -  -  -  -  	
   45 D1:B567 2A EE AB D1 	ld hl,(cam_pos)
   46 D1:B56B CB 3C -  -  	srl h ;div by 2
   47 D1:B56D CB 1D -  -  	rr l 
   48 D1:B56F -  -  -  -  	
   49 D1:B56F CD 38 B5 D1 	call draw_fg_setup_2
   50 D1:B573 -  -  -  -  
   51 D1:B573 21 F2 CB D1 	ld hl,MG_Data_frame_table
   52 D1:B577 09 -  -  -  	add hl,bc
   53 D1:B578 09 -  -  -  	add hl,bc 
   54 D1:B579 09 -  -  -  	add hl,bc 	
   55 D1:B57A ED 27 -  -  	ld hl,(hl);upper frame 
   56 D1:B57C -  -  -  -  	
   57 D1:B57C CD B9 B5 D1 	call draw_fg_sprites
   58 D1:B580 C9 -  -  -  	ret
   59 D1:B581 -  -  -  -  
   60 D1:B581 -  -  -  -  draw_mg2:
   61 D1:B581 -  -  -  -  
   62 D1:B581 CD 0C B5 D1 	call draw_fg_setup
   63 D1:B585 -  -  -  -  	
   64 D1:B585 2A EE AB D1 	ld hl,(cam_pos)
   65 D1:B589 CB 3C -  -  	srl h ;div by 2
   66 D1:B58B CB 1D -  -  	rr l 
   67 D1:B58D -  -  -  -  	
   68 D1:B58D CD 38 B5 D1 	call draw_fg_setup_2
   69 D1:B591 -  -  -  -  
   70 D1:B591 21 30 CF D1 	ld hl,MG2_Data_frame_table
   71 D1:B595 09 -  -  -  	add hl,bc
   72 D1:B596 09 -  -  -  	add hl,bc 
   73 D1:B597 09 -  -  -  	add hl,bc 	
   74 D1:B598 ED 27 -  -  	ld hl,(hl);upper frame 
   75 D1:B59A -  -  -  -  
   76 D1:B59A CD B9 B5 D1 	call draw_fg_sprites
   77 D1:B59E C9 -  -  -  	ret
   78 D1:B59F -  -  -  -  	
   79 D1:B59F -  -  -  -  
   80 D1:B59F -  -  -  -  draw_fg:
   81 D1:B59F -  -  -  -  
   82 D1:B59F CD 0C B5 D1 	call draw_fg_setup
   83 D1:B5A3 -  -  -  -  	
   84 D1:B5A3 2A EE AB D1 	ld hl,(cam_pos)
   85 D1:B5A7 -  -  -  -  	
   86 D1:B5A7 CD 38 B5 D1 	call draw_fg_setup_2
   87 D1:B5AB -  -  -  -  	
   88 D1:B5AB 21 26 D0 D1 	ld hl,FG_Data_frame_table
   89 D1:B5AF 09 -  -  -  	add hl,bc
   90 D1:B5B0 09 -  -  -  	add hl,bc 
   91 D1:B5B1 09 -  -  -  	add hl,bc 	
   92 D1:B5B2 ED 27 -  -  	ld hl,(hl);upper frame 
   93 D1:B5B4 -  -  -  -  
   94 D1:B5B4 CD B9 B5 D1 	call draw_fg_sprites
   95 D1:B5B8 C9 -  -  -  	ret
   96 D1:B5B9 -  -  -  -  
   97 D1:B5B9 -  -  -  -  
   98 D1:B5B9 -  -  -  -  ; Upper Frame =======================================================================================================
   99 D1:B5B9 -  -  -  -  ; Upper Frame =======================================================================================================
  100 D1:B5B9 -  -  -  -  ;hl = upper frame data
  101 D1:B5B9 -  -  -  -   
  102 D1:B5B9 -  -  -  -  ;load cam height 123,vram top 12 vram bottom 1234
  103 D1:B5B9 -  -  -  -  draw_fg_sprites:
  104 D1:B5B9 -  -  -  -  	;UPPER FRAME, bottom of upper frame is not on screen, bottom of mid frame is on screen bottom of lower is not on screen
  105 D1:B5B9 CD 9A B8 D1 	call sprite_table_from_index
  106 D1:B5BD ED 53 91 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de ;write sprite table ptr to required locations 
  107 D1:B5C2 ED 53 D3 B7 
              D1 -  -  -  	ld (dfgs_sprite_pointers_2),de 
  108 D1:B5C7 ED 53 24 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  109 D1:B5CC -  -  -  -  	
  110 D1:B5CC 11 00 00 00 	ld de,0
  111 D1:B5D0 23 -  -  -  	inc hl;past data table 
  112 D1:B5D1 -  -  -  -  	;hl is number of elements
  113 D1:B5D1 -  -  -  -  	
  114 D1:B5D1 -  -  -  -  	
  115 D1:B5D1 -  -  -  -  	;if cam is far below upper frame, can skip upper frame 
  116 D1:B5D1 -  -  -  -  dfgs_cam_height_1 .equ $ + 1
  117 D1:B5D1 3E 00 -  -  	ld a,0 
  118 D1:B5D3 FE 78 -  -  	cp FGMaxSpriteHeight
  119 D1:B5D5 D2 E7 B5 D1 	jp nc, dfgs_do_upper_loop
  120 D1:B5D9 -  -  -  -  	;cam too low for upper frame sprites to be drawn
  121 D1:B5D9 01 00 00 00 	ld bc,0
  122 D1:B5DD 4E -  -  -  	ld c,(hl) ;bc holds number of elements
  123 D1:B5DE 09 -  -  -  	add hl,bc 
  124 D1:B5DF 09 -  -  -  	add hl,bc 
  125 D1:B5E0 09 -  -  -  	add hl,bc 
  126 D1:B5E1 09 -  -  -  	add hl,bc;hl points to end of current frame data 
  127 D1:B5E2 23 -  -  -  	inc hl;start of next frame
  128 D1:B5E3 C3 33 B6 D1 	jp dfgs_mid_start ;skip upper loop
  129 D1:B5E7 -  -  -  -  	
  130 D1:B5E7 -  -  -  -  	
  131 D1:B5E7 -  -  -  -  dfgs_do_upper_loop:	
  132 D1:B5E7 08 -  -  -  	ex af,af' ;'
  133 D1:B5E8 -  -  -  -  	
  134 D1:B5E8 7E -  -  -  	ld a,(hl);number of elements
  135 D1:B5E9 -  -  -  -  	;TESTING
  136 D1:B5E9 -  -  -  -  	;call write_a_to_ram
  137 D1:B5E9 -  -  -  -  	;call prgmpause
  138 D1:B5E9 -  -  -  -  	;TESTING
  139 D1:B5E9 -  -  -  -  	
  140 D1:B5E9 3C -  -  -  	inc a ;to be decd later
  141 D1:B5EA 08 -  -  -  	ex af,af' ;'
  142 D1:B5EB 23 -  -  -  	inc hl;hl points to first sprite in upper frame  
  143 D1:B5EC -  -  -  -  
  144 D1:B5EC -  -  -  -  dfgs_upper_loop:;Want to check for sprites in upper frame that extend to lower frame 
  145 D1:B5EC -  -  -  -  
  146 D1:B5EC 08 -  -  -  	ex af,af';'
  147 D1:B5ED 3D -  -  -  	dec a ;dec number of elements
  148 D1:B5EE -  -  -  -  	;call write_a_to_ram
  149 D1:B5EE CA 33 B6 D1 	jp z,dfgs_mid_start 
  150 D1:B5F2 08 -  -  -  	ex af,af';'
  151 D1:B5F3 -  -  -  -  
  152 D1:B5F3 7E -  -  -  	ld a,(hl);sprite y value 
  153 D1:B5F4 23 -  -  -  	inc hl ;to height
  154 D1:B5F5 -  -  -  -  	
  155 D1:B5F5 -  -  -  -  	;call write_a_to_ram
  156 D1:B5F5 -  -  -  -  	;call prgmpause
  157 D1:B5F5 CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  158 D1:B5F7 C2 9A B7 D1 	jp nz, dfgs_sg_upper ;goto group loop 
  159 D1:B5FB -  -  -  -  	
  160 D1:B5FB -  -  -  -  	;otherwise single sprite, call draw routine 
  161 D1:B5FB CD 03 B6 D1 	call dfgs_draw_upper_sprite
  162 D1:B5FF -  -  -  -  	
  163 D1:B5FF C3 EC B5 D1 	jp dfgs_upper_loop
  164 D1:B603 -  -  -  -  	
  165 D1:B603 -  -  -  -  
  166 D1:B603 -  -  -  -  ;Can be used for normal sprites and in sprite groups 
  167 D1:B603 -  -  -  -  ;a holds y pos in upper frame, hl pts to sprite height 
  168 D1:B603 -  -  -  -  dfgs_draw_upper_sprite:
  169 D1:B603 -  -  -  -  
  170 D1:B603 37 -  -  -  	scf 
  171 D1:B604 -  -  -  -  dfgs_bg_mode_1 .equ $ 
  172 D1:B604 D2 D9 AD D1 	jp nc, dbgl_draw_upper_sprite ;if bg mode go to bg draw routine
  173 D1:B608 -  -  -  -  
  174 D1:B608 -  -  -  -  
  175 D1:B608 -  -  -  -  dfgs_viewport_to_upper_frame .equ $ + 1
  176 D1:B608 C6 00 -  -  	add a,0 ;a now holds number of lines to skip in current sprite (1 indexed)
  177 D1:B60A -  -  -  -  	;call write_a_to_ram
  178 D1:B60A DA 2F B6 D1 	jp c, dfgs_upper_skip ;if sprite has large y pos, can carry over
  179 D1:B60E BE -  -  -  	cp (hl) ;compare to sprite height 
  180 D1:B60F D2 2F B6 D1 	jp nc, dfgs_upper_skip ;skips drawing too many lines, sprite is not on screen
  181 D1:B613 -  -  -  -  	;a holds number of lines to skip drawing
  182 D1:B613 -  -  -  -  
  183 D1:B613 -  -  -  -  dfgs_vram_top_1 .equ $ + 1 
  184 D1:B613 11 00 00 00 	ld de,0;load top of vram 
  185 D1:B617 E5 -  -  -  	push hl ;save height ptr
  186 D1:B618 CD 77 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  187 D1:B61C -  -  -  -  	
  188 D1:B61C CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  189 D1:B61E CA 2A B6 D1 	jp z,dfgs_upper_fast
  190 D1:B622 CD 1E AF D1 	call draw_slow_sprite_top_cut
  191 D1:B626 C3 2E B6 D1 	jp dfgs_upper_skip_2
  192 D1:B62A -  -  -  -  dfgs_upper_fast:
  193 D1:B62A CD A0 AE D1 	call draw_fast_sprite_top_cut
  194 D1:B62E -  -  -  -  dfgs_upper_skip_2:
  195 D1:B62E E1 -  -  -  	pop hl ;hl holds (height)
  196 D1:B62F -  -  -  -  	
  197 D1:B62F -  -  -  -  
  198 D1:B62F -  -  -  -  dfgs_upper_skip:
  199 D1:B62F -  -  -  -  
  200 D1:B62F 23 -  -  -  	inc hl ;to x
  201 D1:B630 23 -  -  -  	inc hl ;to index 
  202 D1:B631 23 -  -  -  	inc hl;to y 
  203 D1:B632 -  -  -  -  	
  204 D1:B632 C9 -  -  -  	ret ;end of dfgs_draw_upper_sprite
  205 D1:B633 -  -  -  -  	
  206 D1:B633 -  -  -  -  	;ld a,$AA
  207 D1:B633 -  -  -  -  	;call write_a_to_ram
  208 D1:B633 -  -  -  -  	;call prgmpause
  209 D1:B633 -  -  -  -  	
  210 D1:B633 -  -  -  -  
  211 D1:B633 -  -  -  -  ;MIDDLE FRAME ====================================================================================================
  212 D1:B633 -  -  -  -  	
  213 D1:B633 -  -  -  -  dfgs_mid_start:;MIDDLE FRAME, can be top cut, no cut, or bottom cut ===============================================
  214 D1:B633 -  -  -  -  	
  215 D1:B633 -  -  -  -  	;call prgmpause
  216 D1:B633 -  -  -  -  	
  217 D1:B633 CD 9A B8 D1 	call sprite_table_from_index
  218 D1:B637 ED 53 91 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  219 D1:B63C ED 53 1D B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_3),de 
  220 D1:B641 ED 53 24 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  221 D1:B646 11 00 00 00 	ld de,0
  222 D1:B64A 23 -  -  -  	inc hl;past sprite table ptr
  223 D1:B64B 08 -  -  -  	ex af,af' ;'
  224 D1:B64C 7E -  -  -  	ld a,(hl);number of elements
  225 D1:B64D 3C -  -  -  	inc a 
  226 D1:B64E 08 -  -  -  	ex af,af' ;'
  227 D1:B64F -  -  -  -  	
  228 D1:B64F 23 -  -  -  	inc hl ;to first y val 
  229 D1:B650 -  -  -  -  dfgs_mid_loop:
  230 D1:B650 -  -  -  -  	
  231 D1:B650 08 -  -  -  	ex af,af';'
  232 D1:B651 3D -  -  -  	dec a 
  233 D1:B652 CA E8 B6 D1 	jp z,dfgs_lower_start ;check for end of data
  234 D1:B656 -  -  -  -  	
  235 D1:B656 08 -  -  -  	ex af,af';'
  236 D1:B657 -  -  -  -  
  237 D1:B657 -  -  -  -  	;ld a, $AB
  238 D1:B657 -  -  -  -  	;call write_a_to_ram
  239 D1:B657 -  -  -  -  
  240 D1:B657 7E -  -  -  	ld a,(hl);y val of sprite in dataframe
  241 D1:B658 -  -  -  -  	;call write_a_to_ram
  242 D1:B658 23 -  -  -  	inc hl ;to height
  243 D1:B659 -  -  -  -  	
  244 D1:B659 CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  245 D1:B65B C2 E4 B7 D1 	jp nz, dfgs_sg_mid ;goto group loop 
  246 D1:B65F -  -  -  -  	
  247 D1:B65F -  -  -  -  	;otherwise, draw single sprite 
  248 D1:B65F CD 67 B6 D1 	call dfgs_draw_mid_sprite
  249 D1:B663 -  -  -  -  
  250 D1:B663 -  -  -  -  	
  251 D1:B663 C3 50 B6 D1 	jp dfgs_mid_loop
  252 D1:B667 -  -  -  -  	
  253 D1:B667 -  -  -  -  	
  254 D1:B667 -  -  -  -  	
  255 D1:B667 -  -  -  -  	;a = ypos in mid frame, hl pts to height
  256 D1:B667 -  -  -  -  dfgs_draw_mid_sprite:	
  257 D1:B667 -  -  -  -  	
  258 D1:B667 37 -  -  -  	scf 
  259 D1:B668 -  -  -  -  dfgs_bg_mode_2 .equ $ 
  260 D1:B668 D2 ED AD D1 	jp nc, dbgl_draw_lower_sprite ;if bg mode go to bg draw routine
  261 D1:B66C -  -  -  -  
  262 D1:B66C -  -  -  -  	;call write_a_to_ram
  263 D1:B66C -  -  -  -  	
  264 D1:B66C -  -  -  -  dfgs_cam_height_2 .equ $ + 1 ;y value in dataframe of uppermost line of viewport
  265 D1:B66C D6 00 -  -  	sub 0;subtract cam pos
  266 D1:B66E -  -  -  -  	;call write_a_to_ram
  267 D1:B66E -  -  -  -  
  268 D1:B66E CA 76 B6 D1 	jp z, dfgs_mid_sprite_topline ;check case where sprite is on top line of viewport
  269 D1:B672 D2 C3 B6 D1 	jp nc, dfgs_mid_sprite_above ; carried, sprite is above viewport boundary, a holds num lines to skip
  270 D1:B676 -  -  -  -  dfgs_mid_sprite_topline:
  271 D1:B676 -  -  -  -  
  272 D1:B676 -  -  -  -  	;Sprite is below viewport bound, either full or bottom cut 
  273 D1:B676 -  -  -  -  	
  274 D1:B676 -  -  -  -  	;a = sprite y - cam pos 
  275 D1:B676 3D -  -  -  	dec a ;for case where sprite pos = cam pos
  276 D1:B677 C6 F0 -  -  	add a,240 
  277 D1:B679 -  -  -  -  
  278 D1:B679 D2 9F B6 D1 	jp nc, dfgs_mid_skip
  279 D1:B67D -  -  -  -  	;a holds y pos above bottom of vp (0 indexed )
  280 D1:B67D 3C -  -  -  	inc a 
  281 D1:B67E -  -  -  -  	
  282 D1:B67E -  -  -  -  	
  283 D1:B67E -  -  -  -  	
  284 D1:B67E BE -  -  -  	cp (hl) ;compare to sprite height 
  285 D1:B67F DA A3 B6 D1 	jp c, dfgs_mid_bottom_cut ;height > lines to draw, bottom is cut off 
  286 D1:B683 -  -  -  -  	;otherwise, draw full sprite 
  287 D1:B683 -  -  -  -  	
  288 D1:B683 -  -  -  -  dfgs_vram_bottom_1 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  289 D1:B683 11 00 00 00 	ld de,0;load bottom of vram 
  290 D1:B687 E5 -  -  -  	push hl ;save height ptr
  291 D1:B688 CD 77 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  292 D1:B68C -  -  -  -  	
  293 D1:B68C CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  294 D1:B68E CA 9A B6 D1 	jp z,dfgs_mid_full_fast
  295 D1:B692 CD E0 AE D1 	call draw_slow_sprite_full
  296 D1:B696 C3 9E B6 D1 	jp dfgs_mid_skip_1
  297 D1:B69A -  -  -  -  dfgs_mid_full_fast:
  298 D1:B69A CD C6 AE D1 	call draw_fast_sprite_full
  299 D1:B69E -  -  -  -  dfgs_mid_skip_1:
  300 D1:B69E E1 -  -  -  	pop hl ;hl holds (height)
  301 D1:B69F -  -  -  -  	
  302 D1:B69F -  -  -  -  	
  303 D1:B69F -  -  -  -  dfgs_mid_skip:;sprite is entirely above or below cam pos 
  304 D1:B69F 23 -  -  -  	inc hl ;x
  305 D1:B6A0 23 -  -  -  	inc hl ;index 
  306 D1:B6A1 23 -  -  -  	inc hl;to y 
  307 D1:B6A2 -  -  -  -  	
  308 D1:B6A2 -  -  -  -  	
  309 D1:B6A2 -  -  -  -  	
  310 D1:B6A2 C9 -  -  -  	ret
  311 D1:B6A3 -  -  -  -  	
  312 D1:B6A3 -  -  -  -  
  313 D1:B6A3 -  -  -  -  dfgs_mid_bottom_cut:
  314 D1:B6A3 -  -  -  -  dfgs_vram_bottom_2 .equ $ + 1  ;Bottom Cut SPRITE, a = lines above bottom of viewport
  315 D1:B6A3 11 00 00 00 	ld de,0;load bottom of vram 
  316 D1:B6A7 E5 -  -  -  	push hl ;save height ptr
  317 D1:B6A8 CD 77 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  318 D1:B6AC -  -  -  -  	
  319 D1:B6AC CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  320 D1:B6AE CA BA B6 D1 	jp z,dfgs_mid_bcut_fast
  321 D1:B6B2 CD 4B AF D1 	call draw_slow_sprite_bottom_cut
  322 D1:B6B6 C3 BE B6 D1 	jp dfgs_mid_skip_2
  323 D1:B6BA -  -  -  -  dfgs_mid_bcut_fast:
  324 D1:B6BA CD 83 AE D1 	call draw_fast_sprite_bottom_cut
  325 D1:B6BE -  -  -  -  dfgs_mid_skip_2:
  326 D1:B6BE E1 -  -  -  	pop hl ;hl holds (height)
  327 D1:B6BF C3 9F B6 D1 	jp dfgs_mid_skip
  328 D1:B6C3 -  -  -  -  
  329 D1:B6C3 -  -  -  -  dfgs_mid_sprite_above:
  330 D1:B6C3 -  -  -  -  	
  331 D1:B6C3 -  -  -  -  	;a holds lines to skip 
  332 D1:B6C3 BE -  -  -  	cp (hl) ;compare to height
  333 D1:B6C4 D2 9F B6 D1 	jp nc, dfgs_mid_skip ;skip sprite, entirely above viewport
  334 D1:B6C8 -  -  -  -  
  335 D1:B6C8 -  -  -  -  dfgs_vram_top_2 .equ $ + 1
  336 D1:B6C8 11 00 00 00 	ld de,0;top of vram 
  337 D1:B6CC E5 -  -  -  	push hl ;save height ptr
  338 D1:B6CD CD 77 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  339 D1:B6D1 -  -  -  -  	
  340 D1:B6D1 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  341 D1:B6D3 CA DF B6 D1 	jp z,dfgs_mid_tcut_fast
  342 D1:B6D7 CD 1E AF D1 	call draw_slow_sprite_top_cut
  343 D1:B6DB C3 E3 B6 D1 	jp dfgs_mid_skip_3
  344 D1:B6DF -  -  -  -  dfgs_mid_tcut_fast:
  345 D1:B6DF CD A0 AE D1 	call draw_fast_sprite_top_cut
  346 D1:B6E3 -  -  -  -  dfgs_mid_skip_3:
  347 D1:B6E3 E1 -  -  -  	pop hl ;hl holds (height)
  348 D1:B6E4 C3 9F B6 D1 	jp dfgs_mid_skip
  349 D1:B6E8 -  -  -  -  	
  350 D1:B6E8 -  -  -  -  	
  351 D1:B6E8 -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================		
  352 D1:B6E8 -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================	
  353 D1:B6E8 -  -  -  -  dfgs_lower_start:
  354 D1:B6E8 -  -  -  -  	
  355 D1:B6E8 CD 9A B8 D1 	call sprite_table_from_index
  356 D1:B6EC ED 53 91 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  357 D1:B6F1 ED 53 66 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_4),de
  358 D1:B6F6 11 00 00 00 	ld de,0
  359 D1:B6FA 23 -  -  -  	inc hl;past data table 
  360 D1:B6FB -  -  -  -  	
  361 D1:B6FB 08 -  -  -  	ex af,af' ;'
  362 D1:B6FC 7E -  -  -  	ld a,(hl);number of elements
  363 D1:B6FD 3C -  -  -  	inc a 
  364 D1:B6FE 08 -  -  -  	ex af,af' ;'
  365 D1:B6FF 23 -  -  -  	inc hl
  366 D1:B700 -  -  -  -  	
  367 D1:B700 -  -  -  -  
  368 D1:B700 -  -  -  -  dfgs_cam_height_3 .equ $ + 1 
  369 D1:B700 3E 00 -  -  	ld a, 0
  370 D1:B702 D6 EF -  -  	sub 239
  371 D1:B704 D0 -  -  -  	ret nc;if bottom frame is offscreen 
  372 D1:B705 -  -  -  -  
  373 D1:B705 -  -  -  -  	;a holds y value of viewport bottom line in lower frame 
  374 D1:B705 -  -  -  -  	
  375 D1:B705 -  -  -  -  
  376 D1:B705 -  -  -  -  dfgs_lower_loop:
  377 D1:B705 -  -  -  -  
  378 D1:B705 08 -  -  -  	ex af,af';'
  379 D1:B706 3D -  -  -  	dec a 
  380 D1:B707 C8 -  -  -  	ret z
  381 D1:B708 08 -  -  -  	ex af,af';'
  382 D1:B709 -  -  -  -  	
  383 D1:B709 7E -  -  -  	ld a,(hl);y
  384 D1:B70A -  -  -  -  	;call write_a_to_ram
  385 D1:B70A 23 -  -  -  	inc hl ;inc to height
  386 D1:B70B -  -  -  -  	
  387 D1:B70B CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  388 D1:B70D C2 2E B8 D1 	jp nz, dfgs_sg_lower ;goto group loop 
  389 D1:B711 -  -  -  -  	
  390 D1:B711 -  -  -  -  	;otherwise, draw single sprite 
  391 D1:B711 CD 19 B7 D1 	call dfgs_draw_lower_sprite
  392 D1:B715 -  -  -  -  	
  393 D1:B715 C3 05 B7 D1 	jp dfgs_lower_loop
  394 D1:B719 -  -  -  -  
  395 D1:B719 -  -  -  -  	
  396 D1:B719 -  -  -  -  dfgs_draw_lower_sprite: ;a = ypos, hl pts to height
  397 D1:B719 -  -  -  -  	
  398 D1:B719 -  -  -  -  
  399 D1:B719 -  -  -  -  	;call write_a_to_ram
  400 D1:B719 47 -  -  -  	ld b,a ;save
  401 D1:B71A -  -  -  -  dfgs_cam_height_4 .equ $ + 1 
  402 D1:B71A 3E 00 -  -  	ld a, 0 ;check if bottom frame is in VP at all
  403 D1:B71C D6 EF -  -  	sub 239
  404 D1:B71E D2 4B B7 D1 	jp nc,dfgs_lower_skip
  405 D1:B722 78 -  -  -  	ld a,b
  406 D1:B723 -  -  -  -  dfgs_viewport_bottom_y .equ $ + 1
  407 D1:B723 D6 00 -  -  	sub 0;subtract y val of viewport bottom
  408 D1:B725 -  -  -  -  
  409 D1:B725 DA 4B B7 D1 	jp c,dfgs_lower_skip;sprite below screen
  410 D1:B729 -  -  -  -  	
  411 D1:B729 -  -  -  -  	;push af 
  412 D1:B729 -  -  -  -  	;ld a,$A0
  413 D1:B729 -  -  -  -  	;call write_a_to_ram
  414 D1:B729 -  -  -  -  	;pop af
  415 D1:B729 -  -  -  -  	
  416 D1:B729 -  -  -  -  	
  417 D1:B729 3C -  -  -  	inc a
  418 D1:B72A -  -  -  -  	;a holds number of lines to draw 
  419 D1:B72A BE -  -  -  	cp (hl) ;compare to sprite height 
  420 D1:B72B DA 4F B7 D1 	jp c, dfgs_lower_bottom_cut ;bottom is below viewport 
  421 D1:B72F -  -  -  -  	
  422 D1:B72F -  -  -  -  	;draw full sprite 
  423 D1:B72F -  -  -  -  dfgs_vram_bottom_3 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  424 D1:B72F 11 00 00 00 	ld de,0;load bottom of vram 
  425 D1:B733 E5 -  -  -  	push hl ;save height ptr
  426 D1:B734 CD 77 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  427 D1:B738 -  -  -  -  	
  428 D1:B738 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  429 D1:B73A CA 46 B7 D1 	jp z,dfgs_lower_full_fast
  430 D1:B73E CD E0 AE D1 	call draw_slow_sprite_full
  431 D1:B742 C3 4A B7 D1 	jp dfgs_lower_skip_1
  432 D1:B746 -  -  -  -  dfgs_lower_full_fast:
  433 D1:B746 CD C6 AE D1 	call draw_fast_sprite_full
  434 D1:B74A -  -  -  -  dfgs_lower_skip_1:
  435 D1:B74A E1 -  -  -  	pop hl ;hl holds (height)
  436 D1:B74B -  -  -  -  
  437 D1:B74B -  -  -  -  	
  438 D1:B74B -  -  -  -  dfgs_lower_skip:;sprite offscreen
  439 D1:B74B 23 -  -  -  	inc hl ;x 
  440 D1:B74C 23 -  -  -  	inc hl ;index 
  441 D1:B74D 23 -  -  -  	inc hl;to y 
  442 D1:B74E -  -  -  -  	;call write_a_to_ram
  443 D1:B74E -  -  -  -  	;ld a,$AD
  444 D1:B74E -  -  -  -  	;call write_a_to_ram
  445 D1:B74E C9 -  -  -  	ret
  446 D1:B74F -  -  -  -  	
  447 D1:B74F -  -  -  -  dfgs_lower_bottom_cut: 
  448 D1:B74F -  -  -  -  dfgs_vram_bottom_4 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  449 D1:B74F 11 00 00 00 	ld de,0;load bottom of vram 
  450 D1:B753 E5 -  -  -  	push hl ;save height ptr
  451 D1:B754 CD 77 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  452 D1:B758 -  -  -  -  	
  453 D1:B758 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  454 D1:B75A CA 66 B7 D1 	jp z,dfgs_lower_bcut_fast ;even= fast
  455 D1:B75E CD 4B AF D1 	call draw_slow_sprite_bottom_cut
  456 D1:B762 C3 6A B7 D1 	jp dfgs_lower_skip_2
  457 D1:B766 -  -  -  -  dfgs_lower_bcut_fast:
  458 D1:B766 CD 83 AE D1 	call draw_fast_sprite_bottom_cut
  459 D1:B76A -  -  -  -  dfgs_lower_skip_2:
  460 D1:B76A E1 -  -  -  	pop hl ;hl holds (height)
  461 D1:B76B C3 4B B7 D1 	jp dfgs_lower_skip
  462 D1:B76F -  -  -  -  	
  463 D1:B76F -  -  -  -  
  464 D1:B76F -  -  -  -  ;===================================================================================================================
  465 D1:B76F -  -  -  -  ;SPRITE GROUPS =====================================================================================================
  466 D1:B76F -  -  -  -  
  467 D1:B76F -  -  -  -  dfgs_sg_setup:
  468 D1:B76F 23 -  -  -  	inc hl ;hl points to xPos of sprite group 
  469 D1:B770 7E -  -  -  	ld a,(hl)
  470 D1:B771 32 8B B8 D1 	ld (dfgs_sg_x_origin),a 
  471 D1:B775 32 15 AE D1 	ld (dbgl_sg_x_origin),a
  472 D1:B779 -  -  -  -  	;call write_a_to_ram
  473 D1:B779 01 00 00 00 	ld bc,0
  474 D1:B77D 23 -  -  -  	inc hl ; index 
  475 D1:B77E 4E -  -  -  	ld c,(hl) ;sprite group index 
  476 D1:B77F -  -  -  -  
  477 D1:B77F 21 25 FC D1 	ld hl, Sprite_Groups
  478 D1:B783 -  -  -  -  	;ld c,0 ;TESTING
  479 D1:B783 -  -  -  -  
  480 D1:B783 09 -  -  -  	add hl,bc 
  481 D1:B784 09 -  -  -  	add hl,bc 
  482 D1:B785 09 -  -  -  	add hl,bc 
  483 D1:B786 -  -  -  -  	
  484 D1:B786 -  -  -  -  	;hl now points to correct sprite group ptr 
  485 D1:B786 ED 27 -  -  	ld hl, (hl)	
  486 D1:B788 -  -  -  -  	;hl pts to sprite table for this group 
  487 D1:B788 -  -  -  -  
  488 D1:B788 CD 9A B8 D1 	call sprite_table_from_index
  489 D1:B78C ED 53 91 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1), de ;NEed to undo after loop is done 
  490 D1:B791 ED 53 24 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  491 D1:B796 23 -  -  -  	inc hl ;to num sprites 
  492 D1:B797 -  -  -  -  
  493 D1:B797 7E -  -  -  	ld a,(hl) ;num sprites in group
  494 D1:B798 23 -  -  -  	inc hl;first sprite y 
  495 D1:B799 C9 -  -  -  	ret
  496 D1:B79A -  -  -  -  	
  497 D1:B79A -  -  -  -  	;Sprite group in upper frame. a holds y pos of sprite group. HL points to height (unused)
  498 D1:B79A -  -  -  -  dfgs_sg_upper:	
  499 D1:B79A 32 A8 B7 D1 	ld (dfgs_sg_upper_y_origin),a
  500 D1:B79E E5 -  -  -  	push hl ;save frame data location (height ptr)
  501 D1:B79F CD 6F B7 D1 	call dfgs_sg_setup ;returns with a = num sprites
  502 D1:B7A3 -  -  -  -   
  503 D1:B7A3 32 BC B7 D1 	ld (dfgs_sg_upper_count),a 
  504 D1:B7A7 -  -  -  -  	
  505 D1:B7A7 -  -  -  -  dfgs_sg_upper_loop:
  506 D1:B7A7 -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  507 D1:B7A7 -  -  -  -  	;if no carry, sprite is still in upper frame, a holds pos in upper frame 
  508 D1:B7A7 -  -  -  -  	;if carry sprite is entirely in mid frame, a holds y pos in mid frame 
  509 D1:B7A7 -  -  -  -  dfgs_sg_upper_y_origin .equ $ + 1 
  510 D1:B7A7 3E 00 -  -  	ld a, 0
  511 D1:B7A9 96 -  -  -  	sub a,(hl)
  512 D1:B7AA -  -  -  -  	;call write_a_to_ram
  513 D1:B7AA 23 -  -  -  	inc hl ;to height
  514 D1:B7AB D2 B7 B7 D1 	jp nc, dfgs_sg_upper_draw_upper
  515 D1:B7AF -  -  -  -  	
  516 D1:B7AF CD 67 B6 D1 	call dfgs_draw_mid_sprite
  517 D1:B7B3 C3 BB B7 D1 	jp dfgs_sg_upper_continue
  518 D1:B7B7 -  -  -  -  	;otherwise, sprite is entirely in mid frame, a holds y pos in mid frame
  519 D1:B7B7 -  -  -  -  	
  520 D1:B7B7 -  -  -  -  	
  521 D1:B7B7 -  -  -  -  dfgs_sg_upper_draw_upper:
  522 D1:B7B7 CD 03 B6 D1 	call dfgs_draw_upper_sprite
  523 D1:B7BB -  -  -  -  dfgs_sg_upper_continue:
  524 D1:B7BB -  -  -  -  dfgs_sg_upper_count .equ $ + 1
  525 D1:B7BB 3E 00 -  -  	ld a, 0
  526 D1:B7BD 3D -  -  -  	dec a 
  527 D1:B7BE 32 BC B7 D1 	ld (dfgs_sg_upper_count),a 
  528 D1:B7C2 C2 A7 B7 D1 	jp nz, dfgs_sg_upper_loop 
  529 D1:B7C6 -  -  -  -  	;otherwise, end of sprite group 
  530 D1:B7C6 32 8B B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  531 D1:B7CA 32 15 AE D1 	ld (dbgl_sg_x_origin),a
  532 D1:B7CE E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  533 D1:B7CF 23 -  -  -  	inc hl
  534 D1:B7D0 23 -  -  -  	inc hl
  535 D1:B7D1 23 -  -  -  	inc hl ;to y pos of next sprite
  536 D1:B7D2 -  -  -  -  dfgs_sprite_pointers_2 .equ $ + 1
  537 D1:B7D2 11 00 00 00 	ld de, 0
  538 D1:B7D6 ED 53 91 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  539 D1:B7DB ED 53 24 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  540 D1:B7E0 C3 EC B5 D1 	jp dfgs_upper_loop
  541 D1:B7E4 -  -  -  -  	
  542 D1:B7E4 -  -  -  -  
  543 D1:B7E4 -  -  -  -  
  544 D1:B7E4 -  -  -  -  ;SG MID =========================================================================================================
  545 D1:B7E4 -  -  -  -  	;Sprite group in middle frame. a holds y pos of sprite group. HL points to height (unused)
  546 D1:B7E4 -  -  -  -  dfgs_sg_mid:	
  547 D1:B7E4 E5 -  -  -  	push hl
  548 D1:B7E5 32 F2 B7 D1 	ld (dfgs_sg_mid_y_origin),a
  549 D1:B7E9 CD 6F B7 D1 	call dfgs_sg_setup 
  550 D1:B7ED -  -  -  -  	
  551 D1:B7ED 32 06 B8 D1 	ld (dfgs_sg_mid_count),a
  552 D1:B7F1 -  -  -  -  	
  553 D1:B7F1 -  -  -  -  dfgs_sg_mid_loop:
  554 D1:B7F1 -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  555 D1:B7F1 -  -  -  -  	;if no carry, sprite is still in mid frame, a holds pos in mid frame 
  556 D1:B7F1 -  -  -  -  	;if carry sprite is entirely in lower frame, a holds y pos in lower frame 
  557 D1:B7F1 -  -  -  -  dfgs_sg_mid_y_origin .equ $ + 1 
  558 D1:B7F1 3E 00 -  -  	ld a, 0
  559 D1:B7F3 96 -  -  -  	sub a,(hl)
  560 D1:B7F4 23 -  -  -  	inc hl ;to height
  561 D1:B7F5 D2 01 B8 D1 	jp nc, dfgs_sg_mid_draw_mid
  562 D1:B7F9 -  -  -  -  	
  563 D1:B7F9 CD 19 B7 D1 	call dfgs_draw_lower_sprite
  564 D1:B7FD C3 05 B8 D1 	jp dfgs_sg_mid_continue
  565 D1:B801 -  -  -  -  
  566 D1:B801 -  -  -  -  		
  567 D1:B801 -  -  -  -  dfgs_sg_mid_draw_mid:
  568 D1:B801 CD 67 B6 D1 	call dfgs_draw_mid_sprite
  569 D1:B805 -  -  -  -  dfgs_sg_mid_continue:
  570 D1:B805 -  -  -  -  dfgs_sg_mid_count .equ $ + 1
  571 D1:B805 3E 00 -  -  	ld a, 0
  572 D1:B807 3D -  -  -  	dec a 
  573 D1:B808 32 06 B8 D1 	ld (dfgs_sg_mid_count),a 
  574 D1:B80C C2 F1 B7 D1 	jp nz, dfgs_sg_mid_loop 
  575 D1:B810 -  -  -  -  	;otherwise, end of sprite group 
  576 D1:B810 32 8B B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  577 D1:B814 32 15 AE D1 	ld (dbgl_sg_x_origin),a 
  578 D1:B818 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  579 D1:B819 23 -  -  -  	inc hl
  580 D1:B81A 23 -  -  -  	inc hl
  581 D1:B81B 23 -  -  -  	inc hl ;to y pos of next sprite
  582 D1:B81C -  -  -  -  dfgs_sprite_pointers_3 .equ $ + 1
  583 D1:B81C 11 00 00 00 	ld de, 0
  584 D1:B820 ED 53 91 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  585 D1:B825 ED 53 24 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  586 D1:B82A C3 50 B6 D1 	jp dfgs_mid_loop
  587 D1:B82E -  -  -  -  	
  588 D1:B82E -  -  -  -  	
  589 D1:B82E -  -  -  -  ;SG Lower =========================================================================================================
  590 D1:B82E -  -  -  -  	;Sprite group in lower frame. a holds y pos of sprite group. HL points to height (unused)
  591 D1:B82E -  -  -  -  dfgs_sg_lower:	
  592 D1:B82E 32 3C B8 D1 	ld (dfgs_sg_lower_y_origin),a
  593 D1:B832 E5 -  -  -  	push hl
  594 D1:B833 CD 6F B7 D1 	call dfgs_sg_setup 
  595 D1:B837 32 4F B8 D1 	ld (dfgs_sg_lower_count),a
  596 D1:B83B -  -  -  -  	;call write_a_to_ram
  597 D1:B83B -  -  -  -  dfgs_sg_lower_loop:
  598 D1:B83B -  -  -  -  
  599 D1:B83B -  -  -  -  	;call prgmpause
  600 D1:B83B -  -  -  -  
  601 D1:B83B -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  602 D1:B83B -  -  -  -  	;if no carry, sprite is still in lower frame, a holds pos in lower frame 
  603 D1:B83B -  -  -  -  	;if carry sprite is offscreen
  604 D1:B83B -  -  -  -  dfgs_sg_lower_y_origin .equ $ + 1 
  605 D1:B83B 3E 00 -  -  	ld a, 0
  606 D1:B83D 96 -  -  -  	sub a,(hl)
  607 D1:B83E -  -  -  -  	;call write_a_to_ram
  608 D1:B83E 23 -  -  -  	inc hl ;to height
  609 D1:B83F D2 4A B8 D1 	jp nc, dfgs_sg_lower_draw_lower
  610 D1:B843 -  -  -  -  	
  611 D1:B843 23 -  -  -  	inc hl 
  612 D1:B844 23 -  -  -  	inc hl
  613 D1:B845 23 -  -  -  	inc hl 
  614 D1:B846 C3 4E B8 D1 	jp dfgs_sg_lower_continue
  615 D1:B84A -  -  -  -  	;otherwise, sprite is entirely below lower frame, skip
  616 D1:B84A -  -  -  -  	
  617 D1:B84A -  -  -  -  	
  618 D1:B84A -  -  -  -  dfgs_sg_lower_draw_lower:
  619 D1:B84A CD 19 B7 D1 	call dfgs_draw_lower_sprite
  620 D1:B84E -  -  -  -  dfgs_sg_lower_continue:
  621 D1:B84E -  -  -  -  dfgs_sg_lower_count .equ $ + 1
  622 D1:B84E 3E 00 -  -  	ld a, 0
  623 D1:B850 -  -  -  -  	;call write_a_to_ram
  624 D1:B850 3D -  -  -  	dec a 
  625 D1:B851 32 4F B8 D1 	ld (dfgs_sg_lower_count),a 
  626 D1:B855 C2 3B B8 D1 	jp nz, dfgs_sg_lower_loop 
  627 D1:B859 -  -  -  -  	;otherwise, end of sprite group 
  628 D1:B859 32 8B B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  629 D1:B85D 32 15 AE D1 	ld (dbgl_sg_x_origin),a 
  630 D1:B861 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  631 D1:B862 23 -  -  -  	inc hl
  632 D1:B863 23 -  -  -  	inc hl
  633 D1:B864 23 -  -  -  	inc hl ;to y pos of next sprite
  634 D1:B865 -  -  -  -  dfgs_sprite_pointers_4 .equ $ + 1
  635 D1:B865 11 00 00 00 	ld de, 0
  636 D1:B869 ED 53 91 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  637 D1:B86E ED 53 24 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  638 D1:B873 C3 05 B7 D1 	jp dfgs_lower_loop
  639 D1:B877 -  -  -  -  	
  640 D1:B877 -  -  -  -  	
  641 D1:B877 -  -  -  -  	
  642 D1:B877 -  -  -  -  	
  643 D1:B877 -  -  -  -  ;a holds distance from bottom of screen, starting from 1, or for top cut dist above screen = num lines to skip 
  644 D1:B877 -  -  -  -  ;(hl) = height 	
  645 D1:B877 -  -  -  -  ;de = initial vram, top for top cut, otherwise bottom
  646 D1:B877 -  -  -  -  
  647 D1:B877 -  -  -  -  ;Subtracts a lines from de (initial vram pos),
  648 D1:B877 -  -  -  -  ;returns hl = sprite data, de = new vram position
  649 D1:B877 -  -  -  -  dfgs_setup_draw:
  650 D1:B877 23 -  -  -  	inc hl ;x pos 
  651 D1:B878 01 00 00 00 	ld bc,0
  652 D1:B87C 4E -  -  -  	ld c,(hl); x pos
  653 D1:B87D 23 -  -  -  	inc hl;to index
  654 D1:B87E E5 -  -  -  	push hl;save sprite index 
  655 D1:B87F 26 A0 -  -  	ld h,160
  656 D1:B881 6F -  -  -  	ld l,a ;number of lines to subtract 
  657 D1:B882 ED 6C -  -  	mlt hl;subtract from vram
  658 D1:B884 37 -  -  -  	scf 
  659 D1:B885 3F -  -  -  	ccf
  660 D1:B886 EB -  -  -  	ex de,hl;hl holds initial vram pos, de is lines to subtract  
  661 D1:B887 ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  662 D1:B889 09 -  -  -  	add hl,bc;add x pos ;hl now holds sprite draw start pos 
  663 D1:B88A -  -  -  -  dfgs_sg_x_origin .equ $ + 1 ;
  664 D1:B88A 0E 00 -  -  	ld c, 0
  665 D1:B88C 09 -  -  -  	add hl,bc;add sprite group x pos offset (if applicable)
  666 D1:B88D EB -  -  -  	ex de,hl;put in de
  667 D1:B88E E1 -  -  -  	pop hl;back to frame data 
  668 D1:B88F 4E -  -  -  	ld c,(hl);sprite index
  669 D1:B890 -  -  -  -  dfgs_sprite_pointers_1 .equ $ + 1	
  670 D1:B890 21 00 00 00 	ld hl,0 ;load sprite table 
  671 D1:B894 09 -  -  -  	add hl,bc
  672 D1:B895 09 -  -  -  	add hl,bc 
  673 D1:B896 09 -  -  -  	add hl,bc;move to sprite ptr
  674 D1:B897 -  -  -  -  	;call prgmpause
  675 D1:B897 ED 27 -  -  	ld hl,(hl);hl holds sprite data, if even = fast sprite 
  676 D1:B899 -  -  -  -  
  677 D1:B899 C9 -  -  -  	ret
  678 D1:B89A -  -  -  -  
  679 D1:B89A -  -  -  -  	;hl pts to sprite table index, returns de = sprite table ptr
  680 D1:B89A -  -  -  -  	
  681 D1:B89A -  -  -  -  sprite_table_from_index:
  682 D1:B89A E5 -  -  -  	push hl ;save 
  683 D1:B89B 11 00 00 00 	ld de,0
  684 D1:B89F 5E -  -  -  	ld e,(hl) ;e holds table index
  685 D1:B8A0 21 23 DF D1 	ld hl,Sprite_Table_Table
  686 D1:B8A4 19 -  -  -  	add hl,de 
  687 D1:B8A5 19 -  -  -  	add hl,de 
  688 D1:B8A6 19 -  -  -  	add hl,de ;inc to correct table
  689 D1:B8A7 ED 17 -  -  	ld de,(hl)
  690 D1:B8A9 -  -  -  -  	
  691 D1:B8A9 -  -  -  -  
  692 D1:B8A9 -  -  -  -  	
  693 D1:B8A9 -  -  -  -  	;call prgmpause Seems to work
  694 D1:B8A9 -  -  -  -  	
  695 D1:B8A9 E1 -  -  -  	pop hl 
  696 D1:B8AA C9 -  -  -  	ret 
  697 D1:B8AB -  -  -  -  	
  698 D1:B8AB -  -  -  -  
  699 D1:B8AB -  -  -  -  
  700 D1:B8AB -  -  -  -  	
  701 D1:B8AB -  -  -  -  	
  702 D1:B8AB -  -  -  -  	
  703 D1:B8AB -  -  -  -  	
  704 D1:B8AB -  -  -  -  	
  705 D1:B8AB -  -  -  -  	
  706 D1:B8AB -  -  -  -  	
  707 D1:B8AB -  -  -  -  	
  708 D1:B8AB -  -  -  -  	
  709 D1:B8AB -  -  -  -  	
Listing for file "ascent.asm"
  607 D1:B8AB -  -  -  -  #include "SpriteDecompressManager.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\SpriteDecompressManager.txt"
    1 D1:B8AB -  -  -  -  
    2 D1:B8AB -  -  -  -  
    3 D1:B8AB -  -  -  -  decompress_queue_start .equ vram
    4 D1:B8AB -  -  -  -  
    5 D1:B8AB -  -  -  -  decompress_queue_end .equ vram + (7*64) ;Max queue length of 64
    6 D1:B8AB -  -  -  -  
    7 D1:B8AB -  -  -  -  decompress_tail_ptr:
    8 D1:B8AB 06 00 D4 -  	.dl decompress_queue_start + 6  ;points to sprite being currently decompressed (parameters byte)
    9 D1:B8AE -  -  -  -  
   10 D1:B8AE -  -  -  -  decompress_head_ptr: ;points to where next element will be added to queue
   11 D1:B8AE 00 00 D4 -  	.dl decompress_queue_start
   12 D1:B8B1 -  -  -  -  
   13 D1:B8B1 -  -  -  -  ;Decompress queue format
   14 D1:B8B1 -  -  -  -  ; .dl Sprite data ptr, decompress location, parameters (7 = fast, 6 = offset, 5 = flip, 4 =started decompressing 3 = finished decompressing )
   15 D1:B8B1 -  -  -  -  
   16 D1:B8B1 -  -  -  -  setup_decompress_queue: ;clears memory in queue
   17 D1:B8B1 3E FF -  -  	ld a,$FF
   18 D1:B8B3 01 C0 01 00 	ld bc, 7*64
   19 D1:B8B7 21 00 00 D4 	ld hl, decompress_queue_start
   20 D1:B8BB 22 AE B8 D1 	ld (decompress_head_ptr),hl 
   21 D1:B8BF CD E0 10 02 	call _MemSet
   22 D1:B8C3 21 06 00 D4 	ld hl, decompress_queue_start + 6
   23 D1:B8C7 22 AB B8 D1 	ld (decompress_tail_ptr),hl 
   24 D1:B8CB 3E 00 -  -  	ld a,0 
   25 D1:B8CD 32 D6 B9 D1 	ld (last_decompressed_cam_pos),a
   26 D1:B8D1 C9 -  -  -  	ret 
   27 D1:B8D2 -  -  -  -  
   28 D1:B8D2 -  -  -  -  ;bc = sprite data ptr, de = decompress location, a = params
   29 D1:B8D2 -  -  -  -  ;adds sprite to queue
   30 D1:B8D2 -  -  -  -  add_to_decompress_queue:
   31 D1:B8D2 2A AE B8 D1 	ld hl, (decompress_head_ptr)
   32 D1:B8D6 ED 0F -  -  	ld (hl), bc 
   33 D1:B8D8 23 -  -  -  	inc hl
   34 D1:B8D9 23 -  -  -  	inc hl 
   35 D1:B8DA 23 -  -  -  	inc hl 
   36 D1:B8DB -  -  -  -  
   37 D1:B8DB ED 1F -  -  	ld (hl),de
   38 D1:B8DD -  -  -  -  	
   39 D1:B8DD 23 -  -  -  	inc hl 
   40 D1:B8DE 23 -  -  -  	inc hl 
   41 D1:B8DF 23 -  -  -  	inc hl 
   42 D1:B8E0 -  -  -  -  	
   43 D1:B8E0 77 -  -  -  	ld (hl), a 
   44 D1:B8E1 23 -  -  -  	inc hl ;start of next element 
   45 D1:B8E2 -  -  -  -  	
   46 D1:B8E2 E5 -  -  -  	push hl 
   47 D1:B8E3 11 C0 01 D4 	ld de, decompress_queue_end
   48 D1:B8E7 37 -  -  -  	scf
   49 D1:B8E8 3F -  -  -  	ccf
   50 D1:B8E9 ED 52 -  -  	sbc hl,de ;check if we have reached end of queue to wrap around
   51 D1:B8EB E1 -  -  -  	pop hl
   52 D1:B8EC CA F5 B8 D1 	jp z, a2dq_back_to_start
   53 D1:B8F0 -  -  -  -  	
   54 D1:B8F0 22 AE B8 D1 	ld (decompress_head_ptr),hl
   55 D1:B8F4 -  -  -  -  	;ld a,$AB ;testing
   56 D1:B8F4 -  -  -  -  	;call write_a_to_ram
   57 D1:B8F4 C9 -  -  -  	ret
   58 D1:B8F5 -  -  -  -  	
   59 D1:B8F5 -  -  -  -  a2dq_back_to_start:
   60 D1:B8F5 -  -  -  -  	;ld a,$AA ;testing
   61 D1:B8F5 -  -  -  -  	;call write_a_to_ram
   62 D1:B8F5 -  -  -  -  
   63 D1:B8F5 21 00 00 D4 	ld hl,decompress_queue_start
   64 D1:B8F9 22 AE B8 D1 	ld (decompress_head_ptr),hl
   65 D1:B8FD C9 -  -  -  	ret
   66 D1:B8FE -  -  -  -  	
   67 D1:B8FE -  -  -  -  	
   68 D1:B8FE -  -  -  -  
   69 D1:B8FE -  -  -  -  
   70 D1:B8FE -  -  -  -  ;Runs after frame has been rendered. Checks through decompress queue and continues sprite decompressions
   71 D1:B8FE -  -  -  -  	;if has ended, return. at end of queue
   72 D1:B8FE -  -  -  -  	;if not started, begin decompression and set start flag
   73 D1:B8FE -  -  -  -  	;if has started, but not ended, continue decompression 
   74 D1:B8FE -  -  -  -  	;if started and ended, move to next element 
   75 D1:B8FE -  -  -  -  continue_decompressions:
   76 D1:B8FE 2A AB B8 D1 	ld hl, (decompress_tail_ptr)
   77 D1:B902 7E -  -  -  	ld a,(hl) ;decompress params 
   78 D1:B903 CB 5F -  -  	bit 3,a 
   79 D1:B905 C0 -  -  -  	ret nz ;sprite is done decompressing, at end of queue 
   80 D1:B906 -  -  -  -  	
   81 D1:B906 -  -  -  -  	;testing
   82 D1:B906 -  -  -  -  	;push af
   83 D1:B906 -  -  -  -  	;ld a,$55
   84 D1:B906 -  -  -  -  	;call write_a_to_ram
   85 D1:B906 -  -  -  -  	;pop af
   86 D1:B906 -  -  -  -  	
   87 D1:B906 -  -  -  -  	
   88 D1:B906 -  -  -  -  	
   89 D1:B906 -  -  -  -  	
   90 D1:B906 CB 67 -  -  	bit 4,a
   91 D1:B908 CA 44 B9 D1 	jp z, cd_begin_decompression
   92 D1:B90C -  -  -  -  	
   93 D1:B90C -  -  -  -  	;has started,not ended 
   94 D1:B90C CD C0 B2 D1 	call sdcomp_continue 
   95 D1:B910 B7 -  -  -  	or a 
   96 D1:B911 C0 -  -  -  	ret nz ;sprite not yet done decompressing 
   97 D1:B912 -  -  -  -  
   98 D1:B912 -  -  -  -  cd_done_decompressing:
   99 D1:B912 -  -  -  -  	;sprite finished decompressing
  100 D1:B912 2A AB B8 D1 	ld hl, (decompress_tail_ptr)	
  101 D1:B916 CB DE -  -  	set 3,(hl) ;set finished flag
  102 D1:B918 11 07 00 00 	ld de,7 
  103 D1:B91C 19 -  -  -  	add hl,de ;points to next element in queue
  104 D1:B91D -  -  -  -  	
  105 D1:B91D E5 -  -  -  	push hl 
  106 D1:B91E 11 C0 01 D4 	ld de, decompress_queue_end
  107 D1:B922 37 -  -  -  	scf
  108 D1:B923 3F -  -  -  	ccf
  109 D1:B924 ED 52 -  -  	sbc hl,de ;check if need to wrap to start of queue
  110 D1:B926 E1 -  -  -  	pop hl
  111 D1:B927 D2 33 B9 D1 	jp nc, cd_back_to_start
  112 D1:B92B 22 AB B8 D1 	ld (decompress_tail_ptr),hl
  113 D1:B92F C3 FE B8 D1 	jp continue_decompressions ;Move on to next sprite 
  114 D1:B933 -  -  -  -  	
  115 D1:B933 -  -  -  -  cd_back_to_start:
  116 D1:B933 21 00 00 D4 	ld hl,decompress_queue_start
  117 D1:B937 11 06 00 00 	ld de,6 ;tail points to the parameters byte
  118 D1:B93B 19 -  -  -  	add hl,de
  119 D1:B93C 22 AB B8 D1 	ld (decompress_tail_ptr),hl
  120 D1:B940 C3 FE B8 D1 	jp continue_decompressions ;Move on to next sprite 
  121 D1:B944 -  -  -  -  
  122 D1:B944 -  -  -  -  cd_begin_decompression:
  123 D1:B944 -  -  -  -  
  124 D1:B944 -  -  -  -  	;testing
  125 D1:B944 -  -  -  -  	;push af 
  126 D1:B944 -  -  -  -  	;ld a,$AA
  127 D1:B944 -  -  -  -  	;call write_a_to_ram
  128 D1:B944 -  -  -  -  	;pop af
  129 D1:B944 -  -  -  -  	
  130 D1:B944 -  -  -  -  	;setup and begin decompressing
  131 D1:B944 CB E6 -  -  	set 4,(hl) ;set start flag
  132 D1:B946 F5 -  -  -  	push af 
  133 D1:B947 CB 7F -  -  	bit 7,a 
  134 D1:B949 C4 EE B4 D1 	call nz, sdcomp_set_fast
  135 D1:B94D F1 -  -  -  	pop af 
  136 D1:B94E -  -  -  -  	
  137 D1:B94E F5 -  -  -  	push af 
  138 D1:B94F CB 7F -  -  	bit 7,a 
  139 D1:B951 CC FD B4 D1 	call z, sdcomp_reset_fast
  140 D1:B955 F1 -  -  -  	pop af 
  141 D1:B956 -  -  -  -  	
  142 D1:B956 F5 -  -  -  	push af 
  143 D1:B957 CB 77 -  -  	bit 6,a 
  144 D1:B959 C4 7E B4 D1 	call nz, sdcomp_set_offset
  145 D1:B95D F1 -  -  -  	pop af 
  146 D1:B95E -  -  -  -  	
  147 D1:B95E F5 -  -  -  	push af 
  148 D1:B95F CB 77 -  -  	bit 6,a 
  149 D1:B961 CC 8F B4 D1 	call z, sdcomp_reset_offset
  150 D1:B965 F1 -  -  -  	pop af 
  151 D1:B966 -  -  -  -  	
  152 D1:B966 F5 -  -  -  	push af 
  153 D1:B967 CB 6F -  -  	bit 5,a 
  154 D1:B969 C4 A0 B4 D1 	call nz, sdcomp_set_flip
  155 D1:B96D F1 -  -  -  	pop af 
  156 D1:B96E -  -  -  -  	
  157 D1:B96E F5 -  -  -  	push af 
  158 D1:B96F CB 6F -  -  	bit 5,a 
  159 D1:B971 CC C7 B4 D1 	call z, sdcomp_reset_flip
  160 D1:B975 F1 -  -  -  	pop af 
  161 D1:B976 -  -  -  -  	
  162 D1:B976 2A AB B8 D1 	ld hl, (decompress_tail_ptr) ;may be unnessecary
  163 D1:B97A -  -  -  -  	
  164 D1:B97A 2B -  -  -  	dec hl 
  165 D1:B97B 2B -  -  -  	dec hl 
  166 D1:B97C 2B -  -  -  	dec hl 
  167 D1:B97D ED 17 -  -  	ld de,(hl) ;load decompress location
  168 D1:B97F -  -  -  -  
  169 D1:B97F 2B -  -  -  	dec hl 
  170 D1:B980 2B -  -  -  	dec hl 
  171 D1:B981 2B -  -  -  	dec hl 
  172 D1:B982 ED 27 -  -  	ld hl,(hl) ;load sprite data ptr
  173 D1:B984 -  -  -  -  
  174 D1:B984 CD 23 B1 D1 	call sprite_decompress
  175 D1:B988 B7 -  -  -  	or a 
  176 D1:B989 C0 -  -  -  	ret nz ;sprite not yet done decompressing 
  177 D1:B98A C3 12 B9 D1 	jp cd_done_decompressing
  178 D1:B98E -  -  -  -  
  179 D1:B98E -  -  -  -  
  180 D1:B98E -  -  -  -  ;Checks to see if cam has moved to a new frame and decompressions need to be added to queue
  181 D1:B98E -  -  -  -  check_for_decompress_calls:
  182 D1:B98E 3A D6 B9 D1 	ld a, (last_decompressed_cam_pos)
  183 D1:B992 47 -  -  -  	ld b,a ;put last decompressed pos in b
  184 D1:B993 3A EF AB D1 	ld a, (cam_pos + 1) ;Current frame cam is in
  185 D1:B997 32 D6 B9 D1 	ld (last_decompressed_cam_pos),a ;store this frame as the last decompressed frame 
  186 D1:B99B -  -  -  -  	;need to check if cam has moved up or down since last time
  187 D1:B99B B8 -  -  -  	cp a,b 
  188 D1:B99C -  -  -  -  	
  189 D1:B99C -  -  -  -  	
  190 D1:B99C C8 -  -  -  	ret z ;if same, no new things to add to queue 
  191 D1:B99D D2 A9 B9 D1 	jp nc, cfdc_cam_move_up ;camera has moved up since last time 
  192 D1:B9A1 -  -  -  -  	
  193 D1:B9A1 -  -  -  -  	;cam has moved down since last time 
  194 D1:B9A1 21 AE D2 D1 	ld hl, decompress_calls_table_down
  195 D1:B9A5 C3 AD B9 D1 	jp cfdc_add_calls_to_queue
  196 D1:B9A9 -  -  -  -  	
  197 D1:B9A9 -  -  -  -  	
  198 D1:B9A9 -  -  -  -  cfdc_cam_move_up:
  199 D1:B9A9 21 A0 D1 D1 	ld hl, decompress_calls_table_up
  200 D1:B9AD -  -  -  -  
  201 D1:B9AD -  -  -  -  	;a = cam frame, hl = decompress call table (up or down)
  202 D1:B9AD -  -  -  -  cfdc_add_calls_to_queue:
  203 D1:B9AD -  -  -  -  
  204 D1:B9AD -  -  -  -  	;call write_a_to_ram
  205 D1:B9AD -  -  -  -  
  206 D1:B9AD 01 00 00 00 	ld bc,0
  207 D1:B9B1 4F -  -  -  	ld c,a
  208 D1:B9B2 09 -  -  -  	add hl,bc 
  209 D1:B9B3 09 -  -  -  	add hl,bc 
  210 D1:B9B4 09 -  -  -  	add hl,bc 
  211 D1:B9B5 ED 27 -  -  	ld hl,(hl) ;hl now points to correct decompress frame 
  212 D1:B9B7 -  -  -  -  cfdc_direct_add_decompress_frame:
  213 D1:B9B7 -  -  -  -  
  214 D1:B9B7 08 -  -  -  	ex af,af' ;'
  215 D1:B9B8 7E -  -  -  	ld a,(hl) ;a' holds num elements 
  216 D1:B9B9 -  -  -  -  	
  217 D1:B9B9 -  -  -  -  	;call write_a_to_ram
  218 D1:B9B9 -  -  -  -  	
  219 D1:B9B9 -  -  -  -  	;call prgmpause
  220 D1:B9B9 -  -  -  -  	
  221 D1:B9B9 3C -  -  -  	inc a ;to be decd later
  222 D1:B9BA 08 -  -  -  	ex af,af' ;'
  223 D1:B9BB -  -  -  -  	
  224 D1:B9BB 23 -  -  -  	inc hl ;points to first sprite data 
  225 D1:B9BC -  -  -  -  cfdc_add_to_queue_loop:
  226 D1:B9BC 08 -  -  -  	ex af,af' ;'
  227 D1:B9BD -  -  -  -  	;call write_a_to_ram
  228 D1:B9BD 3D -  -  -  	dec a ;account for cases where frame has 0 elements 
  229 D1:B9BE C8 -  -  -  	ret z
  230 D1:B9BF 08 -  -  -  	ex af,af' ;'
  231 D1:B9C0 ED 07 -  -  	ld bc ,(hl) ;load sprite data 
  232 D1:B9C2 23 -  -  -  	inc hl 
  233 D1:B9C3 23 -  -  -  	inc hl
  234 D1:B9C4 23 -  -  -  	inc hl 
  235 D1:B9C5 ED 17 -  -  	ld de,(hl) ;load decomp location 
  236 D1:B9C7 23 -  -  -  	inc hl 
  237 D1:B9C8 23 -  -  -  	inc hl
  238 D1:B9C9 23 -  -  -  	inc hl 
  239 D1:B9CA 7E -  -  -  	ld a,(hl) ;ld params
  240 D1:B9CB 23 -  -  -  	inc hl 
  241 D1:B9CC E5 -  -  -  	push hl
  242 D1:B9CD CD D2 B8 D1 	call add_to_decompress_queue
  243 D1:B9D1 E1 -  -  -  	pop hl
  244 D1:B9D2 C3 BC B9 D1 	jp cfdc_add_to_queue_loop
  245 D1:B9D6 -  -  -  -  	
  246 D1:B9D6 -  -  -  -  	
  247 D1:B9D6 -  -  -  -  
  248 D1:B9D6 -  -  -  -  
  249 D1:B9D6 -  -  -  -  last_decompressed_cam_pos:
  250 D1:B9D6 00 -  -  -  	.db 0 ;camera frame last time checking for decomp was called 
  251 D1:B9D7 -  -  -  -  	
  252 D1:B9D7 -  -  -  -  	
  253 D1:B9D7 -  -  -  -  
  254 D1:B9D7 -  -  -  -  
  255 D1:B9D7 -  -  -  -  
  256 D1:B9D7 -  -  -  -  
  257 D1:B9D7 -  -  -  -  
  258 D1:B9D7 -  -  -  -  
  259 D1:B9D7 -  -  -  -  
  260 D1:B9D7 -  -  -  -  
  261 D1:B9D7 -  -  -  -  
  262 D1:B9D7 -  -  -  -  
  263 D1:B9D7 -  -  -  -  
  264 D1:B9D7 -  -  -  -  
  265 D1:B9D7 -  -  -  -  
  266 D1:B9D7 -  -  -  -  
  267 D1:B9D7 -  -  -  -  
  268 D1:B9D7 -  -  -  -  
  269 D1:B9D7 -  -  -  -  
  270 D1:B9D7 -  -  -  -  
  271 D1:B9D7 -  -  -  -  
  272 D1:B9D7 -  -  -  -  
  273 D1:B9D7 -  -  -  -  
  274 D1:B9D7 -  -  -  -  
  275 D1:B9D7 -  -  -  -  
  276 D1:B9D7 -  -  -  -  
  277 D1:B9D7 -  -  -  -  
Listing for file "ascent.asm"
  608 D1:B9D7 -  -  -  -  #include "getInputs.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\getInputs.txt"
    1 D1:B9D7 -  -  -  -  
    2 D1:B9D7 -  -  -  -  
    3 D1:B9D7 -  -  -  -  
    4 D1:B9D7 -  -  -  -  get_inputs:
    5 D1:B9D7 21 00 00 F5 	ld	hl,DI_Mode		; register for keypad mode
    6 D1:B9DB 36 02 -  -  	ld	(hl),2			; set single scan mode
    7 D1:B9DD -  -  -  -  
    8 D1:B9DD AF -  -  -  	xor	a,a
    9 D1:B9DE -  -  -  -  scan_wait:
   10 D1:B9DE BE -  -  -  	cp	a,(hl)			; wait for keypad idle mode
   11 D1:B9DF 20 FD -  -  	jr	nz,scan_wait
   12 D1:B9E1 -  -  -  -  	
   13 D1:B9E1 -  -  -  -  	; https://wikiti.brandonw.net/index.php?title=84PCE:Ports:A000
   14 D1:B9E1 -  -  -  -  	
   15 D1:B9E1 3E 00 -  -  	ld a,0
   16 D1:B9E3 32 FF BF D1 	ld (player_flags+1),a ;clear cam moove flags
   17 D1:B9E7 -  -  -  -  	
   18 D1:B9E7 3A 1E 00 F5 	ld	a,(kbdG7) ; $F5001E
   19 D1:B9EB CB 5F -  -   	bit	kbitUp,a
   20 D1:B9ED F5 -  -  -  	push af 
   21 D1:B9EE C4 25 BA D1 	call nz, input_cam_up
   22 D1:B9F2 F1 -  -  -  	pop af 
   23 D1:B9F3 -  -  -  -  	
   24 D1:B9F3 CB 47 -  -  	bit	kbitDown,a
   25 D1:B9F5 C4 30 BA D1 	call nz, input_cam_down
   26 D1:B9F9 -  -  -  -  
   27 D1:B9F9 -  -  -  -  
   28 D1:B9F9 3A 1C 00 F5 	ld a,(kbdG6)
   29 D1:B9FD CB 77 -  -  	bit kbitClear,a
   30 D1:B9FF C2 81 AB D1 	jp nz,exit_prgm
   31 D1:BA03 -  -  -  -  	
   32 D1:BA03 3A 18 00 F5 	ld a,(kbdG4)
   33 D1:BA07 CB 57 -  -  	bit kbit5,a 
   34 D1:BA09 C4 83 BA D1 	call nz, try_tongue
   35 D1:BA0D -  -  -  -  	
   36 D1:BA0D 3A 1A 00 F5 	ld a,(kbdG5)
   37 D1:BA11 CB 57 -  -  	bit kbit6,a 
   38 D1:BA13 C4 63 BA D1 	call nz, charge_jump_right
   39 D1:BA17 -  -  -  -  	
   40 D1:BA17 3A 16 00 F5 	ld a,(kbdG3)
   41 D1:BA1B CB 57 -  -  	bit kbit4,a 
   42 D1:BA1D C4 3B BA D1 	call nz, charge_jump_left
   43 D1:BA21 -  -  -  -  	
   44 D1:BA21 -  -  -  -  
   45 D1:BA21 C3 29 A9 D1 	jp get_inputs_return
   46 D1:BA25 -  -  -  -  	
   47 D1:BA25 -  -  -  -  	
   48 D1:BA25 -  -  -  -  input_cam_up:
   49 D1:BA25 -  -  -  -  	;set flag for cam move up 
   50 D1:BA25 3A FF BF D1 	ld a,(player_flags + 1)
   51 D1:BA29 CB FF -  -  	set 7,a 
   52 D1:BA2B 32 FF BF D1 	ld (player_flags + 1),a 
   53 D1:BA2F C9 -  -  -  	ret
   54 D1:BA30 -  -  -  -  
   55 D1:BA30 -  -  -  -  input_cam_down:
   56 D1:BA30 -  -  -  -  	;set flag for cam move up 
   57 D1:BA30 3A FF BF D1 	ld a,(player_flags + 1)
   58 D1:BA34 CB F7 -  -  	set 6,a 
   59 D1:BA36 32 FF BF D1 	ld (player_flags + 1),a 
   60 D1:BA3A C9 -  -  -  	ret
   61 D1:BA3B -  -  -  -  	
   62 D1:BA3B -  -  -  -  	
   63 D1:BA3B -  -  -  -  	
Listing for file "ascent.asm"
  609 D1:BA3B -  -  -  -  #include "PlayerController.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\PlayerController.txt"
    1 D1:BA3B -  -  -  -  
    2 D1:BA3B -  -  -  -  
    3 D1:BA3B -  -  -  -  
    4 D1:BA3B -  -  -  -  charge_jump_left:
    5 D1:BA3B -  -  -  -  	;Decrease jump right strength
    6 D1:BA3B -  -  -  -  	;Increase jump up strength 
    7 D1:BA3B -  -  -  -  	;Do nothing if jump left timer is above max value 
    8 D1:BA3B 3A FE BF D1 	ld a,(player_flags)
    9 D1:BA3F CB FF -  -  	set 7, a 
   10 D1:BA41 32 FE BF D1 	ld (player_flags),a 
   11 D1:BA45 3A E4 BF D1 	ld a,(jump_charge_timer)
   12 D1:BA49 FE 20 -  -  	cp timer_max_val
   13 D1:BA4B D0 -  -  -  	ret nc
   14 D1:BA4C 3A E3 BF D1 	ld a,(jump_strength_left)
   15 D1:BA50 06 04 -  -  	ld b,4
   16 D1:BA52 80 -  -  -  	add a,b 
   17 D1:BA53 32 E3 BF D1 	ld (jump_strength_left),a
   18 D1:BA57 -  -  -  -  jump_add_up_strength:
   19 D1:BA57 3A E1 BF D1 	ld a,(jump_strength_up)
   20 D1:BA5B 3C -  -  -  	inc a 
   21 D1:BA5C 3C -  -  -  	inc a 
   22 D1:BA5D 3C -  -  -  	inc a 
   23 D1:BA5E 32 E1 BF D1 	ld (jump_strength_up),a
   24 D1:BA62 C9 -  -  -  	ret
   25 D1:BA63 -  -  -  -  
   26 D1:BA63 -  -  -  -  
   27 D1:BA63 -  -  -  -  charge_jump_right:
   28 D1:BA63 -  -  -  -  	;Increase jump right strength 
   29 D1:BA63 -  -  -  -  	;Increase jump up strength 
   30 D1:BA63 -  -  -  -  	;Do nothing if jump  timer is above max value 
   31 D1:BA63 3A FE BF D1 	ld a,(player_flags)
   32 D1:BA67 CB FF -  -  	set 7, a 
   33 D1:BA69 32 FE BF D1 	ld (player_flags),a 
   34 D1:BA6D 3A E4 BF D1 	ld a,(jump_charge_timer)
   35 D1:BA71 FE 20 -  -  	cp timer_max_val
   36 D1:BA73 D0 -  -  -  	ret nc
   37 D1:BA74 3A E2 BF D1 	ld a,(jump_strength_right)
   38 D1:BA78 06 04 -  -  	ld b,4
   39 D1:BA7A 80 -  -  -  	add a,b 
   40 D1:BA7B 32 E2 BF D1 	ld (jump_strength_right),a
   41 D1:BA7F C3 57 BA D1 	jp jump_add_up_strength
   42 D1:BA83 -  -  -  -  
   43 D1:BA83 -  -  -  -  
   44 D1:BA83 -  -  -  -  try_tongue: ;called from getinput
   45 D1:BA83 -  -  -  -  
   46 D1:BA83 -  -  -  -  	;check if player in air 
   47 D1:BA83 3A FE BF D1 	ld a,(player_flags)
   48 D1:BA87 CB 77 -  -  	bit 6,a ;on ground flag 
   49 D1:BA89 C0 -  -  -  	ret nz 
   50 D1:BA8A CB 57 -  -  	bit 2,a 
   51 D1:BA8C C0 -  -  -  	ret nz ;already in tongue state
   52 D1:BA8D CB 5F -  -  	bit 3,a 
   53 D1:BA8F C0 -  -  -  	ret nz ;falling
   54 D1:BA90 -  -  -  -  	;ld a,$A0
   55 D1:BA90 -  -  -  -  	;call write_a_to_ram
   56 D1:BA90 -  -  -  -  
   57 D1:BA90 11 00 00 00 	ld de,0 
   58 D1:BA94 01 00 00 00 	ld bc,0
   59 D1:BA98 21 00 00 00 	ld hl,0
   60 D1:BA9C 3A EA BF D1 	ld a, (player_y_pos + 2) ;player y frame 
   61 D1:BAA0 67 -  -  -  	ld h,a 
   62 D1:BAA1 3A E9 BF D1 	ld a, (player_y_pos + 1);player y pixel 
   63 D1:BAA5 6F -  -  -  	ld l,a
   64 D1:BAA6 2B -  -  -  	dec hl ;Offset y pos to mouth origin
   65 D1:BAA7 2B -  -  -  	dec hl 
   66 D1:BAA8 2B -  -  -  	dec hl 
   67 D1:BAA9 2B -  -  -  	dec hl 
   68 D1:BAAA 2B -  -  -  	dec hl 
   69 D1:BAAB 2B -  -  -  	dec hl 
   70 D1:BAAC 2B -  -  -  	dec hl ;hl holds y poos of mouth
   71 D1:BAAD -  -  -  -  	
   72 D1:BAAD 11 C8 04 D2 	ld de, Tongue_Rings
   73 D1:BAB1 08 -  -  -  	ex af,af' ;'
   74 D1:BAB2 1A -  -  -  	ld a,(de) ; a' is counter 
   75 D1:BAB3 -  -  -  -  	;call write_a_to_ram
   76 D1:BAB3 13 -  -  -  	inc de ;to first element 
   77 D1:BAB4 -  -  -  -  try_tongue_loop:
   78 D1:BAB4 08 -  -  -  	ex af,af' ;' 
   79 D1:BAB5 -  -  -  -  	;hl holds player y ,de holds data
   80 D1:BAB5 1A -  -  -  	ld a ,(de)
   81 D1:BAB6 47 -  -  -  	ld b,a ;frame num 
   82 D1:BAB7 13 -  -  -  	inc de
   83 D1:BAB8 1A -  -  -  	ld a,(de)
   84 D1:BAB9 13 -  -  -  	inc de
   85 D1:BABA 4F -  -  -  	ld c,a ;pixel
   86 D1:BABB -  -  -  -  	;call write_a_to_ram
   87 D1:BABB E5 -  -  -  	push hl ;hl holds player y 
   88 D1:BABC -  -  -  -  	;call write_hl_to_ram
   89 D1:BABC C5 -  -  -  	push bc ;bc holds ring y 
   90 D1:BABD 37 -  -  -  	scf 
   91 D1:BABE 3F -  -  -  	ccf 
   92 D1:BABF ED 42 -  -  	sbc hl,bc ;compare to ring y 
   93 D1:BAC1 D2 14 BB D1 	jp nc, tongue_loop_continue ;ring below player 
   94 D1:BAC5 -  -  -  -  	;call write_hl_to_ram
   95 D1:BAC5 -  -  -  -  	;otherwise ring above player, hl holds -dist 
   96 D1:BAC5 01 0A 00 00 	ld bc,10 ; min dist threshold 
   97 D1:BAC9 09 -  -  -  	add hl,bc 
   98 D1:BACA DA 14 BB D1 	jp c, tongue_loop_continue ; ring less than min dist above player 
   99 D1:BACE 01 5A 00 00 	ld bc,tongue_max_length ;ring max dist threshold - min dist threshold
  100 D1:BAD2 09 -  -  -  	add hl,bc 
  101 D1:BAD3 D2 14 BB D1 	jp nc,tongue_loop_continue ;ring above max distance threshold
  102 D1:BAD7 -  -  -  -  	;jp nc,test_1	
  103 D1:BAD7 -  -  -  -  	
  104 D1:BAD7 -  -  -  -  	;Ring has valid y pos 
  105 D1:BAD7 E1 -  -  -  	pop hl ;ring y 
  106 D1:BAD8 22 FA BF D1 	ld (tongue_ring_y_pos),hl
  107 D1:BADC C1 -  -  -  	pop bc ;player y  
  108 D1:BADD C5 -  -  -  	push bc
  109 D1:BADE 37 -  -  -  	scf 
  110 D1:BADF 3F -  -  -  	ccf 
  111 D1:BAE0 ED 42 -  -  	sbc hl,bc ;hl holds distance ring is above player  
  112 D1:BAE2 -  -  -  -  	;ld a,$AA
  113 D1:BAE2 -  -  -  -  	;call write_a_to_ram
  114 D1:BAE2 1A -  -  -  	ld a,(de) ;ring x pos 
  115 D1:BAE3 -  -  -  -  	;call write_a_to_ram
  116 D1:BAE3 4F -  -  -  	ld c,a 
  117 D1:BAE4 32 FD BF D1 	ld (tongue_ring_x_pos),a 
  118 D1:BAE8 CD D3 BF D1 	call player_x_half ;a holds player x in pairs  (destroys b)
  119 D1:BAEC -  -  -  -  	;call write_a_to_ram
  120 D1:BAEC 06 03 -  -  	ld b,3;x offset from collider to center of player collider
  121 D1:BAEE 80 -  -  -  	add a,b 
  122 D1:BAEF 91 -  -  -  	sub a,c ;player x - ring x 
  123 D1:BAF0 -  -  -  -  	;call write_a_to_ram
  124 D1:BAF0 D2 F6 BA D1 	jp nc, tongue_ring_to_left
  125 D1:BAF4 ED 44 -  -  	neg 
  126 D1:BAF6 -  -  -  -  tongue_ring_to_left:
  127 D1:BAF6 -  -  -  -  	;player sprite will be flipped 
  128 D1:BAF6 -  -  -  -  	;a holds abs(xdistance) to ring in pair pixels 
  129 D1:BAF6 -  -  -  -  	; l holds y dist in single px
  130 D1:BAF6 FE 1E -  -  	cp 30
  131 D1:BAF8 D2 16 BB D1 	jp nc,tongue_loop_continue_2 ;x dist > 20
  132 D1:BAFC 2D -  -  -  	dec l ;safety factor
  133 D1:BAFD 95 -  -  -  	sub a,l
  134 D1:BAFE -  -  -  -  	;call write_a_to_ram
  135 D1:BAFE D2 16 BB D1 	jp nc, tongue_loop_continue_2 ;x dist > y dist 
  136 D1:BB02 -  -  -  -  	;jp nc, test_2
  137 D1:BB02 -  -  -  -  	;Valid ring found 
  138 D1:BB02 -  -  -  -  	
  139 D1:BB02 -  -  -  -  	;call prgmpause;
  140 D1:BB02 -  -  -  -  	
  141 D1:BB02 E1 -  -  -  	pop hl ;player y 
  142 D1:BB03 3A FE BF D1 	ld a,(player_flags)
  143 D1:BB07 CB D7 -  -  	set 2,a 
  144 D1:BB09 32 FE BF D1 	ld (player_flags),a 
  145 D1:BB0D 3E 00 -  -  	ld a,0 
  146 D1:BB0F 32 04 C0 D1 	ld (tongue_extend_timer),a
  147 D1:BB13 -  -  -  -  	;call write_a_to_ram
  148 D1:BB13 -  -  -  -  	;ld a,$AA
  149 D1:BB13 -  -  -  -  	;call write_a_to_ram
  150 D1:BB13 C9 -  -  -  	ret 
  151 D1:BB14 -  -  -  -  
  152 D1:BB14 -  -  -  -  
  153 D1:BB14 -  -  -  -  tongue_loop_continue:
  154 D1:BB14 C1 -  -  -  	pop bc ;ring y 
  155 D1:BB15 13 -  -  -  	inc de ;to next
  156 D1:BB16 -  -  -  -  tongue_loop_continue_2:
  157 D1:BB16 E1 -  -  -  	pop hl ;player y
  158 D1:BB17 08 -  -  -  	ex af,af' ;' 
  159 D1:BB18 3D -  -  -  	dec a 
  160 D1:BB19 C2 B4 BA D1 	jp nz,try_tongue_loop
  161 D1:BB1D -  -  -  -  	
  162 D1:BB1D C9 -  -  -  	ret 
  163 D1:BB1E -  -  -  -  
  164 D1:BB1E -  -  -  -  
  165 D1:BB1E -  -  -  -  
  166 D1:BB1E -  -  -  -  
  167 D1:BB1E -  -  -  -  player_update: ;Should be called after inputs
  168 D1:BB1E -  -  -  -  
  169 D1:BB1E 3A FE BF D1 	ld a,(player_flags)
  170 D1:BB22 CB 57 -  -  	bit 2,a ;tongue flag 
  171 D1:BB24 C2 3B BB D1 	jp nz, pu_tongue_update	
  172 D1:BB28 CB 7F -  -  	bit 7,a ;jump key  flag 
  173 D1:BB2A CA DF BB D1 	jp z, pu_try_jump
  174 D1:BB2E -  -  -  -  	
  175 D1:BB2E -  -  -  -  	;Jump key is held, charge jump
  176 D1:BB2E 3A E4 BF D1 	ld a,(jump_charge_timer)
  177 D1:BB32 3C -  -  -  	inc a 
  178 D1:BB33 32 E4 BF D1 	ld (jump_charge_timer),a
  179 D1:BB37 -  -  -  -  	;Jumps can be charged in air, for immediate jump
  180 D1:BB37 -  -  -  -  	
  181 D1:BB37 C3 3C BC D1 	jp pu_physics
  182 D1:BB3B -  -  -  -  
  183 D1:BB3B -  -  -  -  pu_tongue_update:
  184 D1:BB3B -  -  -  -  	
  185 D1:BB3B -  -  -  -  	;ld a,$AB
  186 D1:BB3B -  -  -  -  	;call write_a_to_ram
  187 D1:BB3B -  -  -  -  	
  188 D1:BB3B -  -  -  -  	;compute y dist to ring, and angle to check cancel 
  189 D1:BB3B CD 7A C5 D1 	call y_length_to_tongue_ring
  190 D1:BB3F 7D -  -  -  	ld a,l
  191 D1:BB40 FE 5A -  -  	cp tongue_max_length
  192 D1:BB42 D2 D1 BB D1 	jp nc, pu_tongue_release 
  193 D1:BB46 -  -  -  -  	;call write_hl_to_ram
  194 D1:BB46 -  -  -  -  	;hl holds line y length 
  195 D1:BB46 -  -  -  -  	;ld a,l 
  196 D1:BB46 -  -  -  -  	;call write_a_to_ram
  197 D1:BB46 3A 04 C0 D1 	ld a,(tongue_extend_timer)
  198 D1:BB4A -  -  -  -  	;call write_a_to_ram
  199 D1:BB4A -  -  -  -  	;compare timer to y dist / 8 
  200 D1:BB4A CB 3D -  -  	srl l 
  201 D1:BB4C CB 3D -  -  	srl l 
  202 D1:BB4E CB 3D -  -  	srl l 
  203 D1:BB50 BD -  -  -  	cp l 
  204 D1:BB51 DA C7 BB D1 	jp c, pu_tongue_extend
  205 D1:BB55 -  -  -  -  	
  206 D1:BB55 FE 7F -  -  	cp 127 ;if > 127 go to contract
  207 D1:BB57 D2 6D BB D1 	jp nc, pu_tongue_contract
  208 D1:BB5B -  -  -  -  	;ld a,$AC
  209 D1:BB5B -  -  -  -  	;call write_a_to_ram
  210 D1:BB5B -  -  -  -  	;otherwise tongue is full length, set timer to 128 to start contract phase 
  211 D1:BB5B 3E 80 -  -  	ld a,128 
  212 D1:BB5D 32 04 C0 D1 	ld (tongue_extend_timer),a 
  213 D1:BB61 21 00 00 00 	ld hl,0 
  214 D1:BB65 22 EE BF D1 	ld (player_y_vel),hl 
  215 D1:BB69 22 EB BF D1 	ld (player_x_vel),hl
  216 D1:BB6D -  -  -  -  
  217 D1:BB6D -  -  -  -  pu_tongue_contract:
  218 D1:BB6D -  -  -  -  
  219 D1:BB6D -  -  -  -  	;ld a,$AD 
  220 D1:BB6D -  -  -  -  	;call write_a_to_ram
  221 D1:BB6D -  -  -  -  	;Add distance to ring to player velocity until reach ring
  222 D1:BB6D CD 7A C5 D1 	call y_length_to_tongue_ring ;l holds y dist in px 
  223 D1:BB71 7D -  -  -  	ld a,l 
  224 D1:BB72 -  -  -  -  	;call write_a_to_ram
  225 D1:BB72 FE 03 -  -  	cp 3 
  226 D1:BB74 DA D1 BB D1 	jp c, pu_tongue_release
  227 D1:BB78 CB 7C -  -  	bit 7,h 
  228 D1:BB7A C2 D1 BB D1 	jp nz,pu_tongue_release
  229 D1:BB7E -  -  -  -  	;div by ~6
  230 D1:BB7E CB 3D -  -  	srl l
  231 D1:BB80 CB 3D -  -  	srl l
  232 D1:BB82 CB 3D -  -  	srl l
  233 D1:BB84 7D -  -  -  	ld a,l 
  234 D1:BB85 CB 3D -  -  	srl l 
  235 D1:BB87 85 -  -  -  	add a,l 
  236 D1:BB88 6F -  -  -    	ld l,a 
  237 D1:BB89 -  -  -  -  	;call write_a_to_ram
  238 D1:BB89 -  -  -  -  	;call prgmpause
  239 D1:BB89 -  -  -  -  	;call write_hl_to_ram
  240 D1:BB89 11 14 00 00 	ld de,20
  241 D1:BB8D 19 -  -  -  	add hl,de 
  242 D1:BB8E EB -  -  -  	ex de,hl 
  243 D1:BB8F 2A EE BF D1 	ld hl,(player_y_vel)
  244 D1:BB93 19 -  -  -  	add hl,de 
  245 D1:BB94 22 EE BF D1 	ld (player_y_vel),hl 
  246 D1:BB98 -  -  -  -  	;call write_hl_to_ram
  247 D1:BB98 -  -  -  -  	;call prgmpause
  248 D1:BB98 -  -  -  -  	
  249 D1:BB98 CD 97 C5 D1 	call x_length_to_tongue_ring
  250 D1:BB9C -  -  -  -  	;a holds x dist in pairs
  251 D1:BB9C CB 7F -  -  	bit 7,a ;check sign 
  252 D1:BB9E C2 B0 BB D1 	jp nz, pu_tongue_contract_left
  253 D1:BBA2 11 00 00 00 	ld de,0 
  254 D1:BBA6 1E 03 -  -  	ld e,3 
  255 D1:BBA8 83 -  -  -  	add a,e 
  256 D1:BBA9 5F -  -  -  	ld e,a
  257 D1:BBAA CB 3B -  -  	srl e ;div by 2
  258 D1:BBAC C3 BA BB D1 	jp pu_tongue_contract_right
  259 D1:BBB0 -  -  -  -  pu_tongue_contract_left:
  260 D1:BBB0 11 FF FF FF 	ld de, $ffffff
  261 D1:BBB4 1E FD -  -  	ld e,-3 
  262 D1:BBB6 83 -  -  -  	add a,e
  263 D1:BBB7 5F -  -  -  	ld e,a 
  264 D1:BBB8 CB 2B -  -  	sra e ;div 2
  265 D1:BBBA -  -  -  -  pu_tongue_contract_right:
  266 D1:BBBA -  -  -  -  	
  267 D1:BBBA 2A EB BF D1 	ld hl,(player_x_vel)
  268 D1:BBBE 19 -  -  -  	add hl,de 
  269 D1:BBBF 22 EB BF D1 	ld (player_x_vel),hl 
  270 D1:BBC3 -  -  -  -  	
  271 D1:BBC3 C3 3C BC D1 	jp pu_physics
  272 D1:BBC7 -  -  -  -  	
  273 D1:BBC7 -  -  -  -  	;tongue extends 8px per frame until max length 
  274 D1:BBC7 -  -  -  -  	;then set timer to 128 for contract phase 
  275 D1:BBC7 -  -  -  -  pu_tongue_extend:
  276 D1:BBC7 -  -  -  -  	;Extend tongue and do normal air physics
  277 D1:BBC7 3C -  -  -  	inc a 
  278 D1:BBC8 3C -  -  -  	inc a 
  279 D1:BBC9 -  -  -  -  	;call write_a_to_ram
  280 D1:BBC9 32 04 C0 D1 	ld (tongue_extend_timer),a 
  281 D1:BBCD C3 3C BC D1 	jp pu_physics
  282 D1:BBD1 -  -  -  -  
  283 D1:BBD1 -  -  -  -  
  284 D1:BBD1 -  -  -  -  pu_tongue_release:
  285 D1:BBD1 3A FE BF D1 	ld a,(player_flags)
  286 D1:BBD5 CB 97 -  -  	res 2,a 
  287 D1:BBD7 32 FE BF D1 	ld (player_flags),a 
  288 D1:BBDB C3 3C BC D1 	jp pu_physics
  289 D1:BBDF -  -  -  -  
  290 D1:BBDF -  -  -  -  
  291 D1:BBDF -  -  -  -  pu_try_jump:
  292 D1:BBDF -  -  -  -  	;no jump keys held this frame. If jump timer > 0 and on ground, then jump 
  293 D1:BBDF -  -  -  -  	
  294 D1:BBDF CB 77 -  -  	bit 6,a ;ground check 
  295 D1:BBE1 CA 2A BC D1 	jp z, pu_no_jump ;if not on ground, cant jump
  296 D1:BBE5 3A E4 BF D1 	ld a,(jump_charge_timer)
  297 D1:BBE9 B7 -  -  -  	or a 
  298 D1:BBEA CA 2A BC D1 	jp z,pu_no_jump ;jump timers are 0 = no jump
  299 D1:BBEE -  -  -  -  	
  300 D1:BBEE FE 08 -  -  	cp 8;if timer < 8 no jump
  301 D1:BBF0 DA 2A BC D1 	jp c, pu_no_jump
  302 D1:BBF4 -  -  -  -  	
  303 D1:BBF4 -  -  -  -  	;This is the minimum jump player can do 
  304 D1:BBF4 -  -  -  -  	;ld a,(jump_strength_right)
  305 D1:BBF4 -  -  -  -  	;bit 7,a 
  306 D1:BBF4 -  -  -  -  	;;jp nz, pu_min_jump_left 
  307 D1:BBF4 -  -  -  -  	;or a 
  308 D1:BBF4 -  -  -  -  	;jp z, pu_min_jump_up 
  309 D1:BBF4 -  -  -  -  	;ld a,20 
  310 D1:BBF4 -  -  -  -  	;jp pu_min_jump_up
  311 D1:BBF4 -  -  -  -  ;pu_min_jump_left:
  312 D1:BBF4 -  -  -  -  	;ld a, -20
  313 D1:BBF4 -  -  -  -  ;pu_min_jump_up:
  314 D1:BBF4 -  -  -  -  	;ld (jump_strength_right),a 
  315 D1:BBF4 -  -  -  -  	
  316 D1:BBF4 -  -  -  -  	;ld a,15 
  317 D1:BBF4 -  -  -  -  	;ld (jump_strength_up),a 
  318 D1:BBF4 -  -  -  -  	
  319 D1:BBF4 -  -  -  -  	;ld a,$55
  320 D1:BBF4 -  -  -  -  	;call write_a_to_ram
  321 D1:BBF4 -  -  -  -  	
  322 D1:BBF4 -  -  -  -  	;Player is on ground and should execute a jump 
  323 D1:BBF4 -  -  -  -  pu_jump_notmin:
  324 D1:BBF4 -  -  -  -  	
  325 D1:BBF4 21 00 00 00 	ld hl,0 
  326 D1:BBF8 3A E1 BF D1 	ld a,(jump_strength_up)
  327 D1:BBFC 6F -  -  -  	ld l,a
  328 D1:BBFD -  -  -  -  	;call write_a_to_ram
  329 D1:BBFD -  -  -  -  
  330 D1:BBFD 22 EE BF D1 	ld (player_y_vel),hl 
  331 D1:BC01 -  -  -  -  	;call write_hl_to_ram
  332 D1:BC01 -  -  -  -  	
  333 D1:BC01 3A E3 BF D1 	ld a,(jump_strength_left)
  334 D1:BC05 47 -  -  -  	ld b,a 
  335 D1:BC06 3A E2 BF D1 	ld a,(jump_strength_right)
  336 D1:BC0A 90 -  -  -  	sub a,b ;subtract left jump from right
  337 D1:BC0B DA 17 BC D1 	jp c, pu_left_jump 
  338 D1:BC0F -  -  -  -  	;right jump 
  339 D1:BC0F 21 00 00 00 	ld hl,0
  340 D1:BC13 C3 1B BC D1 	jp pu_jump_cont
  341 D1:BC17 -  -  -  -  pu_left_jump:	
  342 D1:BC17 21 FF FF FF 	ld hl, $ffffff ;makes x vel negative 
  343 D1:BC1B -  -  -  -  pu_jump_cont:
  344 D1:BC1B 6F -  -  -  	ld l,a 
  345 D1:BC1C -  -  -  -  	;call write_a_to_ram
  346 D1:BC1C 22 EB BF D1 	ld (player_x_vel),hl 
  347 D1:BC20 -  -  -  -  	;call write_hl_to_ram
  348 D1:BC20 -  -  -  -  	;Clear ground flag 
  349 D1:BC20 3A FE BF D1 	ld a,(player_flags)
  350 D1:BC24 CB B7 -  -  	res 6, a 
  351 D1:BC26 32 FE BF D1 	ld (player_flags),a 
  352 D1:BC2A -  -  -  -  	
  353 D1:BC2A -  -  -  -  pu_no_jump:	
  354 D1:BC2A -  -  -  -  	;reset jump timers 
  355 D1:BC2A 3E 00 -  -  	ld a,0 
  356 D1:BC2C 32 E4 BF D1 	ld (jump_charge_timer),a 
  357 D1:BC30 32 E2 BF D1 	ld (jump_strength_right),a 
  358 D1:BC34 32 E3 BF D1 	ld (jump_strength_left),a 
  359 D1:BC38 32 E1 BF D1 	ld (jump_strength_up),a	
  360 D1:BC3C -  -  -  -  	
  361 D1:BC3C -  -  -  -  pu_physics:
  362 D1:BC3C -  -  -  -  
  363 D1:BC3C -  -  -  -  	;Execute player physics update and check for collisions 
  364 D1:BC3C -  -  -  -  	;Run multiple times, 16 steps per frame? 
  365 D1:BC3C -  -  -  -  	;Move up first, then check collision, then move side and check again 
  366 D1:BC3C 3A FE BF D1 	ld a,(player_flags)
  367 D1:BC40 CB 77 -  -  	bit 6,a 
  368 D1:BC42 C4 D9 BC D1 	call nz,pu_check_on_ground ;check if player still on ground 
  369 D1:BC46 -  -  -  -  
  370 D1:BC46 -  -  -  -  
  371 D1:BC46 3E 10 -  -  	ld a,16 ;num physics loops 
  372 D1:BC48 32 4D BC D1 	ld (pu_physics_count),a 
  373 D1:BC4C -  -  -  -  	
  374 D1:BC4C -  -  -  -  pu_physics_loop:
  375 D1:BC4C -  -  -  -  
  376 D1:BC4C -  -  -  -  pu_physics_count .equ $ + 1
  377 D1:BC4C 3E 00 -  -  	ld a,0
  378 D1:BC4E 3D -  -  -  	dec a 
  379 D1:BC4F CA FB BC D1 	jp z, pu_physics_end
  380 D1:BC53 32 4D BC D1 	ld (pu_physics_count),a
  381 D1:BC57 -  -  -  -  	
  382 D1:BC57 3A FE BF D1 	ld a,(player_flags)
  383 D1:BC5B -  -  -  -  	
  384 D1:BC5B CB AF -  -  	res 5,a ;reset in semisolid flag 
  385 D1:BC5D 32 FE BF D1 	ld (player_flags),a 
  386 D1:BC61 CB 77 -  -  	bit 6,a 
  387 D1:BC63 C2 4C BC D1 	jp nz,pu_physics_loop ;If on ground, no need to do physics 
  388 D1:BC67 -  -  -  -  	
  389 D1:BC67 -  -  -  -  	
  390 D1:BC67 -  -  -  -  
  391 D1:BC67 -  -  -  -  ;Y POS UPDATE
  392 D1:BC67 -  -  -  -  
  393 D1:BC67 2A EE BF D1 	ld hl, (player_y_vel) 	
  394 D1:BC6B EB -  -  -  	ex de,hl 
  395 D1:BC6C 2A E8 BF D1 	ld hl, (player_y_pos) 
  396 D1:BC70 19 -  -  -  	add hl,de ;add y vel to y pos 
  397 D1:BC71 22 E8 BF D1 	ld (player_y_pos),hl 
  398 D1:BC75 -  -  -  -  	
  399 D1:BC75 -  -  -  -  	;check for vertical collisions here 
  400 D1:BC75 3E DA -  -  	ld a,%11011010;jp c
  401 D1:BC77 32 BD BD D1 	ld (collision_check_vertical),a
  402 D1:BC7B CD 26 BD D1 	call check_collisions
  403 D1:BC7F -  -  -  -  
  404 D1:BC7F -  -  -  -  pu_update_x_pos:
  405 D1:BC7F -  -  -  -  
  406 D1:BC7F -  -  -  -  ;X POS UPDATE
  407 D1:BC7F 2A EB BF D1 	ld hl, (player_x_vel) 
  408 D1:BC83 EB -  -  -  	ex de,hl 
  409 D1:BC84 2A E5 BF D1 	ld hl, (player_x_pos) 
  410 D1:BC88 19 -  -  -  	add hl,de ;add x vel to x pos 
  411 D1:BC89 22 E5 BF D1 	ld (player_x_pos),hl 
  412 D1:BC8D -  -  -  -  	
  413 D1:BC8D 11 00 09 00 	ld de,$000900
  414 D1:BC91 ED 52 -  -  	sbc hl,de 
  415 D1:BC93 DC A7 BF D1 	call c, reverse_x_vel ;If xpos < 2px
  416 D1:BC97 2A E5 BF D1 	ld hl, (player_x_pos) 
  417 D1:BC9B 11 00 23 01 	ld de,$012300; if xpos > 300px
  418 D1:BC9F ED 52 -  -  	sbc hl,de 
  419 D1:BCA1 D4 A7 BF D1 	call nc,reverse_x_vel
  420 D1:BCA5 -  -  -  -  	
  421 D1:BCA5 -  -  -  -  	;TODO check horizontal collisoins 
  422 D1:BCA5 3E D2 -  -  	ld a, %11010010 ;jp nc 
  423 D1:BCA7 32 BD BD D1 	ld (collision_check_vertical),a
  424 D1:BCAB CD 26 BD D1 	call check_collisions
  425 D1:BCAF -  -  -  -  	
  426 D1:BCAF -  -  -  -  	;Set previous position 
  427 D1:BCAF 2A E8 BF D1 	ld hl, (player_y_pos)
  428 D1:BCB3 22 F4 BF D1 	ld (player_y_pos_prev), hl 
  429 D1:BCB7 -  -  -  -  	;call write_hl_to_ram
  430 D1:BCB7 2A E5 BF D1 	ld hl, (player_x_pos)
  431 D1:BCBB 22 F1 BF D1 	ld (player_x_pos_prev), hl 
  432 D1:BCBF -  -  -  -  	
  433 D1:BCBF -  -  -  -  	;ld a,$CC
  434 D1:BCBF -  -  -  -  	;call write_a_to_ram
  435 D1:BCBF -  -  -  -  	
  436 D1:BCBF -  -  -  -  	
  437 D1:BCBF 3A FE BF D1 	ld a,(player_flags)
  438 D1:BCC3 CB 6F -  -  	bit 5,a ;in semisolid flag 
  439 D1:BCC5 CA CF BC D1 	jp z, pu_no_semisolid
  440 D1:BCC9 CB E7 -  -  	set 4,a	
  441 D1:BCCB C3 D1 BC D1 	jp pu_prev_semisolid
  442 D1:BCCF -  -  -  -  pu_no_semisolid:
  443 D1:BCCF CB A7 -  -  	res 4,a 
  444 D1:BCD1 -  -  -  -  pu_prev_semisolid:
  445 D1:BCD1 32 FE BF D1 	ld (player_flags),a 
  446 D1:BCD5 -  -  -  -  	
  447 D1:BCD5 C3 4C BC D1 	jp pu_physics_loop
  448 D1:BCD9 -  -  -  -  	;Apply gravity and terminal v check after loop 
  449 D1:BCD9 -  -  -  -  
  450 D1:BCD9 -  -  -  -  pu_check_on_ground:
  451 D1:BCD9 -  -  -  -  	;checks if player is still on ground or platform has dissapeared 
  452 D1:BCD9 3A FE BF D1 	ld a,(player_flags)
  453 D1:BCDD CB B7 -  -  	res 6,a 
  454 D1:BCDF 32 FE BF D1 	ld (player_flags),a 
  455 D1:BCE3 2A E8 BF D1 	ld hl, (player_y_pos)
  456 D1:BCE7 11 00 FF FF 	ld de,-256
  457 D1:BCEB 19 -  -  -  	add hl,de ;dec by 1 full pixel
  458 D1:BCEC 22 E8 BF D1 	ld (player_y_pos),hl 
  459 D1:BCF0 -  -  -  -  	;check for vertical collisions here 
  460 D1:BCF0 3E DA -  -  	ld a,%11011010;jp c
  461 D1:BCF2 32 BD BD D1 	ld (collision_check_vertical),a
  462 D1:BCF6 CD 26 BD D1 	call check_collisions	
  463 D1:BCFA C9 -  -  -  	ret 
  464 D1:BCFB -  -  -  -  
  465 D1:BCFB -  -  -  -  
  466 D1:BCFB -  -  -  -  pu_physics_end:
  467 D1:BCFB -  -  -  -  	;Apply gravity 
  468 D1:BCFB 2A EE BF D1 	ld hl,(player_y_vel)
  469 D1:BCFF CB 7C -  -  	bit 7,h  ;Check if vel is negative
  470 D1:BD01 CA 10 BD D1 	jp z,pu_apply_gravity ;if moving up apply gravity
  471 D1:BD05 -  -  -  -  	
  472 D1:BD05 E5 -  -  -  	push hl 
  473 D1:BD06 -  -  -  -  	;check foor terminal vel 
  474 D1:BD06 11 80 00 00 	ld de, $000080 ;8px per frame
  475 D1:BD0A 19 -  -  -  	add hl,de ;terminal V is negative
  476 D1:BD0B E1 -  -  -  	pop hl 
  477 D1:BD0C D2 1D BD D1 	jp nc, pu_terminal_vel
  478 D1:BD10 -  -  -  -  pu_apply_gravity:
  479 D1:BD10 11 0B 00 00 	ld de,11 ;GRAVITY CONSTANT
  480 D1:BD14 37 -  -  -  	scf 
  481 D1:BD15 3F -  -  -  	ccf ;reset carry flag 
  482 D1:BD16 ED 52 -  -  	sbc hl,de 
  483 D1:BD18 22 EE BF D1 	ld (player_y_vel),hl
  484 D1:BD1C -  -  -  -  
  485 D1:BD1C C9 -  -  -  	ret 
  486 D1:BD1D -  -  -  -  pu_terminal_vel:
  487 D1:BD1D 21 80 FF FF 	ld hl, $ffff80 ;-8 px per frame
  488 D1:BD21 22 EE BF D1 	ld (player_y_vel),hl
  489 D1:BD25 -  -  -  -  	;call write_hl_to_ram
  490 D1:BD25 C9 -  -  -  	ret 
  491 D1:BD26 -  -  -  -  
  492 D1:BD26 -  -  -  -  
  493 D1:BD26 -  -  -  -  
  494 D1:BD26 -  -  -  -  check_collisions:
  495 D1:BD26 3A EA BF D1 	ld a,(player_y_pos+2) ;Frame Number
  496 D1:BD2A 01 00 00 00 	ld bc,0 
  497 D1:BD2E 21 87 01 D2 	ld hl, Collision_Data_frame_table
  498 D1:BD32 4F -  -  -  	ld c,a 
  499 D1:BD33 09 -  -  -  	add hl,bc ;add frame num 
  500 D1:BD34 09 -  -  -  	add hl,bc ;add frame num 
  501 D1:BD35 09 -  -  -  	add hl,bc ;add frame num 
  502 D1:BD36 ED 27 -  -  	ld hl,(hl)
  503 D1:BD38 -  -  -  -  	
  504 D1:BD38 -  -  -  -  	;call write_a_to_ram
  505 D1:BD38 -  -  -  -  	
  506 D1:BD38 -  -  -  -  	;ld a,$20 
  507 D1:BD38 -  -  -  -  	;call write_a_to_ram
  508 D1:BD38 -  -  -  -  	
  509 D1:BD38 3E DA -  -  	ld a,%11011010;jp c
  510 D1:BD3A 32 9F BF D1 	ld(check_col_lower_jump),a 
  511 D1:BD3E 32 C5 BE D1 	ld (colis_semisolid_down_lower_frame),a 
  512 D1:BD42 -  -  -  -  	
  513 D1:BD42 -  -  -  -  	;hl points to collision data for this frame 
  514 D1:BD42 08 -  -  -  	ex af,af' ;' 
  515 D1:BD43 7E -  -  -  	ld a,(hl) ;ld number of elements 
  516 D1:BD44 3C -  -  -  	inc a ;for 0 case
  517 D1:BD45 08 -  -  -  	ex af,af' ;' 
  518 D1:BD46 23 -  -  -  	inc hl ;to first element
  519 D1:BD47 -  -  -  -  
  520 D1:BD47 -  -  -  -  check_collisions_same_loop:
  521 D1:BD47 -  -  -  -  	;hl pts to ymin of collider 
  522 D1:BD47 08 -  -  -  	ex af,af' ;'
  523 D1:BD48 3D -  -  -  	dec a 
  524 D1:BD49 CA 68 BD D1 	jp z, check_collisions_lower
  525 D1:BD4D 08 -  -  -  	ex af,af';' 
  526 D1:BD4E -  -  -  -  	;Collider bottom is in same frame as player 
  527 D1:BD4E 3A E9 BF D1 	ld a,(player_y_pos + 1)
  528 D1:BD52 96 -  -  -  	sub a,(hl); sub y pos of collider 
  529 D1:BD53 -  -  -  -  	;call write_a_to_ram
  530 D1:BD53 DA 99 BF D1 	jp c, check_col_skip_4 
  531 D1:BD57 23 -  -  -  	inc hl; to height 
  532 D1:BD58 -  -  -  -  	;Player top is above bottom of collider 
  533 D1:BD58 -  -  -  -  	;a holds # pixels above bottom of collider (0 indexed)	
  534 D1:BD58 0E 12 -  -  	ld c,player_collider_height
  535 D1:BD5A -  -  -  -  	;call write_a_to_ram
  536 D1:BD5A 91 -  -  -  	sub a,c
  537 D1:BD5B DA 95 BD D1 	jp c, check_col_y_collision
  538 D1:BD5F 96 -  -  -  	sub (hl); cokmpare to collider height -1 
  539 D1:BD60 DA 95 BD D1 	jp c,check_col_y_collision
  540 D1:BD64 -  -  -  -  	;Otherwise no collision 	
  541 D1:BD64 C3 9A BF D1 	jp check_col_skip_3
  542 D1:BD68 -  -  -  -  
  543 D1:BD68 -  -  -  -  check_collisions_lower:
  544 D1:BD68 -  -  -  -  	;hl pts to start of lower frame collisoin data 
  545 D1:BD68 08 -  -  -  	ex af,af' ;' 
  546 D1:BD69 7E -  -  -  	ld a,(hl) ;ld number of elements 
  547 D1:BD6A 3C -  -  -  	inc a ;for 0 case
  548 D1:BD6B -  -  -  -  	;call write_a_to_ram
  549 D1:BD6B 08 -  -  -  	ex af,af' ;'
  550 D1:BD6C -  -  -  -  
  551 D1:BD6C -  -  -  -  	;ld a,$21 
  552 D1:BD6C -  -  -  -  	;call write_a_to_ram
  553 D1:BD6C -  -  -  -  	
  554 D1:BD6C 23 -  -  -  	inc hl ;to first element
  555 D1:BD6D 3E D2 -  -  	ld a, %11010010 ;jp nc 
  556 D1:BD6F 32 9F BF D1 	ld (check_col_lower_jump),a 
  557 D1:BD73 32 C5 BE D1 	ld (colis_semisolid_down_lower_frame),a 
  558 D1:BD77 -  -  -  -  check_collisions_lower_loop:
  559 D1:BD77 -  -  -  -  ;hl pts to ymin of collider 
  560 D1:BD77 08 -  -  -  	ex af,af' ;'
  561 D1:BD78 3D -  -  -  	dec a 
  562 D1:BD79 C8 -  -  -  	ret z 
  563 D1:BD7A 08 -  -  -  	ex af,af';' 
  564 D1:BD7B -  -  -  -  	;collider y min is in frame below player
  565 D1:BD7B -  -  -  -  	;we already know player is above collider bottom 
  566 D1:BD7B 3A E9 BF D1 	ld a,(player_y_pos + 1)
  567 D1:BD7F 96 -  -  -  	sub a,(hl)
  568 D1:BD80 D2 99 BF D1 	jp nc,check_col_skip_4
  569 D1:BD84 -  -  -  -  	;call write_a_to_ram
  570 D1:BD84 23 -  -  -  	inc hl ;to height 
  571 D1:BD85 -  -  -  -  	;a holds px from player top to collider bottom 
  572 D1:BD85 0E 12 -  -  	ld c,player_collider_height
  573 D1:BD87 -  -  -  -  	;call write_a_to_ram
  574 D1:BD87 91 -  -  -  	sub a,c
  575 D1:BD88 DA 95 BD D1 	jp c, check_col_y_collision
  576 D1:BD8C -  -  -  -  
  577 D1:BD8C -  -  -  -  	;call write_a_to_ram
  578 D1:BD8C 96 -  -  -  	sub (hl); cokmpare to collider height -1 
  579 D1:BD8D DA 95 BD D1 	jp c,check_col_y_collision
  580 D1:BD91 -  -  -  -  	;Otherwise no collision 	
  581 D1:BD91 C3 9A BF D1 	jp check_col_skip_3
  582 D1:BD95 -  -  -  -  	
  583 D1:BD95 -  -  -  -  check_col_y_collision:
  584 D1:BD95 -  -  -  -  	;call write_a_to_ram
  585 D1:BD95 -  -  -  -  
  586 D1:BD95 -  -  -  -  	;Player is within Y range of collider 
  587 D1:BD95 -  -  -  -  	;ld a,$AA 
  588 D1:BD95 -  -  -  -  	;call write_a_to_ram;TESTIng
  589 D1:BD95 -  -  -  -  	
  590 D1:BD95 23 -  -  -  	inc hl ;to x max 
  591 D1:BD96 CD D3 BF D1 	call player_x_half
  592 D1:BD9A -  -  -  -  	;A holds x pos / 2 (paired pixels) 
  593 D1:BD9A -  -  -  -  	
  594 D1:BD9A BE -  -  -  	cp (hl) ;compare to x max 
  595 D1:BD9B -  -  -  -  	;zero or carry = collison 
  596 D1:BD9B CA A7 BD D1 	jp z, check_col_x_collision
  597 D1:BD9F DA A7 BD D1 	jp c, check_col_x_collision
  598 D1:BDA3 -  -  -  -  	
  599 D1:BDA3 C3 9B BF D1 	jp check_col_skip_2
  600 D1:BDA7 -  -  -  -  	
  601 D1:BDA7 -  -  -  -  check_col_x_collision:
  602 D1:BDA7 -  -  -  -  
  603 D1:BDA7 -  -  -  -  	;ld a,$BB
  604 D1:BDA7 -  -  -  -  	;call write_a_to_ram
  605 D1:BDA7 -  -  -  -  	;Need to find x pos of right of player, then div by 2 
  606 D1:BDA7 3A E6 BF D1 	ld a,(player_x_pos+1);Fullpixels
  607 D1:BDAB C6 14 -  -  	add a, player_collider_width ;Will set carry flag if right side of player > 255 and left of player < 255 
  608 D1:BDAD 1F -  -  -  	rra ;div by 2 and move carry flag to bit 7. 
  609 D1:BDAE 47 -  -  -  	ld b,a 
  610 D1:BDAF 3A E7 BF D1 	ld a,(player_x_pos +2 ); MSB pixel 
  611 D1:BDB3 0F -  -  -  	rrca ;move bit 0 to bit 7
  612 D1:BDB4 B0 -  -  -  	or b ;a holds right pos of player / 2 
  613 D1:BDB5 23 -  -  -  	inc hl ;to x min 
  614 D1:BDB6 BE -  -  -  	cp (hl) 
  615 D1:BDB7 -  -  -  -   
  616 D1:BDB7 DA 9C BF D1 	jp c, check_col_skip_1 
  617 D1:BDBB -  -  -  -  
  618 D1:BDBB -  -  -  -  
  619 D1:BDBB -  -  -  -  collision_found: ;A collision has been detected
  620 D1:BDBB -  -  -  -  	
  621 D1:BDBB -  -  -  -  	;TESTing 
  622 D1:BDBB -  -  -  -  	;ld a,$AB 
  623 D1:BDBB -  -  -  -  	;call write_a_to_ram
  624 D1:BDBB -  -  -  -  	
  625 D1:BDBB 23 -  -  -  	inc hl ;to flags 
  626 D1:BDBC -  -  -  -  	
  627 D1:BDBC -  -  -  -  	;ld a,(hl)
  628 D1:BDBC -  -  -  -  	;call write_a_to_ram
  629 D1:BDBC -  -  -  -  	
  630 D1:BDBC 37 -  -  -  	scf 
  631 D1:BDBD -  -  -  -  collision_check_vertical .equ $
  632 D1:BDBD DA EC BD D1 	jp c, collision_check_vert 
  633 D1:BDC1 -  -  -  -  	
  634 D1:BDC1 -  -  -  -  
  635 D1:BDC1 3A FE BF D1 	ld a,(player_flags)
  636 D1:BDC5 CB 5F -  -  	bit 3,a 
  637 D1:BDC7 CA D5 BD D1 	jp z,colis_horiz_not_fall
  638 D1:BDCB -  -  -  -  	;player is falling 
  639 D1:BDCB CB EF -  -  	set 5,a ;set semisolid flag 
  640 D1:BDCD 32 FE BF D1 	ld (player_flags),a 
  641 D1:BDD1 C3 9D BF D1 	jp check_col_skip_0
  642 D1:BDD5 -  -  -  -  	
  643 D1:BDD5 -  -  -  -  colis_horiz_not_fall:
  644 D1:BDD5 -  -  -  -  	;Player is moving horizontal 
  645 D1:BDD5 7E -  -  -  	ld a,(hl) ;flags 
  646 D1:BDD6 CB 7F -  -  	bit 7,a ;semisolid 
  647 D1:BDD8 C2 2D BE D1 	jp nz,vert_col_up_semisolid ;skips semisolid 
  648 D1:BDDC -  -  -  -  
  649 D1:BDDC CB 77 -  -  	bit 6,a 
  650 D1:BDDE C2 31 BF D1 	jp nz, collision_spikes
  651 D1:BDE2 -  -  -  -  	
  652 D1:BDE2 -  -  -  -  	;TODO breakaway platforms 
  653 D1:BDE2 -  -  -  -  	
  654 D1:BDE2 -  -  -  -  	;player has moved horiz and hit a solid wall 
  655 D1:BDE2 -  -  -  -  	;Reverse x velocity 
  656 D1:BDE2 E5 -  -  -  	push hl 
  657 D1:BDE3 CD A7 BF D1 	call reverse_x_vel
  658 D1:BDE7 E1 -  -  -  	pop hl 
  659 D1:BDE8 -  -  -  -  	
  660 D1:BDE8 C3 9D BF D1 	jp check_col_skip_0
  661 D1:BDEC -  -  -  -  
  662 D1:BDEC -  -  -  -  collision_check_vert:
  663 D1:BDEC -  -  -  -  	;Player is moving in vertical direction 
  664 D1:BDEC -  -  -  -  
  665 D1:BDEC 3A F0 BF D1 	ld a,(player_y_vel + 2) ;MSB of y vel 
  666 D1:BDF0 CB 7F -  -  	bit 7,a ;check if moving up or down 
  667 D1:BDF2 C2 3B BE D1 	jp nz, vert_col_down
  668 D1:BDF6 -  -  -  -  	
  669 D1:BDF6 -  -  -  -  	
  670 D1:BDF6 3A FE BF D1 	ld a,(player_flags)
  671 D1:BDFA CB 5F -  -  	bit 3,a 
  672 D1:BDFC CA 0A BE D1 	jp z,colis_vert_up_not_fall
  673 D1:BE00 CB EF -  -  	set 5,a ;set semisolid flag. All colliders act semisolid while in fall
  674 D1:BE02 32 FE BF D1 	ld (player_flags),a 
  675 D1:BE06 C3 9D BF D1 	jp check_col_skip_0
  676 D1:BE0A -  -  -  -  	
  677 D1:BE0A -  -  -  -  	
  678 D1:BE0A -  -  -  -  colis_vert_up_not_fall:
  679 D1:BE0A -  -  -  -  	;player is moving up 
  680 D1:BE0A 7E -  -  -  	ld a,(hl) ;flags 
  681 D1:BE0B CB 7F -  -  	bit 7,a ;semisolid 
  682 D1:BE0D C2 2D BE D1 	jp nz,vert_col_up_semisolid ;semisolid and moving up
  683 D1:BE11 -  -  -  -  
  684 D1:BE11 CB 77 -  -  	bit 6,a 
  685 D1:BE13 C2 31 BF D1 	jp nz, collision_spikes
  686 D1:BE17 -  -  -  -  
  687 D1:BE17 -  -  -  -  	;TODO breakaway platforms 
  688 D1:BE17 -  -  -  -  	
  689 D1:BE17 -  -  -  -  	;Plyaer has moved up and hit non spike object 
  690 D1:BE17 -  -  -  -  	;Set velocity to 0 
  691 D1:BE17 E5 -  -  -  	push hl 
  692 D1:BE18 21 00 00 00 	ld hl,0
  693 D1:BE1C 22 EE BF D1 	ld (player_y_vel),hl 
  694 D1:BE20 2A F4 BF D1 	ld hl, (player_y_pos_prev) ;revert to previous y pos 
  695 D1:BE24 22 E8 BF D1 	ld (player_y_pos),hl 
  696 D1:BE28 E1 -  -  -  	pop hl 
  697 D1:BE29 -  -  -  -  	
  698 D1:BE29 C3 9D BF D1 	jp check_col_skip_0
  699 D1:BE2D -  -  -  -  	
  700 D1:BE2D -  -  -  -  vert_col_up_semisolid:
  701 D1:BE2D 3A FE BF D1 	ld a,(player_flags)
  702 D1:BE31 CB EF -  -  	set 5,a ;set semisolid flag 
  703 D1:BE33 32 FE BF D1 	ld (player_flags),a 
  704 D1:BE37 C3 9D BF D1 	jp check_col_skip_0
  705 D1:BE3B -  -  -  -  	
  706 D1:BE3B -  -  -  -  	
  707 D1:BE3B -  -  -  -  	
  708 D1:BE3B -  -  -  -  vert_col_down:
  709 D1:BE3B 3A FE BF D1 	ld a,(player_flags)
  710 D1:BE3F CB 5F -  -  	bit 3,a 
  711 D1:BE41 CA A1 BE D1 	jp z,colis_vert_down_not_fall
  712 D1:BE45 -  -  -  -  	
  713 D1:BE45 -  -  -  -  	;PLayer is falling
  714 D1:BE45 CB EF -  -  	set 5,a ;set semisolid flag. All colliders act semisolid while in fall
  715 D1:BE47 32 FE BF D1 	ld (player_flags),a 
  716 D1:BE4B E5 -  -  -  	push hl ;save collider flags 
  717 D1:BE4C -  -  -  -  	
  718 D1:BE4C -  -  -  -  	
  719 D1:BE4C -  -  -  -  	;push af 
  720 D1:BE4C -  -  -  -  	;ld a,$B0
  721 D1:BE4C -  -  -  -  	;call write_a_to_ram
  722 D1:BE4C -  -  -  -  	;pop af
  723 D1:BE4C -  -  -  -  	
  724 D1:BE4C -  -  -  -  	;check if we are below spike hit height 
  725 D1:BE4C 2A 00 C0 D1 	ld hl,(spike_hit_height)
  726 D1:BE50 EB -  -  -  	ex de,hl 
  727 D1:BE51 2A E8 BF D1 	ld hl,(player_y_pos) 
  728 D1:BE55 ED 52 -  -  	sbc hl,de 
  729 D1:BE57 DA 60 BE D1 	jp c,check_end_fall
  730 D1:BE5B -  -  -  -  	;Player is above threshold 
  731 D1:BE5B E1 -  -  -  	pop hl ;return collider flags 
  732 D1:BE5C C3 9D BF D1 	jp check_col_skip_0 ;continue 
  733 D1:BE60 -  -  -  -  	
  734 D1:BE60 -  -  -  -  
  735 D1:BE60 -  -  -  -  check_end_fall:
  736 D1:BE60 -  -  -  -  	;push af 
  737 D1:BE60 -  -  -  -  	;ld a,$B1
  738 D1:BE60 -  -  -  -  	;call write_a_to_ram
  739 D1:BE60 -  -  -  -  	;pop af
  740 D1:BE60 -  -  -  -  	;call write_a_to_ram
  741 D1:BE60 -  -  -  -  	
  742 D1:BE60 E1 -  -  -  	pop hl ;return collider flags 
  743 D1:BE61 -  -  -  -  	;Player has hit ground below fall threshold 
  744 D1:BE61 CB 67 -  -  	bit 4,a ;check we were not in semisolid last update (cant stop fall if player is clipping into a collider)
  745 D1:BE63 C2 9D BF D1 	jp nz, check_col_skip_0; player currently in collider 
  746 D1:BE67 -  -  -  -  	
  747 D1:BE67 -  -  -  -  	;ld a,$B2
  748 D1:BE67 -  -  -  -  	;call write_a_to_ram
  749 D1:BE67 -  -  -  -  	;player can land 
  750 D1:BE67 -  -  -  -  	;check for unlucky bounce 
  751 D1:BE67 CB 9F -  -  	res 3,a 
  752 D1:BE69 32 FE BF D1 	ld (player_flags),a ;reset fall flag 
  753 D1:BE6D -  -  -  -  	
  754 D1:BE6D 3E B1 -  -  	ld a,$B1
  755 D1:BE6F CD BB AB D1 	call write_a_to_ram
  756 D1:BE73 -  -  -  -  	
  757 D1:BE73 -  -  -  -  	;pop hl 
  758 D1:BE73 3A 03 C0 D1 	ld a, (fall_num_bounces)
  759 D1:BE77 47 -  -  -  	ld b,a 
  760 D1:BE78 -  -  -  -  	;call write_a_to_ram
  761 D1:BE78 CD C8 BF D1 	call random_val
  762 D1:BE7C 5F -  -  -  	ld e,a 
  763 D1:BE7D CD BB AB D1 	call write_a_to_ram
  764 D1:BE81 0E 01 -  -  	ld c,%00000001 ;can set to 11 for hard mode
  765 D1:BE83 -  -  -  -  unlucky_bounce_loop: ;number of bounces determines num loops = more chances to land successfully
  766 D1:BE83 7B -  -  -  	ld a,e ;restore random val
  767 D1:BE84 A1 -  -  -  	and a,c 
  768 D1:BE85 CA A1 BE D1 	jp z,colis_vert_down_not_fall ;player lands
  769 D1:BE89 CB 01 -  -  	rlc c 
  770 D1:BE8B DA A1 BE D1 	jp c,colis_vert_down_not_fall ;break loop after 8 shifts (incase rand val is all 0)
  771 D1:BE8F 10 F2 -  -  	djnz unlucky_bounce_loop
  772 D1:BE91 -  -  -  -  	
  773 D1:BE91 -  -  -  -  ;Player has hit unlucky bounce 
  774 D1:BE91 E5 -  -  -  	push hl 
  775 D1:BE92 CD 41 BF D1 	call spike_hit_bounce
  776 D1:BE96 E1 -  -  -  	pop hl
  777 D1:BE97 -  -  -  -  	
  778 D1:BE97 -  -  -  -  	;show unlucky indicator
  779 D1:BE97 3E 50 -  -  	ld a,80
  780 D1:BE99 32 D1 C4 D1 	ld (pd_unlucky_display_timer),a 
  781 D1:BE9D -  -  -  -  	
  782 D1:BE9D C3 9D BF D1 	jp check_col_skip_0 ;continue 
  783 D1:BEA1 -  -  -  -  	
  784 D1:BEA1 -  -  -  -  	
  785 D1:BEA1 -  -  -  -  colis_vert_down_not_fall:
  786 D1:BEA1 -  -  -  -  	;player is moving down 
  787 D1:BEA1 7E -  -  -  	ld a,(hl) ;flags 
  788 D1:BEA2 CB 7F -  -  	bit 7,a ;semisolid 
  789 D1:BEA4 CA DC BE D1 	jp z,vert_col_down_solid 
  790 D1:BEA8 -  -  -  -  	
  791 D1:BEA8 -  -  -  -  	;semisolid and moving down
  792 D1:BEA8 -  -  -  -  	;ld a,(player_flags)
  793 D1:BEA8 -  -  -  -  	;set 5,a ;set semisolid flag 
  794 D1:BEA8 -  -  -  -  	;ld (player_flags),a 
  795 D1:BEA8 -  -  -  -  	
  796 D1:BEA8 -  -  -  -  	;ld a,$AC 
  797 D1:BEA8 -  -  -  -  	;call write_a_to_ram
  798 D1:BEA8 -  -  -  -  	;call write_hl_to_ram
  799 D1:BEA8 -  -  -  -  	
  800 D1:BEA8 -  -  -  -  	;check if previos y pos was in frame above, if so treat collider as in lower frame 
  801 D1:BEA8 3A EA BF D1 	ld a,(player_y_pos+2);current pos frame 
  802 D1:BEAC 47 -  -  -  	ld b,a 
  803 D1:BEAD 3A F6 BF D1 	ld a,(player_y_pos_prev + 2);last pos frame#
  804 D1:BEB1 B8 -  -  -  	cp b 
  805 D1:BEB2 CA BC BE D1 	jp z,colis_semi_same_frame
  806 D1:BEB6 3E D2 -  -  	ld a,%11010010 ;jp nc 
  807 D1:BEB8 32 C5 BE D1 	ld (colis_semisolid_down_lower_frame),a 
  808 D1:BEBC -  -  -  -  colis_semi_same_frame:
  809 D1:BEBC -  -  -  -  	
  810 D1:BEBC 3A F5 BF D1 	ld a,(player_y_pos_prev + 1) ;last y pos in frame 
  811 D1:BEC0 -  -  -  -  	
  812 D1:BEC0 2B -  -  -  	dec hl; to xmin 
  813 D1:BEC1 2B -  -  -  	dec hl 
  814 D1:BEC2 2B -  -  -  	dec hl ;height 
  815 D1:BEC3 2B -  -  -  	dec hl ;ymin 
  816 D1:BEC4 96 -  -  -  	sub a,(hl) ;player y - collider bottom 
  817 D1:BEC5 -  -  -  -  colis_semisolid_down_lower_frame .equ $
  818 D1:BEC5 D2 99 BF D1 	jp nc,check_col_skip_4 ;nc for lower frame, c for same frame 
  819 D1:BEC9 F5 -  -  -  	push af
  820 D1:BECA -  -  -  -  	;ld a,$A0 
  821 D1:BECA -  -  -  -  	;call write_a_to_ram
  822 D1:BECA F1 -  -  -  	pop af
  823 D1:BECB -  -  -  -  	;call write_a_to_ram
  824 D1:BECB 23 -  -  -  	inc hl ;height
  825 D1:BECC 0E 12 -  -  	ld c, player_collider_height
  826 D1:BECE 91 -  -  -  	sub a,c ;player bottom to collider bottom 
  827 D1:BECF DA 9A BF D1 	jp c,check_col_skip_3
  828 D1:BED3 -  -  -  -  	;ld a,$A1 
  829 D1:BED3 -  -  -  -  	;call write_a_to_ram
  830 D1:BED3 -  -  -  -  	;call write_a_to_ram
  831 D1:BED3 96 -  -  -  	sub a,(hl) ;compare to height 
  832 D1:BED4 DA 9A BF D1 	jp c,check_col_skip_3 ;we were already within semisolid collider 
  833 D1:BED8 23 -  -  -  	inc hl
  834 D1:BED9 23 -  -  -  	inc hl 
  835 D1:BEDA 23 -  -  -  	inc hl;flags 
  836 D1:BEDB -  -  -  -  	;ld a,$A2
  837 D1:BEDB -  -  -  -  	;call write_a_to_ram
  838 D1:BEDB -  -  -  -  	;otherwise, hit the collider 
  839 D1:BEDB 7E -  -  -  	ld a,(hl)
  840 D1:BEDC -  -  -  -  
  841 D1:BEDC -  -  -  -  vert_col_down_solid:
  842 D1:BEDC CB 77 -  -  	bit 6,a 
  843 D1:BEDE C2 31 BF D1 	jp nz, collision_spikes
  844 D1:BEE2 -  -  -  -  
  845 D1:BEE2 E5 -  -  -  	push hl ;save flags
  846 D1:BEE3 -  -  -  -  	;TODO breakaway platforms 
  847 D1:BEE3 E6 0F -  -  	and a,%00001111 ;breakaway index 1-16
  848 D1:BEE5 CA 08 BF D1 	jp z, not_breakaway
  849 D1:BEE9 -  -  -  -  	
  850 D1:BEE9 -  -  -  -  	;Player has hit breakaway platform, check timer 
  851 D1:BEE9 21 9C C0 D1 	ld hl,breakaway_timers
  852 D1:BEED 01 00 00 00 	ld bc,0 
  853 D1:BEF1 4F -  -  -  	ld c,a ;index 
  854 D1:BEF2 09 -  -  -  	add hl,bc 
  855 D1:BEF3 -  -  -  -  	;hl pts to correct timer
  856 D1:BEF3 7E -  -  -  	ld a,(hl)
  857 D1:BEF4 B7 -  -  -  	or a 
  858 D1:BEF5 C2 00 BF D1 	jp nz, start_breakaway_skip
  859 D1:BEF9 -  -  -  -  	;if timer is zero, set to 1 
  860 D1:BEF9 3E 01 -  -  	ld a,1 
  861 D1:BEFB 77 -  -  -  	ld (hl),a 
  862 D1:BEFC C3 08 BF D1 	jp not_breakaway ;platform is solid 
  863 D1:BF00 -  -  -  -  start_breakaway_skip:
  864 D1:BF00 E1 -  -  -  	pop hl 
  865 D1:BF01 E6 E0 -  -  	and %11100000 ;check if >32 
  866 D1:BF03 C2 9D BF D1 	jp nz, check_col_skip_0
  867 D1:BF07 -  -  -  -  	;otherwise platform still solid 
  868 D1:BF07 E5 -  -  -  	push hl 
  869 D1:BF08 -  -  -  -  not_breakaway:
  870 D1:BF08 -  -  -  -  
  871 D1:BF08 -  -  -  -  	;Plyaer has moved down and hit non spike object 
  872 D1:BF08 -  -  -  -  	;Set velocity to 0 
  873 D1:BF08 21 00 00 00 	ld hl,0
  874 D1:BF0C 22 EB BF D1 	ld (player_x_vel),hl 
  875 D1:BF10 22 EE BF D1 	ld (player_y_vel),hl 
  876 D1:BF14 2A F4 BF D1 	ld hl, (player_y_pos_prev) ;revert to previous y pos 
  877 D1:BF18 22 E8 BF D1 	ld (player_y_pos),hl 
  878 D1:BF1C 22 F7 BF D1 	ld (player_last_ground_pos),hl
  879 D1:BF20 -  -  -  -  	;call write_hl_to_ram
  880 D1:BF20 E1 -  -  -  	pop hl 
  881 D1:BF21 -  -  -  -  	
  882 D1:BF21 3A FE BF D1 	ld a,(player_flags)
  883 D1:BF25 CB F7 -  -  	set 6,a  ;set ground flag 
  884 D1:BF27 CB 97 -  -  	res 2,a ;reset tongue flag (cancel tongue if landed)
  885 D1:BF29 32 FE BF D1 	ld (player_flags),a
  886 D1:BF2D C3 9D BF D1 	jp check_col_skip_0 ;continue 
  887 D1:BF31 -  -  -  -  
  888 D1:BF31 -  -  -  -  
  889 D1:BF31 -  -  -  -  
  890 D1:BF31 -  -  -  -  
  891 D1:BF31 -  -  -  -  
  892 D1:BF31 -  -  -  -  collision_spikes:
  893 D1:BF31 E5 -  -  -  	push hl
  894 D1:BF32 -  -  -  -  	;player has collided with spikes 
  895 D1:BF32 CD 41 BF D1 	call spike_hit_bounce
  896 D1:BF36 3E 01 -  -  	ld a,1
  897 D1:BF38 32 03 C0 D1 	ld (fall_num_bounces),a 
  898 D1:BF3C E1 -  -  -  	pop hl 
  899 D1:BF3D C3 9D BF D1 	jp check_col_skip_0
  900 D1:BF41 -  -  -  -  
  901 D1:BF41 -  -  -  -  
  902 D1:BF41 -  -  -  -  spike_hit_bounce:
  903 D1:BF41 21 80 00 00 	ld hl,$000080
  904 D1:BF45 22 EE BF D1 	ld (player_y_vel),hl 
  905 D1:BF49 CD C8 BF D1 	call random_val
  906 D1:BF4D CB 47 -  -  	bit 0, a 
  907 D1:BF4F C2 64 BF D1 	jp nz, spike_negative_bounce
  908 D1:BF53 21 00 00 00 	ld hl,0
  909 D1:BF57 E6 C0 -  -  	and %11000000 ;pull 2 bits of a for velocity
  910 D1:BF59 F6 30 -  -  	or  %00110000
  911 D1:BF5B 6F -  -  -  	ld l,a 
  912 D1:BF5C 22 EB BF D1 	ld (player_x_vel),hl
  913 D1:BF60 C3 71 BF D1 	jp spike_pos_bounce
  914 D1:BF64 -  -  -  -  spike_negative_bounce:
  915 D1:BF64 21 FF FF FF 	ld hl,$ffffff
  916 D1:BF68 E6 C0 -  -  	and %11000000 ;pull 2 bits of a for velocity
  917 D1:BF6A F6 0F -  -  	or  %00001111
  918 D1:BF6C 6F -  -  -  	ld l,a 
  919 D1:BF6D 22 EB BF D1 	ld (player_x_vel),hl
  920 D1:BF71 -  -  -  -  spike_pos_bounce:
  921 D1:BF71 3A FE BF D1 	ld a,(player_flags)
  922 D1:BF75 CB DF -  -  	set 3,a  ;set fall flag 
  923 D1:BF77 CB 97 -  -  	res 2,a ;reset tongue flag
  924 D1:BF79 32 FE BF D1 	ld (player_flags),a 
  925 D1:BF7D -  -  -  -  	;Set spike hit height 
  926 D1:BF7D 2A E8 BF D1 	ld hl, (player_y_pos)
  927 D1:BF81 11 00 FF 00 	ld de, $00ff00 ;fall minimum of 256px 
  928 D1:BF85 ED 52 -  -  	sbc hl,de 
  929 D1:BF87 D2 8F BF D1 	jp nc, spike_bounce_min_height_threshold
  930 D1:BF8B 21 00 00 00 	ld hl,0
  931 D1:BF8F -  -  -  -  spike_bounce_min_height_threshold:
  932 D1:BF8F 11 00 43 00 	ld de, $004300  ;minimum spike height threshold (bottom of map)
  933 D1:BF93 19 -  -  -  	add hl,de 
  934 D1:BF94 22 00 C0 D1 	ld (spike_hit_height),hl 
  935 D1:BF98 -  -  -  -  	;call write_hl_to_ram
  936 D1:BF98 C9 -  -  -  	ret 
  937 D1:BF99 -  -  -  -  
  938 D1:BF99 -  -  -  -  
  939 D1:BF99 -  -  -  -  check_col_skip_4:
  940 D1:BF99 23 -  -  -  	inc hl ;to height
  941 D1:BF9A -  -  -  -  check_col_skip_3:
  942 D1:BF9A 23 -  -  -  	inc hl ;to xmax
  943 D1:BF9B -  -  -  -  check_col_skip_2:	
  944 D1:BF9B 23 -  -  -  	inc hl ;to xmin
  945 D1:BF9C -  -  -  -  check_col_skip_1:	
  946 D1:BF9C 23 -  -  -  	inc hl ;to flags
  947 D1:BF9D -  -  -  -  check_col_skip_0:
  948 D1:BF9D 23 -  -  -  	inc hl ;to next element
  949 D1:BF9E -  -  -  -  	
  950 D1:BF9E 37 -  -  -  	scf 
  951 D1:BF9F -  -  -  -  check_col_lower_jump .equ $
  952 D1:BF9F DA 47 BD D1 	jp c, check_collisions_same_loop
  953 D1:BFA3 C3 77 BD D1 	jp check_collisions_lower_loop
  954 D1:BFA7 -  -  -  -  
  955 D1:BFA7 -  -  -  -  
  956 D1:BFA7 -  -  -  -  
  957 D1:BFA7 -  -  -  -  reverse_x_vel:;bounce player off wall
  958 D1:BFA7 2A EB BF D1 	ld hl,(player_x_vel)
  959 D1:BFAB EB -  -  -  	ex de,hl 
  960 D1:BFAC 21 00 00 00 	ld hl,0
  961 D1:BFB0 ED 52 -  -  	sbc hl, de  
  962 D1:BFB2 -  -  -  -  	
  963 D1:BFB2 7C -  -  -  	ld a,h
  964 D1:BFB3 E6 80 -  -  	and %10000000
  965 D1:BFB5 CB 3C -  -  	srl h ;div by 2 
  966 D1:BFB7 CB 1D -  -  	rr l 
  967 D1:BFB9 B4 -  -  -  	or h ;keeps bit 7 the same 
  968 D1:BFBA 67 -  -  -  	ld h,a 
  969 D1:BFBB -  -  -  -  
  970 D1:BFBB 22 EB BF D1 	ld (player_x_vel),hl 
  971 D1:BFBF 2A F1 BF D1 	ld hl, (player_x_pos_prev) ;revert to previous x pos 
  972 D1:BFC3 22 E5 BF D1 	ld (player_x_pos),hl 
  973 D1:BFC7 C9 -  -  -  	ret 
  974 D1:BFC8 -  -  -  -  
  975 D1:BFC8 -  -  -  -  
  976 D1:BFC8 -  -  -  -  
  977 D1:BFC8 -  -  -  -  random_val:
  978 D1:BFC8 3A E8 BF D1 	ld a, (player_y_pos)
  979 D1:BFCC 4F -  -  -  	ld c,a 
  980 D1:BFCD 3A 00 00 F2 	ld a,($F20000) ;fast timer 
  981 D1:BFD1 A9 -  -  -  	xor c
  982 D1:BFD2 C9 -  -  -  	ret 
  983 D1:BFD3 -  -  -  -  
  984 D1:BFD3 -  -  -  -  player_x_half:
  985 D1:BFD3 3A E6 BF D1 	ld a,(player_x_pos+1);Fullpixels
  986 D1:BFD7 CB 3F -  -  	srl a ;div by 2 
  987 D1:BFD9 47 -  -  -  	ld b,a 
  988 D1:BFDA 3A E7 BF D1 	ld a,(player_x_pos+2);MSB fullpixel 
  989 D1:BFDE 0F -  -  -  	rrca ;Move bit 0 to bit 7
  990 D1:BFDF B0 -  -  -  	or b 
  991 D1:BFE0 C9 -  -  -  	ret 
  992 D1:BFE1 -  -  -  -  
  993 D1:BFE1 -  -  -  -  
  994 D1:BFE1 -  -  -  -  jump_strength_up:
  995 D1:BFE1 00 -  -  -  	.db 0 
  996 D1:BFE2 -  -  -  -  jump_strength_right:
  997 D1:BFE2 00 -  -  -  	.db 0 
  998 D1:BFE3 -  -  -  -  jump_strength_left:
  999 D1:BFE3 00 -  -  -  	.db 0
 1000 D1:BFE4 -  -  -  -  jump_charge_timer:
 1001 D1:BFE4 00 -  -  -  	.db 0 
 1002 D1:BFE5 -  -  -  -  
 1003 D1:BFE5 -  -  -  -  	
 1004 D1:BFE5 -  -  -  -  timer_max_val .equ 32
 1005 D1:BFE5 -  -  -  -  
 1006 D1:BFE5 -  -  -  -  player_collider_height .equ 18
 1007 D1:BFE5 -  -  -  -  player_collider_width .equ 20 ;width -1 
 1008 D1:BFE5 -  -  -  -  
 1009 D1:BFE5 -  -  -  -  
 1010 D1:BFE5 -  -  -  -  player_x_pos:
 1011 D1:BFE5 00 00 00 -  	.dl 0 ; (MSB fullpixel, Fullpixels, subpixels)
 1012 D1:BFE8 -  -  -  -  	
 1013 D1:BFE8 -  -  -  -  player_y_pos:
 1014 D1:BFE8 00 00 00 -  	.dl 0 ; (Frame #, Fullpixels, subpixels)
 1015 D1:BFEB -  -  -  -  
 1016 D1:BFEB -  -  -  -  player_x_vel:
 1017 D1:BFEB 00 00 00 -  	.dl 0 ; (Unused, Fullpixels, subpixels)
 1018 D1:BFEE -  -  -  -  	
 1019 D1:BFEE -  -  -  -  player_y_vel:
 1020 D1:BFEE 00 00 00 -  	.dl 0 ; (Unused, Fullpixels, subpixels)
 1021 D1:BFF1 -  -  -  -  
 1022 D1:BFF1 -  -  -  -  
 1023 D1:BFF1 -  -  -  -  player_x_pos_prev: ;x position before update, revert to this if collision 
 1024 D1:BFF1 00 00 00 -  	.dl 0 ; (MSB fullpixel, Fullpixels, subpixels)
 1025 D1:BFF4 -  -  -  -  	
 1026 D1:BFF4 -  -  -  -  player_y_pos_prev: ;y position before update, revert to this if collision :
 1027 D1:BFF4 00 00 00 -  	.dl 0 ; (Frame #, Fullpixels, subpixels)
 1028 D1:BFF7 -  -  -  -  
 1029 D1:BFF7 -  -  -  -  player_last_ground_pos:
 1030 D1:BFF7 00 00 00 -  	.dl 0
 1031 D1:BFFA -  -  -  -  
 1032 D1:BFFA -  -  -  -  tongue_ring_y_pos:
 1033 D1:BFFA 00 00 00 -  	.dl 0
 1034 D1:BFFD -  -  -  -  tongue_ring_x_pos:
 1035 D1:BFFD 00 -  -  -  	.db 0	
 1036 D1:BFFE -  -  -  -  tongue_max_length .equ 90
 1037 D1:BFFE -  -  -  -  
 1038 D1:BFFE -  -  -  -  player_flags:
 1039 D1:BFFE 00 -  -  -  	.db %00000000 ; (7 = Any jump button held, 6 = on ground,5 = within semisolid, 4 = in semisolid last update, 3= isfalling, 2 = tongueActive, 1 = lastDirection(1=right))
 1040 D1:BFFF 00 -  -  -  	.db %00000000 ; 7= cam move up, 6 = cam move down
 1041 D1:C000 -  -  -  -  spike_hit_height:
 1042 D1:C000 00 00 00 -  	.dl 0 ;Height where player can land after hitting spike
 1043 D1:C003 -  -  -  -  fall_num_bounces:
 1044 D1:C003 00 -  -  -  	.db 0 ;Number of times player has had unlucky bounce
 1045 D1:C004 -  -  -  -  tongue_extend_timer:
 1046 D1:C004 00 -  -  -  	.db 0 ;Timer for extend tongue anim
 1047 D1:C005 -  -  -  -  
 1048 D1:C005 -  -  -  -  
 1049 D1:C005 -  -  -  -  breakaway_timer_update:
 1050 D1:C005 21 9D C0 D1 	ld hl, breakaway_timers + 1
 1051 D1:C009 D9 -  -  -  	exx 
 1052 D1:C00A 21 AC C0 D1 	ld hl, breakaway_sprite_data_table
 1053 D1:C00E D9 -  -  -  	exx 
 1054 D1:C00F 06 0F -  -  	ld b, 15 
 1055 D1:C011 -  -  -  -  breakaway_timer_update_loop:
 1056 D1:C011 7E -  -  -  	ld a,(hl)
 1057 D1:C012 -  -  -  -  	;call write_a_to_ram
 1058 D1:C012 -  -  -  -  	;call prgmpause
 1059 D1:C012 B7 -  -  -  	or a 
 1060 D1:C013 CA 19 C0 D1 	jp z, breakaway_timer_update_loop_skip ;not being stood on
 1061 D1:C017 3C -  -  -  	inc a 
 1062 D1:C018 77 -  -  -  	ld (hl),a 
 1063 D1:C019 -  -  -  -  breakaway_timer_update_loop_skip:
 1064 D1:C019 -  -  -  -  
 1065 D1:C019 -  -  -  -  	;a holds timer val 
 1066 D1:C019 FE 0A -  -  	cp 10 
 1067 D1:C01B DA 31 C0 D1 	jp c, breakaway_platform_set_sprite_0
 1068 D1:C01F FE 14 -  -  	cp 20 
 1069 D1:C021 DA 41 C0 D1 	jp c, breakaway_platform_set_sprite_1
 1070 D1:C025 FE 20 -  -  	cp 32
 1071 D1:C027 DA 51 C0 D1 	jp c, breakaway_platform_set_sprite_2
 1072 D1:C02B 3C -  -  -  	inc a 
 1073 D1:C02C 77 -  -  -  	ld (hl),a 
 1074 D1:C02D C3 61 C0 D1 	jp breakaway_platform_set_sprite_3
 1075 D1:C031 -  -  -  -  
 1076 D1:C031 -  -  -  -  breakaway_platform_set_sprite_0:
 1077 D1:C031 3E 03 -  -  	ld a,3 
 1078 D1:C033 32 83 C0 D1 	ld (breakaway_set_sprite_number),a 
 1079 D1:C037 3E 04 -  -  	ld a,4
 1080 D1:C039 32 87 C0 D1 	ld (breakaway_set_sprite_number_2),a 
 1081 D1:C03D C3 71 C0 D1 	jp breakaway_platform_set_sprites
 1082 D1:C041 -  -  -  -  
 1083 D1:C041 -  -  -  -  breakaway_platform_set_sprite_1:
 1084 D1:C041 3E 04 -  -  	ld a,4 
 1085 D1:C043 32 83 C0 D1 	ld (breakaway_set_sprite_number),a 
 1086 D1:C047 3E 03 -  -  	ld a,3
 1087 D1:C049 32 87 C0 D1 	ld (breakaway_set_sprite_number_2),a 
 1088 D1:C04D C3 71 C0 D1 	jp breakaway_platform_set_sprites
 1089 D1:C051 -  -  -  -  
 1090 D1:C051 -  -  -  -  breakaway_platform_set_sprite_2:
 1091 D1:C051 3E 05 -  -  	ld a,5 
 1092 D1:C053 32 83 C0 D1 	ld (breakaway_set_sprite_number),a 
 1093 D1:C057 3E 02 -  -  	ld a,2
 1094 D1:C059 32 87 C0 D1 	ld (breakaway_set_sprite_number_2),a 
 1095 D1:C05D C3 71 C0 D1 	jp breakaway_platform_set_sprites
 1096 D1:C061 -  -  -  -  
 1097 D1:C061 -  -  -  -  breakaway_platform_set_sprite_3:
 1098 D1:C061 3E 06 -  -  	ld a,6 
 1099 D1:C063 32 83 C0 D1 	ld (breakaway_set_sprite_number),a 
 1100 D1:C067 3E 01 -  -  	ld a,1
 1101 D1:C069 32 87 C0 D1 	ld (breakaway_set_sprite_number_2),a 
 1102 D1:C06D C3 71 C0 D1 	jp breakaway_platform_set_sprites	
 1103 D1:C071 -  -  -  -  	
 1104 D1:C071 -  -  -  -  breakaway_platform_set_sprites:	
 1105 D1:C071 D9 -  -  -  	exx ;in shadow
 1106 D1:C072 E5 -  -  -  	push hl 
 1107 D1:C073 ED 27 -  -  	ld hl,(hl) ;hl pts to number of platforms with this index 
 1108 D1:C075 46 -  -  -  	ld b,(hl) ;num platforms
 1109 D1:C076 2B -  -  -  	dec hl 
 1110 D1:C077 2B -  -  -  	dec hl 
 1111 D1:C078 04 -  -  -  	inc b 
 1112 D1:C079 -  -  -  -  breakaway_platform_set_sprites_loop:
 1113 D1:C079 11 00 00 00 	ld de,0
 1114 D1:C07D 05 -  -  -  	dec b 
 1115 D1:C07E CA 90 C0 D1 	jp z,breakaway_platform_return_timer_loop
 1116 D1:C082 -  -  -  -  breakaway_set_sprite_number .equ $ + 1
 1117 D1:C082 1E 00 -  -  	ld e,0
 1118 D1:C084 19 -  -  -  	add hl,de 
 1119 D1:C085 7E -  -  -  	ld a,(hl) ; sprite index 
 1120 D1:C086 -  -  -  -  	;call write_a_to_ram
 1121 D1:C086 -  -  -  -  breakaway_set_sprite_number_2 .equ $ + 1
 1122 D1:C086 1E 00 -  -  	ld e,0
 1123 D1:C088 19 -  -  -  	add hl,de ;data location 
 1124 D1:C089 ED 17 -  -  	ld de,(hl)
 1125 D1:C08B 12 -  -  -  	ld (de),a ;set sprite value in level data 
 1126 D1:C08C -  -  -  -  	;call prgmpause
 1127 D1:C08C C3 79 C0 D1 	jp breakaway_platform_set_sprites_loop
 1128 D1:C090 -  -  -  -  	
 1129 D1:C090 -  -  -  -  
 1130 D1:C090 -  -  -  -  breakaway_platform_return_timer_loop:
 1131 D1:C090 E1 -  -  -  	pop hl 
 1132 D1:C091 23 -  -  -  	inc hl 
 1133 D1:C092 23 -  -  -  	inc hl 
 1134 D1:C093 23 -  -  -  	inc hl
 1135 D1:C094 D9 -  -  -  	exx ;out
 1136 D1:C095 23 -  -  -  	inc hl 
 1137 D1:C096 05 -  -  -  	dec b 
 1138 D1:C097 C2 11 C0 D1 	jp nz,breakaway_timer_update_loop
 1139 D1:C09B -  -  -  -  	
 1140 D1:C09B C9 -  -  -  	ret 
 1141 D1:C09C -  -  -  -  
 1142 D1:C09C -  -  -  -  	
 1143 D1:C09C -  -  -  -  breakaway_timers: ;If not zero, count up by 1 every frame, solid when timer btwn 0-32
 1144 D1:C09C 00 -  -  -  	.db 0 ;Unused
 1145 D1:C09D 00 -  -  -  	.db 0
 1146 D1:C09E 01 -  -  -  	.db 1
 1147 D1:C09F 00 -  -  -  	.db 0
 1148 D1:C0A0 00 -  -  -  	.db 0
 1149 D1:C0A1 00 -  -  -  	.db 0
 1150 D1:C0A2 00 -  -  -  	.db 0
 1151 D1:C0A3 00 -  -  -  	.db 0
 1152 D1:C0A4 00 -  -  -  	.db 0
 1153 D1:C0A5 00 -  -  -  	.db 0
 1154 D1:C0A6 00 -  -  -  	.db 0
 1155 D1:C0A7 00 -  -  -  	.db 0
 1156 D1:C0A8 00 -  -  -  	.db 0
 1157 D1:C0A9 00 -  -  -  	.db 0
 1158 D1:C0AA 00 -  -  -  	.db 0
 1159 D1:C0AB 00 -  -  -  	.db 0
 1160 D1:C0AC -  -  -  -  
 1161 D1:C0AC -  -  -  -  breakaway_sprite_data_table:
 1162 D1:C0AC B9 04 D2 -  	.dl breakaway_platform_data_0
 1163 D1:C0AF BA 04 D2 -  	.dl breakaway_platform_data_1
 1164 D1:C0B2 BB 04 D2 -  	.dl breakaway_platform_data_2
 1165 D1:C0B5 BC 04 D2 -  	.dl breakaway_platform_data_3
 1166 D1:C0B8 BD 04 D2 -  	.dl breakaway_platform_data_4
 1167 D1:C0BB BE 04 D2 -  	.dl breakaway_platform_data_5
 1168 D1:C0BE BF 04 D2 -  	.dl breakaway_platform_data_6
 1169 D1:C0C1 C0 04 D2 -  	.dl breakaway_platform_data_7
 1170 D1:C0C4 C1 04 D2 -  	.dl breakaway_platform_data_8
 1171 D1:C0C7 C2 04 D2 -  	.dl breakaway_platform_data_9
 1172 D1:C0CA C3 04 D2 -  	.dl breakaway_platform_data_10
 1173 D1:C0CD C4 04 D2 -  	.dl breakaway_platform_data_11
 1174 D1:C0D0 C5 04 D2 -  	.dl breakaway_platform_data_12
 1175 D1:C0D3 C6 04 D2 -  	.dl breakaway_platform_data_13
 1176 D1:C0D6 C7 04 D2 -  	.dl breakaway_platform_data_14
 1177 D1:C0D9 -  -  -  -  	
 1178 D1:C0D9 -  -  -  -  	
 1179 D1:C0D9 -  -  -  -  	
 1180 D1:C0D9 -  -  -  -  	
 1181 D1:C0D9 -  -  -  -  player_move_debug:
 1182 D1:C0D9 -  -  -  -  ;DEBUG MODE ============================================================================= 
 1183 D1:C0D9 21 00 00 F5 	ld	hl,DI_Mode		; register for keypad mode
 1184 D1:C0DD 36 02 -  -  	ld	(hl),2			; set single scan mode
 1185 D1:C0DF AF -  -  -  	xor	a,a
 1186 D1:C0E0 -  -  -  -  dbg_scan_wait:
 1187 D1:C0E0 BE -  -  -  	cp	a,(hl)			; wait for keypad idle mode
 1188 D1:C0E1 20 FD -  -  	jr	nz,dbg_scan_wait
 1189 D1:C0E3 -  -  -  -  	
 1190 D1:C0E3 3A 1A 00 F5 	ld a,(kbdG5)
 1191 D1:C0E7 CB 57 -  -  	bit kbit6,a 
 1192 D1:C0E9 C2 1F C1 D1 	jp nz, player_move_debug_right
 1193 D1:C0ED -  -  -  -  	
 1194 D1:C0ED 3A 16 00 F5 	ld a,(kbdG3)
 1195 D1:C0F1 CB 57 -  -  	bit kbit4,a 
 1196 D1:C0F3 C2 0C C1 D1 	jp nz, player_move_debug_left
 1197 D1:C0F7 -  -  -  -  	
 1198 D1:C0F7 3A 18 00 F5 	ld a,(kbdG4)
 1199 D1:C0FB CB 4F -  -  	bit kbit2,a 
 1200 D1:C0FD C2 43 C1 D1 	jp nz, player_move_debug_down 
 1201 D1:C101 -  -  -  -  	
 1202 D1:C101 3A 18 00 F5 	ld a,(kbdG4)
 1203 D1:C105 CB 5F -  -  	bit kbit8,a 
 1204 D1:C107 C2 31 C1 D1 	jp nz, player_move_debug_up
 1205 D1:C10B -  -  -  -  	
 1206 D1:C10B C9 -  -  -  	ret 
 1207 D1:C10C -  -  -  -  	
 1208 D1:C10C -  -  -  -  	
 1209 D1:C10C -  -  -  -  
 1210 D1:C10C -  -  -  -  
 1211 D1:C10C -  -  -  -  player_move_debug_left:
 1212 D1:C10C 2A E5 BF D1 	ld hl,(player_x_pos)
 1213 D1:C110 01 80 00 00 	ld bc, 128
 1214 D1:C114 ED 42 -  -  	sbc hl,bc 
 1215 D1:C116 22 E5 BF D1 	ld (player_x_pos),hl 
 1216 D1:C11A CD 26 BD D1 	call check_collisions
 1217 D1:C11E C9 -  -  -  	ret 
 1218 D1:C11F -  -  -  -  
 1219 D1:C11F -  -  -  -  player_move_debug_right:
 1220 D1:C11F 2A E5 BF D1 	ld hl,(player_x_pos)
 1221 D1:C123 01 80 00 00 	ld bc, 128
 1222 D1:C127 09 -  -  -  	add hl,bc 
 1223 D1:C128 22 E5 BF D1 	ld (player_x_pos),hl 
 1224 D1:C12C CD 26 BD D1 	call check_collisions
 1225 D1:C130 C9 -  -  -  	ret 
 1226 D1:C131 -  -  -  -  
 1227 D1:C131 -  -  -  -  player_move_debug_up:
 1228 D1:C131 2A E8 BF D1 	ld hl,(player_y_pos)
 1229 D1:C135 01 80 00 00 	ld bc, 128
 1230 D1:C139 09 -  -  -  	add hl,bc 
 1231 D1:C13A 22 E8 BF D1 	ld (player_y_pos),hl 
 1232 D1:C13E CD 26 BD D1 	call check_collisions
 1233 D1:C142 C9 -  -  -  	ret 
 1234 D1:C143 -  -  -  -  
 1235 D1:C143 -  -  -  -  player_move_debug_down:
 1236 D1:C143 2A E8 BF D1 	ld hl,(player_y_pos)
 1237 D1:C147 01 80 00 00 	ld bc, 128
 1238 D1:C14B ED 42 -  -  	sbc hl,bc 
 1239 D1:C14D 22 E8 BF D1 	ld (player_y_pos),hl 
 1240 D1:C151 CD 26 BD D1 	call check_collisions
 1241 D1:C155 C9 -  -  -  	ret
Listing for file "ascent.asm"
  610 D1:C156 -  -  -  -  #include "PlayerDraw.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\PlayerDraw.txt"
    1 D1:C156 -  -  -  -  
    2 D1:C156 -  -  -  -  
    3 D1:C156 -  -  -  -  desired_cam_pos: ;Target position, can smoothly move cam to here 
    4 D1:C156 00 00 00 -  	.dl 0
    5 D1:C159 -  -  -  -  
    6 D1:C159 -  -  -  -  player_move_cam:
    7 D1:C159 -  -  -  -  	;cam follow player 
    8 D1:C159 -  -  -  -  	;if player on ground, scroll up to keep player near bottom of screen, 90px
    9 D1:C159 -  -  -  -  	;if player below last grounded pos, desired cam pos = 150px
   10 D1:C159 -  -  -  -  	;if player is near top of screen, scroll up 
   11 D1:C159 -  -  -  -  	
   12 D1:C159 -  -  -  -  	;if player using tounge scroll up
   13 D1:C159 -  -  -  -  	
   14 D1:C159 -  -  -  -  	
   15 D1:C159 3A FE BF D1 	ld a,(player_flags)
   16 D1:C15D CB 77 -  -  	bit 6,a ;ground flag 
   17 D1:C15F C2 9F C1 D1 	jp nz, pmc_grounded
   18 D1:C163 CB 5F -  -  	bit 3,a ;is falling 
   19 D1:C165 C2 CA C1 D1 	jp nz, pmc_falling
   20 D1:C169 -  -  -  -  	;otherwise, check if player below last grounded pos 
   21 D1:C169 2A F7 BF D1 	ld hl,(player_last_ground_pos)
   22 D1:C16D EB -  -  -  	ex de,hl 
   23 D1:C16E 2A E8 BF D1 	ld hl,(player_y_pos)
   24 D1:C172 ED 52 -  -  	sbc hl,de 
   25 D1:C174 DA 12 C2 D1 	jp c, pmc_below_last_ground
   26 D1:C178 -  -  -  -  	
   27 D1:C178 -  -  -  -  	
   28 D1:C178 -  -  -  -  	;Check if player is near top or bottom of screen
   29 D1:C178 2A EE AB D1 	ld hl, (cam_pos)
   30 D1:C17C E5 -  -  -  	push hl
   31 D1:C17D CD 59 C5 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
   32 D1:C181 D1 -  -  -  	pop de 	
   33 D1:C182 ED 52 -  -  	sbc hl,de ;max cam pos - current cam pos 
   34 D1:C184 -  -  -  -  	;hl holds how far up to move cam to have player at bottom = how far player is above bottom of screen
   35 D1:C184 E5 -  -  -  	push hl 
   36 D1:C185 DA 2D C2 D1 	jp c, pmc_player_near_bottom ;player is below screen, need to move cam down
   37 D1:C189 11 0A 00 00 	ld de,10
   38 D1:C18D ED 52 -  -  	sbc hl,de ;check if within 10px of screen bottom 
   39 D1:C18F DA 2D C2 D1 	jp c,pmc_player_near_bottom 
   40 D1:C193 -  -  -  -  	
   41 D1:C193 E1 -  -  -  	pop hl 
   42 D1:C194 11 F0 00 00 	ld de,240
   43 D1:C198 ED 52 -  -  	sbc hl,de 
   44 D1:C19A D2 45 C2 D1 	jp nc, pmc_player_near_top
   45 D1:C19E -  -  -  -  	
   46 D1:C19E -  -  -  -  	;no cam move needed 
   47 D1:C19E C9 -  -  -  	ret 
   48 D1:C19F -  -  -  -  	
   49 D1:C19F -  -  -  -  	
   50 D1:C19F -  -  -  -  pmc_grounded:
   51 D1:C19F -  -  -  -  
   52 D1:C19F 3A FF BF D1 	ld a,(player_flags+1);camera control flags 
   53 D1:C1A3 CB 7F -  -  	bit 7,a 
   54 D1:C1A5 C2 E5 C1 D1 	jp nz,pmc_camscroll_up
   55 D1:C1A9 CB 77 -  -  	bit 6,a 
   56 D1:C1AB C2 F7 C1 D1 	jp nz,pmc_camscroll_down
   57 D1:C1AF -  -  -  -  	;If player on ground, desired cam pos = 90px below player 
   58 D1:C1AF CD 59 C5 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
   59 D1:C1B3 11 5A 00 00 	ld de,90
   60 D1:C1B7 ED 52 -  -  	sbc hl,de
   61 D1:C1B9 D2 C1 C1 D1 	jp nc, set_desired_pos_0_skip
   62 D1:C1BD 21 00 00 00 	ld hl,0
   63 D1:C1C1 -  -  -  -  set_desired_pos_0_skip:
   64 D1:C1C1 22 56 C1 D1 	ld (desired_cam_pos),hl 
   65 D1:C1C5 CD 54 C2 D1 	call pmc_move_towards_desired_pos
   66 D1:C1C9 C9 -  -  -  	ret 
   67 D1:C1CA -  -  -  -  
   68 D1:C1CA -  -  -  -  
   69 D1:C1CA -  -  -  -  pmc_falling:
   70 D1:C1CA CD 59 C5 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
   71 D1:C1CE 11 DC 00 00 	ld de,220
   72 D1:C1D2 ED 52 -  -  	sbc hl,de
   73 D1:C1D4 D2 C1 C1 D1 	jp nc, set_desired_pos_0_skip
   74 D1:C1D8 21 00 00 00 	ld hl,0
   75 D1:C1DC 22 56 C1 D1 	ld (desired_cam_pos),hl 
   76 D1:C1E0 CD 54 C2 D1 	call pmc_move_towards_desired_pos
   77 D1:C1E4 C9 -  -  -  	ret 
   78 D1:C1E5 -  -  -  -  
   79 D1:C1E5 -  -  -  -  pmc_camscroll_up:
   80 D1:C1E5 CD 59 C5 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
   81 D1:C1E9 11 40 01 00 	ld de,320
   82 D1:C1ED 19 -  -  -  	add hl,de 
   83 D1:C1EE 22 56 C1 D1 	ld (desired_cam_pos),hl 
   84 D1:C1F2 CD 54 C2 D1 	call pmc_move_towards_desired_pos
   85 D1:C1F6 C9 -  -  -  	ret
   86 D1:C1F7 -  -  -  -  
   87 D1:C1F7 -  -  -  -  pmc_camscroll_down:
   88 D1:C1F7 CD 59 C5 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
   89 D1:C1FB 11 04 01 00 	ld de,260
   90 D1:C1FF ED 52 -  -  	sbc hl,de 
   91 D1:C201 D2 C1 C1 D1 	jp nc, set_desired_pos_0_skip
   92 D1:C205 21 00 00 00 	ld hl,0
   93 D1:C209 22 56 C1 D1 	ld (desired_cam_pos),hl 
   94 D1:C20D CD 54 C2 D1 	call pmc_move_towards_desired_pos
   95 D1:C211 C9 -  -  -  	ret
   96 D1:C212 -  -  -  -  
   97 D1:C212 -  -  -  -  pmc_below_last_ground:
   98 D1:C212 -  -  -  -  	;if below last ground pos, deired pos = 150px 
   99 D1:C212 CD 59 C5 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
  100 D1:C216 11 96 00 00 	ld de,150
  101 D1:C21A ED 52 -  -  	sbc hl,de 
  102 D1:C21C D2 C1 C1 D1 	jp nc, set_desired_pos_0_skip
  103 D1:C220 21 00 00 00 	ld hl,0
  104 D1:C224 22 56 C1 D1 	ld (desired_cam_pos),hl 
  105 D1:C228 CD 54 C2 D1 	call pmc_move_towards_desired_pos
  106 D1:C22C C9 -  -  -  	ret
  107 D1:C22D -  -  -  -  
  108 D1:C22D -  -  -  -  
  109 D1:C22D -  -  -  -  pmc_player_near_bottom: ;need to set cam to 10px from bottom
  110 D1:C22D E1 -  -  -  	pop hl
  111 D1:C22E CD 59 C5 D1 	call player_to_cam_coords
  112 D1:C232 11 0C 00 00 	ld de,12
  113 D1:C236 ED 52 -  -  	sbc hl,de 
  114 D1:C238 D2 80 C2 D1 	jp nc,set_cam_0_skip
  115 D1:C23C 21 00 00 00 	ld hl,0 ;prevents bottoming out
  116 D1:C240 22 EE AB D1 	ld (cam_pos),hl 
  117 D1:C244 C9 -  -  -  	ret 
  118 D1:C245 -  -  -  -  	
  119 D1:C245 -  -  -  -  pmc_player_near_top: ;need to set cam to 10px from top
  120 D1:C245 CD 59 C5 D1 	call player_to_cam_coords
  121 D1:C249 11 F0 00 00 	ld de,240
  122 D1:C24D ED 52 -  -  	sbc hl,de 
  123 D1:C24F 22 EE AB D1 	ld (cam_pos),hl 
  124 D1:C253 -  -  -  -  	
  125 D1:C253 C9 -  -  -  	ret 
  126 D1:C254 -  -  -  -  
  127 D1:C254 -  -  -  -  
  128 D1:C254 -  -  -  -  pmc_move_towards_desired_pos: 
  129 D1:C254 -  -  -  -  	;moves cam closer to desired cam pos. Speed proportinal to difference btwn current and desired 
  130 D1:C254 2A 56 C1 D1 	ld hl,(desired_cam_pos)
  131 D1:C258 -  -  -  -  	;call write_hl_to_ram
  132 D1:C258 EB -  -  -  	ex de,hl 
  133 D1:C259 2A EE AB D1 	ld hl,(cam_pos)
  134 D1:C25D ED 52 -  -  	sbc hl,de 
  135 D1:C25F DA 85 C2 D1 	jp c, pmc_move_towards_up
  136 D1:C263 -  -  -  -  	;else move cam down 
  137 D1:C263 7D -  -  -  	ld a,l 
  138 D1:C264 11 00 00 00 	ld de,0 
  139 D1:C268 CD A1 C2 D1 	call pmc_set_speed
  140 D1:C26C 7C -  -  -  	ld a,h 
  141 D1:C26D B7 -  -  -  	or a ;if h is nonzero >256px difference
  142 D1:C26E C4 CE C2 D1 	call nz,pmc_max_speed ;set max speed
  143 D1:C272 2A EE AB D1 	ld hl,(cam_pos)
  144 D1:C276 ED 52 -  -  	sbc hl,de ;add speed to cam pos 
  145 D1:C278 -  -  -  -  	
  146 D1:C278 D2 80 C2 D1 	jp nc,set_cam_0_skip
  147 D1:C27C 21 00 00 00 	ld hl,0 ;prevents negative cam pos
  148 D1:C280 -  -  -  -  set_cam_0_skip:
  149 D1:C280 22 EE AB D1 	ld (cam_pos),hl 
  150 D1:C284 C9 -  -  -  	ret 
  151 D1:C285 -  -  -  -  	
  152 D1:C285 -  -  -  -  pmc_move_towards_up:
  153 D1:C285 -  -  -  -  	;hl holds difference btwn current and desired, is negative
  154 D1:C285 -  -  -  -  	;check bits of l to determine speed 
  155 D1:C285 7D -  -  -  	ld a,l 
  156 D1:C286 ED 44 -  -  	neg 
  157 D1:C288 11 00 00 00 	ld de,0
  158 D1:C28C CD A1 C2 D1 	call pmc_set_speed ;de holds px to add 
  159 D1:C290 7C -  -  -  	ld a,h 
  160 D1:C291 EE FF -  -  	xor %11111111 ;Check if h has zeros = >255 px difference 
  161 D1:C293 C4 CE C2 D1 	call nz,pmc_max_speed ;set max speed
  162 D1:C297 2A EE AB D1 	ld hl,(cam_pos)
  163 D1:C29B 19 -  -  -  	add hl,de ;add speed to cam pos 
  164 D1:C29C 22 EE AB D1 	ld (cam_pos),hl 
  165 D1:C2A0 -  -  -  -  	;call write_hl_to_ram
  166 D1:C2A0 C9 -  -  -  	ret 
  167 D1:C2A1 -  -  -  -  	
  168 D1:C2A1 -  -  -  -  
  169 D1:C2A1 -  -  -  -  
  170 D1:C2A1 -  -  -  -  
  171 D1:C2A1 -  -  -  -  pmc_set_speed: ;a holds magnitude of difference btwn current and desired pos 
  172 D1:C2A1 1E 00 -  -  	ld e, 0
  173 D1:C2A3 FE 03 -  -  	cp 3
  174 D1:C2A5 D8 -  -  -  	ret c ;difference < 3px
  175 D1:C2A6 1E 01 -  -  	ld e, 1
  176 D1:C2A8 FE 0A -  -  	cp 10
  177 D1:C2AA D8 -  -  -  	ret c ;difference < 8px
  178 D1:C2AB 1E 02 -  -  	ld e, 2
  179 D1:C2AD FE 14 -  -  	cp 20
  180 D1:C2AF D8 -  -  -  	ret c ;difference < 16px
  181 D1:C2B0 1E 03 -  -  	ld e, 3
  182 D1:C2B2 FE 1E -  -  	cp 30
  183 D1:C2B4 C8 -  -  -  	ret z ;difference < 24px
  184 D1:C2B5 1E 04 -  -  	ld e, 4
  185 D1:C2B7 FE 28 -  -  	cp 40
  186 D1:C2B9 D8 -  -  -  	ret c 
  187 D1:C2BA 1E 05 -  -  	ld e, 5
  188 D1:C2BC FE 37 -  -  	cp 55
  189 D1:C2BE D8 -  -  -  	ret c 
  190 D1:C2BF 1E 08 -  -  	ld e, 8
  191 D1:C2C1 FE 5A -  -  	cp 90
  192 D1:C2C3 D8 -  -  -  	ret c 
  193 D1:C2C4 1E 0C -  -  	ld e, 12
  194 D1:C2C6 FE 8C -  -  	cp 140
  195 D1:C2C8 D8 -  -  -  	ret c
  196 D1:C2C9 1E 14 -  -  	ld e, 20
  197 D1:C2CB FE FA -  -  	cp 250
  198 D1:C2CD D8 -  -  -  	ret c
  199 D1:C2CE -  -  -  -  pmc_max_speed:	
  200 D1:C2CE 1E 18 -  -  	ld e, 24 ;Max cam speed px/frame
  201 D1:C2D0 C9 -  -  -  	ret
  202 D1:C2D1 -  -  -  -  
  203 D1:C2D1 -  -  -  -  player_draw:
  204 D1:C2D1 -  -  -  -  ;Draw sprite and reset any flags 
  205 D1:C2D1 -  -  -  -  
  206 D1:C2D1 01 00 00 00 	ld bc,0 ;clear 
  207 D1:C2D5 -  -  -  -  	;bc is sprite index counter 
  208 D1:C2D5 -  -  -  -  	;default, charge, chargelit, jump, jumpmouth, fall
  209 D1:C2D5 -  -  -  -  	;Add 4 for sprite, add 2 for flip, add 1 for offset
  210 D1:C2D5 -  -  -  -  	
  211 D1:C2D5 3A FE BF D1 	ld a,(player_flags)
  212 D1:C2D9 CB 5F -  -  	bit 3,a ;check fall flag 
  213 D1:C2DB C2 19 C3 D1 	jp nz,pd_set_fall
  214 D1:C2DF -  -  -  -  	;tounge flag
  215 D1:C2DF CB 57 -  -  	bit 2,a 
  216 D1:C2E1 C2 3B C3 D1 	jp nz,pd_set_tongue
  217 D1:C2E5 CB 7F -  -  	bit 7,a ;Check jump held flag 
  218 D1:C2E7 C2 74 C3 D1 	jp nz,pd_set_charge
  219 D1:C2EB -  -  -  -  	
  220 D1:C2EB CB 77 -  -  	bit 6,a ;on ground flag
  221 D1:C2ED CA CA C3 D1 	jp z, pd_set_jump
  222 D1:C2F1 -  -  -  -  
  223 D1:C2F1 -  -  -  -  	;On ground 
  224 D1:C2F1 -  -  -  -  	;c=0
  225 D1:C2F1 -  -  -  -  	;Set sprite heights and offsets
  226 D1:C2F1 3E 13 -  -  	ld a,19
  227 D1:C2F3 32 6E C4 D1 	ld (pd_sprite_height_1),a 
  228 D1:C2F7 32 AF C4 D1 	ld (pd_sprite_height_2),a 
  229 D1:C2FB 3E 02 -  -  	ld a,2
  230 D1:C2FD 32 07 C4 D1 	ld (pd_x_offset_noflip),a 
  231 D1:C301 32 FF C3 D1 	ld (pd_x_offset_flip),a 
  232 D1:C305 3E 01 -  -  	ld a,1 
  233 D1:C307 32 3F C4 D1 	ld (pd_y_offset),a
  234 D1:C30B 3A FE BF D1 	ld a,(player_flags)
  235 D1:C30F CB 4F -  -  	bit 1,a 
  236 D1:C311 C2 06 C4 D1 	jp nz,pd_noflip
  237 D1:C315 C3 F2 C3 D1 	jp pd_flip
  238 D1:C319 -  -  -  -  
  239 D1:C319 -  -  -  -  pd_set_fall:
  240 D1:C319 0E 14 -  -  	ld c,20
  241 D1:C31B 3E 1A -  -  	ld a,26
  242 D1:C31D 32 6E C4 D1 	ld (pd_sprite_height_1),a 
  243 D1:C321 32 AF C4 D1 	ld (pd_sprite_height_2),a 
  244 D1:C325 3E 01 -  -  	ld a,1
  245 D1:C327 32 07 C4 D1 	ld (pd_x_offset_noflip),a 
  246 D1:C32B 3E 00 -  -  	ld a,0
  247 D1:C32D 32 FF C3 D1 	ld (pd_x_offset_flip),a 
  248 D1:C331 3E 07 -  -  	ld a,7 
  249 D1:C333 32 3F C4 D1 	ld (pd_y_offset),a 
  250 D1:C337 C3 E8 C3 D1 	jp pd_check_flip
  251 D1:C33B -  -  -  -  
  252 D1:C33B -  -  -  -  pd_set_tongue:
  253 D1:C33B 3E 1D -  -  	ld a,29
  254 D1:C33D 32 6E C4 D1 	ld (pd_sprite_height_1),a 
  255 D1:C341 32 AF C4 D1 	ld (pd_sprite_height_2),a 
  256 D1:C345 3E 01 -  -  	ld a,1 
  257 D1:C347 32 3F C4 D1 	ld (pd_y_offset),a 
  258 D1:C34B -  -  -  -  	
  259 D1:C34B -  -  -  -  	;Need to check if player center is to the left or right of ring, will determine flip 
  260 D1:C34B CD D3 BF D1 	call player_x_half ;a holds x pos in px pairs
  261 D1:C34F 06 03 -  -  	ld b,3 ;center offset for jump sprite (in pairs) from collider 
  262 D1:C351 80 -  -  -  	add a,b 
  263 D1:C352 -  -  -  -  	;compare to ring pos to determine sprite flip
  264 D1:C352 47 -  -  -  	ld b,a 
  265 D1:C353 3A FD BF D1 	ld a,(tongue_ring_x_pos)
  266 D1:C357 B8 -  -  -  	cp b 
  267 D1:C358 D2 68 C3 D1 	jp nc, pd_tongue_noflip
  268 D1:C35C -  -  -  -  	;ring to left of player, yes flip 
  269 D1:C35C 06 00 -  -  	ld b,0
  270 D1:C35E 0E 12 -  -  	ld c,18
  271 D1:C360 11 02 00 00 	ld de,2 ;flip offset
  272 D1:C364 C3 14 C4 D1 	jp pd_check_offset
  273 D1:C368 -  -  -  -  pd_tongue_noflip:
  274 D1:C368 -  -  -  -  	;ring is to the right of player, no sprite flip
  275 D1:C368 06 00 -  -  	ld b,0
  276 D1:C36A 0E 10 -  -  	ld c,16
  277 D1:C36C 11 07 00 00 	ld de,7
  278 D1:C370 C3 14 C4 D1 	jp pd_check_offset
  279 D1:C374 -  -  -  -  
  280 D1:C374 -  -  -  -  pd_set_charge:
  281 D1:C374 3E 12 -  -  	ld a,18
  282 D1:C376 32 6E C4 D1 	ld (pd_sprite_height_1),a 
  283 D1:C37A 32 AF C4 D1 	ld (pd_sprite_height_2),a 
  284 D1:C37E 3E 02 -  -  	ld a,2
  285 D1:C380 32 07 C4 D1 	ld (pd_x_offset_noflip),a 
  286 D1:C384 32 FF C3 D1 	ld (pd_x_offset_flip),a 
  287 D1:C388 3E 00 -  -  	ld a,0
  288 D1:C38A 32 3F C4 D1 	ld (pd_y_offset),a 
  289 D1:C38E -  -  -  -  
  290 D1:C38E 3A E4 BF D1 	ld a,(jump_charge_timer)
  291 D1:C392 FE 20 -  -  	cp timer_max_val
  292 D1:C394 DA A2 C3 D1 	jp c,pd_set_charge_norm
  293 D1:C398 -  -  -  -  
  294 D1:C398 3A 08 AC D1 	ld a,(frameCount)
  295 D1:C39C CB 57 -  -  	bit 2,a 
  296 D1:C39E C2 B6 C3 D1 	jp nz,pd_set_charge_lit 
  297 D1:C3A2 -  -  -  -  pd_set_charge_norm:
  298 D1:C3A2 0E 04 -  -  	ld c,4
  299 D1:C3A4 3A E3 BF D1 	ld a,(jump_strength_left)
  300 D1:C3A8 47 -  -  -  	ld b,a 
  301 D1:C3A9 3A E2 BF D1 	ld a,(jump_strength_right)
  302 D1:C3AD 90 -  -  -  	sub a,b ;Check which direction jump is being charged 
  303 D1:C3AE D2 06 C4 D1 	jp nc,pd_noflip
  304 D1:C3B2 C3 F2 C3 D1 	jp pd_flip
  305 D1:C3B6 -  -  -  -  	
  306 D1:C3B6 -  -  -  -  pd_set_charge_lit:
  307 D1:C3B6 0E 08 -  -  	ld c,8
  308 D1:C3B8 3A E3 BF D1 	ld a,(jump_strength_left)
  309 D1:C3BC 47 -  -  -  	ld b,a 
  310 D1:C3BD 3A E2 BF D1 	ld a,(jump_strength_right)
  311 D1:C3C1 90 -  -  -  	sub a,b ;Check which direction jump is being charged 
  312 D1:C3C2 D2 06 C4 D1 	jp nc,pd_noflip
  313 D1:C3C6 C3 F2 C3 D1 	jp pd_flip
  314 D1:C3CA -  -  -  -  	
  315 D1:C3CA -  -  -  -  	
  316 D1:C3CA -  -  -  -  pd_set_jump:
  317 D1:C3CA 0E 0C -  -  	ld c,12
  318 D1:C3CC 3E 1D -  -  	ld a,29
  319 D1:C3CE 32 6E C4 D1 	ld (pd_sprite_height_1),a 
  320 D1:C3D2 32 AF C4 D1 	ld (pd_sprite_height_2),a 
  321 D1:C3D6 3E 07 -  -  	ld a,7
  322 D1:C3D8 32 07 C4 D1 	ld (pd_x_offset_noflip),a 
  323 D1:C3DC 3E 02 -  -  	ld a,2
  324 D1:C3DE 32 FF C3 D1 	ld (pd_x_offset_flip),a 
  325 D1:C3E2 3E 01 -  -  	ld a,1
  326 D1:C3E4 32 3F C4 D1 	ld (pd_y_offset),a 
  327 D1:C3E8 -  -  -  -  	
  328 D1:C3E8 -  -  -  -  
  329 D1:C3E8 -  -  -  -  pd_check_flip:
  330 D1:C3E8 3A ED BF D1 	ld a,(player_x_vel + 2);MSB velocity
  331 D1:C3EC CB 7F -  -  	bit 7,a 
  332 D1:C3EE CA 06 C4 D1 	jp z,pd_noflip
  333 D1:C3F2 -  -  -  -  pd_flip:
  334 D1:C3F2 0C -  -  -  	inc c 
  335 D1:C3F3 0C -  -  -  	inc c
  336 D1:C3F4 3A FE BF D1 	ld a,(player_flags)
  337 D1:C3F8 CB 8F -  -  	res 1,a 
  338 D1:C3FA 32 FE BF D1 	ld (player_flags),a 
  339 D1:C3FE -  -  -  -  pd_x_offset_flip .equ $+1
  340 D1:C3FE 11 00 00 00 	ld de,0 
  341 D1:C402 C3 14 C4 D1 	jp pd_check_offset
  342 D1:C406 -  -  -  -  pd_noflip:
  343 D1:C406 -  -  -  -  pd_x_offset_noflip .equ $+1
  344 D1:C406 11 00 00 00 	ld de,0 
  345 D1:C40A 3A FE BF D1 	ld a,(player_flags)
  346 D1:C40E CB CF -  -  	set 1,a 
  347 D1:C410 32 FE BF D1 	ld (player_flags),a 
  348 D1:C414 -  -  -  -  pd_check_offset: ;jump here to draw unlucky
  349 D1:C414 -  -  -  -  	;ld x pos
  350 D1:C414 2A E6 BF D1 	ld hl,(player_x_pos+1);fullpx
  351 D1:C418 ED 52 -  -  	sbc hl,de ;subtract x offset
  352 D1:C41A 5D -  -  -  	ld e,l
  353 D1:C41B CB 3C -  -  	srl h ;div 2
  354 D1:C41D CB 1D -  -  	rr l 
  355 D1:C41F 7D -  -  -  	ld a,l
  356 D1:C420 32 4A C5 D1 	ld (pd_xpos_full),a ;xpos in pixel pairs
  357 D1:C424 -  -  -  -  
  358 D1:C424 CB 43 -  -  	bit 0, e ;least fullpixel bit 
  359 D1:C426 CA 2B C4 D1 	jp z, pd_even_px 
  360 D1:C42A 0C -  -  -  	inc c ;add 1 for offset 
  361 D1:C42B -  -  -  -  pd_even_px:
  362 D1:C42B 79 -  -  -  	ld a,c
  363 D1:C42C 32 52 C5 D1 	ld (player_sprite_index),a 
  364 D1:C430 -  -  -  -  
  365 D1:C430 -  -  -  -  	;call write_a_to_ram
  366 D1:C430 -  -  -  -   
  367 D1:C430 -  -  -  -  	;get y pos
  368 D1:C430 21 00 00 00 	ld hl,0 
  369 D1:C434 3A EA BF D1 	ld a,(player_y_pos + 2) ;MSB
  370 D1:C438 67 -  -  -  	ld h,a 
  371 D1:C439 3A E9 BF D1 	ld a, (player_y_pos + 1) ;middle bit (fullpixel LSB)
  372 D1:C43D 6F -  -  -  	ld l,a 
  373 D1:C43E -  -  -  -  	;hl holds y pos fullpixels
  374 D1:C43E -  -  -  -  	
  375 D1:C43E -  -  -  -  pd_y_offset .equ $+1
  376 D1:C43E 11 00 00 00 	ld de,0 
  377 D1:C442 19 -  -  -  	add hl,de ;add y offset
  378 D1:C443 -  -  -  -  
  379 D1:C443 -  -  -  -  
  380 D1:C443 -  -  -  -  	;Draw player sprite 
  381 D1:C443 EB -  -  -  	ex de,hl ;de holds player y 
  382 D1:C444 2A EE AB D1 	ld hl,(cam_pos)
  383 D1:C448 CB 3C -  -  	srl h ;div by 2 (mg layer)
  384 D1:C44A CB 1D -  -  	rr l 
  385 D1:C44C 01 EF 00 00 	ld bc,239 ;screen height
  386 D1:C450 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of mg layer
  387 D1:C451 37 -  -  -  	scf 
  388 D1:C452 3F -  -  -  	ccf 
  389 D1:C453 -  -  -  -  	;Uppermost vp line - player y  = lines below top to draw player 
  390 D1:C453 ED 52 -  -  	sbc hl,de 
  391 D1:C455 -  -  -  -  	;call write_hl_to_ram
  392 D1:C455 DA A7 C4 D1 	jp c, pd_top_cut
  393 D1:C459 -  -  -  -  	
  394 D1:C459 7C -  -  -  	ld a,h 
  395 D1:C45A -  -  -  -  	
  396 D1:C45A B7 -  -  -  	or a 
  397 D1:C45B C0 -  -  -  	ret nz ;player is > 256 px below cam top
  398 D1:C45C -  -  -  -  	
  399 D1:C45C 7D -  -  -  	ld a,l 
  400 D1:C45D -  -  -  -  	;a holds lines below vp top to draw player
  401 D1:C45D 47 -  -  -  	ld b,a 
  402 D1:C45E 3E F0 -  -  	ld a,240
  403 D1:C460 90 -  -  -  	sub a,b ;lines above bottom of VP 
  404 D1:C461 D8 -  -  -  	ret c ;player below VP 
  405 D1:C462 -  -  -  -  
  406 D1:C462 ED 5B F4 AB 
              D1 -  -  -  	ld de, (draw_buffer)
  407 D1:C467 21 00 96 00 	ld hl, 240*160
  408 D1:C46B 19 -  -  -  	add hl,de 
  409 D1:C46C EB -  -  -  	ex de,hl ;DE hlds VP bottom 
  410 D1:C46D -  -  -  -  	
  411 D1:C46D -  -  -  -  pd_sprite_height_1 .equ $ + 1
  412 D1:C46D FE 00 -  -  	cp 0 
  413 D1:C46F DA 8D C4 D1 	jp c, pd_bottom_cut 
  414 D1:C473 -  -  -  -  
  415 D1:C473 -  -  -  -  	;Otherwise, no top or bottm cut
  416 D1:C473 -  -  -  -  	;a holds lines above bottom VP 
  417 D1:C473 CD 3B C5 D1 	call pd_setup_draw
  418 D1:C477 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  419 D1:C479 CA 85 C4 D1 	jp z,pd_fullsprite_fast
  420 D1:C47D CD E0 AE D1 	call draw_slow_sprite_full
  421 D1:C481 C3 D0 C4 D1 	jp pd_check_unlucky_and_tongue
  422 D1:C485 -  -  -  -  pd_fullsprite_fast:
  423 D1:C485 -  -  -  -  	;ld a,$BB
  424 D1:C485 -  -  -  -  	;call write_a_to_ram
  425 D1:C485 -  -  -  -  	;call prgmpause
  426 D1:C485 CD C6 AE D1 	call draw_fast_sprite_full
  427 D1:C489 -  -  -  -  	;ld a,$BC
  428 D1:C489 -  -  -  -  	;call write_a_to_ram
  429 D1:C489 C3 D0 C4 D1 	jp pd_check_unlucky_and_tongue
  430 D1:C48D -  -  -  -  
  431 D1:C48D -  -  -  -  pd_bottom_cut:
  432 D1:C48D -  -  -  -  	;a holds lines to draw
  433 D1:C48D -  -  -  -  	;DE holds vram bottom 
  434 D1:C48D CD 3B C5 D1 	call pd_setup_draw
  435 D1:C491 -  -  -  -  	
  436 D1:C491 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  437 D1:C493 CA 9F C4 D1 	jp z,pd_bottom_cut_fast
  438 D1:C497 CD 4B AF D1 	call draw_slow_sprite_bottom_cut
  439 D1:C49B C3 D0 C4 D1 	jp pd_check_unlucky_and_tongue
  440 D1:C49F -  -  -  -  pd_bottom_cut_fast:
  441 D1:C49F CD 83 AE D1 	call draw_fast_sprite_bottom_cut
  442 D1:C4A3 C3 D0 C4 D1 	jp pd_check_unlucky_and_tongue
  443 D1:C4A7 -  -  -  -  
  444 D1:C4A7 -  -  -  -  pd_top_cut:
  445 D1:C4A7 -  -  -  -  	;call write_hl_to_ram
  446 D1:C4A7 -  -  -  -  	;push af 
  447 D1:C4A7 -  -  -  -  	;ld a,$44
  448 D1:C4A7 -  -  -  -  	;call write_a_to_ram 
  449 D1:C4A7 -  -  -  -  	;pop af 
  450 D1:C4A7 -  -  -  -  
  451 D1:C4A7 7C -  -  -  	ld a,h ;Upper byte after subtraction, check for chase where player > 256 px above cam to prevent overflow errors
  452 D1:C4A8 EE FF -  -  	xor %11111111 ;flip all bits 
  453 D1:C4AA C0 -  -  -  	ret nz ;player is > 256 px above cam.
  454 D1:C4AB -  -  -  -  
  455 D1:C4AB 7D -  -  -  	ld a,l ;lines below VP
  456 D1:C4AC ED 44 -  -  	neg 
  457 D1:C4AE -  -  -  -  
  458 D1:C4AE -  -  -  -  	;a holds lines above vp top = lines to cut 
  459 D1:C4AE -  -  -  -  pd_sprite_height_2 .equ $ + 1 
  460 D1:C4AE FE 00 -  -  	cp 0 ; compare to height 
  461 D1:C4B0 D0 -  -  -  	ret nc 
  462 D1:C4B1 -  -  -  -  
  463 D1:C4B1 ED 5B F4 AB 
              D1 -  -  -  	ld de,(draw_buffer)
  464 D1:C4B6 CD 3B C5 D1 	call pd_setup_draw ;Setup draw pos 
  465 D1:C4BA -  -  -  -  	
  466 D1:C4BA CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  467 D1:C4BC CA C8 C4 D1 	jp z,pd_top_cut_fast
  468 D1:C4C0 CD 1E AF D1 	call draw_slow_sprite_top_cut ;for now assume all sprites are slow
  469 D1:C4C4 C3 D0 C4 D1 	jp pd_check_unlucky_and_tongue
  470 D1:C4C8 -  -  -  -  
  471 D1:C4C8 -  -  -  -  pd_top_cut_fast:
  472 D1:C4C8 CD A0 AE D1 	call draw_fast_sprite_top_cut
  473 D1:C4CC C3 D0 C4 D1 	jp pd_check_unlucky_and_tongue
  474 D1:C4D0 -  -  -  -  
  475 D1:C4D0 -  -  -  -  pd_check_unlucky_and_tongue:
  476 D1:C4D0 -  -  -  -  	
  477 D1:C4D0 -  -  -  -  pd_unlucky_display_timer .equ $+1
  478 D1:C4D0 3E 00 -  -  	ld a,0
  479 D1:C4D2 B7 -  -  -  	or a
  480 D1:C4D3 CA E1 C4 D1 	jp z,pd_unlucky_skip
  481 D1:C4D7 3D -  -  -  	dec a ;dec timer if nonzero
  482 D1:C4D8 32 D1 C4 D1 	ld (pd_unlucky_display_timer),a 
  483 D1:C4DC -  -  -  -  	;call write_a_to_ram
  484 D1:C4DC 37 -  -  -  	scf 
  485 D1:C4DD -  -  -  -  pd_unlucky_display_timer_drawncheck .equ $
  486 D1:C4DD DA F2 C4 D1 	jp c, pd_draw_unlucky
  487 D1:C4E1 -  -  -  -  pd_unlucky_skip:
  488 D1:C4E1 -  -  -  -  	
  489 D1:C4E1 3E DA -  -  	ld a,%11011010;jp c
  490 D1:C4E3 32 DD C4 D1 	ld (pd_unlucky_display_timer_drawncheck),a ;reset drawn flag
  491 D1:C4E7 -  -  -  -  	
  492 D1:C4E7 -  -  -  -  	;ld a,$11
  493 D1:C4E7 -  -  -  -  	;call write_a_to_ram
  494 D1:C4E7 3A FE BF D1 	ld a,(player_flags)
  495 D1:C4EB CB 57 -  -  	bit 2,a 
  496 D1:C4ED C4 A5 C5 D1 	call nz, draw_tongue
  497 D1:C4F1 C9 -  -  -  	ret 
  498 D1:C4F2 -  -  -  -  
  499 D1:C4F2 -  -  -  -  pd_draw_unlucky:
  500 D1:C4F2 -  -  -  -  	;draw unlucky by setting offsets and sprite index, call player draw again
  501 D1:C4F2 -  -  -  -  	;ld a,$CA 
  502 D1:C4F2 -  -  -  -  	;call write_a_to_ram
  503 D1:C4F2 -  -  -  -  	
  504 D1:C4F2 -  -  -  -  	;ld a,(player_flags)
  505 D1:C4F2 -  -  -  -  	;bit 2,a 
  506 D1:C4F2 -  -  -  -  	;call nz, draw_tongue
  507 D1:C4F2 -  -  -  -  	;ret 
  508 D1:C4F2 3E D2 -  -  	ld a, %11010010 ;jp nc 
  509 D1:C4F4 32 DD C4 D1 	ld(pd_unlucky_display_timer_drawncheck),a ;ensure only drawn once per frame
  510 D1:C4F8 3E 0B -  -  	ld a,11
  511 D1:C4FA 32 6E C4 D1 	ld (pd_sprite_height_1),a 
  512 D1:C4FE 32 AF C4 D1 	ld (pd_sprite_height_2),a 
  513 D1:C502 -  -  -  -  	
  514 D1:C502 11 0E 00 00 	ld de ,14 ;default x offset
  515 D1:C506 -  -  -  -  	;calculate x offset to clamp within screen
  516 D1:C506 -  -  -  -  	
  517 D1:C506 CD D3 BF D1 	call player_x_half
  518 D1:C50A FE 09 -  -  	cp 9
  519 D1:C50C DA 30 C5 D1 	jp c, pd_unlucky_clamp_left
  520 D1:C510 FE 8B -  -  	cp 139
  521 D1:C512 D2 22 C5 D1 	jp nc,pd_unlucky_clamp_right
  522 D1:C516 -  -  -  -  	
  523 D1:C516 -  -  -  -  pd_unlucky_noclamp:
  524 D1:C516 3E 0A -  -  	ld a,10
  525 D1:C518 32 3F C4 D1 	ld (pd_y_offset),a
  526 D1:C51C 0E 18 -  -  	ld c,24
  527 D1:C51E C3 14 C4 D1 	jp pd_check_offset	
  528 D1:C522 -  -  -  -  	
  529 D1:C522 -  -  -  -  	
  530 D1:C522 -  -  -  -  pd_unlucky_clamp_right:
  531 D1:C522 -  -  -  -  	;as a increases, offset should increase
  532 D1:C522 0E 75 -  -  	ld c,117
  533 D1:C524 91 -  -  -  	sub a,c 
  534 D1:C525 5F -  -  -  	ld e,a 
  535 D1:C526 3E BB -  -  	ld a,$BB
  536 D1:C528 CD BB AB D1 	call write_a_to_ram
  537 D1:C52C C3 16 C5 D1 	jp pd_unlucky_noclamp
  538 D1:C530 -  -  -  -  
  539 D1:C530 -  -  -  -  pd_unlucky_clamp_left:
  540 D1:C530 -  -  -  -  	;as a increases, offset should increase
  541 D1:C530 -  -  -  -  	;maybe add to a
  542 D1:C530 5F -  -  -  	ld e,a 
  543 D1:C531 3E AA -  -  	ld a,$AA
  544 D1:C533 CD BB AB D1 	call write_a_to_ram
  545 D1:C537 C3 16 C5 D1 	jp pd_unlucky_noclamp
  546 D1:C53B -  -  -  -  
  547 D1:C53B -  -  -  -  
  548 D1:C53B -  -  -  -  
  549 D1:C53B -  -  -  -  	
  550 D1:C53B -  -  -  -  
  551 D1:C53B -  -  -  -  
  552 D1:C53B -  -  -  -  pd_setup_draw:
  553 D1:C53B -  -  -  -  	;A holds lines above bottom (or top) line of VP 
  554 D1:C53B -  -  -  -  	;DE holds VP top or bottom
  555 D1:C53B 26 A0 -  -  	ld h,160
  556 D1:C53D 6F -  -  -  	ld l,a ;Num lines to subtract
  557 D1:C53E ED 6C -  -  	mlt hl 
  558 D1:C540 37 -  -  -  	scf 
  559 D1:C541 3F -  -  -  	ccf 
  560 D1:C542 EB -  -  -  	ex de,hl ;De holds lines to subtract, hl holds vram pos 
  561 D1:C543 ED 52 -  -  	sbc hl,de 
  562 D1:C545 01 00 00 00 	ld bc,0 
  563 D1:C549 -  -  -  -  pd_xpos_full .equ $ + 1 
  564 D1:C549 0E 00 -  -  	ld c, 0 ;ld x pos 
  565 D1:C54B 09 -  -  -  	add hl,bc 
  566 D1:C54C EB -  -  -  	ex de,hl 
  567 D1:C54D 21 F0 C6 D1 	ld hl,player_sprite_table ;Load sprite table
  568 D1:C551 -  -  -  -  
  569 D1:C551 -  -  -  -  player_sprite_index .equ $ + 1 
  570 D1:C551 0E 00 -  -  	ld c,0 ;load sprite index 
  571 D1:C553 09 -  -  -  	add hl,bc 
  572 D1:C554 09 -  -  -  	add hl,bc 
  573 D1:C555 09 -  -  -  	add hl,bc 
  574 D1:C556 ED 27 -  -  	ld hl,(hl)
  575 D1:C558 -  -  -  -  	;HL holds sprite data, de holds draw pos 
  576 D1:C558 C9 -  -  -  	ret 
  577 D1:C559 -  -  -  -  
  578 D1:C559 -  -  -  -  
  579 D1:C559 -  -  -  -  
  580 D1:C559 -  -  -  -  player_to_cam_coords:
  581 D1:C559 21 00 00 00 	ld hl,0
  582 D1:C55D 3A EA BF D1 	ld a,(player_y_pos + 2) ;frame number
  583 D1:C561 67 -  -  -  	ld h,a 
  584 D1:C562 3A E9 BF D1 	ld a,(player_y_pos + 1) ;pixel number
  585 D1:C566 6F -  -  -  	ld l,a 
  586 D1:C567 -  -  -  -  	
  587 D1:C567 CB 25 -  -  	sla l ;mult by 2 to convert to FG space
  588 D1:C569 CB 14 -  -  	rl h 
  589 D1:C56B 11 24 00 00 	ld de,36 ;add offset to put player at bottom of screen
  590 D1:C56F ED 52 -  -  	sbc hl,de 
  591 D1:C571 D2 79 C5 D1 	jp nc, set_cam_0_pos_skip
  592 D1:C575 21 00 00 00 	ld hl,0
  593 D1:C579 -  -  -  -  set_cam_0_pos_skip:
  594 D1:C579 C9 -  -  -  	ret
  595 D1:C57A -  -  -  -  	
  596 D1:C57A -  -  -  -  	
  597 D1:C57A -  -  -  -  	
  598 D1:C57A -  -  -  -  
  599 D1:C57A -  -  -  -  y_length_to_tongue_ring: ;returns hl = y dist
  600 D1:C57A 21 00 00 00 	ld hl,0 
  601 D1:C57E 3A EA BF D1 	ld a,(player_y_pos +2)
  602 D1:C582 67 -  -  -  	ld h,a 
  603 D1:C583 3A E9 BF D1 	ld a,(player_y_pos +1)
  604 D1:C587 6F -  -  -  	ld l,a 
  605 D1:C588 2B -  -  -  	dec hl ;mouth y offset
  606 D1:C589 2B -  -  -  	dec hl
  607 D1:C58A 2B -  -  -  	dec hl 
  608 D1:C58B 2B -  -  -  	dec hl
  609 D1:C58C 2B -  -  -  	dec hl
  610 D1:C58D 2B -  -  -  	dec hl
  611 D1:C58E 2B -  -  -  	dec hl
  612 D1:C58F -  -  -  -  	;call write_hl_to_ram
  613 D1:C58F -  -  -  -  	;hl holds player y fullpixels 
  614 D1:C58F EB -  -  -  	ex de,hl 
  615 D1:C590 2A FA BF D1 	ld hl,(tongue_ring_y_pos)
  616 D1:C594 -  -  -  -  	;call write_hl_to_ram
  617 D1:C594 ED 52 -  -  	sbc hl,de 
  618 D1:C596 C9 -  -  -  	ret 
  619 D1:C597 -  -  -  -  
  620 D1:C597 -  -  -  -  x_length_to_tongue_ring: ;returns a = dist 
  621 D1:C597 CD D3 BF D1 	call player_x_half
  622 D1:C59B 06 03 -  -  	ld b,3 ;offset to center of collider 
  623 D1:C59D 80 -  -  -  	add a,b 
  624 D1:C59E 47 -  -  -  	ld b,a
  625 D1:C59F 3A FD BF D1 	ld a,(tongue_ring_x_pos)
  626 D1:C5A3 90 -  -  -  	sub a,b 
  627 D1:C5A4 C9 -  -  -  	ret 
  628 D1:C5A5 -  -  -  -  
  629 D1:C5A5 -  -  -  -  
  630 D1:C5A5 -  -  -  -  draw_tongue:
  631 D1:C5A5 -  -  -  -  	;c holds max y dist to draw 
  632 D1:C5A5 -  -  -  -  	;ld a,$DD
  633 D1:C5A5 -  -  -  -  	;call write_a_to_ram
  634 D1:C5A5 -  -  -  -  	
  635 D1:C5A5 3A 04 C0 D1 	ld a, (tongue_extend_timer)
  636 D1:C5A9 -  -  -  -  	;call write_a_to_ram
  637 D1:C5A9 CB 7F -  -  	bit 7,a 
  638 D1:C5AB C2 B5 C5 D1 	jp nz,dt_full_extend ; a > 128 = full exted
  639 D1:C5AF CB 27 -  -  	sla a ;otherwise mult by 8 to find limit 
  640 D1:C5B1 CB 27 -  -  	sla a 
  641 D1:C5B3 CB 27 -  -  	sla a 
  642 D1:C5B5 -  -  -  -  dt_full_extend:
  643 D1:C5B5 4F -  -  -  	ld c,a 
  644 D1:C5B6 -  -  -  -  	;call write_a_to_ram
  645 D1:C5B6 CD 7A C5 D1 	call y_length_to_tongue_ring ;hl holds y dist to ring
  646 D1:C5BA D8 -  -  -  	ret c ;distance should not be negative 
  647 D1:C5BB -  -  -  -  	
  648 D1:C5BB -  -  -  -  	;hl holds line y length 
  649 D1:C5BB 7D -  -  -  	ld a,l ;a holds line length
  650 D1:C5BC 32 4B C6 D1 	ld (dl_cutoff_length),a
  651 D1:C5C0 -  -  -  -  	;call write_a_to_ram
  652 D1:C5C0 FE 05 -  -  	cp 5 
  653 D1:C5C2 D8 -  -  -  	ret c ;min line length
  654 D1:C5C3 B9 -  -  -  	cp c 
  655 D1:C5C4 DA CE C5 D1 	jp c, dt_full_len
  656 D1:C5C8 -  -  -  -  	
  657 D1:C5C8 -  -  -  -  	;otherwise limit line length
  658 D1:C5C8 79 -  -  -  	ld a,c 
  659 D1:C5C9 32 4B C6 D1 	ld (dl_cutoff_length),a
  660 D1:C5CD -  -  -  -  	;ld a,$A1 
  661 D1:C5CD -  -  -  -  	;call write_a_to_ram
  662 D1:C5CD -  -  -  -  	;call write_a_to_ram
  663 D1:C5CD 7D -  -  -  	ld a,l ;line length
  664 D1:C5CE -  -  -  -  dt_full_len:
  665 D1:C5CE 32 99 C6 D1 	ld (dl_y_dist_1),a
  666 D1:C5D2 32 C3 C6 D1 	ld (dl_y_dist_2),a 
  667 D1:C5D6 -  -  -  -  	;call write_a_to_ram
  668 D1:C5D6 -  -  -  -  
  669 D1:C5D6 -  -  -  -  
  670 D1:C5D6 -  -  -  -  	;Find line start y in screen space 
  671 D1:C5D6 -  -  -  -  	;de still holds player y in fullpixels
  672 D1:C5D6 -  -  -  -  	
  673 D1:C5D6 2A EE AB D1 	ld hl,(cam_pos)
  674 D1:C5DA CB 3C -  -  	srl h ;div by 2
  675 D1:C5DC CB 1D -  -  	rr l 
  676 D1:C5DE 01 EF 00 00 	ld bc,239 + 0 ;top of screen - mouth y offset 
  677 D1:C5E2 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of mg layer
  678 D1:C5E3 37 -  -  -  	scf 
  679 D1:C5E4 3F -  -  -  	ccf 
  680 D1:C5E5 -  -  -  -  	;Uppermost vp line - player y  = lines below top to draw player 
  681 D1:C5E5 ED 52 -  -  	sbc hl,de
  682 D1:C5E7 7D -  -  -  	ld a,l 
  683 D1:C5E8 26 A0 -  -  	ld h,160 
  684 D1:C5EA ED 6C -  -  	mlt hl 
  685 D1:C5EC EB -  -  -  	ex de,hl 
  686 D1:C5ED 2A F4 AB D1 	ld hl, (draw_buffer)
  687 D1:C5F1 19 -  -  -  	add hl,de 
  688 D1:C5F2 EB -  -  -  	ex de,hl ;de holds correct y pos in vram 
  689 D1:C5F3 -  -  -  -  	
  690 D1:C5F3 21 00 00 00 	ld hl,0 
  691 D1:C5F7 3A E7 BF D1 	ld a,(player_x_pos + 2);msb 
  692 D1:C5FB 67 -  -  -  	ld h,a 
  693 D1:C5FC 3A E6 BF D1 	ld a,(player_x_pos + 1)
  694 D1:C600 6F -  -  -  	ld l,a ;hl holds x pos in fullpixels
  695 D1:C601 -  -  -  -  	
  696 D1:C601 -  -  -  -  	;Need to find x and y pos of player mouth (world coords)
  697 D1:C601 -  -  -  -  	;Need to check if player center is to the left or right of ring, will determine flip 
  698 D1:C601 CD D3 BF D1 	call player_x_half ;a holds x pos in px pairs
  699 D1:C605 06 03 -  -  	ld b,3 ;center offset for jump sprite (in pairs) from collider 
  700 D1:C607 80 -  -  -  	add a,b 
  701 D1:C608 -  -  -  -  	;compare to ring pos to determine sprite flip
  702 D1:C608 47 -  -  -  	ld b,a 
  703 D1:C609 3A FD BF D1 	ld a,(tongue_ring_x_pos)
  704 D1:C60D B8 -  -  -  	cp b 
  705 D1:C60E D2 1A C6 D1 	jp nc, dt_noflip
  706 D1:C612 -  -  -  -  	;ring to left of player 
  707 D1:C612 -  -  -  -  	
  708 D1:C612 01 01 00 00 	ld bc,1 
  709 D1:C616 C3 1E C6 D1 	jp dt_flip
  710 D1:C61A -  -  -  -  dt_noflip:
  711 D1:C61A -  -  -  -  	;ring is to the right of player, no sprite flip
  712 D1:C61A 01 11 00 00 	ld bc,17 ;17px offset from collider x 
  713 D1:C61E -  -  -  -  dt_flip:
  714 D1:C61E 09 -  -  -  	add hl,bc ;hl holds x pos of line start (mouth pos) fullpixels 
  715 D1:C61F -  -  -  -  	
  716 D1:C61F E5 -  -  -  	push hl
  717 D1:C620 01 00 00 00 	ld bc,0
  718 D1:C624 4F -  -  -  	ld c,a ;a holds ring x pos (in pair pixels)
  719 D1:C625 CB 21 -  -  	sla c ;mult by 2  
  720 D1:C627 CB 10 -  -  	rl b 
  721 D1:C629 ED 42 -  -  	sbc hl,bc ;hl holds x delta in px (player - ring)
  722 D1:C62B D2 3A C6 D1 	jp nc,dt_neg_delta_x
  723 D1:C62F -  -  -  -  	;ring to the right
  724 D1:C62F CD D6 C6 D1 	call dl_set_positive
  725 D1:C633 7D -  -  -  	ld a,l ;a holds x delta
  726 D1:C634 ED 44 -  -  	neg 
  727 D1:C636 C3 3F C6 D1 	jp dt_pos_delta_x
  728 D1:C63A -  -  -  -  dt_neg_delta_x:
  729 D1:C63A -  -  -  -  	;ring to the left 
  730 D1:C63A CD E3 C6 D1 	call dl_set_negative ;set neg slope
  731 D1:C63E 7D -  -  -  	ld a,l ;a holds x delta
  732 D1:C63F -  -  -  -  dt_pos_delta_x:
  733 D1:C63F -  -  -  -  	
  734 D1:C63F 32 95 C6 D1 	ld (dl_x_dist),a 
  735 D1:C643 -  -  -  -  	
  736 D1:C643 E1 -  -  -  	pop hl ;x pos of line start 
  737 D1:C644 45 -  -  -  	ld b,l ;offset counter
  738 D1:C645 -  -  -  -  	
  739 D1:C645 CB 3C -  -  	srl h ;div by 2
  740 D1:C647 CB 1D -  -  	rr l
  741 D1:C649 19 -  -  -  	add hl,de ;add to vram y pos 
  742 D1:C64A -  -  -  -  	;hl = line bottom pos in vram 
  743 D1:C64A -  -  -  -  	
  744 D1:C64A -  -  -  -  	
  745 D1:C64A -  -  -  -  	;set (dl_y_dist_1), (dl_y_dist_2), (dl_x_dist)
  746 D1:C64A -  -  -  -  	;a is byte counter, incs by xdist, if >ydist subtract ydist 
  747 D1:C64A -  -  -  -  dl_cutoff_length .equ $+1
  748 D1:C64A 0E 00 -  -  	ld c,0 
  749 D1:C64C -  -  -  -  	;ld a,c
  750 D1:C64C -  -  -  -  	;call write_a_to_ram
  751 D1:C64C 11 00 00 00 	ld de,0 ;amount to inc per line 
  752 D1:C650 3E 00 -  -  	ld a,0 
  753 D1:C652 -  -  -  -  draw_line_loop:
  754 D1:C652 08 -  -  -  	ex af,af';' ;a' used for writing to hl
  755 D1:C653 -  -  -  -  	
  756 D1:C653 CB 40 -  -  	bit 0,b 
  757 D1:C655 CA 78 C6 D1 	jp z,dl_no_offset
  758 D1:C659 -  -  -  -  	
  759 D1:C659 3E DA -  -  	ld a, %11011010 ;%JP c
  760 D1:C65B 32 AC C6 D1 	ld (dl_end_sprite_offset) ,a 
  761 D1:C65F -  -  -  -  	
  762 D1:C65F 7E -  -  -  	ld a,(hl)
  763 D1:C660 E6 0F -  -  	and %00001111 ;save left pixel 
  764 D1:C662 F6 A0 -  -  	or $A0 ;right pixel = 12 
  765 D1:C664 77 -  -  -  	ld (hl),a 
  766 D1:C665 23 -  -  -  	inc hl 
  767 D1:C666 3E AA -  -  	ld a,$AA
  768 D1:C668 77 -  -  -  	ld (hl),a 
  769 D1:C669 23 -  -  -  	inc hl 
  770 D1:C66A 7E -  -  -  	ld a,(hl)
  771 D1:C66B E6 F0 -  -  	and %11110000 ;save right pixel 
  772 D1:C66D F6 0A -  -  	or $0A ;right pixel = 12 
  773 D1:C66F 77 -  -  -  	ld (hl),a 
  774 D1:C670 11 A2 00 00 	ld de,162 ;1 line up to left 
  775 D1:C674 C3 8A C6 D1 	jp dl_check_slope
  776 D1:C678 -  -  -  -  	
  777 D1:C678 -  -  -  -  dl_no_offset:
  778 D1:C678 -  -  -  -  	
  779 D1:C678 3E D2 -  -  	ld a, %11010010 ;%JP nc
  780 D1:C67A 32 AC C6 D1 	ld (dl_end_sprite_offset) ,a 
  781 D1:C67E -  -  -  -  
  782 D1:C67E 3E CB -  -  	ld a,$CB ;left side colors 
  783 D1:C680 77 -  -  -  	ld (hl),a 
  784 D1:C681 23 -  -  -  	inc hl 
  785 D1:C682 3E BC -  -  	ld a,$BC ;Right side colors 
  786 D1:C684 77 -  -  -  	ld (hl),a 
  787 D1:C685 23 -  -  -  	inc hl 
  788 D1:C686 11 A2 00 00 	ld de,162 ;to move 1 line up to left side 
  789 D1:C68A -  -  -  -  	
  790 D1:C68A -  -  -  -  dl_check_slope:
  791 D1:C68A 37 -  -  -  	scf 
  792 D1:C68B 3F -  -  -  	ccf 
  793 D1:C68C ED 52 -  -  	sbc hl,de ;add default length
  794 D1:C68E 08 -  -  -  	ex af,af' ;' ; back to slope byte counter 
  795 D1:C68F -  -  -  -  
  796 D1:C68F 0D -  -  -  	dec c ;check here to avoid hl being changed in inc x to stop weird behavior in end sprite
  797 D1:C690 CA A2 C6 D1 	jp z, dl_loop_end
  798 D1:C694 -  -  -  -  
  799 D1:C694 -  -  -  -  dl_x_dist .equ $+1 
  800 D1:C694 1E 00 -  -  	ld e,0 
  801 D1:C696 83 -  -  -  	add a,e  ;add x dist 
  802 D1:C697 3C -  -  -  	inc a
  803 D1:C698 -  -  -  -  dl_compare_y:
  804 D1:C698 -  -  -  -  dl_y_dist_1 .equ $ + 1 
  805 D1:C698 FE 00 -  -  	cp 0 ;compare to y dist
  806 D1:C69A D2 C2 C6 D1 	jp nc, dl_inc_x
  807 D1:C69E -  -  -  -  	
  808 D1:C69E C3 52 C6 D1 	jp draw_line_loop
  809 D1:C6A2 -  -  -  -  	
  810 D1:C6A2 -  -  -  -  dl_loop_end:
  811 D1:C6A2 -  -  -  -  
  812 D1:C6A2 -  -  -  -  	;Draw tongue end sprite
  813 D1:C6A2 -  -  -  -  	;hl should be pointing to end of line vram already 
  814 D1:C6A2 11 E1 01 00 	ld de, 160*3 + 1
  815 D1:C6A6 37 -  -  -  	scf 
  816 D1:C6A7 3F -  -  -  	ccf 
  817 D1:C6A8 ED 52 -  -  	sbc hl,de  
  818 D1:C6AA -  -  -  -  ;dl_negative_x_2 .equ $
  819 D1:C6AA -  -  -  -  	;dec hl ;fixes weird offset issue
  820 D1:C6AA EB -  -  -  	ex de,hl 
  821 D1:C6AB 37 -  -  -  	scf
  822 D1:C6AC -  -  -  -  dl_end_sprite_offset .equ $
  823 D1:C6AC DA B9 C6 D1 	jp c, dt_end_sprite_offset
  824 D1:C6B0 21 EF 28 D4 	ld hl, FrogTongue_Slow
  825 D1:C6B4 CD E0 AE D1 	call draw_slow_sprite_full
  826 D1:C6B8 C9 -  -  -  	ret 
  827 D1:C6B9 -  -  -  -  	
  828 D1:C6B9 -  -  -  -  dt_end_sprite_offset:
  829 D1:C6B9 -  -  -  -  	;dec de
  830 D1:C6B9 21 35 29 D4 	ld hl, FrogTongue_Slow_O
  831 D1:C6BD CD E0 AE D1 	call draw_slow_sprite_full 
  832 D1:C6C1 -  -  -  -  	;call write_a_to_ram
  833 D1:C6C1 C9 -  -  -  	ret 
  834 D1:C6C2 -  -  -  -  	
  835 D1:C6C2 -  -  -  -  	
  836 D1:C6C2 -  -  -  -  dl_inc_x:
  837 D1:C6C2 -  -  -  -  
  838 D1:C6C2 -  -  -  -  dl_y_dist_2 .equ $ + 1 
  839 D1:C6C2 1E 00 -  -  	ld e,0 ;ld with y dist
  840 D1:C6C4 93 -  -  -  	sub a,e ;subtract y dist 
  841 D1:C6C5 -  -  -  -  	
  842 D1:C6C5 04 -  -  -  	inc b 
  843 D1:C6C6 CB 40 -  -  	bit 0,b 
  844 D1:C6C8 C2 D1 C6 D1 	jp nz,dl_inc_to_offset
  845 D1:C6CC -  -  -  -  dl_negative_x .equ $ ;replace with nop for negative 
  846 D1:C6CC 23 -  -  -  	inc hl ;add 1 to hl 	
  847 D1:C6CD C3 98 C6 D1 	jp dl_compare_y
  848 D1:C6D1 -  -  -  -  	
  849 D1:C6D1 -  -  -  -  
  850 D1:C6D1 -  -  -  -  dl_inc_to_offset:
  851 D1:C6D1 -  -  -  -  
  852 D1:C6D1 -  -  -  -  dl_negative_x_1 .equ $ ;replace with dec for negative 
  853 D1:C6D1 00 -  -  -  	nop
  854 D1:C6D2 C3 98 C6 D1 	jp dl_compare_y
  855 D1:C6D6 -  -  -  -  	
  856 D1:C6D6 -  -  -  -  
  857 D1:C6D6 -  -  -  -  dl_set_positive: ;line has pos slope
  858 D1:C6D6 3E 00 -  -  	ld a,%00000000 ;nop 
  859 D1:C6D8 32 D1 C6 D1 	ld (dl_negative_x_1),a
  860 D1:C6DC -  -  -  -  	
  861 D1:C6DC -  -  -  -  	;ld a, %00100011 ;inc  hl 
  862 D1:C6DC -  -  -  -  	;ld (dl_negative_x_2),a	
  863 D1:C6DC 3E 23 -  -  	ld a, %00100011 ;inc  hl 
  864 D1:C6DE 32 CC C6 D1 	ld (dl_negative_x),a 
  865 D1:C6E2 C9 -  -  -  	ret 
  866 D1:C6E3 -  -  -  -  	 
  867 D1:C6E3 -  -  -  -  
  868 D1:C6E3 -  -  -  -  dl_set_negative: ;line has neg slope 
  869 D1:C6E3 3E 00 -  -  	ld a,%00000000 ;nop 
  870 D1:C6E5 32 CC C6 D1 	ld (dl_negative_x),a 
  871 D1:C6E9 -  -  -  -  	;ld a, %00101011 ;dec hl
  872 D1:C6E9 -  -  -  -  	;ld (dl_negative_x_2),a
  873 D1:C6E9 3E 2B -  -  	ld a, %00101011 ;dec hl 
  874 D1:C6EB 32 D1 C6 D1 	ld (dl_negative_x_1),a 
  875 D1:C6EF -  -  -  -  	
  876 D1:C6EF C9 -  -  -  	ret 
  877 D1:C6F0 -  -  -  -  	
  878 D1:C6F0 -  -  -  -  	
  879 D1:C6F0 -  -  -  -  	
  880 D1:C6F0 -  -  -  -  	
  881 D1:C6F0 -  -  -  -  	
  882 D1:C6F0 -  -  -  -  	
  883 D1:C6F0 -  -  -  -  	
  884 D1:C6F0 -  -  -  -  	
  885 D1:C6F0 -  -  -  -  	
  886 D1:C6F0 -  -  -  -  	
  887 D1:C6F0 -  -  -  -  	
  888 D1:C6F0 -  -  -  -  	
  889 D1:C6F0 -  -  -  -  player_sprite_table: ;Add 4 for sprite, add 2 for flip, add 1 for offset
  890 D1:C6F0 5B 09 D4 -  	.dl FrogDefault_Slow
  891 D1:C6F3 8B 0A D4 -  	.dl FrogDefault_Slow_O
  892 D1:C6F6 BB 0B D4 -  	.dl FrogDefault_Slow_F
  893 D1:C6F9 EB 0C D4 -  	.dl FrogDefault_Slow_O_F ;3
  894 D1:C6FC A7 12 D4 -  	.dl FrogCharge_Slow ;4
  895 D1:C6FF C7 13 D4 -  	.dl FrogCharge_Slow_O
  896 D1:C702 ED 14 D4 -  	.dl FrogCharge_Slow_F
  897 D1:C705 13 16 D4 -  	.dl FrogCharge_Slow_O_F
  898 D1:C708 1B 0E D4 -  	.dl FrogChargeLit_Slow ;8
  899 D1:C70B 3B 0F D4 -  	.dl FrogChargeLit_Slow_O
  900 D1:C70E 61 10 D4 -  	.dl FrogChargeLit_Slow_F
  901 D1:C711 87 11 D4 -  	.dl FrogChargeLit_Slow_O_F
  902 D1:C714 33 17 D4 -  	.dl FrogJump_Slow;12
  903 D1:C717 AB 18 D4 -  	.dl FrogJump_Slow_O
  904 D1:C71A 2D 1A D4 -  	.dl FrogJump_Slow_F
  905 D1:C71D A5 1B D4 -  	.dl FrogJump_Slow_O_F
  906 D1:C720 27 1D D4 -  	.dl FrogJumpMouth_Slow ;16
  907 D1:C723 9F 1E D4 -  	.dl FrogJumpMouth_Slow_O
  908 D1:C726 21 20 D4 -  	.dl FrogJumpMouth_Slow_F
  909 D1:C729 99 21 D4 -  	.dl FrogJumpMouth_Slow_O_F
  910 D1:C72C 1B 23 D4 -  	.dl FrogFall_Slow;20
  911 D1:C72F 8B 24 D4 -  	.dl FrogFall_Slow_O
  912 D1:C732 05 26 D4 -  	.dl FrogFall_Slow_F
  913 D1:C735 75 27 D4 -  	.dl FrogFall_Slow_O_F
  914 D1:C738 7E 29 D4 -  	.dl Unlucky_0_Fast;24
  915 D1:C73B 7E 29 D4 -  	.dl Unlucky_0_Fast;25 (same if offset)
  916 D1:C73E -  -  -  -  	
  917 D1:C73E -  -  -  -  	
  918 D1:C73E -  -  -  -  	
  919 D1:C73E -  -  -  -  	
  920 D1:C73E -  -  -  -  	
  921 D1:C73E -  -  -  -  	
  922 D1:C73E -  -  -  -  	
  923 D1:C73E -  -  -  -  	
  924 D1:C73E -  -  -  -  	
  925 D1:C73E -  -  -  -  	
  926 D1:C73E -  -  -  -  	
  927 D1:C73E -  -  -  -  	
  928 D1:C73E -  -  -  -  	
  929 D1:C73E -  -  -  -  	
  930 D1:C73E -  -  -  -  	
  931 D1:C73E -  -  -  -  	
  932 D1:C73E -  -  -  -  	
  933 D1:C73E -  -  -  -  	
  934 D1:C73E -  -  -  -  	
Listing for file "ascent.asm"
  611 D1:C73E -  -  -  -  #include "sineFunc.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\sineFunc.txt"
    1 D1:C73E -  -  -  -  
    2 D1:C73E -  -  -  -  update_sine_vals:
    3 D1:C73E 01 00 00 00 	ld bc,0
    4 D1:C742 -  -  -  -  	
    5 D1:C742 3A 09 AC D1 	ld a, (frameCount+1);middle byte 
    6 D1:C746 CB 3F -  -  	srl a ;put bit 0 to carry flag 
    7 D1:C748 3A 08 AC D1 	ld a, (frameCount)
    8 D1:C74C 1F -  -  -  	rra ;a holds frame counter/2, ~16 second timer
    9 D1:C74D 21 BB C7 D1 	ld hl,sine_modes_table
   10 D1:C751 08 -  -  -  	ex af,af' ;' ;in
   11 D1:C752 3E 14 -  -  	ld a,20
   12 D1:C754 -  -  -  -  	
   13 D1:C754 -  -  -  -  update_sine_loop:
   14 D1:C754 08 -  -  -  	ex af,af' ;' ;out
   15 D1:C755 F5 -  -  -  	push af ;frame count 
   16 D1:C756 ED 17 -  -  	ld de, (hl) ;de holds correct sine value table 
   17 D1:C758 23 -  -  -  	inc hl 
   18 D1:C759 23 -  -  -  	inc hl 
   19 D1:C75A 23 -  -  -  	inc hl 
   20 D1:C75B E5 -  -  -  	push hl 
   21 D1:C75C CD 9B C7 D1 	call sine_apply_amplitudes
   22 D1:C760 E1 -  -  -  	pop hl
   23 D1:C761 F1 -  -  -  	pop af 
   24 D1:C762 -  -  -  -  	;a holds frame count 
   25 D1:C762 ED 17 -  -  	ld de, (hl) ;de holds lin value table
   26 D1:C764 23 -  -  -  	inc hl 
   27 D1:C765 23 -  -  -  	inc hl 
   28 D1:C766 23 -  -  -  	inc hl 
   29 D1:C767 E5 -  -  -  	push hl 
   30 D1:C768 F5 -  -  -  	push af
   31 D1:C769 -  -  -  -  	;A holds frame count for linear curve
   32 D1:C769 CD A2 C7 D1 	call lin_apply_amplitudes
   33 D1:C76D F1 -  -  -  	pop af 
   34 D1:C76E E1 -  -  -  	pop hl
   35 D1:C76F F5 -  -  -  	push af
   36 D1:C770 ED 17 -  -  	ld de, (hl) ;de holds linrep value table
   37 D1:C772 23 -  -  -  	inc hl 
   38 D1:C773 23 -  -  -  	inc hl 
   39 D1:C774 23 -  -  -  	inc hl 
   40 D1:C775 CB 7F -  -  	bit 7,a 
   41 D1:C777 CA 7D C7 D1 	jp z,update_sine_skip_rep
   42 D1:C77B EE FF -  -  	xor %11111111 ;if a >127, negate it to reverse the time 
   43 D1:C77D -  -  -  -  update_sine_skip_rep:
   44 D1:C77D E5 -  -  -  	push hl
   45 D1:C77E EB -  -  -  	ex de,hl 	
   46 D1:C77F CD A5 C7 D1 	call linrep_apply_amplitudes
   47 D1:C783 E1 -  -  -  	pop hl
   48 D1:C784 F1 -  -  -  	pop af 
   49 D1:C785 0E 40 -  -  	ld c,64 ;add quarter phase offset 
   50 D1:C787 81 -  -  -  	add a,c 
   51 D1:C788 08 -  -  -  	ex af,af' ;' ;in
   52 D1:C789 3D -  -  -  	dec a 
   53 D1:C78A C8 -  -  -  	ret z 
   54 D1:C78B 4F -  -  -  	ld c,a
   55 D1:C78C E6 03 -  -  	and %00000011 ;check last 2 bits
   56 D1:C78E 79 -  -  -  	ld a,c
   57 D1:C78F C2 54 C7 D1 	jp nz,update_sine_loop
   58 D1:C793 -  -  -  -  	;otherwise, a is multiple of 4, multiply clock speed 
   59 D1:C793 08 -  -  -  	ex af, af' ;' ;out
   60 D1:C794 CB 27 -  -  	sla a ;mult by 2 
   61 D1:C796 08 -  -  -  	ex af, af' ;' ;in
   62 D1:C797 C3 54 C7 D1 	jp update_sine_loop
   63 D1:C79B -  -  -  -  	
   64 D1:C79B -  -  -  -  	
   65 D1:C79B -  -  -  -  	
   66 D1:C79B -  -  -  -  	
   67 D1:C79B -  -  -  -  	
   68 D1:C79B -  -  -  -  	
   69 D1:C79B -  -  -  -  sine_apply_amplitudes: ;a holds scaled frame count,de holds ptr to correct sine value table
   70 D1:C79B 21 9B C9 D1 	ld hl, sine
   71 D1:C79F 4F -  -  -  	ld c,a 
   72 D1:C7A0 09 -  -  -  	add hl,bc 
   73 D1:C7A1 7E -  -  -  	ld a,(hl); a holds sine value 
   74 D1:C7A2 -  -  -  -  lin_apply_amplitudes:
   75 D1:C7A2 EB -  -  -  	ex de,hl 
   76 D1:C7A3 CB 3F -  -  	srl a ;div 2 
   77 D1:C7A5 -  -  -  -  linrep_apply_amplitudes:
   78 D1:C7A5 CB 3F -  -  	srl a 
   79 D1:C7A7 CB 3F -  -  	srl a ;amplitude of 31 
   80 D1:C7A9 77 -  -  -  	ld (hl),a 
   81 D1:C7AA 23 -  -  -  	inc hl 
   82 D1:C7AB CB 3F -  -  	srl a ;amplitude of 15 
   83 D1:C7AD 77 -  -  -  	ld (hl),a 
   84 D1:C7AE 23 -  -  -  	inc hl
   85 D1:C7AF CB 3F -  -  	srl a ;amplitude of 7 
   86 D1:C7B1 77 -  -  -  	ld (hl),a 
   87 D1:C7B2 23 -  -  -  	inc hl
   88 D1:C7B3 CB 3F -  -  	srl a ;amplitude of 3 
   89 D1:C7B5 77 -  -  -  	ld (hl),a 
   90 D1:C7B6 23 -  -  -  	inc hl
   91 D1:C7B7 CB 3F -  -  	srl a ;amplitude of 1 
   92 D1:C7B9 77 -  -  -  	ld (hl),a
   93 D1:C7BA C9 -  -  -  	ret 
   94 D1:C7BB -  -  -  -  
   95 D1:C7BB -  -  -  -  
   96 D1:C7BB -  -  -  -  
   97 D1:C7BB -  -  -  -  sine_modes_table:
   98 D1:C7BB 6F C8 D1 -  	.dl sine_05_1
   99 D1:C7BE D3 C8 D1 -  	.dl lin_05_1
  100 D1:C7C1 37 C9 D1 -  	.dl linrep_05_1
  101 D1:C7C4 74 C8 D1 -  	.dl sine_05_2
  102 D1:C7C7 D8 C8 D1 -  	.dl lin_05_2
  103 D1:C7CA 3C C9 D1 -  	.dl linrep_05_2
  104 D1:C7CD 79 C8 D1 -  	.dl sine_05_3
  105 D1:C7D0 DD C8 D1 -  	.dl lin_05_3
  106 D1:C7D3 41 C9 D1 -  	.dl linrep_05_3
  107 D1:C7D6 7E C8 D1 -  	.dl sine_05_4
  108 D1:C7D9 E2 C8 D1 -  	.dl lin_05_4
  109 D1:C7DC 46 C9 D1 -  	.dl linrep_05_4
  110 D1:C7DF -  -  -  -  	
  111 D1:C7DF 83 C8 D1 -  	.dl sine_1_1
  112 D1:C7E2 E7 C8 D1 -  	.dl lin_1_1
  113 D1:C7E5 4B C9 D1 -  	.dl linrep_1_1
  114 D1:C7E8 88 C8 D1 -  	.dl sine_1_2
  115 D1:C7EB EC C8 D1 -  	.dl lin_1_2
  116 D1:C7EE 50 C9 D1 -  	.dl linrep_1_2
  117 D1:C7F1 8D C8 D1 -  	.dl sine_1_3
  118 D1:C7F4 F1 C8 D1 -  	.dl lin_1_3
  119 D1:C7F7 55 C9 D1 -  	.dl linrep_1_3
  120 D1:C7FA 92 C8 D1 -  	.dl sine_1_4
  121 D1:C7FD F6 C8 D1 -  	.dl lin_1_4
  122 D1:C800 5A C9 D1 -  	.dl linrep_1_4
  123 D1:C803 -  -  -  -  	
  124 D1:C803 97 C8 D1 -  	.dl sine_2_1
  125 D1:C806 FB C8 D1 -  	.dl lin_2_1
  126 D1:C809 5F C9 D1 -  	.dl linrep_2_1
  127 D1:C80C 9C C8 D1 -  	.dl sine_2_2
  128 D1:C80F 00 C9 D1 -  	.dl lin_2_2
  129 D1:C812 64 C9 D1 -  	.dl linrep_2_2
  130 D1:C815 A1 C8 D1 -  	.dl sine_2_3
  131 D1:C818 05 C9 D1 -  	.dl lin_2_3
  132 D1:C81B 69 C9 D1 -  	.dl linrep_2_3
  133 D1:C81E A6 C8 D1 -  	.dl sine_2_4
  134 D1:C821 0A C9 D1 -  	.dl lin_2_4
  135 D1:C824 6E C9 D1 -  	.dl linrep_2_4
  136 D1:C827 -  -  -  -  	
  137 D1:C827 AB C8 D1 -  	.dl sine_4_1
  138 D1:C82A 0F C9 D1 -  	.dl lin_4_1
  139 D1:C82D 73 C9 D1 -  	.dl linrep_4_1
  140 D1:C830 B0 C8 D1 -  	.dl sine_4_2
  141 D1:C833 14 C9 D1 -  	.dl lin_4_2
  142 D1:C836 78 C9 D1 -  	.dl linrep_4_2
  143 D1:C839 B5 C8 D1 -  	.dl sine_4_3
  144 D1:C83C 19 C9 D1 -  	.dl lin_4_3
  145 D1:C83F 7D C9 D1 -  	.dl linrep_4_3
  146 D1:C842 BA C8 D1 -  	.dl sine_4_4
  147 D1:C845 1E C9 D1 -  	.dl lin_4_4
  148 D1:C848 82 C9 D1 -  	.dl linrep_4_4
  149 D1:C84B -  -  -  -  
  150 D1:C84B BF C8 D1 -  	.dl sine_8_1
  151 D1:C84E 23 C9 D1 -  	.dl lin_8_1
  152 D1:C851 87 C9 D1 -  	.dl linrep_8_1
  153 D1:C854 C4 C8 D1 -  	.dl sine_8_2
  154 D1:C857 28 C9 D1 -  	.dl lin_8_2
  155 D1:C85A 8C C9 D1 -  	.dl linrep_8_2
  156 D1:C85D C9 C8 D1 -  	.dl sine_8_3
  157 D1:C860 2D C9 D1 -  	.dl lin_8_3
  158 D1:C863 91 C9 D1 -  	.dl linrep_8_3
  159 D1:C866 CE C8 D1 -  	.dl sine_8_4
  160 D1:C869 32 C9 D1 -  	.dl lin_8_4
  161 D1:C86C 96 C9 D1 -  	.dl linrep_8_4
  162 D1:C86F -  -  -  -  
  163 D1:C86F -  -  -  -  
  164 D1:C86F -  -  -  -  
  165 D1:C86F -  -  -  -  
  166 D1:C86F -  -  -  -  sine_05_1: ;half frequency, no phase shift
  167 D1:C86F -  -  -  -  sine_05_31_1: ;freqMult, amplitude, phase 
  168 D1:C86F 00 -  -  -  	.db 0  
  169 D1:C870 -  -  -  -  sine_05_15_1: ;freqMult, amplitude, phase 
  170 D1:C870 00 -  -  -  	.db 0 
  171 D1:C871 -  -  -  -  sine_05_7_1: ;freqMult, amplitude, phase 
  172 D1:C871 00 -  -  -  	.db 0 
  173 D1:C872 -  -  -  -  sine_05_3_1: ;freqMult, amplitude, phase 
  174 D1:C872 00 -  -  -  	.db 0 
  175 D1:C873 -  -  -  -  sine_05_1_1: ;freqMult, amplitude, phase 
  176 D1:C873 00 -  -  -  	.db 0 
  177 D1:C874 -  -  -  -  
  178 D1:C874 -  -  -  -  	
  179 D1:C874 -  -  -  -  	
  180 D1:C874 -  -  -  -  sine_05_2: ;half frequency, no phase shift 
  181 D1:C874 -  -  -  -  sine_05_31_2: ;freqMult, amplitude, phase 
  182 D1:C874 00 -  -  -  	.db 0 
  183 D1:C875 -  -  -  -  sine_05_15_2: ;freqMult, amplitude, phase 
  184 D1:C875 00 -  -  -  	.db 0 
  185 D1:C876 -  -  -  -  sine_05_7_2: ;freqMult, amplitude, phase 
  186 D1:C876 00 -  -  -  	.db 0 
  187 D1:C877 -  -  -  -  sine_05_3_2: ;freqMult, amplitude, phase 
  188 D1:C877 00 -  -  -  	.db 0 
  189 D1:C878 -  -  -  -  sine_05_1_2: ;freqMult, amplitude, phase 
  190 D1:C878 00 -  -  -  	.db 0 
  191 D1:C879 -  -  -  -  
  192 D1:C879 -  -  -  -  	
  193 D1:C879 -  -  -  -  sine_05_3: ;half frequency, no phase shift
  194 D1:C879 -  -  -  -  sine_05_31_3: ;freqMult, amplitude, phase 
  195 D1:C879 00 -  -  -  	.db 0  
  196 D1:C87A -  -  -  -  sine_05_15_3: ;freqMult, amplitude, phase 
  197 D1:C87A 00 -  -  -  	.db 0 
  198 D1:C87B -  -  -  -  sine_05_7_3: ;freqMult, amplitude, phase 
  199 D1:C87B 00 -  -  -  	.db 0 
  200 D1:C87C -  -  -  -  sine_05_3_3: ;freqMult, amplitude, phase 
  201 D1:C87C 00 -  -  -  	.db 0 
  202 D1:C87D -  -  -  -  sine_05_1_3: ;freqMult, amplitude, phase 
  203 D1:C87D 00 -  -  -  	.db 0 
  204 D1:C87E -  -  -  -  
  205 D1:C87E -  -  -  -  
  206 D1:C87E -  -  -  -  sine_05_4: ;half frequency, no phase shift 
  207 D1:C87E -  -  -  -  sine_05_31_4: ;freqMult, amplitude, phase 
  208 D1:C87E 00 -  -  -  	.db 0
  209 D1:C87F -  -  -  -  sine_05_15_4: ;freqMult, amplitude, phase 
  210 D1:C87F 00 -  -  -  	.db 0 
  211 D1:C880 -  -  -  -  sine_05_7_4: ;freqMult, amplitude, phase 
  212 D1:C880 00 -  -  -  	.db 0 
  213 D1:C881 -  -  -  -  sine_05_3_4: ;freqMult, amplitude, phase 
  214 D1:C881 00 -  -  -  	.db 0 
  215 D1:C882 -  -  -  -  sine_05_1_4: ;freqMult, amplitude, phase 
  216 D1:C882 00 -  -  -  	.db 0 
  217 D1:C883 -  -  -  -  
  218 D1:C883 -  -  -  -  
  219 D1:C883 -  -  -  -  	
  220 D1:C883 -  -  -  -  sine_1_1: ;no freq mult, no phase shift
  221 D1:C883 -  -  -  -  sine_1_31_1: ;freqMult, amplitude, phase 
  222 D1:C883 00 -  -  -  	.db 0  
  223 D1:C884 -  -  -  -  sine_1_15_1: ;freqMult, amplitude, phase 
  224 D1:C884 00 -  -  -  	.db 0 
  225 D1:C885 -  -  -  -  sine_1_7_1: ;freqMult, amplitude, phase 
  226 D1:C885 00 -  -  -  	.db 0 
  227 D1:C886 -  -  -  -  sine_1_3_1: ;freqMult, amplitude, phase 
  228 D1:C886 00 -  -  -  	.db 0 
  229 D1:C887 -  -  -  -  sine_1_1_1: ;freqMult, amplitude, phase 
  230 D1:C887 00 -  -  -  	.db 0 
  231 D1:C888 -  -  -  -  
  232 D1:C888 -  -  -  -  	
  233 D1:C888 -  -  -  -  sine_1_2: ;no freq mult, no phase shift 
  234 D1:C888 -  -  -  -  sine_1_31_2: ;freqMult, amplitude, phase 
  235 D1:C888 00 -  -  -  	.db 0 
  236 D1:C889 -  -  -  -  sine_1_15_2: ;freqMult, amplitude, phase 
  237 D1:C889 00 -  -  -  	.db 0 
  238 D1:C88A -  -  -  -  sine_1_7_2: ;freqMult, amplitude, phase 
  239 D1:C88A 00 -  -  -  	.db 0 
  240 D1:C88B -  -  -  -  sine_1_3_2: ;freqMult, amplitude, phase 
  241 D1:C88B 00 -  -  -  	.db 0 
  242 D1:C88C -  -  -  -  sine_1_1_2: ;freqMult, amplitude, phase 
  243 D1:C88C 00 -  -  -  	.db 0 
  244 D1:C88D -  -  -  -  
  245 D1:C88D -  -  -  -  sine_1_3: ;no freq mult, no phase shift 
  246 D1:C88D -  -  -  -  sine_1_31_3: ;freqMult, amplitude, phase 
  247 D1:C88D 00 -  -  -  	.db 0 
  248 D1:C88E -  -  -  -  sine_1_15_3: ;freqMult, amplitude, phase 
  249 D1:C88E 00 -  -  -  	.db 0 
  250 D1:C88F -  -  -  -  sine_1_7_3: ;freqMult, amplitude, phase 
  251 D1:C88F 00 -  -  -  	.db 0 
  252 D1:C890 -  -  -  -  sine_1_3_3: ;freqMult, amplitude, phase 
  253 D1:C890 00 -  -  -  	.db 0 
  254 D1:C891 -  -  -  -  sine_1_1_3: ;freqMult, amplitude, phase 
  255 D1:C891 00 -  -  -  	.db 0 
  256 D1:C892 -  -  -  -  
  257 D1:C892 -  -  -  -  	
  258 D1:C892 -  -  -  -  sine_1_4: ;no freq mult, no phase shift
  259 D1:C892 -  -  -  -  sine_1_31_4: ;freqMult, amplitude, phase 
  260 D1:C892 00 -  -  -  	.db 0  
  261 D1:C893 -  -  -  -  sine_1_15_4: ;freqMult, amplitude, phase 
  262 D1:C893 00 -  -  -  	.db 0 
  263 D1:C894 -  -  -  -  sine_1_7_4: ;freqMult, amplitude, phase 
  264 D1:C894 00 -  -  -  	.db 0 
  265 D1:C895 -  -  -  -  sine_1_3_4: ;freqMult, amplitude, phase 
  266 D1:C895 00 -  -  -  	.db 0 
  267 D1:C896 -  -  -  -  sine_1_1_4: ;freqMult, amplitude, phase 
  268 D1:C896 00 -  -  -  	.db 0 
  269 D1:C897 -  -  -  -  
  270 D1:C897 -  -  -  -  
  271 D1:C897 -  -  -  -  
  272 D1:C897 -  -  -  -  
  273 D1:C897 -  -  -  -  sine_2_1: ;double freq mult
  274 D1:C897 -  -  -  -  sine_2_31_1: ;freqMult, amplitude, phase 
  275 D1:C897 00 -  -  -  	.db 0 
  276 D1:C898 -  -  -  -  sine_2_15_1: ;freqMult, amplitude, phase 
  277 D1:C898 00 -  -  -  	.db 0 
  278 D1:C899 -  -  -  -  sine_2_7_1: ;freqMult, amplitude, phase 
  279 D1:C899 00 -  -  -  	.db 0 
  280 D1:C89A -  -  -  -  sine_2_3_1: ;freqMult, amplitude, phase 
  281 D1:C89A 00 -  -  -  	.db 0 
  282 D1:C89B -  -  -  -  sine_2_1_1: ;freqMult, amplitude, phase 
  283 D1:C89B 00 -  -  -  	.db 0 
  284 D1:C89C -  -  -  -  
  285 D1:C89C -  -  -  -  	
  286 D1:C89C -  -  -  -  sine_2_2: 
  287 D1:C89C -  -  -  -  sine_2_31_2: ;freqMult, amplitude, phase 
  288 D1:C89C 00 -  -  -  	.db 0 
  289 D1:C89D -  -  -  -  sine_2_15_2: ;freqMult, amplitude, phase 
  290 D1:C89D 00 -  -  -  	.db 0 
  291 D1:C89E -  -  -  -  sine_2_7_2: ;freqMult, amplitude, phase 
  292 D1:C89E 00 -  -  -  	.db 0 
  293 D1:C89F -  -  -  -  sine_2_3_2: ;freqMult, amplitude, phase 
  294 D1:C89F 00 -  -  -  	.db 0 
  295 D1:C8A0 -  -  -  -  sine_2_1_2: ;freqMult, amplitude, phase 
  296 D1:C8A0 00 -  -  -  	.db 0 
  297 D1:C8A1 -  -  -  -  
  298 D1:C8A1 -  -  -  -  	
  299 D1:C8A1 -  -  -  -  sine_2_3: 
  300 D1:C8A1 -  -  -  -  sine_2_31_3: ;freqMult, amplitude, phase 
  301 D1:C8A1 00 -  -  -  	.db 0 
  302 D1:C8A2 -  -  -  -  sine_2_15_3: ;freqMult, amplitude, phase 
  303 D1:C8A2 00 -  -  -  	.db 0 
  304 D1:C8A3 -  -  -  -  sine_2_7_3: ;freqMult, amplitude, phase 
  305 D1:C8A3 00 -  -  -  	.db 0 
  306 D1:C8A4 -  -  -  -  sine_2_3_3: ;freqMult, amplitude, phase 
  307 D1:C8A4 00 -  -  -  	.db 0 
  308 D1:C8A5 -  -  -  -  sine_2_1_3: ;freqMult, amplitude, phase 
  309 D1:C8A5 00 -  -  -  	.db 0 
  310 D1:C8A6 -  -  -  -  
  311 D1:C8A6 -  -  -  -  	
  312 D1:C8A6 -  -  -  -  sine_2_4: 
  313 D1:C8A6 -  -  -  -  sine_2_31_4: ;freqMult, amplitude, phase 
  314 D1:C8A6 00 -  -  -  	.db 0	
  315 D1:C8A7 -  -  -  -  sine_2_15_4: ;freqMult, amplitude, phase 
  316 D1:C8A7 00 -  -  -  	.db 0 
  317 D1:C8A8 -  -  -  -  sine_2_7_4: ;freqMult, amplitude, phase 
  318 D1:C8A8 00 -  -  -  	.db 0 
  319 D1:C8A9 -  -  -  -  sine_2_3_4: ;freqMult, amplitude, phase 
  320 D1:C8A9 00 -  -  -  	.db 0 
  321 D1:C8AA -  -  -  -  sine_2_1_4: ;freqMult, amplitude, phase 
  322 D1:C8AA 00 -  -  -  	.db 0 
  323 D1:C8AB -  -  -  -  
  324 D1:C8AB -  -  -  -  
  325 D1:C8AB -  -  -  -  
  326 D1:C8AB -  -  -  -  
  327 D1:C8AB -  -  -  -  sine_4_1: ;double freq mult
  328 D1:C8AB -  -  -  -  sine_4_31_1: ;freqMult, amplitude, phase 
  329 D1:C8AB 00 -  -  -  	.db 0 
  330 D1:C8AC -  -  -  -  sine_4_15_1: ;freqMult, amplitude, phase 
  331 D1:C8AC 00 -  -  -  	.db 0 
  332 D1:C8AD -  -  -  -  sine_4_7_1: ;freqMult, amplitude, phase 
  333 D1:C8AD 00 -  -  -  	.db 0 
  334 D1:C8AE -  -  -  -  sine_4_3_1: ;freqMult, amplitude, phase 
  335 D1:C8AE 00 -  -  -  	.db 0 
  336 D1:C8AF -  -  -  -  sine_4_1_1: ;freqMult, amplitude, phase 
  337 D1:C8AF 00 -  -  -  	.db 0 
  338 D1:C8B0 -  -  -  -  
  339 D1:C8B0 -  -  -  -  	
  340 D1:C8B0 -  -  -  -  sine_4_2: 
  341 D1:C8B0 -  -  -  -  sine_4_31_2: ;freqMult, amplitude, phase 
  342 D1:C8B0 00 -  -  -  	.db 0
  343 D1:C8B1 -  -  -  -  sine_4_15_2: ;freqMult, amplitude, phase 
  344 D1:C8B1 00 -  -  -  	.db 0 
  345 D1:C8B2 -  -  -  -  sine_4_7_2: ;freqMult, amplitude, phase 
  346 D1:C8B2 00 -  -  -  	.db 0 
  347 D1:C8B3 -  -  -  -  sine_4_3_2: ;freqMult, amplitude, phase 
  348 D1:C8B3 00 -  -  -  	.db 0 
  349 D1:C8B4 -  -  -  -  sine_4_1_2: ;freqMult, amplitude, phase 
  350 D1:C8B4 00 -  -  -  	.db 0 
  351 D1:C8B5 -  -  -  -  
  352 D1:C8B5 -  -  -  -  	
  353 D1:C8B5 -  -  -  -  sine_4_3: 
  354 D1:C8B5 -  -  -  -  sine_4_31_3: ;freqMult, amplitude, phase 
  355 D1:C8B5 00 -  -  -  	.db 0 
  356 D1:C8B6 -  -  -  -  sine_4_15_3: ;freqMult, amplitude, phase 
  357 D1:C8B6 00 -  -  -  	.db 0 
  358 D1:C8B7 -  -  -  -  sine_4_7_3: ;freqMult, amplitude, phase 
  359 D1:C8B7 00 -  -  -  	.db 0 
  360 D1:C8B8 -  -  -  -  sine_4_3_3: ;freqMult, amplitude, phase 
  361 D1:C8B8 00 -  -  -  	.db 0 
  362 D1:C8B9 -  -  -  -  sine_4_1_3: ;freqMult, amplitude, phase 
  363 D1:C8B9 00 -  -  -  	.db 0 
  364 D1:C8BA -  -  -  -  
  365 D1:C8BA -  -  -  -  	
  366 D1:C8BA -  -  -  -  sine_4_4: 
  367 D1:C8BA -  -  -  -  sine_4_314: ;freqMult, amplitude, phase 
  368 D1:C8BA 00 -  -  -  	.db 0
  369 D1:C8BB -  -  -  -  sine_4_15_4: ;freqMult, amplitude, phase 
  370 D1:C8BB 00 -  -  -  	.db 0 
  371 D1:C8BC -  -  -  -  sine_4_7_4: ;freqMult, amplitude, phase 
  372 D1:C8BC 00 -  -  -  	.db 0 
  373 D1:C8BD -  -  -  -  sine_4_3_4: ;freqMult, amplitude, phase 
  374 D1:C8BD 00 -  -  -  	.db 0 
  375 D1:C8BE -  -  -  -  sine_4_1_4: ;freqMult, amplitude, phase 
  376 D1:C8BE 00 -  -  -  	.db 0 
  377 D1:C8BF -  -  -  -  
  378 D1:C8BF -  -  -  -  
  379 D1:C8BF -  -  -  -  
  380 D1:C8BF -  -  -  -  
  381 D1:C8BF -  -  -  -  
  382 D1:C8BF -  -  -  -  sine_8_1: ;double freq mult
  383 D1:C8BF -  -  -  -  sine_8_31_1: ;freqMult, amplitude, phase 
  384 D1:C8BF 00 -  -  -  	.db 0 
  385 D1:C8C0 -  -  -  -  sine_8_15_1: ;freqMult, amplitude, phase 
  386 D1:C8C0 00 -  -  -  	.db 0 
  387 D1:C8C1 -  -  -  -  sine_8_7_1: ;freqMult, amplitude, phase 
  388 D1:C8C1 00 -  -  -  	.db 0 
  389 D1:C8C2 -  -  -  -  sine_8_3_1: ;freqMult, amplitude, phase 
  390 D1:C8C2 00 -  -  -  	.db 0 
  391 D1:C8C3 -  -  -  -  sine_8_1_1: ;freqMult, amplitude, phase 
  392 D1:C8C3 00 -  -  -  	.db 0 
  393 D1:C8C4 -  -  -  -  
  394 D1:C8C4 -  -  -  -  	
  395 D1:C8C4 -  -  -  -  sine_8_2: 
  396 D1:C8C4 -  -  -  -  sine_8_31_2: ;freqMult, amplitude, phase 
  397 D1:C8C4 00 -  -  -  	.db 0 
  398 D1:C8C5 -  -  -  -  sine_8_15_2: ;freqMult, amplitude, phase 
  399 D1:C8C5 00 -  -  -  	.db 0 
  400 D1:C8C6 -  -  -  -  sine_8_7_2: ;freqMult, amplitude, phase 
  401 D1:C8C6 00 -  -  -  	.db 0 
  402 D1:C8C7 -  -  -  -  sine_8_3_2: ;freqMult, amplitude, phase 
  403 D1:C8C7 00 -  -  -  	.db 0 
  404 D1:C8C8 -  -  -  -  sine_8_1_2: ;freqMult, amplitude, phase 
  405 D1:C8C8 00 -  -  -  	.db 0 
  406 D1:C8C9 -  -  -  -  
  407 D1:C8C9 -  -  -  -  	
  408 D1:C8C9 -  -  -  -  sine_8_3: 
  409 D1:C8C9 -  -  -  -  sine_8_313: ;freqMult, amplitude, phase 
  410 D1:C8C9 00 -  -  -  	.db 0 
  411 D1:C8CA -  -  -  -  sine_8_15_3: ;freqMult, amplitude, phase 
  412 D1:C8CA 00 -  -  -  	.db 0 
  413 D1:C8CB -  -  -  -  sine_8_7_3: ;freqMult, amplitude, phase 
  414 D1:C8CB 00 -  -  -  	.db 0 
  415 D1:C8CC -  -  -  -  sine_8_3_3: ;freqMult, amplitude, phase 
  416 D1:C8CC 00 -  -  -  	.db 0 
  417 D1:C8CD -  -  -  -  sine_8_1_3: ;freqMult, amplitude, phase 
  418 D1:C8CD 00 -  -  -  	.db 0 
  419 D1:C8CE -  -  -  -  
  420 D1:C8CE -  -  -  -  	
  421 D1:C8CE -  -  -  -  sine_8_4: 
  422 D1:C8CE -  -  -  -  sine_8_31_4: ;freqMult, amplitude, phase 
  423 D1:C8CE 00 -  -  -  	.db 0
  424 D1:C8CF -  -  -  -  sine_8_15_4: ;freqMult, amplitude, phase 
  425 D1:C8CF 00 -  -  -  	.db 0 
  426 D1:C8D0 -  -  -  -  sine_8_7_4: ;freqMult, amplitude, phase 
  427 D1:C8D0 00 -  -  -  	.db 0 
  428 D1:C8D1 -  -  -  -  sine_8_3_4: ;freqMult, amplitude, phase 
  429 D1:C8D1 00 -  -  -  	.db 0 
  430 D1:C8D2 -  -  -  -  sine_8_1_4: ;freqMult, amplitude, phase 
  431 D1:C8D2 00 -  -  -  	.db 0 
  432 D1:C8D3 -  -  -  -  
  433 D1:C8D3 -  -  -  -  
  434 D1:C8D3 -  -  -  -  
  435 D1:C8D3 -  -  -  -  
  436 D1:C8D3 -  -  -  -  lin_05_1:
  437 D1:C8D3 -  -  -  -  lin_05_31_1:
  438 D1:C8D3 00 -  -  -  	.db 0 
  439 D1:C8D4 -  -  -  -  lin_05_15_1:
  440 D1:C8D4 00 -  -  -  	.db 0 
  441 D1:C8D5 -  -  -  -  lin_05_7_1:
  442 D1:C8D5 00 -  -  -  	.db 0 
  443 D1:C8D6 -  -  -  -  lin_05_3_1:
  444 D1:C8D6 00 -  -  -  	.db 0 
  445 D1:C8D7 -  -  -  -  lin_05_1_1:
  446 D1:C8D7 00 -  -  -  	.db 0 
  447 D1:C8D8 -  -  -  -  
  448 D1:C8D8 -  -  -  -  lin_05_2:
  449 D1:C8D8 -  -  -  -  lin_05_31_2:
  450 D1:C8D8 00 -  -  -  	.db 0 
  451 D1:C8D9 -  -  -  -  lin_05_15_2:
  452 D1:C8D9 00 -  -  -  	.db 0 
  453 D1:C8DA -  -  -  -  lin_05_7_2:
  454 D1:C8DA 00 -  -  -  	.db 0 
  455 D1:C8DB -  -  -  -  lin_05_3_2:
  456 D1:C8DB 00 -  -  -  	.db 0 
  457 D1:C8DC -  -  -  -  lin_05_1_2:
  458 D1:C8DC 00 -  -  -  	.db 0 	
  459 D1:C8DD -  -  -  -  	
  460 D1:C8DD -  -  -  -  lin_05_3:
  461 D1:C8DD -  -  -  -  lin_05_31_3:
  462 D1:C8DD 00 -  -  -  	.db 0 
  463 D1:C8DE -  -  -  -  lin_05_15_3:
  464 D1:C8DE 00 -  -  -  	.db 0 
  465 D1:C8DF -  -  -  -  lin_05_7_3:
  466 D1:C8DF 00 -  -  -  	.db 0 
  467 D1:C8E0 -  -  -  -  lin_05_3_3:
  468 D1:C8E0 00 -  -  -  	.db 0 
  469 D1:C8E1 -  -  -  -  lin_05_1_3:
  470 D1:C8E1 00 -  -  -  	.db 0 	
  471 D1:C8E2 -  -  -  -  	
  472 D1:C8E2 -  -  -  -  lin_05_4:
  473 D1:C8E2 -  -  -  -  lin_05_31_4:
  474 D1:C8E2 00 -  -  -  	.db 0 
  475 D1:C8E3 -  -  -  -  lin_05_15_4:
  476 D1:C8E3 00 -  -  -  	.db 0 
  477 D1:C8E4 -  -  -  -  lin_05_7_4:
  478 D1:C8E4 00 -  -  -  	.db 0 
  479 D1:C8E5 -  -  -  -  lin_05_3_4:
  480 D1:C8E5 00 -  -  -  	.db 0 
  481 D1:C8E6 -  -  -  -  lin_05_1_4:
  482 D1:C8E6 00 -  -  -  	.db 0 
  483 D1:C8E7 -  -  -  -  
  484 D1:C8E7 -  -  -  -  lin_1_1:
  485 D1:C8E7 -  -  -  -  lin_1_31_1:
  486 D1:C8E7 00 -  -  -  	.db 0 
  487 D1:C8E8 -  -  -  -  lin_1_15_1:
  488 D1:C8E8 00 -  -  -  	.db 0 
  489 D1:C8E9 -  -  -  -  lin_1_7_1:
  490 D1:C8E9 00 -  -  -  	.db 0 
  491 D1:C8EA -  -  -  -  lin_1_3_1:
  492 D1:C8EA 00 -  -  -  	.db 0
  493 D1:C8EB -  -  -  -  lin_1_1_1:
  494 D1:C8EB 00 -  -  -  	.db 0 	
  495 D1:C8EC -  -  -  -  
  496 D1:C8EC -  -  -  -  lin_1_2:
  497 D1:C8EC -  -  -  -  lin_1_31_2:
  498 D1:C8EC 00 -  -  -  	.db 0 
  499 D1:C8ED -  -  -  -  lin_1_15_2:
  500 D1:C8ED 00 -  -  -  	.db 0 
  501 D1:C8EE -  -  -  -  lin_1_7_2:
  502 D1:C8EE 00 -  -  -  	.db 0 
  503 D1:C8EF -  -  -  -  lin_1_3_2:
  504 D1:C8EF 00 -  -  -  	.db 0 
  505 D1:C8F0 -  -  -  -  lin_1_1_2:
  506 D1:C8F0 00 -  -  -  	.db 0 
  507 D1:C8F1 -  -  -  -  	
  508 D1:C8F1 -  -  -  -  lin_1_3:
  509 D1:C8F1 -  -  -  -  lin_1_31_3:
  510 D1:C8F1 00 -  -  -  	.db 0 
  511 D1:C8F2 -  -  -  -  lin_1_15_3:
  512 D1:C8F2 00 -  -  -  	.db 0 
  513 D1:C8F3 -  -  -  -  lin_1_7_3:
  514 D1:C8F3 00 -  -  -  	.db 0 
  515 D1:C8F4 -  -  -  -  lin_1_3_3:
  516 D1:C8F4 00 -  -  -  	.db 0 
  517 D1:C8F5 -  -  -  -  lin_1_1_3:
  518 D1:C8F5 00 -  -  -  	.db 0 
  519 D1:C8F6 -  -  -  -  	
  520 D1:C8F6 -  -  -  -  lin_1_4:
  521 D1:C8F6 -  -  -  -  lin_1_31_4:
  522 D1:C8F6 00 -  -  -  	.db 0 
  523 D1:C8F7 -  -  -  -  lin_1_15_4:
  524 D1:C8F7 00 -  -  -  	.db 0 
  525 D1:C8F8 -  -  -  -  lin_1_7_4:
  526 D1:C8F8 00 -  -  -  	.db 0 
  527 D1:C8F9 -  -  -  -  lin_1_3_4:
  528 D1:C8F9 00 -  -  -  	.db 0 
  529 D1:C8FA -  -  -  -  lin_1_1_4:
  530 D1:C8FA 00 -  -  -  	.db 0 
  531 D1:C8FB -  -  -  -  	
  532 D1:C8FB -  -  -  -  lin_2_1:
  533 D1:C8FB -  -  -  -  lin_2_31_1:
  534 D1:C8FB 00 -  -  -  	.db 0 
  535 D1:C8FC -  -  -  -  lin_2_15_1:
  536 D1:C8FC 00 -  -  -  	.db 0 
  537 D1:C8FD -  -  -  -  lin_2_7_1:
  538 D1:C8FD 00 -  -  -  	.db 0 
  539 D1:C8FE -  -  -  -  lin_2_3_1:
  540 D1:C8FE 00 -  -  -  	.db 0 
  541 D1:C8FF -  -  -  -  lin_2_1_1:
  542 D1:C8FF 00 -  -  -  	.db 0
  543 D1:C900 -  -  -  -  
  544 D1:C900 -  -  -  -  lin_2_2:
  545 D1:C900 -  -  -  -  lin_2_31_2:
  546 D1:C900 00 -  -  -  	.db 0 
  547 D1:C901 -  -  -  -  lin_2_15_2:
  548 D1:C901 00 -  -  -  	.db 0 
  549 D1:C902 -  -  -  -  lin_2_7_2:
  550 D1:C902 00 -  -  -  	.db 0 
  551 D1:C903 -  -  -  -  lin_2_3_2:
  552 D1:C903 00 -  -  -  	.db 0 
  553 D1:C904 -  -  -  -  lin_2_1_2:
  554 D1:C904 00 -  -  -  	.db 0 
  555 D1:C905 -  -  -  -  	
  556 D1:C905 -  -  -  -  lin_2_3:
  557 D1:C905 -  -  -  -  lin_2_31_3:
  558 D1:C905 00 -  -  -  	.db 0 
  559 D1:C906 -  -  -  -  lin_2_15_3:
  560 D1:C906 00 -  -  -  	.db 0 
  561 D1:C907 -  -  -  -  lin_2_7_3:
  562 D1:C907 00 -  -  -  	.db 0 
  563 D1:C908 -  -  -  -  lin_2_3_3:
  564 D1:C908 00 -  -  -  	.db 0 
  565 D1:C909 -  -  -  -  lin_2_1_3:
  566 D1:C909 00 -  -  -  	.db 0 
  567 D1:C90A -  -  -  -  	
  568 D1:C90A -  -  -  -  lin_2_4:
  569 D1:C90A -  -  -  -  lin_2_31_4:
  570 D1:C90A 00 -  -  -  	.db 0 
  571 D1:C90B -  -  -  -  lin_2_15_4:
  572 D1:C90B 00 -  -  -  	.db 0 
  573 D1:C90C -  -  -  -  lin_2_7_4:
  574 D1:C90C 00 -  -  -  	.db 0 
  575 D1:C90D -  -  -  -  lin_2_3_4:
  576 D1:C90D 00 -  -  -  	.db 0 
  577 D1:C90E -  -  -  -  lin_2_1_4:
  578 D1:C90E 00 -  -  -  	.db 0 
  579 D1:C90F -  -  -  -  	
  580 D1:C90F -  -  -  -  lin_4_1:
  581 D1:C90F -  -  -  -  lin_4_31_1:
  582 D1:C90F 00 -  -  -  	.db 0 
  583 D1:C910 -  -  -  -  lin_4_15_1:
  584 D1:C910 00 -  -  -  	.db 0 
  585 D1:C911 -  -  -  -  lin_4_7_1:
  586 D1:C911 00 -  -  -  	.db 0 
  587 D1:C912 -  -  -  -  lin_4_3_1:
  588 D1:C912 00 -  -  -  	.db 0 
  589 D1:C913 -  -  -  -  lin_4_1_1:
  590 D1:C913 00 -  -  -  	.db 0 
  591 D1:C914 -  -  -  -  
  592 D1:C914 -  -  -  -  
  593 D1:C914 -  -  -  -  lin_4_2:
  594 D1:C914 -  -  -  -  lin_4_31_2:
  595 D1:C914 00 -  -  -  	.db 0 
  596 D1:C915 -  -  -  -  lin_4_15_2:
  597 D1:C915 00 -  -  -  	.db 0 
  598 D1:C916 -  -  -  -  lin_4_7_2:
  599 D1:C916 00 -  -  -  	.db 0 
  600 D1:C917 -  -  -  -  lin_4_3_2:
  601 D1:C917 00 -  -  -  	.db 0 
  602 D1:C918 -  -  -  -  lin_4_1_2:
  603 D1:C918 00 -  -  -  	.db 0 
  604 D1:C919 -  -  -  -  	
  605 D1:C919 -  -  -  -  lin_4_3:
  606 D1:C919 -  -  -  -  lin_4_31_3:
  607 D1:C919 00 -  -  -  	.db 0 
  608 D1:C91A -  -  -  -  lin_4_15_3:
  609 D1:C91A 00 -  -  -  	.db 0 
  610 D1:C91B -  -  -  -  lin_4_7_3:
  611 D1:C91B 00 -  -  -  	.db 0 
  612 D1:C91C -  -  -  -  lin_4_3_3:
  613 D1:C91C 00 -  -  -  	.db 0 
  614 D1:C91D -  -  -  -  lin_4_1_3:
  615 D1:C91D 00 -  -  -  	.db 0 
  616 D1:C91E -  -  -  -  	
  617 D1:C91E -  -  -  -  lin_4_4:
  618 D1:C91E -  -  -  -  lin_4_31_4:
  619 D1:C91E 00 -  -  -  	.db 0 
  620 D1:C91F -  -  -  -  lin_4_15_4:
  621 D1:C91F 00 -  -  -  	.db 0 
  622 D1:C920 -  -  -  -  lin_4_7_4:
  623 D1:C920 00 -  -  -  	.db 0 
  624 D1:C921 -  -  -  -  lin_4_3_4:
  625 D1:C921 00 -  -  -  	.db 0 
  626 D1:C922 -  -  -  -  lin_4_1_4:
  627 D1:C922 00 -  -  -  	.db 0 
  628 D1:C923 -  -  -  -  	
  629 D1:C923 -  -  -  -  	
  630 D1:C923 -  -  -  -  lin_8_1:
  631 D1:C923 -  -  -  -  lin_8_31_1:
  632 D1:C923 00 -  -  -  	.db 0 
  633 D1:C924 -  -  -  -  lin_8_15_1:
  634 D1:C924 00 -  -  -  	.db 0 
  635 D1:C925 -  -  -  -  lin_8_7_1:
  636 D1:C925 00 -  -  -  	.db 0 
  637 D1:C926 -  -  -  -  lin_8_3_1:
  638 D1:C926 00 -  -  -  	.db 0 
  639 D1:C927 -  -  -  -  lin_8_1_1:
  640 D1:C927 00 -  -  -  	.db 0 
  641 D1:C928 -  -  -  -  
  642 D1:C928 -  -  -  -  lin_8_2:
  643 D1:C928 -  -  -  -  lin_8_31_2:
  644 D1:C928 00 -  -  -  	.db 0 
  645 D1:C929 -  -  -  -  lin_8_15_2:
  646 D1:C929 00 -  -  -  	.db 0 
  647 D1:C92A -  -  -  -  lin_8_7_2:
  648 D1:C92A 00 -  -  -  	.db 0 
  649 D1:C92B -  -  -  -  lin_8_3_2:
  650 D1:C92B 00 -  -  -  	.db 0 
  651 D1:C92C -  -  -  -  lin_8_1_2:
  652 D1:C92C 00 -  -  -  	.db 0 
  653 D1:C92D -  -  -  -  	
  654 D1:C92D -  -  -  -  lin_8_3:
  655 D1:C92D -  -  -  -  lin_8_31_3:
  656 D1:C92D 00 -  -  -  	.db 0 
  657 D1:C92E -  -  -  -  lin_8_15_3:
  658 D1:C92E 00 -  -  -  	.db 0 
  659 D1:C92F -  -  -  -  lin_8_7_3:
  660 D1:C92F 00 -  -  -  	.db 0 
  661 D1:C930 -  -  -  -  lin_8_3_3:
  662 D1:C930 00 -  -  -  	.db 0 
  663 D1:C931 -  -  -  -  lin_8_1_3:
  664 D1:C931 00 -  -  -  	.db 0 
  665 D1:C932 -  -  -  -  	
  666 D1:C932 -  -  -  -  lin_8_4:
  667 D1:C932 -  -  -  -  lin_8_31_4:
  668 D1:C932 00 -  -  -  	.db 0 
  669 D1:C933 -  -  -  -  lin_8_15_4:
  670 D1:C933 00 -  -  -  	.db 0 
  671 D1:C934 -  -  -  -  lin_8_7_4:
  672 D1:C934 00 -  -  -  	.db 0 
  673 D1:C935 -  -  -  -  lin_8_3_4:
  674 D1:C935 00 -  -  -  	.db 0 
  675 D1:C936 -  -  -  -  lin_8_1_4:
  676 D1:C936 00 -  -  -  	.db 0 
  677 D1:C937 -  -  -  -  
  678 D1:C937 -  -  -  -  
  679 D1:C937 -  -  -  -  
  680 D1:C937 -  -  -  -  
  681 D1:C937 -  -  -  -  
  682 D1:C937 -  -  -  -  linrep_05_1:
  683 D1:C937 -  -  -  -  linrep_05_31_1:
  684 D1:C937 00 -  -  -  	.db 0 
  685 D1:C938 -  -  -  -  linrep_05_15_1:
  686 D1:C938 00 -  -  -  	.db 0 
  687 D1:C939 -  -  -  -  linrep_05_7_1:
  688 D1:C939 00 -  -  -  	.db 0 
  689 D1:C93A -  -  -  -  linrep_05_3_1:
  690 D1:C93A 00 -  -  -  	.db 0 
  691 D1:C93B -  -  -  -  linrep_05_1_1:
  692 D1:C93B 00 -  -  -  	.db 0 
  693 D1:C93C -  -  -  -  
  694 D1:C93C -  -  -  -  linrep_05_2:
  695 D1:C93C -  -  -  -  linrep_05_31_2:
  696 D1:C93C 00 -  -  -  	.db 0 
  697 D1:C93D -  -  -  -  linrep_05_15_2:
  698 D1:C93D 00 -  -  -  	.db 0 
  699 D1:C93E -  -  -  -  linrep_05_7_2:
  700 D1:C93E 00 -  -  -  	.db 0 
  701 D1:C93F -  -  -  -  linrep_05_3_2:
  702 D1:C93F 00 -  -  -  	.db 0 
  703 D1:C940 -  -  -  -  linrep_05_1_2:
  704 D1:C940 00 -  -  -  	.db 0 	
  705 D1:C941 -  -  -  -  	
  706 D1:C941 -  -  -  -  linrep_05_3:
  707 D1:C941 -  -  -  -  linrep_05_31_3:
  708 D1:C941 00 -  -  -  	.db 0 
  709 D1:C942 -  -  -  -  linrep_05_15_3:
  710 D1:C942 00 -  -  -  	.db 0 
  711 D1:C943 -  -  -  -  linrep_05_7_3:
  712 D1:C943 00 -  -  -  	.db 0 
  713 D1:C944 -  -  -  -  linrep_05_3_3:
  714 D1:C944 00 -  -  -  	.db 0 
  715 D1:C945 -  -  -  -  linrep_05_1_3:
  716 D1:C945 00 -  -  -  	.db 0 	
  717 D1:C946 -  -  -  -  	
  718 D1:C946 -  -  -  -  linrep_05_4:
  719 D1:C946 -  -  -  -  linrep_05_31_4:
  720 D1:C946 00 -  -  -  	.db 0 
  721 D1:C947 -  -  -  -  linrep_05_15_4:
  722 D1:C947 00 -  -  -  	.db 0 
  723 D1:C948 -  -  -  -  linrep_05_7_4:
  724 D1:C948 00 -  -  -  	.db 0 
  725 D1:C949 -  -  -  -  linrep_05_3_4:
  726 D1:C949 00 -  -  -  	.db 0 
  727 D1:C94A -  -  -  -  linrep_05_1_4:
  728 D1:C94A 00 -  -  -  	.db 0 
  729 D1:C94B -  -  -  -  
  730 D1:C94B -  -  -  -  linrep_1_1:
  731 D1:C94B -  -  -  -  linrep_1_31_1:
  732 D1:C94B 00 -  -  -  	.db 0 
  733 D1:C94C -  -  -  -  linrep_1_15_1:
  734 D1:C94C 00 -  -  -  	.db 0 
  735 D1:C94D -  -  -  -  linrep_1_7_1:
  736 D1:C94D 00 -  -  -  	.db 0 
  737 D1:C94E -  -  -  -  linrep_1_3_1:
  738 D1:C94E 00 -  -  -  	.db 0
  739 D1:C94F -  -  -  -  linrep_1_1_1:
  740 D1:C94F 00 -  -  -  	.db 0 	
  741 D1:C950 -  -  -  -  
  742 D1:C950 -  -  -  -  linrep_1_2:
  743 D1:C950 -  -  -  -  linrep_1_31_2:
  744 D1:C950 00 -  -  -  	.db 0 
  745 D1:C951 -  -  -  -  linrep_1_15_2:
  746 D1:C951 00 -  -  -  	.db 0 
  747 D1:C952 -  -  -  -  linrep_1_7_2:
  748 D1:C952 00 -  -  -  	.db 0 
  749 D1:C953 -  -  -  -  linrep_1_3_2:
  750 D1:C953 00 -  -  -  	.db 0 
  751 D1:C954 -  -  -  -  linrep_1_1_2:
  752 D1:C954 00 -  -  -  	.db 0 
  753 D1:C955 -  -  -  -  	
  754 D1:C955 -  -  -  -  linrep_1_3:
  755 D1:C955 -  -  -  -  linrep_1_31_3:
  756 D1:C955 00 -  -  -  	.db 0 
  757 D1:C956 -  -  -  -  linrep_1_15_3:
  758 D1:C956 00 -  -  -  	.db 0 
  759 D1:C957 -  -  -  -  linrep_1_7_3:
  760 D1:C957 00 -  -  -  	.db 0 
  761 D1:C958 -  -  -  -  linrep_1_3_3:
  762 D1:C958 00 -  -  -  	.db 0 
  763 D1:C959 -  -  -  -  linrep_1_1_3:
  764 D1:C959 00 -  -  -  	.db 0 
  765 D1:C95A -  -  -  -  	
  766 D1:C95A -  -  -  -  linrep_1_4:
  767 D1:C95A -  -  -  -  linrep_1_31_4:
  768 D1:C95A 00 -  -  -  	.db 0 
  769 D1:C95B -  -  -  -  linrep_1_15_4:
  770 D1:C95B 00 -  -  -  	.db 0 
  771 D1:C95C -  -  -  -  linrep_1_7_4:
  772 D1:C95C 00 -  -  -  	.db 0 
  773 D1:C95D -  -  -  -  linrep_1_3_4:
  774 D1:C95D 00 -  -  -  	.db 0 
  775 D1:C95E -  -  -  -  linrep_1_1_4:
  776 D1:C95E 00 -  -  -  	.db 0 
  777 D1:C95F -  -  -  -  	
  778 D1:C95F -  -  -  -  linrep_2_1:
  779 D1:C95F -  -  -  -  linrep_2_31_1:
  780 D1:C95F 00 -  -  -  	.db 0 
  781 D1:C960 -  -  -  -  linrep_2_15_1:
  782 D1:C960 00 -  -  -  	.db 0 
  783 D1:C961 -  -  -  -  linrep_2_7_1:
  784 D1:C961 00 -  -  -  	.db 0 
  785 D1:C962 -  -  -  -  linrep_2_3_1:
  786 D1:C962 00 -  -  -  	.db 0 
  787 D1:C963 -  -  -  -  linrep_2_1_1:
  788 D1:C963 00 -  -  -  	.db 0
  789 D1:C964 -  -  -  -  
  790 D1:C964 -  -  -  -  linrep_2_2:
  791 D1:C964 -  -  -  -  linrep_2_31_2:
  792 D1:C964 00 -  -  -  	.db 0 
  793 D1:C965 -  -  -  -  linrep_2_15_2:
  794 D1:C965 00 -  -  -  	.db 0 
  795 D1:C966 -  -  -  -  linrep_2_7_2:
  796 D1:C966 00 -  -  -  	.db 0 
  797 D1:C967 -  -  -  -  linrep_2_3_2:
  798 D1:C967 00 -  -  -  	.db 0 
  799 D1:C968 -  -  -  -  linrep_2_1_2:
  800 D1:C968 00 -  -  -  	.db 0 
  801 D1:C969 -  -  -  -  	
  802 D1:C969 -  -  -  -  linrep_2_3:
  803 D1:C969 -  -  -  -  linrep_2_31_3:
  804 D1:C969 00 -  -  -  	.db 0 
  805 D1:C96A -  -  -  -  linrep_2_15_3:
  806 D1:C96A 00 -  -  -  	.db 0 
  807 D1:C96B -  -  -  -  linrep_2_7_3:
  808 D1:C96B 00 -  -  -  	.db 0 
  809 D1:C96C -  -  -  -  linrep_2_3_3:
  810 D1:C96C 00 -  -  -  	.db 0 
  811 D1:C96D -  -  -  -  linrep_2_1_3:
  812 D1:C96D 00 -  -  -  	.db 0 
  813 D1:C96E -  -  -  -  	
  814 D1:C96E -  -  -  -  linrep_2_4:
  815 D1:C96E -  -  -  -  linrep_2_31_4:
  816 D1:C96E 00 -  -  -  	.db 0 
  817 D1:C96F -  -  -  -  linrep_2_15_4:
  818 D1:C96F 00 -  -  -  	.db 0 
  819 D1:C970 -  -  -  -  linrep_2_7_4:
  820 D1:C970 00 -  -  -  	.db 0 
  821 D1:C971 -  -  -  -  linrep_2_3_4:
  822 D1:C971 00 -  -  -  	.db 0 
  823 D1:C972 -  -  -  -  linrep_2_1_4:
  824 D1:C972 00 -  -  -  	.db 0 
  825 D1:C973 -  -  -  -  	
  826 D1:C973 -  -  -  -  linrep_4_1:
  827 D1:C973 -  -  -  -  linrep_4_31_1:
  828 D1:C973 00 -  -  -  	.db 0 
  829 D1:C974 -  -  -  -  linrep_4_15_1:
  830 D1:C974 00 -  -  -  	.db 0 
  831 D1:C975 -  -  -  -  linrep_4_7_1:
  832 D1:C975 00 -  -  -  	.db 0 
  833 D1:C976 -  -  -  -  linrep_4_3_1:
  834 D1:C976 00 -  -  -  	.db 0 
  835 D1:C977 -  -  -  -  linrep_4_1_1:
  836 D1:C977 00 -  -  -  	.db 0 
  837 D1:C978 -  -  -  -  
  838 D1:C978 -  -  -  -  
  839 D1:C978 -  -  -  -  linrep_4_2:
  840 D1:C978 -  -  -  -  linrep_4_31_2:
  841 D1:C978 00 -  -  -  	.db 0 
  842 D1:C979 -  -  -  -  linrep_4_15_2:
  843 D1:C979 00 -  -  -  	.db 0 
  844 D1:C97A -  -  -  -  linrep_4_7_2:
  845 D1:C97A 00 -  -  -  	.db 0 
  846 D1:C97B -  -  -  -  linrep_4_3_2:
  847 D1:C97B 00 -  -  -  	.db 0 
  848 D1:C97C -  -  -  -  linrep_4_1_2:
  849 D1:C97C 00 -  -  -  	.db 0 
  850 D1:C97D -  -  -  -  	
  851 D1:C97D -  -  -  -  linrep_4_3:
  852 D1:C97D -  -  -  -  linrep_4_31_3:
  853 D1:C97D 00 -  -  -  	.db 0 
  854 D1:C97E -  -  -  -  linrep_4_15_3:
  855 D1:C97E 00 -  -  -  	.db 0 
  856 D1:C97F -  -  -  -  linrep_4_7_3:
  857 D1:C97F 00 -  -  -  	.db 0 
  858 D1:C980 -  -  -  -  linrep_4_3_3:
  859 D1:C980 00 -  -  -  	.db 0 
  860 D1:C981 -  -  -  -  linrep_4_1_3:
  861 D1:C981 00 -  -  -  	.db 0 
  862 D1:C982 -  -  -  -  	
  863 D1:C982 -  -  -  -  linrep_4_4:
  864 D1:C982 -  -  -  -  linrep_4_31_4:
  865 D1:C982 00 -  -  -  	.db 0 
  866 D1:C983 -  -  -  -  linrep_4_15_4:
  867 D1:C983 00 -  -  -  	.db 0 
  868 D1:C984 -  -  -  -  linrep_4_7_4:
  869 D1:C984 00 -  -  -  	.db 0 
  870 D1:C985 -  -  -  -  linrep_4_3_4:
  871 D1:C985 00 -  -  -  	.db 0 
  872 D1:C986 -  -  -  -  linrep_4_1_4:
  873 D1:C986 00 -  -  -  	.db 0 
  874 D1:C987 -  -  -  -  	
  875 D1:C987 -  -  -  -  	
  876 D1:C987 -  -  -  -  linrep_8_1:
  877 D1:C987 -  -  -  -  linrep_8_31_1:
  878 D1:C987 00 -  -  -  	.db 0 
  879 D1:C988 -  -  -  -  linrep_8_15_1:
  880 D1:C988 00 -  -  -  	.db 0 
  881 D1:C989 -  -  -  -  linrep_8_7_1:
  882 D1:C989 00 -  -  -  	.db 0 
  883 D1:C98A -  -  -  -  linrep_8_3_1:
  884 D1:C98A 00 -  -  -  	.db 0 
  885 D1:C98B -  -  -  -  linrep_8_1_1:
  886 D1:C98B 00 -  -  -  	.db 0 
  887 D1:C98C -  -  -  -  
  888 D1:C98C -  -  -  -  linrep_8_2:
  889 D1:C98C -  -  -  -  linrep_8_31_2:
  890 D1:C98C 00 -  -  -  	.db 0 
  891 D1:C98D -  -  -  -  linrep_8_15_2:
  892 D1:C98D 00 -  -  -  	.db 0 
  893 D1:C98E -  -  -  -  linrep_8_7_2:
  894 D1:C98E 00 -  -  -  	.db 0 
  895 D1:C98F -  -  -  -  linrep_8_3_2:
  896 D1:C98F 00 -  -  -  	.db 0 
  897 D1:C990 -  -  -  -  linrep_8_1_2:
  898 D1:C990 00 -  -  -  	.db 0 
  899 D1:C991 -  -  -  -  	
  900 D1:C991 -  -  -  -  linrep_8_3:
  901 D1:C991 -  -  -  -  linrep_8_31_3:
  902 D1:C991 00 -  -  -  	.db 0 
  903 D1:C992 -  -  -  -  linrep_8_15_3:
  904 D1:C992 00 -  -  -  	.db 0 
  905 D1:C993 -  -  -  -  linrep_8_7_3:
  906 D1:C993 00 -  -  -  	.db 0 
  907 D1:C994 -  -  -  -  linrep_8_3_3:
  908 D1:C994 00 -  -  -  	.db 0 
  909 D1:C995 -  -  -  -  linrep_8_1_3:
  910 D1:C995 00 -  -  -  	.db 0 
  911 D1:C996 -  -  -  -  	
  912 D1:C996 -  -  -  -  linrep_8_4:
  913 D1:C996 -  -  -  -  linrep_8_31_4:
  914 D1:C996 00 -  -  -  	.db 0 
  915 D1:C997 -  -  -  -  linrep_8_15_4:
  916 D1:C997 00 -  -  -  	.db 0 
  917 D1:C998 -  -  -  -  linrep_8_7_4:
  918 D1:C998 00 -  -  -  	.db 0 
  919 D1:C999 -  -  -  -  linrep_8_3_4:
  920 D1:C999 00 -  -  -  	.db 0 
  921 D1:C99A -  -  -  -  linrep_8_1_4:
  922 D1:C99A 00 -  -  -  	.db 0 
  923 D1:C99B -  -  -  -  	
  924 D1:C99B -  -  -  -  	
  925 D1:C99B -  -  -  -  	
  926 D1:C99B -  -  -  -  
  927 D1:C99B -  -  -  -  
  928 D1:C99B -  -  -  -  sine:
  929 D1:C99B 80 -  -  -  	.db 128
  930 D1:C99C 83 -  -  -  	.db 131
  931 D1:C99D 86 -  -  -  	.db 134
  932 D1:C99E 89 -  -  -  	.db 137
  933 D1:C99F 8C -  -  -  	.db 140
  934 D1:C9A0 8F -  -  -  	.db 143
  935 D1:C9A1 92 -  -  -  	.db 146
  936 D1:C9A2 95 -  -  -  	.db 149
  937 D1:C9A3 98 -  -  -  	.db 152
  938 D1:C9A4 9C -  -  -  	.db 156
  939 D1:C9A5 9F -  -  -  	.db 159
  940 D1:C9A6 A2 -  -  -  	.db 162
  941 D1:C9A7 A5 -  -  -  	.db 165
  942 D1:C9A8 A8 -  -  -  	.db 168
  943 D1:C9A9 AB -  -  -  	.db 171
  944 D1:C9AA AE -  -  -  	.db 174
  945 D1:C9AB B0 -  -  -  	.db 176
  946 D1:C9AC B3 -  -  -  	.db 179
  947 D1:C9AD B6 -  -  -  	.db 182
  948 D1:C9AE B9 -  -  -  	.db 185
  949 D1:C9AF BC -  -  -  	.db 188
  950 D1:C9B0 BF -  -  -  	.db 191
  951 D1:C9B1 C1 -  -  -  	.db 193
  952 D1:C9B2 C4 -  -  -  	.db 196
  953 D1:C9B3 C7 -  -  -  	.db 199
  954 D1:C9B4 C9 -  -  -  	.db 201
  955 D1:C9B5 CC -  -  -  	.db 204
  956 D1:C9B6 CE -  -  -  	.db 206
  957 D1:C9B7 D1 -  -  -  	.db 209
  958 D1:C9B8 D3 -  -  -  	.db 211
  959 D1:C9B9 D5 -  -  -  	.db 213
  960 D1:C9BA D8 -  -  -  	.db 216
  961 D1:C9BB DA -  -  -  	.db 218
  962 D1:C9BC DC -  -  -  	.db 220
  963 D1:C9BD DE -  -  -  	.db 222
  964 D1:C9BE E0 -  -  -  	.db 224
  965 D1:C9BF E2 -  -  -  	.db 226
  966 D1:C9C0 E4 -  -  -  	.db 228
  967 D1:C9C1 E6 -  -  -  	.db 230
  968 D1:C9C2 E8 -  -  -  	.db 232
  969 D1:C9C3 EA -  -  -  	.db 234
  970 D1:C9C4 EB -  -  -  	.db 235
  971 D1:C9C5 ED -  -  -  	.db 237
  972 D1:C9C6 EF -  -  -  	.db 239
  973 D1:C9C7 F0 -  -  -  	.db 240
  974 D1:C9C8 F2 -  -  -  	.db 242
  975 D1:C9C9 F3 -  -  -  	.db 243
  976 D1:C9CA F4 -  -  -  	.db 244
  977 D1:C9CB F6 -  -  -  	.db 246
  978 D1:C9CC F7 -  -  -  	.db 247
  979 D1:C9CD F8 -  -  -  	.db 248
  980 D1:C9CE F9 -  -  -  	.db 249
  981 D1:C9CF FA -  -  -  	.db 250
  982 D1:C9D0 FB -  -  -  	.db 251
  983 D1:C9D1 FB -  -  -  	.db 251
  984 D1:C9D2 FC -  -  -  	.db 252
  985 D1:C9D3 FD -  -  -  	.db 253
  986 D1:C9D4 FD -  -  -  	.db 253
  987 D1:C9D5 FE -  -  -  	.db 254
  988 D1:C9D6 FE -  -  -  	.db 254
  989 D1:C9D7 FE -  -  -  	.db 254
  990 D1:C9D8 FF -  -  -  	.db 255
  991 D1:C9D9 FF -  -  -  	.db 255
  992 D1:C9DA FF -  -  -  	.db 255
  993 D1:C9DB FF -  -  -  	.db 255
  994 D1:C9DC FF -  -  -  	.db 255
  995 D1:C9DD FF -  -  -  	.db 255
  996 D1:C9DE FF -  -  -  	.db 255
  997 D1:C9DF FE -  -  -  	.db 254
  998 D1:C9E0 FE -  -  -  	.db 254
  999 D1:C9E1 FD -  -  -  	.db 253
 1000 D1:C9E2 FD -  -  -  	.db 253
 1001 D1:C9E3 FC -  -  -  	.db 252
 1002 D1:C9E4 FC -  -  -  	.db 252
 1003 D1:C9E5 FB -  -  -  	.db 251
 1004 D1:C9E6 FA -  -  -  	.db 250
 1005 D1:C9E7 F9 -  -  -  	.db 249
 1006 D1:C9E8 F8 -  -  -  	.db 248
 1007 D1:C9E9 F7 -  -  -  	.db 247
 1008 D1:C9EA F6 -  -  -  	.db 246
 1009 D1:C9EB F5 -  -  -  	.db 245
 1010 D1:C9EC F4 -  -  -  	.db 244
 1011 D1:C9ED F2 -  -  -  	.db 242
 1012 D1:C9EE F1 -  -  -  	.db 241
 1013 D1:C9EF EF -  -  -  	.db 239
 1014 D1:C9F0 EE -  -  -  	.db 238
 1015 D1:C9F1 EC -  -  -  	.db 236
 1016 D1:C9F2 EB -  -  -  	.db 235
 1017 D1:C9F3 E9 -  -  -  	.db 233
 1018 D1:C9F4 E7 -  -  -  	.db 231
 1019 D1:C9F5 E5 -  -  -  	.db 229
 1020 D1:C9F6 E3 -  -  -  	.db 227
 1021 D1:C9F7 E1 -  -  -  	.db 225
 1022 D1:C9F8 DF -  -  -  	.db 223
 1023 D1:C9F9 DD -  -  -  	.db 221
 1024 D1:C9FA DB -  -  -  	.db 219
 1025 D1:C9FB D9 -  -  -  	.db 217
 1026 D1:C9FC D7 -  -  -  	.db 215
 1027 D1:C9FD D4 -  -  -  	.db 212
 1028 D1:C9FE D2 -  -  -  	.db 210
 1029 D1:C9FF CF -  -  -  	.db 207
 1030 D1:CA00 CD -  -  -  	.db 205
 1031 D1:CA01 CA -  -  -  	.db 202
 1032 D1:CA02 C8 -  -  -  	.db 200
 1033 D1:CA03 C5 -  -  -  	.db 197
 1034 D1:CA04 C3 -  -  -  	.db 195
 1035 D1:CA05 C0 -  -  -  	.db 192
 1036 D1:CA06 BD -  -  -  	.db 189
 1037 D1:CA07 BA -  -  -  	.db 186
 1038 D1:CA08 B8 -  -  -  	.db 184
 1039 D1:CA09 B5 -  -  -  	.db 181
 1040 D1:CA0A B2 -  -  -  	.db 178
 1041 D1:CA0B AF -  -  -  	.db 175
 1042 D1:CA0C AC -  -  -  	.db 172
 1043 D1:CA0D A9 -  -  -  	.db 169
 1044 D1:CA0E A6 -  -  -  	.db 166
 1045 D1:CA0F A3 -  -  -  	.db 163
 1046 D1:CA10 A0 -  -  -  	.db 160
 1047 D1:CA11 9D -  -  -  	.db 157
 1048 D1:CA12 9A -  -  -  	.db 154
 1049 D1:CA13 97 -  -  -  	.db 151
 1050 D1:CA14 94 -  -  -  	.db 148
 1051 D1:CA15 91 -  -  -  	.db 145
 1052 D1:CA16 8E -  -  -  	.db 142
 1053 D1:CA17 8A -  -  -  	.db 138
 1054 D1:CA18 87 -  -  -  	.db 135
 1055 D1:CA19 84 -  -  -  	.db 132
 1056 D1:CA1A 81 -  -  -  	.db 129
 1057 D1:CA1B 7E -  -  -  	.db 126
 1058 D1:CA1C 7B -  -  -  	.db 123
 1059 D1:CA1D 78 -  -  -  	.db 120
 1060 D1:CA1E 75 -  -  -  	.db 117
 1061 D1:CA1F 71 -  -  -  	.db 113
 1062 D1:CA20 6E -  -  -  	.db 110
 1063 D1:CA21 6B -  -  -  	.db 107
 1064 D1:CA22 68 -  -  -  	.db 104
 1065 D1:CA23 65 -  -  -  	.db 101
 1066 D1:CA24 62 -  -  -  	.db 98
 1067 D1:CA25 5F -  -  -  	.db 95
 1068 D1:CA26 5C -  -  -  	.db 92
 1069 D1:CA27 59 -  -  -  	.db 89
 1070 D1:CA28 56 -  -  -  	.db 86
 1071 D1:CA29 53 -  -  -  	.db 83
 1072 D1:CA2A 50 -  -  -  	.db 80
 1073 D1:CA2B 4D -  -  -  	.db 77
 1074 D1:CA2C 4A -  -  -  	.db 74
 1075 D1:CA2D 47 -  -  -  	.db 71
 1076 D1:CA2E 45 -  -  -  	.db 69
 1077 D1:CA2F 42 -  -  -  	.db 66
 1078 D1:CA30 3F -  -  -  	.db 63
 1079 D1:CA31 3C -  -  -  	.db 60
 1080 D1:CA32 3A -  -  -  	.db 58
 1081 D1:CA33 37 -  -  -  	.db 55
 1082 D1:CA34 35 -  -  -  	.db 53
 1083 D1:CA35 32 -  -  -  	.db 50
 1084 D1:CA36 30 -  -  -  	.db 48
 1085 D1:CA37 2D -  -  -  	.db 45
 1086 D1:CA38 2B -  -  -  	.db 43
 1087 D1:CA39 28 -  -  -  	.db 40
 1088 D1:CA3A 26 -  -  -  	.db 38
 1089 D1:CA3B 24 -  -  -  	.db 36
 1090 D1:CA3C 22 -  -  -  	.db 34
 1091 D1:CA3D 20 -  -  -  	.db 32
 1092 D1:CA3E 1E -  -  -  	.db 30
 1093 D1:CA3F 1C -  -  -  	.db 28
 1094 D1:CA40 1A -  -  -  	.db 26
 1095 D1:CA41 18 -  -  -  	.db 24
 1096 D1:CA42 16 -  -  -  	.db 22
 1097 D1:CA43 14 -  -  -  	.db 20
 1098 D1:CA44 13 -  -  -  	.db 19
 1099 D1:CA45 11 -  -  -  	.db 17
 1100 D1:CA46 10 -  -  -  	.db 16
 1101 D1:CA47 0E -  -  -  	.db 14
 1102 D1:CA48 0D -  -  -  	.db 13
 1103 D1:CA49 0B -  -  -  	.db 11
 1104 D1:CA4A 0A -  -  -  	.db 10
 1105 D1:CA4B 09 -  -  -  	.db 9
 1106 D1:CA4C 08 -  -  -  	.db 8
 1107 D1:CA4D 07 -  -  -  	.db 7
 1108 D1:CA4E 06 -  -  -  	.db 6
 1109 D1:CA4F 05 -  -  -  	.db 5
 1110 D1:CA50 04 -  -  -  	.db 4
 1111 D1:CA51 03 -  -  -  	.db 3
 1112 D1:CA52 03 -  -  -  	.db 3
 1113 D1:CA53 02 -  -  -  	.db 2
 1114 D1:CA54 02 -  -  -  	.db 2
 1115 D1:CA55 01 -  -  -  	.db 1
 1116 D1:CA56 01 -  -  -  	.db 1
 1117 D1:CA57 00 -  -  -  	.db 0
 1118 D1:CA58 00 -  -  -  	.db 0
 1119 D1:CA59 00 -  -  -  	.db 0
 1120 D1:CA5A 00 -  -  -  	.db 0
 1121 D1:CA5B 00 -  -  -  	.db 0
 1122 D1:CA5C 00 -  -  -  	.db 0
 1123 D1:CA5D 00 -  -  -  	.db 0
 1124 D1:CA5E 01 -  -  -  	.db 1
 1125 D1:CA5F 01 -  -  -  	.db 1
 1126 D1:CA60 01 -  -  -  	.db 1
 1127 D1:CA61 02 -  -  -  	.db 2
 1128 D1:CA62 02 -  -  -  	.db 2
 1129 D1:CA63 03 -  -  -  	.db 3
 1130 D1:CA64 04 -  -  -  	.db 4
 1131 D1:CA65 04 -  -  -  	.db 4
 1132 D1:CA66 05 -  -  -  	.db 5
 1133 D1:CA67 06 -  -  -  	.db 6
 1134 D1:CA68 07 -  -  -  	.db 7
 1135 D1:CA69 08 -  -  -  	.db 8
 1136 D1:CA6A 09 -  -  -  	.db 9
 1137 D1:CA6B 0B -  -  -  	.db 11
 1138 D1:CA6C 0C -  -  -  	.db 12
 1139 D1:CA6D 0D -  -  -  	.db 13
 1140 D1:CA6E 0F -  -  -  	.db 15
 1141 D1:CA6F 10 -  -  -  	.db 16
 1142 D1:CA70 12 -  -  -  	.db 18
 1143 D1:CA71 14 -  -  -  	.db 20
 1144 D1:CA72 15 -  -  -  	.db 21
 1145 D1:CA73 17 -  -  -  	.db 23
 1146 D1:CA74 19 -  -  -  	.db 25
 1147 D1:CA75 1B -  -  -  	.db 27
 1148 D1:CA76 1D -  -  -  	.db 29
 1149 D1:CA77 1F -  -  -  	.db 31
 1150 D1:CA78 21 -  -  -  	.db 33
 1151 D1:CA79 23 -  -  -  	.db 35
 1152 D1:CA7A 25 -  -  -  	.db 37
 1153 D1:CA7B 27 -  -  -  	.db 39
 1154 D1:CA7C 2A -  -  -  	.db 42
 1155 D1:CA7D 2C -  -  -  	.db 44
 1156 D1:CA7E 2E -  -  -  	.db 46
 1157 D1:CA7F 31 -  -  -  	.db 49
 1158 D1:CA80 33 -  -  -  	.db 51
 1159 D1:CA81 36 -  -  -  	.db 54
 1160 D1:CA82 38 -  -  -  	.db 56
 1161 D1:CA83 3B -  -  -  	.db 59
 1162 D1:CA84 3E -  -  -  	.db 62
 1163 D1:CA85 40 -  -  -  	.db 64
 1164 D1:CA86 43 -  -  -  	.db 67
 1165 D1:CA87 46 -  -  -  	.db 70
 1166 D1:CA88 49 -  -  -  	.db 73
 1167 D1:CA89 4C -  -  -  	.db 76
 1168 D1:CA8A 4F -  -  -  	.db 79
 1169 D1:CA8B 51 -  -  -  	.db 81
 1170 D1:CA8C 54 -  -  -  	.db 84
 1171 D1:CA8D 57 -  -  -  	.db 87
 1172 D1:CA8E 5A -  -  -  	.db 90
 1173 D1:CA8F 5D -  -  -  	.db 93
 1174 D1:CA90 60 -  -  -  	.db 96
 1175 D1:CA91 63 -  -  -  	.db 99
 1176 D1:CA92 67 -  -  -  	.db 103
 1177 D1:CA93 6A -  -  -  	.db 106
 1178 D1:CA94 6D -  -  -  	.db 109
 1179 D1:CA95 70 -  -  -  	.db 112
 1180 D1:CA96 73 -  -  -  	.db 115
 1181 D1:CA97 76 -  -  -  	.db 118
 1182 D1:CA98 79 -  -  -  	.db 121
 1183 D1:CA99 7C -  -  -  	.db 124
 1184 D1:CA9A 7F -  -  -  	.db 127
 1185 D1:CA9B -  -  -  -  	
Listing for file "ascent.asm"
  612 D1:CA9B -  -  -  -  #include "animations.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\animations.txt"
    1 D1:CA9B -  -  -  -   
    2 D1:CA9B -  -  -  -  update_animations:
    3 D1:CA9B -  -  -  -  	;Will update all animations every frame. Not significant performance impact
    4 D1:CA9B -  -  -  -  	
    5 D1:CA9B -  -  -  -  	;POSITION
    6 D1:CA9B -  -  -  -  	;load hl with data pointer (dataframe or sprite group)
    7 D1:CA9B -  -  -  -  	;ld bc with number of bytes to target property
    8 D1:CA9B -  -  -  -  	;add hl bc 
    9 D1:CA9B -  -  -  -  
   10 D1:CA9B -  -  -  -  	;ld a with desired sine freq,phase,and amplitude 
   11 D1:CA9B -  -  -  -  	;add a,xx ;Base value
   12 D1:CA9B -  -  -  -  	;ld (hl),a
   13 D1:CA9B -  -  -  -  
   14 D1:CA9B -  -  -  -  	;7 bytes per animated value
   15 D1:CA9B 08 -  -  -  	ex af, af' ;'
   16 D1:CA9C 21 10 02 D2 	ld hl,position_animation_data
   17 D1:CAA0 7E -  -  -  	ld a,(hl)
   18 D1:CAA1 23 -  -  -  	inc hl
   19 D1:CAA2 -  -  -  -  update_animation_position_loop:
   20 D1:CAA2 08 -  -  -  	ex af, af' ;'
   21 D1:CAA3 ED 17 -  -  	ld de,(hl);load address of property
   22 D1:CAA5 23 -  -  -  	inc hl
   23 D1:CAA6 23 -  -  -  	inc hl 
   24 D1:CAA7 23 -  -  -  	inc hl 
   25 D1:CAA8 ED 07 -  -  	ld bc,(hl) ;address of anim curve 
   26 D1:CAAA 23 -  -  -  	inc hl 
   27 D1:CAAB 23 -  -  -  	inc hl 
   28 D1:CAAC 23 -  -  -  	inc hl
   29 D1:CAAD 0A -  -  -  	ld a,(bc) ;value of anim curve
   30 D1:CAAE 4E -  -  -  	ld c, (hl) ;base value
   31 D1:CAAF 23 -  -  -  	inc hl
   32 D1:CAB0 81 -  -  -  	add a,c
   33 D1:CAB1 12 -  -  -  	ld (de),a 
   34 D1:CAB2 08 -  -  -  	ex af, af' ;'
   35 D1:CAB3 3D -  -  -  	dec a 
   36 D1:CAB4 C2 A2 CA D1 	jp nz,update_animation_position_loop
   37 D1:CAB8 -  -  -  -  	
   38 D1:CAB8 -  -  -  -  	
   39 D1:CAB8 -  -  -  -  	
   40 D1:CAB8 11 00 00 00 	ld de,0 ;clear upper byte 
   41 D1:CABC 08 -  -  -  	ex af, af' ;' ;in
   42 D1:CABD 21 D8 03 D2 	ld hl,sprite_animation_data
   43 D1:CAC1 7E -  -  -  	ld a,(hl)
   44 D1:CAC2 23 -  -  -  	inc hl
   45 D1:CAC3 -  -  -  -  update_animation_sprite_loop:
   46 D1:CAC3 08 -  -  -  	ex af, af' ;' ;out
   47 D1:CAC4 ED 07 -  -  	ld bc,(hl) ;animation curve address
   48 D1:CAC6 23 -  -  -  	inc hl 
   49 D1:CAC7 23 -  -  -  	inc hl
   50 D1:CAC8 23 -  -  -  	inc hl
   51 D1:CAC9 0A -  -  -  	ld a,(bc) ;anim curve value (btwn 0 and 7)
   52 D1:CACA 5F -  -  -  	ld e,a 
   53 D1:CACB 19 -  -  -  	add hl,de ;jump to correct place
   54 D1:CACC ED 44 -  -  	neg ;a holds -curve value
   55 D1:CACE C6 08 -  -  	add a,8; a holds amt to jump to get past sprite table
   56 D1:CAD0 5F -  -  -  	ld e,a 
   57 D1:CAD1 7E -  -  -  	ld a,(hl);correct sprite index 
   58 D1:CAD2 19 -  -  -  	add hl,de ;to address of target property
   59 D1:CAD3 ED 07 -  -  	ld bc,(hl)
   60 D1:CAD5 02 -  -  -  	ld (bc),a 
   61 D1:CAD6 23 -  -  -  	inc hl 
   62 D1:CAD7 23 -  -  -  	inc hl 
   63 D1:CAD8 23 -  -  -  	inc hl
   64 D1:CAD9 08 -  -  -  	ex af, af' ;' ;in
   65 D1:CADA 3D -  -  -  	dec a 
   66 D1:CADB C2 C3 CA D1 	jp nz,update_animation_sprite_loop
   67 D1:CADF -  -  -  -  	
   68 D1:CADF -  -  -  -  	
   69 D1:CADF -  -  -  -  	;call write_a_to_ram
   70 D1:CADF C9 -  -  -  	ret 
   71 D1:CAE0 -  -  -  -  	
   72 D1:CAE0 -  -  -  -  	
   73 D1:CAE0 -  -  -  -  	
   74 D1:CAE0 -  -  -  -  	
   75 D1:CAE0 -  -  -  -  	;SPRITE
   76 D1:CAE0 -  -  -  -  	;ld hl with base data ptr
   77 D1:CAE0 -  -  -  -  	;ld bc with number of bytes to target property
   78 D1:CAE0 -  -  -  -  	
   79 D1:CAE0 -  -  -  -  
   80 D1:CAE0 -  -  -  -  ;position_animation_data: ;7 bytes per animation
   81 D1:CAE0 -  -  -  -  	;.db number of animations
   82 D1:CAE0 -  -  -  -  	;.dl address of target property
   83 D1:CAE0 -  -  -  -  	;.dl address of desired animation curve value (could use lookup table to reduce memory)
   84 D1:CAE0 -  -  -  -  	;.db base value 
   85 D1:CAE0 -  -  -  -  	;...
   86 D1:CAE0 -  -  -  -  	;.dl MG_Data_0 + 18 
   87 D1:CAE0 -  -  -  -  	;.dl lin_05_3_2
   88 D1:CAE0 -  -  -  -  	;.db 168
   89 D1:CAE0 -  -  -  -  	
   90 D1:CAE0 -  -  -  -  	
   91 D1:CAE0 -  -  -  -  
   92 D1:CAE0 -  -  -  -  ;sprite_animation_data: ;14 bytes per animation
   93 D1:CAE0 -  -  -  -  	;.db number of animations
   94 D1:CAE0 -  -  -  -  	;.dl address of desired animation curve value (could use lookup table to reduce memory)
   95 D1:CAE0 -  -  -  -  	;.db sprite frame 0 
   96 D1:CAE0 -  -  -  -  	;.db sprite frame 1
   97 D1:CAE0 -  -  -  -  	;.db sprite frame 2
   98 D1:CAE0 -  -  -  -  	;.db sprite frame 3
   99 D1:CAE0 -  -  -  -  	;.db sprite frame 4
  100 D1:CAE0 -  -  -  -  	;.db sprite frame 5
  101 D1:CAE0 -  -  -  -  	;.db sprite frame 6
  102 D1:CAE0 -  -  -  -  	;.db sprite frame 7
  103 D1:CAE0 -  -  -  -  	;.dl address of target property
  104 D1:CAE0 -  -  -  -  	;.dl sine_2_7_1
  105 D1:CAE0 -  -  -  -  	;.db 70
  106 D1:CAE0 -  -  -  -  	;.db 71
  107 D1:CAE0 -  -  -  -  	;.db 72
  108 D1:CAE0 -  -  -  -  	;.db 73
  109 D1:CAE0 -  -  -  -  	;.db 74
  110 D1:CAE0 -  -  -  -  	;.db 71
  111 D1:CAE0 -  -  -  -  	;.db 70
  112 D1:CAE0 -  -  -  -  	;.db 71
  113 D1:CAE0 -  -  -  -  	;.dl SG_TreeRow3 + 5
  114 D1:CAE0 -  -  -  -  	
  115 D1:CAE0 -  -  -  -  	
  116 D1:CAE0 -  -  -  -  	
  117 D1:CAE0 -  -  -  -  	
  118 D1:CAE0 -  -  -  -   
  119 D1:CAE0 -  -  -  -   
  120 D1:CAE0 -  -  -  -   
Listing for file "ascent.asm"
  613 D1:CAE0 -  -  -  -  ;#include "levelData.txt"
  614 D1:CAE0 -  -  -  -  ;#include "FGLevelData.txt"
  615 D1:CAE0 -  -  -  -  ;#include "testing/TestingCollisionData.txt"
  616 D1:CAE0 -  -  -  -  
  617 D1:CAE0 -  -  -  -  #include "generated/BG_Data.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\generated\BG_Data.txt"
    1 D1:CAE0 -  -  -  -  BG_Data_frame_table:
    2 D1:CAE0 94 CB D1 -  	.dl BG_Data_0
    3 D1:CAE3 86 CB D1 -  	.dl BG_Data_1
    4 D1:CAE6 7C CB D1 -  	.dl BG_Data_2
    5 D1:CAE9 72 CB D1 -  	.dl BG_Data_3
    6 D1:CAEC 6C CB D1 -  	.dl BG_Data_4
    7 D1:CAEF 6A CB D1 -  	.dl BG_Data_5
    8 D1:CAF2 68 CB D1 -  	.dl BG_Data_6
    9 D1:CAF5 66 CB D1 -  	.dl BG_Data_7
   10 D1:CAF8 64 CB D1 -  	.dl BG_Data_8
   11 D1:CAFB 62 CB D1 -  	.dl BG_Data_9
   12 D1:CAFE 60 CB D1 -  	.dl BG_Data_10
   13 D1:CB01 5E CB D1 -  	.dl BG_Data_11
   14 D1:CB04 5C CB D1 -  	.dl BG_Data_12
   15 D1:CB07 5A CB D1 -  	.dl BG_Data_13
   16 D1:CB0A 58 CB D1 -  	.dl BG_Data_14
   17 D1:CB0D 56 CB D1 -  	.dl BG_Data_15
   18 D1:CB10 54 CB D1 -  	.dl BG_Data_16
   19 D1:CB13 52 CB D1 -  	.dl BG_Data_17
   20 D1:CB16 50 CB D1 -  	.dl BG_Data_18
   21 D1:CB19 4E CB D1 -  	.dl BG_Data_19
   22 D1:CB1C 4C CB D1 -  	.dl BG_Data_20
   23 D1:CB1F 4A CB D1 -  	.dl BG_Data_21
   24 D1:CB22 48 CB D1 -  	.dl BG_Data_22
   25 D1:CB25 46 CB D1 -  	.dl BG_Data_23
   26 D1:CB28 44 CB D1 -  	.dl BG_Data_24
   27 D1:CB2B 42 CB D1 -  	.dl BG_Data_25
   28 D1:CB2E 40 CB D1 -  	.dl BG_Data_26
   29 D1:CB31 3E CB D1 -  	.dl BG_Data_27
   30 D1:CB34 3C CB D1 -  	.dl BG_Data_28
   31 D1:CB37 3A CB D1 -  	.dl BG_Data_29
   32 D1:CB3A -  -  -  -  
   33 D1:CB3A -  -  -  -  
   34 D1:CB3A -  -  -  -  
   35 D1:CB3A -  -  -  -  BG_Data_29:
   36 D1:CB3A 02 -  -  -  	.db 2
   37 D1:CB3B 00 -  -  -  	.db 0
   38 D1:CB3C -  -  -  -  
   39 D1:CB3C -  -  -  -  BG_Data_28:
   40 D1:CB3C 02 -  -  -  	.db 2
   41 D1:CB3D 00 -  -  -  	.db 0
   42 D1:CB3E -  -  -  -  
   43 D1:CB3E -  -  -  -  BG_Data_27:
   44 D1:CB3E 02 -  -  -  	.db 2
   45 D1:CB3F 00 -  -  -  	.db 0
   46 D1:CB40 -  -  -  -  
   47 D1:CB40 -  -  -  -  BG_Data_26:
   48 D1:CB40 02 -  -  -  	.db 2
   49 D1:CB41 00 -  -  -  	.db 0
   50 D1:CB42 -  -  -  -  
   51 D1:CB42 -  -  -  -  BG_Data_25:
   52 D1:CB42 02 -  -  -  	.db 2
   53 D1:CB43 00 -  -  -  	.db 0
   54 D1:CB44 -  -  -  -  
   55 D1:CB44 -  -  -  -  BG_Data_24:
   56 D1:CB44 02 -  -  -  	.db 2
   57 D1:CB45 00 -  -  -  	.db 0
   58 D1:CB46 -  -  -  -  
   59 D1:CB46 -  -  -  -  BG_Data_23:
   60 D1:CB46 02 -  -  -  	.db 2
   61 D1:CB47 00 -  -  -  	.db 0
   62 D1:CB48 -  -  -  -  
   63 D1:CB48 -  -  -  -  BG_Data_22:
   64 D1:CB48 02 -  -  -  	.db 2
   65 D1:CB49 00 -  -  -  	.db 0
   66 D1:CB4A -  -  -  -  
   67 D1:CB4A -  -  -  -  BG_Data_21:
   68 D1:CB4A 02 -  -  -  	.db 2
   69 D1:CB4B 00 -  -  -  	.db 0
   70 D1:CB4C -  -  -  -  
   71 D1:CB4C -  -  -  -  BG_Data_20:
   72 D1:CB4C 02 -  -  -  	.db 2
   73 D1:CB4D 00 -  -  -  	.db 0
   74 D1:CB4E -  -  -  -  
   75 D1:CB4E -  -  -  -  BG_Data_19:
   76 D1:CB4E 02 -  -  -  	.db 2
   77 D1:CB4F 00 -  -  -  	.db 0
   78 D1:CB50 -  -  -  -  
   79 D1:CB50 -  -  -  -  BG_Data_18:
   80 D1:CB50 02 -  -  -  	.db 2
   81 D1:CB51 00 -  -  -  	.db 0
   82 D1:CB52 -  -  -  -  
   83 D1:CB52 -  -  -  -  BG_Data_17:
   84 D1:CB52 02 -  -  -  	.db 2
   85 D1:CB53 00 -  -  -  	.db 0
   86 D1:CB54 -  -  -  -  
   87 D1:CB54 -  -  -  -  BG_Data_16:
   88 D1:CB54 02 -  -  -  	.db 2
   89 D1:CB55 00 -  -  -  	.db 0
   90 D1:CB56 -  -  -  -  
   91 D1:CB56 -  -  -  -  BG_Data_15:
   92 D1:CB56 02 -  -  -  	.db 2
   93 D1:CB57 00 -  -  -  	.db 0
   94 D1:CB58 -  -  -  -  
   95 D1:CB58 -  -  -  -  BG_Data_14:
   96 D1:CB58 02 -  -  -  	.db 2
   97 D1:CB59 00 -  -  -  	.db 0
   98 D1:CB5A -  -  -  -  
   99 D1:CB5A -  -  -  -  BG_Data_13:
  100 D1:CB5A 02 -  -  -  	.db 2
  101 D1:CB5B 00 -  -  -  	.db 0
  102 D1:CB5C -  -  -  -  
  103 D1:CB5C -  -  -  -  BG_Data_12:
  104 D1:CB5C 02 -  -  -  	.db 2
  105 D1:CB5D 00 -  -  -  	.db 0
  106 D1:CB5E -  -  -  -  
  107 D1:CB5E -  -  -  -  BG_Data_11:
  108 D1:CB5E 02 -  -  -  	.db 2
  109 D1:CB5F 00 -  -  -  	.db 0
  110 D1:CB60 -  -  -  -  
  111 D1:CB60 -  -  -  -  BG_Data_10:
  112 D1:CB60 02 -  -  -  	.db 2
  113 D1:CB61 00 -  -  -  	.db 0
  114 D1:CB62 -  -  -  -  
  115 D1:CB62 -  -  -  -  BG_Data_9:
  116 D1:CB62 02 -  -  -  	.db 2
  117 D1:CB63 00 -  -  -  	.db 0
  118 D1:CB64 -  -  -  -  
  119 D1:CB64 -  -  -  -  BG_Data_8:
  120 D1:CB64 02 -  -  -  	.db 2
  121 D1:CB65 00 -  -  -  	.db 0
  122 D1:CB66 -  -  -  -  
  123 D1:CB66 -  -  -  -  BG_Data_7:
  124 D1:CB66 02 -  -  -  	.db 2
  125 D1:CB67 00 -  -  -  	.db 0
  126 D1:CB68 -  -  -  -  
  127 D1:CB68 -  -  -  -  BG_Data_6:
  128 D1:CB68 02 -  -  -  	.db 2
  129 D1:CB69 00 -  -  -  	.db 0
  130 D1:CB6A -  -  -  -  
  131 D1:CB6A -  -  -  -  BG_Data_5:
  132 D1:CB6A 02 -  -  -  	.db 2
  133 D1:CB6B 00 -  -  -  	.db 0
  134 D1:CB6C -  -  -  -  
  135 D1:CB6C -  -  -  -  BG_Data_4:
  136 D1:CB6C 02 -  -  -  	.db 2
  137 D1:CB6D 01 -  -  -  	.db 1
  138 D1:CB6E 49 FF 15 25 	.db 73, 255, 21, 37  ;SG_Cloud1
  139 D1:CB72 -  -  -  -  
  140 D1:CB72 -  -  -  -  BG_Data_3:
  141 D1:CB72 02 -  -  -  	.db 2
  142 D1:CB73 02 -  -  -  	.db 2
  143 D1:CB74 41 FF 15 25 	.db 65, 255, 21, 37  ;SG_Cloud1
  144 D1:CB78 D9 FF 15 25 	.db 217, 255, 21, 37  ;SG_Cloud1
  145 D1:CB7C -  -  -  -  
  146 D1:CB7C -  -  -  -  BG_Data_2:
  147 D1:CB7C 02 -  -  -  	.db 2
  148 D1:CB7D 02 -  -  -  	.db 2
  149 D1:CB7E 30 FF 15 25 	.db 48, 255, 21, 37  ;SG_Cloud1
  150 D1:CB82 C1 FF 15 25 	.db 193, 255, 21, 37  ;SG_Cloud1
  151 D1:CB86 -  -  -  -  
  152 D1:CB86 -  -  -  -  BG_Data_1:
  153 D1:CB86 02 -  -  -  	.db 2
  154 D1:CB87 03 -  -  -  	.db 3
  155 D1:CB88 22 FF 7D 25 	.db 34, 255, 125, 37  ;SG_Cloud1
  156 D1:CB8C 70 FF 76 25 	.db 112, 255, 118, 37  ;SG_Cloud1
  157 D1:CB90 A3 FF 15 25 	.db 163, 255, 21, 37  ;SG_Cloud1
  158 D1:CB94 -  -  -  -  
  159 D1:CB94 -  -  -  -  BG_Data_0:
  160 D1:CB94 02 -  -  -  	.db 2
  161 D1:CB95 17 -  -  -  	.db 23
  162 D1:CB96 55 FF 00 22 	.db 85, 255, 0, 34  ;SG_DarkGroundChunk
  163 D1:CB9A 4F FF 88 22 	.db 79, 255, 136, 34  ;SG_DarkGroundChunk
  164 D1:CB9E 55 FF 18 22 	.db 85, 255, 24, 34  ;SG_DarkGroundChunk
  165 D1:CBA2 50 FF 70 22 	.db 80, 255, 112, 34  ;SG_DarkGroundChunk
  166 D1:CBA6 81 FF 6F 24 	.db 129, 255, 111, 36  ;SG_BGTree2
  167 D1:CBAA 81 FF 8E 24 	.db 129, 255, 142, 36  ;SG_BGTree2
  168 D1:CBAE 88 FF 16 24 	.db 136, 255, 22, 36  ;SG_BGTree2
  169 D1:CBB2 8D FF 0B 24 	.db 141, 255, 11, 36  ;SG_BGTree2
  170 D1:CBB6 7C FF 86 23 	.db 124, 255, 134, 35  ;SG_BGTree1
  171 D1:CBBA 80 FF 80 23 	.db 128, 255, 128, 35  ;SG_BGTree1
  172 D1:CBBE 7F FF 77 23 	.db 127, 255, 119, 35  ;SG_BGTree1
  173 D1:CBC2 81 FF 1F 23 	.db 129, 255, 31, 35  ;SG_BGTree1
  174 D1:CBC6 26 FF 70 0D 	.db 38, 255, 112, 13  ;SG_GroundChunk2
  175 D1:CBCA 84 FF 7F 24 	.db 132, 255, 127, 36  ;SG_BGTree2
  176 D1:CBCE 26 FF 88 0E 	.db 38, 255, 136, 14  ;SG_GroundChunk1
  177 D1:CBD2 2A FF 00 0D 	.db 42, 255, 0, 13  ;SG_GroundChunk2
  178 D1:CBD6 2D FF 18 0E 	.db 45, 255, 24, 14  ;SG_GroundChunk1
  179 D1:CBDA 41 FF 18 0D 	.db 65, 255, 24, 13  ;SG_GroundChunk2
  180 D1:CBDE 3C FF 88 0D 	.db 60, 255, 136, 13  ;SG_GroundChunk2
  181 D1:CBE2 3D FF 70 0E 	.db 61, 255, 112, 14  ;SG_GroundChunk1
  182 D1:CBE6 43 FF 00 0E 	.db 67, 255, 0, 14  ;SG_GroundChunk1
  183 D1:CBEA 84 FF 00 23 	.db 132, 255, 0, 35  ;SG_BGTree1
  184 D1:CBEE F2 FF 02 25 	.db 242, 255, 2, 37  ;SG_Cloud1
  185 D1:CBF2 -  -  -  -  
  186 D1:CBF2 -  -  -  -  
  187 D1:CBF2 -  -  -  -  
Listing for file "ascent.asm"
  618 D1:CBF2 -  -  -  -  #include "generated/MG_Data.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\generated\MG_Data.txt"
    1 D1:CBF2 -  -  -  -  MG_Data_frame_table:
    2 D1:CBF2 96 CE D1 -  	.dl MG_Data_0
    3 D1:CBF5 44 CE D1 -  	.dl MG_Data_1
    4 D1:CBF8 E2 CD D1 -  	.dl MG_Data_2
    5 D1:CBFB 8C CD D1 -  	.dl MG_Data_3
    6 D1:CBFE 26 CD D1 -  	.dl MG_Data_4
    7 D1:CC01 D4 CC D1 -  	.dl MG_Data_5
    8 D1:CC04 7A CC D1 -  	.dl MG_Data_6
    9 D1:CC07 78 CC D1 -  	.dl MG_Data_7
   10 D1:CC0A 76 CC D1 -  	.dl MG_Data_8
   11 D1:CC0D 74 CC D1 -  	.dl MG_Data_9
   12 D1:CC10 72 CC D1 -  	.dl MG_Data_10
   13 D1:CC13 70 CC D1 -  	.dl MG_Data_11
   14 D1:CC16 6E CC D1 -  	.dl MG_Data_12
   15 D1:CC19 6C CC D1 -  	.dl MG_Data_13
   16 D1:CC1C 6A CC D1 -  	.dl MG_Data_14
   17 D1:CC1F 68 CC D1 -  	.dl MG_Data_15
   18 D1:CC22 66 CC D1 -  	.dl MG_Data_16
   19 D1:CC25 64 CC D1 -  	.dl MG_Data_17
   20 D1:CC28 62 CC D1 -  	.dl MG_Data_18
   21 D1:CC2B 60 CC D1 -  	.dl MG_Data_19
   22 D1:CC2E 5E CC D1 -  	.dl MG_Data_20
   23 D1:CC31 5C CC D1 -  	.dl MG_Data_21
   24 D1:CC34 5A CC D1 -  	.dl MG_Data_22
   25 D1:CC37 58 CC D1 -  	.dl MG_Data_23
   26 D1:CC3A 56 CC D1 -  	.dl MG_Data_24
   27 D1:CC3D 54 CC D1 -  	.dl MG_Data_25
   28 D1:CC40 52 CC D1 -  	.dl MG_Data_26
   29 D1:CC43 50 CC D1 -  	.dl MG_Data_27
   30 D1:CC46 4E CC D1 -  	.dl MG_Data_28
   31 D1:CC49 4C CC D1 -  	.dl MG_Data_29
   32 D1:CC4C -  -  -  -  
   33 D1:CC4C -  -  -  -  
   34 D1:CC4C -  -  -  -  
   35 D1:CC4C -  -  -  -  MG_Data_29:
   36 D1:CC4C 00 -  -  -  	.db 0
   37 D1:CC4D 00 -  -  -  	.db 0
   38 D1:CC4E -  -  -  -  
   39 D1:CC4E -  -  -  -  MG_Data_28:
   40 D1:CC4E 00 -  -  -  	.db 0
   41 D1:CC4F 00 -  -  -  	.db 0
   42 D1:CC50 -  -  -  -  
   43 D1:CC50 -  -  -  -  MG_Data_27:
   44 D1:CC50 00 -  -  -  	.db 0
   45 D1:CC51 00 -  -  -  	.db 0
   46 D1:CC52 -  -  -  -  
   47 D1:CC52 -  -  -  -  MG_Data_26:
   48 D1:CC52 00 -  -  -  	.db 0
   49 D1:CC53 00 -  -  -  	.db 0
   50 D1:CC54 -  -  -  -  
   51 D1:CC54 -  -  -  -  MG_Data_25:
   52 D1:CC54 00 -  -  -  	.db 0
   53 D1:CC55 00 -  -  -  	.db 0
   54 D1:CC56 -  -  -  -  
   55 D1:CC56 -  -  -  -  MG_Data_24:
   56 D1:CC56 00 -  -  -  	.db 0
   57 D1:CC57 00 -  -  -  	.db 0
   58 D1:CC58 -  -  -  -  
   59 D1:CC58 -  -  -  -  MG_Data_23:
   60 D1:CC58 00 -  -  -  	.db 0
   61 D1:CC59 00 -  -  -  	.db 0
   62 D1:CC5A -  -  -  -  
   63 D1:CC5A -  -  -  -  MG_Data_22:
   64 D1:CC5A 00 -  -  -  	.db 0
   65 D1:CC5B 00 -  -  -  	.db 0
   66 D1:CC5C -  -  -  -  
   67 D1:CC5C -  -  -  -  MG_Data_21:
   68 D1:CC5C 00 -  -  -  	.db 0
   69 D1:CC5D 00 -  -  -  	.db 0
   70 D1:CC5E -  -  -  -  
   71 D1:CC5E -  -  -  -  MG_Data_20:
   72 D1:CC5E 00 -  -  -  	.db 0
   73 D1:CC5F 00 -  -  -  	.db 0
   74 D1:CC60 -  -  -  -  
   75 D1:CC60 -  -  -  -  MG_Data_19:
   76 D1:CC60 00 -  -  -  	.db 0
   77 D1:CC61 00 -  -  -  	.db 0
   78 D1:CC62 -  -  -  -  
   79 D1:CC62 -  -  -  -  MG_Data_18:
   80 D1:CC62 00 -  -  -  	.db 0
   81 D1:CC63 00 -  -  -  	.db 0
   82 D1:CC64 -  -  -  -  
   83 D1:CC64 -  -  -  -  MG_Data_17:
   84 D1:CC64 00 -  -  -  	.db 0
   85 D1:CC65 00 -  -  -  	.db 0
   86 D1:CC66 -  -  -  -  
   87 D1:CC66 -  -  -  -  MG_Data_16:
   88 D1:CC66 00 -  -  -  	.db 0
   89 D1:CC67 00 -  -  -  	.db 0
   90 D1:CC68 -  -  -  -  
   91 D1:CC68 -  -  -  -  MG_Data_15:
   92 D1:CC68 00 -  -  -  	.db 0
   93 D1:CC69 00 -  -  -  	.db 0
   94 D1:CC6A -  -  -  -  
   95 D1:CC6A -  -  -  -  MG_Data_14:
   96 D1:CC6A 00 -  -  -  	.db 0
   97 D1:CC6B 00 -  -  -  	.db 0
   98 D1:CC6C -  -  -  -  
   99 D1:CC6C -  -  -  -  MG_Data_13:
  100 D1:CC6C 00 -  -  -  	.db 0
  101 D1:CC6D 00 -  -  -  	.db 0
  102 D1:CC6E -  -  -  -  
  103 D1:CC6E -  -  -  -  MG_Data_12:
  104 D1:CC6E 00 -  -  -  	.db 0
  105 D1:CC6F 00 -  -  -  	.db 0
  106 D1:CC70 -  -  -  -  
  107 D1:CC70 -  -  -  -  MG_Data_11:
  108 D1:CC70 00 -  -  -  	.db 0
  109 D1:CC71 00 -  -  -  	.db 0
  110 D1:CC72 -  -  -  -  
  111 D1:CC72 -  -  -  -  MG_Data_10:
  112 D1:CC72 00 -  -  -  	.db 0
  113 D1:CC73 00 -  -  -  	.db 0
  114 D1:CC74 -  -  -  -  
  115 D1:CC74 -  -  -  -  MG_Data_9:
  116 D1:CC74 00 -  -  -  	.db 0
  117 D1:CC75 00 -  -  -  	.db 0
  118 D1:CC76 -  -  -  -  
  119 D1:CC76 -  -  -  -  MG_Data_8:
  120 D1:CC76 00 -  -  -  	.db 0
  121 D1:CC77 00 -  -  -  	.db 0
  122 D1:CC78 -  -  -  -  
  123 D1:CC78 -  -  -  -  MG_Data_7:
  124 D1:CC78 00 -  -  -  	.db 0
  125 D1:CC79 00 -  -  -  	.db 0
  126 D1:CC7A -  -  -  -  
  127 D1:CC7A -  -  -  -  MG_Data_6:
  128 D1:CC7A 00 -  -  -  	.db 0
  129 D1:CC7B 16 -  -  -  	.db 22
  130 D1:CC7C 4F FF 52 0A 	.db 79, 255, 82, 10  ;SG_Vines5
  131 D1:CC80 4F FF 17 14 	.db 79, 255, 23, 20  ;SG_TreeRow4
  132 D1:CC84 3F FF 16 11 	.db 63, 255, 22, 17  ;SG_TreeRow5
  133 D1:CC88 6F FF 19 10 	.db 111, 255, 25, 16  ;SG_TreeRow3
  134 D1:CC8C 8F FF 1B 11 	.db 143, 255, 27, 17  ;SG_TreeRow5
  135 D1:CC90 9F FF 1C 14 	.db 159, 255, 28, 20  ;SG_TreeRow4
  136 D1:CC94 1F FF 14 12 	.db 31, 255, 20, 18  ;SG_TreeRow1
  137 D1:CC98 5F FF 18 13 	.db 95, 255, 24, 19  ;SG_TreeRow2
  138 D1:CC9C AF FF 1B 11 	.db 175, 255, 27, 17  ;SG_TreeRow5
  139 D1:CCA0 DF FF 1A 14 	.db 223, 255, 26, 20  ;SG_TreeRow4
  140 D1:CCA4 FF FF 19 10 	.db 255, 255, 25, 16  ;SG_TreeRow3
  141 D1:CCA8 2F FF 15 12 	.db 47, 255, 21, 18  ;SG_TreeRow1
  142 D1:CCAC 7F FF 1A 12 	.db 127, 255, 26, 18  ;SG_TreeRow1
  143 D1:CCB0 BF FF 1B 12 	.db 191, 255, 27, 18  ;SG_TreeRow1
  144 D1:CCB4 EF FF 19 12 	.db 239, 255, 25, 18  ;SG_TreeRow1
  145 D1:CCB8 CF FF 1B 13 	.db 207, 255, 27, 19  ;SG_TreeRow2
  146 D1:CCBC 0F FF 13 10 	.db 15, 255, 19, 16  ;SG_TreeRow3
  147 D1:CCC0 78 FF 51 17 	.db 120, 255, 81, 23  ;SG_BranchBase3
  148 D1:CCC4 A8 FF 63 02 	.db 168, 255, 99, 2  ;SG_Branch7
  149 D1:CCC8 8C FF 04 01 	.db 140, 255, 4, 1  ;SG_Branch3
  150 D1:CCCC A0 FF 23 1C 	.db 160, 255, 35, 28  ;SG_BranchBase1
  151 D1:CCD0 DB FF 06 0C 	.db 219, 255, 6, 12  ;SG_Branch2
  152 D1:CCD4 -  -  -  -  
  153 D1:CCD4 -  -  -  -  MG_Data_5:
  154 D1:CCD4 00 -  -  -  	.db 0
  155 D1:CCD5 14 -  -  -  	.db 20
  156 D1:CCD6 A7 FF 00 16 	.db 167, 255, 0, 22  ;SG_Vines6
  157 D1:CCDA 4F FF 19 11 	.db 79, 255, 25, 17  ;SG_TreeRow5
  158 D1:CCDE 8F FF 17 11 	.db 143, 255, 23, 17  ;SG_TreeRow5
  159 D1:CCE2 2F FF 1A 14 	.db 47, 255, 26, 20  ;SG_TreeRow4
  160 D1:CCE6 5F FF 18 10 	.db 95, 255, 24, 16  ;SG_TreeRow3
  161 D1:CCEA 3F FF 19 13 	.db 63, 255, 25, 19  ;SG_TreeRow2
  162 D1:CCEE 6F FF 19 13 	.db 111, 255, 25, 19  ;SG_TreeRow2
  163 D1:CCF2 CF FF 13 14 	.db 207, 255, 19, 20  ;SG_TreeRow4
  164 D1:CCF6 AF FF 15 10 	.db 175, 255, 21, 16  ;SG_TreeRow3
  165 D1:CCFA 7F FF 18 13 	.db 127, 255, 24, 19  ;SG_TreeRow2
  166 D1:CCFE EF FF 14 11 	.db 239, 255, 20, 17  ;SG_TreeRow5
  167 D1:CD02 BF FF 14 13 	.db 191, 255, 20, 19  ;SG_TreeRow2
  168 D1:CD06 1F FF 1B 11 	.db 31, 255, 27, 17  ;SG_TreeRow5
  169 D1:CD0A 9F FF 16 12 	.db 159, 255, 22, 18  ;SG_TreeRow1
  170 D1:CD0E FF FF 13 12 	.db 255, 255, 19, 18  ;SG_TreeRow1
  171 D1:CD12 DF FF 13 14 	.db 223, 255, 19, 20  ;SG_TreeRow4
  172 D1:CD16 0F FF 1C 12 	.db 15, 255, 28, 18  ;SG_TreeRow1
  173 D1:CD1A D7 FF 5F 06 	.db 215, 255, 95, 6  ;SG_Branch5
  174 D1:CD1E A5 FF 4A 1B 	.db 165, 255, 74, 27  ;SG_BranchBase4
  175 D1:CD22 B6 FF 5B 08 	.db 182, 255, 91, 8  ;SG_Branch6
  176 D1:CD26 -  -  -  -  
  177 D1:CD26 -  -  -  -  MG_Data_4:
  178 D1:CD26 00 -  -  -  	.db 0
  179 D1:CD27 19 -  -  -  	.db 25
  180 D1:CD28 0F FF 29 12 	.db 15, 255, 41, 18  ;SG_TreeRow1
  181 D1:CD2C 4F FF 26 11 	.db 79, 255, 38, 17  ;SG_TreeRow5
  182 D1:CD30 8F FF 22 11 	.db 143, 255, 34, 17  ;SG_TreeRow5
  183 D1:CD34 3F FF 27 14 	.db 63, 255, 39, 20  ;SG_TreeRow4
  184 D1:CD38 6F FF 24 13 	.db 111, 255, 36, 19  ;SG_TreeRow2
  185 D1:CD3C 9F FF 21 14 	.db 159, 255, 33, 20  ;SG_TreeRow4
  186 D1:CD40 BF FF 1F 14 	.db 191, 255, 31, 20  ;SG_TreeRow4
  187 D1:CD44 CF FF 1E 11 	.db 207, 255, 30, 17  ;SG_TreeRow5
  188 D1:CD48 2F FF 27 14 	.db 47, 255, 39, 20  ;SG_TreeRow4
  189 D1:CD4C FF FF 1D 10 	.db 255, 255, 29, 16  ;SG_TreeRow3
  190 D1:CD50 1F FF 28 10 	.db 31, 255, 40, 16  ;SG_TreeRow3
  191 D1:CD54 5F FF 25 12 	.db 95, 255, 37, 18  ;SG_TreeRow1
  192 D1:CD58 7F FF 23 12 	.db 127, 255, 35, 18  ;SG_TreeRow1
  193 D1:CD5C AF FF 20 12 	.db 175, 255, 32, 18  ;SG_TreeRow1
  194 D1:CD60 EF FF 1E 12 	.db 239, 255, 30, 18  ;SG_TreeRow1
  195 D1:CD64 DF FF 1F 13 	.db 223, 255, 31, 19  ;SG_TreeRow2
  196 D1:CD68 62 10 25 4A 	.db 98, 16, 37, 74  ;Vine5_Slow_O
  197 D1:CD6C B0 FF 68 19 	.db 176, 255, 104, 25  ;SG_Vines8
  198 D1:CD70 91 FF 39 09 	.db 145, 255, 57, 9  ;SG_Vines7
  199 D1:CD74 65 0A 2E 4B 	.db 101, 10, 46, 75  ;Vine6_Slow_O
  200 D1:CD78 2E FF 00 15 	.db 46, 255, 0, 21  ;SG_Branch1
  201 D1:CD7C C3 FF 54 1B 	.db 195, 255, 84, 27  ;SG_BranchBase4
  202 D1:CD80 E0 FF 65 06 	.db 224, 255, 101, 6  ;SG_Branch5
  203 D1:CD84 F7 FF 69 06 	.db 247, 255, 105, 6  ;SG_Branch5
  204 D1:CD88 B0 FF 62 18 	.db 176, 255, 98, 24  ;SG_Vines4
  205 D1:CD8C -  -  -  -  
  206 D1:CD8C -  -  -  -  MG_Data_3:
  207 D1:CD8C 00 -  -  -  	.db 0
  208 D1:CD8D 15 -  -  -  	.db 21
  209 D1:CD8E 0F FF 28 11 	.db 15, 255, 40, 17  ;SG_TreeRow5
  210 D1:CD92 5F FF 26 14 	.db 95, 255, 38, 20  ;SG_TreeRow4
  211 D1:CD96 6F FF 25 11 	.db 111, 255, 37, 17  ;SG_TreeRow5
  212 D1:CD9A 2F FF 28 13 	.db 47, 255, 40, 19  ;SG_TreeRow2
  213 D1:CD9E 4F FF 27 10 	.db 79, 255, 39, 16  ;SG_TreeRow3
  214 D1:CDA2 7F FF 26 10 	.db 127, 255, 38, 16  ;SG_TreeRow3
  215 D1:CDA6 9F FF 27 10 	.db 159, 255, 39, 16  ;SG_TreeRow3
  216 D1:CDAA BF FF 29 13 	.db 191, 255, 41, 19  ;SG_TreeRow2
  217 D1:CDAE 8F FF 27 13 	.db 143, 255, 39, 19  ;SG_TreeRow2
  218 D1:CDB2 EF FF 2A 14 	.db 239, 255, 42, 20  ;SG_TreeRow4
  219 D1:CDB6 FF FF 2A 10 	.db 255, 255, 42, 16  ;SG_TreeRow3
  220 D1:CDBA 1F FF 28 10 	.db 31, 255, 40, 16  ;SG_TreeRow3
  221 D1:CDBE 3F FF 28 12 	.db 63, 255, 40, 18  ;SG_TreeRow1
  222 D1:CDC2 AF FF 28 12 	.db 175, 255, 40, 18  ;SG_TreeRow1
  223 D1:CDC6 CF FF 29 12 	.db 207, 255, 41, 18  ;SG_TreeRow1
  224 D1:CDCA DF FF 2A 11 	.db 223, 255, 42, 17  ;SG_TreeRow5
  225 D1:CDCE 79 FF 33 0A 	.db 121, 255, 51, 10  ;SG_Vines5
  226 D1:CDD2 5D FF 6C 08 	.db 93, 255, 108, 8  ;SG_Branch6
  227 D1:CDD6 8A 12 2B 46 	.db 138, 18, 43, 70  ;Vine4_Slow_F
  228 D1:CDDA 95 FF 1E 1A 	.db 149, 255, 30, 26  ;SG_BranchBase2
  229 D1:CDDE 87 FF 02 01 	.db 135, 255, 2, 1  ;SG_Branch3
  230 D1:CDE2 -  -  -  -  
  231 D1:CDE2 -  -  -  -  MG_Data_2:
  232 D1:CDE2 00 -  -  -  	.db 0
  233 D1:CDE3 18 -  -  -  	.db 24
  234 D1:CDE4 DC FF 00 16 	.db 220, 255, 0, 22  ;SG_Vines6
  235 D1:CDE8 0F FF 22 10 	.db 15, 255, 34, 16  ;SG_TreeRow3
  236 D1:CDEC 28 0A 90 4B 	.db 40, 10, 144, 75  ;Vine6_Slow_O
  237 D1:CDF0 4F FF 26 14 	.db 79, 255, 38, 20  ;SG_TreeRow4
  238 D1:CDF4 3F FF 25 11 	.db 63, 255, 37, 17  ;SG_TreeRow5
  239 D1:CDF8 6F FF 28 10 	.db 111, 255, 40, 16  ;SG_TreeRow3
  240 D1:CDFC 8F FF 2A 11 	.db 143, 255, 42, 17  ;SG_TreeRow5
  241 D1:CE00 28 0A 95 4B 	.db 40, 10, 149, 75  ;Vine6_Slow_O
  242 D1:CE04 AF FF 2A 11 	.db 175, 255, 42, 17  ;SG_TreeRow5
  243 D1:CE08 9F FF 2B 14 	.db 159, 255, 43, 20  ;SG_TreeRow4
  244 D1:CE0C 5F FF 27 13 	.db 95, 255, 39, 19  ;SG_TreeRow2
  245 D1:CE10 CF FF 2A 13 	.db 207, 255, 42, 19  ;SG_TreeRow2
  246 D1:CE14 DF FF 29 14 	.db 223, 255, 41, 20  ;SG_TreeRow4
  247 D1:CE18 FF FF 28 10 	.db 255, 255, 40, 16  ;SG_TreeRow3
  248 D1:CE1C 2F FF 24 12 	.db 47, 255, 36, 18  ;SG_TreeRow1
  249 D1:CE20 7F FF 29 12 	.db 127, 255, 41, 18  ;SG_TreeRow1
  250 D1:CE24 BF FF 2A 12 	.db 191, 255, 42, 18  ;SG_TreeRow1
  251 D1:CE28 EF FF 28 12 	.db 239, 255, 40, 18  ;SG_TreeRow1
  252 D1:CE2C 1F FF 23 12 	.db 31, 255, 35, 18  ;SG_TreeRow1
  253 D1:CE30 50 FF 66 16 	.db 80, 255, 102, 22  ;SG_Vines6
  254 D1:CE34 6F FF 6A 19 	.db 111, 255, 106, 25  ;SG_Vines8
  255 D1:CE38 78 FF 60 17 	.db 120, 255, 96, 23  ;SG_BranchBase3
  256 D1:CE3C A8 FF 72 02 	.db 168, 255, 114, 2  ;SG_Branch7
  257 D1:CE40 6E FF 64 18 	.db 110, 255, 100, 24  ;SG_Vines4
  258 D1:CE44 -  -  -  -  
  259 D1:CE44 -  -  -  -  MG_Data_1:
  260 D1:CE44 00 -  -  -  	.db 0
  261 D1:CE45 14 -  -  -  	.db 20
  262 D1:CE46 0F FF 21 11 	.db 15, 255, 33, 17  ;SG_TreeRow5
  263 D1:CE4A 5F FF 1F 11 	.db 95, 255, 31, 17  ;SG_TreeRow5
  264 D1:CE4E AF FF 1F 11 	.db 175, 255, 31, 17  ;SG_TreeRow5
  265 D1:CE52 2F FF 20 14 	.db 47, 255, 32, 20  ;SG_TreeRow4
  266 D1:CE56 3F FF 1F 13 	.db 63, 255, 31, 19  ;SG_TreeRow2
  267 D1:CE5A 6F FF 1F 13 	.db 111, 255, 31, 19  ;SG_TreeRow2
  268 D1:CE5E 7F FF 1F 10 	.db 127, 255, 31, 16  ;SG_TreeRow3
  269 D1:CE62 DF FF 21 14 	.db 223, 255, 33, 20  ;SG_TreeRow4
  270 D1:CE66 9F FF 1F 14 	.db 159, 255, 31, 20  ;SG_TreeRow4
  271 D1:CE6A FF FF 22 14 	.db 255, 255, 34, 20  ;SG_TreeRow4
  272 D1:CE6E 1F FF 20 10 	.db 31, 255, 32, 16  ;SG_TreeRow3
  273 D1:CE72 4F FF 1F 12 	.db 79, 255, 31, 18  ;SG_TreeRow1
  274 D1:CE76 8F FF 1F 12 	.db 143, 255, 31, 18  ;SG_TreeRow1
  275 D1:CE7A BF FF 20 12 	.db 191, 255, 32, 18  ;SG_TreeRow1
  276 D1:CE7E CF FF 20 12 	.db 207, 255, 32, 18  ;SG_TreeRow1
  277 D1:CE82 EF FF 21 10 	.db 239, 255, 33, 16  ;SG_TreeRow3
  278 D1:CE86 A3 FF 52 0A 	.db 163, 255, 82, 10  ;SG_Vines5
  279 D1:CE8A D9 FF 60 02 	.db 217, 255, 96, 2  ;SG_Branch7
  280 D1:CE8E AA FF 49 17 	.db 170, 255, 73, 23  ;SG_BranchBase3
  281 D1:CE92 A3 FF 4A 0B 	.db 163, 255, 74, 11  ;SG_Vines2
  282 D1:CE96 -  -  -  -  
  283 D1:CE96 -  -  -  -  MG_Data_0:
  284 D1:CE96 00 -  -  -  	.db 0
  285 D1:CE97 26 -  -  -  	.db 38
  286 D1:CE98 39 FF 88 0D 	.db 57, 255, 136, 13  ;SG_GroundChunk2
  287 D1:CE9C 3B FF 72 0E 	.db 59, 255, 114, 14  ;SG_GroundChunk1
  288 D1:CEA0 3B FF 16 0D 	.db 59, 255, 22, 13  ;SG_GroundChunk2
  289 D1:CEA4 3C FF 00 0E 	.db 60, 255, 0, 14  ;SG_GroundChunk1
  290 D1:CEA8 5F FF 22 13 	.db 95, 255, 34, 19  ;SG_TreeRow2
  291 D1:CEAC 6F FF 23 11 	.db 111, 255, 35, 17  ;SG_TreeRow5
  292 D1:CEB0 7F FF 23 10 	.db 127, 255, 35, 16  ;SG_TreeRow3
  293 D1:CEB4 8F FF 23 12 	.db 143, 255, 35, 18  ;SG_TreeRow1
  294 D1:CEB8 9F FF 22 13 	.db 159, 255, 34, 19  ;SG_TreeRow2
  295 D1:CEBC BF FF 22 12 	.db 191, 255, 34, 18  ;SG_TreeRow1
  296 D1:CEC0 4F FF 22 12 	.db 79, 255, 34, 18  ;SG_TreeRow1
  297 D1:CEC4 CF FF 23 11 	.db 207, 255, 35, 17  ;SG_TreeRow5
  298 D1:CEC8 DF FF 22 12 	.db 223, 255, 34, 18  ;SG_TreeRow1
  299 D1:CECC EF FF 23 10 	.db 239, 255, 35, 16  ;SG_TreeRow3
  300 D1:CED0 FF FF 22 13 	.db 255, 255, 34, 19  ;SG_TreeRow2
  301 D1:CED4 AF FF 22 14 	.db 175, 255, 34, 20  ;SG_TreeRow4
  302 D1:CED8 CC FF 87 07 	.db 204, 255, 135, 7  ;SG_Lantern4
  303 D1:CEDC 3F FF 22 11 	.db 63, 255, 34, 17  ;SG_TreeRow5
  304 D1:CEE0 0F 10 83 55 	.db 15, 16, 131, 85  ;GroundDirtFull_Fast
  305 D1:CEE4 2F FF 22 10 	.db 47, 255, 34, 16  ;SG_TreeRow3
  306 D1:CEE8 3B FF 79 0F 	.db 59, 255, 121, 15  ;SG_Root1
  307 D1:CEEC 33 FF 86 0F 	.db 51, 255, 134, 15  ;SG_Root1
  308 D1:CEF0 9D FF 0D 07 	.db 157, 255, 13, 7  ;SG_Lantern4
  309 D1:CEF4 0F 10 46 55 	.db 15, 16, 70, 85  ;GroundDirtFull_Fast
  310 D1:CEF8 0F 10 5A 55 	.db 15, 16, 90, 85  ;GroundDirtFull_Fast
  311 D1:CEFC 35 FF 12 0F 	.db 53, 255, 18, 15  ;SG_Root1
  312 D1:CF00 1F FF 88 0D 	.db 31, 255, 136, 13  ;SG_GroundChunk2
  313 D1:CF04 22 FF 78 0D 	.db 34, 255, 120, 13  ;SG_GroundChunk2
  314 D1:CF08 25 FF 60 0E 	.db 37, 255, 96, 14  ;SG_GroundChunk1
  315 D1:CF0C 22 FF 00 0D 	.db 34, 255, 0, 13  ;SG_GroundChunk2
  316 D1:CF10 25 FF 30 0E 	.db 37, 255, 48, 14  ;SG_GroundChunk1
  317 D1:CF14 23 FF 18 0E 	.db 35, 255, 24, 14  ;SG_GroundChunk1
  318 D1:CF18 CF FF 1F 16 	.db 207, 255, 31, 22  ;SG_Vines6
  319 D1:CF1C D1 FF 49 09 	.db 209, 255, 73, 9  ;SG_Vines7
  320 D1:CF20 24 FF 48 0D 	.db 36, 255, 72, 13  ;SG_GroundChunk2
  321 D1:CF24 E9 FF 00 15 	.db 233, 255, 0, 21  ;SG_Branch1
  322 D1:CF28 DB 10 74 43 	.db 219, 16, 116, 67  ;Vine5_Slow
  323 D1:CF2C CF FF 17 0B 	.db 207, 255, 23, 11  ;SG_Vines2
  324 D1:CF30 -  -  -  -  
  325 D1:CF30 -  -  -  -  
  326 D1:CF30 -  -  -  -  
Listing for file "ascent.asm"
  619 D1:CF30 -  -  -  -  #include "generated/MG2_Data.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\generated\MG2_Data.txt"
    1 D1:CF30 -  -  -  -  MG2_Data_frame_table:
    2 D1:CF30 10 D0 D1 -  	.dl MG2_Data_0
    3 D1:CF33 F6 CF D1 -  	.dl MG2_Data_1
    4 D1:CF36 D4 CF D1 -  	.dl MG2_Data_2
    5 D1:CF39 BE CF D1 -  	.dl MG2_Data_3
    6 D1:CF3C BC CF D1 -  	.dl MG2_Data_4
    7 D1:CF3F BA CF D1 -  	.dl MG2_Data_5
    8 D1:CF42 B8 CF D1 -  	.dl MG2_Data_6
    9 D1:CF45 B6 CF D1 -  	.dl MG2_Data_7
   10 D1:CF48 B4 CF D1 -  	.dl MG2_Data_8
   11 D1:CF4B B2 CF D1 -  	.dl MG2_Data_9
   12 D1:CF4E B0 CF D1 -  	.dl MG2_Data_10
   13 D1:CF51 AE CF D1 -  	.dl MG2_Data_11
   14 D1:CF54 AC CF D1 -  	.dl MG2_Data_12
   15 D1:CF57 AA CF D1 -  	.dl MG2_Data_13
   16 D1:CF5A A8 CF D1 -  	.dl MG2_Data_14
   17 D1:CF5D A6 CF D1 -  	.dl MG2_Data_15
   18 D1:CF60 A4 CF D1 -  	.dl MG2_Data_16
   19 D1:CF63 A2 CF D1 -  	.dl MG2_Data_17
   20 D1:CF66 A0 CF D1 -  	.dl MG2_Data_18
   21 D1:CF69 9E CF D1 -  	.dl MG2_Data_19
   22 D1:CF6C 9C CF D1 -  	.dl MG2_Data_20
   23 D1:CF6F 9A CF D1 -  	.dl MG2_Data_21
   24 D1:CF72 98 CF D1 -  	.dl MG2_Data_22
   25 D1:CF75 96 CF D1 -  	.dl MG2_Data_23
   26 D1:CF78 94 CF D1 -  	.dl MG2_Data_24
   27 D1:CF7B 92 CF D1 -  	.dl MG2_Data_25
   28 D1:CF7E 90 CF D1 -  	.dl MG2_Data_26
   29 D1:CF81 8E CF D1 -  	.dl MG2_Data_27
   30 D1:CF84 8C CF D1 -  	.dl MG2_Data_28
   31 D1:CF87 8A CF D1 -  	.dl MG2_Data_29
   32 D1:CF8A -  -  -  -  
   33 D1:CF8A -  -  -  -  
   34 D1:CF8A -  -  -  -  
   35 D1:CF8A -  -  -  -  MG2_Data_29:
   36 D1:CF8A 00 -  -  -  	.db 0
   37 D1:CF8B 00 -  -  -  	.db 0
   38 D1:CF8C -  -  -  -  
   39 D1:CF8C -  -  -  -  MG2_Data_28:
   40 D1:CF8C 00 -  -  -  	.db 0
   41 D1:CF8D 00 -  -  -  	.db 0
   42 D1:CF8E -  -  -  -  
   43 D1:CF8E -  -  -  -  MG2_Data_27:
   44 D1:CF8E 00 -  -  -  	.db 0
   45 D1:CF8F 00 -  -  -  	.db 0
   46 D1:CF90 -  -  -  -  
   47 D1:CF90 -  -  -  -  MG2_Data_26:
   48 D1:CF90 00 -  -  -  	.db 0
   49 D1:CF91 00 -  -  -  	.db 0
   50 D1:CF92 -  -  -  -  
   51 D1:CF92 -  -  -  -  MG2_Data_25:
   52 D1:CF92 00 -  -  -  	.db 0
   53 D1:CF93 00 -  -  -  	.db 0
   54 D1:CF94 -  -  -  -  
   55 D1:CF94 -  -  -  -  MG2_Data_24:
   56 D1:CF94 00 -  -  -  	.db 0
   57 D1:CF95 00 -  -  -  	.db 0
   58 D1:CF96 -  -  -  -  
   59 D1:CF96 -  -  -  -  MG2_Data_23:
   60 D1:CF96 00 -  -  -  	.db 0
   61 D1:CF97 00 -  -  -  	.db 0
   62 D1:CF98 -  -  -  -  
   63 D1:CF98 -  -  -  -  MG2_Data_22:
   64 D1:CF98 00 -  -  -  	.db 0
   65 D1:CF99 00 -  -  -  	.db 0
   66 D1:CF9A -  -  -  -  
   67 D1:CF9A -  -  -  -  MG2_Data_21:
   68 D1:CF9A 00 -  -  -  	.db 0
   69 D1:CF9B 00 -  -  -  	.db 0
   70 D1:CF9C -  -  -  -  
   71 D1:CF9C -  -  -  -  MG2_Data_20:
   72 D1:CF9C 00 -  -  -  	.db 0
   73 D1:CF9D 00 -  -  -  	.db 0
   74 D1:CF9E -  -  -  -  
   75 D1:CF9E -  -  -  -  MG2_Data_19:
   76 D1:CF9E 00 -  -  -  	.db 0
   77 D1:CF9F 00 -  -  -  	.db 0
   78 D1:CFA0 -  -  -  -  
   79 D1:CFA0 -  -  -  -  MG2_Data_18:
   80 D1:CFA0 00 -  -  -  	.db 0
   81 D1:CFA1 00 -  -  -  	.db 0
   82 D1:CFA2 -  -  -  -  
   83 D1:CFA2 -  -  -  -  MG2_Data_17:
   84 D1:CFA2 00 -  -  -  	.db 0
   85 D1:CFA3 00 -  -  -  	.db 0
   86 D1:CFA4 -  -  -  -  
   87 D1:CFA4 -  -  -  -  MG2_Data_16:
   88 D1:CFA4 00 -  -  -  	.db 0
   89 D1:CFA5 00 -  -  -  	.db 0
   90 D1:CFA6 -  -  -  -  
   91 D1:CFA6 -  -  -  -  MG2_Data_15:
   92 D1:CFA6 00 -  -  -  	.db 0
   93 D1:CFA7 00 -  -  -  	.db 0
   94 D1:CFA8 -  -  -  -  
   95 D1:CFA8 -  -  -  -  MG2_Data_14:
   96 D1:CFA8 00 -  -  -  	.db 0
   97 D1:CFA9 00 -  -  -  	.db 0
   98 D1:CFAA -  -  -  -  
   99 D1:CFAA -  -  -  -  MG2_Data_13:
  100 D1:CFAA 00 -  -  -  	.db 0
  101 D1:CFAB 00 -  -  -  	.db 0
  102 D1:CFAC -  -  -  -  
  103 D1:CFAC -  -  -  -  MG2_Data_12:
  104 D1:CFAC 00 -  -  -  	.db 0
  105 D1:CFAD 00 -  -  -  	.db 0
  106 D1:CFAE -  -  -  -  
  107 D1:CFAE -  -  -  -  MG2_Data_11:
  108 D1:CFAE 00 -  -  -  	.db 0
  109 D1:CFAF 00 -  -  -  	.db 0
  110 D1:CFB0 -  -  -  -  
  111 D1:CFB0 -  -  -  -  MG2_Data_10:
  112 D1:CFB0 00 -  -  -  	.db 0
  113 D1:CFB1 00 -  -  -  	.db 0
  114 D1:CFB2 -  -  -  -  
  115 D1:CFB2 -  -  -  -  MG2_Data_9:
  116 D1:CFB2 00 -  -  -  	.db 0
  117 D1:CFB3 00 -  -  -  	.db 0
  118 D1:CFB4 -  -  -  -  
  119 D1:CFB4 -  -  -  -  MG2_Data_8:
  120 D1:CFB4 00 -  -  -  	.db 0
  121 D1:CFB5 00 -  -  -  	.db 0
  122 D1:CFB6 -  -  -  -  
  123 D1:CFB6 -  -  -  -  MG2_Data_7:
  124 D1:CFB6 00 -  -  -  	.db 0
  125 D1:CFB7 00 -  -  -  	.db 0
  126 D1:CFB8 -  -  -  -  
  127 D1:CFB8 -  -  -  -  MG2_Data_6:
  128 D1:CFB8 00 -  -  -  	.db 0
  129 D1:CFB9 00 -  -  -  	.db 0
  130 D1:CFBA -  -  -  -  
  131 D1:CFBA -  -  -  -  MG2_Data_5:
  132 D1:CFBA 00 -  -  -  	.db 0
  133 D1:CFBB 00 -  -  -  	.db 0
  134 D1:CFBC -  -  -  -  
  135 D1:CFBC -  -  -  -  MG2_Data_4:
  136 D1:CFBC 00 -  -  -  	.db 0
  137 D1:CFBD 00 -  -  -  	.db 0
  138 D1:CFBE -  -  -  -  
  139 D1:CFBE -  -  -  -  MG2_Data_3:
  140 D1:CFBE 00 -  -  -  	.db 0
  141 D1:CFBF 05 -  -  -  	.db 5
  142 D1:CFC0 35 FF 52 1F 	.db 53, 255, 82, 31  ;SG_Platform1
  143 D1:CFC4 89 FF 66 21 	.db 137, 255, 102, 33  ;SG_Platform2
  144 D1:CFC8 B1 FF 44 1F 	.db 177, 255, 68, 31  ;SG_Platform1
  145 D1:CFCC E0 FF 17 1F 	.db 224, 255, 23, 31  ;SG_Platform1
  146 D1:CFD0 BA 09 55 8A 	.db 186, 9, 85, 138  ;Spikes_0_Fast
  147 D1:CFD4 -  -  -  -  
  148 D1:CFD4 -  -  -  -  MG2_Data_2:
  149 D1:CFD4 00 -  -  -  	.db 0
  150 D1:CFD5 08 -  -  -  	.db 8
  151 D1:CFD6 15 FF 4F 1D 	.db 21, 255, 79, 29  ;SG_Platform3
  152 D1:CFDA 5E FF 24 1E 	.db 94, 255, 36, 30  ;SG_Platform4
  153 D1:CFDE AC FF 12 1F 	.db 172, 255, 18, 31  ;SG_Platform1
  154 D1:CFE2 F2 FF 11 1F 	.db 242, 255, 17, 31  ;SG_Platform1
  155 D1:CFE6 F2 FF 73 21 	.db 242, 255, 115, 33  ;SG_Platform2
  156 D1:CFEA 1E 09 69 8A 	.db 30, 9, 105, 138  ;Spikes_0_Fast
  157 D1:CFEE 1E 09 75 8A 	.db 30, 9, 117, 138  ;Spikes_0_Fast
  158 D1:CFF2 67 09 37 8A 	.db 103, 9, 55, 138  ;Spikes_0_Fast
  159 D1:CFF6 -  -  -  -  
  160 D1:CFF6 -  -  -  -  MG2_Data_1:
  161 D1:CFF6 00 -  -  -  	.db 0
  162 D1:CFF7 06 -  -  -  	.db 6
  163 D1:CFF8 62 FF 30 1D 	.db 98, 255, 48, 29  ;SG_Platform3
  164 D1:CFFC 18 FF 06 1E 	.db 24, 255, 6, 30  ;SG_Platform4
  165 D1:D000 62 FF 67 21 	.db 98, 255, 103, 33  ;SG_Platform2
  166 D1:D004 B0 FF 67 21 	.db 176, 255, 103, 33  ;SG_Platform2
  167 D1:D008 CD FF 27 1F 	.db 205, 255, 39, 31  ;SG_Platform1
  168 D1:D00C 6B 09 46 8A 	.db 107, 9, 70, 138  ;Spikes_0_Fast
  169 D1:D010 -  -  -  -  
  170 D1:D010 -  -  -  -  MG2_Data_0:
  171 D1:D010 00 -  -  -  	.db 0
  172 D1:D011 05 -  -  -  	.db 5
  173 D1:D012 5D FF 63 1D 	.db 93, 255, 99, 29  ;SG_Platform3
  174 D1:D016 5D FF 0C 1E 	.db 93, 255, 12, 30  ;SG_Platform4
  175 D1:D01A 91 FF 41 1F 	.db 145, 255, 65, 31  ;SG_Platform1
  176 D1:D01E E8 FF 54 1F 	.db 232, 255, 84, 31  ;SG_Platform1
  177 D1:D022 C8 FF 23 20 	.db 200, 255, 35, 32  ;SG_TongueRing
  178 D1:D026 -  -  -  -  
  179 D1:D026 -  -  -  -  
  180 D1:D026 -  -  -  -  
Listing for file "ascent.asm"
  620 D1:D026 -  -  -  -  #include "generated/FG_Data.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\generated\FG_Data.txt"
    1 D1:D026 -  -  -  -  FG_Data_frame_table:
    2 D1:D026 8E D1 D1 -  	.dl FG_Data_0
    3 D1:D029 78 D1 D1 -  	.dl FG_Data_1
    4 D1:D02C 06 D1 D1 -  	.dl FG_Data_2
    5 D1:D02F 00 D1 D1 -  	.dl FG_Data_3
    6 D1:D032 EA D0 D1 -  	.dl FG_Data_4
    7 D1:D035 E0 D0 D1 -  	.dl FG_Data_5
    8 D1:D038 DA D0 D1 -  	.dl FG_Data_6
    9 D1:D03B D0 D0 D1 -  	.dl FG_Data_7
   10 D1:D03E C2 D0 D1 -  	.dl FG_Data_8
   11 D1:D041 AC D0 D1 -  	.dl FG_Data_9
   12 D1:D044 A6 D0 D1 -  	.dl FG_Data_10
   13 D1:D047 A4 D0 D1 -  	.dl FG_Data_11
   14 D1:D04A A2 D0 D1 -  	.dl FG_Data_12
   15 D1:D04D A0 D0 D1 -  	.dl FG_Data_13
   16 D1:D050 9E D0 D1 -  	.dl FG_Data_14
   17 D1:D053 9C D0 D1 -  	.dl FG_Data_15
   18 D1:D056 9A D0 D1 -  	.dl FG_Data_16
   19 D1:D059 98 D0 D1 -  	.dl FG_Data_17
   20 D1:D05C 96 D0 D1 -  	.dl FG_Data_18
   21 D1:D05F 94 D0 D1 -  	.dl FG_Data_19
   22 D1:D062 92 D0 D1 -  	.dl FG_Data_20
   23 D1:D065 90 D0 D1 -  	.dl FG_Data_21
   24 D1:D068 8E D0 D1 -  	.dl FG_Data_22
   25 D1:D06B 8C D0 D1 -  	.dl FG_Data_23
   26 D1:D06E 8A D0 D1 -  	.dl FG_Data_24
   27 D1:D071 88 D0 D1 -  	.dl FG_Data_25
   28 D1:D074 86 D0 D1 -  	.dl FG_Data_26
   29 D1:D077 84 D0 D1 -  	.dl FG_Data_27
   30 D1:D07A 82 D0 D1 -  	.dl FG_Data_28
   31 D1:D07D 80 D0 D1 -  	.dl FG_Data_29
   32 D1:D080 -  -  -  -  
   33 D1:D080 -  -  -  -  
   34 D1:D080 -  -  -  -  
   35 D1:D080 -  -  -  -  FG_Data_29:
   36 D1:D080 00 -  -  -  	.db 0
   37 D1:D081 00 -  -  -  	.db 0
   38 D1:D082 -  -  -  -  
   39 D1:D082 -  -  -  -  FG_Data_28:
   40 D1:D082 00 -  -  -  	.db 0
   41 D1:D083 00 -  -  -  	.db 0
   42 D1:D084 -  -  -  -  
   43 D1:D084 -  -  -  -  FG_Data_27:
   44 D1:D084 00 -  -  -  	.db 0
   45 D1:D085 00 -  -  -  	.db 0
   46 D1:D086 -  -  -  -  
   47 D1:D086 -  -  -  -  FG_Data_26:
   48 D1:D086 00 -  -  -  	.db 0
   49 D1:D087 00 -  -  -  	.db 0
   50 D1:D088 -  -  -  -  
   51 D1:D088 -  -  -  -  FG_Data_25:
   52 D1:D088 00 -  -  -  	.db 0
   53 D1:D089 00 -  -  -  	.db 0
   54 D1:D08A -  -  -  -  
   55 D1:D08A -  -  -  -  FG_Data_24:
   56 D1:D08A 00 -  -  -  	.db 0
   57 D1:D08B 00 -  -  -  	.db 0
   58 D1:D08C -  -  -  -  
   59 D1:D08C -  -  -  -  FG_Data_23:
   60 D1:D08C 00 -  -  -  	.db 0
   61 D1:D08D 00 -  -  -  	.db 0
   62 D1:D08E -  -  -  -  
   63 D1:D08E -  -  -  -  FG_Data_22:
   64 D1:D08E 00 -  -  -  	.db 0
   65 D1:D08F 00 -  -  -  	.db 0
   66 D1:D090 -  -  -  -  
   67 D1:D090 -  -  -  -  FG_Data_21:
   68 D1:D090 00 -  -  -  	.db 0
   69 D1:D091 00 -  -  -  	.db 0
   70 D1:D092 -  -  -  -  
   71 D1:D092 -  -  -  -  FG_Data_20:
   72 D1:D092 00 -  -  -  	.db 0
   73 D1:D093 00 -  -  -  	.db 0
   74 D1:D094 -  -  -  -  
   75 D1:D094 -  -  -  -  FG_Data_19:
   76 D1:D094 00 -  -  -  	.db 0
   77 D1:D095 00 -  -  -  	.db 0
   78 D1:D096 -  -  -  -  
   79 D1:D096 -  -  -  -  FG_Data_18:
   80 D1:D096 00 -  -  -  	.db 0
   81 D1:D097 00 -  -  -  	.db 0
   82 D1:D098 -  -  -  -  
   83 D1:D098 -  -  -  -  FG_Data_17:
   84 D1:D098 00 -  -  -  	.db 0
   85 D1:D099 00 -  -  -  	.db 0
   86 D1:D09A -  -  -  -  
   87 D1:D09A -  -  -  -  FG_Data_16:
   88 D1:D09A 00 -  -  -  	.db 0
   89 D1:D09B 00 -  -  -  	.db 0
   90 D1:D09C -  -  -  -  
   91 D1:D09C -  -  -  -  FG_Data_15:
   92 D1:D09C 00 -  -  -  	.db 0
   93 D1:D09D 00 -  -  -  	.db 0
   94 D1:D09E -  -  -  -  
   95 D1:D09E -  -  -  -  FG_Data_14:
   96 D1:D09E 00 -  -  -  	.db 0
   97 D1:D09F 00 -  -  -  	.db 0
   98 D1:D0A0 -  -  -  -  
   99 D1:D0A0 -  -  -  -  FG_Data_13:
  100 D1:D0A0 00 -  -  -  	.db 0
  101 D1:D0A1 00 -  -  -  	.db 0
  102 D1:D0A2 -  -  -  -  
  103 D1:D0A2 -  -  -  -  FG_Data_12:
  104 D1:D0A2 00 -  -  -  	.db 0
  105 D1:D0A3 00 -  -  -  	.db 0
  106 D1:D0A4 -  -  -  -  
  107 D1:D0A4 -  -  -  -  FG_Data_11:
  108 D1:D0A4 00 -  -  -  	.db 0
  109 D1:D0A5 00 -  -  -  	.db 0
  110 D1:D0A6 -  -  -  -  
  111 D1:D0A6 -  -  -  -  FG_Data_10:
  112 D1:D0A6 00 -  -  -  	.db 0
  113 D1:D0A7 01 -  -  -  	.db 1
  114 D1:D0A8 CA FF 80 01 	.db 202, 255, 128, 1  ;SG_Branch3
  115 D1:D0AC -  -  -  -  
  116 D1:D0AC -  -  -  -  FG_Data_9:
  117 D1:D0AC 00 -  -  -  	.db 0
  118 D1:D0AD 05 -  -  -  	.db 5
  119 D1:D0AE B0 0E 00 52 	.db 176, 14, 0, 82  ;Branches_3_Fast
  120 D1:D0B2 B1 0E 09 53 	.db 177, 14, 9, 83  ;Branches_2_Fast
  121 D1:D0B6 B1 0E 12 3F 	.db 177, 14, 18, 63  ;Branches_4_Fast_F
  122 D1:D0BA D5 FF 72 05 	.db 213, 255, 114, 5  ;SG_Branch4
  123 D1:D0BE EA FF 13 02 	.db 234, 255, 19, 2  ;SG_Branch7
  124 D1:D0C2 -  -  -  -  
  125 D1:D0C2 -  -  -  -  FG_Data_8:
  126 D1:D0C2 00 -  -  -  	.db 0
  127 D1:D0C3 03 -  -  -  	.db 3
  128 D1:D0C4 7C 0E 97 50 	.db 124, 14, 151, 80  ;Branches_5_Fast
  129 D1:D0C8 7C 0E 8E 51 	.db 124, 14, 142, 81  ;Branches_4_Fast
  130 D1:D0CC BA FF 6E 0C 	.db 186, 255, 110, 12  ;SG_Branch2
  131 D1:D0D0 -  -  -  -  
  132 D1:D0D0 -  -  -  -  FG_Data_7:
  133 D1:D0D0 00 -  -  -  	.db 0
  134 D1:D0D1 02 -  -  -  	.db 2
  135 D1:D0D2 87 FF 00 06 	.db 135, 255, 0, 6  ;SG_Branch5
  136 D1:D0D6 ED FF 00 08 	.db 237, 255, 0, 8  ;SG_Branch6
  137 D1:D0DA -  -  -  -  
  138 D1:D0DA -  -  -  -  FG_Data_6:
  139 D1:D0DA 00 -  -  -  	.db 0
  140 D1:D0DB 01 -  -  -  	.db 1
  141 D1:D0DC 64 FF 00 08 	.db 100, 255, 0, 8  ;SG_Branch6
  142 D1:D0E0 -  -  -  -  
  143 D1:D0E0 -  -  -  -  FG_Data_5:
  144 D1:D0E0 00 -  -  -  	.db 0
  145 D1:D0E1 02 -  -  -  	.db 2
  146 D1:D0E2 D7 FF 80 01 	.db 215, 255, 128, 1  ;SG_Branch3
  147 D1:D0E6 5D FF 00 06 	.db 93, 255, 0, 6  ;SG_Branch5
  148 D1:D0EA -  -  -  -  
  149 D1:D0EA -  -  -  -  FG_Data_4:
  150 D1:D0EA 00 -  -  -  	.db 0
  151 D1:D0EB 05 -  -  -  	.db 5
  152 D1:D0EC 8F FF 6E 09 	.db 143, 255, 110, 9  ;SG_Vines7
  153 D1:D0F0 6F FF 20 0A 	.db 111, 255, 32, 10  ;SG_Vines5
  154 D1:D0F4 8D FF 00 08 	.db 141, 255, 0, 8  ;SG_Branch6
  155 D1:D0F8 CA FF 72 05 	.db 202, 255, 114, 5  ;SG_Branch4
  156 D1:D0FC 6E FF 18 0B 	.db 110, 255, 24, 11  ;SG_Vines2
  157 D1:D100 -  -  -  -  
  158 D1:D100 -  -  -  -  FG_Data_3:
  159 D1:D100 00 -  -  -  	.db 0
  160 D1:D101 01 -  -  -  	.db 1
  161 D1:D102 B0 FF 80 01 	.db 176, 255, 128, 1  ;SG_Branch3
  162 D1:D106 -  -  -  -  
  163 D1:D106 -  -  -  -  FG_Data_2:
  164 D1:D106 00 -  -  -  	.db 0
  165 D1:D107 1C -  -  -  	.db 28
  166 D1:D108 3A FF 1E 07 	.db 58, 255, 30, 7  ;SG_Lantern4
  167 D1:D10C 38 FF 90 07 	.db 56, 255, 144, 7  ;SG_Lantern4
  168 D1:D110 3D 0A 10 30 	.db 61, 10, 16, 48  ;AscentBanner_8_Slow
  169 D1:D114 58 0A 10 31 	.db 88, 10, 16, 49  ;AscentBanner_7_Fast
  170 D1:D118 4E 0A 98 32 	.db 78, 10, 152, 50  ;AscentBanner_7_Slow_O
  171 D1:D11C 44 0A 98 2F 	.db 68, 10, 152, 47  ;AscentBanner_8_Slow_O
  172 D1:D120 58 0A 98 31 	.db 88, 10, 152, 49  ;AscentBanner_7_Fast
  173 D1:D124 93 FF 00 06 	.db 147, 255, 0, 6  ;SG_Branch5
  174 D1:D128 9C FF 72 05 	.db 156, 255, 114, 5  ;SG_Branch4
  175 D1:D12C 55 0C 8F 33 	.db 85, 12, 143, 51  ;AscentBanner_9_Fast_F
  176 D1:D130 51 0C 8B 33 	.db 81, 12, 139, 51  ;AscentBanner_9_Fast_F
  177 D1:D134 60 13 93 34 	.db 96, 19, 147, 52  ;AscentBanner_6_Slow_F
  178 D1:D138 4D 0C 87 33 	.db 77, 12, 135, 51  ;AscentBanner_9_Fast_F
  179 D1:D13C 49 0C 83 33 	.db 73, 12, 131, 51  ;AscentBanner_9_Fast_F
  180 D1:D140 45 0B 7B 35 	.db 69, 11, 123, 53  ;AscentBanner_10_Fast_F
  181 D1:D144 41 08 6F 36 	.db 65, 8, 111, 54  ;AscentBanner_5_Fast
  182 D1:D148 40 08 63 37 	.db 64, 8, 99, 55  ;AscentBanner_4_Fast
  183 D1:D14C 3F 08 5B 38 	.db 63, 8, 91, 56  ;AscentBanner_0_Fast
  184 D1:D150 3E 08 49 39 	.db 62, 8, 73, 57  ;AscentBanner_3_Fast
  185 D1:D154 3E 08 3D 3A 	.db 62, 8, 61, 58  ;AscentBanner_2_Fast
  186 D1:D158 3F 08 31 3B 	.db 63, 8, 49, 59  ;AscentBanner_1_Fast
  187 D1:D15C 47 0C 25 3C 	.db 71, 12, 37, 60  ;AscentBanner_9_Fast
  188 D1:D160 4B 0C 21 3C 	.db 75, 12, 33, 60  ;AscentBanner_9_Fast
  189 D1:D164 43 0B 29 3D 	.db 67, 11, 41, 61  ;AscentBanner_10_Fast
  190 D1:D168 4F 0C 1D 3C 	.db 79, 12, 29, 60  ;AscentBanner_9_Fast
  191 D1:D16C 53 0C 19 3C 	.db 83, 12, 25, 60  ;AscentBanner_9_Fast
  192 D1:D170 5F 13 11 3E 	.db 95, 19, 17, 62  ;AscentBanner_6_Slow_O
  193 D1:D174 3E FF 04 04 	.db 62, 255, 4, 4  ;SG_Lantern2
  194 D1:D178 -  -  -  -  
  195 D1:D178 -  -  -  -  FG_Data_1:
  196 D1:D178 00 -  -  -  	.db 0
  197 D1:D179 05 -  -  -  	.db 5
  198 D1:D17A 39 FF 14 03 	.db 57, 255, 20, 3  ;SG_Lantern1
  199 D1:D17E 41 FF 23 04 	.db 65, 255, 35, 4  ;SG_Lantern2
  200 D1:D182 4B 0E 00 09 	.db 75, 14, 0, 9  ;Branches_9_Fast
  201 D1:D186 C9 FF 80 01 	.db 201, 255, 128, 1  ;SG_Branch3
  202 D1:D18A 87 FF 00 02 	.db 135, 255, 0, 2  ;SG_Branch7
  203 D1:D18E -  -  -  -  
  204 D1:D18E -  -  -  -  FG_Data_0:
  205 D1:D18E 00 -  -  -  	.db 0
  206 D1:D18F 04 -  -  -  	.db 4
  207 D1:D190 19 1A 94 02 	.db 25, 26, 148, 2  ;BigGrassBase_Fast
  208 D1:D194 33 FF 00 00 	.db 51, 255, 0, 0  ;SG_GroundGrass
  209 D1:D198 33 FF 22 00 	.db 51, 255, 34, 0  ;SG_GroundGrass
  210 D1:D19C 33 FF 5F 00 	.db 51, 255, 95, 0  ;SG_GroundGrass
  211 D1:D1A0 -  -  -  -  
  212 D1:D1A0 -  -  -  -  
  213 D1:D1A0 -  -  -  -  
Listing for file "ascent.asm"
  621 D1:D1A0 -  -  -  -  #include "generated/DecompressCalls.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\generated\DecompressCalls.txt"
    1 D1:D1A0 -  -  -  -  decompress_calls_table_up:
    2 D1:D1A0 B9 D6 D1 -  	.dl decompress_frame_up_0
    3 D1:D1A3 7A D8 D1 -  	.dl decompress_frame_up_1
    4 D1:D1A6 97 D8 D1 -  	.dl decompress_frame_up_2
    5 D1:D1A9 B4 D8 D1 -  	.dl decompress_frame_up_3
    6 D1:D1AC B5 D8 D1 -  	.dl decompress_frame_up_4
    7 D1:D1AF CB D8 D1 -  	.dl decompress_frame_up_5
    8 D1:D1B2 D3 D8 D1 -  	.dl decompress_frame_up_6
    9 D1:D1B5 D4 D8 D1 -  	.dl decompress_frame_up_7
   10 D1:D1B8 D5 D8 D1 -  	.dl decompress_frame_up_8
   11 D1:D1BB DD D8 D1 -  	.dl decompress_frame_up_9
   12 D1:D1BE DE D8 D1 -  	.dl decompress_frame_up_10
   13 D1:D1C1 DF D8 D1 -  	.dl decompress_frame_up_11
   14 D1:D1C4 E0 D8 D1 -  	.dl decompress_frame_up_12
   15 D1:D1C7 E1 D8 D1 -  	.dl decompress_frame_up_13
   16 D1:D1CA E2 D8 D1 -  	.dl decompress_frame_up_14
   17 D1:D1CD E3 D8 D1 -  	.dl decompress_frame_up_15
   18 D1:D1D0 E4 D8 D1 -  	.dl decompress_frame_up_16
   19 D1:D1D3 E5 D8 D1 -  	.dl decompress_frame_up_17
   20 D1:D1D6 E6 D8 D1 -  	.dl decompress_frame_up_18
   21 D1:D1D9 E7 D8 D1 -  	.dl decompress_frame_up_19
   22 D1:D1DC E8 D8 D1 -  	.dl decompress_frame_up_20
   23 D1:D1DF E9 D8 D1 -  	.dl decompress_frame_up_21
   24 D1:D1E2 EA D8 D1 -  	.dl decompress_frame_up_22
   25 D1:D1E5 EB D8 D1 -  	.dl decompress_frame_up_23
   26 D1:D1E8 EC D8 D1 -  	.dl decompress_frame_up_24
   27 D1:D1EB ED D8 D1 -  	.dl decompress_frame_up_25
   28 D1:D1EE EE D8 D1 -  	.dl decompress_frame_up_26
   29 D1:D1F1 EF D8 D1 -  	.dl decompress_frame_up_27
   30 D1:D1F4 F0 D8 D1 -  	.dl decompress_frame_up_28
   31 D1:D1F7 F1 D8 D1 -  	.dl decompress_frame_up_29
   32 D1:D1FA F2 D8 D1 -  	.dl decompress_frame_up_30
   33 D1:D1FD F3 D8 D1 -  	.dl decompress_frame_up_31
   34 D1:D200 F4 D8 D1 -  	.dl decompress_frame_up_32
   35 D1:D203 F5 D8 D1 -  	.dl decompress_frame_up_33
   36 D1:D206 F6 D8 D1 -  	.dl decompress_frame_up_34
   37 D1:D209 F7 D8 D1 -  	.dl decompress_frame_up_35
   38 D1:D20C F8 D8 D1 -  	.dl decompress_frame_up_36
   39 D1:D20F F9 D8 D1 -  	.dl decompress_frame_up_37
   40 D1:D212 FA D8 D1 -  	.dl decompress_frame_up_38
   41 D1:D215 FB D8 D1 -  	.dl decompress_frame_up_39
   42 D1:D218 FC D8 D1 -  	.dl decompress_frame_up_40
   43 D1:D21B FD D8 D1 -  	.dl decompress_frame_up_41
   44 D1:D21E FE D8 D1 -  	.dl decompress_frame_up_42
   45 D1:D221 FF D8 D1 -  	.dl decompress_frame_up_43
   46 D1:D224 00 D9 D1 -  	.dl decompress_frame_up_44
   47 D1:D227 01 D9 D1 -  	.dl decompress_frame_up_45
   48 D1:D22A 02 D9 D1 -  	.dl decompress_frame_up_46
   49 D1:D22D 03 D9 D1 -  	.dl decompress_frame_up_47
   50 D1:D230 04 D9 D1 -  	.dl decompress_frame_up_48
   51 D1:D233 05 D9 D1 -  	.dl decompress_frame_up_49
   52 D1:D236 06 D9 D1 -  	.dl decompress_frame_up_50
   53 D1:D239 07 D9 D1 -  	.dl decompress_frame_up_51
   54 D1:D23C 08 D9 D1 -  	.dl decompress_frame_up_52
   55 D1:D23F 09 D9 D1 -  	.dl decompress_frame_up_53
   56 D1:D242 0A D9 D1 -  	.dl decompress_frame_up_54
   57 D1:D245 0B D9 D1 -  	.dl decompress_frame_up_55
   58 D1:D248 0C D9 D1 -  	.dl decompress_frame_up_56
   59 D1:D24B 0D D9 D1 -  	.dl decompress_frame_up_57
   60 D1:D24E 0E D9 D1 -  	.dl decompress_frame_up_58
   61 D1:D251 0F D9 D1 -  	.dl decompress_frame_up_59
   62 D1:D254 10 D9 D1 -  	.dl decompress_frame_up_60
   63 D1:D257 11 D9 D1 -  	.dl decompress_frame_up_61
   64 D1:D25A 12 D9 D1 -  	.dl decompress_frame_up_62
   65 D1:D25D 13 D9 D1 -  	.dl decompress_frame_up_63
   66 D1:D260 14 D9 D1 -  	.dl decompress_frame_up_64
   67 D1:D263 15 D9 D1 -  	.dl decompress_frame_up_65
   68 D1:D266 16 D9 D1 -  	.dl decompress_frame_up_66
   69 D1:D269 17 D9 D1 -  	.dl decompress_frame_up_67
   70 D1:D26C 18 D9 D1 -  	.dl decompress_frame_up_68
   71 D1:D26F 19 D9 D1 -  	.dl decompress_frame_up_69
   72 D1:D272 1A D9 D1 -  	.dl decompress_frame_up_70
   73 D1:D275 1B D9 D1 -  	.dl decompress_frame_up_71
   74 D1:D278 1C D9 D1 -  	.dl decompress_frame_up_72
   75 D1:D27B 1D D9 D1 -  	.dl decompress_frame_up_73
   76 D1:D27E 1E D9 D1 -  	.dl decompress_frame_up_74
   77 D1:D281 1F D9 D1 -  	.dl decompress_frame_up_75
   78 D1:D284 20 D9 D1 -  	.dl decompress_frame_up_76
   79 D1:D287 21 D9 D1 -  	.dl decompress_frame_up_77
   80 D1:D28A 22 D9 D1 -  	.dl decompress_frame_up_78
   81 D1:D28D 23 D9 D1 -  	.dl decompress_frame_up_79
   82 D1:D290 24 D9 D1 -  	.dl decompress_frame_up_80
   83 D1:D293 25 D9 D1 -  	.dl decompress_frame_up_81
   84 D1:D296 26 D9 D1 -  	.dl decompress_frame_up_82
   85 D1:D299 27 D9 D1 -  	.dl decompress_frame_up_83
   86 D1:D29C 28 D9 D1 -  	.dl decompress_frame_up_84
   87 D1:D29F 29 D9 D1 -  	.dl decompress_frame_up_85
   88 D1:D2A2 2A D9 D1 -  	.dl decompress_frame_up_86
   89 D1:D2A5 2B D9 D1 -  	.dl decompress_frame_up_87
   90 D1:D2A8 2C D9 D1 -  	.dl decompress_frame_up_88
   91 D1:D2AB 2D D9 D1 -  	.dl decompress_frame_up_89
   92 D1:D2AE -  -  -  -  
   93 D1:D2AE -  -  -  -  
   94 D1:D2AE -  -  -  -  decompress_calls_table_down:
   95 D1:D2AE 2E D9 D1 -  	.dl decompress_frame_down_0
   96 D1:D2B1 2F D9 D1 -  	.dl decompress_frame_down_1
   97 D1:D2B4 30 D9 D1 -  	.dl decompress_frame_down_2
   98 D1:D2B7 62 D9 D1 -  	.dl decompress_frame_down_3
   99 D1:D2BA 71 D9 D1 -  	.dl decompress_frame_down_4
  100 D1:D2BD 4B DA D1 -  	.dl decompress_frame_down_5
  101 D1:D2C0 4C DA D1 -  	.dl decompress_frame_down_6
  102 D1:D2C3 54 DA D1 -  	.dl decompress_frame_down_7
  103 D1:D2C6 55 DA D1 -  	.dl decompress_frame_down_8
  104 D1:D2C9 56 DA D1 -  	.dl decompress_frame_down_9
  105 D1:D2CC 57 DA D1 -  	.dl decompress_frame_down_10
  106 D1:D2CF A5 DA D1 -  	.dl decompress_frame_down_11
  107 D1:D2D2 B4 DA D1 -  	.dl decompress_frame_down_12
  108 D1:D2D5 F4 DA D1 -  	.dl decompress_frame_down_13
  109 D1:D2D8 F5 DA D1 -  	.dl decompress_frame_down_14
  110 D1:D2DB 35 DB D1 -  	.dl decompress_frame_down_15
  111 D1:D2DE 36 DB D1 -  	.dl decompress_frame_down_16
  112 D1:D2E1 F7 DC D1 -  	.dl decompress_frame_down_17
  113 D1:D2E4 53 DD D1 -  	.dl decompress_frame_down_18
  114 D1:D2E7 54 DD D1 -  	.dl decompress_frame_down_19
  115 D1:D2EA 55 DD D1 -  	.dl decompress_frame_down_20
  116 D1:D2ED 56 DD D1 -  	.dl decompress_frame_down_21
  117 D1:D2F0 57 DD D1 -  	.dl decompress_frame_down_22
  118 D1:D2F3 58 DD D1 -  	.dl decompress_frame_down_23
  119 D1:D2F6 59 DD D1 -  	.dl decompress_frame_down_24
  120 D1:D2F9 5A DD D1 -  	.dl decompress_frame_down_25
  121 D1:D2FC 5B DD D1 -  	.dl decompress_frame_down_26
  122 D1:D2FF 5C DD D1 -  	.dl decompress_frame_down_27
  123 D1:D302 5D DD D1 -  	.dl decompress_frame_down_28
  124 D1:D305 5E DD D1 -  	.dl decompress_frame_down_29
  125 D1:D308 5F DD D1 -  	.dl decompress_frame_down_30
  126 D1:D30B 60 DD D1 -  	.dl decompress_frame_down_31
  127 D1:D30E 61 DD D1 -  	.dl decompress_frame_down_32
  128 D1:D311 62 DD D1 -  	.dl decompress_frame_down_33
  129 D1:D314 63 DD D1 -  	.dl decompress_frame_down_34
  130 D1:D317 64 DD D1 -  	.dl decompress_frame_down_35
  131 D1:D31A 65 DD D1 -  	.dl decompress_frame_down_36
  132 D1:D31D 66 DD D1 -  	.dl decompress_frame_down_37
  133 D1:D320 67 DD D1 -  	.dl decompress_frame_down_38
  134 D1:D323 68 DD D1 -  	.dl decompress_frame_down_39
  135 D1:D326 69 DD D1 -  	.dl decompress_frame_down_40
  136 D1:D329 6A DD D1 -  	.dl decompress_frame_down_41
  137 D1:D32C 6B DD D1 -  	.dl decompress_frame_down_42
  138 D1:D32F 6C DD D1 -  	.dl decompress_frame_down_43
  139 D1:D332 6D DD D1 -  	.dl decompress_frame_down_44
  140 D1:D335 6E DD D1 -  	.dl decompress_frame_down_45
  141 D1:D338 6F DD D1 -  	.dl decompress_frame_down_46
  142 D1:D33B 70 DD D1 -  	.dl decompress_frame_down_47
  143 D1:D33E 71 DD D1 -  	.dl decompress_frame_down_48
  144 D1:D341 B8 DD D1 -  	.dl decompress_frame_down_49
  145 D1:D344 B9 DD D1 -  	.dl decompress_frame_down_50
  146 D1:D347 BA DD D1 -  	.dl decompress_frame_down_51
  147 D1:D34A BB DD D1 -  	.dl decompress_frame_down_52
  148 D1:D34D BC DD D1 -  	.dl decompress_frame_down_53
  149 D1:D350 BD DD D1 -  	.dl decompress_frame_down_54
  150 D1:D353 BE DD D1 -  	.dl decompress_frame_down_55
  151 D1:D356 BF DD D1 -  	.dl decompress_frame_down_56
  152 D1:D359 C0 DD D1 -  	.dl decompress_frame_down_57
  153 D1:D35C C1 DD D1 -  	.dl decompress_frame_down_58
  154 D1:D35F C2 DD D1 -  	.dl decompress_frame_down_59
  155 D1:D362 C3 DD D1 -  	.dl decompress_frame_down_60
  156 D1:D365 C4 DD D1 -  	.dl decompress_frame_down_61
  157 D1:D368 C5 DD D1 -  	.dl decompress_frame_down_62
  158 D1:D36B C6 DD D1 -  	.dl decompress_frame_down_63
  159 D1:D36E C7 DD D1 -  	.dl decompress_frame_down_64
  160 D1:D371 C8 DD D1 -  	.dl decompress_frame_down_65
  161 D1:D374 C9 DD D1 -  	.dl decompress_frame_down_66
  162 D1:D377 CA DD D1 -  	.dl decompress_frame_down_67
  163 D1:D37A CB DD D1 -  	.dl decompress_frame_down_68
  164 D1:D37D CC DD D1 -  	.dl decompress_frame_down_69
  165 D1:D380 CD DD D1 -  	.dl decompress_frame_down_70
  166 D1:D383 CE DD D1 -  	.dl decompress_frame_down_71
  167 D1:D386 CF DD D1 -  	.dl decompress_frame_down_72
  168 D1:D389 D0 DD D1 -  	.dl decompress_frame_down_73
  169 D1:D38C D1 DD D1 -  	.dl decompress_frame_down_74
  170 D1:D38F D2 DD D1 -  	.dl decompress_frame_down_75
  171 D1:D392 D3 DD D1 -  	.dl decompress_frame_down_76
  172 D1:D395 D4 DD D1 -  	.dl decompress_frame_down_77
  173 D1:D398 D5 DD D1 -  	.dl decompress_frame_down_78
  174 D1:D39B D6 DD D1 -  	.dl decompress_frame_down_79
  175 D1:D39E D7 DD D1 -  	.dl decompress_frame_down_80
  176 D1:D3A1 D8 DD D1 -  	.dl decompress_frame_down_81
  177 D1:D3A4 D9 DD D1 -  	.dl decompress_frame_down_82
  178 D1:D3A7 DA DD D1 -  	.dl decompress_frame_down_83
  179 D1:D3AA DB DD D1 -  	.dl decompress_frame_down_84
  180 D1:D3AD DC DD D1 -  	.dl decompress_frame_down_85
  181 D1:D3B0 DD DD D1 -  	.dl decompress_frame_down_86
  182 D1:D3B3 DE DD D1 -  	.dl decompress_frame_down_87
  183 D1:D3B6 DF DD D1 -  	.dl decompress_frame_down_88
  184 D1:D3B9 E0 DD D1 -  	.dl decompress_frame_down_89
  185 D1:D3BC -  -  -  -  
  186 D1:D3BC -  -  -  -  
  187 D1:D3BC -  -  -  -  
  188 D1:D3BC -  -  -  -  decompress_frame_up_pre2:
  189 D1:D3BC 2D -  -  -  	.db 45
  190 D1:D3BD 22 F5 D1 C0 
              01 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast
  191 D1:D3C3 80 -  -  -  	.db %10000000
  192 D1:D3C4 22 F5 D1 46 
              02 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast_F
  193 D1:D3CA A0 -  -  -  	.db %10100000
  194 D1:D3CB 70 F5 D1 CC 
              02 D4 -  -  	.dl Tree_16, Tree_16_Fast
  195 D1:D3D1 80 -  -  -  	.db %10000000
  196 D1:D3D2 88 F5 D1 21 
              03 D4 -  -  	.dl Tree_17, Tree_17_Slow
  197 D1:D3D8 00 -  -  -  	.db %00000000
  198 D1:D3D9 88 F5 D1 87 
              03 D4 -  -  	.dl Tree_17, Tree_17_Slow_O_F
  199 D1:D3DF 60 -  -  -  	.db %01100000
  200 D1:D3E0 99 F5 D1 ED 
              03 D4 -  -  	.dl Tree_18, Tree_18_Slow
  201 D1:D3E6 00 -  -  -  	.db %00000000
  202 D1:D3E7 99 F5 D1 51 
              04 D4 -  -  	.dl Tree_18, Tree_18_Slow_O_F
  203 D1:D3ED 60 -  -  -  	.db %01100000
  204 D1:D3EE 70 F5 D1 B6 
              04 D4 -  -  	.dl Tree_16, Tree_16_Fast_F
  205 D1:D3F4 A0 -  -  -  	.db %10100000
  206 D1:D3F5 AA F5 D1 0C 
              05 D4 -  -  	.dl Clouds_0, Clouds_0_Fast
  207 D1:D3FB 80 -  -  -  	.db %10000000
  208 D1:D3FC D3 F5 D1 72 
              05 D4 -  -  	.dl Clouds_1, Clouds_1_Fast
  209 D1:D402 80 -  -  -  	.db %10000000
  210 D1:D403 FA F5 D1 D6 
              05 D4 -  -  	.dl Clouds_3, Clouds_3_Fast
  211 D1:D409 80 -  -  -  	.db %10000000
  212 D1:D40A 26 F6 D1 42 
              06 D4 -  -  	.dl Clouds_4, Clouds_4_Fast
  213 D1:D410 80 -  -  -  	.db %10000000
  214 D1:D411 3D F6 D1 82 
              06 D4 -  -  	.dl Clouds_2, Clouds_2_Fast
  215 D1:D417 80 -  -  -  	.db %10000000
  216 D1:D418 AA F5 D1 34 
              07 D4 -  -  	.dl Clouds_0, Clouds_0_Fast_F
  217 D1:D41E A0 -  -  -  	.db %10100000
  218 D1:D41F D3 F5 D1 9A 
              07 D4 -  -  	.dl Clouds_1, Clouds_1_Fast_F
  219 D1:D425 A0 -  -  -  	.db %10100000
  220 D1:D426 26 F6 D1 FE 
              07 D4 -  -  	.dl Clouds_4, Clouds_4_Fast_F
  221 D1:D42C A0 -  -  -  	.db %10100000
  222 D1:D42D FA F5 D1 3E 
              08 D4 -  -  	.dl Clouds_3, Clouds_3_Fast_F
  223 D1:D433 A0 -  -  -  	.db %10100000
  224 D1:D434 3D F6 D1 AA 
              08 D4 -  -  	.dl Clouds_2, Clouds_2_Fast_F
  225 D1:D43A A0 -  -  -  	.db %10100000
  226 D1:D43B 61 F6 D1 5B 
              09 D4 -  -  	.dl FrogDefault, FrogDefault_Slow
  227 D1:D441 00 -  -  -  	.db %00000000
  228 D1:D442 61 F6 D1 8B 
              0A D4 -  -  	.dl FrogDefault, FrogDefault_Slow_O
  229 D1:D448 40 -  -  -  	.db %01000000
  230 D1:D449 61 F6 D1 BB 
              0B D4 -  -  	.dl FrogDefault, FrogDefault_Slow_F
  231 D1:D44F 20 -  -  -  	.db %00100000
  232 D1:D450 61 F6 D1 EB 
              0C D4 -  -  	.dl FrogDefault, FrogDefault_Slow_O_F
  233 D1:D456 60 -  -  -  	.db %01100000
  234 D1:D457 39 F7 D1 1B 
              0E D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow
  235 D1:D45D 00 -  -  -  	.db %00000000
  236 D1:D45E 39 F7 D1 3B 
              0F D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_O
  237 D1:D464 40 -  -  -  	.db %01000000
  238 D1:D465 39 F7 D1 61 
              10 D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_F
  239 D1:D46B 20 -  -  -  	.db %00100000
  240 D1:D46C 39 F7 D1 87 
              11 D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_O_F
  241 D1:D472 60 -  -  -  	.db %01100000
  242 D1:D473 D7 F7 D1 A7 
              12 D4 -  -  	.dl FrogCharge, FrogCharge_Slow
  243 D1:D479 00 -  -  -  	.db %00000000
  244 D1:D47A D7 F7 D1 C7 
              13 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_O
  245 D1:D480 40 -  -  -  	.db %01000000
  246 D1:D481 D7 F7 D1 ED 
              14 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_F
  247 D1:D487 20 -  -  -  	.db %00100000
  248 D1:D488 D7 F7 D1 13 
              16 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_O_F
  249 D1:D48E 60 -  -  -  	.db %01100000
  250 D1:D48F A6 F8 D1 33 
              17 D4 -  -  	.dl FrogJump, FrogJump_Slow
  251 D1:D495 00 -  -  -  	.db %00000000
  252 D1:D496 A6 F8 D1 AB 
              18 D4 -  -  	.dl FrogJump, FrogJump_Slow_O
  253 D1:D49C 40 -  -  -  	.db %01000000
  254 D1:D49D A6 F8 D1 2D 
              1A D4 -  -  	.dl FrogJump, FrogJump_Slow_F
  255 D1:D4A3 20 -  -  -  	.db %00100000
  256 D1:D4A4 A6 F8 D1 A5 
              1B D4 -  -  	.dl FrogJump, FrogJump_Slow_O_F
  257 D1:D4AA 60 -  -  -  	.db %01100000
  258 D1:D4AB BF F9 D1 27 
              1D D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow
  259 D1:D4B1 00 -  -  -  	.db %00000000
  260 D1:D4B2 BF F9 D1 9F 
              1E D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_O
  261 D1:D4B8 40 -  -  -  	.db %01000000
  262 D1:D4B9 BF F9 D1 21 
              20 D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_F
  263 D1:D4BF 20 -  -  -  	.db %00100000
  264 D1:D4C0 BF F9 D1 99 
              21 D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_O_F
  265 D1:D4C6 60 -  -  -  	.db %01100000
  266 D1:D4C7 D8 FA D1 1B 
              23 D4 -  -  	.dl FrogFall, FrogFall_Slow
  267 D1:D4CD 00 -  -  -  	.db %00000000
  268 D1:D4CE D8 FA D1 8B 
              24 D4 -  -  	.dl FrogFall, FrogFall_Slow_O
  269 D1:D4D4 40 -  -  -  	.db %01000000
  270 D1:D4D5 D8 FA D1 05 
              26 D4 -  -  	.dl FrogFall, FrogFall_Slow_F
  271 D1:D4DB 20 -  -  -  	.db %00100000
  272 D1:D4DC D8 FA D1 75 
              27 D4 -  -  	.dl FrogFall, FrogFall_Slow_O_F
  273 D1:D4E2 60 -  -  -  	.db %01100000
  274 D1:D4E3 BE FB D1 EF 
              28 D4 -  -  	.dl FrogTongue, FrogTongue_Slow
  275 D1:D4E9 00 -  -  -  	.db %00000000
  276 D1:D4EA BE FB D1 35 
              29 D4 -  -  	.dl FrogTongue, FrogTongue_Slow_O
  277 D1:D4F0 40 -  -  -  	.db %01000000
  278 D1:D4F1 D1 FB D1 7E 
              29 D4 -  -  	.dl Unlucky_0, Unlucky_0_Fast
  279 D1:D4F7 80 -  -  -  	.db %10000000
  280 D1:D4F8 -  -  -  -  
  281 D1:D4F8 -  -  -  -  decompress_frame_up_pre1:
  282 D1:D4F8 40 -  -  -  	.db 64
  283 D1:D4F9 17 EB D1 DF 
              2A D4 -  -  	.dl Vine5, Vine5_Slow
  284 D1:D4FF 00 -  -  -  	.db %00000000
  285 D1:D500 4F EB D1 9D 
              2B D4 -  -  	.dl Vine6, Vine6_Slow
  286 D1:D506 00 -  -  -  	.db %00000000
  287 D1:D507 7B EB D1 41 
              2C D4 -  -  	.dl Vine4, Vine4_Slow
  288 D1:D50D 00 -  -  -  	.db %00000000
  289 D1:D50E 7B EB D1 01 
              2D D4 -  -  	.dl Vine4, Vine4_Slow_F
  290 D1:D514 20 -  -  -  	.db %00100000
  291 D1:D515 7B EB D1 C1 
              2D D4 -  -  	.dl Vine4, Vine4_Slow_O_F
  292 D1:D51B 60 -  -  -  	.db %01100000
  293 D1:D51C 17 EB D1 81 
              2E D4 -  -  	.dl Vine5, Vine5_Slow_O_F
  294 D1:D522 60 -  -  -  	.db %01100000
  295 D1:D523 B7 EB D1 41 
              2F D4 -  -  	.dl Vine7, Vine7_Slow_O
  296 D1:D529 40 -  -  -  	.db %01000000
  297 D1:D52A 17 EB D1 C1 
              2F D4 -  -  	.dl Vine5, Vine5_Slow_O
  298 D1:D530 40 -  -  -  	.db %01000000
  299 D1:D531 4F EB D1 7F 
              30 D4 -  -  	.dl Vine6, Vine6_Slow_O
  300 D1:D537 40 -  -  -  	.db %01000000
  301 D1:D538 7B EB D1 25 
              31 D4 -  -  	.dl Vine4, Vine4_Slow_O
  302 D1:D53E 40 -  -  -  	.db %01000000
  303 D1:D53F D8 EB D1 E3 
              31 D4 -  -  	.dl Vine2, Vine2_Slow
  304 D1:D545 00 -  -  -  	.db %00000000
  305 D1:D546 FC EB D1 83 
              32 D4 -  -  	.dl VineVertical, VineVertical_Slow_O
  306 D1:D54C 40 -  -  -  	.db %01000000
  307 D1:D54D FC EB D1 2F 
              33 D4 -  -  	.dl VineVertical, VineVertical_Slow
  308 D1:D553 00 -  -  -  	.db %00000000
  309 D1:D554 22 EC D1 DC 
              33 D4 -  -  	.dl Branches_5, Branches_5_Fast
  310 D1:D55A 80 -  -  -  	.db %10000000
  311 D1:D55B 80 EC D1 7C 
              34 D4 -  -  	.dl Branches_3, Branches_3_Fast
  312 D1:D561 80 -  -  -  	.db %10000000
  313 D1:D562 E0 EC D1 24 
              35 D4 -  -  	.dl Branches_2, Branches_2_Fast
  314 D1:D568 80 -  -  -  	.db %10000000
  315 D1:D569 75 ED D1 CE 
              35 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast
  316 D1:D56F 80 -  -  -  	.db %10000000
  317 D1:D570 BA ED D1 80 
              36 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast
  318 D1:D576 80 -  -  -  	.db %10000000
  319 D1:D577 BA ED D1 00 
              37 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast_F
  320 D1:D57D A0 -  -  -  	.db %10100000
  321 D1:D57E 0D E7 D1 7F 
              37 D4 -  -  	.dl Branches_8, Branches_8_Slow_O_F
  322 D1:D584 60 -  -  -  	.db %01100000
  323 D1:D585 D7 E2 D1 07 
              38 D4 -  -  	.dl Branches_9, Branches_9_Slow_O
  324 D1:D58B 40 -  -  -  	.db %01000000
  325 D1:D58C 04 EE D1 B6 
              38 D4 -  -  	.dl Tree_2, Tree_2_Fast
  326 D1:D592 80 -  -  -  	.db %10000000
  327 D1:D593 6F EE D1 B2 
              39 D4 -  -  	.dl Tree_4, Tree_4_Fast
  328 D1:D599 80 -  -  -  	.db %10000000
  329 D1:D59A DC EE D1 B4 
              3A D4 -  -  	.dl Tree_7, Tree_7_Fast
  330 D1:D5A0 80 -  -  -  	.db %10000000
  331 D1:D5A1 49 EF D1 B6 
              3B D4 -  -  	.dl Tree_9, Tree_9_Fast
  332 D1:D5A7 80 -  -  -  	.db %10000000
  333 D1:D5A8 B6 EF D1 B8 
              3C D4 -  -  	.dl Tree_6, Tree_6_Fast_F
  334 D1:D5AE A0 -  -  -  	.db %10100000
  335 D1:D5AF 23 F0 D1 BA 
              3D D4 -  -  	.dl Tree_3, Tree_3_Fast_F
  336 D1:D5B5 A0 -  -  -  	.db %10100000
  337 D1:D5B6 90 F0 D1 BC 
              3E D4 -  -  	.dl Tree_0, Tree_0_Fast_F
  338 D1:D5BC A0 -  -  -  	.db %10100000
  339 D1:D5BD 23 F0 D1 B8 
              3F D4 -  -  	.dl Tree_3, Tree_3_Fast
  340 D1:D5C3 80 -  -  -  	.db %10000000
  341 D1:D5C4 FB F0 D1 BA 
              40 D4 -  -  	.dl Tree_8, Tree_8_Fast
  342 D1:D5CA 80 -  -  -  	.db %10000000
  343 D1:D5CB 49 EF D1 BC 
              41 D4 -  -  	.dl Tree_9, Tree_9_Fast_F
  344 D1:D5D1 A0 -  -  -  	.db %10100000
  345 D1:D5D2 FB F0 D1 BE 
              42 D4 -  -  	.dl Tree_8, Tree_8_Fast_F
  346 D1:D5D8 A0 -  -  -  	.db %10100000
  347 D1:D5D9 6F EE D1 C0 
              43 D4 -  -  	.dl Tree_4, Tree_4_Fast_F
  348 D1:D5DF A0 -  -  -  	.db %10100000
  349 D1:D5E0 90 F0 D1 C2 
              44 D4 -  -  	.dl Tree_0, Tree_0_Fast
  350 D1:D5E6 80 -  -  -  	.db %10000000
  351 D1:D5E7 B6 EF D1 BE 
              45 D4 -  -  	.dl Tree_6, Tree_6_Fast
  352 D1:D5ED 80 -  -  -  	.db %10000000
  353 D1:D5EE 68 F1 D1 C0 
              46 D4 -  -  	.dl Tree_10, Tree_10_Fast
  354 D1:D5F4 80 -  -  -  	.db %10000000
  355 D1:D5F5 DC EE D1 C2 
              47 D4 -  -  	.dl Tree_7, Tree_7_Fast_F
  356 D1:D5FB A0 -  -  -  	.db %10100000
  357 D1:D5FC D5 F1 D1 C4 
              48 D4 -  -  	.dl Tree_1, Tree_1_Fast_F
  358 D1:D602 A0 -  -  -  	.db %10100000
  359 D1:D603 D5 F1 D1 C2 
              49 D4 -  -  	.dl Tree_1, Tree_1_Fast
  360 D1:D609 80 -  -  -  	.db %10000000
  361 D1:D60A 41 F2 D1 C0 
              4A D4 -  -  	.dl Tree_5, Tree_5_Fast
  362 D1:D610 80 -  -  -  	.db %10000000
  363 D1:D611 AE F2 D1 C2 
              4B D4 -  -  	.dl Tree_11, Tree_11_Fast
  364 D1:D617 80 -  -  -  	.db %10000000
  365 D1:D618 41 F2 D1 C4 
              4C D4 -  -  	.dl Tree_5, Tree_5_Fast_F
  366 D1:D61E A0 -  -  -  	.db %10100000
  367 D1:D61F 04 EE D1 C6 
              4D D4 -  -  	.dl Tree_2, Tree_2_Fast_F
  368 D1:D625 A0 -  -  -  	.db %10100000
  369 D1:D626 AE F2 D1 C2 
              4E D4 -  -  	.dl Tree_11, Tree_11_Fast_F
  370 D1:D62C A0 -  -  -  	.db %10100000
  371 D1:D62D 1B F3 D1 C4 
              4F D4 -  -  	.dl Branches_1, Branches_1_Fast
  372 D1:D633 80 -  -  -  	.db %10000000
  373 D1:D634 B7 EB D1 5D 
              50 D4 -  -  	.dl Vine7, Vine7_Slow
  374 D1:D63A 00 -  -  -  	.db %00000000
  375 D1:D63B 1B F3 D1 E2 
              50 D4 -  -  	.dl Branches_1, Branches_1_Fast_F
  376 D1:D641 A0 -  -  -  	.db %10100000
  377 D1:D642 E0 EC D1 7A 
              51 D4 -  -  	.dl Branches_2, Branches_2_Fast_F
  378 D1:D648 A0 -  -  -  	.db %10100000
  379 D1:D649 22 EC D1 24 
              52 D4 -  -  	.dl Branches_5, Branches_5_Fast_F
  380 D1:D64F A0 -  -  -  	.db %10100000
  381 D1:D650 D8 EB D1 C5 
              52 D4 -  -  	.dl Vine2, Vine2_Slow_O
  382 D1:D656 40 -  -  -  	.db %01000000
  383 D1:D657 D8 EB D1 65 
              53 D4 -  -  	.dl Vine2, Vine2_Slow_F
  384 D1:D65D 20 -  -  -  	.db %00100000
  385 D1:D65E FC EB D1 05 
              54 D4 -  -  	.dl VineVertical, VineVertical_Slow_F
  386 D1:D664 20 -  -  -  	.db %00100000
  387 D1:D665 CE F3 D1 B4 
              54 D4 -  -  	.dl Platforms_0, Platforms_0_Fast
  388 D1:D66B 80 -  -  -  	.db %10000000
  389 D1:D66C 00 F4 D1 2A 
              55 D4 -  -  	.dl Platforms_1, Platforms_1_Fast
  390 D1:D672 80 -  -  -  	.db %10000000
  391 D1:D673 CE F3 D1 A0 
              55 D4 -  -  	.dl Platforms_0, Platforms_0_Fast_F
  392 D1:D679 A0 -  -  -  	.db %10100000
  393 D1:D67A 32 F4 D1 17 
              56 D4 -  -  	.dl Platforms_2, Platforms_2_Slow_O_F
  394 D1:D680 60 -  -  -  	.db %01100000
  395 D1:D681 32 F4 D1 93 
              56 D4 -  -  	.dl Platforms_2, Platforms_2_Slow_O
  396 D1:D687 40 -  -  -  	.db %01000000
  397 D1:D688 65 F4 D1 0E 
              57 D4 -  -  	.dl Spikes_0, Spikes_0_Fast
  398 D1:D68E 80 -  -  -  	.db %10000000
  399 D1:D68F AF F4 D1 8F 
              57 D4 -  -  	.dl TongueRing1, TongueRing1_Slow
  400 D1:D695 00 -  -  -  	.db %00000000
  401 D1:D696 CE F4 D1 13 
              58 D4 -  -  	.dl TongueRing2, TongueRing2_Slow
  402 D1:D69C 00 -  -  -  	.db %00000000
  403 D1:D69D AF F4 D1 97 
              58 D4 -  -  	.dl TongueRing1, TongueRing1_Slow_F
  404 D1:D6A3 20 -  -  -  	.db %00100000
  405 D1:D6A4 CE F4 D1 1B 
              59 D4 -  -  	.dl TongueRing2, TongueRing2_Slow_F
  406 D1:D6AA 20 -  -  -  	.db %00100000
  407 D1:D6AB ED F4 D1 9E 
              59 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast
  408 D1:D6B1 80 -  -  -  	.db %10000000
  409 D1:D6B2 ED F4 D1 24 
              5A D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast_F
  410 D1:D6B8 A0 -  -  -  	.db %10100000
  411 D1:D6B9 -  -  -  -  
  412 D1:D6B9 -  -  -  -  decompress_frame_up_0:
  413 D1:D6B9 40 -  -  -  	.db 64
  414 D1:D6BA 09 E1 D1 AA 
              5A D4 -  -  	.dl BigGrassBase, BigGrassBase_Fast
  415 D1:D6C0 80 -  -  -  	.db %10000000
  416 D1:D6C1 A2 E1 D1 12 
              5C D4 -  -  	.dl BigGrassTop, BigGrassTop_Fast
  417 D1:D6C7 80 -  -  -  	.db %10000000
  418 D1:D6C8 09 E1 D1 07 
              5D D4 -  -  	.dl BigGrassBase, BigGrassBase_Slow_O
  419 D1:D6CE 40 -  -  -  	.db %01000000
  420 D1:D6CF 09 E1 D1 BE 
              5E D4 -  -  	.dl BigGrassBase, BigGrassBase_Fast_F
  421 D1:D6D5 A0 -  -  -  	.db %10100000
  422 D1:D6D6 A2 E1 D1 26 
              60 D4 -  -  	.dl BigGrassTop, BigGrassTop_Fast_F
  423 D1:D6DC A0 -  -  -  	.db %10100000
  424 D1:D6DD A2 E1 D1 1B 
              61 D4 -  -  	.dl BigGrassTop, BigGrassTop_Slow_O
  425 D1:D6E3 40 -  -  -  	.db %01000000
  426 D1:D6E4 1D E2 D1 55 
              62 D4 -  -  	.dl DualLeaf4, DualLeaf4_Slow
  427 D1:D6EA 00 -  -  -  	.db %00000000
  428 D1:D6EB 1D E2 D1 05 
              63 D4 -  -  	.dl DualLeaf4, DualLeaf4_Slow_F
  429 D1:D6F1 20 -  -  -  	.db %00100000
  430 D1:D6F2 57 E2 D1 B6 
              63 D4 -  -  	.dl DualLeaf3, DualLeaf3_Fast
  431 D1:D6F8 80 -  -  -  	.db %10000000
  432 D1:D6F9 8D E2 D1 2E 
              64 D4 -  -  	.dl Branches_10, Branches_10_Fast
  433 D1:D6FF 80 -  -  -  	.db %10000000
  434 D1:D700 D7 E2 D1 A6 
              64 D4 -  -  	.dl Branches_9, Branches_9_Fast
  435 D1:D706 80 -  -  -  	.db %10000000
  436 D1:D707 27 E3 D1 29 
              65 D4 -  -  	.dl Branches_16, Branches_16_Slow
  437 D1:D70D 00 -  -  -  	.db %00000000
  438 D1:D70E 54 E3 D1 96 
              65 D4 -  -  	.dl Branches_13, Branches_13_Fast
  439 D1:D714 80 -  -  -  	.db %10000000
  440 D1:D715 72 E3 D1 C8 
              65 D4 -  -  	.dl Leaves1, Leaves1_Fast
  441 D1:D71B 80 -  -  -  	.db %10000000
  442 D1:D71C 28 E4 D1 E0 
              66 D4 -  -  	.dl DualLeaf1, DualLeaf1_Fast
  443 D1:D722 80 -  -  -  	.db %10000000
  444 D1:D723 53 E4 D1 50 
              67 D4 -  -  	.dl DualLeaf2, DualLeaf2_Fast
  445 D1:D729 80 -  -  -  	.db %10000000
  446 D1:D72A 53 E4 D1 C1 
              67 D4 -  -  	.dl DualLeaf2, DualLeaf2_Slow_O
  447 D1:D730 40 -  -  -  	.db %01000000
  448 D1:D731 28 E4 D1 6B 
              68 D4 -  -  	.dl DualLeaf1, DualLeaf1_Slow_O
  449 D1:D737 40 -  -  -  	.db %01000000
  450 D1:D738 82 E4 D1 13 
              69 D4 -  -  	.dl AscentBanner_6, AscentBanner_6_Slow_O
  451 D1:D73E 40 -  -  -  	.db %01000000
  452 D1:D73F BD E4 D1 C4 
              69 D4 -  -  	.dl AscentBanner_9, AscentBanner_9_Fast
  453 D1:D745 80 -  -  -  	.db %10000000
  454 D1:D746 D6 E4 D1 0E 
              6A D4 -  -  	.dl AscentBanner_10, AscentBanner_10_Fast
  455 D1:D74C 80 -  -  -  	.db %10000000
  456 D1:D74D 00 E5 D1 70 
              6A D4 -  -  	.dl AscentBanner_1, AscentBanner_1_Fast
  457 D1:D753 80 -  -  -  	.db %10000000
  458 D1:D754 35 E5 D1 EA 
              6A D4 -  -  	.dl AscentBanner_2, AscentBanner_2_Fast
  459 D1:D75A 80 -  -  -  	.db %10000000
  460 D1:D75B 6A E5 D1 64 
              6B D4 -  -  	.dl AscentBanner_3, AscentBanner_3_Fast
  461 D1:D761 80 -  -  -  	.db %10000000
  462 D1:D762 B7 E5 D1 0E 
              6C D4 -  -  	.dl AscentBanner_0, AscentBanner_0_Fast
  463 D1:D768 80 -  -  -  	.db %10000000
  464 D1:D769 CB E5 D1 68 
              6C D4 -  -  	.dl AscentBanner_4, AscentBanner_4_Fast
  465 D1:D76F 80 -  -  -  	.db %10000000
  466 D1:D770 00 E6 D1 E2 
              6C D4 -  -  	.dl AscentBanner_5, AscentBanner_5_Fast
  467 D1:D776 80 -  -  -  	.db %10000000
  468 D1:D777 D6 E4 D1 5C 
              6D D4 -  -  	.dl AscentBanner_10, AscentBanner_10_Fast_F
  469 D1:D77D A0 -  -  -  	.db %10100000
  470 D1:D77E BD E4 D1 BE 
              6D D4 -  -  	.dl AscentBanner_9, AscentBanner_9_Fast_F
  471 D1:D784 A0 -  -  -  	.db %10100000
  472 D1:D785 82 E4 D1 07 
              6E D4 -  -  	.dl AscentBanner_6, AscentBanner_6_Slow_F
  473 D1:D78B 20 -  -  -  	.db %00100000
  474 D1:D78C 35 E6 D1 B8 
              6E D4 -  -  	.dl AscentBanner_7, AscentBanner_7_Fast
  475 D1:D792 80 -  -  -  	.db %10000000
  476 D1:D793 43 E6 D1 FF 
              6E D4 -  -  	.dl AscentBanner_8, AscentBanner_8_Slow_O
  477 D1:D799 40 -  -  -  	.db %01000000
  478 D1:D79A 43 E6 D1 6D 
              6F D4 -  -  	.dl AscentBanner_8, AscentBanner_8_Slow
  479 D1:D7A0 00 -  -  -  	.db %00000000
  480 D1:D7A1 35 E6 D1 D5 
              6F D4 -  -  	.dl AscentBanner_7, AscentBanner_7_Slow_O
  481 D1:D7A7 40 -  -  -  	.db %01000000
  482 D1:D7A8 5A E6 D1 3B 
              70 D4 -  -  	.dl Branches_6, Branches_6_Slow
  483 D1:D7AE 00 -  -  -  	.db %00000000
  484 D1:D7AF 8D E2 D1 D8 
              70 D4 -  -  	.dl Branches_10, Branches_10_Fast_F
  485 D1:D7B5 A0 -  -  -  	.db %10100000
  486 D1:D7B6 A4 E6 D1 50 
              71 D4 -  -  	.dl Branches_7, Branches_7_Fast
  487 D1:D7BC 80 -  -  -  	.db %10000000
  488 D1:D7BD E9 E6 D1 C9 
              71 D4 -  -  	.dl Branches_15, Branches_15_Slow
  489 D1:D7C3 00 -  -  -  	.db %00000000
  490 D1:D7C4 0D E7 D1 3A 
              72 D4 -  -  	.dl Branches_8, Branches_8_Fast_F
  491 D1:D7CA A0 -  -  -  	.db %10100000
  492 D1:D7CB 3E E7 D1 98 
              72 D4 -  -  	.dl Branches_12, Branches_12_Fast
  493 D1:D7D1 80 -  -  -  	.db %10000000
  494 D1:D7D2 E9 E6 D1 F3 
              72 D4 -  -  	.dl Branches_15, Branches_15_Slow_O_F
  495 D1:D7D8 60 -  -  -  	.db %01100000
  496 D1:D7D9 78 E7 D1 64 
              73 D4 -  -  	.dl LeavesDark, LeavesDark_Fast
  497 D1:D7DF 80 -  -  -  	.db %10000000
  498 D1:D7E0 78 E7 D1 7C 
              74 D4 -  -  	.dl LeavesDark, LeavesDark_Fast_F
  499 D1:D7E6 A0 -  -  -  	.db %10100000
  500 D1:D7E7 F7 E7 D1 94 
              75 D4 -  -  	.dl Leaves2, Leaves2_Fast
  501 D1:D7ED 80 -  -  -  	.db %10000000
  502 D1:D7EE F7 E7 D1 80 
              76 D4 -  -  	.dl Leaves2, Leaves2_Fast_F
  503 D1:D7F4 A0 -  -  -  	.db %10100000
  504 D1:D7F5 8F E8 D1 6C 
              77 D4 -  -  	.dl LeavesLight, LeavesLight_Fast
  505 D1:D7FB 80 -  -  -  	.db %10000000
  506 D1:D7FC 0D E7 D1 84 
              78 D4 -  -  	.dl Branches_8, Branches_8_Fast
  507 D1:D802 80 -  -  -  	.db %10000000
  508 D1:D803 0E E9 D1 E2 
              78 D4 -  -  	.dl Branches_11, Branches_11_Fast_F
  509 D1:D809 A0 -  -  -  	.db %10100000
  510 D1:D80A 27 E3 D1 49 
              79 D4 -  -  	.dl Branches_16, Branches_16_Slow_O_F
  511 D1:D810 60 -  -  -  	.db %01100000
  512 D1:D811 54 E3 D1 B6 
              79 D4 -  -  	.dl Branches_13, Branches_13_Fast_F
  513 D1:D817 A0 -  -  -  	.db %10100000
  514 D1:D818 4C E9 D1 E7 
              79 D4 -  -  	.dl Branches_14, Branches_14_Slow
  515 D1:D81E 00 -  -  -  	.db %00000000
  516 D1:D81F 6B E9 D1 54 
              7A D4 -  -  	.dl Lantern_0, Lantern_0_Fast
  517 D1:D825 80 -  -  -  	.db %10000000
  518 D1:D826 B7 E9 D1 FC 
              7A D4 -  -  	.dl Lantern_1, Lantern_1_Fast
  519 D1:D82C 80 -  -  -  	.db %10000000
  520 D1:D82D 03 EA D1 A4 
              7B D4 -  -  	.dl Lantern_2, Lantern_2_Fast
  521 D1:D833 80 -  -  -  	.db %10000000
  522 D1:D834 6B E9 D1 4C 
              7C D4 -  -  	.dl Lantern_0, Lantern_0_Fast_F
  523 D1:D83A A0 -  -  -  	.db %10100000
  524 D1:D83B B7 E9 D1 F4 
              7C D4 -  -  	.dl Lantern_1, Lantern_1_Fast_F
  525 D1:D841 A0 -  -  -  	.db %10100000
  526 D1:D842 03 EA D1 9C 
              7D D4 -  -  	.dl Lantern_2, Lantern_2_Fast_F
  527 D1:D848 A0 -  -  -  	.db %10100000
  528 D1:D849 4F EA D1 43 
              7E D4 -  -  	.dl Lantern_6, Lantern_6_Slow
  529 D1:D84F 00 -  -  -  	.db %00000000
  530 D1:D850 4F EA D1 01 
              7F D4 -  -  	.dl Lantern_6, Lantern_6_Slow_O_F
  531 D1:D856 60 -  -  -  	.db %01100000
  532 D1:D857 84 EA D1 BF 
              7F D4 -  -  	.dl Lantern_5, Lantern_5_Slow
  533 D1:D85D 00 -  -  -  	.db %00000000
  534 D1:D85E 84 EA D1 7D 
              80 D4 -  -  	.dl Lantern_5, Lantern_5_Slow_O_F
  535 D1:D864 60 -  -  -  	.db %01100000
  536 D1:D865 40 ED D1 3B 
              81 D4 -  -  	.dl Lantern_3, Lantern_3_Slow
  537 D1:D86B 00 -  -  -  	.db %00000000
  538 D1:D86C 40 ED D1 F9 
              81 D4 -  -  	.dl Lantern_3, Lantern_3_Slow_O_F
  539 D1:D872 60 -  -  -  	.db %01100000
  540 D1:D873 75 ED D1 B6 
              82 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast_F
  541 D1:D879 A0 -  -  -  	.db %10100000
  542 D1:D87A -  -  -  -  
  543 D1:D87A -  -  -  -  decompress_frame_up_1:
  544 D1:D87A 04 -  -  -  	.db 4
  545 D1:D87B B9 EA D1 68 
              83 D4 -  -  	.dl Branches_4, Branches_4_Fast_F
  546 D1:D881 A0 -  -  -  	.db %10100000
  547 D1:D882 A4 E6 D1 06 
              84 D4 -  -  	.dl Branches_7, Branches_7_Fast_F
  548 D1:D888 A0 -  -  -  	.db %10100000
  549 D1:D889 3E E7 D1 80 
              84 D4 -  -  	.dl Branches_12, Branches_12_Fast_F
  550 D1:D88F A0 -  -  -  	.db %10100000
  551 D1:D890 72 E3 D1 DC 
              84 D4 -  -  	.dl Leaves1, Leaves1_Fast_F
  552 D1:D896 A0 -  -  -  	.db %10100000
  553 D1:D897 -  -  -  -  
  554 D1:D897 -  -  -  -  decompress_frame_up_2:
  555 D1:D897 04 -  -  -  	.db 4
  556 D1:D898 1B F3 D1 F5 
              85 D4 -  -  	.dl Branches_1, Branches_1_Slow_O
  557 D1:D89E 40 -  -  -  	.db %01000000
  558 D1:D89F E0 EC D1 BB 
              86 D4 -  -  	.dl Branches_2, Branches_2_Slow_O
  559 D1:D8A5 40 -  -  -  	.db %01000000
  560 D1:D8A6 B9 EA D1 9B 
              87 D4 -  -  	.dl Branches_4, Branches_4_Slow_O
  561 D1:D8AC 40 -  -  -  	.db %01000000
  562 D1:D8AD A4 E6 D1 67 
              88 D4 -  -  	.dl Branches_7, Branches_7_Slow_O
  563 D1:D8B3 40 -  -  -  	.db %01000000
  564 D1:D8B4 -  -  -  -  
  565 D1:D8B4 -  -  -  -  decompress_frame_up_3:
  566 D1:D8B4 00 -  -  -  	.db 0
  567 D1:D8B5 -  -  -  -  
  568 D1:D8B5 -  -  -  -  decompress_frame_up_4:
  569 D1:D8B5 03 -  -  -  	.db 3
  570 D1:D8B6 76 F3 D1 AA 
              5A D4 -  -  	.dl Branches_0, Branches_0_Fast_F
  571 D1:D8BC A0 -  -  -  	.db %10100000
  572 D1:D8BD 0D E7 D1 41 
              5B D4 -  -  	.dl Branches_8, Branches_8_Slow_O
  573 D1:D8C3 40 -  -  -  	.db %01000000
  574 D1:D8C4 D7 E2 D1 CA 
              5B D4 -  -  	.dl Branches_9, Branches_9_Fast_F
  575 D1:D8CA A0 -  -  -  	.db %10100000
  576 D1:D8CB -  -  -  -  
  577 D1:D8CB -  -  -  -  decompress_frame_up_5:
  578 D1:D8CB 01 -  -  -  	.db 1
  579 D1:D8CC B9 EA D1 4C 
              5C D4 -  -  	.dl Branches_4, Branches_4_Fast
  580 D1:D8D2 80 -  -  -  	.db %10000000
  581 D1:D8D3 -  -  -  -  
  582 D1:D8D3 -  -  -  -  decompress_frame_up_6:
  583 D1:D8D3 00 -  -  -  	.db 0
  584 D1:D8D4 -  -  -  -  
  585 D1:D8D4 -  -  -  -  decompress_frame_up_7:
  586 D1:D8D4 00 -  -  -  	.db 0
  587 D1:D8D5 -  -  -  -  
  588 D1:D8D5 -  -  -  -  decompress_frame_up_8:
  589 D1:D8D5 01 -  -  -  	.db 1
  590 D1:D8D6 76 F3 D1 E4 
              31 D4 -  -  	.dl Branches_0, Branches_0_Fast
  591 D1:D8DC 80 -  -  -  	.db %10000000
  592 D1:D8DD -  -  -  -  
  593 D1:D8DD -  -  -  -  decompress_frame_up_9:
  594 D1:D8DD 00 -  -  -  	.db 0
  595 D1:D8DE -  -  -  -  
  596 D1:D8DE -  -  -  -  decompress_frame_up_10:
  597 D1:D8DE 00 -  -  -  	.db 0
  598 D1:D8DF -  -  -  -  
  599 D1:D8DF -  -  -  -  decompress_frame_up_11:
  600 D1:D8DF 00 -  -  -  	.db 0
  601 D1:D8E0 -  -  -  -  
  602 D1:D8E0 -  -  -  -  decompress_frame_up_12:
  603 D1:D8E0 00 -  -  -  	.db 0
  604 D1:D8E1 -  -  -  -  
  605 D1:D8E1 -  -  -  -  decompress_frame_up_13:
  606 D1:D8E1 00 -  -  -  	.db 0
  607 D1:D8E2 -  -  -  -  
  608 D1:D8E2 -  -  -  -  decompress_frame_up_14:
  609 D1:D8E2 00 -  -  -  	.db 0
  610 D1:D8E3 -  -  -  -  
  611 D1:D8E3 -  -  -  -  decompress_frame_up_15:
  612 D1:D8E3 00 -  -  -  	.db 0
  613 D1:D8E4 -  -  -  -  
  614 D1:D8E4 -  -  -  -  decompress_frame_up_16:
  615 D1:D8E4 00 -  -  -  	.db 0
  616 D1:D8E5 -  -  -  -  
  617 D1:D8E5 -  -  -  -  decompress_frame_up_17:
  618 D1:D8E5 00 -  -  -  	.db 0
  619 D1:D8E6 -  -  -  -  
  620 D1:D8E6 -  -  -  -  decompress_frame_up_18:
  621 D1:D8E6 00 -  -  -  	.db 0
  622 D1:D8E7 -  -  -  -  
  623 D1:D8E7 -  -  -  -  decompress_frame_up_19:
  624 D1:D8E7 00 -  -  -  	.db 0
  625 D1:D8E8 -  -  -  -  
  626 D1:D8E8 -  -  -  -  decompress_frame_up_20:
  627 D1:D8E8 00 -  -  -  	.db 0
  628 D1:D8E9 -  -  -  -  
  629 D1:D8E9 -  -  -  -  decompress_frame_up_21:
  630 D1:D8E9 00 -  -  -  	.db 0
  631 D1:D8EA -  -  -  -  
  632 D1:D8EA -  -  -  -  decompress_frame_up_22:
  633 D1:D8EA 00 -  -  -  	.db 0
  634 D1:D8EB -  -  -  -  
  635 D1:D8EB -  -  -  -  decompress_frame_up_23:
  636 D1:D8EB 00 -  -  -  	.db 0
  637 D1:D8EC -  -  -  -  
  638 D1:D8EC -  -  -  -  decompress_frame_up_24:
  639 D1:D8EC 00 -  -  -  	.db 0
  640 D1:D8ED -  -  -  -  
  641 D1:D8ED -  -  -  -  decompress_frame_up_25:
  642 D1:D8ED 00 -  -  -  	.db 0
  643 D1:D8EE -  -  -  -  
  644 D1:D8EE -  -  -  -  decompress_frame_up_26:
  645 D1:D8EE 00 -  -  -  	.db 0
  646 D1:D8EF -  -  -  -  
  647 D1:D8EF -  -  -  -  decompress_frame_up_27:
  648 D1:D8EF 00 -  -  -  	.db 0
  649 D1:D8F0 -  -  -  -  
  650 D1:D8F0 -  -  -  -  decompress_frame_up_28:
  651 D1:D8F0 00 -  -  -  	.db 0
  652 D1:D8F1 -  -  -  -  
  653 D1:D8F1 -  -  -  -  decompress_frame_up_29:
  654 D1:D8F1 00 -  -  -  	.db 0
  655 D1:D8F2 -  -  -  -  
  656 D1:D8F2 -  -  -  -  decompress_frame_up_30:
  657 D1:D8F2 00 -  -  -  	.db 0
  658 D1:D8F3 -  -  -  -  
  659 D1:D8F3 -  -  -  -  decompress_frame_up_31:
  660 D1:D8F3 00 -  -  -  	.db 0
  661 D1:D8F4 -  -  -  -  
  662 D1:D8F4 -  -  -  -  decompress_frame_up_32:
  663 D1:D8F4 00 -  -  -  	.db 0
  664 D1:D8F5 -  -  -  -  
  665 D1:D8F5 -  -  -  -  decompress_frame_up_33:
  666 D1:D8F5 00 -  -  -  	.db 0
  667 D1:D8F6 -  -  -  -  
  668 D1:D8F6 -  -  -  -  decompress_frame_up_34:
  669 D1:D8F6 00 -  -  -  	.db 0
  670 D1:D8F7 -  -  -  -  
  671 D1:D8F7 -  -  -  -  decompress_frame_up_35:
  672 D1:D8F7 00 -  -  -  	.db 0
  673 D1:D8F8 -  -  -  -  
  674 D1:D8F8 -  -  -  -  decompress_frame_up_36:
  675 D1:D8F8 00 -  -  -  	.db 0
  676 D1:D8F9 -  -  -  -  
  677 D1:D8F9 -  -  -  -  decompress_frame_up_37:
  678 D1:D8F9 00 -  -  -  	.db 0
  679 D1:D8FA -  -  -  -  
  680 D1:D8FA -  -  -  -  decompress_frame_up_38:
  681 D1:D8FA 00 -  -  -  	.db 0
  682 D1:D8FB -  -  -  -  
  683 D1:D8FB -  -  -  -  decompress_frame_up_39:
  684 D1:D8FB 00 -  -  -  	.db 0
  685 D1:D8FC -  -  -  -  
  686 D1:D8FC -  -  -  -  decompress_frame_up_40:
  687 D1:D8FC 00 -  -  -  	.db 0
  688 D1:D8FD -  -  -  -  
  689 D1:D8FD -  -  -  -  decompress_frame_up_41:
  690 D1:D8FD 00 -  -  -  	.db 0
  691 D1:D8FE -  -  -  -  
  692 D1:D8FE -  -  -  -  decompress_frame_up_42:
  693 D1:D8FE 00 -  -  -  	.db 0
  694 D1:D8FF -  -  -  -  
  695 D1:D8FF -  -  -  -  decompress_frame_up_43:
  696 D1:D8FF 00 -  -  -  	.db 0
  697 D1:D900 -  -  -  -  
  698 D1:D900 -  -  -  -  decompress_frame_up_44:
  699 D1:D900 00 -  -  -  	.db 0
  700 D1:D901 -  -  -  -  
  701 D1:D901 -  -  -  -  decompress_frame_up_45:
  702 D1:D901 00 -  -  -  	.db 0
  703 D1:D902 -  -  -  -  
  704 D1:D902 -  -  -  -  decompress_frame_up_46:
  705 D1:D902 00 -  -  -  	.db 0
  706 D1:D903 -  -  -  -  
  707 D1:D903 -  -  -  -  decompress_frame_up_47:
  708 D1:D903 00 -  -  -  	.db 0
  709 D1:D904 -  -  -  -  
  710 D1:D904 -  -  -  -  decompress_frame_up_48:
  711 D1:D904 00 -  -  -  	.db 0
  712 D1:D905 -  -  -  -  
  713 D1:D905 -  -  -  -  decompress_frame_up_49:
  714 D1:D905 00 -  -  -  	.db 0
  715 D1:D906 -  -  -  -  
  716 D1:D906 -  -  -  -  decompress_frame_up_50:
  717 D1:D906 00 -  -  -  	.db 0
  718 D1:D907 -  -  -  -  
  719 D1:D907 -  -  -  -  decompress_frame_up_51:
  720 D1:D907 00 -  -  -  	.db 0
  721 D1:D908 -  -  -  -  
  722 D1:D908 -  -  -  -  decompress_frame_up_52:
  723 D1:D908 00 -  -  -  	.db 0
  724 D1:D909 -  -  -  -  
  725 D1:D909 -  -  -  -  decompress_frame_up_53:
  726 D1:D909 00 -  -  -  	.db 0
  727 D1:D90A -  -  -  -  
  728 D1:D90A -  -  -  -  decompress_frame_up_54:
  729 D1:D90A 00 -  -  -  	.db 0
  730 D1:D90B -  -  -  -  
  731 D1:D90B -  -  -  -  decompress_frame_up_55:
  732 D1:D90B 00 -  -  -  	.db 0
  733 D1:D90C -  -  -  -  
  734 D1:D90C -  -  -  -  decompress_frame_up_56:
  735 D1:D90C 00 -  -  -  	.db 0
  736 D1:D90D -  -  -  -  
  737 D1:D90D -  -  -  -  decompress_frame_up_57:
  738 D1:D90D 00 -  -  -  	.db 0
  739 D1:D90E -  -  -  -  
  740 D1:D90E -  -  -  -  decompress_frame_up_58:
  741 D1:D90E 00 -  -  -  	.db 0
  742 D1:D90F -  -  -  -  
  743 D1:D90F -  -  -  -  decompress_frame_up_59:
  744 D1:D90F 00 -  -  -  	.db 0
  745 D1:D910 -  -  -  -  
  746 D1:D910 -  -  -  -  decompress_frame_up_60:
  747 D1:D910 00 -  -  -  	.db 0
  748 D1:D911 -  -  -  -  
  749 D1:D911 -  -  -  -  decompress_frame_up_61:
  750 D1:D911 00 -  -  -  	.db 0
  751 D1:D912 -  -  -  -  
  752 D1:D912 -  -  -  -  decompress_frame_up_62:
  753 D1:D912 00 -  -  -  	.db 0
  754 D1:D913 -  -  -  -  
  755 D1:D913 -  -  -  -  decompress_frame_up_63:
  756 D1:D913 00 -  -  -  	.db 0
  757 D1:D914 -  -  -  -  
  758 D1:D914 -  -  -  -  decompress_frame_up_64:
  759 D1:D914 00 -  -  -  	.db 0
  760 D1:D915 -  -  -  -  
  761 D1:D915 -  -  -  -  decompress_frame_up_65:
  762 D1:D915 00 -  -  -  	.db 0
  763 D1:D916 -  -  -  -  
  764 D1:D916 -  -  -  -  decompress_frame_up_66:
  765 D1:D916 00 -  -  -  	.db 0
  766 D1:D917 -  -  -  -  
  767 D1:D917 -  -  -  -  decompress_frame_up_67:
  768 D1:D917 00 -  -  -  	.db 0
  769 D1:D918 -  -  -  -  
  770 D1:D918 -  -  -  -  decompress_frame_up_68:
  771 D1:D918 00 -  -  -  	.db 0
  772 D1:D919 -  -  -  -  
  773 D1:D919 -  -  -  -  decompress_frame_up_69:
  774 D1:D919 00 -  -  -  	.db 0
  775 D1:D91A -  -  -  -  
  776 D1:D91A -  -  -  -  decompress_frame_up_70:
  777 D1:D91A 00 -  -  -  	.db 0
  778 D1:D91B -  -  -  -  
  779 D1:D91B -  -  -  -  decompress_frame_up_71:
  780 D1:D91B 00 -  -  -  	.db 0
  781 D1:D91C -  -  -  -  
  782 D1:D91C -  -  -  -  decompress_frame_up_72:
  783 D1:D91C 00 -  -  -  	.db 0
  784 D1:D91D -  -  -  -  
  785 D1:D91D -  -  -  -  decompress_frame_up_73:
  786 D1:D91D 00 -  -  -  	.db 0
  787 D1:D91E -  -  -  -  
  788 D1:D91E -  -  -  -  decompress_frame_up_74:
  789 D1:D91E 00 -  -  -  	.db 0
  790 D1:D91F -  -  -  -  
  791 D1:D91F -  -  -  -  decompress_frame_up_75:
  792 D1:D91F 00 -  -  -  	.db 0
  793 D1:D920 -  -  -  -  
  794 D1:D920 -  -  -  -  decompress_frame_up_76:
  795 D1:D920 00 -  -  -  	.db 0
  796 D1:D921 -  -  -  -  
  797 D1:D921 -  -  -  -  decompress_frame_up_77:
  798 D1:D921 00 -  -  -  	.db 0
  799 D1:D922 -  -  -  -  
  800 D1:D922 -  -  -  -  decompress_frame_up_78:
  801 D1:D922 00 -  -  -  	.db 0
  802 D1:D923 -  -  -  -  
  803 D1:D923 -  -  -  -  decompress_frame_up_79:
  804 D1:D923 00 -  -  -  	.db 0
  805 D1:D924 -  -  -  -  
  806 D1:D924 -  -  -  -  decompress_frame_up_80:
  807 D1:D924 00 -  -  -  	.db 0
  808 D1:D925 -  -  -  -  
  809 D1:D925 -  -  -  -  decompress_frame_up_81:
  810 D1:D925 00 -  -  -  	.db 0
  811 D1:D926 -  -  -  -  
  812 D1:D926 -  -  -  -  decompress_frame_up_82:
  813 D1:D926 00 -  -  -  	.db 0
  814 D1:D927 -  -  -  -  
  815 D1:D927 -  -  -  -  decompress_frame_up_83:
  816 D1:D927 00 -  -  -  	.db 0
  817 D1:D928 -  -  -  -  
  818 D1:D928 -  -  -  -  decompress_frame_up_84:
  819 D1:D928 00 -  -  -  	.db 0
  820 D1:D929 -  -  -  -  
  821 D1:D929 -  -  -  -  decompress_frame_up_85:
  822 D1:D929 00 -  -  -  	.db 0
  823 D1:D92A -  -  -  -  
  824 D1:D92A -  -  -  -  decompress_frame_up_86:
  825 D1:D92A 00 -  -  -  	.db 0
  826 D1:D92B -  -  -  -  
  827 D1:D92B -  -  -  -  decompress_frame_up_87:
  828 D1:D92B 00 -  -  -  	.db 0
  829 D1:D92C -  -  -  -  
  830 D1:D92C -  -  -  -  decompress_frame_up_88:
  831 D1:D92C 00 -  -  -  	.db 0
  832 D1:D92D -  -  -  -  
  833 D1:D92D -  -  -  -  decompress_frame_up_89:
  834 D1:D92D 00 -  -  -  	.db 0
  835 D1:D92E -  -  -  -  
  836 D1:D92E -  -  -  -  
  837 D1:D92E -  -  -  -  
  838 D1:D92E -  -  -  -  decompress_frame_down_0:
  839 D1:D92E 00 -  -  -  	.db 0
  840 D1:D92F -  -  -  -  
  841 D1:D92F -  -  -  -  decompress_frame_down_1:
  842 D1:D92F 00 -  -  -  	.db 0
  843 D1:D930 -  -  -  -  
  844 D1:D930 -  -  -  -  decompress_frame_down_2:
  845 D1:D930 07 -  -  -  	.db 7
  846 D1:D931 09 E1 D1 AA 
              5A D4 -  -  	.dl BigGrassBase, BigGrassBase_Fast
  847 D1:D937 80 -  -  -  	.db %10000000
  848 D1:D938 A2 E1 D1 12 
              5C D4 -  -  	.dl BigGrassTop, BigGrassTop_Fast
  849 D1:D93E 80 -  -  -  	.db %10000000
  850 D1:D93F 09 E1 D1 07 
              5D D4 -  -  	.dl BigGrassBase, BigGrassBase_Slow_O
  851 D1:D945 40 -  -  -  	.db %01000000
  852 D1:D946 09 E1 D1 BE 
              5E D4 -  -  	.dl BigGrassBase, BigGrassBase_Fast_F
  853 D1:D94C A0 -  -  -  	.db %10100000
  854 D1:D94D A2 E1 D1 26 
              60 D4 -  -  	.dl BigGrassTop, BigGrassTop_Fast_F
  855 D1:D953 A0 -  -  -  	.db %10100000
  856 D1:D954 A2 E1 D1 1B 
              61 D4 -  -  	.dl BigGrassTop, BigGrassTop_Slow_O
  857 D1:D95A 40 -  -  -  	.db %01000000
  858 D1:D95B 1D E2 D1 05 
              63 D4 -  -  	.dl DualLeaf4, DualLeaf4_Slow_F
  859 D1:D961 20 -  -  -  	.db %00100000
  860 D1:D962 -  -  -  -  
  861 D1:D962 -  -  -  -  decompress_frame_down_3:
  862 D1:D962 02 -  -  -  	.db 2
  863 D1:D963 40 ED D1 3B 
              81 D4 -  -  	.dl Lantern_3, Lantern_3_Slow
  864 D1:D969 00 -  -  -  	.db %00000000
  865 D1:D96A 40 ED D1 F9 
              81 D4 -  -  	.dl Lantern_3, Lantern_3_Slow_O_F
  866 D1:D970 60 -  -  -  	.db %01100000
  867 D1:D971 -  -  -  -  
  868 D1:D971 -  -  -  -  decompress_frame_down_4:
  869 D1:D971 1F -  -  -  	.db 31
  870 D1:D972 82 E4 D1 13 
              69 D4 -  -  	.dl AscentBanner_6, AscentBanner_6_Slow_O
  871 D1:D978 40 -  -  -  	.db %01000000
  872 D1:D979 BD E4 D1 C4 
              69 D4 -  -  	.dl AscentBanner_9, AscentBanner_9_Fast
  873 D1:D97F 80 -  -  -  	.db %10000000
  874 D1:D980 D6 E4 D1 0E 
              6A D4 -  -  	.dl AscentBanner_10, AscentBanner_10_Fast
  875 D1:D986 80 -  -  -  	.db %10000000
  876 D1:D987 00 E5 D1 70 
              6A D4 -  -  	.dl AscentBanner_1, AscentBanner_1_Fast
  877 D1:D98D 80 -  -  -  	.db %10000000
  878 D1:D98E 35 E5 D1 EA 
              6A D4 -  -  	.dl AscentBanner_2, AscentBanner_2_Fast
  879 D1:D994 80 -  -  -  	.db %10000000
  880 D1:D995 6A E5 D1 64 
              6B D4 -  -  	.dl AscentBanner_3, AscentBanner_3_Fast
  881 D1:D99B 80 -  -  -  	.db %10000000
  882 D1:D99C B7 E5 D1 0E 
              6C D4 -  -  	.dl AscentBanner_0, AscentBanner_0_Fast
  883 D1:D9A2 80 -  -  -  	.db %10000000
  884 D1:D9A3 CB E5 D1 68 
              6C D4 -  -  	.dl AscentBanner_4, AscentBanner_4_Fast
  885 D1:D9A9 80 -  -  -  	.db %10000000
  886 D1:D9AA 00 E6 D1 E2 
              6C D4 -  -  	.dl AscentBanner_5, AscentBanner_5_Fast
  887 D1:D9B0 80 -  -  -  	.db %10000000
  888 D1:D9B1 D6 E4 D1 5C 
              6D D4 -  -  	.dl AscentBanner_10, AscentBanner_10_Fast_F
  889 D1:D9B7 A0 -  -  -  	.db %10100000
  890 D1:D9B8 BD E4 D1 BE 
              6D D4 -  -  	.dl AscentBanner_9, AscentBanner_9_Fast_F
  891 D1:D9BE A0 -  -  -  	.db %10100000
  892 D1:D9BF 82 E4 D1 07 
              6E D4 -  -  	.dl AscentBanner_6, AscentBanner_6_Slow_F
  893 D1:D9C5 20 -  -  -  	.db %00100000
  894 D1:D9C6 35 E6 D1 B8 
              6E D4 -  -  	.dl AscentBanner_7, AscentBanner_7_Fast
  895 D1:D9CC 80 -  -  -  	.db %10000000
  896 D1:D9CD 43 E6 D1 FF 
              6E D4 -  -  	.dl AscentBanner_8, AscentBanner_8_Slow_O
  897 D1:D9D3 40 -  -  -  	.db %01000000
  898 D1:D9D4 43 E6 D1 6D 
              6F D4 -  -  	.dl AscentBanner_8, AscentBanner_8_Slow
  899 D1:D9DA 00 -  -  -  	.db %00000000
  900 D1:D9DB 35 E6 D1 D5 
              6F D4 -  -  	.dl AscentBanner_7, AscentBanner_7_Slow_O
  901 D1:D9E1 40 -  -  -  	.db %01000000
  902 D1:D9E2 6B E9 D1 54 
              7A D4 -  -  	.dl Lantern_0, Lantern_0_Fast
  903 D1:D9E8 80 -  -  -  	.db %10000000
  904 D1:D9E9 B7 E9 D1 FC 
              7A D4 -  -  	.dl Lantern_1, Lantern_1_Fast
  905 D1:D9EF 80 -  -  -  	.db %10000000
  906 D1:D9F0 03 EA D1 A4 
              7B D4 -  -  	.dl Lantern_2, Lantern_2_Fast
  907 D1:D9F6 80 -  -  -  	.db %10000000
  908 D1:D9F7 6B E9 D1 4C 
              7C D4 -  -  	.dl Lantern_0, Lantern_0_Fast_F
  909 D1:D9FD A0 -  -  -  	.db %10100000
  910 D1:D9FE B7 E9 D1 F4 
              7C D4 -  -  	.dl Lantern_1, Lantern_1_Fast_F
  911 D1:DA04 A0 -  -  -  	.db %10100000
  912 D1:DA05 03 EA D1 9C 
              7D D4 -  -  	.dl Lantern_2, Lantern_2_Fast_F
  913 D1:DA0B A0 -  -  -  	.db %10100000
  914 D1:DA0C 4F EA D1 43 
              7E D4 -  -  	.dl Lantern_6, Lantern_6_Slow
  915 D1:DA12 00 -  -  -  	.db %00000000
  916 D1:DA13 4F EA D1 01 
              7F D4 -  -  	.dl Lantern_6, Lantern_6_Slow_O_F
  917 D1:DA19 60 -  -  -  	.db %01100000
  918 D1:DA1A 84 EA D1 BF 
              7F D4 -  -  	.dl Lantern_5, Lantern_5_Slow
  919 D1:DA20 00 -  -  -  	.db %00000000
  920 D1:DA21 84 EA D1 7D 
              80 D4 -  -  	.dl Lantern_5, Lantern_5_Slow_O_F
  921 D1:DA27 60 -  -  -  	.db %01100000
  922 D1:DA28 0D E7 D1 7F 
              37 D4 -  -  	.dl Branches_8, Branches_8_Slow_O_F
  923 D1:DA2E 60 -  -  -  	.db %01100000
  924 D1:DA2F AF F4 D1 8F 
              57 D4 -  -  	.dl TongueRing1, TongueRing1_Slow
  925 D1:DA35 00 -  -  -  	.db %00000000
  926 D1:DA36 CE F4 D1 13 
              58 D4 -  -  	.dl TongueRing2, TongueRing2_Slow
  927 D1:DA3C 00 -  -  -  	.db %00000000
  928 D1:DA3D AF F4 D1 97 
              58 D4 -  -  	.dl TongueRing1, TongueRing1_Slow_F
  929 D1:DA43 20 -  -  -  	.db %00100000
  930 D1:DA44 CE F4 D1 1B 
              59 D4 -  -  	.dl TongueRing2, TongueRing2_Slow_F
  931 D1:DA4A 20 -  -  -  	.db %00100000
  932 D1:DA4B -  -  -  -  
  933 D1:DA4B -  -  -  -  decompress_frame_down_5:
  934 D1:DA4B 00 -  -  -  	.db 0
  935 D1:DA4C -  -  -  -  
  936 D1:DA4C -  -  -  -  decompress_frame_down_6:
  937 D1:DA4C 01 -  -  -  	.db 1
  938 D1:DA4D D8 EB D1 E3 
              31 D4 -  -  	.dl Vine2, Vine2_Slow
  939 D1:DA53 00 -  -  -  	.db %00000000
  940 D1:DA54 -  -  -  -  
  941 D1:DA54 -  -  -  -  decompress_frame_down_7:
  942 D1:DA54 00 -  -  -  	.db 0
  943 D1:DA55 -  -  -  -  
  944 D1:DA55 -  -  -  -  decompress_frame_down_8:
  945 D1:DA55 00 -  -  -  	.db 0
  946 D1:DA56 -  -  -  -  
  947 D1:DA56 -  -  -  -  decompress_frame_down_9:
  948 D1:DA56 00 -  -  -  	.db 0
  949 D1:DA57 -  -  -  -  
  950 D1:DA57 -  -  -  -  decompress_frame_down_10:
  951 D1:DA57 0B -  -  -  	.db 11
  952 D1:DA58 B9 EA D1 4C 
              5C D4 -  -  	.dl Branches_4, Branches_4_Fast
  953 D1:DA5E 80 -  -  -  	.db %10000000
  954 D1:DA5F 1B F3 D1 F5 
              85 D4 -  -  	.dl Branches_1, Branches_1_Slow_O
  955 D1:DA65 40 -  -  -  	.db %01000000
  956 D1:DA66 E0 EC D1 BB 
              86 D4 -  -  	.dl Branches_2, Branches_2_Slow_O
  957 D1:DA6C 40 -  -  -  	.db %01000000
  958 D1:DA6D B9 EA D1 9B 
              87 D4 -  -  	.dl Branches_4, Branches_4_Slow_O
  959 D1:DA73 40 -  -  -  	.db %01000000
  960 D1:DA74 A4 E6 D1 67 
              88 D4 -  -  	.dl Branches_7, Branches_7_Slow_O
  961 D1:DA7A 40 -  -  -  	.db %01000000
  962 D1:DA7B CE F3 D1 B4 
              54 D4 -  -  	.dl Platforms_0, Platforms_0_Fast
  963 D1:DA81 80 -  -  -  	.db %10000000
  964 D1:DA82 00 F4 D1 2A 
              55 D4 -  -  	.dl Platforms_1, Platforms_1_Fast
  965 D1:DA88 80 -  -  -  	.db %10000000
  966 D1:DA89 CE F3 D1 A0 
              55 D4 -  -  	.dl Platforms_0, Platforms_0_Fast_F
  967 D1:DA8F A0 -  -  -  	.db %10100000
  968 D1:DA90 32 F4 D1 17 
              56 D4 -  -  	.dl Platforms_2, Platforms_2_Slow_O_F
  969 D1:DA96 60 -  -  -  	.db %01100000
  970 D1:DA97 32 F4 D1 93 
              56 D4 -  -  	.dl Platforms_2, Platforms_2_Slow_O
  971 D1:DA9D 40 -  -  -  	.db %01000000
  972 D1:DA9E 65 F4 D1 0E 
              57 D4 -  -  	.dl Spikes_0, Spikes_0_Fast
  973 D1:DAA4 80 -  -  -  	.db %10000000
  974 D1:DAA5 -  -  -  -  
  975 D1:DAA5 -  -  -  -  decompress_frame_down_11:
  976 D1:DAA5 02 -  -  -  	.db 2
  977 D1:DAA6 3E E7 D1 98 
              72 D4 -  -  	.dl Branches_12, Branches_12_Fast
  978 D1:DAAC 80 -  -  -  	.db %10000000
  979 D1:DAAD 78 E7 D1 7C 
              74 D4 -  -  	.dl LeavesDark, LeavesDark_Fast_F
  980 D1:DAB3 A0 -  -  -  	.db %10100000
  981 D1:DAB4 -  -  -  -  
  982 D1:DAB4 -  -  -  -  decompress_frame_down_12:
  983 D1:DAB4 09 -  -  -  	.db 9
  984 D1:DAB5 7B EB D1 41 
              2C D4 -  -  	.dl Vine4, Vine4_Slow
  985 D1:DABB 00 -  -  -  	.db %00000000
  986 D1:DABC FC EB D1 83 
              32 D4 -  -  	.dl VineVertical, VineVertical_Slow_O
  987 D1:DAC2 40 -  -  -  	.db %01000000
  988 D1:DAC3 FC EB D1 2F 
              33 D4 -  -  	.dl VineVertical, VineVertical_Slow
  989 D1:DAC9 00 -  -  -  	.db %00000000
  990 D1:DACA 22 EC D1 DC 
              33 D4 -  -  	.dl Branches_5, Branches_5_Fast
  991 D1:DAD0 80 -  -  -  	.db %10000000
  992 D1:DAD1 E0 EC D1 24 
              35 D4 -  -  	.dl Branches_2, Branches_2_Fast
  993 D1:DAD7 80 -  -  -  	.db %10000000
  994 D1:DAD8 1B F3 D1 C4 
              4F D4 -  -  	.dl Branches_1, Branches_1_Fast
  995 D1:DADE 80 -  -  -  	.db %10000000
  996 D1:DADF D8 EB D1 C5 
              52 D4 -  -  	.dl Vine2, Vine2_Slow_O
  997 D1:DAE5 40 -  -  -  	.db %01000000
  998 D1:DAE6 D8 EB D1 65 
              53 D4 -  -  	.dl Vine2, Vine2_Slow_F
  999 D1:DAEC 20 -  -  -  	.db %00100000
 1000 D1:DAED FC EB D1 05 
              54 D4 -  -  	.dl VineVertical, VineVertical_Slow_F
 1001 D1:DAF3 20 -  -  -  	.db %00100000
 1002 D1:DAF4 -  -  -  -  
 1003 D1:DAF4 -  -  -  -  decompress_frame_down_13:
 1004 D1:DAF4 00 -  -  -  	.db 0
 1005 D1:DAF5 -  -  -  -  
 1006 D1:DAF5 -  -  -  -  decompress_frame_down_14:
 1007 D1:DAF5 09 -  -  -  	.db 9
 1008 D1:DAF6 A4 E6 D1 50 
              71 D4 -  -  	.dl Branches_7, Branches_7_Fast
 1009 D1:DAFC 80 -  -  -  	.db %10000000
 1010 D1:DAFD 27 E3 D1 49 
              79 D4 -  -  	.dl Branches_16, Branches_16_Slow_O_F
 1011 D1:DB03 60 -  -  -  	.db %01100000
 1012 D1:DB04 B9 EA D1 68 
              83 D4 -  -  	.dl Branches_4, Branches_4_Fast_F
 1013 D1:DB0A A0 -  -  -  	.db %10100000
 1014 D1:DB0B A4 E6 D1 06 
              84 D4 -  -  	.dl Branches_7, Branches_7_Fast_F
 1015 D1:DB11 A0 -  -  -  	.db %10100000
 1016 D1:DB12 3E E7 D1 80 
              84 D4 -  -  	.dl Branches_12, Branches_12_Fast_F
 1017 D1:DB18 A0 -  -  -  	.db %10100000
 1018 D1:DB19 D7 E2 D1 07 
              38 D4 -  -  	.dl Branches_9, Branches_9_Slow_O
 1019 D1:DB1F 40 -  -  -  	.db %01000000
 1020 D1:DB20 B7 EB D1 5D 
              50 D4 -  -  	.dl Vine7, Vine7_Slow
 1021 D1:DB26 00 -  -  -  	.db %00000000
 1022 D1:DB27 76 F3 D1 AA 
              5A D4 -  -  	.dl Branches_0, Branches_0_Fast_F
 1023 D1:DB2D A0 -  -  -  	.db %10100000
 1024 D1:DB2E D7 E2 D1 CA 
              5B D4 -  -  	.dl Branches_9, Branches_9_Fast_F
 1025 D1:DB34 A0 -  -  -  	.db %10100000
 1026 D1:DB35 -  -  -  -  
 1027 D1:DB35 -  -  -  -  decompress_frame_down_15:
 1028 D1:DB35 00 -  -  -  	.db 0
 1029 D1:DB36 -  -  -  -  
 1030 D1:DB36 -  -  -  -  decompress_frame_down_16:
 1031 D1:DB36 40 -  -  -  	.db 64
 1032 D1:DB37 1D E2 D1 55 
              62 D4 -  -  	.dl DualLeaf4, DualLeaf4_Slow
 1033 D1:DB3D 00 -  -  -  	.db %00000000
 1034 D1:DB3E 57 E2 D1 B6 
              63 D4 -  -  	.dl DualLeaf3, DualLeaf3_Fast
 1035 D1:DB44 80 -  -  -  	.db %10000000
 1036 D1:DB45 8D E2 D1 2E 
              64 D4 -  -  	.dl Branches_10, Branches_10_Fast
 1037 D1:DB4B 80 -  -  -  	.db %10000000
 1038 D1:DB4C D7 E2 D1 A6 
              64 D4 -  -  	.dl Branches_9, Branches_9_Fast
 1039 D1:DB52 80 -  -  -  	.db %10000000
 1040 D1:DB53 27 E3 D1 29 
              65 D4 -  -  	.dl Branches_16, Branches_16_Slow
 1041 D1:DB59 00 -  -  -  	.db %00000000
 1042 D1:DB5A 54 E3 D1 96 
              65 D4 -  -  	.dl Branches_13, Branches_13_Fast
 1043 D1:DB60 80 -  -  -  	.db %10000000
 1044 D1:DB61 72 E3 D1 C8 
              65 D4 -  -  	.dl Leaves1, Leaves1_Fast
 1045 D1:DB67 80 -  -  -  	.db %10000000
 1046 D1:DB68 28 E4 D1 E0 
              66 D4 -  -  	.dl DualLeaf1, DualLeaf1_Fast
 1047 D1:DB6E 80 -  -  -  	.db %10000000
 1048 D1:DB6F 53 E4 D1 50 
              67 D4 -  -  	.dl DualLeaf2, DualLeaf2_Fast
 1049 D1:DB75 80 -  -  -  	.db %10000000
 1050 D1:DB76 53 E4 D1 C1 
              67 D4 -  -  	.dl DualLeaf2, DualLeaf2_Slow_O
 1051 D1:DB7C 40 -  -  -  	.db %01000000
 1052 D1:DB7D 28 E4 D1 6B 
              68 D4 -  -  	.dl DualLeaf1, DualLeaf1_Slow_O
 1053 D1:DB83 40 -  -  -  	.db %01000000
 1054 D1:DB84 5A E6 D1 3B 
              70 D4 -  -  	.dl Branches_6, Branches_6_Slow
 1055 D1:DB8A 00 -  -  -  	.db %00000000
 1056 D1:DB8B 8D E2 D1 D8 
              70 D4 -  -  	.dl Branches_10, Branches_10_Fast_F
 1057 D1:DB91 A0 -  -  -  	.db %10100000
 1058 D1:DB92 E9 E6 D1 C9 
              71 D4 -  -  	.dl Branches_15, Branches_15_Slow
 1059 D1:DB98 00 -  -  -  	.db %00000000
 1060 D1:DB99 0D E7 D1 3A 
              72 D4 -  -  	.dl Branches_8, Branches_8_Fast_F
 1061 D1:DB9F A0 -  -  -  	.db %10100000
 1062 D1:DBA0 E9 E6 D1 F3 
              72 D4 -  -  	.dl Branches_15, Branches_15_Slow_O_F
 1063 D1:DBA6 60 -  -  -  	.db %01100000
 1064 D1:DBA7 78 E7 D1 64 
              73 D4 -  -  	.dl LeavesDark, LeavesDark_Fast
 1065 D1:DBAD 80 -  -  -  	.db %10000000
 1066 D1:DBAE F7 E7 D1 94 
              75 D4 -  -  	.dl Leaves2, Leaves2_Fast
 1067 D1:DBB4 80 -  -  -  	.db %10000000
 1068 D1:DBB5 F7 E7 D1 80 
              76 D4 -  -  	.dl Leaves2, Leaves2_Fast_F
 1069 D1:DBBB A0 -  -  -  	.db %10100000
 1070 D1:DBBC 8F E8 D1 6C 
              77 D4 -  -  	.dl LeavesLight, LeavesLight_Fast
 1071 D1:DBC2 80 -  -  -  	.db %10000000
 1072 D1:DBC3 0D E7 D1 84 
              78 D4 -  -  	.dl Branches_8, Branches_8_Fast
 1073 D1:DBC9 80 -  -  -  	.db %10000000
 1074 D1:DBCA 0E E9 D1 E2 
              78 D4 -  -  	.dl Branches_11, Branches_11_Fast_F
 1075 D1:DBD0 A0 -  -  -  	.db %10100000
 1076 D1:DBD1 54 E3 D1 B6 
              79 D4 -  -  	.dl Branches_13, Branches_13_Fast_F
 1077 D1:DBD7 A0 -  -  -  	.db %10100000
 1078 D1:DBD8 4C E9 D1 E7 
              79 D4 -  -  	.dl Branches_14, Branches_14_Slow
 1079 D1:DBDE 00 -  -  -  	.db %00000000
 1080 D1:DBDF 72 E3 D1 DC 
              84 D4 -  -  	.dl Leaves1, Leaves1_Fast_F
 1081 D1:DBE5 A0 -  -  -  	.db %10100000
 1082 D1:DBE6 17 EB D1 DF 
              2A D4 -  -  	.dl Vine5, Vine5_Slow
 1083 D1:DBEC 00 -  -  -  	.db %00000000
 1084 D1:DBED 4F EB D1 9D 
              2B D4 -  -  	.dl Vine6, Vine6_Slow
 1085 D1:DBF3 00 -  -  -  	.db %00000000
 1086 D1:DBF4 7B EB D1 01 
              2D D4 -  -  	.dl Vine4, Vine4_Slow_F
 1087 D1:DBFA 20 -  -  -  	.db %00100000
 1088 D1:DBFB 7B EB D1 C1 
              2D D4 -  -  	.dl Vine4, Vine4_Slow_O_F
 1089 D1:DC01 60 -  -  -  	.db %01100000
 1090 D1:DC02 17 EB D1 81 
              2E D4 -  -  	.dl Vine5, Vine5_Slow_O_F
 1091 D1:DC08 60 -  -  -  	.db %01100000
 1092 D1:DC09 B7 EB D1 41 
              2F D4 -  -  	.dl Vine7, Vine7_Slow_O
 1093 D1:DC0F 40 -  -  -  	.db %01000000
 1094 D1:DC10 17 EB D1 C1 
              2F D4 -  -  	.dl Vine5, Vine5_Slow_O
 1095 D1:DC16 40 -  -  -  	.db %01000000
 1096 D1:DC17 4F EB D1 7F 
              30 D4 -  -  	.dl Vine6, Vine6_Slow_O
 1097 D1:DC1D 40 -  -  -  	.db %01000000
 1098 D1:DC1E 7B EB D1 25 
              31 D4 -  -  	.dl Vine4, Vine4_Slow_O
 1099 D1:DC24 40 -  -  -  	.db %01000000
 1100 D1:DC25 80 EC D1 7C 
              34 D4 -  -  	.dl Branches_3, Branches_3_Fast
 1101 D1:DC2B 80 -  -  -  	.db %10000000
 1102 D1:DC2C 04 EE D1 B6 
              38 D4 -  -  	.dl Tree_2, Tree_2_Fast
 1103 D1:DC32 80 -  -  -  	.db %10000000
 1104 D1:DC33 6F EE D1 B2 
              39 D4 -  -  	.dl Tree_4, Tree_4_Fast
 1105 D1:DC39 80 -  -  -  	.db %10000000
 1106 D1:DC3A DC EE D1 B4 
              3A D4 -  -  	.dl Tree_7, Tree_7_Fast
 1107 D1:DC40 80 -  -  -  	.db %10000000
 1108 D1:DC41 49 EF D1 B6 
              3B D4 -  -  	.dl Tree_9, Tree_9_Fast
 1109 D1:DC47 80 -  -  -  	.db %10000000
 1110 D1:DC48 B6 EF D1 B8 
              3C D4 -  -  	.dl Tree_6, Tree_6_Fast_F
 1111 D1:DC4E A0 -  -  -  	.db %10100000
 1112 D1:DC4F 23 F0 D1 BA 
              3D D4 -  -  	.dl Tree_3, Tree_3_Fast_F
 1113 D1:DC55 A0 -  -  -  	.db %10100000
 1114 D1:DC56 90 F0 D1 BC 
              3E D4 -  -  	.dl Tree_0, Tree_0_Fast_F
 1115 D1:DC5C A0 -  -  -  	.db %10100000
 1116 D1:DC5D 23 F0 D1 B8 
              3F D4 -  -  	.dl Tree_3, Tree_3_Fast
 1117 D1:DC63 80 -  -  -  	.db %10000000
 1118 D1:DC64 FB F0 D1 BA 
              40 D4 -  -  	.dl Tree_8, Tree_8_Fast
 1119 D1:DC6A 80 -  -  -  	.db %10000000
 1120 D1:DC6B 49 EF D1 BC 
              41 D4 -  -  	.dl Tree_9, Tree_9_Fast_F
 1121 D1:DC71 A0 -  -  -  	.db %10100000
 1122 D1:DC72 FB F0 D1 BE 
              42 D4 -  -  	.dl Tree_8, Tree_8_Fast_F
 1123 D1:DC78 A0 -  -  -  	.db %10100000
 1124 D1:DC79 6F EE D1 C0 
              43 D4 -  -  	.dl Tree_4, Tree_4_Fast_F
 1125 D1:DC7F A0 -  -  -  	.db %10100000
 1126 D1:DC80 90 F0 D1 C2 
              44 D4 -  -  	.dl Tree_0, Tree_0_Fast
 1127 D1:DC86 80 -  -  -  	.db %10000000
 1128 D1:DC87 B6 EF D1 BE 
              45 D4 -  -  	.dl Tree_6, Tree_6_Fast
 1129 D1:DC8D 80 -  -  -  	.db %10000000
 1130 D1:DC8E 68 F1 D1 C0 
              46 D4 -  -  	.dl Tree_10, Tree_10_Fast
 1131 D1:DC94 80 -  -  -  	.db %10000000
 1132 D1:DC95 DC EE D1 C2 
              47 D4 -  -  	.dl Tree_7, Tree_7_Fast_F
 1133 D1:DC9B A0 -  -  -  	.db %10100000
 1134 D1:DC9C D5 F1 D1 C4 
              48 D4 -  -  	.dl Tree_1, Tree_1_Fast_F
 1135 D1:DCA2 A0 -  -  -  	.db %10100000
 1136 D1:DCA3 D5 F1 D1 C2 
              49 D4 -  -  	.dl Tree_1, Tree_1_Fast
 1137 D1:DCA9 80 -  -  -  	.db %10000000
 1138 D1:DCAA 41 F2 D1 C0 
              4A D4 -  -  	.dl Tree_5, Tree_5_Fast
 1139 D1:DCB0 80 -  -  -  	.db %10000000
 1140 D1:DCB1 AE F2 D1 C2 
              4B D4 -  -  	.dl Tree_11, Tree_11_Fast
 1141 D1:DCB7 80 -  -  -  	.db %10000000
 1142 D1:DCB8 41 F2 D1 C4 
              4C D4 -  -  	.dl Tree_5, Tree_5_Fast_F
 1143 D1:DCBE A0 -  -  -  	.db %10100000
 1144 D1:DCBF 04 EE D1 C6 
              4D D4 -  -  	.dl Tree_2, Tree_2_Fast_F
 1145 D1:DCC5 A0 -  -  -  	.db %10100000
 1146 D1:DCC6 AE F2 D1 C2 
              4E D4 -  -  	.dl Tree_11, Tree_11_Fast_F
 1147 D1:DCCC A0 -  -  -  	.db %10100000
 1148 D1:DCCD 1B F3 D1 E2 
              50 D4 -  -  	.dl Branches_1, Branches_1_Fast_F
 1149 D1:DCD3 A0 -  -  -  	.db %10100000
 1150 D1:DCD4 E0 EC D1 7A 
              51 D4 -  -  	.dl Branches_2, Branches_2_Fast_F
 1151 D1:DCDA A0 -  -  -  	.db %10100000
 1152 D1:DCDB 22 EC D1 24 
              52 D4 -  -  	.dl Branches_5, Branches_5_Fast_F
 1153 D1:DCE1 A0 -  -  -  	.db %10100000
 1154 D1:DCE2 0D E7 D1 41 
              5B D4 -  -  	.dl Branches_8, Branches_8_Slow_O
 1155 D1:DCE8 40 -  -  -  	.db %01000000
 1156 D1:DCE9 76 F3 D1 E4 
              31 D4 -  -  	.dl Branches_0, Branches_0_Fast
 1157 D1:DCEF 80 -  -  -  	.db %10000000
 1158 D1:DCF0 ED F4 D1 9E 
              59 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast
 1159 D1:DCF6 80 -  -  -  	.db %10000000
 1160 D1:DCF7 -  -  -  -  
 1161 D1:DCF7 -  -  -  -  decompress_frame_down_17:
 1162 D1:DCF7 0D -  -  -  	.db 13
 1163 D1:DCF8 75 ED D1 B6 
              82 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast_F
 1164 D1:DCFE A0 -  -  -  	.db %10100000
 1165 D1:DCFF 75 ED D1 CE 
              35 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast
 1166 D1:DD05 80 -  -  -  	.db %10000000
 1167 D1:DD06 BA ED D1 80 
              36 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast
 1168 D1:DD0C 80 -  -  -  	.db %10000000
 1169 D1:DD0D BA ED D1 00 
              37 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast_F
 1170 D1:DD13 A0 -  -  -  	.db %10100000
 1171 D1:DD14 ED F4 D1 24 
              5A D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast_F
 1172 D1:DD1A A0 -  -  -  	.db %10100000
 1173 D1:DD1B 22 F5 D1 C0 
              01 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast
 1174 D1:DD21 80 -  -  -  	.db %10000000
 1175 D1:DD22 22 F5 D1 46 
              02 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast_F
 1176 D1:DD28 A0 -  -  -  	.db %10100000
 1177 D1:DD29 70 F5 D1 CC 
              02 D4 -  -  	.dl Tree_16, Tree_16_Fast
 1178 D1:DD2F 80 -  -  -  	.db %10000000
 1179 D1:DD30 88 F5 D1 21 
              03 D4 -  -  	.dl Tree_17, Tree_17_Slow
 1180 D1:DD36 00 -  -  -  	.db %00000000
 1181 D1:DD37 88 F5 D1 87 
              03 D4 -  -  	.dl Tree_17, Tree_17_Slow_O_F
 1182 D1:DD3D 60 -  -  -  	.db %01100000
 1183 D1:DD3E 99 F5 D1 ED 
              03 D4 -  -  	.dl Tree_18, Tree_18_Slow
 1184 D1:DD44 00 -  -  -  	.db %00000000
 1185 D1:DD45 99 F5 D1 51 
              04 D4 -  -  	.dl Tree_18, Tree_18_Slow_O_F
 1186 D1:DD4B 60 -  -  -  	.db %01100000
 1187 D1:DD4C 70 F5 D1 B6 
              04 D4 -  -  	.dl Tree_16, Tree_16_Fast_F
 1188 D1:DD52 A0 -  -  -  	.db %10100000
 1189 D1:DD53 -  -  -  -  
 1190 D1:DD53 -  -  -  -  decompress_frame_down_18:
 1191 D1:DD53 00 -  -  -  	.db 0
 1192 D1:DD54 -  -  -  -  
 1193 D1:DD54 -  -  -  -  decompress_frame_down_19:
 1194 D1:DD54 00 -  -  -  	.db 0
 1195 D1:DD55 -  -  -  -  
 1196 D1:DD55 -  -  -  -  decompress_frame_down_20:
 1197 D1:DD55 00 -  -  -  	.db 0
 1198 D1:DD56 -  -  -  -  
 1199 D1:DD56 -  -  -  -  decompress_frame_down_21:
 1200 D1:DD56 00 -  -  -  	.db 0
 1201 D1:DD57 -  -  -  -  
 1202 D1:DD57 -  -  -  -  decompress_frame_down_22:
 1203 D1:DD57 00 -  -  -  	.db 0
 1204 D1:DD58 -  -  -  -  
 1205 D1:DD58 -  -  -  -  decompress_frame_down_23:
 1206 D1:DD58 00 -  -  -  	.db 0
 1207 D1:DD59 -  -  -  -  
 1208 D1:DD59 -  -  -  -  decompress_frame_down_24:
 1209 D1:DD59 00 -  -  -  	.db 0
 1210 D1:DD5A -  -  -  -  
 1211 D1:DD5A -  -  -  -  decompress_frame_down_25:
 1212 D1:DD5A 00 -  -  -  	.db 0
 1213 D1:DD5B -  -  -  -  
 1214 D1:DD5B -  -  -  -  decompress_frame_down_26:
 1215 D1:DD5B 00 -  -  -  	.db 0
 1216 D1:DD5C -  -  -  -  
 1217 D1:DD5C -  -  -  -  decompress_frame_down_27:
 1218 D1:DD5C 00 -  -  -  	.db 0
 1219 D1:DD5D -  -  -  -  
 1220 D1:DD5D -  -  -  -  decompress_frame_down_28:
 1221 D1:DD5D 00 -  -  -  	.db 0
 1222 D1:DD5E -  -  -  -  
 1223 D1:DD5E -  -  -  -  decompress_frame_down_29:
 1224 D1:DD5E 00 -  -  -  	.db 0
 1225 D1:DD5F -  -  -  -  
 1226 D1:DD5F -  -  -  -  decompress_frame_down_30:
 1227 D1:DD5F 00 -  -  -  	.db 0
 1228 D1:DD60 -  -  -  -  
 1229 D1:DD60 -  -  -  -  decompress_frame_down_31:
 1230 D1:DD60 00 -  -  -  	.db 0
 1231 D1:DD61 -  -  -  -  
 1232 D1:DD61 -  -  -  -  decompress_frame_down_32:
 1233 D1:DD61 00 -  -  -  	.db 0
 1234 D1:DD62 -  -  -  -  
 1235 D1:DD62 -  -  -  -  decompress_frame_down_33:
 1236 D1:DD62 00 -  -  -  	.db 0
 1237 D1:DD63 -  -  -  -  
 1238 D1:DD63 -  -  -  -  decompress_frame_down_34:
 1239 D1:DD63 00 -  -  -  	.db 0
 1240 D1:DD64 -  -  -  -  
 1241 D1:DD64 -  -  -  -  decompress_frame_down_35:
 1242 D1:DD64 00 -  -  -  	.db 0
 1243 D1:DD65 -  -  -  -  
 1244 D1:DD65 -  -  -  -  decompress_frame_down_36:
 1245 D1:DD65 00 -  -  -  	.db 0
 1246 D1:DD66 -  -  -  -  
 1247 D1:DD66 -  -  -  -  decompress_frame_down_37:
 1248 D1:DD66 00 -  -  -  	.db 0
 1249 D1:DD67 -  -  -  -  
 1250 D1:DD67 -  -  -  -  decompress_frame_down_38:
 1251 D1:DD67 00 -  -  -  	.db 0
 1252 D1:DD68 -  -  -  -  
 1253 D1:DD68 -  -  -  -  decompress_frame_down_39:
 1254 D1:DD68 00 -  -  -  	.db 0
 1255 D1:DD69 -  -  -  -  
 1256 D1:DD69 -  -  -  -  decompress_frame_down_40:
 1257 D1:DD69 00 -  -  -  	.db 0
 1258 D1:DD6A -  -  -  -  
 1259 D1:DD6A -  -  -  -  decompress_frame_down_41:
 1260 D1:DD6A 00 -  -  -  	.db 0
 1261 D1:DD6B -  -  -  -  
 1262 D1:DD6B -  -  -  -  decompress_frame_down_42:
 1263 D1:DD6B 00 -  -  -  	.db 0
 1264 D1:DD6C -  -  -  -  
 1265 D1:DD6C -  -  -  -  decompress_frame_down_43:
 1266 D1:DD6C 00 -  -  -  	.db 0
 1267 D1:DD6D -  -  -  -  
 1268 D1:DD6D -  -  -  -  decompress_frame_down_44:
 1269 D1:DD6D 00 -  -  -  	.db 0
 1270 D1:DD6E -  -  -  -  
 1271 D1:DD6E -  -  -  -  decompress_frame_down_45:
 1272 D1:DD6E 00 -  -  -  	.db 0
 1273 D1:DD6F -  -  -  -  
 1274 D1:DD6F -  -  -  -  decompress_frame_down_46:
 1275 D1:DD6F 00 -  -  -  	.db 0
 1276 D1:DD70 -  -  -  -  
 1277 D1:DD70 -  -  -  -  decompress_frame_down_47:
 1278 D1:DD70 00 -  -  -  	.db 0
 1279 D1:DD71 -  -  -  -  
 1280 D1:DD71 -  -  -  -  decompress_frame_down_48:
 1281 D1:DD71 0A -  -  -  	.db 10
 1282 D1:DD72 AA F5 D1 0C 
              05 D4 -  -  	.dl Clouds_0, Clouds_0_Fast
 1283 D1:DD78 80 -  -  -  	.db %10000000
 1284 D1:DD79 D3 F5 D1 72 
              05 D4 -  -  	.dl Clouds_1, Clouds_1_Fast
 1285 D1:DD7F 80 -  -  -  	.db %10000000
 1286 D1:DD80 FA F5 D1 D6 
              05 D4 -  -  	.dl Clouds_3, Clouds_3_Fast
 1287 D1:DD86 80 -  -  -  	.db %10000000
 1288 D1:DD87 26 F6 D1 42 
              06 D4 -  -  	.dl Clouds_4, Clouds_4_Fast
 1289 D1:DD8D 80 -  -  -  	.db %10000000
 1290 D1:DD8E 3D F6 D1 82 
              06 D4 -  -  	.dl Clouds_2, Clouds_2_Fast
 1291 D1:DD94 80 -  -  -  	.db %10000000
 1292 D1:DD95 AA F5 D1 34 
              07 D4 -  -  	.dl Clouds_0, Clouds_0_Fast_F
 1293 D1:DD9B A0 -  -  -  	.db %10100000
 1294 D1:DD9C D3 F5 D1 9A 
              07 D4 -  -  	.dl Clouds_1, Clouds_1_Fast_F
 1295 D1:DDA2 A0 -  -  -  	.db %10100000
 1296 D1:DDA3 26 F6 D1 FE 
              07 D4 -  -  	.dl Clouds_4, Clouds_4_Fast_F
 1297 D1:DDA9 A0 -  -  -  	.db %10100000
 1298 D1:DDAA FA F5 D1 3E 
              08 D4 -  -  	.dl Clouds_3, Clouds_3_Fast_F
 1299 D1:DDB0 A0 -  -  -  	.db %10100000
 1300 D1:DDB1 3D F6 D1 AA 
              08 D4 -  -  	.dl Clouds_2, Clouds_2_Fast_F
 1301 D1:DDB7 A0 -  -  -  	.db %10100000
 1302 D1:DDB8 -  -  -  -  
 1303 D1:DDB8 -  -  -  -  decompress_frame_down_49:
 1304 D1:DDB8 00 -  -  -  	.db 0
 1305 D1:DDB9 -  -  -  -  
 1306 D1:DDB9 -  -  -  -  decompress_frame_down_50:
 1307 D1:DDB9 00 -  -  -  	.db 0
 1308 D1:DDBA -  -  -  -  
 1309 D1:DDBA -  -  -  -  decompress_frame_down_51:
 1310 D1:DDBA 00 -  -  -  	.db 0
 1311 D1:DDBB -  -  -  -  
 1312 D1:DDBB -  -  -  -  decompress_frame_down_52:
 1313 D1:DDBB 00 -  -  -  	.db 0
 1314 D1:DDBC -  -  -  -  
 1315 D1:DDBC -  -  -  -  decompress_frame_down_53:
 1316 D1:DDBC 00 -  -  -  	.db 0
 1317 D1:DDBD -  -  -  -  
 1318 D1:DDBD -  -  -  -  decompress_frame_down_54:
 1319 D1:DDBD 00 -  -  -  	.db 0
 1320 D1:DDBE -  -  -  -  
 1321 D1:DDBE -  -  -  -  decompress_frame_down_55:
 1322 D1:DDBE 00 -  -  -  	.db 0
 1323 D1:DDBF -  -  -  -  
 1324 D1:DDBF -  -  -  -  decompress_frame_down_56:
 1325 D1:DDBF 00 -  -  -  	.db 0
 1326 D1:DDC0 -  -  -  -  
 1327 D1:DDC0 -  -  -  -  decompress_frame_down_57:
 1328 D1:DDC0 00 -  -  -  	.db 0
 1329 D1:DDC1 -  -  -  -  
 1330 D1:DDC1 -  -  -  -  decompress_frame_down_58:
 1331 D1:DDC1 00 -  -  -  	.db 0
 1332 D1:DDC2 -  -  -  -  
 1333 D1:DDC2 -  -  -  -  decompress_frame_down_59:
 1334 D1:DDC2 00 -  -  -  	.db 0
 1335 D1:DDC3 -  -  -  -  
 1336 D1:DDC3 -  -  -  -  decompress_frame_down_60:
 1337 D1:DDC3 00 -  -  -  	.db 0
 1338 D1:DDC4 -  -  -  -  
 1339 D1:DDC4 -  -  -  -  decompress_frame_down_61:
 1340 D1:DDC4 00 -  -  -  	.db 0
 1341 D1:DDC5 -  -  -  -  
 1342 D1:DDC5 -  -  -  -  decompress_frame_down_62:
 1343 D1:DDC5 00 -  -  -  	.db 0
 1344 D1:DDC6 -  -  -  -  
 1345 D1:DDC6 -  -  -  -  decompress_frame_down_63:
 1346 D1:DDC6 00 -  -  -  	.db 0
 1347 D1:DDC7 -  -  -  -  
 1348 D1:DDC7 -  -  -  -  decompress_frame_down_64:
 1349 D1:DDC7 00 -  -  -  	.db 0
 1350 D1:DDC8 -  -  -  -  
 1351 D1:DDC8 -  -  -  -  decompress_frame_down_65:
 1352 D1:DDC8 00 -  -  -  	.db 0
 1353 D1:DDC9 -  -  -  -  
 1354 D1:DDC9 -  -  -  -  decompress_frame_down_66:
 1355 D1:DDC9 00 -  -  -  	.db 0
 1356 D1:DDCA -  -  -  -  
 1357 D1:DDCA -  -  -  -  decompress_frame_down_67:
 1358 D1:DDCA 00 -  -  -  	.db 0
 1359 D1:DDCB -  -  -  -  
 1360 D1:DDCB -  -  -  -  decompress_frame_down_68:
 1361 D1:DDCB 00 -  -  -  	.db 0
 1362 D1:DDCC -  -  -  -  
 1363 D1:DDCC -  -  -  -  decompress_frame_down_69:
 1364 D1:DDCC 00 -  -  -  	.db 0
 1365 D1:DDCD -  -  -  -  
 1366 D1:DDCD -  -  -  -  decompress_frame_down_70:
 1367 D1:DDCD 00 -  -  -  	.db 0
 1368 D1:DDCE -  -  -  -  
 1369 D1:DDCE -  -  -  -  decompress_frame_down_71:
 1370 D1:DDCE 00 -  -  -  	.db 0
 1371 D1:DDCF -  -  -  -  
 1372 D1:DDCF -  -  -  -  decompress_frame_down_72:
 1373 D1:DDCF 00 -  -  -  	.db 0
 1374 D1:DDD0 -  -  -  -  
 1375 D1:DDD0 -  -  -  -  decompress_frame_down_73:
 1376 D1:DDD0 00 -  -  -  	.db 0
 1377 D1:DDD1 -  -  -  -  
 1378 D1:DDD1 -  -  -  -  decompress_frame_down_74:
 1379 D1:DDD1 00 -  -  -  	.db 0
 1380 D1:DDD2 -  -  -  -  
 1381 D1:DDD2 -  -  -  -  decompress_frame_down_75:
 1382 D1:DDD2 00 -  -  -  	.db 0
 1383 D1:DDD3 -  -  -  -  
 1384 D1:DDD3 -  -  -  -  decompress_frame_down_76:
 1385 D1:DDD3 00 -  -  -  	.db 0
 1386 D1:DDD4 -  -  -  -  
 1387 D1:DDD4 -  -  -  -  decompress_frame_down_77:
 1388 D1:DDD4 00 -  -  -  	.db 0
 1389 D1:DDD5 -  -  -  -  
 1390 D1:DDD5 -  -  -  -  decompress_frame_down_78:
 1391 D1:DDD5 00 -  -  -  	.db 0
 1392 D1:DDD6 -  -  -  -  
 1393 D1:DDD6 -  -  -  -  decompress_frame_down_79:
 1394 D1:DDD6 00 -  -  -  	.db 0
 1395 D1:DDD7 -  -  -  -  
 1396 D1:DDD7 -  -  -  -  decompress_frame_down_80:
 1397 D1:DDD7 00 -  -  -  	.db 0
 1398 D1:DDD8 -  -  -  -  
 1399 D1:DDD8 -  -  -  -  decompress_frame_down_81:
 1400 D1:DDD8 00 -  -  -  	.db 0
 1401 D1:DDD9 -  -  -  -  
 1402 D1:DDD9 -  -  -  -  decompress_frame_down_82:
 1403 D1:DDD9 00 -  -  -  	.db 0
 1404 D1:DDDA -  -  -  -  
 1405 D1:DDDA -  -  -  -  decompress_frame_down_83:
 1406 D1:DDDA 00 -  -  -  	.db 0
 1407 D1:DDDB -  -  -  -  
 1408 D1:DDDB -  -  -  -  decompress_frame_down_84:
 1409 D1:DDDB 00 -  -  -  	.db 0
 1410 D1:DDDC -  -  -  -  
 1411 D1:DDDC -  -  -  -  decompress_frame_down_85:
 1412 D1:DDDC 00 -  -  -  	.db 0
 1413 D1:DDDD -  -  -  -  
 1414 D1:DDDD -  -  -  -  decompress_frame_down_86:
 1415 D1:DDDD 00 -  -  -  	.db 0
 1416 D1:DDDE -  -  -  -  
 1417 D1:DDDE -  -  -  -  decompress_frame_down_87:
 1418 D1:DDDE 00 -  -  -  	.db 0
 1419 D1:DDDF -  -  -  -  
 1420 D1:DDDF -  -  -  -  decompress_frame_down_88:
 1421 D1:DDDF 00 -  -  -  	.db 0
 1422 D1:DDE0 -  -  -  -  
 1423 D1:DDE0 -  -  -  -  decompress_frame_down_89:
 1424 D1:DDE0 1B -  -  -  	.db 27
 1425 D1:DDE1 61 F6 D1 5B 
              09 D4 -  -  	.dl FrogDefault, FrogDefault_Slow
 1426 D1:DDE7 00 -  -  -  	.db %00000000
 1427 D1:DDE8 61 F6 D1 8B 
              0A D4 -  -  	.dl FrogDefault, FrogDefault_Slow_O
 1428 D1:DDEE 40 -  -  -  	.db %01000000
 1429 D1:DDEF 61 F6 D1 BB 
              0B D4 -  -  	.dl FrogDefault, FrogDefault_Slow_F
 1430 D1:DDF5 20 -  -  -  	.db %00100000
 1431 D1:DDF6 61 F6 D1 EB 
              0C D4 -  -  	.dl FrogDefault, FrogDefault_Slow_O_F
 1432 D1:DDFC 60 -  -  -  	.db %01100000
 1433 D1:DDFD 39 F7 D1 1B 
              0E D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow
 1434 D1:DE03 00 -  -  -  	.db %00000000
 1435 D1:DE04 39 F7 D1 3B 
              0F D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_O
 1436 D1:DE0A 40 -  -  -  	.db %01000000
 1437 D1:DE0B 39 F7 D1 61 
              10 D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_F
 1438 D1:DE11 20 -  -  -  	.db %00100000
 1439 D1:DE12 39 F7 D1 87 
              11 D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_O_F
 1440 D1:DE18 60 -  -  -  	.db %01100000
 1441 D1:DE19 D7 F7 D1 A7 
              12 D4 -  -  	.dl FrogCharge, FrogCharge_Slow
 1442 D1:DE1F 00 -  -  -  	.db %00000000
 1443 D1:DE20 D7 F7 D1 C7 
              13 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_O
 1444 D1:DE26 40 -  -  -  	.db %01000000
 1445 D1:DE27 D7 F7 D1 ED 
              14 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_F
 1446 D1:DE2D 20 -  -  -  	.db %00100000
 1447 D1:DE2E D7 F7 D1 13 
              16 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_O_F
 1448 D1:DE34 60 -  -  -  	.db %01100000
 1449 D1:DE35 A6 F8 D1 33 
              17 D4 -  -  	.dl FrogJump, FrogJump_Slow
 1450 D1:DE3B 00 -  -  -  	.db %00000000
 1451 D1:DE3C A6 F8 D1 AB 
              18 D4 -  -  	.dl FrogJump, FrogJump_Slow_O
 1452 D1:DE42 40 -  -  -  	.db %01000000
 1453 D1:DE43 A6 F8 D1 2D 
              1A D4 -  -  	.dl FrogJump, FrogJump_Slow_F
 1454 D1:DE49 20 -  -  -  	.db %00100000
 1455 D1:DE4A A6 F8 D1 A5 
              1B D4 -  -  	.dl FrogJump, FrogJump_Slow_O_F
 1456 D1:DE50 60 -  -  -  	.db %01100000
 1457 D1:DE51 BF F9 D1 27 
              1D D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow
 1458 D1:DE57 00 -  -  -  	.db %00000000
 1459 D1:DE58 BF F9 D1 9F 
              1E D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_O
 1460 D1:DE5E 40 -  -  -  	.db %01000000
 1461 D1:DE5F BF F9 D1 21 
              20 D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_F
 1462 D1:DE65 20 -  -  -  	.db %00100000
 1463 D1:DE66 BF F9 D1 99 
              21 D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_O_F
 1464 D1:DE6C 60 -  -  -  	.db %01100000
 1465 D1:DE6D D8 FA D1 1B 
              23 D4 -  -  	.dl FrogFall, FrogFall_Slow
 1466 D1:DE73 00 -  -  -  	.db %00000000
 1467 D1:DE74 D8 FA D1 8B 
              24 D4 -  -  	.dl FrogFall, FrogFall_Slow_O
 1468 D1:DE7A 40 -  -  -  	.db %01000000
 1469 D1:DE7B D8 FA D1 05 
              26 D4 -  -  	.dl FrogFall, FrogFall_Slow_F
 1470 D1:DE81 20 -  -  -  	.db %00100000
 1471 D1:DE82 D8 FA D1 75 
              27 D4 -  -  	.dl FrogFall, FrogFall_Slow_O_F
 1472 D1:DE88 60 -  -  -  	.db %01100000
 1473 D1:DE89 BE FB D1 EF 
              28 D4 -  -  	.dl FrogTongue, FrogTongue_Slow
 1474 D1:DE8F 00 -  -  -  	.db %00000000
 1475 D1:DE90 BE FB D1 35 
              29 D4 -  -  	.dl FrogTongue, FrogTongue_Slow_O
 1476 D1:DE96 40 -  -  -  	.db %01000000
 1477 D1:DE97 D1 FB D1 7E 
              29 D4 -  -  	.dl Unlucky_0, Unlucky_0_Fast
 1478 D1:DE9D 80 -  -  -  	.db %10000000
Listing for file "ascent.asm"
  622 D1:DE9E -  -  -  -  #include "generated/Palette_Setup.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\generated\Palette_Setup.txt"
    1 D1:DE9E -  -  -  -  setup_palette_1:
    2 D1:DE9E 21 00 02 E3 	ld hl,mpLcdPalette
    3 D1:DEA2 3E C2 -  -  	ld a,%11000010
    4 D1:DEA4 77 -  -  -  	ld (hl),a 
    5 D1:DEA5 23 -  -  -  	inc hl
    6 D1:DEA6 3E 20 -  -  	ld a,%00100000
    7 D1:DEA8 77 -  -  -  	ld (hl),a 
    8 D1:DEA9 23 -  -  -  	inc hl
    9 D1:DEAA 3E 24 -  -  	ld a,%00100100
   10 D1:DEAC 77 -  -  -  	ld (hl),a 
   11 D1:DEAD 23 -  -  -  	inc hl
   12 D1:DEAE 3E 39 -  -  	ld a,%00111001
   13 D1:DEB0 77 -  -  -  	ld (hl),a 
   14 D1:DEB1 23 -  -  -  	inc hl
   15 D1:DEB2 3E 85 -  -  	ld a,%10000101
   16 D1:DEB4 77 -  -  -  	ld (hl),a 
   17 D1:DEB5 23 -  -  -  	inc hl
   18 D1:DEB6 3E 4D -  -  	ld a,%01001101
   19 D1:DEB8 77 -  -  -  	ld (hl),a 
   20 D1:DEB9 23 -  -  -  	inc hl
   21 D1:DEBA 3E E6 -  -  	ld a,%11100110
   22 D1:DEBC 77 -  -  -  	ld (hl),a 
   23 D1:DEBD 23 -  -  -  	inc hl
   24 D1:DEBE 3E E1 -  -  	ld a,%11100001
   25 D1:DEC0 77 -  -  -  	ld (hl),a 
   26 D1:DEC1 23 -  -  -  	inc hl
   27 D1:DEC2 3E 2A -  -  	ld a,%00101010
   28 D1:DEC4 77 -  -  -  	ld (hl),a 
   29 D1:DEC5 23 -  -  -  	inc hl
   30 D1:DEC6 3E 2E -  -  	ld a,%00101110
   31 D1:DEC8 77 -  -  -  	ld (hl),a 
   32 D1:DEC9 23 -  -  -  	inc hl
   33 D1:DECA 3E 65 -  -  	ld a,%01100101
   34 D1:DECC 77 -  -  -  	ld (hl),a 
   35 D1:DECD 23 -  -  -  	inc hl
   36 D1:DECE 3E 95 -  -  	ld a,%10010101
   37 D1:DED0 77 -  -  -  	ld (hl),a 
   38 D1:DED1 23 -  -  -  	inc hl
   39 D1:DED2 3E FE -  -  	ld a,%11111110
   40 D1:DED4 77 -  -  -  	ld (hl),a 
   41 D1:DED5 23 -  -  -  	inc hl
   42 D1:DED6 3E 73 -  -  	ld a,%01110011
   43 D1:DED8 77 -  -  -  	ld (hl),a 
   44 D1:DED9 23 -  -  -  	inc hl
   45 D1:DEDA 3E BC -  -  	ld a,%10111100
   46 D1:DEDC 77 -  -  -  	ld (hl),a 
   47 D1:DEDD 23 -  -  -  	inc hl
   48 D1:DEDE 3E 5B -  -  	ld a,%01011011
   49 D1:DEE0 77 -  -  -  	ld (hl),a 
   50 D1:DEE1 23 -  -  -  	inc hl
   51 D1:DEE2 3E 8E -  -  	ld a,%10001110
   52 D1:DEE4 77 -  -  -  	ld (hl),a 
   53 D1:DEE5 23 -  -  -  	inc hl
   54 D1:DEE6 3E 4F -  -  	ld a,%01001111
   55 D1:DEE8 77 -  -  -  	ld (hl),a 
   56 D1:DEE9 23 -  -  -  	inc hl
   57 D1:DEEA 3E 20 -  -  	ld a,%00100000
   58 D1:DEEC 77 -  -  -  	ld (hl),a 
   59 D1:DEED 23 -  -  -  	inc hl
   60 D1:DEEE 3E 80 -  -  	ld a,%10000000
   61 D1:DEF0 77 -  -  -  	ld (hl),a 
   62 D1:DEF1 23 -  -  -  	inc hl
   63 D1:DEF2 3E 08 -  -  	ld a,%00001000
   64 D1:DEF4 77 -  -  -  	ld (hl),a 
   65 D1:DEF5 23 -  -  -  	inc hl
   66 D1:DEF6 3E 5D -  -  	ld a,%01011101
   67 D1:DEF8 77 -  -  -  	ld (hl),a 
   68 D1:DEF9 23 -  -  -  	inc hl
   69 D1:DEFA 3E DD -  -  	ld a,%11011101
   70 D1:DEFC 77 -  -  -  	ld (hl),a 
   71 D1:DEFD 23 -  -  -  	inc hl
   72 D1:DEFE 3E 75 -  -  	ld a,%01110101
   73 D1:DF00 77 -  -  -  	ld (hl),a 
   74 D1:DF01 23 -  -  -  	inc hl
   75 D1:DF02 3E 59 -  -  	ld a,%01011001
   76 D1:DF04 77 -  -  -  	ld (hl),a 
   77 D1:DF05 23 -  -  -  	inc hl
   78 D1:DF06 3E 65 -  -  	ld a,%01100101
   79 D1:DF08 77 -  -  -  	ld (hl),a 
   80 D1:DF09 23 -  -  -  	inc hl
   81 D1:DF0A 3E 0C -  -  	ld a,%00001100
   82 D1:DF0C 77 -  -  -  	ld (hl),a 
   83 D1:DF0D 23 -  -  -  	inc hl
   84 D1:DF0E 3E 6F -  -  	ld a,%01101111
   85 D1:DF10 77 -  -  -  	ld (hl),a 
   86 D1:DF11 23 -  -  -  	inc hl
   87 D1:DF12 3E A5 -  -  	ld a,%10100101
   88 D1:DF14 77 -  -  -  	ld (hl),a 
   89 D1:DF15 23 -  -  -  	inc hl
   90 D1:DF16 3E 50 -  -  	ld a,%01010000
   91 D1:DF18 77 -  -  -  	ld (hl),a 
   92 D1:DF19 23 -  -  -  	inc hl
   93 D1:DF1A 3E 92 -  -  	ld a,%10010010
   94 D1:DF1C 77 -  -  -  	ld (hl),a 
   95 D1:DF1D 23 -  -  -  	inc hl
   96 D1:DF1E 3E 19 -  -  	ld a,%00011001
   97 D1:DF20 77 -  -  -  	ld (hl),a 
   98 D1:DF21 23 -  -  -  	inc hl
   99 D1:DF22 C9 -  -  -  	ret 
Listing for file "ascent.asm"
  623 D1:DF23 -  -  -  -  #include "generated/Sprite_Tables.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\generated\Sprite_Tables.txt"
    1 D1:DF23 -  -  -  -  Sprite_Table_Table:
    2 D1:DF23 2C DF D1 -  	.dl Sprite_Table_0
    3 D1:DF26 09 E1 D1 -  	.dl Sprite_Table_1
    4 D1:DF29 09 E1 D1 -  	.dl Sprite_Table_2
    5 D1:DF2C -  -  -  -  
    6 D1:DF2C -  -  -  -  
    7 D1:DF2C -  -  -  -  Sprite_Table_0:
    8 D1:DF2C 07 5D D4 -  	.dl BigGrassBase_Slow_O
    9 D1:DF2F BE 5E D4 -  	.dl BigGrassBase_Fast_F
   10 D1:DF32 AA 5A D4 -  	.dl BigGrassBase_Fast
   11 D1:DF35 12 5C D4 -  	.dl BigGrassTop_Fast
   12 D1:DF38 26 60 D4 -  	.dl BigGrassTop_Fast_F
   13 D1:DF3B 1B 61 D4 -  	.dl BigGrassTop_Slow_O
   14 D1:DF3E 55 62 D4 -  	.dl DualLeaf4_Slow
   15 D1:DF41 05 63 D4 -  	.dl DualLeaf4_Slow_F
   16 D1:DF44 B6 63 D4 -  	.dl DualLeaf3_Fast
   17 D1:DF47 A6 64 D4 -  	.dl Branches_9_Fast
   18 D1:DF4A 96 65 D4 -  	.dl Branches_13_Fast
   19 D1:DF4D 2E 64 D4 -  	.dl Branches_10_Fast
   20 D1:DF50 29 65 D4 -  	.dl Branches_16_Slow
   21 D1:DF53 C8 65 D4 -  	.dl Leaves1_Fast
   22 D1:DF56 E0 66 D4 -  	.dl DualLeaf1_Fast
   23 D1:DF59 50 67 D4 -  	.dl DualLeaf2_Fast
   24 D1:DF5C C1 67 D4 -  	.dl DualLeaf2_Slow_O
   25 D1:DF5F 6B 68 D4 -  	.dl DualLeaf1_Slow_O
   26 D1:DF62 6C 77 D4 -  	.dl LeavesLight_Fast
   27 D1:DF65 64 73 D4 -  	.dl LeavesDark_Fast
   28 D1:DF68 E7 79 D4 -  	.dl Branches_14_Slow
   29 D1:DF6B F3 72 D4 -  	.dl Branches_15_Slow_O_F
   30 D1:DF6E 84 78 D4 -  	.dl Branches_8_Fast
   31 D1:DF71 C9 71 D4 -  	.dl Branches_15_Slow
   32 D1:DF74 E2 78 D4 -  	.dl Branches_11_Fast_F
   33 D1:DF77 B6 79 D4 -  	.dl Branches_13_Fast_F
   34 D1:DF7A D8 70 D4 -  	.dl Branches_10_Fast_F
   35 D1:DF7D 80 76 D4 -  	.dl Leaves2_Fast_F
   36 D1:DF80 94 75 D4 -  	.dl Leaves2_Fast
   37 D1:DF83 54 7A D4 -  	.dl Lantern_0_Fast
   38 D1:DF86 FC 7A D4 -  	.dl Lantern_1_Fast
   39 D1:DF89 A4 7B D4 -  	.dl Lantern_2_Fast
   40 D1:DF8C 4C 7C D4 -  	.dl Lantern_0_Fast_F
   41 D1:DF8F F4 7C D4 -  	.dl Lantern_1_Fast_F
   42 D1:DF92 9C 7D D4 -  	.dl Lantern_2_Fast_F
   43 D1:DF95 3B 81 D4 -  	.dl Lantern_3_Slow
   44 D1:DF98 F9 81 D4 -  	.dl Lantern_3_Slow_O_F
   45 D1:DF9B BF 7F D4 -  	.dl Lantern_5_Slow
   46 D1:DF9E 7D 80 D4 -  	.dl Lantern_5_Slow_O_F
   47 D1:DFA1 7C 74 D4 -  	.dl LeavesDark_Fast_F
   48 D1:DFA4 98 72 D4 -  	.dl Branches_12_Fast
   49 D1:DFA7 3B 70 D4 -  	.dl Branches_6_Slow
   50 D1:DFAA 50 71 D4 -  	.dl Branches_7_Fast
   51 D1:DFAD 3A 72 D4 -  	.dl Branches_8_Fast_F
   52 D1:DFB0 49 79 D4 -  	.dl Branches_16_Slow_O_F
   53 D1:DFB3 43 7E D4 -  	.dl Lantern_6_Slow
   54 D1:DFB6 01 7F D4 -  	.dl Lantern_6_Slow_O_F
   55 D1:DFB9 6D 6F D4 -  	.dl AscentBanner_8_Slow
   56 D1:DFBC FF 6E D4 -  	.dl AscentBanner_8_Slow_O
   57 D1:DFBF B8 6E D4 -  	.dl AscentBanner_7_Fast
   58 D1:DFC2 D5 6F D4 -  	.dl AscentBanner_7_Slow_O
   59 D1:DFC5 BE 6D D4 -  	.dl AscentBanner_9_Fast_F
   60 D1:DFC8 07 6E D4 -  	.dl AscentBanner_6_Slow_F
   61 D1:DFCB 5C 6D D4 -  	.dl AscentBanner_10_Fast_F
   62 D1:DFCE E2 6C D4 -  	.dl AscentBanner_5_Fast
   63 D1:DFD1 68 6C D4 -  	.dl AscentBanner_4_Fast
   64 D1:DFD4 0E 6C D4 -  	.dl AscentBanner_0_Fast
   65 D1:DFD7 64 6B D4 -  	.dl AscentBanner_3_Fast
   66 D1:DFDA EA 6A D4 -  	.dl AscentBanner_2_Fast
   67 D1:DFDD 70 6A D4 -  	.dl AscentBanner_1_Fast
   68 D1:DFE0 C4 69 D4 -  	.dl AscentBanner_9_Fast
   69 D1:DFE3 0E 6A D4 -  	.dl AscentBanner_10_Fast
   70 D1:DFE6 13 69 D4 -  	.dl AscentBanner_6_Slow_O
   71 D1:DFE9 68 83 D4 -  	.dl Branches_4_Fast_F
   72 D1:DFEC 06 84 D4 -  	.dl Branches_7_Fast_F
   73 D1:DFEF 80 84 D4 -  	.dl Branches_12_Fast_F
   74 D1:DFF2 DC 84 D4 -  	.dl Leaves1_Fast_F
   75 D1:DFF5 DF 2A D4 -  	.dl Vine5_Slow
   76 D1:DFF8 9D 2B D4 -  	.dl Vine6_Slow
   77 D1:DFFB 41 2C D4 -  	.dl Vine4_Slow
   78 D1:DFFE 01 2D D4 -  	.dl Vine4_Slow_F
   79 D1:E001 C1 2D D4 -  	.dl Vine4_Slow_O_F
   80 D1:E004 81 2E D4 -  	.dl Vine5_Slow_O_F
   81 D1:E007 41 2F D4 -  	.dl Vine7_Slow_O
   82 D1:E00A C1 2F D4 -  	.dl Vine5_Slow_O
   83 D1:E00D 7F 30 D4 -  	.dl Vine6_Slow_O
   84 D1:E010 25 31 D4 -  	.dl Vine4_Slow_O
   85 D1:E013 E3 31 D4 -  	.dl Vine2_Slow
   86 D1:E016 83 32 D4 -  	.dl VineVertical_Slow_O
   87 D1:E019 2F 33 D4 -  	.dl VineVertical_Slow
   88 D1:E01C DC 33 D4 -  	.dl Branches_5_Fast
   89 D1:E01F 4C 5C D4 -  	.dl Branches_4_Fast
   90 D1:E022 7C 34 D4 -  	.dl Branches_3_Fast
   91 D1:E025 24 35 D4 -  	.dl Branches_2_Fast
   92 D1:E028 B6 82 D4 -  	.dl GroundDirtFull_Fast_F
   93 D1:E02B CE 35 D4 -  	.dl GroundDirtFull_Fast
   94 D1:E02E 80 36 D4 -  	.dl GroundDirtMound_Fast
   95 D1:E031 00 37 D4 -  	.dl GroundDirtMound_Fast_F
   96 D1:E034 7F 37 D4 -  	.dl Branches_8_Slow_O_F
   97 D1:E037 07 38 D4 -  	.dl Branches_9_Slow_O
   98 D1:E03A B6 38 D4 -  	.dl Tree_2_Fast
   99 D1:E03D B2 39 D4 -  	.dl Tree_4_Fast
  100 D1:E040 B4 3A D4 -  	.dl Tree_7_Fast
  101 D1:E043 B6 3B D4 -  	.dl Tree_9_Fast
  102 D1:E046 B8 3C D4 -  	.dl Tree_6_Fast_F
  103 D1:E049 BA 3D D4 -  	.dl Tree_3_Fast_F
  104 D1:E04C BC 3E D4 -  	.dl Tree_0_Fast_F
  105 D1:E04F B8 3F D4 -  	.dl Tree_3_Fast
  106 D1:E052 BA 40 D4 -  	.dl Tree_8_Fast
  107 D1:E055 BC 41 D4 -  	.dl Tree_9_Fast_F
  108 D1:E058 BE 42 D4 -  	.dl Tree_8_Fast_F
  109 D1:E05B C0 43 D4 -  	.dl Tree_4_Fast_F
  110 D1:E05E C2 44 D4 -  	.dl Tree_0_Fast
  111 D1:E061 BE 45 D4 -  	.dl Tree_6_Fast
  112 D1:E064 C0 46 D4 -  	.dl Tree_10_Fast
  113 D1:E067 C2 47 D4 -  	.dl Tree_7_Fast_F
  114 D1:E06A C4 48 D4 -  	.dl Tree_1_Fast_F
  115 D1:E06D C2 49 D4 -  	.dl Tree_1_Fast
  116 D1:E070 C0 4A D4 -  	.dl Tree_5_Fast
  117 D1:E073 C2 4B D4 -  	.dl Tree_11_Fast
  118 D1:E076 C4 4C D4 -  	.dl Tree_5_Fast_F
  119 D1:E079 C6 4D D4 -  	.dl Tree_2_Fast_F
  120 D1:E07C C2 4E D4 -  	.dl Tree_11_Fast_F
  121 D1:E07F C4 4F D4 -  	.dl Branches_1_Fast
  122 D1:E082 5D 50 D4 -  	.dl Vine7_Slow
  123 D1:E085 E2 50 D4 -  	.dl Branches_1_Fast_F
  124 D1:E088 7A 51 D4 -  	.dl Branches_2_Fast_F
  125 D1:E08B 24 52 D4 -  	.dl Branches_5_Fast_F
  126 D1:E08E C5 52 D4 -  	.dl Vine2_Slow_O
  127 D1:E091 65 53 D4 -  	.dl Vine2_Slow_F
  128 D1:E094 05 54 D4 -  	.dl VineVertical_Slow_F
  129 D1:E097 F5 85 D4 -  	.dl Branches_1_Slow_O
  130 D1:E09A BB 86 D4 -  	.dl Branches_2_Slow_O
  131 D1:E09D 9B 87 D4 -  	.dl Branches_4_Slow_O
  132 D1:E0A0 67 88 D4 -  	.dl Branches_7_Slow_O
  133 D1:E0A3 AA 5A D4 -  	.dl Branches_0_Fast_F
  134 D1:E0A6 41 5B D4 -  	.dl Branches_8_Slow_O
  135 D1:E0A9 CA 5B D4 -  	.dl Branches_9_Fast_F
  136 D1:E0AC E4 31 D4 -  	.dl Branches_0_Fast
  137 D1:E0AF B4 54 D4 -  	.dl Platforms_0_Fast
  138 D1:E0B2 2A 55 D4 -  	.dl Platforms_1_Fast
  139 D1:E0B5 A0 55 D4 -  	.dl Platforms_0_Fast_F
  140 D1:E0B8 17 56 D4 -  	.dl Platforms_2_Slow_O_F
  141 D1:E0BB 93 56 D4 -  	.dl Platforms_2_Slow_O
  142 D1:E0BE 8F 57 D4 -  	.dl TongueRing1_Slow
  143 D1:E0C1 13 58 D4 -  	.dl TongueRing2_Slow
  144 D1:E0C4 97 58 D4 -  	.dl TongueRing1_Slow_F
  145 D1:E0C7 1B 59 D4 -  	.dl TongueRing2_Slow_F
  146 D1:E0CA 0E 57 D4 -  	.dl Spikes_0_Fast
  147 D1:E0CD 9E 59 D4 -  	.dl GroundDirtDark_Fast
  148 D1:E0D0 24 5A D4 -  	.dl GroundDirtDark_Fast_F
  149 D1:E0D3 C0 01 D4 -  	.dl GroundHumpDark_Fast
  150 D1:E0D6 46 02 D4 -  	.dl GroundHumpDark_Fast_F
  151 D1:E0D9 CC 02 D4 -  	.dl Tree_16_Fast
  152 D1:E0DC 21 03 D4 -  	.dl Tree_17_Slow
  153 D1:E0DF 87 03 D4 -  	.dl Tree_17_Slow_O_F
  154 D1:E0E2 ED 03 D4 -  	.dl Tree_18_Slow
  155 D1:E0E5 51 04 D4 -  	.dl Tree_18_Slow_O_F
  156 D1:E0E8 B6 04 D4 -  	.dl Tree_16_Fast_F
  157 D1:E0EB 0C 05 D4 -  	.dl Clouds_0_Fast
  158 D1:E0EE 72 05 D4 -  	.dl Clouds_1_Fast
  159 D1:E0F1 D6 05 D4 -  	.dl Clouds_3_Fast
  160 D1:E0F4 42 06 D4 -  	.dl Clouds_4_Fast
  161 D1:E0F7 82 06 D4 -  	.dl Clouds_2_Fast
  162 D1:E0FA 34 07 D4 -  	.dl Clouds_0_Fast_F
  163 D1:E0FD 9A 07 D4 -  	.dl Clouds_1_Fast_F
  164 D1:E100 FE 07 D4 -  	.dl Clouds_4_Fast_F
  165 D1:E103 3E 08 D4 -  	.dl Clouds_3_Fast_F
  166 D1:E106 AA 08 D4 -  	.dl Clouds_2_Fast_F
  167 D1:E109 -  -  -  -  
  168 D1:E109 -  -  -  -  Sprite_Table_1:
  169 D1:E109 -  -  -  -  
  170 D1:E109 -  -  -  -  Sprite_Table_2:
  171 D1:E109 -  -  -  -  
Listing for file "ascent.asm"
  624 D1:E109 -  -  -  -  #include "generated/Sprite_Data.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\generated\Sprite_Data.txt"
    1 D1:E109 -  -  -  -  BigGrassBase:
    2 D1:E109 10 -  -  -  	.db %00010000
    3 D1:E10A 18 1A -  -  	.db 24, 26
    4 D1:E10C 3F FF FC 3F 
              FF FC 3F FF 	.db %00111111, %11111111, %11111100, %00111111, %11111111, %11111100, %00111111, %11111111
    5 D1:E114 FC 3F FF FC 
              3F FF FC 3F 	.db %11111100, %00111111, %11111111, %11111100, %00111111, %11111111, %11111100, %00111111
    6 D1:E11C FF FC 3F FF 
              FC 3F FF FC 	.db %11111111, %11111100, %00111111, %11111111, %11111100, %00111111, %11111111, %11111100
    7 D1:E124 3F FF FC 3F 
              FF FC 3F FF 	.db %00111111, %11111111, %11111100, %00111111, %11111111, %11111100, %00111111, %11111111
    8 D1:E12C FC 3F FF FC 
              3F FF FC FF 	.db %11111100, %00111111, %11111111, %11111100, %00111111, %11111111, %11111100, %11111111
    9 D1:E134 FF FC FF FF 
              FC FF FF FC 	.db %11111111, %11111100, %11111111, %11111111, %11111100, %11111111, %11111111, %11111100
   10 D1:E13C FF FF FC FF 
              FF FC FF FF 	.db %11111111, %11111111, %11111100, %11111111, %11111111, %11111100, %11111111, %11111111
   11 D1:E144 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   12 D1:E14C FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   13 D1:E154 FF FF FF FF 
              FF FF -  -  	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   14 D1:E15A -  -  -  -  
   15 D1:E15A 54 -  -  -  	.db %01010100
   16 D1:E15B -  -  -  -  
   17 D1:E15B 1F C7 42 F8 
              F8 1F 57 42 	.db %00011111, %11000111, %01000010, %11111000, %11111000, %00011111, %01010111, %01000010
   18 D1:E163 F8 F8 1F 57 
              42 F8 F8 1F 	.db %11111000, %11111000, %00011111, %01010111, %01000010, %11111000, %11111000, %00011111
   19 D1:E16B 1F 42 E8 F8 
              1F 1F 42 EB 	.db %00011111, %01000010, %11101000, %11111000, %00011111, %00011111, %01000010, %11101011
   20 D1:E173 F8 1F 1F 42 
              F3 F8 5F 9F 	.db %11111000, %00011111, %00011111, %01000010, %11110011, %11111000, %01011111, %10011111
   21 D1:E17B 40 FE FE 05 
              F1 F4 2F EF 	.db %01000000, %11111110, %11111110, %00000101, %11110001, %11110100, %00101111, %11101111
   22 D1:E183 E0 5F BF 42 
              FD FE 17 FB 	.db %11100000, %01011111, %10111111, %01000010, %11111101, %11111110, %00010111, %11111011
   23 D1:E18B F4 0B FF F8 
              17 FF F4 0F 	.db %11110100, %00001011, %11111111, %11111000, %00010111, %11111111, %11110100, %00001111
   24 D1:E193 FF FA 17 FF 
              FD 0B FF FE 	.db %11111111, %11111010, %00010111, %11111111, %11111101, %00001011, %11111111, %11111110
   25 D1:E19B 17 FF FD 0B 
              FF FE 00 -  	.db %00010111, %11111111, %11111101, %00001011, %11111111, %11111110, %00000000
   26 D1:E1A2 -  -  -  -  
   27 D1:E1A2 -  -  -  -  
   28 D1:E1A2 -  -  -  -  BigGrassTop:
   29 D1:E1A2 10 -  -  -  	.db %00010000
   30 D1:E1A3 1A 17 -  -  	.db 26, 23
   31 D1:E1A5 00 00 FC 00 
              00 FF 00 00 	.db %00000000, %00000000, %11111100, %00000000, %00000000, %11111111, %00000000, %00000000
   32 D1:E1AD FF F0 00 FF 
              FF 00 3F FF 	.db %11111111, %11110000, %00000000, %11111111, %11111111, %00000000, %00111111, %11111111
   33 D1:E1B5 C0 3F FF C0 
              0F FF F0 0F 	.db %11000000, %00111111, %11111111, %11000000, %00001111, %11111111, %11110000, %00001111
   34 D1:E1BD FF F0 03 FF 
              FC 00 FF FF 	.db %11111111, %11110000, %00000011, %11111111, %11111100, %00000000, %11111111, %11111111
   35 D1:E1C5 00 FF FF 00 
              3F FF C0 0F 	.db %00000000, %11111111, %11111111, %00000000, %00111111, %11111111, %11000000, %00001111
   36 D1:E1CD FF F0 0F FF 
              FC 03 FF FC 	.db %11111111, %11110000, %00001111, %11111111, %11111100, %00000011, %11111111, %11111100
   37 D1:E1D5 00 FF FF 00 
              3F FF C0 3F 	.db %00000000, %11111111, %11111111, %00000000, %00111111, %11111111, %11000000, %00111111
   38 D1:E1DD FF F0 0F FF 
              F0 03 FF FC 	.db %11111111, %11110000, %00001111, %11111111, %11110000, %00000011, %11111111, %11111100
   39 D1:E1E5 00 FF FF 00 
              3F FF C0 0F 	.db %00000000, %11111111, %11111111, %00000000, %00111111, %11111111, %11000000, %00001111
   40 D1:E1ED FF F0 00 -  	.db %11111111, %11110000, %00000000
   41 D1:E1F0 -  -  -  -  
   42 D1:E1F0 45 -  -  -  	.db %01000101
   43 D1:E1F1 -  -  -  -  
   44 D1:E1F1 56 A9 43 6A 
              12 94 30 E8 	.db %01010110, %10101001, %01000011, %01101010, %00010010, %10010100, %00110000, %11101000
   45 D1:E1F9 30 50 60 E8 
              10 50 30 A0 	.db %00110000, %01010000, %01100000, %11101000, %00010000, %01010000, %00110000, %10100000
   46 D1:E201 61 78 30 B0 
              69 60 52 F4 	.db %01100001, %01111000, %00110000, %10110000, %01101001, %01100000, %01010010, %11110100
   47 D1:E209 30 FC 0A 5C 
              18 38 34 5E 	.db %00110000, %11111100, %00001010, %01011100, %00011000, %00111000, %00110100, %01011110
   48 D1:E211 06 2F 03 57 
              03 8E 07 16 	.db %00000110, %00101111, %00000011, %01010111, %00000011, %10001110, %00000111, %00010110
   49 D1:E219 8A AF 07 1C 	.db %10001010, %10101111, %00000111, %00011100
   50 D1:E21D -  -  -  -  
   51 D1:E21D -  -  -  -  
   52 D1:E21D -  -  -  -  DualLeaf4:
   53 D1:E21D 10 -  -  -  	.db %00010000
   54 D1:E21E 0E 13 -  -  	.db 14, 19
   55 D1:E220 00 3C 03 F0 
              3F C0 FF 03 	.db %00000000, %00111100, %00000011, %11110000, %00111111, %11000000, %11111111, %00000011
   56 D1:E228 FC 3F F0 FF 
              CF FC 3F C3 	.db %11111100, %00111111, %11110000, %11111111, %11001111, %11111100, %00111111, %11000011
   57 D1:E230 FF 0F F0 3F 
              00 FF 03 FF 	.db %11111111, %00001111, %11110000, %00111111, %00000000, %11111111, %00000011, %11111111
   58 D1:E238 07 FF 0F FC 
              3F F0 3F C0 	.db %00000111, %11111111, %00001111, %11111100, %00111111, %11110000, %00111111, %11000000
   59 D1:E240 3F 00 -  -  	.db %00111111, %00000000
   60 D1:E242 -  -  -  -  
   61 D1:E242 45 -  -  -  	.db %01000101
   62 D1:E243 -  -  -  -  
   63 D1:E243 10 81 42 C5 
              C3 F1 7C 2F 	.db %00010000, %10000001, %01000010, %11000101, %11000011, %11110001, %01111100, %00101111
   64 D1:E24B 37 13 E9 F4 
              E8 E0 3C 06 	.db %00110111, %00010011, %11101001, %11110100, %11101000, %11100000, %00111100, %00000110
   65 D1:E253 A1 D4 7E 7E 	.db %10100001, %11010100, %01111110, %01111110
   66 D1:E257 -  -  -  -  
   67 D1:E257 -  -  -  -  
   68 D1:E257 -  -  -  -  DualLeaf3:
   69 D1:E257 10 -  -  -  	.db %00010000
   70 D1:E258 16 0B -  -  	.db 22, 11
   71 D1:E25A F0 00 FF F0 
              0F FF F0 3F 	.db %11110000, %00000000, %11111111, %11110000, %00001111, %11111111, %11110000, %00111111
   72 D1:E262 CF F3 FF 3F 
              CF F0 FF FF 	.db %11001111, %11110011, %11111111, %00111111, %11001111, %11110000, %11111111, %11111111
   73 D1:E26A C0 FF FF 03 
              FF F0 0F FF 	.db %11000000, %11111111, %11111111, %00000011, %11111111, %11110000, %00001111, %11111111
   74 D1:E272 00 0F FC 00 
              0F F0 00 -  	.db %00000000, %00001111, %11111100, %00000000, %00001111, %11110000, %00000000
   75 D1:E279 -  -  -  -  
   76 D1:E279 45 -  -  -  	.db %01000101
   77 D1:E27A -  -  -  -  
   78 D1:E27A 00 10 00 F0 
              06 E0 05 F6 	.db %00000000, %00010000, %00000000, %11110000, %00000110, %11100000, %00000101, %11110110
   79 D1:E282 02 F9 01 7E 
              82 FF 55 FE 	.db %00000010, %11111001, %00000001, %01111110, %10000010, %11111111, %01010101, %11111110
   80 D1:E28A FF FF FF -  	.db %11111111, %11111111, %11111111
   81 D1:E28D -  -  -  -  
   82 D1:E28D -  -  -  -  
   83 D1:E28D -  -  -  -  Branches_10:
   84 D1:E28D 20 -  -  -  	.db %00100000
   85 D1:E28E 12 0E -  -  	.db 18, 14
   86 D1:E290 00 0F C0 0F 
              F0 0F FC 03 	.db %00000000, %00001111, %11000000, %00001111, %11110000, %00001111, %11111100, %00000011
   87 D1:E298 FF 03 FF C3 
              FF F3 FF FF 	.db %11111111, %00000011, %11111111, %11000011, %11111111, %11110011, %11111111, %11111111
   88 D1:E2A0 FF FC FF FC 
              3F FC 0F FC 	.db %11111111, %11111100, %11111111, %11111100, %00111111, %11111100, %00001111, %11111100
   89 D1:E2A8 03 FC 00 FF 
              00 33 00 00 	.db %00000011, %11111100, %00000000, %11111111, %00000000, %00110011, %00000000, %00000000
   90 D1:E2B0 -  -  -  -  
   91 D1:E2B0 01 23 -  -  	.db %00000001, %00100011
   92 D1:E2B2 -  -  -  -  
   93 D1:E2B2 04 60 46 F0 
              15 BE 14 2D 	.db %00000100, %01100000, %01000110, %11110000, %00010101, %10111110, %00010100, %00101101
   94 D1:E2BA 50 15 E5 00 
              55 39 55 04 	.db %01010000, %00010101, %11100101, %00000000, %01010101, %00111001, %01010101, %00000100
   95 D1:E2C2 4A A9 10 01 
              5A D8 40 55 	.db %01001010, %10101001, %00010000, %00000001, %01011010, %11011000, %01000000, %01010101
   96 D1:E2CA 2F 85 01 4E 
              25 0B E8 50 	.db %00101111, %10000101, %00000001, %01001110, %00100101, %00001011, %11101000, %01010000
   97 D1:E2D2 A9 10 50 40 
              00 -  -  -  	.db %10101001, %00010000, %01010000, %01000000, %00000000
   98 D1:E2D7 -  -  -  -  
   99 D1:E2D7 -  -  -  -  
  100 D1:E2D7 -  -  -  -  Branches_9:
  101 D1:E2D7 20 -  -  -  	.db %00100000
  102 D1:E2D8 12 0E -  -  	.db 18, 14
  103 D1:E2DA 00 30 C0 3F 
              F0 0F FC 0F 	.db %00000000, %00110000, %11000000, %00111111, %11110000, %00001111, %11111100, %00001111
  104 D1:E2E2 FF 0F FF FF 
              FF FF FF FF 	.db %11111111, %00001111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  105 D1:E2EA FF FF FF FF 
              FF FF CF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11001111, %11111111
  106 D1:E2F2 03 FF 00 FF 
              00 0C 00 00 	.db %00000011, %11111111, %00000000, %11111111, %00000000, %00001100, %00000000, %00000000
  107 D1:E2FA -  -  -  -  
  108 D1:E2FA 01 23 -  -  	.db %00000001, %00100011
  109 D1:E2FC -  -  -  -  
  110 D1:E2FC 00 00 00 51 
              51 40 06 50 	.db %00000000, %00000000, %00000000, %01010001, %01010001, %01000000, %00000110, %01010000
  111 D1:E304 55 04 58 AA 
              A0 01 51 FB 	.db %01010101, %00000100, %01011000, %10101010, %10100000, %00000001, %01010001, %11111011
  112 D1:E30C BF 05 45 B9 
              65 05 05 BA 	.db %10111111, %00000101, %01000101, %10111001, %01100101, %00000101, %00000101, %10111010
  113 D1:E314 50 11 BF BE 
              50 55 06 A9 	.db %01010000, %00010001, %10111111, %10111110, %01010000, %01010101, %00000110, %10101001
  114 D1:E31C 44 40 00 14 
              15 05 15 40 	.db %01000100, %01000000, %00000000, %00010100, %00010101, %00000101, %00010101, %01000000
  115 D1:E324 04 00 00 -  	.db %00000100, %00000000, %00000000
  116 D1:E327 -  -  -  -  
  117 D1:E327 -  -  -  -  
  118 D1:E327 -  -  -  -  Branches_16:
  119 D1:E327 20 -  -  -  	.db %00100000
  120 D1:E328 0D 0D -  -  	.db 13, 13
  121 D1:E32A 07 F8 3F 83 
              FC 1F C0 FC 	.db %00000111, %11111000, %00111111, %10000011, %11111100, %00011111, %11000000, %11111100
  122 D1:E332 0F C0 7C 07 
              C0 3C 03 C0 	.db %00001111, %11000000, %01111100, %00000111, %11000000, %00111100, %00000011, %11000000
  123 D1:E33A 1E 01 E0 0C 
              00 00 -  -  	.db %00011110, %00000001, %11100000, %00001100, %00000000, %00000000
  124 D1:E340 -  -  -  -  
  125 D1:E340 01 23 -  -  	.db %00000001, %00100011
  126 D1:E342 -  -  -  -  
  127 D1:E342 16 A4 12 D0 
              43 50 6C 00 	.db %00010110, %10100100, %00010010, %11010000, %01000011, %01010000, %01101100, %00000000
  128 D1:E34A 94 0A 01 40 
              64 24 18 14 	.db %10010100, %00001010, %00000001, %01000000, %01100100, %00100100, %00011000, %00010100
  129 D1:E352 10 00 -  -  	.db %00010000, %00000000
  130 D1:E354 -  -  -  -  
  131 D1:E354 -  -  -  -  
  132 D1:E354 -  -  -  -  Branches_13:
  133 D1:E354 20 -  -  -  	.db %00100000
  134 D1:E355 0E 06 -  -  	.db 14, 6
  135 D1:E357 00 0C 33 FF 
              FF FF FF 3F 	.db %00000000, %00001100, %00110011, %11111111, %11111111, %11111111, %11111111, %00111111
  136 D1:E35F FC 03 F0 -  	.db %11111100, %00000011, %11110000
  137 D1:E362 -  -  -  -  
  138 D1:E362 01 20 -  -  	.db %00000001, %00100000
  139 D1:E364 -  -  -  -  
  140 D1:E364 00 00 10 00 
              01 59 08 45 	.db %00000000, %00000000, %00010000, %00000000, %00000001, %01011001, %00001000, %01000101
  141 D1:E36C AA 50 00 15 
              60 00 -  -  	.db %10101010, %01010000, %00000000, %00010101, %01100000, %00000000
  142 D1:E372 -  -  -  -  
  143 D1:E372 -  -  -  -  
  144 D1:E372 -  -  -  -  Leaves1:
  145 D1:E372 20 -  -  -  	.db %00100000
  146 D1:E373 1A 15 -  -  	.db 26, 21
  147 D1:E375 00 0F 00 00 
              0F FC 00 3F 	.db %00000000, %00001111, %00000000, %00000000, %00001111, %11111100, %00000000, %00111111
  148 D1:E37D FF C0 0F FF 
              FC 0F FF FF 	.db %11111111, %11000000, %00001111, %11111111, %11111100, %00001111, %11111111, %11111111
  149 D1:E385 03 FF FF C3 
              FF FF F0 FF 	.db %00000011, %11111111, %11111111, %11000011, %11111111, %11111111, %11110000, %11111111
  150 D1:E38D FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  151 D1:E395 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  152 D1:E39D FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  153 D1:E3A5 FF FF FF FF 
              3F FF FF CF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111, %11001111
  154 D1:E3AD FF FF C0 3F 
              FF F0 0F FF 	.db %11111111, %11111111, %11000000, %00111111, %11111111, %11110000, %00001111, %11111111
  155 D1:E3B5 F0 00 FF F0 
              00 -  -  -  	.db %11110000, %00000000, %11111111, %11110000, %00000000
  156 D1:E3BA -  -  -  -  
  157 D1:E3BA 48 50 -  -  	.db %01001000, %01010000
  158 D1:E3BC -  -  -  -  
  159 D1:E3BC 10 04 40 01 
              11 11 00 04 	.db %00010000, %00000100, %01000000, %00000001, %00010001, %00010001, %00000000, %00000100
  160 D1:E3C4 44 40 00 00 
              01 00 00 00 	.db %01000100, %01000000, %00000000, %00000000, %00000001, %00000000, %00000000, %00000000
  161 D1:E3CC 44 00 00 00 
              01 10 00 22 	.db %01000100, %00000000, %00000000, %00000000, %00000001, %00010000, %00000000, %00100010
  162 D1:E3D4 00 00 00 00 
              20 88 80 00 	.db %00000000, %00000000, %00000000, %00000000, %00100000, %10001000, %10000000, %00000000
  163 D1:E3DC 00 00 8A A2 
              00 08 88 00 	.db %00000000, %00000000, %10001010, %10100010, %00000000, %00001000, %10001000, %00000000
  164 D1:E3E4 08 A2 82 22 
              22 20 02 28 	.db %00001000, %10100010, %10000010, %00100010, %00100010, %00100000, %00000010, %00101000
  165 D1:E3EC AA 88 88 88 
              08 8A 2A 2A 	.db %10101010, %10001000, %10001000, %10001000, %00001000, %10001010, %00101010, %00101010
  166 D1:E3F4 AA AA 88 2A 
              8A AA AA AA 	.db %10101010, %10101010, %10001000, %00101010, %10001010, %10101010, %10101010, %10101010
  167 D1:E3FC AA 8A AA AA 
              AA AA AA A8 	.db %10101010, %10001010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101000
  168 D1:E404 AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  169 D1:E40C AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  170 D1:E414 AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  171 D1:E41C AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  172 D1:E424 AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010
  173 D1:E428 -  -  -  -  
  174 D1:E428 -  -  -  -  
  175 D1:E428 -  -  -  -  DualLeaf1:
  176 D1:E428 10 -  -  -  	.db %00010000
  177 D1:E429 10 0C -  -  	.db 16, 12
  178 D1:E42B 03 C0 0F F0 
              3F FC 3F FC 	.db %00000011, %11000000, %00001111, %11110000, %00111111, %11111100, %00111111, %11111100
  179 D1:E433 FF FF FF 3F 
              FC 3F FC 3F 	.db %11111111, %11111111, %11111111, %00111111, %11111100, %00111111, %11111100, %00111111
  180 D1:E43B FC 0F F0 0F 
              F0 0F C0 0C 	.db %11111100, %00001111, %11110000, %00001111, %11110000, %00001111, %11000000, %00001100
  181 D1:E443 -  -  -  -  
  182 D1:E443 45 -  -  -  	.db %01000101
  183 D1:E444 -  -  -  -  
  184 D1:E444 01 40 A8 17 
              40 BF 00 FA 	.db %00000001, %01000000, %10101000, %00010111, %01000000, %10111111, %00000000, %11111010
  185 D1:E44C 05 D0 BF 17 
              C7 E7 D7 -  	.db %00000101, %11010000, %10111111, %00010111, %11000111, %11100111, %11010111
  186 D1:E453 -  -  -  -  
  187 D1:E453 -  -  -  -  
  188 D1:E453 -  -  -  -  DualLeaf2:
  189 D1:E453 10 -  -  -  	.db %00010000
  190 D1:E454 12 0C -  -  	.db 18, 12
  191 D1:E456 03 C0 00 FC 
              00 FF 00 FF 	.db %00000011, %11000000, %00000000, %11111100, %00000000, %11111111, %00000000, %11111111
  192 D1:E45E F0 3F FF 0F 
              CF CF F3 FF 	.db %11110000, %00111111, %11111111, %00001111, %11001111, %11001111, %11110011, %11111111
  193 D1:E466 F0 3F FC 0F 
              FF 00 FF C0 	.db %11110000, %00111111, %11111100, %00001111, %11111111, %00000000, %11111111, %11000000
  194 D1:E46E 3F C0 03 -  	.db %00111111, %11000000, %00000011
  195 D1:E471 -  -  -  -  
  196 D1:E471 45 -  -  -  	.db %01000101
  197 D1:E472 -  -  -  -  
  198 D1:E472 02 05 02 E0 
              5F 85 F4 2F 	.db %00000010, %00000101, %00000010, %11100000, %01011111, %10000101, %11110100, %00101111
  199 D1:E47A E8 2F 45 FE 
              5E 8F D3 C0 	.db %11101000, %00101111, %01000101, %11111110, %01011110, %10001111, %11010011, %11000000
  200 D1:E482 -  -  -  -  
  201 D1:E482 -  -  -  -  
  202 D1:E482 -  -  -  -  AscentBanner_6:
  203 D1:E482 10 -  -  -  	.db %00010000
  204 D1:E483 0F 13 -  -  	.db 15, 19
  205 D1:E485 FC 00 FE 01 
              FC 03 F8 07 	.db %11111100, %00000000, %11111110, %00000001, %11111100, %00000011, %11111000, %00000111
  206 D1:E48D F0 0F F0 1F 
              E0 3F E0 3F 	.db %11110000, %00001111, %11110000, %00011111, %11100000, %00111111, %11100000, %00111111
  207 D1:E495 C0 7F C0 7F 
              E0 7F F0 FF 	.db %11000000, %01111111, %11000000, %01111111, %11100000, %01111111, %11110000, %11111111
  208 D1:E49D E0 FF C0 FF 
              80 FF 00 7E 	.db %11100000, %11111111, %11000000, %11111111, %10000000, %11111111, %00000000, %01111110
  209 D1:E4A5 00 3C 00 18 	.db %00000000, %00111100, %00000000, %00011000
  210 D1:E4A9 -  -  -  -  
  211 D1:E4A9 EA -  -  -  	.db %11101010
  212 D1:E4AA -  -  -  -  
  213 D1:E4AA 00 0C 18 30 
              60 60 60 30 	.db %00000000, %00001100, %00011000, %00110000, %01100000, %01100000, %01100000, %00110000
  214 D1:E4B2 30 18 0E 01 
              C0 08 02 01 	.db %00110000, %00011000, %00001110, %00000001, %11000000, %00001000, %00000010, %00000001
  215 D1:E4BA 81 86 60 -  	.db %10000001, %10000110, %01100000
  216 D1:E4BD -  -  -  -  
  217 D1:E4BD -  -  -  -  
  218 D1:E4BD -  -  -  -  AscentBanner_9:
  219 D1:E4BD 10 -  -  -  	.db %00010000
  220 D1:E4BE 08 0C -  -  	.db 8, 12
  221 D1:E4C0 C0 F0 FC FF 
              FF FF FF FF 	.db %11000000, %11110000, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111
  222 D1:E4C8 FF 3F 0F 03 	.db %11111111, %00111111, %00001111, %00000011
  223 D1:E4CC -  -  -  -  
  224 D1:E4CC AE -  -  -  	.db %10101110
  225 D1:E4CD -  -  -  -  
  226 D1:E4CD 33 CF CF FF 
              FF FF F3 F3 	.db %00110011, %11001111, %11001111, %11111111, %11111111, %11111111, %11110011, %11110011
  227 D1:E4D5 CC -  -  -  	.db %11001100
  228 D1:E4D6 -  -  -  -  
  229 D1:E4D6 -  -  -  -  
  230 D1:E4D6 -  -  -  -  AscentBanner_10:
  231 D1:E4D6 10 -  -  -  	.db %00010000
  232 D1:E4D7 10 0B -  -  	.db 16, 11
  233 D1:E4D9 F0 00 FF 00 
              FF F0 FF FF 	.db %11110000, %00000000, %11111111, %00000000, %11111111, %11110000, %11111111, %11111111
  234 D1:E4E1 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  235 D1:E4E9 0F FF 00 FF 
              00 0F -  -  	.db %00001111, %11111111, %00000000, %11111111, %00000000, %00001111
  236 D1:E4EF -  -  -  -  
  237 D1:E4EF AE -  -  -  	.db %10101110
  238 D1:E4F0 -  -  -  -  
  239 D1:E4F0 0F 0F F0 FF 
              F0 FF FF FF 	.db %00001111, %00001111, %11110000, %11111111, %11110000, %11111111, %11111111, %11111111
  240 D1:E4F8 FF FF FF 0F 
              FF 0F F0 F0 	.db %11111111, %11111111, %11111111, %00001111, %11111111, %00001111, %11110000, %11110000
  241 D1:E500 -  -  -  -  
  242 D1:E500 -  -  -  -  
  243 D1:E500 -  -  -  -  AscentBanner_1:
  244 D1:E500 24 -  -  -  	.db %00100100
  245 D1:E501 18 08 -  -  	.db 24, 8
  246 D1:E503 AE D0 -  -  	.db %10101110, %11010000
  247 D1:E505 -  -  -  -  
  248 D1:E505 00 00 00 00 
              00 00 55 AA 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %01010101, %10101010
  249 D1:E50D 55 AA 56 A9 
              55 96 56 55 	.db %01010101, %10101010, %01010110, %10101001, %01010101, %10010110, %01010110, %01010101
  250 D1:E515 5A 55 55 96 
              56 A5 5A 55 	.db %01011010, %01010101, %01010101, %10010110, %01010110, %10100101, %01011010, %01010101
  251 D1:E51D 56 AA 95 6A 
              5A 55 56 AA 	.db %01010110, %10101010, %10010101, %01101010, %01011010, %01010101, %01010110, %10101010
  252 D1:E525 95 56 5A 55 
              56 96 96 A9 	.db %10010101, %01010110, %01011010, %01010101, %01010110, %10010110, %10010110, %10101001
  253 D1:E52D 56 A9 00 00 
              00 00 00 00 	.db %01010110, %10101001, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  254 D1:E535 -  -  -  -  
  255 D1:E535 -  -  -  -  
  256 D1:E535 -  -  -  -  AscentBanner_2:
  257 D1:E535 24 -  -  -  	.db %00100100
  258 D1:E536 18 08 -  -  	.db 24, 8
  259 D1:E538 AE D0 -  -  	.db %10101110, %11010000
  260 D1:E53A -  -  -  -  
  261 D1:E53A 00 00 00 00 
              00 00 6A A5 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %01101010, %10100101
  262 D1:E542 A5 69 6A A9 
              69 55 A9 69 	.db %10100101, %01101001, %01101010, %10101001, %01101001, %01010101, %10101001, %01101001
  263 D1:E54A 6A A9 6A A5 
              AA 69 56 95 	.db %01101010, %10101001, %01101010, %10100101, %10101010, %01101001, %01010110, %10010101
  264 D1:E552 69 55 A6 A9 
              56 95 69 55 	.db %01101001, %01010101, %10100110, %10101001, %01010110, %10010101, %01101001, %01010101
  265 D1:E55A A5 A9 56 95 
              6A A5 A5 69 	.db %10100101, %10101001, %01010110, %10010101, %01101010, %10100101, %10100101, %01101001
  266 D1:E562 56 95 00 00 
              00 00 00 00 	.db %01010110, %10010101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  267 D1:E56A -  -  -  -  
  268 D1:E56A -  -  -  -  
  269 D1:E56A -  -  -  -  AscentBanner_3:
  270 D1:E56A 24 -  -  -  	.db %00100100
  271 D1:E56B 24 08 -  -  	.db 36, 8
  272 D1:E56D AE D0 -  -  	.db %10101110, %11010000
  273 D1:E56F -  -  -  -  
  274 D1:E56F 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  275 D1:E577 00 55 5A A9 
              6A A5 6A 96 	.db %00000000, %01010101, %01011010, %10101001, %01101010, %10100101, %01101010, %10010110
  276 D1:E57F AA 95 55 5A 
              55 69 55 95 	.db %10101010, %10010101, %01010101, %01011010, %01010101, %01101001, %01010101, %10010101
  277 D1:E587 56 AA 95 55 
              5A 55 6A A5 	.db %01010110, %10101010, %10010101, %01010101, %01011010, %01010101, %01101010, %10100101
  278 D1:E58F A9 55 69 55 
              55 5A A5 69 	.db %10101001, %01010101, %01101001, %01010101, %01010101, %01011010, %10100101, %01101001
  279 D1:E597 55 5A 95 69 
              55 55 5A 55 	.db %01010101, %01011010, %10010101, %01101001, %01010101, %01010101, %01011010, %01010101
  280 D1:E59F 69 55 55 95 
              69 55 55 5A 	.db %01101001, %01010101, %01010101, %10010101, %01101001, %01010101, %01010101, %01011010
  281 D1:E5A7 55 6A A5 AA 
              55 69 55 00 	.db %01010101, %01101010, %10100101, %10101010, %01010101, %01101001, %01010101, %00000000
  282 D1:E5AF 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  283 D1:E5B7 -  -  -  -  
  284 D1:E5B7 -  -  -  -  
  285 D1:E5B7 -  -  -  -  AscentBanner_0:
  286 D1:E5B7 14 -  -  -  	.db %00010100
  287 D1:E5B8 10 08 -  -  	.db 16, 8
  288 D1:E5BA AE -  -  -  	.db %10101110
  289 D1:E5BB -  -  -  -  
  290 D1:E5BB 00 00 FF FF 
              FF FF FF FF 	.db %00000000, %00000000, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  291 D1:E5C3 FF FF FF FF 
              FF FF 00 00 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %00000000, %00000000
  292 D1:E5CB -  -  -  -  
  293 D1:E5CB -  -  -  -  
  294 D1:E5CB -  -  -  -  AscentBanner_4:
  295 D1:E5CB 24 -  -  -  	.db %00100100
  296 D1:E5CC 18 08 -  -  	.db 24, 8
  297 D1:E5CE AE D0 -  -  	.db %10101110, %11010000
  298 D1:E5D0 -  -  -  -  
  299 D1:E5D0 00 00 00 00 
              00 00 5A 55 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %01011010, %01010101
  300 D1:E5D8 69 69 69 69 
              5A 55 5A A5 	.db %01101001, %01101001, %01101001, %01101001, %01011010, %01010101, %01011010, %10100101
  301 D1:E5E0 5A A5 5A 55 
              56 95 56 95 	.db %01011010, %10100101, %01011010, %01010101, %01010110, %10010101, %01010110, %10010101
  302 D1:E5E8 5A 55 56 95 
              56 95 5A A9 	.db %01011010, %01010101, %01010110, %10010101, %01010110, %10010101, %01011010, %10101001
  303 D1:E5F0 5A A5 5A A5 
              5A A9 69 69 	.db %01011010, %10100101, %01011010, %10100101, %01011010, %10101001, %01101001, %01101001
  304 D1:E5F8 69 69 00 00 
              00 00 00 00 	.db %01101001, %01101001, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  305 D1:E600 -  -  -  -  
  306 D1:E600 -  -  -  -  
  307 D1:E600 -  -  -  -  AscentBanner_5:
  308 D1:E600 24 -  -  -  	.db %00100100
  309 D1:E601 18 08 -  -  	.db 24, 8
  310 D1:E603 AE D0 -  -  	.db %10101110, %11010000
  311 D1:E605 -  -  -  -  
  312 D1:E605 00 00 00 00 
              00 00 69 69 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %01101001, %01101001
  313 D1:E60D 6A A9 69 5A 
              5A A5 56 95 	.db %01101010, %10101001, %01101001, %01011010, %01011010, %10100101, %01010110, %10010101
  314 D1:E615 69 5A 56 95 
              56 95 5A 69 	.db %01101001, %01011010, %01010110, %10010101, %01010110, %10010101, %01011010, %01101001
  315 D1:E61D 56 95 56 95 
              5A 69 5A A5 	.db %01010110, %10010101, %01010110, %10010101, %01011010, %01101001, %01011010, %10100101
  316 D1:E625 56 95 56 A5 
              69 69 6A A9 	.db %01010110, %10010101, %01010110, %10100101, %01101001, %01101001, %01101010, %10101001
  317 D1:E62D 56 A5 00 00 
              00 00 00 00 	.db %01010110, %10100101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  318 D1:E635 -  -  -  -  
  319 D1:E635 -  -  -  -  
  320 D1:E635 -  -  -  -  AscentBanner_7:
  321 D1:E635 14 -  -  -  	.db %00010100
  322 D1:E636 08 0A -  -  	.db 8, 10
  323 D1:E638 AE -  -  -  	.db %10101110
  324 D1:E639 -  -  -  -  
  325 D1:E639 7E 7E 7E 7E 
              7E 7E 7E 7E 	.db %01111110, %01111110, %01111110, %01111110, %01111110, %01111110, %01111110, %01111110
  326 D1:E641 7E 7E -  -  	.db %01111110, %01111110
  327 D1:E643 -  -  -  -  
  328 D1:E643 -  -  -  -  
  329 D1:E643 -  -  -  -  AscentBanner_8:
  330 D1:E643 10 -  -  -  	.db %00010000
  331 D1:E644 08 0A -  -  	.db 8, 10
  332 D1:E646 FF FF FF FF 
              FF FF FF E7 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11100111
  333 D1:E64E C3 81 -  -  	.db %11000011, %10000001
  334 D1:E650 -  -  -  -  
  335 D1:E650 AE -  -  -  	.db %10101110
  336 D1:E651 -  -  -  -  
  337 D1:E651 7E 7E 7E 7E 
              7E 7E 66 48 	.db %01111110, %01111110, %01111110, %01111110, %01111110, %01111110, %01100110, %01001000
  338 D1:E659 00 -  -  -  	.db %00000000
  339 D1:E65A -  -  -  -  
  340 D1:E65A -  -  -  -  
  341 D1:E65A -  -  -  -  Branches_6:
  342 D1:E65A 20 -  -  -  	.db %00100000
  343 D1:E65B 12 0B -  -  	.db 18, 11
  344 D1:E65D 37 3F 3F FF 
              FF FF FF FF 	.db %00110111, %00111111, %00111111, %11111111, %11111111, %11111111, %11111111, %11111111
  345 D1:E665 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  346 D1:E66D FF FF FF FF 
              FC FF F0 00 	.db %11111111, %11111111, %11111111, %11111111, %11111100, %11111111, %11110000, %00000000
  347 D1:E675 0C -  -  -  	.db %00001100
  348 D1:E676 -  -  -  -  
  349 D1:E676 01 23 -  -  	.db %00000001, %00100011
  350 D1:E678 -  -  -  -  
  351 D1:E678 00 00 00 14 
              00 15 40 10 	.db %00000000, %00000000, %00000000, %00010100, %00000000, %00010101, %01000000, %00010000
  352 D1:E680 05 44 01 55 
              94 41 55 15 	.db %00000101, %01000100, %00000001, %01010101, %10010100, %01000001, %01010101, %00010101
  353 D1:E688 2D CA 86 99 
              AA E6 BF FF 	.db %00101101, %11001010, %10000110, %10011001, %10101010, %11100110, %10111111, %11111111
  354 D1:E690 FF C8 59 15 
              A6 A8 16 15 	.db %11111111, %11001000, %01011001, %00010101, %10100110, %10101000, %00010110, %00010101
  355 D1:E698 01 54 15 41 
              55 00 14 00 	.db %00000001, %01010100, %00010101, %01000001, %01010101, %00000000, %00010100, %00000000
  356 D1:E6A0 00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000
  357 D1:E6A4 -  -  -  -  
  358 D1:E6A4 -  -  -  -  
  359 D1:E6A4 -  -  -  -  Branches_7:
  360 D1:E6A4 20 -  -  -  	.db %00100000
  361 D1:E6A5 12 0A -  -  	.db 18, 10
  362 D1:E6A7 FF 3C FF FF 
              FF FF FF FF 	.db %11111111, %00111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  363 D1:E6AF FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  364 D1:E6B7 FF FF FF F3 
              C3 C0 F0 -  	.db %11111111, %11111111, %11111111, %11110011, %11000011, %11000000, %11110000
  365 D1:E6BE -  -  -  -  
  366 D1:E6BE 01 23 -  -  	.db %00000001, %00100011
  367 D1:E6C0 -  -  -  -  
  368 D1:E6C0 00 00 00 00 
              55 40 01 00 	.db %00000000, %00000000, %00000000, %00000000, %01010101, %01000000, %00000001, %00000000
  369 D1:E6C8 90 01 55 45 
              51 15 55 05 	.db %10010000, %00000001, %01010101, %01000101, %01010001, %00010101, %01010101, %00000101
  370 D1:E6D0 00 AB FA 9D 
              FA AF AA FB 	.db %00000000, %10101011, %11111010, %10011101, %11111010, %10101111, %10101010, %11111011
  371 D1:E6D8 AA BF 05 51 
              55 51 55 44 	.db %10101010, %10111111, %00000101, %01010001, %01010101, %01010001, %01010101, %01000100
  372 D1:E6E0 15 10 44 00 
              00 00 05 00 	.db %00010101, %00010000, %01000100, %00000000, %00000000, %00000000, %00000101, %00000000
  373 D1:E6E8 00 -  -  -  	.db %00000000
  374 D1:E6E9 -  -  -  -  
  375 D1:E6E9 -  -  -  -  
  376 D1:E6E9 -  -  -  -  Branches_15:
  377 D1:E6E9 20 -  -  -  	.db %00100000
  378 D1:E6EA 09 0E -  -  	.db 9, 14
  379 D1:E6EC 80 60 38 1E 
              07 C3 F1 FE 	.db %10000000, %01100000, %00111000, %00011110, %00000111, %11000011, %11110001, %11111110
  380 D1:E6F4 7F 1F 87 C1 
              E0 F0 18 0C 	.db %01111111, %00011111, %10000111, %11000001, %11100000, %11110000, %00011000, %00001100
  381 D1:E6FC -  -  -  -  
  382 D1:E6FC 01 23 -  -  	.db %00000001, %00100011
  383 D1:E6FE -  -  -  -  
  384 D1:E6FE 00 01 01 00 
              64 00 84 01 	.db %00000000, %00000001, %00000001, %00000000, %01100100, %00000000, %10000100, %00000001
  385 D1:E706 A1 06 90 6C 
              68 10 40 -  	.db %10100001, %00000110, %10010000, %01101100, %01101000, %00010000, %01000000
  386 D1:E70D -  -  -  -  
  387 D1:E70D -  -  -  -  
  388 D1:E70D -  -  -  -  Branches_8:
  389 D1:E70D 20 -  -  -  	.db %00100000
  390 D1:E70E 0A 0E -  -  	.db 10, 14
  391 D1:E710 03 C3 F3 FC 
              FF 3F FF FF 	.db %00000011, %11000011, %11110011, %11111100, %11111111, %00111111, %11111111, %11111111
  392 D1:E718 FF FF FF 3F 
              CF F3 F0 F0 	.db %11111111, %11111111, %11111111, %00111111, %11001111, %11110011, %11110000, %11110000
  393 D1:E720 3C 00 -  -  	.db %00111100, %00000000
  394 D1:E722 -  -  -  -  
  395 D1:E722 01 23 -  -  	.db %00000001, %00100011
  396 D1:E724 -  -  -  -  
  397 D1:E724 06 00 60 12 
              90 5B 51 1A 	.db %00000110, %00000000, %01100000, %00010010, %10010000, %01011011, %01010001, %00011010
  398 D1:E72C 50 51 94 11 
              F9 45 6E 50 	.db %01010000, %01010001, %10010100, %00010001, %11111001, %01000101, %01101110, %01010000
  399 D1:E734 4B 84 5E 54 
              B8 50 A1 01 	.db %01001011, %10000100, %01011110, %01010100, %10111000, %01010000, %10100001, %00000001
  400 D1:E73C 44 40 -  -  	.db %01000100, %01000000
  401 D1:E73E -  -  -  -  
  402 D1:E73E -  -  -  -  
  403 D1:E73E -  -  -  -  Branches_12:
  404 D1:E73E 20 -  -  -  	.db %00100000
  405 D1:E73F 12 0A -  -  	.db 18, 10
  406 D1:E741 00 00 C0 3F 
              F0 FF FF FF 	.db %00000000, %00000000, %11000000, %00111111, %11110000, %11111111, %11111111, %11111111
  407 D1:E749 FF FF FF FF 
              FF FF FF FC 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111100
  408 D1:E751 0F FF 00 0F 
              C0 00 F0 -  	.db %00001111, %11111111, %00000000, %00001111, %11000000, %00000000, %11110000
  409 D1:E758 -  -  -  -  
  410 D1:E758 01 23 -  -  	.db %00000001, %00100011
  411 D1:E75A -  -  -  -  
  412 D1:E75A 00 00 00 00 
              05 54 50 01 	.db %00000000, %00000000, %00000000, %00000000, %00000101, %01010100, %01010000, %00000001
  413 D1:E762 45 04 16 3A 
              5F 2A F8 F2 	.db %01000101, %00000100, %00010110, %00111010, %01011111, %00101010, %11111000, %11110010
  414 D1:E76A 12 9A C5 6A 
              00 00 15 06 	.db %00010010, %10011010, %11000101, %01101010, %00000000, %00000000, %00010101, %00000110
  415 D1:E772 90 00 14 10 
              14 00 -  -  	.db %10010000, %00000000, %00010100, %00010000, %00010100, %00000000
  416 D1:E778 -  -  -  -  
  417 D1:E778 -  -  -  -  
  418 D1:E778 -  -  -  -  LeavesDark:
  419 D1:E778 10 -  -  -  	.db %00010000
  420 D1:E779 1A 15 -  -  	.db 26, 21
  421 D1:E77B 00 0F 00 00 
              0F FC 00 3F 	.db %00000000, %00001111, %00000000, %00000000, %00001111, %11111100, %00000000, %00111111
  422 D1:E783 FF C0 0F FF 
              FC 0F FF FF 	.db %11111111, %11000000, %00001111, %11111111, %11111100, %00001111, %11111111, %11111111
  423 D1:E78B 03 FF FF C3 
              FF FF F0 FF 	.db %00000011, %11111111, %11111111, %11000011, %11111111, %11111111, %11110000, %11111111
  424 D1:E793 FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  425 D1:E79B FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  426 D1:E7A3 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  427 D1:E7AB FF FF FF FF 
              3F FF FF CF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111, %11001111
  428 D1:E7B3 FF FF C0 3F 
              FF F0 0F FF 	.db %11111111, %11111111, %11000000, %00111111, %11111111, %11110000, %00001111, %11111111
  429 D1:E7BB F0 00 FF F0 
              00 -  -  -  	.db %11110000, %00000000, %11111111, %11110000, %00000000
  430 D1:E7C0 -  -  -  -  
  431 D1:E7C0 54 -  -  -  	.db %01010100
  432 D1:E7C1 -  -  -  -  
  433 D1:E7C1 4A A1 54 02 
              A9 40 55 20 	.db %01001010, %10100001, %01010100, %00000010, %10101001, %01000000, %01010101, %00100000
  434 D1:E7C9 0A 24 80 02 
              20 02 20 10 	.db %00001010, %00100100, %10000000, %00000010, %00100000, %00000010, %00100000, %00010000
  435 D1:E7D1 00 84 40 00 
              00 00 00 00 	.db %00000000, %10000100, %01000000, %00000000, %00000000, %00000000, %00000000, %00000000
  436 D1:E7D9 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  437 D1:E7E1 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  438 D1:E7E9 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  439 D1:E7F1 00 00 00 00 
              00 00 -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  440 D1:E7F7 -  -  -  -  
  441 D1:E7F7 -  -  -  -  
  442 D1:E7F7 -  -  -  -  Leaves2:
  443 D1:E7F7 20 -  -  -  	.db %00100000
  444 D1:E7F8 1A 12 -  -  	.db 26, 18
  445 D1:E7FA 0F 00 00 0F 
              F0 0F 03 FC 	.db %00001111, %00000000, %00000000, %00001111, %11110000, %00001111, %00000011, %11111100
  446 D1:E802 0F F3 FF FF 
              FC FF FF FF 	.db %00001111, %11110011, %11111111, %11111111, %11111100, %11111111, %11111111, %11111111
  447 D1:E80A 3F FF FF FF 
              FF FF FF FF 	.db %00111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  448 D1:E812 FF FF FF FF 
              FF CF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11001111, %11111111, %11111111
  449 D1:E81A F3 FF FF F0 
              FF FF FC 3F 	.db %11110011, %11111111, %11111111, %11110000, %11111111, %11111111, %11111100, %00111111
  450 D1:E822 FF FF 0F FF 
              FF 00 FF FF 	.db %11111111, %11111111, %00001111, %11111111, %11111111, %00000000, %11111111, %11111111
  451 D1:E82A C0 3F FF F0 
              03 FF F0 00 	.db %11000000, %00111111, %11111111, %11110000, %00000011, %11111111, %11110000, %00000000
  452 D1:E832 0F F0 00 -  	.db %00001111, %11110000, %00000000
  453 D1:E835 -  -  -  -  
  454 D1:E835 48 50 -  -  	.db %01001000, %01010000
  455 D1:E837 -  -  -  -  
  456 D1:E837 00 01 00 00 
              04 40 01 00 	.db %00000000, %00000001, %00000000, %00000000, %00000100, %01000000, %00000001, %00000000
  457 D1:E83F 01 11 00 00 
              14 40 00 40 	.db %00000001, %00010001, %00000000, %00000000, %00010100, %01000000, %00000000, %01000000
  458 D1:E847 00 00 04 10 
              00 00 00 00 	.db %00000000, %00000000, %00000100, %00010000, %00000000, %00000000, %00000000, %00000000
  459 D1:E84F 11 00 00 00 
              00 00 00 00 	.db %00010001, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  460 D1:E857 00 A2 00 02 
              88 80 02 0A 	.db %00000000, %10100010, %00000000, %00000010, %10001000, %10000000, %00000010, %00001010
  461 D1:E85F 88 0A 8A A2 
              20 88 A2 28 	.db %10001000, %00001010, %10001010, %10100010, %00100000, %10001000, %10100010, %00101000
  462 D1:E867 AA AA 88 8A 
              A8 A2 AA AA 	.db %10101010, %10101010, %10001000, %10001010, %10101000, %10100010, %10101010, %10101010
  463 D1:E86F A2 2A AA AA 
              AA AA AA AA 	.db %10100010, %00101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  464 D1:E877 AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  465 D1:E87F AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  466 D1:E887 AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  467 D1:E88F -  -  -  -  
  468 D1:E88F -  -  -  -  
  469 D1:E88F -  -  -  -  LeavesLight:
  470 D1:E88F 10 -  -  -  	.db %00010000
  471 D1:E890 1A 15 -  -  	.db 26, 21
  472 D1:E892 00 0F 00 00 
              0F FC 00 3F 	.db %00000000, %00001111, %00000000, %00000000, %00001111, %11111100, %00000000, %00111111
  473 D1:E89A FF C0 0F FF 
              FC 0F FF FF 	.db %11111111, %11000000, %00001111, %11111111, %11111100, %00001111, %11111111, %11111111
  474 D1:E8A2 03 FF FF C3 
              FF FF F0 FF 	.db %00000011, %11111111, %11111111, %11000011, %11111111, %11111111, %11110000, %11111111
  475 D1:E8AA FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  476 D1:E8B2 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  477 D1:E8BA FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  478 D1:E8C2 FF FF FF FF 
              3F FF FF CF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111, %11001111
  479 D1:E8CA FF FF C0 3F 
              FF F0 0F FF 	.db %11111111, %11111111, %11000000, %00111111, %11111111, %11110000, %00001111, %11111111
  480 D1:E8D2 F0 00 FF F0 
              00 -  -  -  	.db %11110000, %00000000, %11111111, %11110000, %00000000
  481 D1:E8D7 -  -  -  -  
  482 D1:E8D7 48 -  -  -  	.db %01001000
  483 D1:E8D8 -  -  -  -  
  484 D1:E8D8 4A A1 54 02 
              A9 40 55 20 	.db %01001010, %10100001, %01010100, %00000010, %10101001, %01000000, %01010101, %00100000
  485 D1:E8E0 0A 24 80 02 
              20 02 20 10 	.db %00001010, %00100100, %10000000, %00000010, %00100000, %00000010, %00100000, %00010000
  486 D1:E8E8 00 84 40 00 
              00 00 00 00 	.db %00000000, %10000100, %01000000, %00000000, %00000000, %00000000, %00000000, %00000000
  487 D1:E8F0 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  488 D1:E8F8 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  489 D1:E900 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  490 D1:E908 00 00 00 00 
              00 00 -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  491 D1:E90E -  -  -  -  
  492 D1:E90E -  -  -  -  
  493 D1:E90E -  -  -  -  Branches_11:
  494 D1:E90E 20 -  -  -  	.db %00100000
  495 D1:E90F 12 0A -  -  	.db 18, 10
  496 D1:E911 00 03 C3 CF 
              FF FF FF FF 	.db %00000000, %00000011, %11000011, %11001111, %11111111, %11111111, %11111111, %11111111
  497 D1:E919 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  498 D1:E921 FF FF 03 F3 
              C0 00 30 -  	.db %11111111, %11111111, %00000011, %11110011, %11000000, %00000000, %00110000
  499 D1:E928 -  -  -  -  
  500 D1:E928 01 32 -  -  	.db %00000001, %00110010
  501 D1:E92A -  -  -  -  
  502 D1:E92A 00 00 00 15 
              00 00 05 44 	.db %00000000, %00000000, %00000000, %00010101, %00000000, %00000000, %00000101, %01000100
  503 D1:E932 15 65 55 04 
              10 FB FA 3F 	.db %00010101, %01100101, %01010101, %00000100, %00010000, %11111011, %11111010, %00111111
  504 D1:E93A FF B7 D3 FB 
              EA BE 15 54 	.db %11111111, %10110111, %11010011, %11111011, %11101010, %10111110, %00010101, %01010100
  505 D1:E942 14 15 E0 00 
              14 10 15 00 	.db %00010100, %00010101, %11100000, %00000000, %00010100, %00010000, %00010101, %00000000
  506 D1:E94A 00 10 -  -  	.db %00000000, %00010000
  507 D1:E94C -  -  -  -  
  508 D1:E94C -  -  -  -  
  509 D1:E94C -  -  -  -  Branches_14:
  510 D1:E94C 20 -  -  -  	.db %00100000
  511 D1:E94D 06 0E -  -  	.db 6, 14
  512 D1:E94F 30 C3 0C 39 
              E7 9E FF FF 	.db %00110000, %11000011, %00001100, %00111001, %11100111, %10011110, %11111111, %11111111
  513 D1:E957 FF FF F0 -  	.db %11111111, %11111111, %11110000
  514 D1:E95A -  -  -  -  
  515 D1:E95A 01 23 -  -  	.db %00000001, %00100011
  516 D1:E95C -  -  -  -  
  517 D1:E95C 00 00 10 20 
              20 20 1D 06 	.db %00000000, %00000000, %00010000, %00100000, %00100000, %00100000, %00011101, %00000110
  518 D1:E964 90 65 06 10 
              59 07 90 -  	.db %10010000, %01100101, %00000110, %00010000, %01011001, %00000111, %10010000
  519 D1:E96B -  -  -  -  
  520 D1:E96B -  -  -  -  
  521 D1:E96B -  -  -  -  Lantern_0:
  522 D1:E96B 20 -  -  -  	.db %00100000
  523 D1:E96C 08 18 -  -  	.db 8, 24
  524 D1:E96E FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  525 D1:E976 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  526 D1:E97E FF FF FF FF 
              FF FF FF FC 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111100
  527 D1:E986 -  -  -  -  
  528 D1:E986 EA D3 -  -  	.db %11101010, %11010011
  529 D1:E988 -  -  -  -  
  530 D1:E988 00 05 50 09 
              55 4A 55 45 	.db %00000000, %00000101, %01010000, %00001001, %01010101, %01001010, %01010101, %01000101
  531 D1:E990 50 00 03 4A 
              FF 4A AF 4A 	.db %01010000, %00000000, %00000011, %01001010, %11111111, %01001010, %10101111, %01001010
  532 D1:E998 EC 00 03 4A 
              AF 4A BB 4A 	.db %11101100, %00000000, %00000011, %01001010, %10101111, %01001010, %10111011, %01001010
  533 D1:E9A0 AC 00 03 4A 
              BB 4A AF 4A 	.db %10101100, %00000000, %00000011, %01001010, %10111011, %01001010, %10101111, %01001010
  534 D1:E9A8 A8 00 03 4A 
              AB 4A AB 4A 	.db %10101000, %00000000, %00000011, %01001010, %10101011, %01001010, %10101011, %01001010
  535 D1:E9B0 EF 4A AB 4A 
              AD 00 00 -  	.db %11101111, %01001010, %10101011, %01001010, %10101101, %00000000, %00000000
  536 D1:E9B7 -  -  -  -  
  537 D1:E9B7 -  -  -  -  
  538 D1:E9B7 -  -  -  -  Lantern_1:
  539 D1:E9B7 20 -  -  -  	.db %00100000
  540 D1:E9B8 08 18 -  -  	.db 8, 24
  541 D1:E9BA FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  542 D1:E9C2 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  543 D1:E9CA FF FF FF FF 
              FF FF FF FC 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111100
  544 D1:E9D2 -  -  -  -  
  545 D1:E9D2 EA 3D -  -  	.db %11101010, %00111101
  546 D1:E9D4 -  -  -  -  
  547 D1:E9D4 00 05 50 09 
              55 4E 55 45 	.db %00000000, %00000101, %01010000, %00001001, %01010101, %01001110, %01010101, %01000101
  548 D1:E9DC 50 00 02 4E 
              BA 4E EA 4F 	.db %01010000, %00000000, %00000010, %01001110, %10111010, %01001110, %11101010, %01001111
  549 D1:E9E4 E8 00 02 4F 
              BA 4F EA 4F 	.db %11101000, %00000000, %00000010, %01001111, %10111010, %01001111, %11101010, %01001111
  550 D1:E9EC F8 00 02 4F 
              EE 4F FA 4F 	.db %11111000, %00000000, %00000010, %01001111, %11101110, %01001111, %11111010, %01001111
  551 D1:E9F4 E8 00 02 4F 
              EE 4F EA 4F 	.db %11101000, %00000000, %00000010, %01001111, %11101110, %01001111, %11101010, %01001111
  552 D1:E9FC FA 4F BE 4F 
              E9 00 00 -  	.db %11111010, %01001111, %10111110, %01001111, %11101001, %00000000, %00000000
  553 D1:EA03 -  -  -  -  
  554 D1:EA03 -  -  -  -  
  555 D1:EA03 -  -  -  -  Lantern_2:
  556 D1:EA03 20 -  -  -  	.db %00100000
  557 D1:EA04 08 18 -  -  	.db 8, 24
  558 D1:EA06 FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  559 D1:EA0E FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  560 D1:EA16 FF FF FF FF 
              FF FF FF FC 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111100
  561 D1:EA1E -  -  -  -  
  562 D1:EA1E EA 3D -  -  	.db %11101010, %00111101
  563 D1:EA20 -  -  -  -  
  564 D1:EA20 00 05 50 09 
              55 4A 55 45 	.db %00000000, %00000101, %01010000, %00001001, %01010101, %01001010, %01010101, %01000101
  565 D1:EA28 50 00 02 4A 
              AA 4F AA 4E 	.db %01010000, %00000000, %00000010, %01001010, %10101010, %01001111, %10101010, %01001110
  566 D1:EA30 E8 00 02 4F 
              AA 4F AA 4E 	.db %11101000, %00000000, %00000010, %01001111, %10101010, %01001111, %10101010, %01001110
  567 D1:EA38 E8 00 02 4F 
              AA 4F EA 4F 	.db %11101000, %00000000, %00000010, %01001111, %10101010, %01001111, %11101010, %01001111
  568 D1:EA40 B8 00 02 4F 
              EA 4F EA 4F 	.db %10111000, %00000000, %00000010, %01001111, %11101010, %01001111, %11101010, %01001111
  569 D1:EA48 AA 4F EA 4E 
              E9 00 00 -  	.db %10101010, %01001111, %11101010, %01001110, %11101001, %00000000, %00000000
  570 D1:EA4F -  -  -  -  
  571 D1:EA4F -  -  -  -  
  572 D1:EA4F -  -  -  -  Lantern_6:
  573 D1:EA4F 20 -  -  -  	.db %00100000
  574 D1:EA50 07 15 -  -  	.db 7, 21
  575 D1:EA52 10 20 47 CF 
              DF FF FF FF 	.db %00010000, %00100000, %01000111, %11001111, %11011111, %11111111, %11111111, %11111111
  576 D1:EA5A FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  577 D1:EA62 F2 44 80 -  	.db %11110010, %01000100, %10000000
  578 D1:EA65 -  -  -  -  
  579 D1:EA65 9A ED -  -  	.db %10011010, %11101101
  580 D1:EA67 -  -  -  -  
  581 D1:EA67 01 99 A9 9A 
              E6 BA A9 EA 	.db %00000001, %10011001, %10101001, %10011010, %11100110, %10111010, %10101001, %11101010
  582 D1:EA6F DB FE 9F E9 
              BE B9 FA 9A 	.db %11011011, %11111110, %10011111, %11101001, %10111110, %10111001, %11111010, %10011010
  583 D1:EA77 FA 9A ED AA 
              A9 AB 9A EA 	.db %11111010, %10011010, %11101101, %10101010, %10101001, %10101011, %10011010, %11101010
  584 D1:EA7F 9A 69 66 96 
              A8 -  -  -  	.db %10011010, %01101001, %01100110, %10010110, %10101000
  585 D1:EA84 -  -  -  -  
  586 D1:EA84 -  -  -  -  
  587 D1:EA84 -  -  -  -  Lantern_5:
  588 D1:EA84 20 -  -  -  	.db %00100000
  589 D1:EA85 07 15 -  -  	.db 7, 21
  590 D1:EA87 10 20 47 CF 
              DF FF FF FF 	.db %00010000, %00100000, %01000111, %11001111, %11011111, %11111111, %11111111, %11111111
  591 D1:EA8F FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  592 D1:EA97 F2 44 80 -  	.db %11110010, %01000100, %10000000
  593 D1:EA9A -  -  -  -  
  594 D1:EA9A 9A ED -  -  	.db %10011010, %11101101
  595 D1:EA9C -  -  -  -  
  596 D1:EA9C 01 99 A9 9A 
              A6 AF A9 EB 	.db %00000001, %10011001, %10101001, %10011010, %10100110, %10101111, %10101001, %11101011
  597 D1:EAA4 9A FB 99 ED 
              AA B9 EE DA 	.db %10011010, %11111011, %10011001, %11101101, %10101010, %10111001, %11101110, %11011010
  598 D1:EAAC EB 9A B9 BF 
              A9 AA 9A AA 	.db %11101011, %10011010, %10111001, %10111111, %10101001, %10101010, %10011010, %10101010
  599 D1:EAB4 9A 69 66 96 
              A8 -  -  -  	.db %10011010, %01101001, %01100110, %10010110, %10101000
  600 D1:EAB9 -  -  -  -  
  601 D1:EAB9 -  -  -  -  
  602 D1:EAB9 -  -  -  -  Branches_4:
  603 D1:EAB9 20 -  -  -  	.db %00100000
  604 D1:EABA 12 0E -  -  	.db 18, 14
  605 D1:EABC 00 03 CF FF 
              FF FF FF FF 	.db %00000000, %00000011, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111
  606 D1:EAC4 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  607 D1:EACC FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  608 D1:EAD4 FF FF FF 3F 
              FF C0 FF 30 	.db %11111111, %11111111, %11111111, %00111111, %11111111, %11000000, %11111111, %00110000
  609 D1:EADC -  -  -  -  
  610 D1:EADC 01 23 -  -  	.db %00000001, %00100011
  611 D1:EADE -  -  -  -  
  612 D1:EADE 00 00 00 00 
              00 00 50 45 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %01010000, %01000101
  613 D1:EAE6 01 55 50 00 
              25 00 14 16 	.db %00000001, %01010101, %01010000, %00000000, %00100101, %00000000, %00010100, %00010110
  614 D1:EAEE 11 45 5A 19 
              2A AA 58 3F 	.db %00010001, %01000101, %01011010, %00011001, %00101010, %10101010, %01011000, %00111111
  615 D1:EAF6 AA AA AF FE 
              BD FF DF E2 	.db %10101010, %10101010, %10101111, %11111110, %10111101, %11111111, %11011111, %11100010
  616 D1:EAFE 55 64 02 AA 
              60 00 05 50 	.db %01010101, %01100100, %00000010, %10101010, %01100000, %00000000, %00000101, %01010000
  617 D1:EB06 54 15 54 00 
              00 00 00 05 	.db %01010100, %00010101, %01010100, %00000000, %00000000, %00000000, %00000000, %00000101
  618 D1:EB0E 10 55 00 00 
              00 00 00 00 	.db %00010000, %01010101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  619 D1:EB16 00 -  -  -  	.db %00000000
  620 D1:EB17 -  -  -  -  
  621 D1:EB17 -  -  -  -  
  622 D1:EB17 -  -  -  -  Vine5:
  623 D1:EB17 10 -  -  -  	.db %00010000
  624 D1:EB18 13 10 -  -  	.db 19, 16
  625 D1:EB1A 00 00 40 00 
              0C 00 C3 80 	.db %00000000, %00000000, %01000000, %00000000, %00001100, %00000000, %11000011, %10000000
  626 D1:EB22 1D F0 00 FC 
              00 3F 0C 1F 	.db %00011101, %11110000, %00000000, %11111100, %00000000, %00111111, %00001100, %00011111
  627 D1:EB2A C1 CF F0 1B 
              FF 01 FC 73 	.db %11000001, %11001111, %11110000, %00011011, %11111111, %00000001, %11111100, %01110011
  628 D1:EB32 FE 0C 7F E0 
              0F E6 00 80 	.db %11111110, %00001100, %01111111, %11100000, %00001111, %11100110, %00000000, %10000000
  629 D1:EB3A C0 30 00 06 
              00 00 -  -  	.db %11000000, %00110000, %00000000, %00000110, %00000000, %00000000
  630 D1:EB40 -  -  -  -  
  631 D1:EB40 54 -  -  -  	.db %01010100
  632 D1:EB41 -  -  -  -  
  633 D1:EB41 1C F8 E3 8F 
              47 E0 F0 0E 	.db %00011100, %11111000, %11100011, %10001111, %01000111, %11100000, %11110000, %00001110
  634 D1:EB49 83 E8 6A 00 
              00 00 -  -  	.db %10000011, %11101000, %01101010, %00000000, %00000000, %00000000
  635 D1:EB4F -  -  -  -  
  636 D1:EB4F -  -  -  -  
  637 D1:EB4F -  -  -  -  Vine6:
  638 D1:EB4F 10 -  -  -  	.db %00010000
  639 D1:EB50 15 0A -  -  	.db 21, 10
  640 D1:EB52 30 08 01 80 
              E0 08 06 01 	.db %00110000, %00001000, %00000001, %10000000, %11100000, %00001000, %00000110, %00000001
  641 D1:EB5A C1 E1 FF FF 
              FF FF FF FF 	.db %11000001, %11100001, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  642 D1:EB62 FF FF C4 08 
              06 60 E0 62 	.db %11111111, %11111111, %11000100, %00001000, %00000110, %01100000, %11100000, %01100010
  643 D1:EB6A 03 03 00 -  	.db %00000011, %00000011, %00000000
  644 D1:EB6D -  -  -  -  
  645 D1:EB6D 45 -  -  -  	.db %01000101
  646 D1:EB6E -  -  -  -  
  647 D1:EB6E 00 00 00 00 
              00 0E 5B AB 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001110, %01011011, %10101011
  648 D1:EB76 FF FF FF FF 
              F8 -  -  -  	.db %11111111, %11111111, %11111111, %11111111, %11111000
  649 D1:EB7B -  -  -  -  
  650 D1:EB7B -  -  -  -  
  651 D1:EB7B -  -  -  -  Vine4:
  652 D1:EB7B 10 -  -  -  	.db %00010000
  653 D1:EB7C 13 12 -  -  	.db 19, 18
  654 D1:EB7E 00 18 E0 03 
              FC 00 0F 80 	.db %00000000, %00011000, %11100000, %00000011, %11111100, %00000000, %00001111, %10000000
  655 D1:EB86 03 C0 20 F0 
              06 3F 80 FF 	.db %00000011, %11000000, %00100000, %11110000, %00000110, %00111111, %10000000, %11111111
  656 D1:EB8E 70 07 C0 01 
              F0 00 7C 00 	.db %01110000, %00000111, %11000000, %00000001, %11110000, %00000000, %01111100, %00000000
  657 D1:EB96 6F 80 0F 98 
              00 E7 00 1C 	.db %01101111, %10000000, %00001111, %10011000, %00000000, %11100111, %00000000, %00011100
  658 D1:EB9E 60 07 80 01 
              E0 00 78 00 	.db %01100000, %00000111, %10000000, %00000001, %11100000, %00000000, %01111000, %00000000
  659 D1:EBA6 1E 00 00 -  	.db %00011110, %00000000, %00000000
  660 D1:EBA9 -  -  -  -  
  661 D1:EBA9 45 -  -  -  	.db %01000101
  662 D1:EBAA -  -  -  -  
  663 D1:EBAA 08 3A D4 61 
              F0 3E 52 94 	.db %00001000, %00111010, %11010100, %01100001, %11110000, %00111110, %01010010, %10010100
  664 D1:EBB2 78 F3 DE E6 
              66 -  -  -  	.db %01111000, %11110011, %11011110, %11100110, %01100110
  665 D1:EBB7 -  -  -  -  
  666 D1:EBB7 -  -  -  -  
  667 D1:EBB7 -  -  -  -  Vine7:
  668 D1:EBB7 10 -  -  -  	.db %00010000
  669 D1:EBB8 0F 0A -  -  	.db 15, 10
  670 D1:EBBA 06 01 9C 03 
              B0 1F C0 F7 	.db %00000110, %00000001, %10011100, %00000011, %10110000, %00011111, %11000000, %11110111
  671 D1:EBC2 E3 E7 FF 8F 
              FE 39 F4 60 	.db %11100011, %11100111, %11111111, %10001111, %11111110, %00111001, %11110100, %01100000
  672 D1:EBCA 0E 00 1C -  	.db %00001110, %00000000, %00011100
  673 D1:EBCD -  -  -  -  
  674 D1:EBCD 45 -  -  -  	.db %01000101
  675 D1:EBCE -  -  -  -  
  676 D1:EBCE 01 83 03 E0 
              FC 1F FF FF 	.db %00000001, %10000011, %00000011, %11100000, %11111100, %00011111, %11111111, %11111111
  677 D1:EBD6 FF C0 -  -  	.db %11111111, %11000000
  678 D1:EBD8 -  -  -  -  
  679 D1:EBD8 -  -  -  -  
  680 D1:EBD8 -  -  -  -  Vine2:
  681 D1:EBD8 10 -  -  -  	.db %00010000
  682 D1:EBD9 0B 10 -  -  	.db 11, 16
  683 D1:EBDB 00 60 1C 07 
              89 C3 F8 2E 	.db %00000000, %01100000, %00011100, %00000111, %10001001, %11000011, %11111000, %00101110
  684 D1:EBE3 01 C0 7E CE 
              DF 80 70 0E 	.db %00000001, %11000000, %01111110, %11001110, %11011111, %10000000, %01110000, %00001110
  685 D1:EBEB 81 F8 3B 3F 
              06 E0 -  -  	.db %10000001, %11111000, %00111011, %00111111, %00000110, %11100000
  686 D1:EBF1 -  -  -  -  
  687 D1:EBF1 45 -  -  -  	.db %01000101
  688 D1:EBF2 -  -  -  -  
  689 D1:EBF2 01 88 33 27 
              8F 01 B9 EF 	.db %00000001, %10001000, %00110011, %00100111, %10001111, %00000001, %10111001, %11101111
  690 D1:EBFA 04 60 -  -  	.db %00000100, %01100000
  691 D1:EBFC -  -  -  -  
  692 D1:EBFC -  -  -  -  
  693 D1:EBFC -  -  -  -  VineVertical:
  694 D1:EBFC 10 -  -  -  	.db %00010000
  695 D1:EBFD 0A 12 -  -  	.db 10, 18
  696 D1:EBFF 0E 03 80 E0 
              3B 0F DB F7 	.db %00001110, %00000011, %10000000, %11100000, %00111011, %00001111, %11011011, %11110111
  697 D1:EC07 E9 F0 1C 07 
              0F D3 7E 1D 	.db %11101001, %11110000, %00011100, %00000111, %00001111, %11010011, %01111110, %00011101
  698 D1:EC0F 07 05 C3 F0 
              5C 07 00 -  	.db %00000111, %00000101, %11000011, %11110000, %01011100, %00000111, %00000000
  699 D1:EC16 -  -  -  -  
  700 D1:EC16 45 -  -  -  	.db %01000101
  701 D1:EC17 -  -  -  -  
  702 D1:EC17 2D 9D F0 F0 
              E3 2C 18 F9 	.db %00101101, %10011101, %11110000, %11110000, %11100011, %00101100, %00011000, %11111001
  703 D1:EC1F B1 0C C8 -  	.db %10110001, %00001100, %11001000
  704 D1:EC22 -  -  -  -  
  705 D1:EC22 -  -  -  -  
  706 D1:EC22 -  -  -  -  Branches_5:
  707 D1:EC22 20 -  -  -  	.db %00100000
  708 D1:EC23 12 0E -  -  	.db 18, 14
  709 D1:EC25 00 C0 CF FF 
              FF FF FF FF 	.db %00000000, %11000000, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111
  710 D1:EC2D FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  711 D1:EC35 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  712 D1:EC3D FF FF FF 3F 
              FF C3 C3 F0 	.db %11111111, %11111111, %11111111, %00111111, %11111111, %11000011, %11000011, %11110000
  713 D1:EC45 -  -  -  -  
  714 D1:EC45 01 23 -  -  	.db %00000001, %00100011
  715 D1:EC47 -  -  -  -  
  716 D1:EC47 00 00 00 00 
              01 00 05 05 	.db %00000000, %00000000, %00000000, %00000000, %00000001, %00000000, %00000101, %00000101
  717 D1:EC4F 41 41 45 40 
              00 01 15 45 	.db %01000001, %01000001, %01000101, %01000000, %00000000, %00000001, %00010101, %01000101
  718 D1:EC57 55 45 65 A5 
              AA 66 AA FA 	.db %01010101, %01000101, %01100101, %10100101, %10101010, %01100110, %10101010, %11111010
  719 D1:EC5F F9 FF BF FE 
              AA F6 BA 99 	.db %11111001, %11111111, %10111111, %11111110, %10101010, %11110110, %10111010, %10011001
  720 D1:EC67 50 55 55 55 
              51 50 00 01 	.db %01010000, %01010101, %01010101, %01010101, %01010001, %01010000, %00000000, %00000001
  721 D1:EC6F 54 51 41 50 
              00 00 01 40 	.db %01010100, %01010001, %01000001, %01010000, %00000000, %00000000, %00000001, %01000000
  722 D1:EC77 15 45 00 00 
              00 00 00 00 	.db %00010101, %01000101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  723 D1:EC7F 00 -  -  -  	.db %00000000
  724 D1:EC80 -  -  -  -  
  725 D1:EC80 -  -  -  -  
  726 D1:EC80 -  -  -  -  Branches_3:
  727 D1:EC80 20 -  -  -  	.db %00100000
  728 D1:EC81 12 0E -  -  	.db 18, 14
  729 D1:EC83 0F CF FF FF 
              FF FF FF FF 	.db %00001111, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  730 D1:EC8B FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  731 D1:EC93 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  732 D1:EC9B FF FF FF FF 
              3F FF 00 F0 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %00000000, %11110000
  733 D1:ECA3 -  -  -  -  
  734 D1:ECA3 01 23 -  -  	.db %00000001, %00100011
  735 D1:ECA5 -  -  -  -  
  736 D1:ECA5 00 00 00 00 
              50 00 15 55 	.db %00000000, %00000000, %00000000, %00000000, %01010000, %00000000, %00010101, %01010101
  737 D1:ECAD 50 15 00 00 
              00 00 00 65 	.db %01010000, %00010101, %00000000, %00000000, %00000000, %00000000, %00000000, %01100101
  738 D1:ECB5 05 98 A2 55 
              05 AA 32 AA 	.db %00000101, %10011000, %10100010, %01010101, %00000101, %10101010, %00110010, %10101010
  739 D1:ECBD BD 4B FF FF 
              FF BF EA 95 	.db %10111101, %01001011, %11111111, %11111111, %11111111, %10111111, %11101010, %10010101
  740 D1:ECC5 5E AA E6 55 
              A9 55 6A 56 	.db %01011110, %10101010, %11100110, %01010101, %10101001, %01010101, %01101010, %01010110
  741 D1:ECCD 40 12 50 00 
              00 50 01 54 	.db %01000000, %00010010, %01010000, %00000000, %00000000, %01010000, %00000001, %01010100
  742 D1:ECD5 15 54 00 15 
              40 00 00 00 	.db %00010101, %01010100, %00000000, %00010101, %01000000, %00000000, %00000000, %00000000
  743 D1:ECDD 40 00 00 -  	.db %01000000, %00000000, %00000000
  744 D1:ECE0 -  -  -  -  
  745 D1:ECE0 -  -  -  -  
  746 D1:ECE0 -  -  -  -  Branches_2:
  747 D1:ECE0 20 -  -  -  	.db %00100000
  748 D1:ECE1 12 0E -  -  	.db 18, 14
  749 D1:ECE3 0F C3 FF FF 
              FF FF FF FF 	.db %00001111, %11000011, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  750 D1:ECEB FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  751 D1:ECF3 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  752 D1:ECFB FF FF FF FF 
              FF F3 0F 30 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11110011, %00001111, %00110000
  753 D1:ED03 -  -  -  -  
  754 D1:ED03 01 32 -  -  	.db %00000001, %00110010
  755 D1:ED05 -  -  -  -  
  756 D1:ED05 00 00 00 00 
              50 00 00 05 	.db %00000000, %00000000, %00000000, %00000000, %01010000, %00000000, %00000000, %00000101
  757 D1:ED0D 54 15 55 45 
              40 00 00 00 	.db %01010100, %00010101, %01010101, %01000101, %01000000, %00000000, %00000000, %00000000
  758 D1:ED15 55 55 14 05 
              59 FF FD 55 	.db %01010101, %01010101, %00010100, %00000101, %01011001, %11111111, %11111101, %01010101
  759 D1:ED1D 47 EA AA AE 
              FF EF FF F6 	.db %01000111, %11101010, %10101010, %10101110, %11111111, %11101111, %11111111, %11110110
  760 D1:ED25 AA AA 5D 07 
              F4 FF F5 55 	.db %10101010, %10101010, %01011101, %00000111, %11110100, %11111111, %11110101, %01010101
  761 D1:ED2D 05 55 75 15 
              15 55 00 00 	.db %00000101, %01010101, %01110101, %00010101, %00010101, %01010101, %00000000, %00000000
  762 D1:ED35 01 00 05 50 
              00 40 05 50 	.db %00000001, %00000000, %00000101, %01010000, %00000000, %01000000, %00000101, %01010000
  763 D1:ED3D 00 00 00 -  	.db %00000000, %00000000, %00000000
  764 D1:ED40 -  -  -  -  
  765 D1:ED40 -  -  -  -  
  766 D1:ED40 -  -  -  -  Lantern_3:
  767 D1:ED40 20 -  -  -  	.db %00100000
  768 D1:ED41 07 15 -  -  	.db 7, 21
  769 D1:ED43 10 20 47 CF 
              DF FF FF FF 	.db %00010000, %00100000, %01000111, %11001111, %11011111, %11111111, %11111111, %11111111
  770 D1:ED4B FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  771 D1:ED53 F2 44 80 -  	.db %11110010, %01000100, %10000000
  772 D1:ED56 -  -  -  -  
  773 D1:ED56 9A ED -  -  	.db %10011010, %11101101
  774 D1:ED58 -  -  -  -  
  775 D1:ED58 01 99 A9 9E 
              A6 BE A9 FE 	.db %00000001, %10011001, %10101001, %10011110, %10100110, %10111110, %10101001, %11111110
  776 D1:ED60 9B BE 9E A9 
              BB A9 EB 9B 	.db %10011011, %10111110, %10011110, %10101001, %10111011, %10101001, %11101011, %10011011
  777 D1:ED68 BA 9E B9 BB 
              A9 AB 9A AA 	.db %10111010, %10011110, %10111001, %10111011, %10101001, %10101011, %10011010, %10101010
  778 D1:ED70 9A 69 66 96 
              A8 -  -  -  	.db %10011010, %01101001, %01100110, %10010110, %10101000
  779 D1:ED75 -  -  -  -  
  780 D1:ED75 -  -  -  -  
  781 D1:ED75 -  -  -  -  GroundDirtFull:
  782 D1:ED75 24 -  -  -  	.db %00100100
  783 D1:ED76 10 10 -  -  	.db 16, 16
  784 D1:ED78 15 00 -  -  	.db %00010101, %00000000
  785 D1:ED7A -  -  -  -  
  786 D1:ED7A 04 00 00 00 
              04 00 00 00 	.db %00000100, %00000000, %00000000, %00000000, %00000100, %00000000, %00000000, %00000000
  787 D1:ED82 AA AA 40 4A 
              21 12 10 24 	.db %10101010, %10101010, %01000000, %01001010, %00100001, %00010010, %00010000, %00100100
  788 D1:ED8A 01 01 00 04 
              44 2A A8 10 	.db %00000001, %00000001, %00000000, %00000100, %01000100, %00101010, %10101000, %00010000
  789 D1:ED92 10 A5 0A 80 
              04 00 00 A1 	.db %00010000, %10100101, %00001010, %10000000, %00000100, %00000000, %00000000, %10100001
  790 D1:ED9A 84 40 00 61 
              10 10 00 10 	.db %10000100, %01000000, %00000000, %01100001, %00010000, %00010000, %00000000, %00010000
  791 D1:EDA2 0A AA 94 00 
              29 10 12 84 	.db %00001010, %10101010, %10010100, %00000000, %00101001, %00010000, %00010010, %10000100
  792 D1:EDAA 10 00 42 84 
              01 29 00 80 	.db %00010000, %00000000, %01000010, %10000100, %00000001, %00101001, %00000000, %10000000
  793 D1:EDB2 04 A1 40 8A 
              A0 00 00 00 	.db %00000100, %10100001, %01000000, %10001010, %10100000, %00000000, %00000000, %00000000
  794 D1:EDBA -  -  -  -  
  795 D1:EDBA -  -  -  -  
  796 D1:EDBA -  -  -  -  GroundDirtMound:
  797 D1:EDBA 20 -  -  -  	.db %00100000
  798 D1:EDBB 10 0C -  -  	.db 16, 12
  799 D1:EDBD 0F F0 3F FC 
              FF FF FF FF 	.db %00001111, %11110000, %00111111, %11111100, %11111111, %11111111, %11111111, %11111111
  800 D1:EDC5 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  801 D1:EDCD FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  802 D1:EDD5 -  -  -  -  
  803 D1:EDD5 01 50 -  -  	.db %00000001, %01010000
  804 D1:EDD7 -  -  -  -  
  805 D1:EDD7 00 00 05 55 
              50 05 56 59 	.db %00000000, %00000000, %00000101, %01010101, %01010000, %00000101, %01010110, %01011001
  806 D1:EDDF 50 55 96 5A 
              55 55 9A 56 	.db %01010000, %01010101, %10010110, %01011010, %01010101, %01010101, %10011010, %01010110
  807 D1:EDE7 56 A5 54 00 
              01 59 55 65 	.db %01010110, %10100101, %01010100, %00000000, %00000001, %01011001, %01010101, %01100101
  808 D1:EDEF 50 00 15 69 
              55 15 59 59 	.db %01010000, %00000000, %00010101, %01101001, %01010101, %00010101, %01011001, %01011001
  809 D1:EDF7 65 56 50 05 
              66 55 41 41 	.db %01100101, %01010110, %01010000, %00000101, %01100110, %01010101, %01000001, %01000001
  810 D1:EDFF A6 65 95 55 
              95 -  -  -  	.db %10100110, %01100101, %10010101, %01010101, %10010101
  811 D1:EE04 -  -  -  -  
  812 D1:EE04 -  -  -  -  
  813 D1:EE04 -  -  -  -  Tree_2:
  814 D1:EE04 10 -  -  -  	.db %00010000
  815 D1:EE05 1A 10 -  -  	.db 26, 16
  816 D1:EE07 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  817 D1:EE0F FF FF FF FF 
              FF 3F FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  818 D1:EE17 CF FF FF F3 
              FF FF FC FF 	.db %11001111, %11111111, %11111111, %11110011, %11111111, %11111111, %11111100, %11111111
  819 D1:EE1F FF FF 3F FF 
              FF CF FF FF 	.db %11111111, %11111111, %00111111, %11111111, %11111111, %11001111, %11111111, %11111111
  820 D1:EE27 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  821 D1:EE2F FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  822 D1:EE37 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  823 D1:EE3B -  -  -  -  
  824 D1:EE3B 01 -  -  -  	.db %00000001
  825 D1:EE3C -  -  -  -  
  826 D1:EE3C 01 12 40 80 
              4C DD 30 33 	.db %00000001, %00010010, %01000000, %10000000, %01001100, %11011101, %00110000, %00110011
  827 D1:EE44 27 CC 02 51 
              E4 02 59 D9 	.db %00100111, %11001100, %00000010, %01010001, %11100100, %00000010, %01011001, %11011001
  828 D1:EE4C 08 69 D9 01 
              69 9B 07 69 	.db %00001000, %01101001, %11011001, %00000001, %01101001, %10011011, %00000111, %01101001
  829 D1:EE54 1E 03 70 3E 
              03 D2 3E 00 	.db %00011110, %00000011, %01110000, %00111110, %00000011, %11010010, %00111110, %00000000
  830 D1:EE5C A5 5C 80 F9 
              75 60 1C 6D 	.db %10100101, %01011100, %10000000, %11111001, %01110101, %01100000, %00011100, %01101101
  831 D1:EE64 18 01 1B 86 
              02 46 69 41 	.db %00011000, %00000001, %00011011, %10000110, %00000010, %01000110, %01101001, %01000001
  832 D1:EE6C 91 82 40 -  	.db %10010001, %10000010, %01000000
  833 D1:EE6F -  -  -  -  
  834 D1:EE6F -  -  -  -  
  835 D1:EE6F -  -  -  -  Tree_4:
  836 D1:EE6F 24 -  -  -  	.db %00100100
  837 D1:EE70 1A 10 -  -  	.db 26, 16
  838 D1:EE72 01 20 -  -  	.db %00000001, %00100000
  839 D1:EE74 -  -  -  -  
  840 D1:EE74 14 45 40 15 
              54 25 61 44 	.db %00010100, %01000101, %01000000, %00010101, %01010100, %00100101, %01100001, %01000100
  841 D1:EE7C 14 05 55 00 
              41 11 01 45 	.db %00010100, %00000101, %01010101, %00000000, %01000001, %00010001, %00000001, %01000101
  842 D1:EE84 50 54 24 21 
              10 00 95 05 	.db %01010000, %01010100, %00100100, %00100001, %00010000, %00000000, %10010101, %00000101
  843 D1:EE8C 41 41 11 00 
              09 10 94 15 	.db %01000001, %01000001, %00010001, %00000000, %00001001, %00010000, %10010100, %00010101
  844 D1:EE94 11 11 00 95 
              09 49 45 10 	.db %00010001, %00010001, %00000000, %10010101, %00001001, %01001001, %01000101, %00010000
  845 D1:EE9C 01 09 50 94 
              95 51 00 50 	.db %00000001, %00001001, %01010000, %10010100, %10010101, %01010001, %00000000, %01010000
  846 D1:EEA4 95 09 49 45 
              40 45 09 40 	.db %10010101, %00001001, %01001001, %01000101, %01000000, %01000101, %00001001, %01000000
  847 D1:EEAC 90 95 54 01 
              50 A4 05 05 	.db %10010000, %10010101, %01010100, %00000001, %01010000, %10100100, %00000101, %00000101
  848 D1:EEB4 54 44 45 0A 
              42 50 55 00 	.db %01010100, %01000100, %01000101, %00001010, %01000010, %01010000, %01010101, %00000000
  849 D1:EEBC 10 54 14 95 
              41 02 04 11 	.db %00010000, %01010100, %00010100, %10010101, %01000001, %00000010, %00000100, %00010001
  850 D1:EEC4 52 49 51 00 
              20 51 11 10 	.db %01010010, %01001001, %01010001, %00000000, %00100000, %01010001, %00010001, %00010000
  851 D1:EECC 91 50 A5 05 
              11 12 15 54 	.db %10010001, %01010000, %10100101, %00000101, %00010001, %00010010, %00010101, %01010100
  852 D1:EED4 09 54 04 51 
              01 54 40 25 	.db %00001001, %01010100, %00000100, %01010001, %00000001, %01010100, %01000000, %00100101
  853 D1:EEDC -  -  -  -  
  854 D1:EEDC -  -  -  -  
  855 D1:EEDC -  -  -  -  Tree_7:
  856 D1:EEDC 24 -  -  -  	.db %00100100
  857 D1:EEDD 1A 10 -  -  	.db 26, 16
  858 D1:EEDF 10 23 -  -  	.db %00010000, %00100011
  859 D1:EEE1 -  -  -  -  
  860 D1:EEE1 10 05 08 28 
              85 28 81 62 	.db %00010000, %00000101, %00001000, %00101000, %10000101, %00101000, %10000001, %01100010
  861 D1:EEE9 5A 08 88 5C 
              BA 05 81 60 	.db %01011010, %00001000, %10001000, %01011100, %10111010, %00000101, %10000001, %01100000
  862 D1:EEF1 88 95 CA B1 
              58 06 A0 49 	.db %10001000, %10010101, %11001010, %10110001, %01011000, %00000110, %10100000, %01001001
  863 D1:EEF9 62 89 51 68 
              48 60 16 2A 	.db %01100010, %10001001, %01010001, %01101000, %01001000, %01100000, %00010110, %00101010
  864 D1:EF01 54 15 80 87 
              85 EA 96 00 	.db %01010100, %00010101, %10000000, %10000111, %10000101, %11101010, %10010110, %00000000
  865 D1:EF09 58 82 29 72 
              A1 C0 05 68 	.db %01011000, %10000010, %00101001, %01110010, %10100001, %11000000, %00000101, %01101000
  866 D1:EF11 2A 9E 22 1E 
              18 56 22 A5 	.db %00101010, %10011110, %00100010, %00011110, %00011000, %01010110, %00100010, %10100101
  867 D1:EF19 67 25 80 01 
              62 A9 55 72 	.db %01100111, %00100101, %10000000, %00000001, %01100010, %10101001, %01010101, %01110010
  868 D1:EF21 5A 06 15 8A 
              56 95 97 81 	.db %01011010, %00000110, %00010101, %10001010, %01010110, %10010101, %10010111, %10000001
  869 D1:EF29 00 51 25 A0 
              59 E5 00 15 	.db %00000000, %01010001, %00100101, %10100000, %01011001, %11100101, %00000000, %00010101
  870 D1:EF31 D2 02 A1 58 
              50 41 60 89 	.db %11010010, %00000010, %10100001, %01011000, %01010000, %01000001, %01100000, %10001001
  871 D1:EF39 28 97 96 10 
              16 08 A2 89 	.db %00101000, %10010111, %10010110, %00010000, %00010110, %00001000, %10100010, %10001001
  872 D1:EF41 7B 81 81 62 
              08 22 94 20 	.db %01111011, %10000001, %10000001, %01100010, %00001000, %00100010, %10010100, %00100000
  873 D1:EF49 -  -  -  -  
  874 D1:EF49 -  -  -  -  
  875 D1:EF49 -  -  -  -  Tree_9:
  876 D1:EF49 24 -  -  -  	.db %00100100
  877 D1:EF4A 1A 10 -  -  	.db 26, 16
  878 D1:EF4C 20 31 -  -  	.db %00100000, %00110001
  879 D1:EF4E -  -  -  -  
  880 D1:EF4E 14 95 0A A8 
              A8 35 B3 49 	.db %00010100, %10010101, %00001010, %10101000, %10101000, %00110101, %10110011, %01001001
  881 D1:EF56 D2 28 A8 8C 
              58 A0 56 EA 	.db %11010010, %00101000, %10101000, %10001100, %01011000, %10100000, %01010110, %11101010
  882 D1:EF5E AA C8 CD 82 
              17 B8 AA AC 	.db %10101010, %11001000, %11001101, %10000010, %00010111, %10111000, %10101010, %10101100
  883 D1:EF66 83 5B 25 6E 
              CA A8 23 35 	.db %10000011, %01011011, %00100101, %01101110, %11001010, %10101000, %00100011, %00110101
  884 D1:EF6E 88 68 2C 8A 
              A3 8D 60 C6 	.db %10001000, %01101000, %00101100, %10001010, %10100011, %10001101, %01100000, %11000110
  885 D1:EF76 C2 7A AB 0B 
              5A 0B 34 25 	.db %11000010, %01111010, %10101011, %00001011, %01011010, %00001011, %00110100, %00100101
  886 D1:EF7E AA B0 85 0A 
              23 79 52 AA 	.db %10101010, %10110000, %10000101, %00001010, %00100011, %01111001, %01010010, %10101010
  887 D1:EF86 21 63 BE 1E 
              21 68 AA 14 	.db %00100001, %01100011, %10111110, %00011110, %00100001, %01101000, %10101010, %00010100
  888 D1:EF8E 00 71 20 A5 
              EA B5 08 55 	.db %00000000, %01110001, %00100000, %10100101, %11101010, %10110101, %00001000, %01010101
  889 D1:EF96 80 88 16 2B 
              68 34 5E 20 	.db %10000000, %10001000, %00010110, %00101011, %01101000, %00110100, %01011110, %00100000
  890 D1:EF9E AB 48 AA 8D 
              CD A4 22 A2 	.db %10101011, %01001000, %10101010, %10001101, %11001101, %10100100, %00100010, %10100010
  891 D1:EFA6 8A 0F 5E D7 
              96 2A 28 88 	.db %10001010, %00001111, %01011110, %11010111, %10010110, %00101010, %00101000, %10001000
  892 D1:EFAE D7 81 79 42 
              AA A8 8D 63 	.db %11010111, %10000001, %01111001, %01000010, %10101010, %10101000, %10001101, %01100011
  893 D1:EFB6 -  -  -  -  
  894 D1:EFB6 -  -  -  -  
  895 D1:EFB6 -  -  -  -  Tree_6:
  896 D1:EFB6 24 -  -  -  	.db %00100100
  897 D1:EFB7 1A 10 -  -  	.db 26, 16
  898 D1:EFB9 01 23 -  -  	.db %00000001, %00100011
  899 D1:EFBB -  -  -  -  
  900 D1:EFBB 06 50 5A A5 
              80 A9 98 15 	.db %00000110, %01010000, %01011010, %10100101, %10000000, %10101001, %10011000, %00010101
  901 D1:EFC3 0A 9A 49 29 
              9B 49 50 99 	.db %00001010, %10011010, %01001001, %00101001, %10011011, %01001001, %01010000, %10011001
  902 D1:EFCB 61 83 50 85 
              59 43 66 48 	.db %01100001, %10000011, %01010000, %10000101, %01011001, %01000011, %01100110, %01001000
  903 D1:EFD3 A4 02 15 54 
              2A 69 96 83 	.db %10100100, %00000010, %00010101, %01010100, %00101010, %01101001, %10010110, %10000011
  904 D1:EFDB 80 45 00 9A 
              A9 A4 39 41 	.db %10000000, %01000101, %00000000, %10011010, %10101001, %10100100, %00111001, %01000001
  905 D1:EFE3 41 0B 69 99 
              42 A4 94 90 	.db %01000001, %00001011, %01101001, %10011001, %01000010, %10100100, %10010100, %10010000
  906 D1:EFEB 06 9A 58 19 
              55 05 04 A6 	.db %00000110, %10011010, %01011000, %00011001, %01010101, %00000101, %00000100, %10100110
  907 D1:EFF3 66 43 54 42 
              A5 4D A6 55 	.db %01100110, %01000011, %01010100, %01000010, %10100101, %01001101, %10100110, %01010101
  908 D1:EFFB 37 50 95 65 
              69 89 92 75 	.db %00110111, %01010000, %10010101, %01100101, %01101001, %10001001, %10010010, %01110101
  909 D1:F003 29 69 96 54 
              DA 04 55 54 	.db %00101001, %01101001, %10010110, %01010100, %11011010, %00000100, %01010101, %01010100
  910 D1:F00B 98 66 4D 10 
              05 59 05 96 	.db %10011000, %01100110, %01001101, %00010000, %00000101, %01011001, %00000101, %10010110
  911 D1:F013 68 29 0A 41 
              42 69 96 50 	.db %01101000, %00101001, %00001010, %01000001, %01000010, %01101001, %10010110, %01010000
  912 D1:F01B D6 64 94 25 
              56 65 42 EA 	.db %11010110, %01100100, %10010100, %00100101, %01010110, %01100101, %01000010, %11101010
  913 D1:F023 -  -  -  -  
  914 D1:F023 -  -  -  -  
  915 D1:F023 -  -  -  -  Tree_3:
  916 D1:F023 24 -  -  -  	.db %00100100
  917 D1:F024 1A 10 -  -  	.db 26, 16
  918 D1:F026 10 20 -  -  	.db %00010000, %00100000
  919 D1:F028 -  -  -  -  
  920 D1:F028 05 11 05 00 
              05 80 01 45 	.db %00000101, %00010001, %00000101, %00000000, %00000101, %10000000, %00000001, %01000101
  921 D1:F030 11 48 45 51 
              40 11 45 10 	.db %00010001, %01001000, %01000101, %01010001, %01000000, %00010001, %01000101, %00010000
  922 D1:F038 84 58 16 01 
              54 40 54 01 	.db %10000100, %01011000, %00010110, %00000001, %01010100, %01000000, %01010100, %00000001
  923 D1:F040 85 64 55 14 
              01 40 18 56 	.db %10000101, %01100100, %01010101, %00010100, %00000001, %01000000, %00011000, %01010110
  924 D1:F048 04 55 50 56 
              41 85 60 51 	.db %00000100, %01010101, %01010000, %01010110, %01000001, %10000101, %01100000, %01010001
  925 D1:F050 51 05 60 14 
              56 05 55 10 	.db %01010001, %00000101, %01100000, %00010100, %01010110, %00000101, %01010101, %00010000
  926 D1:F058 56 01 41 60 
              54 51 04 58 	.db %01010110, %00000001, %01000001, %01100000, %01010100, %01010001, %00000100, %01011000
  927 D1:F060 54 16 85 41 
              14 05 85 40 	.db %01010100, %00010110, %10000101, %01000001, %00010100, %00000101, %10000101, %01000000
  928 D1:F068 58 45 10 50 
              58 50 01 64 	.db %01011000, %01000101, %00010000, %01010000, %01011000, %01010000, %00000001, %01100100
  929 D1:F070 41 10 05 95 
              05 05 44 10 	.db %01000001, %00010000, %00000101, %10010101, %00000101, %00000101, %01000100, %00010000
  930 D1:F078 14 55 51 50 
              65 51 01 61 	.db %00010100, %01010101, %01010001, %01010000, %01100101, %01010001, %00000001, %01100001
  931 D1:F080 54 15 00 11 
              10 16 04 05 	.db %01010100, %00010101, %00000000, %00010001, %00010000, %00010110, %00000100, %00000101
  932 D1:F088 61 01 15 41 
              60 00 56 00 	.db %01100001, %00000001, %00010101, %01000001, %01100000, %00000000, %01010110, %00000000
  933 D1:F090 -  -  -  -  
  934 D1:F090 -  -  -  -  
  935 D1:F090 -  -  -  -  Tree_0:
  936 D1:F090 10 -  -  -  	.db %00010000
  937 D1:F091 1A 10 -  -  	.db 26, 16
  938 D1:F093 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  939 D1:F09B FF FF FF FF 
              FF 3F FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  940 D1:F0A3 CF FF FF F3 
              FF FF FC FF 	.db %11001111, %11111111, %11111111, %11110011, %11111111, %11111111, %11111100, %11111111
  941 D1:F0AB FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  942 D1:F0B3 FF FF FF FC 
              FF FF FF 3F 	.db %11111111, %11111111, %11111111, %11111100, %11111111, %11111111, %11111111, %00111111
  943 D1:F0BB FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  944 D1:F0C3 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  945 D1:F0C7 -  -  -  -  
  946 D1:F0C7 01 -  -  -  	.db %00000001
  947 D1:F0C8 -  -  -  -  
  948 D1:F0C8 00 9A 4A 80 
              26 02 90 1A 	.db %00000000, %10011010, %01001010, %10000000, %00100110, %00000010, %10010000, %00011010
  949 D1:F0D0 40 A4 05 9A 
              71 08 AB 73 	.db %01000000, %10100100, %00000101, %10011010, %01110001, %00001000, %10101011, %01110011
  950 D1:F0D8 08 AB 74 09 
              5B 77 02 9A 	.db %00001000, %10101011, %01110100, %00001001, %01011011, %01110111, %00000010, %10011010
  951 D1:F0E0 75 00 B2 1D 
              00 BF 57 40 	.db %01110101, %00000000, %10110010, %00011101, %00000000, %10111111, %01010111, %01000000
  952 D1:F0E8 2B 56 10 2B 
              5F 18 01 9F 	.db %00101011, %01010110, %00010000, %00101011, %01011111, %00011000, %00000001, %10011111
  953 D1:F0F0 0C 00 23 83 
              01 22 E2 40 	.db %00001100, %00000000, %00100011, %10000011, %00000001, %00100010, %11100010, %01000000
  954 D1:F0F8 66 2A A0 -  	.db %01100110, %00101010, %10100000
  955 D1:F0FB -  -  -  -  
  956 D1:F0FB -  -  -  -  
  957 D1:F0FB -  -  -  -  Tree_8:
  958 D1:F0FB 24 -  -  -  	.db %00100100
  959 D1:F0FC 1A 10 -  -  	.db 26, 16
  960 D1:F0FE 10 23 -  -  	.db %00010000, %00100011
  961 D1:F100 -  -  -  -  
  962 D1:F100 10 05 62 22 
              85 20 80 40 	.db %00010000, %00000101, %01100010, %00100010, %10000101, %00100000, %10000000, %01000000
  963 D1:F108 56 82 A0 52 
              2A 06 01 52 	.db %01010110, %10000010, %10100000, %01010010, %00101010, %00000110, %00000001, %01010010
  964 D1:F110 28 25 E0 B8 
              60 21 18 8A 	.db %00101000, %00100101, %11100000, %10111000, %01100000, %00100001, %00011000, %10001010
  965 D1:F118 5E 22 08 12 
              15 8A A1 62 	.db %01011110, %00100010, %00001000, %00010010, %00010101, %10001010, %10100001, %01100010
  966 D1:F120 80 04 21 57 
              0A 85 43 00 	.db %10000000, %00000100, %00100001, %01010111, %00001010, %10000101, %01000011, %00000000
  967 D1:F128 00 11 78 A9 
              17 80 60 02 	.db %00000000, %00010001, %01111000, %10101001, %00010111, %10000000, %01100000, %00000010
  968 D1:F130 15 A0 89 7A 
              05 A0 08 57 	.db %00010101, %10100000, %10001001, %01111010, %00000101, %10100000, %00001000, %01010111
  969 D1:F138 A2 00 80 15 
              05 84 57 0A 	.db %10100010, %00000000, %10000000, %00010101, %00000101, %10000100, %01010111, %00001010
  970 D1:F140 A6 00 19 5A 
              95 5C 82 55 	.db %10100110, %00000000, %00011001, %01011010, %10010101, %01011100, %10000010, %01010101
  971 D1:F148 01 57 08 85 
              7A A5 14 15 	.db %00000001, %01010111, %00001000, %10000101, %01111010, %10100101, %00010100, %00010101
  972 D1:F150 A2 AA 16 A0 
              61 41 68 22 	.db %10100010, %10101010, %00010110, %10100000, %01100001, %01000001, %01101000, %00100010
  973 D1:F158 A1 56 96 08 
              16 06 22 21 	.db %10100001, %01010110, %10010110, %00001000, %00010110, %00000110, %00100010, %00100001
  974 D1:F160 71 61 01 60 
              22 0A 56 1E 	.db %01110001, %01100001, %00000001, %01100000, %00100010, %00001010, %01010110, %00011110
  975 D1:F168 -  -  -  -  
  976 D1:F168 -  -  -  -  
  977 D1:F168 -  -  -  -  Tree_10:
  978 D1:F168 24 -  -  -  	.db %00100100
  979 D1:F169 1A 10 -  -  	.db 26, 16
  980 D1:F16B 12 03 -  -  	.db %00010010, %00000011
  981 D1:F16D -  -  -  -  
  982 D1:F16D 19 2A 77 FD 
              DD FA D7 9E 	.db %00011001, %00101010, %01110111, %11111101, %11011101, %11111010, %11010111, %10011110
  983 D1:F175 25 FF F7 DC 
              AC 65 2B 7F 	.db %00100101, %11111111, %11110111, %11011100, %10101100, %01100101, %00101011, %01111111
  984 D1:F17D F7 5D D8 C2 
              94 BF 7F FC 	.db %11110111, %01011101, %11011000, %11000010, %10010100, %10111111, %01111111, %11111100
  985 D1:F185 5F 21 79 77 
              DF FF 2D D6 	.db %01011111, %00100001, %01111001, %01110111, %11011111, %11111111, %00101101, %11010110
  986 D1:F18D 31 A5 7D FF 
              DF DD 55 38 	.db %00110001, %10100101, %01111101, %11111111, %11011111, %11011101, %01010101, %00111000
  987 D1:F195 D7 C7 7D F5 
              73 54 AD 77 	.db %11010111, %11000111, %01111101, %11110101, %01110011, %01010100, %10101101, %01110111
  988 D1:F19D FF FF 75 5D 
              59 D7 73 F7 	.db %11111111, %11111111, %01110101, %01011101, %01011001, %11010111, %01110011, %11110111
  989 D1:F1A5 61 47 A6 B4 
              77 7F F6 1D 	.db %01100001, %01000111, %10100110, %10110100, %01110111, %01111111, %11110110, %00011101
  990 D1:F1AD F9 60 05 D7 
              FF E8 7A 0A 	.db %11111001, %01100000, %00000101, %11010111, %11111111, %11101000, %01111010, %00001010
  991 D1:F1B5 35 2D 7F FD 
              A8 AA 95 18 	.db %00110101, %00101101, %01111111, %11111101, %10101000, %10101010, %10010101, %00011000
  992 D1:F1BD 1F FF CE A8 
              A1 96 95 FD 	.db %00011111, %11111111, %11001110, %10101000, %10100001, %10010110, %10010101, %11111101
  993 D1:F1C5 FD F2 12 6D 
              6B 5F FF DF 	.db %11111101, %11110010, %00010010, %01101101, %01101011, %01011111, %11111111, %11011111
  994 D1:F1CD E1 52 8E B7 
              F7 DD 5E B1 	.db %11100001, %01010010, %10001110, %10110111, %11110111, %11011101, %01011110, %10110001
  995 D1:F1D5 -  -  -  -  
  996 D1:F1D5 -  -  -  -  
  997 D1:F1D5 -  -  -  -  Tree_1:
  998 D1:F1D5 10 -  -  -  	.db %00010000
  999 D1:F1D6 1A 10 -  -  	.db 26, 16
 1000 D1:F1D8 FF FF FF FF 
              FF FF F3 FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11110011, %11111111
 1001 D1:F1E0 FF FC FF FF 
              FF 3F FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
 1002 D1:F1E8 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1003 D1:F1F0 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1004 D1:F1F8 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1005 D1:F200 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1006 D1:F208 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
 1007 D1:F20C -  -  -  -  
 1008 D1:F20C 01 -  -  -  	.db %00000001
 1009 D1:F20D -  -  -  -  
 1010 D1:F20D 01 00 48 80 
              69 35 30 4A 	.db %00000001, %00000000, %01001000, %10000000, %01101001, %00110101, %00110000, %01001010
 1011 D1:F215 27 20 48 C6 
              61 D5 C6 60 	.db %00100111, %00100000, %01001000, %11000110, %01100001, %11010101, %11000110, %01100000
 1012 D1:F21D E7 73 AC 29 
              DC E9 0B 55 	.db %11100111, %01110011, %10101100, %00101001, %11011100, %11101001, %00001011, %01010101
 1013 D1:F225 5A 44 FE 58 
              80 2B 92 28 	.db %01011010, %01000100, %11111110, %01011000, %10000000, %00101011, %10010010, %00101000
 1014 D1:F22D 0E C2 82 03 
              B0 74 C1 2D 	.db %00001110, %11000010, %10000010, %00000011, %10110000, %01110100, %11000001, %00101101
 1015 D1:F235 5F 10 09 73 
              E4 0A 5C F2 	.db %01011111, %00010000, %00001001, %01110011, %11100100, %00001010, %01011100, %11110010
 1016 D1:F23D 04 92 3C 80 	.db %00000100, %10010010, %00111100, %10000000
 1017 D1:F241 -  -  -  -  
 1018 D1:F241 -  -  -  -  
 1019 D1:F241 -  -  -  -  Tree_5:
 1020 D1:F241 24 -  -  -  	.db %00100100
 1021 D1:F242 1A 10 -  -  	.db 26, 16
 1022 D1:F244 10 20 -  -  	.db %00010000, %00100000
 1023 D1:F246 -  -  -  -  
 1024 D1:F246 11 10 15 00 
              05 40 01 15 	.db %00010001, %00010000, %00010101, %00000000, %00000101, %01000000, %00000001, %00010101
 1025 D1:F24E 05 50 04 56 
              00 15 44 41 	.db %00000101, %01010000, %00000100, %01010110, %00000000, %00010101, %01000100, %01000001
 1026 D1:F256 60 05 60 61 
              04 55 16 04 	.db %01100000, %00000101, %01100000, %01100001, %00000100, %01010101, %00010110, %00000100
 1027 D1:F25E 50 06 11 41 
              60 60 05 81 	.db %01010000, %00000110, %00010001, %01000001, %01100000, %01100000, %00000101, %10000001
 1028 D1:F266 45 44 56 08 
              00 50 10 54 	.db %01000101, %01000100, %01010110, %00001000, %00000000, %01010000, %00010000, %01010100
 1029 D1:F26E 45 60 00 16 
              05 80 44 44 	.db %01000101, %01100000, %00000000, %00010110, %00000101, %10000000, %01000100, %01000100
 1030 D1:F276 10 15 80 58 
              15 44 41 04 	.db %00010000, %00010101, %10000000, %01011000, %00010101, %01000100, %01000001, %00000100
 1031 D1:F27E 58 05 01 55 
              46 01 54 00 	.db %01011000, %00000101, %00000001, %01010101, %01000110, %00000001, %01010100, %00000000
 1032 D1:F286 10 15 54 58 
              45 81 01 45 	.db %00010000, %00010101, %01010100, %01011000, %01000101, %10000001, %00000001, %01000101
 1033 D1:F28E 45 45 05 60 
              00 04 50 44 	.db %01000101, %01000101, %00000101, %01100000, %00000000, %00000100, %01010000, %01000100
 1034 D1:F296 19 5A 04 40 
              45 40 51 95 	.db %00011001, %01011010, %00000100, %01000000, %01000101, %01000000, %01010001, %10010101
 1035 D1:F29E A0 16 10 45 
              11 01 58 04 	.db %10100000, %00010110, %00010000, %01000101, %00010001, %00000001, %01011000, %00000100
 1036 D1:F2A6 68 14 51 10 
              14 00 15 80 	.db %01101000, %00010100, %01010001, %00010000, %00010100, %00000000, %00010101, %10000000
 1037 D1:F2AE -  -  -  -  
 1038 D1:F2AE -  -  -  -  
 1039 D1:F2AE -  -  -  -  Tree_11:
 1040 D1:F2AE 24 -  -  -  	.db %00100100
 1041 D1:F2AF 1A 10 -  -  	.db 26, 16
 1042 D1:F2B1 20 13 -  -  	.db %00100000, %00010011
 1043 D1:F2B3 -  -  -  -  
 1044 D1:F2B3 10 95 33 CF 
              30 C5 C3 42 	.db %00010000, %10010101, %00110011, %11001111, %00110000, %11000101, %11000011, %01000010
 1045 D1:F2BB 43 F3 F3 FF 
              58 37 97 FC 	.db %01000011, %11110011, %11110011, %11111111, %01011000, %00110111, %10010111, %11111100
 1046 D1:F2C3 F3 6F 35 B3 
              E5 7F FC C6 	.db %11110011, %01101111, %00110101, %10110011, %11100101, %01111111, %11111100, %11000110
 1047 D1:F2CB 3F 6E 3F 55 
              FF F9 4C D5 	.db %00111111, %01101110, %00111111, %01010101, %11111111, %11111001, %01001100, %11010101
 1048 D1:F2D3 30 B7 97 FE 
              50 CD 6F C9 	.db %00110000, %10110111, %10010111, %11111110, %01010000, %11001101, %01101111, %11001001
 1049 D1:F2DB 48 F3 96 C3 
              58 C8 54 CF 	.db %01001000, %11110011, %10010110, %11000011, %01011000, %11001000, %01010100, %11001111
 1050 D1:F2E3 C5 6C CE 3C 
              15 CC F1 5B 	.db %11000101, %01101100, %11001110, %00111100, %00010101, %11001100, %11110001, %01011011
 1051 D1:F2EB FC C3 05 50 
              CC 56 CE FC 	.db %11111100, %11000011, %00000101, %01010000, %11001100, %01010110, %11001110, %11111100
 1052 D1:F2F3 DB 59 43 DA 
              FF E8 CE 5C 	.db %11011011, %01011001, %01000011, %11011010, %11111111, %11101000, %11001110, %01011100
 1053 D1:F2FB 94 31 FF FF 
              94 F5 C1 43 	.db %10010100, %00110001, %11111111, %11111111, %10010100, %11110101, %11000001, %01000011
 1054 D1:F303 3F FF F9 73 
              11 25 33 CF 	.db %00111111, %11111111, %11111001, %01110011, %00010001, %00100101, %00110011, %11001111
 1055 D1:F30B FC A5 3C 10 
              50 FF CC CE 	.db %11111100, %10100101, %00111100, %00010000, %01010000, %11111111, %11001100, %11001110
 1056 D1:F313 5C C9 69 7F 
              33 F0 CD 4F 	.db %01011100, %11001001, %01101001, %01111111, %00110011, %11110000, %11001101, %01001111
 1057 D1:F31B -  -  -  -  
 1058 D1:F31B -  -  -  -  
 1059 D1:F31B -  -  -  -  Branches_1:
 1060 D1:F31B 20 -  -  -  	.db %00100000
 1061 D1:F31C 12 0E -  -  	.db 18, 14
 1062 D1:F31E 3F 00 3F FC 
              0F FF F3 FF 	.db %00111111, %00000000, %00111111, %11111100, %00001111, %11111111, %11110011, %11111111
 1063 D1:F326 FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1064 D1:F32E FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1065 D1:F336 F3 FF FC FF 
              FC 3C FC 00 	.db %11110011, %11111111, %11111100, %11111111, %11111100, %00111100, %11111100, %00000000
 1066 D1:F33E -  -  -  -  
 1067 D1:F33E 01 23 -  -  	.db %00000001, %00100011
 1068 D1:F340 -  -  -  -  
 1069 D1:F340 00 00 05 00 
              05 55 55 00 	.db %00000000, %00000000, %00000101, %00000000, %00000101, %01010101, %01010101, %00000000
 1070 D1:F348 00 50 15 44 
              05 45 52 94 	.db %00000000, %01010000, %00010101, %01000100, %00000101, %01000101, %01010010, %10010100
 1071 D1:F350 40 4A AA 95 
              84 0A AE AB 	.db %01000000, %01001010, %10101010, %10010101, %10000100, %00001010, %10101110, %10101011
 1072 D1:F358 F5 50 FF FF 
              EA A0 02 AA 	.db %11110101, %01010000, %11111111, %11111111, %11101010, %10100000, %00000010, %10101010
 1073 D1:F360 A6 54 00 A1 
              15 40 14 00 	.db %10100110, %01010100, %00000000, %10100001, %00010101, %01000000, %00010100, %00000000
 1074 D1:F368 05 45 44 01 
              45 50 00 00 	.db %00000101, %01000101, %01000100, %00000001, %01000101, %01010000, %00000000, %00000000
 1075 D1:F370 00 00 00 00 
              00 00 -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
 1076 D1:F376 -  -  -  -  
 1077 D1:F376 -  -  -  -  
 1078 D1:F376 -  -  -  -  Branches_0:
 1079 D1:F376 20 -  -  -  	.db %00100000
 1080 D1:F377 12 0E -  -  	.db 18, 14
 1081 D1:F379 CC 00 3F CF 
              0F FF F3 FF 	.db %11001100, %00000000, %00111111, %11001111, %00001111, %11111111, %11110011, %11111111
 1082 D1:F381 FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1083 D1:F389 FF FF FF FF 
              3F FF CF FF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11001111, %11111111
 1084 D1:F391 F3 FF F0 FF 
              FC 3F 30 00 	.db %11110011, %11111111, %11110000, %11111111, %11111100, %00111111, %00110000, %00000000
 1085 D1:F399 -  -  -  -  
 1086 D1:F399 01 23 -  -  	.db %00000001, %00100011
 1087 D1:F39B -  -  -  -  
 1088 D1:F39B 00 00 00 00 
              15 40 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00010101, %01000000, %00000000, %00000000
 1089 D1:F3A3 40 51 45 40 
              04 00 00 10 	.db %01000000, %01010001, %01000101, %01000000, %00000100, %00000000, %00000000, %00010000
 1090 D1:F3AB 05 45 5A 01 
              10 BA AA F5 	.db %00000101, %01000101, %01011010, %00000001, %00010000, %10111010, %10101010, %11110101
 1091 D1:F3B3 41 0F FF FA 
              95 10 AA AA 	.db %01000001, %00001111, %11111111, %11111010, %10010101, %00010000, %10101010, %10101010
 1092 D1:F3BB 55 04 55 51 
              44 00 00 05 	.db %01010101, %00000100, %01010101, %01010001, %01000100, %00000000, %00000000, %00000101
 1093 D1:F3C3 40 40 00 50 
              14 05 40 00 	.db %01000000, %01000000, %00000000, %01010000, %00010100, %00000101, %01000000, %00000000
 1094 D1:F3CB 00 00 00 -  	.db %00000000, %00000000, %00000000
 1095 D1:F3CE -  -  -  -  
 1096 D1:F3CE -  -  -  -  
 1097 D1:F3CE -  -  -  -  Platforms_0:
 1098 D1:F3CE 24 -  -  -  	.db %00100100
 1099 D1:F3CF 14 09 -  -  	.db 20, 9
 1100 D1:F3D1 9A 12 -  -  	.db %10011010, %00010010
 1101 D1:F3D3 -  -  -  -  
 1102 D1:F3D3 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
 1103 D1:F3DB 00 00 05 55 
              55 55 55 05 	.db %00000000, %00000000, %00000101, %01010101, %01010101, %01010101, %01010101, %00000101
 1104 D1:F3E3 55 55 55 55 
              0A 55 5A A5 	.db %01010101, %01010101, %01010101, %01010101, %00001010, %01010101, %01011010, %10100101
 1105 D1:F3EB 55 0B A5 AB 
              BA 5A 0E EA 	.db %01010101, %00001011, %10100101, %10101011, %10111010, %01011010, %00001110, %11101010
 1106 D1:F3F3 EE EE AE 0B 
              BB BB BB BB 	.db %11101110, %11101110, %10101110, %00001011, %10111011, %10111011, %10111011, %10111011
 1107 D1:F3FB 00 00 00 00 
              00 -  -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000
 1108 D1:F400 -  -  -  -  
 1109 D1:F400 -  -  -  -  
 1110 D1:F400 -  -  -  -  Platforms_1:
 1111 D1:F400 24 -  -  -  	.db %00100100
 1112 D1:F401 14 09 -  -  	.db 20, 9
 1113 D1:F403 9A 12 -  -  	.db %10011010, %00010010
 1114 D1:F405 -  -  -  -  
 1115 D1:F405 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
 1116 D1:F40D 00 00 55 55 
              55 55 55 55 	.db %00000000, %00000000, %01010101, %01010101, %01010101, %01010101, %01010101, %01010101
 1117 D1:F415 55 55 55 55 
              A5 55 AA 55 	.db %01010101, %01010101, %01010101, %01010101, %10100101, %01010101, %10101010, %01010101
 1118 D1:F41D 5A BA 5A BB 
              A5 AA EE AE 	.db %01011010, %10111010, %01011010, %10111011, %10100101, %10101010, %11101110, %10101110
 1119 D1:F425 EE EA EE BB 
              BB BB BB BB 	.db %11101110, %11101010, %11101110, %10111011, %10111011, %10111011, %10111011, %10111011
 1120 D1:F42D 00 00 00 00 
              00 -  -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000
 1121 D1:F432 -  -  -  -  
 1122 D1:F432 -  -  -  -  
 1123 D1:F432 -  -  -  -  Platforms_2:
 1124 D1:F432 20 -  -  -  	.db %00100000
 1125 D1:F433 0E 0E -  -  	.db 14, 14
 1126 D1:F435 FF 01 FE 03 
              FC 07 F8 0F 	.db %11111111, %00000001, %11111110, %00000011, %11111100, %00000111, %11111000, %00001111
 1127 D1:F43D F0 1F E0 3F 
              C0 7F 00 FC 	.db %11110000, %00011111, %11100000, %00111111, %11000000, %01111111, %00000000, %11111100
 1128 D1:F445 01 F0 03 C0 
              07 00 0C 00 	.db %00000001, %11110000, %00000011, %11000000, %00000111, %00000000, %00001100, %00000000
 1129 D1:F44D 10 -  -  -  	.db %00010000
 1130 D1:F44E -  -  -  -  
 1131 D1:F44E 90 21 -  -  	.db %10010000, %00100001
 1132 D1:F450 -  -  -  -  
 1133 D1:F450 1A EC 1A EC 
              1A EC 1A EC 	.db %00011010, %11101100, %00011010, %11101100, %00011010, %11101100, %00011010, %11101100
 1134 D1:F458 1A EC 1A EC 
              1A EC 1A EC 	.db %00011010, %11101100, %00011010, %11101100, %00011010, %11101100, %00011010, %11101100
 1135 D1:F460 6B 86 B1 A1 
              84 -  -  -  	.db %01101011, %10000110, %10110001, %10100001, %10000100
 1136 D1:F465 -  -  -  -  
 1137 D1:F465 -  -  -  -  
 1138 D1:F465 -  -  -  -  Spikes_0:
 1139 D1:F465 20 -  -  -  	.db %00100000
 1140 D1:F466 18 09 -  -  	.db 24, 9
 1141 D1:F468 3C 3C 3C 3C 
              3C 3C 3C 3C 	.db %00111100, %00111100, %00111100, %00111100, %00111100, %00111100, %00111100, %00111100
 1142 D1:F470 3C 3C 3C 3C 
              FF FF FF FF 	.db %00111100, %00111100, %00111100, %00111100, %11111111, %11111111, %11111111, %11111111
 1143 D1:F478 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1144 D1:F480 FF FF FF -  	.db %11111111, %11111111, %11111111
 1145 D1:F483 -  -  -  -  
 1146 D1:F483 96 70 -  -  	.db %10010110, %01110000
 1147 D1:F485 -  -  -  -  
 1148 D1:F485 00 00 00 18 
              18 18 18 18 	.db %00000000, %00000000, %00000000, %00011000, %00011000, %00011000, %00011000, %00011000
 1149 D1:F48D 18 18 18 18 
              05 A0 05 A0 	.db %00011000, %00011000, %00011000, %00011000, %00000101, %10100000, %00000101, %10100000
 1150 D1:F495 05 A0 05 A0 
              05 A0 05 A0 	.db %00000101, %10100000, %00000101, %10100000, %00000101, %10100000, %00000101, %10100000
 1151 D1:F49D 15 A8 15 A8 
              15 A8 15 A8 	.db %00010101, %10101000, %00010101, %10101000, %00010101, %10101000, %00010101, %10101000
 1152 D1:F4A5 15 A8 15 A8 
              15 A8 15 A8 	.db %00010101, %10101000, %00010101, %10101000, %00010101, %10101000, %00010101, %10101000
 1153 D1:F4AD 15 A8 -  -  	.db %00010101, %10101000
 1154 D1:F4AF -  -  -  -  
 1155 D1:F4AF -  -  -  -  
 1156 D1:F4AF -  -  -  -  TongueRing1:
 1157 D1:F4AF 10 -  -  -  	.db %00010000
 1158 D1:F4B0 08 10 -  -  	.db 8, 16
 1159 D1:F4B2 E0 F8 FC FE 
              FE 3F 1F 1F 	.db %11100000, %11111000, %11111100, %11111110, %11111110, %00111111, %00011111, %00011111
 1160 D1:F4BA 1F 1F 3F FE 
              FE FC F8 E0 	.db %00011111, %00011111, %00111111, %11111110, %11111110, %11111100, %11111000, %11100000
 1161 D1:F4C2 -  -  -  -  
 1162 D1:F4C2 BC -  -  -  	.db %10111100
 1163 D1:F4C3 -  -  -  -  
 1164 D1:F4C3 18 03 E0 03 
              00 E0 38 01 	.db %00011000, %00000011, %11100000, %00000011, %00000000, %11100000, %00111000, %00000001
 1165 D1:F4CB C0 3C 00 -  	.db %11000000, %00111100, %00000000
 1166 D1:F4CE -  -  -  -  
 1167 D1:F4CE -  -  -  -  
 1168 D1:F4CE -  -  -  -  TongueRing2:
 1169 D1:F4CE 10 -  -  -  	.db %00010000
 1170 D1:F4CF 08 10 -  -  	.db 8, 16
 1171 D1:F4D1 E0 F8 FC FE 
              FE 3F 1F 1F 	.db %11100000, %11111000, %11111100, %11111110, %11111110, %00111111, %00011111, %00011111
 1172 D1:F4D9 1F 1F 3F FE 
              FE FC F8 E0 	.db %00011111, %00011111, %00111111, %11111110, %11111110, %11111100, %11111000, %11100000
 1173 D1:F4E1 -  -  -  -  
 1174 D1:F4E1 BC -  -  -  	.db %10111100
 1175 D1:F4E2 -  -  -  -  
 1176 D1:F4E2 00 F0 00 E0 
              1C 07 00 C0 	.db %00000000, %11110000, %00000000, %11100000, %00011100, %00000111, %00000000, %11000000
 1177 D1:F4EA 1F 00 C0 -  	.db %00011111, %00000000, %11000000
 1178 D1:F4ED -  -  -  -  
 1179 D1:F4ED -  -  -  -  
 1180 D1:F4ED -  -  -  -  GroundDirtDark:
 1181 D1:F4ED 24 -  -  -  	.db %00100100
 1182 D1:F4EE 10 0C -  -  	.db 16, 12
 1183 D1:F4F0 01 50 -  -  	.db %00000001, %01010000
 1184 D1:F4F2 -  -  -  -  
 1185 D1:F4F2 00 00 00 00 
              00 00 00 04 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000100
 1186 D1:F4FA 58 08 00 01 
              08 08 25 40 	.db %01011000, %00001000, %00000000, %00000001, %00001000, %00001000, %00100101, %01000000
 1187 D1:F502 00 00 20 54 
              01 50 00 08 	.db %00000000, %00000000, %00100000, %01010100, %00000001, %01010000, %00000000, %00001000
 1188 D1:F50A 00 14 00 08 
              20 00 00 00 	.db %00000000, %00010100, %00000000, %00001000, %00100000, %00000000, %00000000, %00000000
 1189 D1:F512 20 00 50 00 
              52 12 05 05 	.db %00100000, %00000000, %01010000, %00000000, %01010010, %00010010, %00000101, %00000101
 1190 D1:F51A 02 44 80 40 
              00 00 00 00 	.db %00000010, %01000100, %10000000, %01000000, %00000000, %00000000, %00000000, %00000000
 1191 D1:F522 -  -  -  -  
 1192 D1:F522 -  -  -  -  
 1193 D1:F522 -  -  -  -  GroundHumpDark:
 1194 D1:F522 20 -  -  -  	.db %00100000
 1195 D1:F523 10 0D -  -  	.db 16, 13
 1196 D1:F525 03 F0 0F FC 
              3F FC FF FF 	.db %00000011, %11110000, %00001111, %11111100, %00111111, %11111100, %11111111, %11111111
 1197 D1:F52D FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1198 D1:F535 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1199 D1:F53D FF FF -  -  	.db %11111111, %11111111
 1200 D1:F53F -  -  -  -  
 1201 D1:F53F 10 50 -  -  	.db %00010000, %01010000
 1202 D1:F541 -  -  -  -  
 1203 D1:F541 00 00 55 40 
              01 55 54 05 	.db %00000000, %00000000, %01010101, %01000000, %00000001, %01010101, %01010100, %00000101
 1204 D1:F549 55 56 50 95 
              59 56 55 95 	.db %01010101, %01010110, %01010000, %10010101, %01011001, %01010110, %01010101, %10010101
 1205 D1:F551 59 05 59 51 
              59 50 09 44 	.db %01011001, %00000101, %01011001, %01010001, %01011001, %01010000, %00001001, %01000100
 1206 D1:F559 05 55 55 56 
              55 56 55 56 	.db %00000101, %01010101, %01010101, %01010110, %01010101, %01010110, %01010101, %01010110
 1207 D1:F561 95 49 55 45 
              94 18 15 11 	.db %10010101, %01001001, %01010101, %01000101, %10010100, %00011000, %00010101, %00010001
 1208 D1:F569 56 55 54 55 
              59 55 55 -  	.db %01010110, %01010101, %01010100, %01010101, %01011001, %01010101, %01010101
 1209 D1:F570 -  -  -  -  
 1210 D1:F570 -  -  -  -  
 1211 D1:F570 -  -  -  -  Tree_16:
 1212 D1:F570 08 -  -  -  	.db %00001000
 1213 D1:F571 0A 10 -  -  	.db 10, 16
 1214 D1:F573 3C 0F 03 C0 
              F0 3C 0F 0F 	.db %00111100, %00001111, %00000011, %11000000, %11110000, %00111100, %00001111, %00001111
 1215 D1:F57B C0 F0 3C 0F 
              03 FC FC 3C 	.db %11000000, %11110000, %00111100, %00001111, %00000011, %11111100, %11111100, %00111100
 1216 D1:F583 0F 03 C0 F0 	.db %00001111, %00000011, %11000000, %11110000
 1217 D1:F587 -  -  -  -  
 1218 D1:F587 00 -  -  -  	.db %00000000
 1219 D1:F588 -  -  -  -  
 1220 D1:F588 -  -  -  -  
 1221 D1:F588 -  -  -  -  
 1222 D1:F588 -  -  -  -  Tree_17:
 1223 D1:F588 08 -  -  -  	.db %00001000
 1224 D1:F589 07 0E -  -  	.db 7, 14
 1225 D1:F58B 0C 18 77 E1 
              C3 0F 9E 70 	.db %00001100, %00011000, %01110111, %11100001, %11000011, %00001111, %10011110, %01110000
 1226 D1:F593 E3 C7 0C 18 
              00 -  -  -  	.db %11100011, %11000111, %00001100, %00011000, %00000000
 1227 D1:F598 -  -  -  -  
 1228 D1:F598 00 -  -  -  	.db %00000000
 1229 D1:F599 -  -  -  -  
 1230 D1:F599 -  -  -  -  
 1231 D1:F599 -  -  -  -  
 1232 D1:F599 -  -  -  -  Tree_18:
 1233 D1:F599 08 -  -  -  	.db %00001000
 1234 D1:F59A 07 0E -  -  	.db 7, 14
 1235 D1:F59C 18 30 C7 83 
              06 0C 1C 1E 	.db %00011000, %00110000, %11000111, %10000011, %00000110, %00001100, %00011100, %00011110
 1236 D1:F5A4 30 60 C1 83 
              00 -  -  -  	.db %00110000, %01100000, %11000001, %10000011, %00000000
 1237 D1:F5A9 -  -  -  -  
 1238 D1:F5A9 00 -  -  -  	.db %00000000
 1239 D1:F5AA -  -  -  -  
 1240 D1:F5AA -  -  -  -  
 1241 D1:F5AA -  -  -  -  
 1242 D1:F5AA -  -  -  -  Clouds_0:
 1243 D1:F5AA 10 -  -  -  	.db %00010000
 1244 D1:F5AB 10 0A -  -  	.db 16, 10
 1245 D1:F5AD FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1246 D1:F5B5 FF FF FF FF 
              FF FF 3F FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111
 1247 D1:F5BD 0F CC 03 00 	.db %00001111, %11001100, %00000011, %00000000
 1248 D1:F5C1 -  -  -  -  
 1249 D1:F5C1 67 -  -  -  	.db %01100111
 1250 D1:F5C2 -  -  -  -  
 1251 D1:F5C2 00 40 31 84 
              13 1C 0E 20 	.db %00000000, %01000000, %00110001, %10000100, %00010011, %00011100, %00001110, %00100000
 1252 D1:F5CA 00 00 E0 00 
              F0 77 F3 FF 	.db %00000000, %00000000, %11100000, %00000000, %11110000, %01110111, %11110011, %11111111
 1253 D1:F5D2 FF -  -  -  	.db %11111111
 1254 D1:F5D3 -  -  -  -  
 1255 D1:F5D3 -  -  -  -  
 1256 D1:F5D3 -  -  -  -  Clouds_1:
 1257 D1:F5D3 10 -  -  -  	.db %00010000
 1258 D1:F5D4 0C 0E -  -  	.db 12, 14
 1259 D1:F5D6 03 F0 FF 3F 
              F3 FF FF FF 	.db %00000011, %11110000, %11111111, %00111111, %11110011, %11111111, %11111111, %11111111
 1260 D1:F5DE FF 3F F0 FF 
              0F F0 FF 0F 	.db %11111111, %00111111, %11110000, %11111111, %00001111, %11110000, %11111111, %00001111
 1261 D1:F5E6 F0 3F 00 F0 
              03 -  -  -  	.db %11110000, %00111111, %00000000, %11110000, %00000011
 1262 D1:F5EB -  -  -  -  
 1263 D1:F5EB 76 -  -  -  	.db %01110110
 1264 D1:F5EC -  -  -  -  
 1265 D1:F5EC 3C 7C 3B 3E 
              47 F0 37 C5 	.db %00111100, %01111100, %00111011, %00111110, %01000111, %11110000, %00110111, %11000101
 1266 D1:F5F4 F6 73 B1 F0 
              70 40 -  -  	.db %11110110, %01110011, %10110001, %11110000, %01110000, %01000000
 1267 D1:F5FA -  -  -  -  
 1268 D1:F5FA -  -  -  -  
 1269 D1:F5FA -  -  -  -  Clouds_3:
 1270 D1:F5FA 10 -  -  -  	.db %00010000
 1271 D1:F5FB 10 0B -  -  	.db 16, 11
 1272 D1:F5FD 03 00 0F C0 
              3F C0 FF F3 	.db %00000011, %00000000, %00001111, %11000000, %00111111, %11000000, %11111111, %11110011
 1273 D1:F605 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1274 D1:F60D FF FF FF FF 
              FF FF -  -  	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1275 D1:F613 -  -  -  -  
 1276 D1:F613 76 -  -  -  	.db %01110110
 1277 D1:F614 -  -  -  -  
 1278 D1:F614 00 0C 07 80 
              FF 03 FF C6 	.db %00000000, %00001100, %00000111, %10000000, %11111111, %00000011, %11111111, %11000110
 1279 D1:F61C 7F FF 3C FB 
              83 E7 FF FF 	.db %01111111, %11111111, %00111100, %11111011, %10000011, %11100111, %11111111, %11111111
 1280 D1:F624 FF FC -  -  	.db %11111111, %11111100
 1281 D1:F626 -  -  -  -  
 1282 D1:F626 -  -  -  -  
 1283 D1:F626 -  -  -  -  Clouds_4:
 1284 D1:F626 10 -  -  -  	.db %00010000
 1285 D1:F627 08 0A -  -  	.db 8, 10
 1286 D1:F629 03 0F 3F 3F 
              FF FF FF FF 	.db %00000011, %00001111, %00111111, %00111111, %11111111, %11111111, %11111111, %11111111
 1287 D1:F631 FF FF -  -  	.db %11111111, %11111111
 1288 D1:F633 -  -  -  -  
 1289 D1:F633 76 -  -  -  	.db %01110110
 1290 D1:F634 -  -  -  -  
 1291 D1:F634 00 11 C3 C7 
              C5 CE 4F CF 	.db %00000000, %00010001, %11000011, %11000111, %11000101, %11001110, %01001111, %11001111
 1292 D1:F63C C0 -  -  -  	.db %11000000
 1293 D1:F63D -  -  -  -  
 1294 D1:F63D -  -  -  -  
 1295 D1:F63D -  -  -  -  Clouds_2:
 1296 D1:F63D 14 -  -  -  	.db %00010100
 1297 D1:F63E 10 10 -  -  	.db 16, 16
 1298 D1:F640 67 -  -  -  	.db %01100111
 1299 D1:F641 -  -  -  -  
 1300 D1:F641 00 00 00 00 
              00 08 40 0E 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001000, %01000000, %00001110
 1301 D1:F649 B0 C3 1F 80 
              00 00 00 00 	.db %10110000, %11000011, %00011111, %10000000, %00000000, %00000000, %00000000, %00000000
 1302 D1:F651 60 02 80 01 
              01 F0 20 1E 	.db %01100000, %00000010, %10000000, %00000001, %00000001, %11110000, %00100000, %00011110
 1303 D1:F659 30 00 1F 08 
              01 F8 00 00 	.db %00110000, %00000000, %00011111, %00001000, %00000001, %11111000, %00000000, %00000000
 1304 D1:F661 -  -  -  -  
 1305 D1:F661 -  -  -  -  
 1306 D1:F661 -  -  -  -  FrogDefault:
 1307 D1:F661 40 -  -  -  	.db %01000000
 1308 D1:F662 19 13 -  -  	.db 25, 19
 1309 D1:F664 00 0F FE 00 
              1F FF 80 3F 	.db %00000000, %00001111, %11111110, %00000000, %00011111, %11111111, %10000000, %00111111
 1310 D1:F66C FF E0 3F FF 
              F0 3F FF F8 	.db %11111111, %11100000, %00111111, %11111111, %11110000, %00111111, %11111111, %11111000
 1311 D1:F674 7F FF FC 7F 
              FF FE FF FF 	.db %01111111, %11111111, %11111100, %01111111, %11111111, %11111110, %11111111, %11111111
 1312 D1:F67C FF 7F FF FF 
              FF FF FF BF 	.db %11111111, %01111111, %11111111, %11111111, %11111111, %11111111, %11111111, %10111111
 1313 D1:F684 FF FF DF FF 
              FF 8F FF FF 	.db %11111111, %11111111, %11011111, %11111111, %11111111, %10001111, %11111111, %11111111
 1314 D1:F68C 87 FF FF C3 
              FF FF F1 FF 	.db %10000111, %11111111, %11111111, %11000011, %11111111, %11111111, %11110001, %11111111
 1315 D1:F694 FF FC FF FF 
              FE 7F FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111110, %01111111, %11111111, %11111111
 1316 D1:F69C 1F FF FF 80 	.db %00011111, %11111111, %11111111, %10000000
 1317 D1:F6A0 -  -  -  -  
 1318 D1:F6A0 95 46 80 00 	.db %10010101, %01000110, %10000000, %00000000
 1319 D1:F6A4 -  -  -  -  
 1320 D1:F6A4 00 00 00 00 
              00 09 24 92 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001001, %00100100, %10010010
 1321 D1:F6AC 48 00 02 4A 
              49 24 89 00 	.db %01001000, %00000000, %00000010, %01001010, %01001001, %00100100, %10001001, %00000000
 1322 D1:F6B4 02 4A 49 26 
              4A 44 80 09 	.db %00000010, %01001010, %01001001, %00100110, %01001010, %01000100, %10000000, %00001001
 1323 D1:F6BC 49 14 93 25 
              24 40 00 94 	.db %01001001, %00010100, %10010011, %00100101, %00100100, %01000000, %00000000, %10010100
 1324 D1:F6C4 91 45 26 DA 
              48 80 09 29 	.db %10010001, %01000101, %00100110, %11011010, %01001000, %10000000, %00001001, %00101001
 1325 D1:F6CC 14 92 49 24 
              89 20 00 4A 	.db %00010100, %10010010, %01001001, %00100100, %10001001, %00100000, %00000000, %01001010
 1326 D1:F6D4 48 A4 92 48 
              92 64 20 12 	.db %01001000, %10100100, %10010010, %01001000, %10010010, %01100100, %00100000, %00010010
 1327 D1:F6DC 52 29 24 92 
              92 49 21 00 	.db %01010010, %00101001, %00100100, %10010010, %10010010, %01001001, %00100001, %00000000
 1328 D1:F6E4 02 52 49 24 
              A4 92 49 21 	.db %00000010, %01010010, %01001001, %00100100, %10100100, %10010010, %01001001, %00100001
 1329 D1:F6EC 20 12 92 48 
              C9 24 92 23 	.db %00100000, %00010010, %10010010, %01001000, %11001001, %00100100, %10010010, %00100011
 1330 D1:F6F4 08 00 12 92 
              49 19 24 91 	.db %00001000, %00000000, %00010010, %10010010, %01001001, %00011001, %00100100, %10010001
 1331 D1:F6FC 24 40 04 A4 
              92 46 49 21 	.db %00100100, %01000000, %00000100, %10100100, %10010010, %01000110, %01001001, %00100001
 1332 D1:F704 49 10 0A 29 
              24 8C 92 14 	.db %01001001, %00010000, %00001010, %00101001, %00100100, %10001100, %10010010, %00010100
 1333 D1:F70C 92 20 12 8A 
              44 99 21 49 	.db %10010010, %00100000, %00010010, %10001010, %01000100, %10011001, %00100001, %01001001
 1334 D1:F714 22 40 04 94 
              92 48 C2 52 	.db %00100010, %01000000, %00000100, %10010100, %10010010, %01001000, %11000010, %01010010
 1335 D1:F71C 25 22 00 25 
              14 92 48 82 	.db %00100101, %00100010, %00000000, %00100101, %00010100, %10010010, %01001000, %10000010
 1336 D1:F724 52 49 22 00 
              24 92 49 20 	.db %01010010, %01001001, %00100010, %00000000, %00100100, %10010010, %01001001, %00100000
 1337 D1:F72C 02 49 24 90 
              00 00 00 00 	.db %00000010, %01001001, %00100100, %10010000, %00000000, %00000000, %00000000, %00000000
 1338 D1:F734 00 00 00 00 
              00 -  -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000
 1339 D1:F739 -  -  -  -  
 1340 D1:F739 -  -  -  -  
 1341 D1:F739 -  -  -  -  FrogChargeLit:
 1342 D1:F739 20 -  -  -  	.db %00100000
 1343 D1:F73A 19 12 -  -  	.db 25, 18
 1344 D1:F73C 00 0F FE 00 
              1F FF 80 3F 	.db %00000000, %00001111, %11111110, %00000000, %00011111, %11111111, %10000000, %00111111
 1345 D1:F744 FF E0 3F FF 
              F0 3F FF F8 	.db %11111111, %11100000, %00111111, %11111111, %11110000, %00111111, %11111111, %11111000
 1346 D1:F74C 7F FF FC 7F 
              FF FE FF FF 	.db %01111111, %11111111, %11111100, %01111111, %11111111, %11111110, %11111111, %11111111
 1347 D1:F754 FF FF FF FF 
              FF FF FF BF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %10111111
 1348 D1:F75C FF FF DF FF 
              FF CF FF FF 	.db %11111111, %11111111, %11011111, %11111111, %11111111, %11001111, %11111111, %11111111
 1349 D1:F764 C7 FF FF E3 
              FF FF FD FF 	.db %11000111, %11111111, %11111111, %11100011, %11111111, %11111111, %11111101, %11111111
 1350 D1:F76C FF FE FF FF 
              FF 3F FF FF 	.db %11111111, %11111110, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
 1351 D1:F774 80 -  -  -  	.db %10000000
 1352 D1:F775 -  -  -  -  
 1353 D1:F775 98 46 -  -  	.db %10011000, %01000110
 1354 D1:F777 -  -  -  -  
 1355 D1:F777 00 00 00 05 
              55 54 00 56 	.db %00000000, %00000000, %00000000, %00000101, %01010101, %01010100, %00000000, %01010110
 1356 D1:F77F AA A5 00 56 
              AA D6 94 05 	.db %10101010, %10100101, %00000000, %01010110, %10101010, %11010110, %10010100, %00000101
 1357 D1:F787 A9 AB 5A 90 
              05 A9 9A FE 	.db %10101001, %10101011, %01011010, %10010000, %00000101, %10101001, %10011010, %11111110
 1358 D1:F78F A4 05 69 AA 
              AA A5 40 16 	.db %10100100, %00000101, %01101001, %10101010, %10101010, %10100101, %01000000, %00010110
 1359 D1:F797 A6 AA A5 55 
              40 56 9A AA 	.db %10100110, %10101010, %10100101, %01010101, %01000000, %01010110, %10011010, %10101010
 1360 D1:F79F 95 55 40 56 
              AA A9 55 55 	.db %10010101, %01010101, %01000000, %01010110, %10101010, %10101001, %01010101, %01010101
 1361 D1:F7A7 50 56 A9 55 
              55 65 40 5A 	.db %01010000, %01010110, %10101001, %01010101, %01010101, %01100101, %01000000, %01011010
 1362 D1:F7AF AA 55 55 A9 
              01 9A AA 55 	.db %10101010, %01010101, %01010101, %10101001, %00000001, %10011010, %10101010, %01010101
 1363 D1:F7B7 56 A4 16 6A 
              A5 55 AA 41 	.db %01010110, %10100100, %00010110, %01101010, %10100101, %01010101, %10101010, %01000001
 1364 D1:F7BF 59 A5 55 6A 
              58 01 66 AA 	.db %01011001, %10100101, %01010101, %01101010, %01011000, %00000001, %01100110, %10101010
 1365 D1:F7C7 A4 5A AA 40 
              55 55 50 15 	.db %10100100, %01011010, %10101010, %01000000, %01010101, %01010101, %01010000, %00010101
 1366 D1:F7CF 55 40 00 00 
              00 00 00 00 	.db %01010101, %01000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
 1367 D1:F7D7 -  -  -  -  
 1368 D1:F7D7 -  -  -  -  
 1369 D1:F7D7 -  -  -  -  FrogCharge:
 1370 D1:F7D7 40 -  -  -  	.db %01000000
 1371 D1:F7D8 19 12 -  -  	.db 25, 18
 1372 D1:F7DA 00 0F FE 00 
              1F FF 80 3F 	.db %00000000, %00001111, %11111110, %00000000, %00011111, %11111111, %10000000, %00111111
 1373 D1:F7E2 FF E0 3F FF 
              F0 3F FF F8 	.db %11111111, %11100000, %00111111, %11111111, %11110000, %00111111, %11111111, %11111000
 1374 D1:F7EA 7F FF FC 7F 
              FF FE FF FF 	.db %01111111, %11111111, %11111100, %01111111, %11111111, %11111110, %11111111, %11111111
 1375 D1:F7F2 FF FF FF FF 
              FF FF FF BF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %10111111
 1376 D1:F7FA FF FF DF FF 
              FF CF FF FF 	.db %11111111, %11111111, %11011111, %11111111, %11111111, %11001111, %11111111, %11111111
 1377 D1:F802 C7 FF FF E3 
              FF FF FD FF 	.db %11000111, %11111111, %11111111, %11100011, %11111111, %11111111, %11111101, %11111111
 1378 D1:F80A FF FE FF FF 
              FF 3F FF FF 	.db %11111111, %11111110, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
 1379 D1:F812 80 -  -  -  	.db %10000000
 1380 D1:F813 -  -  -  -  
 1381 D1:F813 95 46 80 00 	.db %10010101, %01000110, %10000000, %00000000
 1382 D1:F817 -  -  -  -  
 1383 D1:F817 00 00 00 00 
              00 09 24 92 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001001, %00100100, %10010010
 1384 D1:F81F 48 00 02 4A 
              49 24 89 00 	.db %01001000, %00000000, %00000010, %01001010, %01001001, %00100100, %10001001, %00000000
 1385 D1:F827 02 4A 49 26 
              4A 44 80 09 	.db %00000010, %01001010, %01001001, %00100110, %01001010, %01000100, %10000000, %00001001
 1386 D1:F82F 49 14 93 25 
              24 40 00 94 	.db %01001001, %00010100, %10010011, %00100101, %00100100, %01000000, %00000000, %10010100
 1387 D1:F837 91 45 26 DA 
              48 80 09 29 	.db %10010001, %01000101, %00100110, %11011010, %01001000, %10000000, %00001001, %00101001
 1388 D1:F83F 14 92 49 24 
              89 20 00 4A 	.db %00010100, %10010010, %01001001, %00100100, %10001001, %00100000, %00000000, %01001010
 1389 D1:F847 48 A4 92 48 
              92 64 20 02 	.db %01001000, %10100100, %10010010, %01001000, %10010010, %01100100, %00100000, %00000010
 1390 D1:F84F 4A 45 24 92 
              52 49 24 20 	.db %01001010, %01000101, %00100100, %10010010, %01010010, %01001001, %00100100, %00100000
 1391 D1:F857 02 4A 49 24 
              94 92 49 24 	.db %00000010, %01001010, %01001001, %00100100, %10010100, %10010010, %01001001, %00100100
 1392 D1:F85F 24 02 4A 49 
              19 24 92 48 	.db %00100100, %00000010, %01001010, %01001001, %00011001, %00100100, %10010010, %01001000
 1393 D1:F867 8C 20 02 52 
              49 23 24 92 	.db %10001100, %00100000, %00000010, %01010010, %01001001, %00100011, %00100100, %10010010
 1394 D1:F86F 44 91 00 14 
              52 49 23 24 	.db %01000100, %10010001, %00000000, %00010100, %01010010, %01001001, %00100011, %00100100
 1395 D1:F877 90 A4 88 04 
              A2 92 48 C9 	.db %10010000, %10100100, %10001000, %00000100, %10100010, %10010010, %01001000, %11001001
 1396 D1:F87F 21 49 22 01 
              25 14 89 26 	.db %00100001, %01001001, %00100010, %00000001, %00100101, %00010100, %10001001, %00100110
 1397 D1:F887 42 92 25 00 
              01 28 A4 92 	.db %01000010, %10010010, %00100101, %00000000, %00000001, %00101000, %10100100, %10010010
 1398 D1:F88F 48 82 52 49 
              22 00 24 92 	.db %01001000, %10000010, %01010010, %01001001, %00100010, %00000000, %00100100, %10010010
 1399 D1:F897 49 24 00 49 
              24 92 00 00 	.db %01001001, %00100100, %00000000, %01001001, %00100100, %10010010, %00000000, %00000000
 1400 D1:F89F 00 00 00 00 
              00 00 00 -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
 1401 D1:F8A6 -  -  -  -  
 1402 D1:F8A6 -  -  -  -  
 1403 D1:F8A6 -  -  -  -  FrogJump:
 1404 D1:F8A6 40 -  -  -  	.db %01000000
 1405 D1:F8A7 1E 1D -  -  	.db 30, 29
 1406 D1:F8A9 00 00 1F C0 
              00 01 FF 80 	.db %00000000, %00000000, %00011111, %11000000, %00000000, %00000001, %11111111, %10000000
 1407 D1:F8B1 00 0F FF 00 
              00 7F FC 00 	.db %00000000, %00001111, %11111111, %00000000, %00000000, %01111111, %11111100, %00000000
 1408 D1:F8B9 03 FF F0 00 
              1F FF C0 01 	.db %00000011, %11111111, %11110000, %00000000, %00011111, %11111111, %11000000, %00000001
 1409 D1:F8C1 FF FF 00 0F 
              FF FC 00 FF 	.db %11111111, %11111111, %00000000, %00001111, %11111111, %11111100, %00000000, %11111111
 1410 D1:F8C9 FF F0 07 FF 
              FF E0 1F FF 	.db %11111111, %11110000, %00000111, %11111111, %11111111, %11100000, %00011111, %11111111
 1411 D1:F8D1 FF C0 FF FF 
              FF 07 FF FF 	.db %11111111, %11000000, %11111111, %11111111, %11111111, %00000111, %11111111, %11111111
 1412 D1:F8D9 FC 1F FF FF 
              F0 7F FF FF 	.db %11111100, %00011111, %11111111, %11111111, %11110000, %01111111, %11111111, %11111111
 1413 D1:F8E1 83 FF FF FC 
              1F FF FF C0 	.db %10000011, %11111111, %11111111, %11111100, %00011111, %11111111, %11111111, %11000000
 1414 D1:F8E9 7F FF 80 03 
              FF FC 00 1F 	.db %01111111, %11111111, %10000000, %00000011, %11111111, %11111100, %00000000, %00011111
 1415 D1:F8F1 FF C0 00 FF 
              F0 00 03 FF 	.db %11111111, %11000000, %00000000, %11111111, %11110000, %00000000, %00000011, %11111111
 1416 D1:F8F9 80 00 0F FC 
              00 00 3F C0 	.db %10000000, %00000000, %00001111, %11111100, %00000000, %00000000, %00111111, %11000000
 1417 D1:F901 00 00 FF 00 
              00 03 FC 00 	.db %00000000, %00000000, %11111111, %00000000, %00000000, %00000011, %11111100, %00000000
 1418 D1:F909 00 0F F0 00 
              00 3F 80 00 	.db %00000000, %00001111, %11110000, %00000000, %00000000, %00111111, %10000000, %00000000
 1419 D1:F911 00 7C 00 00 
              00 -  -  -  	.db %00000000, %01111100, %00000000, %00000000, %00000000
 1420 D1:F916 -  -  -  -  
 1421 D1:F916 95 46 80 00 	.db %10010101, %01000110, %10000000, %00000000
 1422 D1:F91A -  -  -  -  
 1423 D1:F91A 00 00 00 00 
              92 48 00 12 	.db %00000000, %00000000, %00000000, %00000000, %10010010, %01001000, %00000000, %00010010
 1424 D1:F922 92 48 80 01 
              49 24 92 20 	.db %10010010, %01001000, %10000000, %00000001, %01001001, %00100100, %10010010, %00100000
 1425 D1:F92A 02 92 4C 94 
              88 00 A4 92 	.db %00000010, %10010010, %01001100, %10010100, %10001000, %00000000, %10100100, %10010010
 1426 D1:F932 64 A4 40 00 
              A4 52 4D B4 	.db %01100100, %10100100, %01000000, %00000000, %10100100, %01010010, %01001101, %10110100
 1427 D1:F93A 88 00 94 8A 
              29 24 91 20 	.db %10001000, %00000000, %10010100, %10001010, %00101001, %00100100, %10010001, %00100000
 1428 D1:F942 00 52 49 24 
              92 48 C2 00 	.db %00000000, %01010010, %01001001, %00100100, %10010010, %01001000, %11000010, %00000000
 1429 D1:F94A 25 24 52 49 
              22 4C 80 00 	.db %00100101, %00100100, %01010010, %01001001, %00100010, %01001100, %10000000, %00000000
 1430 D1:F952 52 48 A4 92 
              92 49 01 20 	.db %01010010, %01001000, %10100100, %10010010, %10010010, %01001001, %00000001, %00100000
 1431 D1:F95A 00 52 49 24 
              94 92 40 0A 	.db %00000000, %01010010, %01001001, %00100100, %10010100, %10010010, %01000000, %00001010
 1432 D1:F962 44 00 52 45 
              25 24 90 92 	.db %01000100, %00000000, %01010010, %01000101, %00100101, %00100100, %10010000, %10010010
 1433 D1:F96A 52 48 80 52 
              49 29 24 91 	.db %01010010, %01001000, %10000000, %01010010, %01001001, %00101001, %00100100, %10010001
 1434 D1:F972 24 92 48 80 
              0A 49 25 24 	.db %00100100, %10010010, %01001000, %10000000, %00001010, %01001001, %00100101, %00100100
 1435 D1:F97A 91 24 92 44 
              80 01 49 25 	.db %10010001, %00100100, %10010010, %01000100, %10000000, %00000001, %01001001, %00100101
 1436 D1:F982 24 92 12 49 
              24 00 01 49 	.db %00100100, %10010010, %00010010, %01001001, %00100100, %00000000, %00000001, %01001001
 1437 D1:F98A 15 24 92 10 
              00 00 00 52 	.db %00010101, %00100100, %10010010, %00010000, %00000000, %00000000, %00000000, %01010010
 1438 D1:F992 45 29 24 24 
              00 0A 48 A2 	.db %01000101, %00101001, %00100100, %00100100, %00000000, %00001010, %01001000, %10100010
 1439 D1:F99A 49 20 00 0A 
              48 A4 40 00 	.db %01001001, %00100000, %00000000, %00001010, %01001000, %10100100, %01000000, %00000000
 1440 D1:F9A2 00 52 45 22 
              00 29 22 89 	.db %00000000, %01010010, %01000101, %00100010, %00000000, %00101001, %00100010, %10001001
 1441 D1:F9AA 00 14 8A 20 
              00 52 28 80 	.db %00000000, %00010100, %10001010, %00100000, %00000000, %01010010, %00101000, %10000000
 1442 D1:F9B2 4A 28 80 51 
              48 80 51 44 	.db %01001010, %00101000, %10000000, %01010001, %01001000, %10000000, %01010001, %01000100
 1443 D1:F9BA 00 09 20 00 
              00 -  -  -  	.db %00000000, %00001001, %00100000, %00000000, %00000000
 1444 D1:F9BF -  -  -  -  
 1445 D1:F9BF -  -  -  -  
 1446 D1:F9BF -  -  -  -  FrogJumpMouth:
 1447 D1:F9BF 40 -  -  -  	.db %01000000
 1448 D1:F9C0 1E 1D -  -  	.db 30, 29
 1449 D1:F9C2 00 00 1F C0 
              00 01 FF 80 	.db %00000000, %00000000, %00011111, %11000000, %00000000, %00000001, %11111111, %10000000
 1450 D1:F9CA 00 0F FF 00 
              00 7F FC 00 	.db %00000000, %00001111, %11111111, %00000000, %00000000, %01111111, %11111100, %00000000
 1451 D1:F9D2 03 FF F0 00 
              1F FF C0 01 	.db %00000011, %11111111, %11110000, %00000000, %00011111, %11111111, %11000000, %00000001
 1452 D1:F9DA FF FF 00 0F 
              FF FC 00 FF 	.db %11111111, %11111111, %00000000, %00001111, %11111111, %11111100, %00000000, %11111111
 1453 D1:F9E2 FF F0 07 FF 
              FF E0 1F FF 	.db %11111111, %11110000, %00000111, %11111111, %11111111, %11100000, %00011111, %11111111
 1454 D1:F9EA FF C0 FF FF 
              FF 07 FF FF 	.db %11111111, %11000000, %11111111, %11111111, %11111111, %00000111, %11111111, %11111111
 1455 D1:F9F2 FC 1F FF FF 
              F0 7F FF FF 	.db %11111100, %00011111, %11111111, %11111111, %11110000, %01111111, %11111111, %11111111
 1456 D1:F9FA 83 FF FF FC 
              1F FF FF C0 	.db %10000011, %11111111, %11111111, %11111100, %00011111, %11111111, %11111111, %11000000
 1457 D1:FA02 7F FF 80 03 
              FF FC 00 1F 	.db %01111111, %11111111, %10000000, %00000011, %11111111, %11111100, %00000000, %00011111
 1458 D1:FA0A FF C0 00 FF 
              F0 00 03 FF 	.db %11111111, %11000000, %00000000, %11111111, %11110000, %00000000, %00000011, %11111111
 1459 D1:FA12 80 00 0F FC 
              00 00 3F C0 	.db %10000000, %00000000, %00001111, %11111100, %00000000, %00000000, %00111111, %11000000
 1460 D1:FA1A 00 00 FF 00 
              00 03 FC 00 	.db %00000000, %00000000, %11111111, %00000000, %00000000, %00000011, %11111100, %00000000
 1461 D1:FA22 00 0F F0 00 
              00 3F 80 00 	.db %00000000, %00001111, %11110000, %00000000, %00000000, %00111111, %10000000, %00000000
 1462 D1:FA2A 00 7C 00 00 
              00 -  -  -  	.db %00000000, %01111100, %00000000, %00000000, %00000000
 1463 D1:FA2F -  -  -  -  
 1464 D1:FA2F 95 46 80 00 	.db %10010101, %01000110, %10000000, %00000000
 1465 D1:FA33 -  -  -  -  
 1466 D1:FA33 00 00 00 00 
              92 48 00 12 	.db %00000000, %00000000, %00000000, %00000000, %10010010, %01001000, %00000000, %00010010
 1467 D1:FA3B 92 48 80 01 
              49 24 92 20 	.db %10010010, %01001000, %10000000, %00000001, %01001001, %00100100, %10010010, %00100000
 1468 D1:FA43 02 92 4C 94 
              88 00 A4 92 	.db %00000010, %10010010, %01001100, %10010100, %10001000, %00000000, %10100100, %10010010
 1469 D1:FA4B 64 A4 40 00 
              A4 52 4D B4 	.db %01100100, %10100100, %01000000, %00000000, %10100100, %01010010, %01001101, %10110100
 1470 D1:FA53 48 00 94 8A 
              29 24 89 20 	.db %01001000, %00000000, %10010100, %10001010, %00101001, %00100100, %10001001, %00100000
 1471 D1:FA5B 00 52 49 24 
              92 44 92 00 	.db %00000000, %01010010, %01001001, %00100100, %10010010, %01000100, %10010010, %00000000
 1472 D1:FA63 25 24 52 49 
              22 49 80 00 	.db %00100101, %00100100, %01010010, %01001001, %00100010, %01001001, %10000000, %00000000
 1473 D1:FA6B 52 48 A4 92 
              92 49 01 20 	.db %01010010, %01001000, %10100100, %10010010, %10010010, %01001001, %00000001, %00100000
 1474 D1:FA73 00 52 49 24 
              94 92 40 0A 	.db %00000000, %01010010, %01001001, %00100100, %10010100, %10010010, %01000000, %00001010
 1475 D1:FA7B 44 00 52 45 
              25 24 90 92 	.db %01000100, %00000000, %01010010, %01000101, %00100101, %00100100, %10010000, %10010010
 1476 D1:FA83 52 48 80 52 
              49 29 24 91 	.db %01010010, %01001000, %10000000, %01010010, %01001001, %00101001, %00100100, %10010001
 1477 D1:FA8B 24 92 48 80 
              0A 49 25 24 	.db %00100100, %10010010, %01001000, %10000000, %00001010, %01001001, %00100101, %00100100
 1478 D1:FA93 91 24 92 44 
              80 01 49 25 	.db %10010001, %00100100, %10010010, %01000100, %10000000, %00000001, %01001001, %00100101
 1479 D1:FA9B 24 92 12 49 
              24 00 01 49 	.db %00100100, %10010010, %00010010, %01001001, %00100100, %00000000, %00000001, %01001001
 1480 D1:FAA3 15 24 92 10 
              00 00 00 52 	.db %00010101, %00100100, %10010010, %00010000, %00000000, %00000000, %00000000, %01010010
 1481 D1:FAAB 45 29 24 24 
              00 0A 48 A2 	.db %01000101, %00101001, %00100100, %00100100, %00000000, %00001010, %01001000, %10100010
 1482 D1:FAB3 49 20 00 0A 
              48 A4 40 00 	.db %01001001, %00100000, %00000000, %00001010, %01001000, %10100100, %01000000, %00000000
 1483 D1:FABB 00 52 45 22 
              00 29 22 89 	.db %00000000, %01010010, %01000101, %00100010, %00000000, %00101001, %00100010, %10001001
 1484 D1:FAC3 00 14 8A 20 
              00 52 28 80 	.db %00000000, %00010100, %10001010, %00100000, %00000000, %01010010, %00101000, %10000000
 1485 D1:FACB 4A 28 80 51 
              48 80 51 44 	.db %01001010, %00101000, %10000000, %01010001, %01001000, %10000000, %01010001, %01000100
 1486 D1:FAD3 00 09 20 00 
              00 -  -  -  	.db %00000000, %00001001, %00100000, %00000000, %00000000
 1487 D1:FAD8 -  -  -  -  
 1488 D1:FAD8 -  -  -  -  
 1489 D1:FAD8 -  -  -  -  FrogFall:
 1490 D1:FAD8 40 -  -  -  	.db %01000000
 1491 D1:FAD9 16 1A -  -  	.db 22, 26
 1492 D1:FADB 3C 00 00 F8 
              00 03 E0 00 	.db %00111100, %00000000, %00000000, %11111000, %00000000, %00000011, %11100000, %00000000
 1493 D1:FAE3 0F 80 00 3F 
              03 F0 FC 0F 	.db %00001111, %10000000, %00000000, %00111111, %00000011, %11110000, %11111100, %00001111
 1494 D1:FAEB E3 F0 7F 9F 
              C1 FE 7F 8F 	.db %11100011, %11110000, %01111111, %10011111, %11000001, %11111110, %01111111, %10001111
 1495 D1:FAF3 F3 FF 3F 8F 
              FF FC 3F FF 	.db %11110011, %11111111, %00111111, %10001111, %11111111, %11111100, %00111111, %11111111
 1496 D1:FAFB F0 FF FF C3 
              FF FF 0F FF 	.db %11110000, %11111111, %11111111, %11000011, %11111111, %11111111, %00001111, %11111111
 1497 D1:FB03 FE 3F FF FE 
              FF FF FB FF 	.db %11111110, %00111111, %11111111, %11111110, %11111111, %11111111, %11111011, %11111111
 1498 D1:FB0B FF F7 FF FF 
              DF FF FF 3F 	.db %11111111, %11110111, %11111111, %11111111, %11011111, %11111111, %11111111, %00111111
 1499 D1:FB13 FF FC 7F FF 
              F0 FF FF C1 	.db %11111111, %11111100, %01111111, %11111111, %11110000, %11111111, %11111111, %11000001
 1500 D1:FB1B FF FF 01 FF 
              F8 01 FF C0 	.db %11111111, %11111111, %00000001, %11111111, %11111000, %00000001, %11111111, %11000000
 1501 D1:FB23 -  -  -  -  
 1502 D1:FB23 95 48 60 00 	.db %10010101, %01001000, %01100000, %00000000
 1503 D1:FB27 -  -  -  -  
 1504 D1:FB27 00 00 48 00 
              A2 01 44 02 	.db %00000000, %00000000, %01001000, %00000000, %10100010, %00000001, %01000100, %00000010
 1505 D1:FB2F 88 00 00 00 
              29 10 09 24 	.db %10001000, %00000000, %00000000, %00000000, %00101001, %00010000, %00001001, %00100100
 1506 D1:FB37 00 4A 20 02 
              92 20 02 91 	.db %00000000, %01001010, %00100000, %00000010, %10010010, %00100000, %00000010, %10010001
 1507 D1:FB3F 00 94 88 00 
              A4 88 00 14 	.db %00000000, %10010100, %10001000, %00000000, %10100100, %10001000, %00000000, %00010100
 1508 D1:FB47 88 00 14 91 
              20 02 91 00 	.db %10001000, %00000000, %00010100, %10010001, %00100000, %00000010, %10010001, %00000000
 1509 D1:FB4F 14 91 64 80 
              01 48 80 52 	.db %00010100, %10010001, %01100100, %10000000, %00000001, %01001000, %10000000, %01010010
 1510 D1:FB57 44 B6 48 05 
              22 01 49 22 	.db %01000100, %10110110, %01001000, %00000101, %00100010, %00000001, %01001001, %00100010
 1511 D1:FB5F DB 64 A4 88 
              05 24 8B 6D 	.db %11011011, %01100100, %10100100, %10001000, %00000101, %00100100, %10001011, %01101101
 1512 D1:FB67 B2 92 20 14 
              92 2D B6 DA 	.db %10110010, %10010010, %00100000, %00010100, %10010010, %00101101, %10110110, %11011010
 1513 D1:FB6F 48 80 0A 48 
              B6 DB 6D 26 	.db %01001000, %10000000, %00001010, %01001000, %10110110, %11011011, %01101101, %00100110
 1514 D1:FB77 C8 00 14 92 
              49 36 DB 6D 	.db %11001000, %00000000, %00010100, %10010010, %01001001, %00110110, %11011011, %01101101
 1515 D1:FB7F B2 40 05 14 
              92 49 36 49 	.db %10110010, %01000000, %00000101, %00010100, %10010010, %01001001, %00110110, %01001001
 1516 D1:FB87 24 80 0A 48 
              A4 92 48 92 	.db %00100100, %10000000, %00001010, %01001000, %10100100, %10010010, %01001000, %10010010
 1517 D1:FB8F 52 20 02 52 
              29 24 92 49 	.db %01010010, %00100000, %00000010, %01010010, %00101001, %00100100, %10010010, %01001001
 1518 D1:FB97 24 40 04 A4 
              8A 29 42 52 	.db %00100100, %01000000, %00000100, %10100100, %10001010, %00101001, %01000010, %01010010
 1519 D1:FB9F 44 00 4A 48 
              A4 A1 29 22 	.db %01000100, %00000000, %01001010, %01001000, %10100100, %10100001, %00101001, %00100010
 1520 D1:FBA7 00 24 A4 92 
              92 24 48 00 	.db %00000000, %00100100, %10100100, %10010010, %10010010, %00100100, %01001000, %00000000
 1521 D1:FBAF 12 52 49 24 
              48 00 02 49 	.db %00010010, %01010010, %01001001, %00100100, %01001000, %00000000, %00000010, %01001001
 1522 D1:FBB7 24 92 00 00 
              00 00 00 -  	.db %00100100, %10010010, %00000000, %00000000, %00000000, %00000000, %00000000
 1523 D1:FBBE -  -  -  -  
 1524 D1:FBBE -  -  -  -  
 1525 D1:FBBE -  -  -  -  FrogTongue:
 1526 D1:FBBE 10 -  -  -  	.db %00010000
 1527 D1:FBBF 08 08 -  -  	.db 8, 8
 1528 D1:FBC1 3C 7E FF FF 
              FF FF 7E 3C 	.db %00111100, %01111110, %11111111, %11111111, %11111111, %11111111, %01111110, %00111100
 1529 D1:FBC9 -  -  -  -  
 1530 D1:FBC9 CB -  -  -  	.db %11001011
 1531 D1:FBCA -  -  -  -  
 1532 D1:FBCA 07 9F 9F 9F 
              9F 9E 00 -  	.db %00000111, %10011111, %10011111, %10011111, %10011111, %10011110, %00000000
 1533 D1:FBD1 -  -  -  -  
 1534 D1:FBD1 -  -  -  -  
 1535 D1:FBD1 -  -  -  -  Unlucky_0:
 1536 D1:FBD1 14 -  -  -  	.db %00010100
 1537 D1:FBD2 3A 0B -  -  	.db 58, 11
 1538 D1:FBD4 9B -  -  -  	.db %10011011
 1539 D1:FBD5 -  -  -  -  
 1540 D1:FBD5 00 00 00 00 
              00 00 00 19 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00011001
 1541 D1:FBDD 98 66 06 67 
              E6 66 66 66 	.db %10011000, %01100110, %00000110, %01100111, %11100110, %01100110, %01100110, %01100110
 1542 D1:FBE5 19 81 99 F9 
              99 99 99 E6 	.db %00011001, %10000001, %10011001, %11111001, %10011001, %10011001, %10011001, %11100110
 1543 D1:FBED 60 66 60 66 
              66 66 79 98 	.db %01100000, %01100110, %01100000, %01100110, %01100110, %01100110, %01111001, %10011000
 1544 D1:FBF5 19 98 1E 19 
              99 9F E6 06 	.db %00011001, %10011000, %00011110, %00011001, %10011001, %10011111, %11100110, %00000110
 1545 D1:FBFD 66 07 87 E6 
              66 79 81 99 	.db %01100110, %00000111, %10000111, %11100110, %01100110, %01111001, %10000001, %10011001
 1546 D1:FC05 81 F8 61 99 
              9E 60 66 60 	.db %10000001, %11111000, %01100001, %10011001, %10011110, %01100000, %01100110, %01100000
 1547 D1:FC0D 66 18 7E 61 
              9F 9F 9F 99 	.db %01100110, %00011000, %01111110, %01100001, %10011111, %10011111, %10011111, %10011001
 1548 D1:FC15 86 1F 98 67 
              E7 E7 E6 61 	.db %10000110, %00011111, %10011000, %01100111, %11100111, %11100111, %11100110, %01100001
 1549 D1:FC1D 80 00 00 00 
              00 00 00 00 	.db %10000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
 1550 D1:FC25 -  -  -  -  
 1551 D1:FC25 -  -  -  -  
Listing for file "ascent.asm"
  625 D1:FC25 -  -  -  -  #include "generated/SpriteEquates.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\generated\SpriteEquates.txt"
    1 D1:FC25 -  -  -  -  GroundHumpDark_Fast .equ 13894080 ; vRam + 0 - 134
    2 D1:FC25 -  -  -  -  GroundHumpDark_Fast_F .equ 13894214 ; vRam + 134 - 268
    3 D1:FC25 -  -  -  -  Tree_16_Fast .equ 13894348 ; vRam + 268 - 353
    4 D1:FC25 -  -  -  -  Tree_17_Slow .equ 13894433 ; vRam + 353 - 454
    5 D1:FC25 -  -  -  -  Tree_17_Slow_O_F .equ 13894535 ; vRam + 455 - 556
    6 D1:FC25 -  -  -  -  Tree_18_Slow .equ 13894637 ; vRam + 557 - 657
    7 D1:FC25 -  -  -  -  Tree_18_Slow_O_F .equ 13894737 ; vRam + 657 - 757
    8 D1:FC25 -  -  -  -  Tree_16_Fast_F .equ 13894838 ; vRam + 758 - 843
    9 D1:FC25 -  -  -  -  Clouds_0_Fast .equ 13894924 ; vRam + 844 - 945
   10 D1:FC25 -  -  -  -  Clouds_1_Fast .equ 13895026 ; vRam + 946 - 1045
   11 D1:FC25 -  -  -  -  Clouds_3_Fast .equ 13895126 ; vRam + 1046 - 1153
   12 D1:FC25 -  -  -  -  Clouds_4_Fast .equ 13895234 ; vRam + 1154 - 1218
   13 D1:FC25 -  -  -  -  Clouds_2_Fast .equ 13895298 ; vRam + 1218 - 1395
   14 D1:FC25 -  -  -  -  Clouds_0_Fast_F .equ 13895476 ; vRam + 1396 - 1497
   15 D1:FC25 -  -  -  -  Clouds_1_Fast_F .equ 13895578 ; vRam + 1498 - 1597
   16 D1:FC25 -  -  -  -  Clouds_4_Fast_F .equ 13895678 ; vRam + 1598 - 1662
   17 D1:FC25 -  -  -  -  Clouds_3_Fast_F .equ 13895742 ; vRam + 1662 - 1769
   18 D1:FC25 -  -  -  -  Clouds_2_Fast_F .equ 13895850 ; vRam + 1770 - 1947
   19 D1:FC25 -  -  -  -  FrogDefault_Slow .equ 13896027 ; vRam + 1947 - 2250
   20 D1:FC25 -  -  -  -  FrogDefault_Slow_O .equ 13896331 ; vRam + 2251 - 2554
   21 D1:FC25 -  -  -  -  FrogDefault_Slow_F .equ 13896635 ; vRam + 2555 - 2858
   22 D1:FC25 -  -  -  -  FrogDefault_Slow_O_F .equ 13896939 ; vRam + 2859 - 3162
   23 D1:FC25 -  -  -  -  FrogChargeLit_Slow .equ 13897243 ; vRam + 3163 - 3451
   24 D1:FC25 -  -  -  -  FrogChargeLit_Slow_O .equ 13897531 ; vRam + 3451 - 3744
   25 D1:FC25 -  -  -  -  FrogChargeLit_Slow_F .equ 13897825 ; vRam + 3745 - 4038
   26 D1:FC25 -  -  -  -  FrogChargeLit_Slow_O_F .equ 13898119 ; vRam + 4039 - 4327
   27 D1:FC25 -  -  -  -  FrogCharge_Slow .equ 13898407 ; vRam + 4327 - 4615
   28 D1:FC25 -  -  -  -  FrogCharge_Slow_O .equ 13898695 ; vRam + 4615 - 4908
   29 D1:FC25 -  -  -  -  FrogCharge_Slow_F .equ 13898989 ; vRam + 4909 - 5202
   30 D1:FC25 -  -  -  -  FrogCharge_Slow_O_F .equ 13899283 ; vRam + 5203 - 5491
   31 D1:FC25 -  -  -  -  FrogJump_Slow .equ 13899571 ; vRam + 5491 - 5867
   32 D1:FC25 -  -  -  -  FrogJump_Slow_O .equ 13899947 ; vRam + 5867 - 6252
   33 D1:FC25 -  -  -  -  FrogJump_Slow_F .equ 13900333 ; vRam + 6253 - 6629
   34 D1:FC25 -  -  -  -  FrogJump_Slow_O_F .equ 13900709 ; vRam + 6629 - 7014
   35 D1:FC25 -  -  -  -  FrogJumpMouth_Slow .equ 13901095 ; vRam + 7015 - 7391
   36 D1:FC25 -  -  -  -  FrogJumpMouth_Slow_O .equ 13901471 ; vRam + 7391 - 7776
   37 D1:FC25 -  -  -  -  FrogJumpMouth_Slow_F .equ 13901857 ; vRam + 7777 - 8153
   38 D1:FC25 -  -  -  -  FrogJumpMouth_Slow_O_F .equ 13902233 ; vRam + 8153 - 8538
   39 D1:FC25 -  -  -  -  FrogFall_Slow .equ 13902619 ; vRam + 8539 - 8906
   40 D1:FC25 -  -  -  -  FrogFall_Slow_O .equ 13902987 ; vRam + 8907 - 9284
   41 D1:FC25 -  -  -  -  FrogFall_Slow_F .equ 13903365 ; vRam + 9285 - 9652
   42 D1:FC25 -  -  -  -  FrogFall_Slow_O_F .equ 13903733 ; vRam + 9653 - 10030
   43 D1:FC25 -  -  -  -  FrogTongue_Slow .equ 13904111 ; vRam + 10031 - 10100
   44 D1:FC25 -  -  -  -  FrogTongue_Slow_O .equ 13904181 ; vRam + 10101 - 10174
   45 D1:FC25 -  -  -  -  Unlucky_0_Fast .equ 13904254 ; vRam + 10174 - 10527
   46 D1:FC25 -  -  -  -  Vine5_Slow .equ 13904607 ; vRam + 10527 - 10716
   47 D1:FC25 -  -  -  -  Vine6_Slow .equ 13904797 ; vRam + 10717 - 10881
   48 D1:FC25 -  -  -  -  Vine4_Slow .equ 13904961 ; vRam + 10881 - 11073
   49 D1:FC25 -  -  -  -  Vine4_Slow_F .equ 13905153 ; vRam + 11073 - 11264
   50 D1:FC25 -  -  -  -  Vine4_Slow_O_F .equ 13905345 ; vRam + 11265 - 11457
   51 D1:FC25 -  -  -  -  Vine5_Slow_O_F .equ 13905537 ; vRam + 11457 - 11648
   52 D1:FC25 -  -  -  -  Vine7_Slow_O .equ 13905729 ; vRam + 11649 - 11777
   53 D1:FC25 -  -  -  -  Vine5_Slow_O .equ 13905857 ; vRam + 11777 - 11966
   54 D1:FC25 -  -  -  -  Vine6_Slow_O .equ 13906047 ; vRam + 11967 - 12133
   55 D1:FC25 -  -  -  -  Vine4_Slow_O .equ 13906213 ; vRam + 12133 - 12323
   56 D1:FC25 -  -  -  -  Vine2_Slow .equ 13906403 ; vRam + 12323 - 12482
   57 D1:FC25 -  -  -  -  VineVertical_Slow_O .equ 13906563 ; vRam + 12483 - 12654
   58 D1:FC25 -  -  -  -  VineVertical_Slow .equ 13906735 ; vRam + 12655 - 12828
   59 D1:FC25 -  -  -  -  Branches_5_Fast .equ 13906908 ; vRam + 12828 - 12988
   60 D1:FC25 -  -  -  -  Branches_3_Fast .equ 13907068 ; vRam + 12988 - 13155
   61 D1:FC25 -  -  -  -  Branches_2_Fast .equ 13907236 ; vRam + 13156 - 13325
   62 D1:FC25 -  -  -  -  GroundDirtFull_Fast .equ 13907406 ; vRam + 13326 - 13503
   63 D1:FC25 -  -  -  -  GroundDirtMound_Fast .equ 13907584 ; vRam + 13504 - 13631
   64 D1:FC25 -  -  -  -  GroundDirtMound_Fast_F .equ 13907712 ; vRam + 13632 - 13759
   65 D1:FC25 -  -  -  -  Branches_8_Slow_O_F .equ 13907839 ; vRam + 13759 - 13895
   66 D1:FC25 -  -  -  -  Branches_9_Slow_O .equ 13907975 ; vRam + 13895 - 14070
   67 D1:FC25 -  -  -  -  Tree_2_Fast .equ 13908150 ; vRam + 14070 - 14321
   68 D1:FC25 -  -  -  -  Tree_4_Fast .equ 13908402 ; vRam + 14322 - 14579
   69 D1:FC25 -  -  -  -  Tree_7_Fast .equ 13908660 ; vRam + 14580 - 14837
   70 D1:FC25 -  -  -  -  Tree_9_Fast .equ 13908918 ; vRam + 14838 - 15095
   71 D1:FC25 -  -  -  -  Tree_6_Fast_F .equ 13909176 ; vRam + 15096 - 15353
   72 D1:FC25 -  -  -  -  Tree_3_Fast_F .equ 13909434 ; vRam + 15354 - 15611
   73 D1:FC25 -  -  -  -  Tree_0_Fast_F .equ 13909692 ; vRam + 15612 - 15863
   74 D1:FC25 -  -  -  -  Tree_3_Fast .equ 13909944 ; vRam + 15864 - 16121
   75 D1:FC25 -  -  -  -  Tree_8_Fast .equ 13910202 ; vRam + 16122 - 16379
   76 D1:FC25 -  -  -  -  Tree_9_Fast_F .equ 13910460 ; vRam + 16380 - 16637
   77 D1:FC25 -  -  -  -  Tree_8_Fast_F .equ 13910718 ; vRam + 16638 - 16895
   78 D1:FC25 -  -  -  -  Tree_4_Fast_F .equ 13910976 ; vRam + 16896 - 17153
   79 D1:FC25 -  -  -  -  Tree_0_Fast .equ 13911234 ; vRam + 17154 - 17405
   80 D1:FC25 -  -  -  -  Tree_6_Fast .equ 13911486 ; vRam + 17406 - 17663
   81 D1:FC25 -  -  -  -  Tree_10_Fast .equ 13911744 ; vRam + 17664 - 17921
   82 D1:FC25 -  -  -  -  Tree_7_Fast_F .equ 13912002 ; vRam + 17922 - 18179
   83 D1:FC25 -  -  -  -  Tree_1_Fast_F .equ 13912260 ; vRam + 18180 - 18434
   84 D1:FC25 -  -  -  -  Tree_1_Fast .equ 13912514 ; vRam + 18434 - 18688
   85 D1:FC25 -  -  -  -  Tree_5_Fast .equ 13912768 ; vRam + 18688 - 18945
   86 D1:FC25 -  -  -  -  Tree_11_Fast .equ 13913026 ; vRam + 18946 - 19203
   87 D1:FC25 -  -  -  -  Tree_5_Fast_F .equ 13913284 ; vRam + 19204 - 19461
   88 D1:FC25 -  -  -  -  Tree_2_Fast_F .equ 13913542 ; vRam + 19462 - 19713
   89 D1:FC25 -  -  -  -  Tree_11_Fast_F .equ 13913794 ; vRam + 19714 - 19971
   90 D1:FC25 -  -  -  -  Branches_1_Fast .equ 13914052 ; vRam + 19972 - 20124
   91 D1:FC25 -  -  -  -  Vine7_Slow .equ 13914205 ; vRam + 20125 - 20258
   92 D1:FC25 -  -  -  -  Branches_1_Fast_F .equ 13914338 ; vRam + 20258 - 20410
   93 D1:FC25 -  -  -  -  Branches_2_Fast_F .equ 13914490 ; vRam + 20410 - 20579
   94 D1:FC25 -  -  -  -  Branches_5_Fast_F .equ 13914660 ; vRam + 20580 - 20740
   95 D1:FC25 -  -  -  -  Vine2_Slow_O .equ 13914821 ; vRam + 20741 - 20901
   96 D1:FC25 -  -  -  -  Vine2_Slow_F .equ 13914981 ; vRam + 20901 - 21061
   97 D1:FC25 -  -  -  -  VineVertical_Slow_F .equ 13915141 ; vRam + 21061 - 21235
   98 D1:FC25 -  -  -  -  Platforms_0_Fast .equ 13915316 ; vRam + 21236 - 21354
   99 D1:FC25 -  -  -  -  Platforms_1_Fast .equ 13915434 ; vRam + 21354 - 21472
  100 D1:FC25 -  -  -  -  Platforms_0_Fast_F .equ 13915552 ; vRam + 21472 - 21590
  101 D1:FC25 -  -  -  -  Platforms_2_Slow_O_F .equ 13915671 ; vRam + 21591 - 21714
  102 D1:FC25 -  -  -  -  Platforms_2_Slow_O .equ 13915795 ; vRam + 21715 - 21838
  103 D1:FC25 -  -  -  -  Spikes_0_Fast .equ 13915918 ; vRam + 21838 - 21966
  104 D1:FC25 -  -  -  -  TongueRing1_Slow .equ 13916047 ; vRam + 21967 - 22098
  105 D1:FC25 -  -  -  -  TongueRing2_Slow .equ 13916179 ; vRam + 22099 - 22230
  106 D1:FC25 -  -  -  -  TongueRing1_Slow_F .equ 13916311 ; vRam + 22231 - 22362
  107 D1:FC25 -  -  -  -  TongueRing2_Slow_F .equ 13916443 ; vRam + 22363 - 22494
  108 D1:FC25 -  -  -  -  GroundDirtDark_Fast .equ 13916574 ; vRam + 22494 - 22627
  109 D1:FC25 -  -  -  -  GroundDirtDark_Fast_F .equ 13916708 ; vRam + 22628 - 22761
  110 D1:FC25 -  -  -  -  BigGrassBase_Fast .equ 13916842 ; vRam + 22762 - 23122
  111 D1:FC25 -  -  -  -  BigGrassTop_Fast .equ 13917202 ; vRam + 23122 - 23367
  112 D1:FC25 -  -  -  -  BigGrassBase_Slow_O .equ 13917447 ; vRam + 23367 - 23805
  113 D1:FC25 -  -  -  -  BigGrassBase_Fast_F .equ 13917886 ; vRam + 23806 - 24166
  114 D1:FC25 -  -  -  -  BigGrassTop_Fast_F .equ 13918246 ; vRam + 24166 - 24411
  115 D1:FC25 -  -  -  -  BigGrassTop_Slow_O .equ 13918491 ; vRam + 24411 - 24725
  116 D1:FC25 -  -  -  -  DualLeaf4_Slow .equ 13918805 ; vRam + 24725 - 24901
  117 D1:FC25 -  -  -  -  DualLeaf4_Slow_F .equ 13918981 ; vRam + 24901 - 25077
  118 D1:FC25 -  -  -  -  DualLeaf3_Fast .equ 13919158 ; vRam + 25078 - 25198
  119 D1:FC25 -  -  -  -  Branches_10_Fast .equ 13919278 ; vRam + 25198 - 25317
  120 D1:FC25 -  -  -  -  Branches_9_Fast .equ 13919398 ; vRam + 25318 - 25448
  121 D1:FC25 -  -  -  -  Branches_16_Slow .equ 13919529 ; vRam + 25449 - 25557
  122 D1:FC25 -  -  -  -  Branches_13_Fast .equ 13919638 ; vRam + 25558 - 25607
  123 D1:FC25 -  -  -  -  Leaves1_Fast .equ 13919688 ; vRam + 25608 - 25888
  124 D1:FC25 -  -  -  -  DualLeaf1_Fast .equ 13919968 ; vRam + 25888 - 25999
  125 D1:FC25 -  -  -  -  DualLeaf2_Fast .equ 13920080 ; vRam + 26000 - 26112
  126 D1:FC25 -  -  -  -  DualLeaf2_Slow_O .equ 13920193 ; vRam + 26113 - 26282
  127 D1:FC25 -  -  -  -  DualLeaf1_Slow_O .equ 13920363 ; vRam + 26283 - 26451
  128 D1:FC25 -  -  -  -  AscentBanner_6_Slow_O .equ 13920531 ; vRam + 26451 - 26628
  129 D1:FC25 -  -  -  -  AscentBanner_9_Fast .equ 13920708 ; vRam + 26628 - 26701
  130 D1:FC25 -  -  -  -  AscentBanner_10_Fast .equ 13920782 ; vRam + 26702 - 26800
  131 D1:FC25 -  -  -  -  AscentBanner_1_Fast .equ 13920880 ; vRam + 26800 - 26921
  132 D1:FC25 -  -  -  -  AscentBanner_2_Fast .equ 13921002 ; vRam + 26922 - 27043
  133 D1:FC25 -  -  -  -  AscentBanner_3_Fast .equ 13921124 ; vRam + 27044 - 27213
  134 D1:FC25 -  -  -  -  AscentBanner_0_Fast .equ 13921294 ; vRam + 27214 - 27303
  135 D1:FC25 -  -  -  -  AscentBanner_4_Fast .equ 13921384 ; vRam + 27304 - 27425
  136 D1:FC25 -  -  -  -  AscentBanner_5_Fast .equ 13921506 ; vRam + 27426 - 27547
  137 D1:FC25 -  -  -  -  AscentBanner_10_Fast_F .equ 13921628 ; vRam + 27548 - 27646
  138 D1:FC25 -  -  -  -  AscentBanner_9_Fast_F .equ 13921726 ; vRam + 27646 - 27719
  139 D1:FC25 -  -  -  -  AscentBanner_6_Slow_F .equ 13921799 ; vRam + 27719 - 27896
  140 D1:FC25 -  -  -  -  AscentBanner_7_Fast .equ 13921976 ; vRam + 27896 - 27967
  141 D1:FC25 -  -  -  -  AscentBanner_8_Slow_O .equ 13922047 ; vRam + 27967 - 28077
  142 D1:FC25 -  -  -  -  AscentBanner_8_Slow .equ 13922157 ; vRam + 28077 - 28180
  143 D1:FC25 -  -  -  -  AscentBanner_7_Slow_O .equ 13922261 ; vRam + 28181 - 28282
  144 D1:FC25 -  -  -  -  Branches_6_Slow .equ 13922363 ; vRam + 28283 - 28440
  145 D1:FC25 -  -  -  -  Branches_10_Fast_F .equ 13922520 ; vRam + 28440 - 28559
  146 D1:FC25 -  -  -  -  Branches_7_Fast .equ 13922640 ; vRam + 28560 - 28681
  147 D1:FC25 -  -  -  -  Branches_15_Slow .equ 13922761 ; vRam + 28681 - 28793
  148 D1:FC25 -  -  -  -  Branches_8_Fast_F .equ 13922874 ; vRam + 28794 - 28888
  149 D1:FC25 -  -  -  -  Branches_12_Fast .equ 13922968 ; vRam + 28888 - 28979
  150 D1:FC25 -  -  -  -  Branches_15_Slow_O_F .equ 13923059 ; vRam + 28979 - 29091
  151 D1:FC25 -  -  -  -  LeavesDark_Fast .equ 13923172 ; vRam + 29092 - 29372
  152 D1:FC25 -  -  -  -  LeavesDark_Fast_F .equ 13923452 ; vRam + 29372 - 29652
  153 D1:FC25 -  -  -  -  Leaves2_Fast .equ 13923732 ; vRam + 29652 - 29887
  154 D1:FC25 -  -  -  -  Leaves2_Fast_F .equ 13923968 ; vRam + 29888 - 30123
  155 D1:FC25 -  -  -  -  LeavesLight_Fast .equ 13924204 ; vRam + 30124 - 30404
  156 D1:FC25 -  -  -  -  Branches_8_Fast .equ 13924484 ; vRam + 30404 - 30498
  157 D1:FC25 -  -  -  -  Branches_11_Fast_F .equ 13924578 ; vRam + 30498 - 30601
  158 D1:FC25 -  -  -  -  Branches_16_Slow_O_F .equ 13924681 ; vRam + 30601 - 30709
  159 D1:FC25 -  -  -  -  Branches_13_Fast_F .equ 13924790 ; vRam + 30710 - 30759
  160 D1:FC25 -  -  -  -  Branches_14_Slow .equ 13924839 ; vRam + 30759 - 30867
  161 D1:FC25 -  -  -  -  Lantern_0_Fast .equ 13924948 ; vRam + 30868 - 31035
  162 D1:FC25 -  -  -  -  Lantern_1_Fast .equ 13925116 ; vRam + 31036 - 31203
  163 D1:FC25 -  -  -  -  Lantern_2_Fast .equ 13925284 ; vRam + 31204 - 31371
  164 D1:FC25 -  -  -  -  Lantern_0_Fast_F .equ 13925452 ; vRam + 31372 - 31539
  165 D1:FC25 -  -  -  -  Lantern_1_Fast_F .equ 13925620 ; vRam + 31540 - 31707
  166 D1:FC25 -  -  -  -  Lantern_2_Fast_F .equ 13925788 ; vRam + 31708 - 31875
  167 D1:FC25 -  -  -  -  Lantern_6_Slow .equ 13925955 ; vRam + 31875 - 32064
  168 D1:FC25 -  -  -  -  Lantern_6_Slow_O_F .equ 13926145 ; vRam + 32065 - 32254
  169 D1:FC25 -  -  -  -  Lantern_5_Slow .equ 13926335 ; vRam + 32255 - 32444
  170 D1:FC25 -  -  -  -  Lantern_5_Slow_O_F .equ 13926525 ; vRam + 32445 - 32634
  171 D1:FC25 -  -  -  -  Lantern_3_Slow .equ 13926715 ; vRam + 32635 - 32824
  172 D1:FC25 -  -  -  -  Lantern_3_Slow_O_F .equ 13926905 ; vRam + 32825 - 33014
  173 D1:FC25 -  -  -  -  GroundDirtFull_Fast_F .equ 13927094 ; vRam + 33014 - 33191
  174 D1:FC25 -  -  -  -  Branches_4_Fast_F .equ 13927272 ; vRam + 33192 - 33350
  175 D1:FC25 -  -  -  -  Branches_7_Fast_F .equ 13927430 ; vRam + 33350 - 33471
  176 D1:FC25 -  -  -  -  Branches_12_Fast_F .equ 13927552 ; vRam + 33472 - 33563
  177 D1:FC25 -  -  -  -  Leaves1_Fast_F .equ 13927644 ; vRam + 33564 - 33844
  178 D1:FC25 -  -  -  -  Branches_1_Slow_O .equ 13927925 ; vRam + 33845 - 34042
  179 D1:FC25 -  -  -  -  Branches_2_Slow_O .equ 13928123 ; vRam + 34043 - 34266
  180 D1:FC25 -  -  -  -  Branches_4_Slow_O .equ 13928347 ; vRam + 34267 - 34470
  181 D1:FC25 -  -  -  -  Branches_7_Slow_O .equ 13928551 ; vRam + 34471 - 34634
  182 D1:FC25 -  -  -  -  Branches_0_Fast_F .equ 13916842 ; vRam + 22762 - 22913
  183 D1:FC25 -  -  -  -  Branches_8_Slow_O .equ 13916993 ; vRam + 22913 - 23049
  184 D1:FC25 -  -  -  -  Branches_9_Fast_F .equ 13917130 ; vRam + 23050 - 23180
  185 D1:FC25 -  -  -  -  Branches_4_Fast .equ 13917260 ; vRam + 23180 - 23338
  186 D1:FC25 -  -  -  -  Branches_0_Fast .equ 13906404 ; vRam + 12324 - 12475
Listing for file "ascent.asm"
  626 D1:FC25 -  -  -  -  #include "generated/Sprite_Groups.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\generated\Sprite_Groups.txt"
    1 D1:FC25 -  -  -  -  Sprite_Groups:
    2 D1:FC25 97 FC D1 -  	.dl SG_GroundGrass
    3 D1:FC28 D1 FC D1 -  	.dl SG_Branch3
    4 D1:FC2B EF FC D1 -  	.dl SG_Branch7
    5 D1:FC2E 41 FD D1 -  	.dl SG_Lantern1
    6 D1:FC31 53 FD D1 -  	.dl SG_Lantern2
    7 D1:FC34 65 FD D1 -  	.dl SG_Branch4
    8 D1:FC37 BB FD D1 -  	.dl SG_Branch5
    9 D1:FC3A 09 FE D1 -  	.dl SG_Lantern4
   10 D1:FC3D 1B FE D1 -  	.dl SG_Branch6
   11 D1:FC40 51 FE D1 -  	.dl SG_Vines7
   12 D1:FC43 67 FE D1 -  	.dl SG_Vines5
   13 D1:FC46 8D FE D1 -  	.dl SG_Vines2
   14 D1:FC49 9F FE D1 -  	.dl SG_Branch2
   15 D1:FC4C ED FE D1 -  	.dl SG_GroundChunk2
   16 D1:FC4F 07 FF D1 -  	.dl SG_GroundChunk1
   17 D1:FC52 25 FF D1 -  	.dl SG_Root1
   18 D1:FC55 33 FF D1 -  	.dl SG_TreeRow3
   19 D1:FC58 51 FF D1 -  	.dl SG_TreeRow5
   20 D1:FC5B 6F FF D1 -  	.dl SG_TreeRow1
   21 D1:FC5E 8D FF D1 -  	.dl SG_TreeRow2
   22 D1:FC61 AB FF D1 -  	.dl SG_TreeRow4
   23 D1:FC64 C9 FF D1 -  	.dl SG_Branch1
   24 D1:FC67 07 00 D2 -  	.dl SG_Vines6
   25 D1:FC6A 1D 00 D2 -  	.dl SG_BranchBase3
   26 D1:FC6D 2F 00 D2 -  	.dl SG_Vines4
   27 D1:FC70 39 00 D2 -  	.dl SG_Vines8
   28 D1:FC73 4B 00 D2 -  	.dl SG_BranchBase2
   29 D1:FC76 65 00 D2 -  	.dl SG_BranchBase4
   30 D1:FC79 77 00 D2 -  	.dl SG_BranchBase1
   31 D1:FC7C 8D 00 D2 -  	.dl SG_Platform3
   32 D1:FC7F A7 00 D2 -  	.dl SG_Platform4
   33 D1:FC82 C1 00 D2 -  	.dl SG_Platform1
   34 D1:FC85 D3 00 D2 -  	.dl SG_TongueRing
   35 D1:FC88 DD 00 D2 -  	.dl SG_Platform2
   36 D1:FC8B EF 00 D2 -  	.dl SG_DarkGroundChunk
   37 D1:FC8E 0D 01 D2 -  	.dl SG_BGTree1
   38 D1:FC91 2F 01 D2 -  	.dl SG_BGTree2
   39 D1:FC94 51 01 D2 -  	.dl SG_Cloud1
   40 D1:FC97 -  -  -  -  
   41 D1:FC97 -  -  -  -  
   42 D1:FC97 -  -  -  -  
   43 D1:FC97 -  -  -  -  SG_GroundGrass:
   44 D1:FC97 00 -  -  -  	.db 0
   45 D1:FC98 0E -  -  -  	.db 14
   46 D1:FC99 1A 1A 09 00 	.db 26, 26, 9, 0  ;BigGrassBase_Slow_O
   47 D1:FC9D 1A 1A 2C 01 	.db 26, 26, 44, 1  ;BigGrassBase_Fast_F
   48 D1:FCA1 1A 1A 00 02 	.db 26, 26, 0, 2  ;BigGrassBase_Fast
   49 D1:FCA5 03 17 02 03 	.db 3, 23, 2, 3  ;BigGrassTop_Fast
   50 D1:FCA9 1A 1A 13 02 	.db 26, 26, 19, 2  ;BigGrassBase_Fast
   51 D1:FCAD 03 17 15 03 	.db 3, 23, 21, 3  ;BigGrassTop_Fast
   52 D1:FCB1 03 17 07 04 	.db 3, 23, 7, 4  ;BigGrassTop_Fast_F
   53 D1:FCB5 03 17 28 04 	.db 3, 23, 40, 4  ;BigGrassTop_Fast_F
   54 D1:FCB9 1D 17 19 04 	.db 29, 23, 25, 4  ;BigGrassTop_Fast_F
   55 D1:FCBD 1D 17 08 05 	.db 29, 23, 8, 5  ;BigGrassTop_Slow_O
   56 D1:FCC1 1D 17 34 03 	.db 29, 23, 52, 3  ;BigGrassTop_Fast
   57 D1:FCC5 0A 13 34 06 	.db 10, 19, 52, 6  ;DualLeaf4_Slow
   58 D1:FCC9 00 13 13 07 	.db 0, 19, 19, 7  ;DualLeaf4_Slow_F
   59 D1:FCCD 21 0B 26 08 	.db 33, 11, 38, 8  ;DualLeaf3_Fast
   60 D1:FCD1 -  -  -  -  
   61 D1:FCD1 -  -  -  -  SG_Branch3:
   62 D1:FCD1 00 -  -  -  	.db 0
   63 D1:FCD2 07 -  -  -  	.db 7
   64 D1:FCD3 00 0E 17 09 	.db 0, 14, 23, 9  ;Branches_9_Fast
   65 D1:FCD7 0E 06 08 0A 	.db 14, 6, 8, 10  ;Branches_13_Fast
   66 D1:FCDB 07 0E 0F 0B 	.db 7, 14, 15, 11  ;Branches_10_Fast
   67 D1:FCDF 12 0D 0D 0C 	.db 18, 13, 13, 12  ;Branches_16_Slow
   68 D1:FCE3 05 15 00 0D 	.db 5, 21, 0, 13  ;Leaves1_Fast
   69 D1:FCE7 1D 0C 0A 11 	.db 29, 12, 10, 17  ;DualLeaf1_Fast
   70 D1:FCEB 01 0B 0F 08 	.db 1, 11, 15, 8  ;DualLeaf3_Fast
   71 D1:FCEF -  -  -  -  
   72 D1:FCEF -  -  -  -  SG_Branch7:
   73 D1:FCEF 00 -  -  -  	.db 0
   74 D1:FCF0 14 -  -  -  	.db 20
   75 D1:FCF1 00 15 0A 12 	.db 0, 21, 10, 18  ;LeavesLight_Fast
   76 D1:FCF5 05 15 15 12 	.db 5, 21, 21, 18  ;LeavesLight_Fast
   77 D1:FCF9 21 15 18 13 	.db 33, 21, 24, 19  ;LeavesDark_Fast
   78 D1:FCFD 12 15 00 13 	.db 18, 21, 0, 19  ;LeavesDark_Fast
   79 D1:FD01 28 15 08 13 	.db 40, 21, 8, 19  ;LeavesDark_Fast
   80 D1:FD05 19 0E 1A 14 	.db 25, 14, 26, 20  ;Branches_14_Slow
   81 D1:FD09 14 0E 0D 15 	.db 20, 14, 13, 21  ;Branches_15_Slow_O_F
   82 D1:FD0D 36 0E 03 16 	.db 54, 14, 3, 22  ;Branches_8_Fast
   83 D1:FD11 15 0E 07 17 	.db 21, 14, 7, 23  ;Branches_15_Slow
   84 D1:FD15 23 0A 13 18 	.db 35, 10, 19, 24  ;Branches_11_Fast_F
   85 D1:FD19 25 06 1C 19 	.db 37, 6, 28, 25  ;Branches_13_Fast_F
   86 D1:FD1D 26 0E 0B 0B 	.db 38, 14, 11, 11  ;Branches_10_Fast
   87 D1:FD21 2E 0E 08 16 	.db 46, 14, 8, 22  ;Branches_8_Fast
   88 D1:FD25 1D 0E 0B 1A 	.db 29, 14, 11, 26  ;Branches_10_Fast_F
   89 D1:FD29 27 12 11 1B 	.db 39, 18, 17, 27  ;Leaves2_Fast_F
   90 D1:FD2D 22 12 02 1C 	.db 34, 18, 2, 28  ;Leaves2_Fast
   91 D1:FD31 10 15 0E 0D 	.db 16, 21, 14, 13  ;Leaves1_Fast
   92 D1:FD35 10 15 1C 0D 	.db 16, 21, 28, 13  ;Leaves1_Fast
   93 D1:FD39 08 15 05 0D 	.db 8, 21, 5, 13  ;Leaves1_Fast
   94 D1:FD3D 39 0C 05 0E 	.db 57, 12, 5, 14  ;DualLeaf1_Fast
   95 D1:FD41 -  -  -  -  
   96 D1:FD41 -  -  -  -  SG_Lantern1:
   97 D1:FD41 00 -  -  -  	.db 0
   98 D1:FD42 04 -  -  -  	.db 4
   99 D1:FD43 00 18 04 1E 	.db 0, 24, 4, 30  ;Lantern_0_Fast
  100 D1:FD47 00 18 00 21 	.db 0, 24, 0, 33  ;Lantern_0_Fast_F
  101 D1:FD4B 18 15 04 23 	.db 24, 21, 4, 35  ;Lantern_3_Slow
  102 D1:FD4F 18 15 00 24 	.db 24, 21, 0, 36  ;Lantern_3_Slow_O_F
  103 D1:FD53 -  -  -  -  
  104 D1:FD53 -  -  -  -  SG_Lantern2:
  105 D1:FD53 00 -  -  -  	.db 0
  106 D1:FD54 04 -  -  -  	.db 4
  107 D1:FD55 00 18 04 1E 	.db 0, 24, 4, 30  ;Lantern_0_Fast
  108 D1:FD59 00 18 00 21 	.db 0, 24, 0, 33  ;Lantern_0_Fast_F
  109 D1:FD5D 18 15 04 25 	.db 24, 21, 4, 37  ;Lantern_5_Slow
  110 D1:FD61 18 15 00 26 	.db 24, 21, 0, 38  ;Lantern_5_Slow_O_F
  111 D1:FD65 -  -  -  -  
  112 D1:FD65 -  -  -  -  SG_Branch4:
  113 D1:FD65 00 -  -  -  	.db 0
  114 D1:FD66 15 -  -  -  	.db 21
  115 D1:FD67 3F 15 0C 0D 	.db 63, 21, 12, 13  ;Leaves1_Fast
  116 D1:FD6B 00 15 0F 12 	.db 0, 21, 15, 18  ;LeavesLight_Fast
  117 D1:FD6F 05 15 1B 12 	.db 5, 21, 27, 18  ;LeavesLight_Fast
  118 D1:FD73 0E 12 12 1C 	.db 14, 18, 18, 28  ;Leaves2_Fast
  119 D1:FD77 0D 15 06 0D 	.db 13, 21, 6, 13  ;Leaves1_Fast
  120 D1:FD7B 1C 15 00 27 	.db 28, 21, 0, 39  ;LeavesDark_Fast_F
  121 D1:FD7F 1A 15 18 27 	.db 26, 21, 24, 39  ;LeavesDark_Fast_F
  122 D1:FD83 2C 0A 11 28 	.db 44, 10, 17, 40  ;Branches_12_Fast
  123 D1:FD87 25 0E 19 15 	.db 37, 14, 25, 21  ;Branches_15_Slow_O_F
  124 D1:FD8B 20 15 08 13 	.db 32, 21, 8, 19  ;LeavesDark_Fast
  125 D1:FD8F 18 15 0F 13 	.db 24, 21, 15, 19  ;LeavesDark_Fast
  126 D1:FD93 41 0E 11 17 	.db 65, 14, 17, 23  ;Branches_15_Slow
  127 D1:FD97 40 0E 15 0B 	.db 64, 14, 21, 11  ;Branches_10_Fast
  128 D1:FD9B 11 12 1E 1B 	.db 17, 18, 30, 27  ;Leaves2_Fast_F
  129 D1:FD9F 36 0E 1D 1A 	.db 54, 14, 29, 26  ;Branches_10_Fast_F
  130 D1:FDA3 3D 0B 25 29 	.db 61, 11, 37, 41  ;Branches_6_Slow
  131 D1:FDA7 4C 0D 11 0C 	.db 76, 13, 17, 12  ;Branches_16_Slow
  132 D1:FDAB 3E 0A 1C 2A 	.db 62, 10, 28, 42  ;Branches_7_Fast
  133 D1:FDAF 2F 0E 1A 2B 	.db 47, 14, 26, 43  ;Branches_8_Fast_F
  134 D1:FDB3 37 12 06 1C 	.db 55, 18, 6, 28  ;Leaves2_Fast
  135 D1:FDB7 4E 15 07 0D 	.db 78, 21, 7, 13  ;Leaves1_Fast
  136 D1:FDBB -  -  -  -  
  137 D1:FDBB -  -  -  -  SG_Branch5:
  138 D1:FDBB 00 -  -  -  	.db 0
  139 D1:FDBC 13 -  -  -  	.db 19
  140 D1:FDBD 1E 15 08 13 	.db 30, 21, 8, 19  ;LeavesDark_Fast
  141 D1:FDC1 00 15 09 12 	.db 0, 21, 9, 18  ;LeavesLight_Fast
  142 D1:FDC5 43 15 0C 13 	.db 67, 21, 12, 19  ;LeavesDark_Fast
  143 D1:FDC9 09 12 00 1C 	.db 9, 18, 0, 28  ;Leaves2_Fast
  144 D1:FDCD 0A 12 10 1C 	.db 10, 18, 16, 28  ;Leaves2_Fast
  145 D1:FDD1 33 0A 00 2A 	.db 51, 10, 0, 42  ;Branches_7_Fast
  146 D1:FDD5 2C 0E 09 16 	.db 44, 14, 9, 22  ;Branches_8_Fast
  147 D1:FDD9 34 0A 0B 18 	.db 52, 10, 11, 24  ;Branches_11_Fast_F
  148 D1:FDDD 11 0E 1A 15 	.db 17, 14, 26, 21  ;Branches_15_Slow_O_F
  149 D1:FDE1 35 06 14 19 	.db 53, 6, 20, 25  ;Branches_13_Fast_F
  150 D1:FDE5 1E 0E 0D 14 	.db 30, 14, 13, 20  ;Branches_14_Slow
  151 D1:FDE9 24 0E 0D 15 	.db 36, 14, 13, 21  ;Branches_15_Slow_O_F
  152 D1:FDED 16 15 10 13 	.db 22, 21, 16, 19  ;LeavesDark_Fast
  153 D1:FDF1 12 15 04 13 	.db 18, 21, 4, 19  ;LeavesDark_Fast
  154 D1:FDF5 41 0D 0D 2C 	.db 65, 13, 13, 44  ;Branches_16_Slow_O_F
  155 D1:FDF9 38 0E 08 1A 	.db 56, 14, 8, 26  ;Branches_10_Fast_F
  156 D1:FDFD 37 0C 15 0F 	.db 55, 12, 21, 15  ;DualLeaf2_Fast
  157 D1:FE01 2B 13 19 06 	.db 43, 19, 25, 6  ;DualLeaf4_Slow
  158 D1:FE05 45 15 12 0D 	.db 69, 21, 18, 13  ;Leaves1_Fast
  159 D1:FE09 -  -  -  -  
  160 D1:FE09 -  -  -  -  SG_Lantern4:
  161 D1:FE09 00 -  -  -  	.db 0
  162 D1:FE0A 04 -  -  -  	.db 4
  163 D1:FE0B 00 18 04 1E 	.db 0, 24, 4, 30  ;Lantern_0_Fast
  164 D1:FE0F 00 18 00 21 	.db 0, 24, 0, 33  ;Lantern_0_Fast_F
  165 D1:FE13 18 15 04 2D 	.db 24, 21, 4, 45  ;Lantern_6_Slow
  166 D1:FE17 18 15 00 2E 	.db 24, 21, 0, 46  ;Lantern_6_Slow_O_F
  167 D1:FE1B -  -  -  -  
  168 D1:FE1B -  -  -  -  SG_Branch6:
  169 D1:FE1B 00 -  -  -  	.db 0
  170 D1:FE1C 0D -  -  -  	.db 13
  171 D1:FE1D 2F 15 15 13 	.db 47, 21, 21, 19  ;LeavesDark_Fast
  172 D1:FE21 00 15 09 12 	.db 0, 21, 9, 18  ;LeavesLight_Fast
  173 D1:FE25 26 15 11 0D 	.db 38, 21, 17, 13  ;Leaves1_Fast
  174 D1:FE29 25 0E 00 3F 	.db 37, 14, 0, 63  ;Branches_4_Fast_F
  175 D1:FE2D 26 0A 09 40 	.db 38, 10, 9, 64  ;Branches_7_Fast_F
  176 D1:FE31 21 0E 12 09 	.db 33, 14, 18, 9  ;Branches_9_Fast
  177 D1:FE35 20 0A 1B 41 	.db 32, 10, 27, 65  ;Branches_12_Fast_F
  178 D1:FE39 0B 15 05 0D 	.db 11, 21, 5, 13  ;Leaves1_Fast
  179 D1:FE3D 18 13 22 06 	.db 24, 19, 34, 6  ;DualLeaf4_Slow
  180 D1:FE41 19 0E 0E 14 	.db 25, 14, 14, 20  ;Branches_14_Slow
  181 D1:FE45 29 0D 16 2C 	.db 41, 13, 22, 44  ;Branches_16_Slow_O_F
  182 D1:FE49 0C 15 0F 42 	.db 12, 21, 15, 66  ;Leaves1_Fast_F
  183 D1:FE4D 2E 12 1C 1C 	.db 46, 18, 28, 28  ;Leaves2_Fast
  184 D1:FE51 -  -  -  -  
  185 D1:FE51 -  -  -  -  SG_Vines7:
  186 D1:FE51 00 -  -  -  	.db 0
  187 D1:FE52 05 -  -  -  	.db 5
  188 D1:FE53 21 10 00 43 	.db 33, 16, 0, 67  ;Vine5_Slow
  189 D1:FE57 1F 0A 08 44 	.db 31, 10, 8, 68  ;Vine6_Slow
  190 D1:FE5B 18 10 12 43 	.db 24, 16, 18, 67  ;Vine5_Slow
  191 D1:FE5F 0F 10 1A 43 	.db 15, 16, 26, 67  ;Vine5_Slow
  192 D1:FE63 00 12 22 45 	.db 0, 18, 34, 69  ;Vine4_Slow
  193 D1:FE67 -  -  -  -  
  194 D1:FE67 -  -  -  -  SG_Vines5:
  195 D1:FE67 00 -  -  -  	.db 0
  196 D1:FE68 09 -  -  -  	.db 9
  197 D1:FE69 00 12 00 46 	.db 0, 18, 0, 70  ;Vine4_Slow_F
  198 D1:FE6D 11 12 07 47 	.db 17, 18, 7, 71  ;Vine4_Slow_O_F
  199 D1:FE71 21 10 0F 48 	.db 33, 16, 15, 72  ;Vine5_Slow_O_F
  200 D1:FE75 28 0A 19 44 	.db 40, 10, 25, 68  ;Vine6_Slow
  201 D1:FE79 2A 0A 23 49 	.db 42, 10, 35, 73  ;Vine7_Slow_O
  202 D1:FE7D 22 10 2A 4A 	.db 34, 16, 42, 74  ;Vine5_Slow_O
  203 D1:FE81 21 0A 32 4B 	.db 33, 10, 50, 75  ;Vine6_Slow_O
  204 D1:FE85 1A 10 3D 43 	.db 26, 16, 61, 67  ;Vine5_Slow
  205 D1:FE89 0C 12 44 4C 	.db 12, 18, 68, 76  ;Vine4_Slow_O
  206 D1:FE8D -  -  -  -  
  207 D1:FE8D -  -  -  -  SG_Vines2:
  208 D1:FE8D 00 -  -  -  	.db 0
  209 D1:FE8E 04 -  -  -  	.db 4
  210 D1:FE8F 00 10 03 4D 	.db 0, 16, 3, 77  ;Vine2_Slow
  211 D1:FE93 10 12 02 4E 	.db 16, 18, 2, 78  ;VineVertical_Slow_O
  212 D1:FE97 22 12 02 4F 	.db 34, 18, 2, 79  ;VineVertical_Slow
  213 D1:FE9B 33 0C 00 11 	.db 51, 12, 0, 17  ;DualLeaf2_Fast
  214 D1:FE9F -  -  -  -  
  215 D1:FE9F -  -  -  -  SG_Branch2:
  216 D1:FE9F 00 -  -  -  	.db 0
  217 D1:FEA0 13 -  -  -  	.db 19
  218 D1:FEA1 00 15 09 12 	.db 0, 21, 9, 18  ;LeavesLight_Fast
  219 D1:FEA5 01 15 15 12 	.db 1, 21, 21, 18  ;LeavesLight_Fast
  220 D1:FEA9 0A 15 1C 42 	.db 10, 21, 28, 66  ;Leaves1_Fast_F
  221 D1:FEAD 0D 15 06 42 	.db 13, 21, 6, 66  ;Leaves1_Fast_F
  222 D1:FEB1 0B 15 10 0D 	.db 11, 21, 16, 13  ;Leaves1_Fast
  223 D1:FEB5 3C 0E 1D 2B 	.db 60, 14, 29, 43  ;Branches_8_Fast_F
  224 D1:FEB9 35 0E 19 2B 	.db 53, 14, 25, 43  ;Branches_8_Fast_F
  225 D1:FEBD 2D 0E 12 1A 	.db 45, 14, 18, 26  ;Branches_10_Fast_F
  226 D1:FEC1 30 0E 1C 0B 	.db 48, 14, 28, 11  ;Branches_10_Fast
  227 D1:FEC5 29 0E 1E 17 	.db 41, 14, 30, 23  ;Branches_15_Slow
  228 D1:FEC9 2F 06 25 19 	.db 47, 6, 37, 25  ;Branches_13_Fast_F
  229 D1:FECD 27 13 2A 06 	.db 39, 19, 42, 6  ;DualLeaf4_Slow
  230 D1:FED1 19 15 16 13 	.db 25, 21, 22, 19  ;LeavesDark_Fast
  231 D1:FED5 17 15 00 13 	.db 23, 21, 0, 19  ;LeavesDark_Fast
  232 D1:FED9 1D 15 0C 13 	.db 29, 21, 12, 19  ;LeavesDark_Fast
  233 D1:FEDD 34 0D 11 0C 	.db 52, 13, 17, 12  ;Branches_16_Slow
  234 D1:FEE1 28 0E 23 15 	.db 40, 14, 35, 21  ;Branches_15_Slow_O_F
  235 D1:FEE5 3A 12 0C 1C 	.db 58, 18, 12, 28  ;Leaves2_Fast
  236 D1:FEE9 1C 12 22 1C 	.db 28, 18, 34, 28  ;Leaves2_Fast
  237 D1:FEED -  -  -  -  
  238 D1:FEED -  -  -  -  SG_GroundChunk2:
  239 D1:FEED 00 -  -  -  	.db 0
  240 D1:FEEE 06 -  -  -  	.db 6
  241 D1:FEEF 0E 10 00 54 	.db 14, 16, 0, 84  ;GroundDirtFull_Fast_F
  242 D1:FEF3 0F 10 08 55 	.db 15, 16, 8, 85  ;GroundDirtFull_Fast
  243 D1:FEF7 0E 10 10 54 	.db 14, 16, 16, 84  ;GroundDirtFull_Fast_F
  244 D1:FEFB 02 0C 00 56 	.db 2, 12, 0, 86  ;GroundDirtMound_Fast
  245 D1:FEFF 03 0C 08 56 	.db 3, 12, 8, 86  ;GroundDirtMound_Fast
  246 D1:FF03 02 0C 10 56 	.db 2, 12, 16, 86  ;GroundDirtMound_Fast
  247 D1:FF07 -  -  -  -  
  248 D1:FF07 -  -  -  -  SG_GroundChunk1:
  249 D1:FF07 00 -  -  -  	.db 0
  250 D1:FF08 07 -  -  -  	.db 7
  251 D1:FF09 10 10 00 55 	.db 16, 16, 0, 85  ;GroundDirtFull_Fast
  252 D1:FF0D 0F 10 08 55 	.db 15, 16, 8, 85  ;GroundDirtFull_Fast
  253 D1:FF11 0E 10 10 54 	.db 14, 16, 16, 84  ;GroundDirtFull_Fast_F
  254 D1:FF15 02 0C 10 56 	.db 2, 12, 16, 86  ;GroundDirtMound_Fast
  255 D1:FF19 03 0C 08 56 	.db 3, 12, 8, 86  ;GroundDirtMound_Fast
  256 D1:FF1D 04 0C 00 57 	.db 4, 12, 0, 87  ;GroundDirtMound_Fast_F
  257 D1:FF21 00 0C 0C 56 	.db 0, 12, 12, 86  ;GroundDirtMound_Fast
  258 D1:FF25 -  -  -  -  
  259 D1:FF25 -  -  -  -  SG_Root1:
  260 D1:FF25 00 -  -  -  	.db 0
  261 D1:FF26 03 -  -  -  	.db 3
  262 D1:FF27 06 0E 00 16 	.db 6, 14, 0, 22  ;Branches_8_Fast
  263 D1:FF2B 03 0E 0D 58 	.db 3, 14, 13, 88  ;Branches_8_Slow_O_F
  264 D1:FF2F 00 0E 04 59 	.db 0, 14, 4, 89  ;Branches_9_Slow_O
  265 D1:FF33 -  -  -  -  
  266 D1:FF33 -  -  -  -  SG_TreeRow3:
  267 D1:FF33 00 -  -  -  	.db 0
  268 D1:FF34 07 -  -  -  	.db 7
  269 D1:FF35 00 10 00 5A 	.db 0, 16, 0, 90  ;Tree_2_Fast
  270 D1:FF39 00 10 0D 5B 	.db 0, 16, 13, 91  ;Tree_4_Fast
  271 D1:FF3D 00 10 1A 5C 	.db 0, 16, 26, 92  ;Tree_7_Fast
  272 D1:FF41 00 10 27 5D 	.db 0, 16, 39, 93  ;Tree_9_Fast
  273 D1:FF45 00 10 34 5E 	.db 0, 16, 52, 94  ;Tree_6_Fast_F
  274 D1:FF49 00 10 41 5F 	.db 0, 16, 65, 95  ;Tree_3_Fast_F
  275 D1:FF4D 00 10 4E 60 	.db 0, 16, 78, 96  ;Tree_0_Fast_F
  276 D1:FF51 -  -  -  -  
  277 D1:FF51 -  -  -  -  SG_TreeRow5:
  278 D1:FF51 00 -  -  -  	.db 0
  279 D1:FF52 07 -  -  -  	.db 7
  280 D1:FF53 00 10 00 5A 	.db 0, 16, 0, 90  ;Tree_2_Fast
  281 D1:FF57 00 10 0D 61 	.db 0, 16, 13, 97  ;Tree_3_Fast
  282 D1:FF5B 00 10 1A 62 	.db 0, 16, 26, 98  ;Tree_8_Fast
  283 D1:FF5F 00 10 27 63 	.db 0, 16, 39, 99  ;Tree_9_Fast_F
  284 D1:FF63 00 10 34 64 	.db 0, 16, 52, 100  ;Tree_8_Fast_F
  285 D1:FF67 00 10 41 65 	.db 0, 16, 65, 101  ;Tree_4_Fast_F
  286 D1:FF6B 00 10 4E 60 	.db 0, 16, 78, 96  ;Tree_0_Fast_F
  287 D1:FF6F -  -  -  -  
  288 D1:FF6F -  -  -  -  SG_TreeRow1:
  289 D1:FF6F 00 -  -  -  	.db 0
  290 D1:FF70 07 -  -  -  	.db 7
  291 D1:FF71 00 10 00 66 	.db 0, 16, 0, 102  ;Tree_0_Fast
  292 D1:FF75 00 10 0D 61 	.db 0, 16, 13, 97  ;Tree_3_Fast
  293 D1:FF79 00 10 1A 67 	.db 0, 16, 26, 103  ;Tree_6_Fast
  294 D1:FF7D 00 10 27 68 	.db 0, 16, 39, 104  ;Tree_10_Fast
  295 D1:FF81 00 10 34 69 	.db 0, 16, 52, 105  ;Tree_7_Fast_F
  296 D1:FF85 00 10 41 65 	.db 0, 16, 65, 101  ;Tree_4_Fast_F
  297 D1:FF89 00 10 4E 6A 	.db 0, 16, 78, 106  ;Tree_1_Fast_F
  298 D1:FF8D -  -  -  -  
  299 D1:FF8D -  -  -  -  SG_TreeRow2:
  300 D1:FF8D 00 -  -  -  	.db 0
  301 D1:FF8E 07 -  -  -  	.db 7
  302 D1:FF8F 00 10 00 6B 	.db 0, 16, 0, 107  ;Tree_1_Fast
  303 D1:FF93 00 10 0D 6C 	.db 0, 16, 13, 108  ;Tree_5_Fast
  304 D1:FF97 00 10 1A 62 	.db 0, 16, 26, 98  ;Tree_8_Fast
  305 D1:FF9B 00 10 27 6D 	.db 0, 16, 39, 109  ;Tree_11_Fast
  306 D1:FF9F 00 10 34 64 	.db 0, 16, 52, 100  ;Tree_8_Fast_F
  307 D1:FFA3 00 10 41 6E 	.db 0, 16, 65, 110  ;Tree_5_Fast_F
  308 D1:FFA7 00 10 4E 6F 	.db 0, 16, 78, 111  ;Tree_2_Fast_F
  309 D1:FFAB -  -  -  -  
  310 D1:FFAB -  -  -  -  SG_TreeRow4:
  311 D1:FFAB 00 -  -  -  	.db 0
  312 D1:FFAC 07 -  -  -  	.db 7
  313 D1:FFAD 00 10 00 66 	.db 0, 16, 0, 102  ;Tree_0_Fast
  314 D1:FFB1 00 10 0D 6C 	.db 0, 16, 13, 108  ;Tree_5_Fast
  315 D1:FFB5 00 10 1A 67 	.db 0, 16, 26, 103  ;Tree_6_Fast
  316 D1:FFB9 00 10 27 70 	.db 0, 16, 39, 112  ;Tree_11_Fast_F
  317 D1:FFBD 00 10 34 5E 	.db 0, 16, 52, 94  ;Tree_6_Fast_F
  318 D1:FFC1 00 10 41 5F 	.db 0, 16, 65, 95  ;Tree_3_Fast_F
  319 D1:FFC5 00 10 4E 6A 	.db 0, 16, 78, 106  ;Tree_1_Fast_F
  320 D1:FFC9 -  -  -  -  
  321 D1:FFC9 -  -  -  -  SG_Branch1:
  322 D1:FFC9 00 -  -  -  	.db 0
  323 D1:FFCA 0F -  -  -  	.db 15
  324 D1:FFCB 19 0E 34 71 	.db 25, 14, 52, 113  ;Branches_1_Fast
  325 D1:FFCF 19 0E 2C 53 	.db 25, 14, 44, 83  ;Branches_2_Fast
  326 D1:FFD3 1A 0E 23 52 	.db 26, 14, 35, 82  ;Branches_3_Fast
  327 D1:FFD7 1B 0E 1A 50 	.db 27, 14, 26, 80  ;Branches_5_Fast
  328 D1:FFDB 1D 0A 11 2A 	.db 29, 10, 17, 42  ;Branches_7_Fast
  329 D1:FFDF 07 15 11 0D 	.db 7, 21, 17, 13  ;Leaves1_Fast
  330 D1:FFE3 00 12 0A 1C 	.db 0, 18, 10, 28  ;Leaves2_Fast
  331 D1:FFE7 1C 15 07 13 	.db 28, 21, 7, 19  ;LeavesDark_Fast
  332 D1:FFEB 1F 0E 22 16 	.db 31, 14, 34, 22  ;Branches_8_Fast
  333 D1:FFEF 14 0E 17 17 	.db 20, 14, 23, 23  ;Branches_15_Slow
  334 D1:FFF3 05 15 02 12 	.db 5, 21, 2, 18  ;LeavesLight_Fast
  335 D1:FFF7 29 0D 1F 0C 	.db 41, 13, 31, 12  ;Branches_16_Slow
  336 D1:FFFB 13 15 00 0D 	.db 19, 21, 0, 13  ;Leaves1_Fast
  337 D1:FFFF 32 0C 1C 0F 	.db 50, 12, 28, 15  ;DualLeaf2_Fast
  338 D2:0003 0D 15 09 0D 	.db 13, 21, 9, 13  ;Leaves1_Fast
  339 D2:0007 -  -  -  -  
  340 D2:0007 -  -  -  -  SG_Vines6:
  341 D2:0007 00 -  -  -  	.db 0
  342 D2:0008 05 -  -  -  	.db 5
  343 D2:0009 00 12 00 46 	.db 0, 18, 0, 70  ;Vine4_Slow_F
  344 D2:000D 0F 12 07 47 	.db 15, 18, 7, 71  ;Vine4_Slow_O_F
  345 D2:0011 1F 10 0F 48 	.db 31, 16, 15, 72  ;Vine5_Slow_O_F
  346 D2:0015 26 0A 18 4B 	.db 38, 10, 24, 75  ;Vine6_Slow_O
  347 D2:0019 28 0A 23 72 	.db 40, 10, 35, 114  ;Vine7_Slow
  348 D2:001D -  -  -  -  
  349 D2:001D -  -  -  -  SG_BranchBase3:
  350 D2:001D 00 -  -  -  	.db 0
  351 D2:001E 04 -  -  -  	.db 4
  352 D2:001F 0B 0E 00 73 	.db 11, 14, 0, 115  ;Branches_1_Fast_F
  353 D2:0023 0A 0E 09 74 	.db 10, 14, 9, 116  ;Branches_2_Fast_F
  354 D2:0027 09 0E 12 75 	.db 9, 14, 18, 117  ;Branches_5_Fast_F
  355 D2:002B 00 0E 0E 14 	.db 0, 14, 14, 20  ;Branches_14_Slow
  356 D2:002F -  -  -  -  
  357 D2:002F -  -  -  -  SG_Vines4:
  358 D2:002F 00 -  -  -  	.db 0
  359 D2:0030 02 -  -  -  	.db 2
  360 D2:0031 00 10 00 76 	.db 0, 16, 0, 118  ;Vine2_Slow_O
  361 D2:0035 0D 12 00 4F 	.db 13, 18, 0, 79  ;VineVertical_Slow
  362 D2:0039 -  -  -  -  
  363 D2:0039 -  -  -  -  SG_Vines8:
  364 D2:0039 00 -  -  -  	.db 0
  365 D2:003A 04 -  -  -  	.db 4
  366 D2:003B 00 10 00 77 	.db 0, 16, 0, 119  ;Vine2_Slow_F
  367 D2:003F 10 12 01 78 	.db 16, 18, 1, 120  ;VineVertical_Slow_F
  368 D2:0043 22 12 01 4F 	.db 34, 18, 1, 79  ;VineVertical_Slow
  369 D2:0047 33 0C 00 11 	.db 51, 12, 0, 17  ;DualLeaf2_Fast
  370 D2:004B -  -  -  -  
  371 D2:004B -  -  -  -  SG_BranchBase2:
  372 D2:004B 00 -  -  -  	.db 0
  373 D2:004C 06 -  -  -  	.db 6
  374 D2:004D 00 0E 2A 79 	.db 0, 14, 42, 121  ;Branches_1_Slow_O
  375 D2:0051 01 0E 21 7A 	.db 1, 14, 33, 122  ;Branches_2_Slow_O
  376 D2:0055 02 0E 18 7B 	.db 2, 14, 24, 123  ;Branches_4_Slow_O
  377 D2:0059 04 0E 06 59 	.db 4, 14, 6, 89  ;Branches_9_Slow_O
  378 D2:005D 04 0A 0F 7C 	.db 4, 10, 15, 124  ;Branches_7_Slow_O
  379 D2:0061 0B 0E 00 0B 	.db 11, 14, 0, 11  ;Branches_10_Fast
  380 D2:0065 -  -  -  -  
  381 D2:0065 -  -  -  -  SG_BranchBase4:
  382 D2:0065 00 -  -  -  	.db 0
  383 D2:0066 04 -  -  -  	.db 4
  384 D2:0067 0D 0E 00 7D 	.db 13, 14, 0, 125  ;Branches_0_Fast_F
  385 D2:006B 07 0E 08 7E 	.db 7, 14, 8, 126  ;Branches_8_Slow_O
  386 D2:006F 12 0E 09 7F 	.db 18, 14, 9, 127  ;Branches_9_Fast_F
  387 D2:0073 00 0E 0C 59 	.db 0, 14, 12, 89  ;Branches_9_Slow_O
  388 D2:0077 -  -  -  -  
  389 D2:0077 -  -  -  -  SG_BranchBase1:
  390 D2:0077 00 -  -  -  	.db 0
  391 D2:0078 05 -  -  -  	.db 5
  392 D2:0079 04 0E 14 80 	.db 4, 14, 20, 128  ;Branches_0_Fast
  393 D2:007D 04 0E 0B 52 	.db 4, 14, 11, 82  ;Branches_3_Fast
  394 D2:0081 06 0B 02 29 	.db 6, 11, 2, 41  ;Branches_6_Slow
  395 D2:0085 0F 0E 00 09 	.db 15, 14, 0, 9  ;Branches_9_Fast
  396 D2:0089 09 0E 07 7E 	.db 9, 14, 7, 126  ;Branches_8_Slow_O
  397 D2:008D -  -  -  -  
  398 D2:008D -  -  -  -  SG_Platform3:
  399 D2:008D 00 -  -  -  	.db 0
  400 D2:008E 06 -  -  -  	.db 6
  401 D2:008F 00 09 00 81 	.db 0, 9, 0, 129  ;Platforms_0_Fast
  402 D2:0093 00 09 0A 82 	.db 0, 9, 10, 130  ;Platforms_1_Fast
  403 D2:0097 00 09 28 83 	.db 0, 9, 40, 131  ;Platforms_0_Fast_F
  404 D2:009B 08 0E 00 84 	.db 8, 14, 0, 132  ;Platforms_2_Slow_O_F
  405 D2:009F 00 09 14 82 	.db 0, 9, 20, 130  ;Platforms_1_Fast
  406 D2:00A3 00 09 1E 82 	.db 0, 9, 30, 130  ;Platforms_1_Fast
  407 D2:00A7 -  -  -  -  
  408 D2:00A7 -  -  -  -  SG_Platform4:
  409 D2:00A7 00 -  -  -  	.db 0
  410 D2:00A8 06 -  -  -  	.db 6
  411 D2:00A9 00 09 00 81 	.db 0, 9, 0, 129  ;Platforms_0_Fast
  412 D2:00AD 00 09 0A 82 	.db 0, 9, 10, 130  ;Platforms_1_Fast
  413 D2:00B1 00 09 28 83 	.db 0, 9, 40, 131  ;Platforms_0_Fast_F
  414 D2:00B5 08 0E 2A 85 	.db 8, 14, 42, 133  ;Platforms_2_Slow_O
  415 D2:00B9 00 09 14 82 	.db 0, 9, 20, 130  ;Platforms_1_Fast
  416 D2:00BD 00 09 1E 82 	.db 0, 9, 30, 130  ;Platforms_1_Fast
  417 D2:00C1 -  -  -  -  
  418 D2:00C1 -  -  -  -  SG_Platform1:
  419 D2:00C1 00 -  -  -  	.db 0
  420 D2:00C2 04 -  -  -  	.db 4
  421 D2:00C3 00 09 00 81 	.db 0, 9, 0, 129  ;Platforms_0_Fast
  422 D2:00C7 00 09 0A 82 	.db 0, 9, 10, 130  ;Platforms_1_Fast
  423 D2:00CB 00 09 14 83 	.db 0, 9, 20, 131  ;Platforms_0_Fast_F
  424 D2:00CF 08 0E 16 85 	.db 8, 14, 22, 133  ;Platforms_2_Slow_O
  425 D2:00D3 -  -  -  -  
  426 D2:00D3 -  -  -  -  SG_TongueRing:
  427 D2:00D3 00 -  -  -  	.db 0
  428 D2:00D4 02 -  -  -  	.db 2
  429 D2:00D5 00 10 04 87 	.db 0, 16, 4, 135  ;TongueRing1_Slow
  430 D2:00D9 00 10 00 89 	.db 0, 16, 0, 137  ;TongueRing1_Slow_F
  431 D2:00DD -  -  -  -  
  432 D2:00DD -  -  -  -  SG_Platform2:
  433 D2:00DD 00 -  -  -  	.db 0
  434 D2:00DE 04 -  -  -  	.db 4
  435 D2:00DF 00 09 00 81 	.db 0, 9, 0, 129  ;Platforms_0_Fast
  436 D2:00E3 00 09 0A 82 	.db 0, 9, 10, 130  ;Platforms_1_Fast
  437 D2:00E7 00 09 14 83 	.db 0, 9, 20, 131  ;Platforms_0_Fast_F
  438 D2:00EB 08 0E 00 84 	.db 8, 14, 0, 132  ;Platforms_2_Slow_O_F
  439 D2:00EF -  -  -  -  
  440 D2:00EF -  -  -  -  SG_DarkGroundChunk:
  441 D2:00EF 00 -  -  -  	.db 0
  442 D2:00F0 07 -  -  -  	.db 7
  443 D2:00F1 11 0C 00 8B 	.db 17, 12, 0, 139  ;GroundDirtDark_Fast
  444 D2:00F5 11 0C 08 8B 	.db 17, 12, 8, 139  ;GroundDirtDark_Fast
  445 D2:00F9 10 0C 10 8C 	.db 16, 12, 16, 140  ;GroundDirtDark_Fast_F
  446 D2:00FD 05 0D 00 8D 	.db 5, 13, 0, 141  ;GroundHumpDark_Fast
  447 D2:0101 05 0D 08 8D 	.db 5, 13, 8, 141  ;GroundHumpDark_Fast
  448 D2:0105 04 0D 10 8E 	.db 4, 13, 16, 142  ;GroundHumpDark_Fast_F
  449 D2:0109 00 0D 0C 8E 	.db 0, 13, 12, 142  ;GroundHumpDark_Fast_F
  450 D2:010D -  -  -  -  
  451 D2:010D -  -  -  -  SG_BGTree1:
  452 D2:010D 00 -  -  -  	.db 0
  453 D2:010E 08 -  -  -  	.db 8
  454 D2:010F 03 15 00 13 	.db 3, 21, 0, 19  ;LeavesDark_Fast
  455 D2:0113 1B 10 0B 8F 	.db 27, 16, 11, 143  ;Tree_16_Fast
  456 D2:0117 0F 0E 0E 90 	.db 15, 14, 14, 144  ;Tree_17_Slow
  457 D2:011B 11 0E 09 91 	.db 17, 14, 9, 145  ;Tree_17_Slow_O_F
  458 D2:011F 2B 10 0B 8F 	.db 43, 16, 11, 143  ;Tree_16_Fast
  459 D2:0123 25 0E 08 91 	.db 37, 14, 8, 145  ;Tree_17_Slow_O_F
  460 D2:0127 00 15 0C 13 	.db 0, 21, 12, 19  ;LeavesDark_Fast
  461 D2:012B 1F 0B 03 08 	.db 31, 11, 3, 8  ;DualLeaf3_Fast
  462 D2:012F -  -  -  -  
  463 D2:012F -  -  -  -  SG_BGTree2:
  464 D2:012F 00 -  -  -  	.db 0
  465 D2:0130 08 -  -  -  	.db 8
  466 D2:0131 37 0E 0B 92 	.db 55, 14, 11, 146  ;Tree_18_Slow
  467 D2:0135 37 0E 05 90 	.db 55, 14, 5, 144  ;Tree_17_Slow
  468 D2:0139 37 0E 06 93 	.db 55, 14, 6, 147  ;Tree_18_Slow_O_F
  469 D2:013D 2A 10 05 94 	.db 42, 16, 5, 148  ;Tree_16_Fast_F
  470 D2:0141 1A 10 06 8F 	.db 26, 16, 6, 143  ;Tree_16_Fast
  471 D2:0145 11 0E 06 92 	.db 17, 14, 6, 146  ;Tree_18_Slow
  472 D2:0149 00 15 00 13 	.db 0, 21, 0, 19  ;LeavesDark_Fast
  473 D2:014D 33 0C 09 0F 	.db 51, 12, 9, 15  ;DualLeaf2_Fast
  474 D2:0151 -  -  -  -  
  475 D2:0151 -  -  -  -  SG_Cloud1:
  476 D2:0151 00 -  -  -  	.db 0
  477 D2:0152 0D -  -  -  	.db 13
  478 D2:0153 14 0A 06 95 	.db 20, 10, 6, 149  ;Clouds_0_Fast
  479 D2:0157 0D 0E 00 96 	.db 13, 14, 0, 150  ;Clouds_1_Fast
  480 D2:015B 00 0B 07 97 	.db 0, 11, 7, 151  ;Clouds_3_Fast
  481 D2:015F 03 0A 03 98 	.db 3, 10, 3, 152  ;Clouds_4_Fast
  482 D2:0163 08 10 06 99 	.db 8, 16, 6, 153  ;Clouds_2_Fast
  483 D2:0167 14 0A 0E 95 	.db 20, 10, 14, 149  ;Clouds_0_Fast
  484 D2:016B 13 0A 14 9A 	.db 19, 10, 20, 154  ;Clouds_0_Fast_F
  485 D2:016F 0B 0E 1C 9B 	.db 11, 14, 28, 155  ;Clouds_1_Fast_F
  486 D2:0173 03 0A 1B 9C 	.db 3, 10, 27, 156  ;Clouds_4_Fast_F
  487 D2:0177 01 0B 0F 9D 	.db 1, 11, 15, 157  ;Clouds_3_Fast_F
  488 D2:017B 01 0B 15 97 	.db 1, 11, 21, 151  ;Clouds_3_Fast
  489 D2:017F 06 10 14 99 	.db 6, 16, 20, 153  ;Clouds_2_Fast
  490 D2:0183 06 10 0C 9E 	.db 6, 16, 12, 158  ;Clouds_2_Fast_F
  491 D2:0187 -  -  -  -  
  492 D2:0187 -  -  -  -  
  493 D2:0187 -  -  -  -  
Listing for file "ascent.asm"
  627 D2:0187 -  -  -  -  #include "generated/Collision_Data.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\generated\Collision_Data.txt"
    1 D2:0187 -  -  -  -  Collision_Data_Frame_Table: 
    2 D2:0187 F5 01 D2 -  	.dl collision_data_0
    3 D2:018A D6 01 D2 -  	.dl collision_data_1
    4 D2:018D AD 01 D2 -  	.dl collision_data_2
    5 D2:0190 93 01 D2 -  	.dl collision_data_3
    6 D2:0193 -  -  -  -  
    7 D2:0193 -  -  -  -  
    8 D2:0193 -  -  -  -  collision_data_3:
    9 D2:0193 05 -  -  -  	.db 5
   10 D2:0194 2E 07 6F 52 
              80 -  -  -  	.db 46,7,111,82,%10000000
   11 D2:0199 82 07 83 66 
              80 -  -  -  	.db 130,7,131,102,%10000000
   12 D2:019E AA 07 61 44 
              80 -  -  -  	.db 170,7,97,68,%10000000
   13 D2:01A3 B4 06 5F 55 
              C0 -  -  -  	.db 180,6,95,85,%11000000
   14 D2:01A8 D9 07 34 17 
              80 -  -  -  	.db 217,7,52,23,%10000000
   15 D2:01AD -  -  -  -  
   16 D2:01AD -  -  -  -  
   17 D2:01AD -  -  -  -  collision_data_2:
   18 D2:01AD 08 -  -  -  	.db 8
   19 D2:01AE 0E 07 80 4F 
              80 -  -  -  	.db 14,7,128,79,%10000000
   20 D2:01B3 18 06 73 69 
              C0 -  -  -  	.db 24,6,115,105,%11000000
   21 D2:01B8 18 06 7F 75 
              C0 -  -  -  	.db 24,6,127,117,%11000000
   22 D2:01BD 57 07 55 24 
              80 -  -  -  	.db 87,7,85,36,%10000000
   23 D2:01C2 61 06 41 37 
              C0 -  -  -  	.db 97,6,65,55,%11000000
   24 D2:01C7 A5 07 2F 12 
              80 -  -  -  	.db 165,7,47,18,%10000000
   25 D2:01CC EB 07 2E 11 
              80 -  -  -  	.db 235,7,46,17,%10000000
   26 D2:01D1 EB 07 90 73 
              80 -  -  -  	.db 235,7,144,115,%10000000
   27 D2:01D6 -  -  -  -  
   28 D2:01D6 -  -  -  -  
   29 D2:01D6 -  -  -  -  collision_data_1:
   30 D2:01D6 06 -  -  -  	.db 6
   31 D2:01D7 5B 07 61 30 
              80 -  -  -  	.db 91,7,97,48,%10000000
   32 D2:01DC 65 06 50 46 
              C0 -  -  -  	.db 101,6,80,70,%11000000
   33 D2:01E1 11 07 37 06 
              80 -  -  -  	.db 17,7,55,6,%10000000
   34 D2:01E6 5B 07 84 67 
              80 -  -  -  	.db 91,7,132,103,%10000000
   35 D2:01EB A9 07 84 67 
              80 -  -  -  	.db 169,7,132,103,%10000000
   36 D2:01F0 C6 07 44 27 
              80 -  -  -  	.db 198,7,68,39,%10000000
   37 D2:01F5 -  -  -  -  
   38 D2:01F5 -  -  -  -  
   39 D2:01F5 -  -  -  -  collision_data_0:
   40 D2:01F5 05 -  -  -  	.db 5
   41 D2:01F6 02 17 9F 00 
              00 -  -  -  	.db 2,23,159,0,%00000000
   42 D2:01FB 56 07 94 63 
              80 -  -  -  	.db 86,7,148,99,%10000000
   43 D2:0200 56 07 3D 0C 
              80 -  -  -  	.db 86,7,61,12,%10000000
   44 D2:0205 8A 07 5E 41 
              80 -  -  -  	.db 138,7,94,65,%10000000
   45 D2:020A E1 07 71 54 
              80 -  -  -  	.db 225,7,113,84,%10000000
   46 D2:020F -  -  -  -  
   47 D2:020F 00 -  -  -  	.db 0 ;Terminate Data
Listing for file "ascent.asm"
  628 D2:0210 -  -  -  -  #include "generated/Animation_Data.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\generated\Animation_Data.txt"
    1 D2:0210 -  -  -  -  position_animation_data:
    2 D2:0210 41 -  -  -  	.db 65
    3 D2:0211 08 D1 D1 -  	.dl FG_Data_2 + 2
    4 D2:0214 6F C8 D1 -  	.dl sine_05_31_1
    5 D2:0217 3A -  -  -  	.db 58
    6 D2:0218 0C D1 D1 -  	.dl FG_Data_2 + 6
    7 D2:021B 79 C8 D1 -  	.dl sine_05_31_3
    8 D2:021E 38 -  -  -  	.db 56
    9 D2:021F 38 D1 D1 -  	.dl FG_Data_2 + 50
   10 D2:0222 AF C8 D1 -  	.dl sine_4_1_1
   11 D2:0225 4D -  -  -  	.db 77
   12 D2:0226 3C D1 D1 -  	.dl FG_Data_2 + 54
   13 D2:0229 AF C8 D1 -  	.dl sine_4_1_1
   14 D2:022C 49 -  -  -  	.db 73
   15 D2:022D 40 D1 D1 -  	.dl FG_Data_2 + 58
   16 D2:0230 AF C8 D1 -  	.dl sine_4_1_1
   17 D2:0233 45 -  -  -  	.db 69
   18 D2:0234 44 D1 D1 -  	.dl FG_Data_2 + 62
   19 D2:0237 BE C8 D1 -  	.dl sine_4_1_4
   20 D2:023A 41 -  -  -  	.db 65
   21 D2:023B 48 D1 D1 -  	.dl FG_Data_2 + 66
   22 D2:023E B9 C8 D1 -  	.dl sine_4_1_3
   23 D2:0241 40 -  -  -  	.db 64
   24 D2:0242 4C D1 D1 -  	.dl FG_Data_2 + 70
   25 D2:0245 B4 C8 D1 -  	.dl sine_4_1_2
   26 D2:0248 3F -  -  -  	.db 63
   27 D2:0249 50 D1 D1 -  	.dl FG_Data_2 + 74
   28 D2:024C AF C8 D1 -  	.dl sine_4_1_1
   29 D2:024F 3E -  -  -  	.db 62
   30 D2:0250 54 D1 D1 -  	.dl FG_Data_2 + 78
   31 D2:0253 BE C8 D1 -  	.dl sine_4_1_4
   32 D2:0256 3E -  -  -  	.db 62
   33 D2:0257 58 D1 D1 -  	.dl FG_Data_2 + 82
   34 D2:025A B9 C8 D1 -  	.dl sine_4_1_3
   35 D2:025D 3F -  -  -  	.db 63
   36 D2:025E 5C D1 D1 -  	.dl FG_Data_2 + 86
   37 D2:0261 B4 C8 D1 -  	.dl sine_4_1_2
   38 D2:0264 47 -  -  -  	.db 71
   39 D2:0265 60 D1 D1 -  	.dl FG_Data_2 + 90
   40 D2:0268 AF C8 D1 -  	.dl sine_4_1_1
   41 D2:026B 4B -  -  -  	.db 75
   42 D2:026C 64 D1 D1 -  	.dl FG_Data_2 + 94
   43 D2:026F B4 C8 D1 -  	.dl sine_4_1_2
   44 D2:0272 43 -  -  -  	.db 67
   45 D2:0273 68 D1 D1 -  	.dl FG_Data_2 + 98
   46 D2:0276 AF C8 D1 -  	.dl sine_4_1_1
   47 D2:0279 4F -  -  -  	.db 79
   48 D2:027A 74 D1 D1 -  	.dl FG_Data_2 + 110
   49 D2:027D 89 C8 D1 -  	.dl sine_1_15_2
   50 D2:0280 3E -  -  -  	.db 62
   51 D2:0281 7A D1 D1 -  	.dl FG_Data_1 + 2
   52 D2:0284 84 C8 D1 -  	.dl sine_1_15_1
   53 D2:0287 39 -  -  -  	.db 57
   54 D2:0288 7E D1 D1 -  	.dl FG_Data_1 + 6
   55 D2:028B 89 C8 D1 -  	.dl sine_1_15_2
   56 D2:028E 41 -  -  -  	.db 65
   57 D2:028F 68 CD D1 -  	.dl MG_Data_4 + 66
   58 D2:0292 A9 C8 D1 -  	.dl sine_2_3_4
   59 D2:0295 62 -  -  -  	.db 98
   60 D2:0296 74 CD D1 -  	.dl MG_Data_4 + 78
   61 D2:0299 A9 C8 D1 -  	.dl sine_2_3_4
   62 D2:029C 65 -  -  -  	.db 101
   63 D2:029D D6 CD D1 -  	.dl MG_Data_3 + 74
   64 D2:02A0 C3 C8 D1 -  	.dl sine_8_1_1
   65 D2:02A3 8A -  -  -  	.db 138
   66 D2:02A4 EC CD D1 -  	.dl MG_Data_2 + 10
   67 D2:02A7 A9 C8 D1 -  	.dl sine_2_3_4
   68 D2:02AA 28 -  -  -  	.db 40
   69 D2:02AB 00 CE D1 -  	.dl MG_Data_2 + 30
   70 D2:02AE A9 C8 D1 -  	.dl sine_2_3_4
   71 D2:02B1 28 -  -  -  	.db 40
   72 D2:02B2 D8 CE D1 -  	.dl MG_Data_0 + 66
   73 D2:02B5 7A C8 D1 -  	.dl sine_05_15_3
   74 D2:02B8 CC -  -  -  	.db 204
   75 D2:02B9 F0 CE D1 -  	.dl MG_Data_0 + 90
   76 D2:02BC 70 C8 D1 -  	.dl sine_05_15_1
   77 D2:02BF 9D -  -  -  	.db 157
   78 D2:02C0 A7 FC D1 -  	.dl SG_GroundGrass + 16
   79 D2:02C3 A5 C8 D1 -  	.dl sine_2_1_3
   80 D2:02C6 02 -  -  -  	.db 2
   81 D2:02C7 BB FC D1 -  	.dl SG_GroundGrass + 36
   82 D2:02CA B9 C8 D1 -  	.dl sine_4_1_3
   83 D2:02CD 19 -  -  -  	.db 25
   84 D2:02CE C5 FC D1 -  	.dl SG_GroundGrass + 46
   85 D2:02D1 C8 C8 D1 -  	.dl sine_8_1_2
   86 D2:02D4 0A -  -  -  	.db 10
   87 D2:02D5 E3 FC D1 -  	.dl SG_Branch3 + 18
   88 D2:02D8 9B C8 D1 -  	.dl sine_2_1_1
   89 D2:02DB 05 -  -  -  	.db 5
   90 D2:02DC 2B FD D1 -  	.dl SG_Branch7 + 60
   91 D2:02DF AA C8 D1 -  	.dl sine_2_1_4
   92 D2:02E2 11 -  -  -  	.db 17
   93 D2:02E3 31 FD D1 -  	.dl SG_Branch7 + 66
   94 D2:02E6 B4 C8 D1 -  	.dl sine_4_1_2
   95 D2:02E9 10 -  -  -  	.db 16
   96 D2:02EA 35 FD D1 -  	.dl SG_Branch7 + 70
   97 D2:02ED 91 C8 D1 -  	.dl sine_1_1_3
   98 D2:02F0 10 -  -  -  	.db 16
   99 D2:02F1 39 FD D1 -  	.dl SG_Branch7 + 74
  100 D2:02F4 AF C8 D1 -  	.dl sine_4_1_1
  101 D2:02F7 08 -  -  -  	.db 8
  102 D2:02F8 67 FD D1 -  	.dl SG_Branch4 + 2
  103 D2:02FB A4 C8 D1 -  	.dl sine_2_3_3
  104 D2:02FE 3F -  -  -  	.db 63
  105 D2:02FF 6D FD D1 -  	.dl SG_Branch4 + 8
  106 D2:0302 AF C8 D1 -  	.dl sine_4_1_1
  107 D2:0305 0F -  -  -  	.db 15
  108 D2:0306 79 FD D1 -  	.dl SG_Branch4 + 20
  109 D2:0309 AF C8 D1 -  	.dl sine_4_1_1
  110 D2:030C 06 -  -  -  	.db 6
  111 D2:030D C9 FD D1 -  	.dl SG_Branch5 + 14
  112 D2:0310 9B C8 D1 -  	.dl sine_2_1_1
  113 D2:0313 09 -  -  -  	.db 9
  114 D2:0314 F3 FD D1 -  	.dl SG_Branch5 + 56
  115 D2:0317 A5 C8 D1 -  	.dl sine_2_1_3
  116 D2:031A 04 -  -  -  	.db 4
  117 D2:031B 21 FE D1 -  	.dl SG_Branch6 + 6
  118 D2:031E A5 C8 D1 -  	.dl sine_2_1_3
  119 D2:0321 00 -  -  -  	.db 0
  120 D2:0322 39 FE D1 -  	.dl SG_Branch6 + 30
  121 D2:0325 AF C8 D1 -  	.dl sine_4_1_1
  122 D2:0328 0B -  -  -  	.db 11
  123 D2:0329 49 FE D1 -  	.dl SG_Branch6 + 46
  124 D2:032C B4 C8 D1 -  	.dl sine_4_1_2
  125 D2:032F 0C -  -  -  	.db 12
  126 D2:0330 4F FE D1 -  	.dl SG_Branch6 + 52
  127 D2:0333 9B C8 D1 -  	.dl sine_2_1_1
  128 D2:0336 1C -  -  -  	.db 28
  129 D2:0337 53 FE D1 -  	.dl SG_Vines7 + 2
  130 D2:033A 9F C8 D1 -  	.dl sine_2_3_2
  131 D2:033D 21 -  -  -  	.db 33
  132 D2:033E 57 FE D1 -  	.dl SG_Vines7 + 6
  133 D2:0341 9F C8 D1 -  	.dl sine_2_3_2
  134 D2:0344 1F -  -  -  	.db 31
  135 D2:0345 5B FE D1 -  	.dl SG_Vines7 + 10
  136 D2:0348 9F C8 D1 -  	.dl sine_2_3_2
  137 D2:034B 18 -  -  -  	.db 24
  138 D2:034C 5F FE D1 -  	.dl SG_Vines7 + 14
  139 D2:034F A0 C8 D1 -  	.dl sine_2_1_2
  140 D2:0352 0F -  -  -  	.db 15
  141 D2:0353 69 FE D1 -  	.dl SG_Vines5 + 2
  142 D2:0356 C3 C8 D1 -  	.dl sine_8_1_1
  143 D2:0359 00 -  -  -  	.db 0
  144 D2:035A 6D FE D1 -  	.dl SG_Vines5 + 6
  145 D2:035D C8 C8 D1 -  	.dl sine_8_1_2
  146 D2:0360 11 -  -  -  	.db 17
  147 D2:0361 71 FE D1 -  	.dl SG_Vines5 + 10
  148 D2:0364 CD C8 D1 -  	.dl sine_8_1_3
  149 D2:0367 21 -  -  -  	.db 33
  150 D2:0368 75 FE D1 -  	.dl SG_Vines5 + 14
  151 D2:036B D2 C8 D1 -  	.dl sine_8_1_4
  152 D2:036E 28 -  -  -  	.db 40
  153 D2:036F 79 FE D1 -  	.dl SG_Vines5 + 18
  154 D2:0372 C3 C8 D1 -  	.dl sine_8_1_1
  155 D2:0375 2A -  -  -  	.db 42
  156 D2:0376 7D FE D1 -  	.dl SG_Vines5 + 22
  157 D2:0379 C8 C8 D1 -  	.dl sine_8_1_2
  158 D2:037C 22 -  -  -  	.db 34
  159 D2:037D 81 FE D1 -  	.dl SG_Vines5 + 26
  160 D2:0380 CD C8 D1 -  	.dl sine_8_1_3
  161 D2:0383 21 -  -  -  	.db 33
  162 D2:0384 85 FE D1 -  	.dl SG_Vines5 + 30
  163 D2:0387 D2 C8 D1 -  	.dl sine_8_1_4
  164 D2:038A 1A -  -  -  	.db 26
  165 D2:038B 89 FE D1 -  	.dl SG_Vines5 + 34
  166 D2:038E C3 C8 D1 -  	.dl sine_8_1_1
  167 D2:0391 0C -  -  -  	.db 12
  168 D2:0392 A1 FE D1 -  	.dl SG_Branch2 + 2
  169 D2:0395 AF C8 D1 -  	.dl sine_4_1_1
  170 D2:0398 00 -  -  -  	.db 0
  171 D2:0399 A5 FE D1 -  	.dl SG_Branch2 + 6
  172 D2:039C A0 C8 D1 -  	.dl sine_2_1_2
  173 D2:039F 01 -  -  -  	.db 1
  174 D2:03A0 E7 FE D1 -  	.dl SG_Branch2 + 72
  175 D2:03A3 A5 C8 D1 -  	.dl sine_2_1_3
  176 D2:03A6 0C -  -  -  	.db 12
  177 D2:03A7 E3 FF D1 -  	.dl SG_Branch1 + 26
  178 D2:03AA B9 C8 D1 -  	.dl sine_4_1_3
  179 D2:03AD 00 -  -  -  	.db 0
  180 D2:03AE FB FF D1 -  	.dl SG_Branch1 + 50
  181 D2:03B1 B4 C8 D1 -  	.dl sine_4_1_2
  182 D2:03B4 13 -  -  -  	.db 19
  183 D2:03B5 05 00 D2 -  	.dl SG_Branch1 + 60
  184 D2:03B8 87 C8 D1 -  	.dl sine_1_1_1
  185 D2:03BB 09 -  -  -  	.db 9
  186 D2:03BC 0D 00 D2 -  	.dl SG_Vines6 + 6
  187 D2:03BF 9F C8 D1 -  	.dl sine_2_3_2
  188 D2:03C2 0F -  -  -  	.db 15
  189 D2:03C3 11 00 D2 -  	.dl SG_Vines6 + 10
  190 D2:03C6 9F C8 D1 -  	.dl sine_2_3_2
  191 D2:03C9 1F -  -  -  	.db 31
  192 D2:03CA 15 00 D2 -  	.dl SG_Vines6 + 14
  193 D2:03CD 9F C8 D1 -  	.dl sine_2_3_2
  194 D2:03D0 26 -  -  -  	.db 38
  195 D2:03D1 19 00 D2 -  	.dl SG_Vines6 + 18
  196 D2:03D4 9F C8 D1 -  	.dl sine_2_3_2
  197 D2:03D7 28 -  -  -  	.db 40
  198 D2:03D8 -  -  -  -  
  199 D2:03D8 -  -  -  -  
  200 D2:03D8 -  -  -  -  
  201 D2:03D8 -  -  -  -  sprite_animation_data:
  202 D2:03D8 10 -  -  -  	.db 16
  203 D2:03D9 99 C8 D1 -  	.dl sine_2_7_1
  204 D2:03DC 2F -  -  -  	.db 47
  205 D2:03DD 30 -  -  -  	.db 48
  206 D2:03DE 2F -  -  -  	.db 47
  207 D2:03DF 2F -  -  -  	.db 47
  208 D2:03E0 30 -  -  -  	.db 48
  209 D2:03E1 2F -  -  -  	.db 47
  210 D2:03E2 30 -  -  -  	.db 48
  211 D2:03E3 30 -  -  -  	.db 48
  212 D2:03E4 13 D1 D1 -  	.dl FG_Data_2 + 13
  213 D2:03E7 99 C8 D1 -  	.dl sine_2_7_1
  214 D2:03EA 32 -  -  -  	.db 50
  215 D2:03EB 31 -  -  -  	.db 49
  216 D2:03EC 31 -  -  -  	.db 49
  217 D2:03ED 31 -  -  -  	.db 49
  218 D2:03EE 32 -  -  -  	.db 50
  219 D2:03EF 31 -  -  -  	.db 49
  220 D2:03F0 32 -  -  -  	.db 50
  221 D2:03F1 32 -  -  -  	.db 50
  222 D2:03F2 1B D1 D1 -  	.dl FG_Data_2 + 21
  223 D2:03F5 AD C8 D1 -  	.dl sine_4_7_1
  224 D2:03F8 30 -  -  -  	.db 48
  225 D2:03F9 2F -  -  -  	.db 47
  226 D2:03FA 2F -  -  -  	.db 47
  227 D2:03FB 2F -  -  -  	.db 47
  228 D2:03FC 30 -  -  -  	.db 48
  229 D2:03FD 30 -  -  -  	.db 48
  230 D2:03FE 2F -  -  -  	.db 47
  231 D2:03FF 2F -  -  -  	.db 47
  232 D2:0400 1F D1 D1 -  	.dl FG_Data_2 + 25
  233 D2:0403 20 C9 D1 -  	.dl lin_4_7_4
  234 D2:0406 0E -  -  -  	.db 14
  235 D2:0407 0F -  -  -  	.db 15
  236 D2:0408 10 -  -  -  	.db 16
  237 D2:0409 11 -  -  -  	.db 17
  238 D2:040A 0E -  -  -  	.db 14
  239 D2:040B 0F -  -  -  	.db 15
  240 D2:040C 0E -  -  -  	.db 14
  241 D2:040D 11 -  -  -  	.db 17
  242 D2:040E EA FC D1 -  	.dl SG_Branch3 + 25
  243 D2:0411 75 C9 D1 -  	.dl linrep_4_7_1
  244 D2:0414 1D -  -  -  	.db 29
  245 D2:0415 1E -  -  -  	.db 30
  246 D2:0416 1F -  -  -  	.db 31
  247 D2:0417 1E -  -  -  	.db 30
  248 D2:0418 1D -  -  -  	.db 29
  249 D2:0419 1E -  -  -  	.db 30
  250 D2:041A 1F -  -  -  	.db 31
  251 D2:041B 1E -  -  -  	.db 30
  252 D2:041C 46 FD D1 -  	.dl SG_Lantern1 + 5
  253 D2:041F 75 C9 D1 -  	.dl linrep_4_7_1
  254 D2:0422 20 -  -  -  	.db 32
  255 D2:0423 21 -  -  -  	.db 33
  256 D2:0424 22 -  -  -  	.db 34
  257 D2:0425 21 -  -  -  	.db 33
  258 D2:0426 20 -  -  -  	.db 32
  259 D2:0427 21 -  -  -  	.db 33
  260 D2:0428 22 -  -  -  	.db 34
  261 D2:0429 21 -  -  -  	.db 33
  262 D2:042A 4A FD D1 -  	.dl SG_Lantern1 + 9
  263 D2:042D 75 C9 D1 -  	.dl linrep_4_7_1
  264 D2:0430 1D -  -  -  	.db 29
  265 D2:0431 1E -  -  -  	.db 30
  266 D2:0432 1F -  -  -  	.db 31
  267 D2:0433 1E -  -  -  	.db 30
  268 D2:0434 1D -  -  -  	.db 29
  269 D2:0435 1E -  -  -  	.db 30
  270 D2:0436 1F -  -  -  	.db 31
  271 D2:0437 1E -  -  -  	.db 30
  272 D2:0438 58 FD D1 -  	.dl SG_Lantern2 + 5
  273 D2:043B 75 C9 D1 -  	.dl linrep_4_7_1
  274 D2:043E 20 -  -  -  	.db 32
  275 D2:043F 21 -  -  -  	.db 33
  276 D2:0440 22 -  -  -  	.db 34
  277 D2:0441 21 -  -  -  	.db 33
  278 D2:0442 20 -  -  -  	.db 32
  279 D2:0443 21 -  -  -  	.db 33
  280 D2:0444 22 -  -  -  	.db 34
  281 D2:0445 21 -  -  -  	.db 33
  282 D2:0446 5C FD D1 -  	.dl SG_Lantern2 + 9
  283 D2:0449 75 C9 D1 -  	.dl linrep_4_7_1
  284 D2:044C 1D -  -  -  	.db 29
  285 D2:044D 1E -  -  -  	.db 30
  286 D2:044E 1F -  -  -  	.db 31
  287 D2:044F 1E -  -  -  	.db 30
  288 D2:0450 1D -  -  -  	.db 29
  289 D2:0451 1E -  -  -  	.db 30
  290 D2:0452 1F -  -  -  	.db 31
  291 D2:0453 1E -  -  -  	.db 30
  292 D2:0454 0E FE D1 -  	.dl SG_Lantern4 + 5
  293 D2:0457 75 C9 D1 -  	.dl linrep_4_7_1
  294 D2:045A 20 -  -  -  	.db 32
  295 D2:045B 21 -  -  -  	.db 33
  296 D2:045C 22 -  -  -  	.db 34
  297 D2:045D 21 -  -  -  	.db 33
  298 D2:045E 20 -  -  -  	.db 32
  299 D2:045F 21 -  -  -  	.db 33
  300 D2:0460 22 -  -  -  	.db 34
  301 D2:0461 21 -  -  -  	.db 33
  302 D2:0462 12 FE D1 -  	.dl SG_Lantern4 + 9
  303 D2:0465 16 C9 D1 -  	.dl lin_4_7_2
  304 D2:0468 4F -  -  -  	.db 79
  305 D2:0469 4E -  -  -  	.db 78
  306 D2:046A 4E -  -  -  	.db 78
  307 D2:046B 4F -  -  -  	.db 79
  308 D2:046C 4F -  -  -  	.db 79
  309 D2:046D 4F -  -  -  	.db 79
  310 D2:046E 4E -  -  -  	.db 78
  311 D2:046F 4F -  -  -  	.db 79
  312 D2:0470 9A FE D1 -  	.dl SG_Vines2 + 13
  313 D2:0473 16 C9 D1 -  	.dl lin_4_7_2
  314 D2:0476 0F -  -  -  	.db 15
  315 D2:0477 0F -  -  -  	.db 15
  316 D2:0478 0E -  -  -  	.db 14
  317 D2:0479 11 -  -  -  	.db 17
  318 D2:047A 10 -  -  -  	.db 16
  319 D2:047B 0E -  -  -  	.db 14
  320 D2:047C 0F -  -  -  	.db 15
  321 D2:047D 11 -  -  -  	.db 17
  322 D2:047E 9E FE D1 -  	.dl SG_Vines2 + 17
  323 D2:0481 16 C9 D1 -  	.dl lin_4_7_2
  324 D2:0484 4F -  -  -  	.db 79
  325 D2:0485 4E -  -  -  	.db 78
  326 D2:0486 4E -  -  -  	.db 78
  327 D2:0487 4F -  -  -  	.db 79
  328 D2:0488 4F -  -  -  	.db 79
  329 D2:0489 4F -  -  -  	.db 79
  330 D2:048A 4E -  -  -  	.db 78
  331 D2:048B 4F -  -  -  	.db 79
  332 D2:048C 46 00 D2 -  	.dl SG_Vines8 + 13
  333 D2:048F 1B C9 D1 -  	.dl lin_4_7_3
  334 D2:0492 0F -  -  -  	.db 15
  335 D2:0493 0F -  -  -  	.db 15
  336 D2:0494 11 -  -  -  	.db 17
  337 D2:0495 0E -  -  -  	.db 14
  338 D2:0496 10 -  -  -  	.db 16
  339 D2:0497 11 -  -  -  	.db 17
  340 D2:0498 0F -  -  -  	.db 15
  341 D2:0499 11 -  -  -  	.db 17
  342 D2:049A 4A 00 D2 -  	.dl SG_Vines8 + 17
  343 D2:049D 89 C9 D1 -  	.dl linrep_8_7_1
  344 D2:04A0 86 -  -  -  	.db 134
  345 D2:04A1 87 -  -  -  	.db 135
  346 D2:04A2 86 -  -  -  	.db 134
  347 D2:04A3 87 -  -  -  	.db 135
  348 D2:04A4 86 -  -  -  	.db 134
  349 D2:04A5 87 -  -  -  	.db 135
  350 D2:04A6 86 -  -  -  	.db 134
  351 D2:04A7 87 -  -  -  	.db 135
  352 D2:04A8 D8 00 D2 -  	.dl SG_TongueRing + 5
  353 D2:04AB 89 C9 D1 -  	.dl linrep_8_7_1
  354 D2:04AE 88 -  -  -  	.db 136
  355 D2:04AF 89 -  -  -  	.db 137
  356 D2:04B0 88 -  -  -  	.db 136
  357 D2:04B1 89 -  -  -  	.db 137
  358 D2:04B2 88 -  -  -  	.db 136
  359 D2:04B3 89 -  -  -  	.db 137
  360 D2:04B4 88 -  -  -  	.db 136
  361 D2:04B5 89 -  -  -  	.db 137
  362 D2:04B6 DC 00 D2 -  	.dl SG_TongueRing + 9
  363 D2:04B9 -  -  -  -  
  364 D2:04B9 -  -  -  -  
  365 D2:04B9 -  -  -  -  
  366 D2:04B9 -  -  -  -  breakaway_platform_data_0
  367 D2:04B9 00 -  -  -  	.db 0
  368 D2:04BA -  -  -  -  
  369 D2:04BA -  -  -  -  
  370 D2:04BA -  -  -  -  breakaway_platform_data_1
  371 D2:04BA 00 -  -  -  	.db 0
  372 D2:04BB -  -  -  -  
  373 D2:04BB -  -  -  -  
  374 D2:04BB -  -  -  -  breakaway_platform_data_2
  375 D2:04BB 00 -  -  -  	.db 0
  376 D2:04BC -  -  -  -  
  377 D2:04BC -  -  -  -  
  378 D2:04BC -  -  -  -  breakaway_platform_data_3
  379 D2:04BC 00 -  -  -  	.db 0
  380 D2:04BD -  -  -  -  
  381 D2:04BD -  -  -  -  
  382 D2:04BD -  -  -  -  breakaway_platform_data_4
  383 D2:04BD 00 -  -  -  	.db 0
  384 D2:04BE -  -  -  -  
  385 D2:04BE -  -  -  -  
  386 D2:04BE -  -  -  -  breakaway_platform_data_5
  387 D2:04BE 00 -  -  -  	.db 0
  388 D2:04BF -  -  -  -  
  389 D2:04BF -  -  -  -  
  390 D2:04BF -  -  -  -  breakaway_platform_data_6
  391 D2:04BF 00 -  -  -  	.db 0
  392 D2:04C0 -  -  -  -  
  393 D2:04C0 -  -  -  -  
  394 D2:04C0 -  -  -  -  breakaway_platform_data_7
  395 D2:04C0 00 -  -  -  	.db 0
  396 D2:04C1 -  -  -  -  
  397 D2:04C1 -  -  -  -  
  398 D2:04C1 -  -  -  -  breakaway_platform_data_8
  399 D2:04C1 00 -  -  -  	.db 0
  400 D2:04C2 -  -  -  -  
  401 D2:04C2 -  -  -  -  
  402 D2:04C2 -  -  -  -  breakaway_platform_data_9
  403 D2:04C2 00 -  -  -  	.db 0
  404 D2:04C3 -  -  -  -  
  405 D2:04C3 -  -  -  -  
  406 D2:04C3 -  -  -  -  breakaway_platform_data_10
  407 D2:04C3 00 -  -  -  	.db 0
  408 D2:04C4 -  -  -  -  
  409 D2:04C4 -  -  -  -  
  410 D2:04C4 -  -  -  -  breakaway_platform_data_11
  411 D2:04C4 00 -  -  -  	.db 0
  412 D2:04C5 -  -  -  -  
  413 D2:04C5 -  -  -  -  
  414 D2:04C5 -  -  -  -  breakaway_platform_data_12
  415 D2:04C5 00 -  -  -  	.db 0
  416 D2:04C6 -  -  -  -  
  417 D2:04C6 -  -  -  -  
  418 D2:04C6 -  -  -  -  breakaway_platform_data_13
  419 D2:04C6 00 -  -  -  	.db 0
  420 D2:04C7 -  -  -  -  
  421 D2:04C7 -  -  -  -  
  422 D2:04C7 -  -  -  -  breakaway_platform_data_14
  423 D2:04C7 00 -  -  -  	.db 0
  424 D2:04C8 -  -  -  -  
  425 D2:04C8 -  -  -  -  
Listing for file "ascent.asm"
  629 D2:04C8 -  -  -  -  #include "generated/Tongue_Rings.txt"
Listing for file "C:\Users\jax9h\Desktop\TI84\ascent\generated\Tongue_Rings.txt"
    1 D2:04C8 -  -  -  -  Tongue_Rings:
    2 D2:04C8 01 -  -  -  	.db 1
    3 D2:04C9 00 C1 26 -  	.db 0, 193, 38
Listing for file "ascent.asm"
  630 D2:04CC -  -  -  -  
  631 D2:04CC -  -  -  -  ;#include "testing/SpriteGroups.txt"
  632 D2:04CC -  -  -  -  ;#include "TestingSpriteData.txt"
  633 D2:04CC -  -  -  -  ;#include "TestGeneratedSpriteData.txt"
  634 D2:04CC -  -  -  -  ;#include "Sprite_Data.txt"
  635 D2:04CC -  -  -  -  ;#include "FG_Data.txt"
  636 D2:04CC -  -  -  -  ;#include "MG_Data.txt"
  637 D2:04CC -  -  -  -  ;#include "BG_Data.txt"
  638 D2:04CC -  -  -  -  ;#include "Palette_Setup.txt"
  639 D2:04CC -  -  -  -  ;#include "Equates.txt"
  640 D2:04CC -  -  -  -  ;#include "Decompress_Calls.txt"
  641 D2:04CC -  -  -  -  ;#include "Sprite_Tables.txt"
  642 D2:04CC -  -  -  -  ;#include "TestingBGData.txt"
  643 D2:04CC -  -  -  -  ;#include "TestingFGData.txt"
  644 D2:04CC -  -  -  -  
  645 D2:04CC -  -  -  -  
