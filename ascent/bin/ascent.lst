    1 00:0000 -  -  -  -  
    2 00:0000 -  -  -  -  #include "includes\ti84pce.inc"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\includes\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "ascent.asm"
    3 00:0000 -  -  -  -  
    4 00:0000 -  -  -  -   .assume ADL=1
    5 00:0000 -  -  -  -   .org userMem-2
    6 D1:A87F EF 7B -  -   .db tExtTok,tAsm84CeCmp
    7 D1:A881 -  -  -  -  
    8 D1:A881 -  -  -  -  
    9 D1:A881 -  -  -  -  
   10 D1:A881 -  -  -  -  ;0E30000h + 0200h
   11 D1:A881 -  -  -  -  
   12 D1:A881 CD 28 08 02 	call _homeup
   13 D1:A885 CD 10 08 02 	call _ClrScrnFull
   14 D1:A889 -  -  -  -  
   15 D1:A889 CD 48 08 02 	call _RunIndicOff		; turn off run indicator
   16 D1:A88D F3 -  -  -  	di			
   17 D1:A88E -  -  -  -  	
   18 D1:A88E -  -  -  -  	
   19 D1:A88E CD B0 D9 D1 	call setup_palette_1
   20 D1:A892 -  -  -  -  
   21 D1:A892 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255
   22 D1:A896 3E 25 -  -  	ld	a,lcdBpp4
   23 D1:A898 32 18 00 E3 	ld (mpLcdCtrl),a	
   24 D1:A89C -  -  -  -  
   25 D1:A89C -  -  -  -  
   26 D1:A89C -  -  -  -  
   27 D1:A89C -  -  -  -  
   28 D1:A89C -  -  -  -  	;call sdcomp_set_fast
   29 D1:A89C -  -  -  -  	;call sdcomp_set_flip
   30 D1:A89C -  -  -  -  	;call sdcomp_reset_offset
   31 D1:A89C -  -  -  -  	;ld hl, Tree_5 
   32 D1:A89C -  -  -  -  	;ld de, Tree_5_Fast_F_0
   33 D1:A89C -  -  -  -  	;call sdcomp_set_2bpc
   34 D1:A89C -  -  -  -  	;call sprite_decompress
   35 D1:A89C -  -  -  -  	
   36 D1:A89C -  -  -  -  	;call sdcomp_set_fast
   37 D1:A89C -  -  -  -  	;call sdcomp_reset_flip
   38 D1:A89C -  -  -  -  	;call sdcomp_reset_offset
   39 D1:A89C -  -  -  -  	;ld hl, Moss_0 
   40 D1:A89C -  -  -  -  	;ld de, Moss_0_Fast_0
   41 D1:A89C -  -  -  -  	;call sprite_decompress
   42 D1:A89C -  -  -  -  	
   43 D1:A89C -  -  -  -  	;call prgmpause
   44 D1:A89C -  -  -  -  	;call prgmpause
   45 D1:A89C -  -  -  -  
   46 D1:A89C -  -  -  -  
   47 D1:A89C 21 00 A3 00 	ld hl,$00A300
   48 D1:A8A0 22 5F BF D1 	ld (player_x_pos),hl 
   49 D1:A8A4 21 00 2E 02 	ld hl,$022E00
   50 D1:A8A8 22 62 BF D1 	ld (player_y_pos),hl 
   51 D1:A8AC -  -  -  -  	
   52 D1:A8AC CD 7F C3 D1 	call player_to_cam_coords
   53 D1:A8B0 11 50 00 00 	ld de,80
   54 D1:A8B4 ED 52 -  -  	sbc hl,de 
   55 D1:A8B6 D2 BE A8 D1 	jp nc, set_cam_0_pos_skip_start
   56 D1:A8BA 21 00 00 00 	ld hl,0
   57 D1:A8BE -  -  -  -  set_cam_0_pos_skip_start:
   58 D1:A8BE 22 E6 AB D1 	ld (cam_pos),hl
   59 D1:A8C2 -  -  -  -  	;ld (bg_cam_pos),hl
   60 D1:A8C2 -  -  -  -  	
   61 D1:A8C2 -  -  -  -  	
   62 D1:A8C2 3E 02 -  -  	ld a,%00000010;disable, 32768hz
   63 D1:A8C4 32 30 00 F2 	ld ($F20030),a	
   64 D1:A8C8 -  -  -  -  	
   65 D1:A8C8 CD A9 B8 D1 	call setup_decompress_queue
   66 D1:A8CC -  -  -  -  	
   67 D1:A8CC -  -  -  -  	;Decompress sprites in preframes for setup
   68 D1:A8CC 21 9C D0 D1 	ld hl,decompress_frame_up_pre2 
   69 D1:A8D0 CD AF B9 D1 	call cfdc_direct_add_decompress_frame
   70 D1:A8D4 CD F6 B8 D1 	call continue_decompressions ;Run decompression (Will finish as timer has not started)
   71 D1:A8D8 21 14 D1 D1 	ld hl,decompress_frame_up_pre1
   72 D1:A8DC CD AF B9 D1 	call cfdc_direct_add_decompress_frame
   73 D1:A8E0 CD F6 B8 D1 	call continue_decompressions ;Run decompression (Will finish as timer has not started)
   74 D1:A8E4 -  -  -  -  	
   75 D1:A8E4 -  -  -  -  	;call draw_fg
   76 D1:A8E4 -  -  -  -  	
   77 D1:A8E4 3E 00 -  -  	ld a,0
   78 D1:A8E6 CD A1 B9 D1 	call cfdc_cam_move_up ;need to skip here for frame 0
   79 D1:A8EA -  -  -  -  	
   80 D1:A8EA -  -  -  -  	;call prgmpause
   81 D1:A8EA -  -  -  -  
   82 D1:A8EA CD F6 B8 D1 	call continue_decompressions
   83 D1:A8EE -  -  -  -  	
   84 D1:A8EE -  -  -  -  	;call prgmpause
   85 D1:A8EE 00 -  -  -  	nop ;This needs to be here for some reason
   86 D1:A8EF -  -  -  -  ;	call decompress_calls
   87 D1:A8EF -  -  -  -  	
   88 D1:A8EF -  -  -  -  
   89 D1:A8EF -  -  -  -  	
   90 D1:A8EF -  -  -  -  	;gen purp timers
   91 D1:A8EF -  -  -  -  		; 76543210	
   92 D1:A8EF 3E 03 -  -  	ld a,%00000011;enable, 32768hz
   93 D1:A8F1 32 30 00 F2 	ld ($F20030),a
   94 D1:A8F5 -  -  -  -  	;	  fedcba98
   95 D1:A8F5 3E 02 -  -  	ld a,%00000010;count up
   96 D1:A8F7 32 31 00 F2 	ld ($F20031),a
   97 D1:A8FB -  -  -  -  	
   98 D1:A8FB 21 00 2C D5 	ld hl,vRam + (160*240*2)
   99 D1:A8FF 22 EC AB D1 	ld (draw_buffer),hl
  100 D1:A903 21 00 C2 D5 	ld hl,vRam + (160*240*3)
  101 D1:A907 22 10 00 E3 	ld (mpLcdBase),hl
  102 D1:A90B -  -  -  -  	
  103 D1:A90B -  -  -  -  	
  104 D1:A90B -  -  -  -  
  105 D1:A90B -  -  -  -  	;ld hl,BG_buffer+(160*5)
  106 D1:A90B -  -  -  -  	;ld (dbgl_vram_line_start),hl
  107 D1:A90B -  -  -  -  
  108 D1:A90B -  -  -  -  	;ld hl,BG_Data_1
  109 D1:A90B -  -  -  -  	;ld a,10
  110 D1:A90B -  -  -  -  	;call draw_bg_line
  111 D1:A90B -  -  -  -  	
  112 D1:A90B -  -  -  -  	
  113 D1:A90B -  -  -  -  	;call prgmpause
  114 D1:A90B -  -  -  -  
  115 D1:A90B -  -  -  -  	;call draw_mg
  116 D1:A90B -  -  -  -  
  117 D1:A90B CD 3F AD D1 	call setup_bg ;after initial decompressions and cam setup
  118 D1:A90F -  -  -  -  	;call prgmpause
  119 D1:A90F -  -  -  -  	;call prgmpause
  120 D1:A90F -  -  -  -  main_loop:
  121 D1:A90F -  -  -  -  
  122 D1:A90F -  -  -  -  	
  123 D1:A90F -  -  -  -  
  124 D1:A90F -  -  -  -  	;clear timer
  125 D1:A90F 3E 00 -  -  	ld a,0
  126 D1:A911 32 00 00 F2 	ld ($F20000),a;32768hz
  127 D1:A915 32 01 00 F2 	ld ($F20001),a;128hz
  128 D1:A919 32 02 00 F2 	ld ($F20002),a;0.5hz
  129 D1:A91D 32 03 00 F2 	ld ($F20003),a
  130 D1:A921 -  -  -  -  	
  131 D1:A921 -  -  -  -  	;Instructions here 
  132 D1:A921 -  -  -  -  	
  133 D1:A921 -  -  -  -  	
  134 D1:A921 -  -  -  -  	;call input_cam_up
  135 D1:A921 C3 CF B9 D1 	jp get_inputs ;use jp so can jump to prgmexit to not have pushed PC pointer
  136 D1:A925 -  -  -  -  get_inputs_return:
  137 D1:A925 -  -  -  -  	;call move_bg Draw BG calls MoveBg
  138 D1:A925 -  -  -  -  	;call player_move_debug
  139 D1:A925 CD 16 BB D1 	call player_update
  140 D1:A929 CD F8 BC D1 	call check_collisions
  141 D1:A92D -  -  -  -  	
  142 D1:A92D CD 5E C5 D1 	call update_sine_vals
  143 D1:A931 -  -  -  -  	;ld a,(lin_4_7_1)
  144 D1:A931 -  -  -  -  	;call write_a_to_ram
  145 D1:A931 -  -  -  -  	
  146 D1:A931 CD BB C8 D1 	call update_animations
  147 D1:A935 -  -  -  -  	
  148 D1:A935 -  -  -  -  	
  149 D1:A935 CD FF BF D1 	call player_move_cam
  150 D1:A939 -  -  -  -  	
  151 D1:A939 CD 4F AC D1 	call draw_bg
  152 D1:A93D -  -  -  -  
  153 D1:A93D -  -  -  -  	
  154 D1:A93D -  -  -  -  	
  155 D1:A93D -  -  -  -  	;TEsting
  156 D1:A93D 21 00 00 00 	ld hl,0
  157 D1:A941 3A 00 00 F2 	ld a,($F20000);32768hz
  158 D1:A945 6F -  -  -  	ld l,a
  159 D1:A946 3A 01 00 F2 	ld a,($F20001);128hz 
  160 D1:A94A 67 -  -  -  	ld h,a
  161 D1:A94B CB 3C -  -  	srl h ;div by 8
  162 D1:A94D CB 1D -  -  	rr l 
  163 D1:A94F CB 3C -  -  	srl h
  164 D1:A951 CB 1D -  -  	rr l 
  165 D1:A953 CB 3C -  -  	srl h
  166 D1:A955 CB 1D -  -  	rr l 
  167 D1:A957 7D -  -  -  	ld a,l
  168 D1:A958 32 F3 AB D1 	ld (draw_bg_time),a
  169 D1:A95C -  -  -  -  	
  170 D1:A95C -  -  -  -  	;TEST CLEAR BUFFER
  171 D1:A95C -  -  -  -  	;ld hl,BG_buffer
  172 D1:A95C -  -  -  -  	;ld de,(draw_buffer)
  173 D1:A95C -  -  -  -  	;ld bc, 160*240
  174 D1:A95C -  -  -  -  	;ldir
  175 D1:A95C -  -  -  -  	
  176 D1:A95C CD 5B B5 D1 	call draw_mg
  177 D1:A960 -  -  -  -  	
  178 D1:A960 CD 79 B5 D1 	call draw_mg2
  179 D1:A964 -  -  -  -  	
  180 D1:A964 -  -  -  -  	
  181 D1:A964 CD 77 C1 D1 	call player_draw 
  182 D1:A968 3A 78 BF D1 	ld a,(player_flags)
  183 D1:A96C CB BF -  -  	res 7,a ;Reset jump hold flag
  184 D1:A96E 32 78 BF D1 	ld (player_flags),a 
  185 D1:A972 -  -  -  -  	
  186 D1:A972 -  -  -  -  	
  187 D1:A972 -  -  -  -  	;ld hl,121
  188 D1:A972 -  -  -  -  	;ld (tongue_ring_y_pos),hl 
  189 D1:A972 -  -  -  -  	;ld a, 50
  190 D1:A972 -  -  -  -  	;ld (tongue_ring_x_pos),a 
  191 D1:A972 -  -  -  -  	
  192 D1:A972 -  -  -  -  	;ld c,20 
  193 D1:A972 -  -  -  -  	;call draw_tongue
  194 D1:A972 -  -  -  -  	
  195 D1:A972 -  -  -  -  	
  196 D1:A972 -  -  -  -  	
  197 D1:A972 -  -  -  -  	;TEsting
  198 D1:A972 21 00 00 00 	ld hl,0
  199 D1:A976 3A 00 00 F2 	ld a,($F20000);32768hz
  200 D1:A97A 6F -  -  -  	ld l,a
  201 D1:A97B 3A 01 00 F2 	ld a,($F20001);128hz 
  202 D1:A97F 67 -  -  -  	ld h,a
  203 D1:A980 CB 3C -  -  	srl h ;div by 8
  204 D1:A982 CB 1D -  -  	rr l 
  205 D1:A984 CB 3C -  -  	srl h
  206 D1:A986 CB 1D -  -  	rr l 
  207 D1:A988 CB 3C -  -  	srl h
  208 D1:A98A CB 1D -  -  	rr l 
  209 D1:A98C 7D -  -  -  	ld a,l
  210 D1:A98D 32 F4 AB D1 	ld (draw_mg_time),a
  211 D1:A991 -  -  -  -  	
  212 D1:A991 CD 97 B5 D1 	call draw_fg
  213 D1:A995 -  -  -  -  	
  214 D1:A995 -  -  -  -  	
  215 D1:A995 -  -  -  -  	;call dl_set_negative
  216 D1:A995 -  -  -  -  	;Line draw test 
  217 D1:A995 -  -  -  -  	;ld hl, (draw_buffer)
  218 D1:A995 -  -  -  -  	;ld de, 160*96  + 25
  219 D1:A995 -  -  -  -  	;add hl,de 
  220 D1:A995 -  -  -  -  	;ld a, 35; x dist 
  221 D1:A995 -  -  -  -  	;ld (dl_x_dist),a 
  222 D1:A995 -  -  -  -  	;ld a, 22; y dist 
  223 D1:A995 -  -  -  -  	;ld c,a 
  224 D1:A995 -  -  -  -  	;ld (dl_y_dist_1),a 
  225 D1:A995 -  -  -  -  	;ld (dl_y_dist_2),a 
  226 D1:A995 -  -  -  -  	;ld de,0
  227 D1:A995 -  -  -  -  	;ld a,0 
  228 D1:A995 -  -  -  -  	;ld b,0
  229 D1:A995 -  -  -  -  	;call draw_line_loop
  230 D1:A995 -  -  -  -  	
  231 D1:A995 -  -  -  -  	
  232 D1:A995 -  -  -  -  	
  233 D1:A995 -  -  -  -  	;Leaves_4_Slow_1 has issue
  234 D1:A995 -  -  -  -  	;Need to fix indexing of decompress segments
  235 D1:A995 -  -  -  -  	
  236 D1:A995 -  -  -  -  	;Sprite groups must all use the same load index of a given sprite, as they pull from same data
  237 D1:A995 -  -  -  -  	
  238 D1:A995 -  -  -  -  	
  239 D1:A995 -  -  -  -  	
  240 D1:A995 -  -  -  -  	;TEsting
  241 D1:A995 21 00 00 00 	ld hl,0
  242 D1:A999 3A 00 00 F2 	ld a,($F20000);32768hz
  243 D1:A99D 6F -  -  -  	ld l,a
  244 D1:A99E 3A 01 00 F2 	ld a,($F20001);128hz 
  245 D1:A9A2 67 -  -  -  	ld h,a
  246 D1:A9A3 CB 3C -  -  	srl h ;div by 8
  247 D1:A9A5 CB 1D -  -  	rr l 
  248 D1:A9A7 CB 3C -  -  	srl h
  249 D1:A9A9 CB 1D -  -  	rr l 
  250 D1:A9AB CB 3C -  -  	srl h
  251 D1:A9AD CB 1D -  -  	rr l 
  252 D1:A9AF 7D -  -  -  	ld a,l
  253 D1:A9B0 32 F5 AB D1 	ld (draw_fg_time),a
  254 D1:A9B4 -  -  -  -  	
  255 D1:A9B4 21 00 00 00 	ld hl,0
  256 D1:A9B8 -  -  -  -  	
  257 D1:A9B8 -  -  -  -  	; for debug longest frame draw time
  258 D1:A9B8 3A 00 00 F2 	ld a,($F20000)
  259 D1:A9BC 6F -  -  -  	ld l,a
  260 D1:A9BD 3A 01 00 F2 	ld a,($F20001);128hz 
  261 D1:A9C1 67 -  -  -  	ld h,a
  262 D1:A9C2 E5 -  -  -  	push hl
  263 D1:A9C3 ED 4B F7 AB 
              D1 -  -  -  	ld bc,(longestFrame)
  264 D1:A9C8 ED 42 -  -  	sbc hl,bc 
  265 D1:A9CA DA DC A9 D1 	jp c,longest_frame_skip
  266 D1:A9CE -  -  -  -  	
  267 D1:A9CE E1 -  -  -  	pop hl 
  268 D1:A9CF E5 -  -  -  	push hl 
  269 D1:A9D0 22 F7 AB D1 	ld (longestFrame),hl 
  270 D1:A9D4 2A E6 AB D1 	ld hl,(cam_pos)
  271 D1:A9D8 22 FA AB D1 	ld (longestFramePos),hl
  272 D1:A9DC -  -  -  -  longest_frame_skip:
  273 D1:A9DC E1 -  -  -  	pop hl 
  274 D1:A9DD -  -  -  -  	
  275 D1:A9DD -  -  -  -  	;Add to frame counter
  276 D1:A9DD 2A 00 AC D1 	ld hl,(frameCount)
  277 D1:A9E1 23 -  -  -  	inc hl
  278 D1:A9E2 22 00 AC D1 	ld (frameCount),hl
  279 D1:A9E6 -  -  -  -  	
  280 D1:A9E6 -  -  -  -  
  281 D1:A9E6 -  -  -  -  	
  282 D1:A9E6 -  -  -  -  	;check if lcd has drawn first frame
  283 D1:A9E6 -  -  -  -  
  284 D1:A9E6 CD 86 B9 D1 	call check_for_decompress_calls
  285 D1:A9EA -  -  -  -  	;Sprite decompression will occur here
  286 D1:A9EA CD F6 B8 D1 	call continue_decompressions
  287 D1:A9EE -  -  -  -  	
  288 D1:A9EE -  -  -  -  	;TEsting
  289 D1:A9EE 21 00 00 00 	ld hl,0
  290 D1:A9F2 3A 00 00 F2 	ld a,($F20000);32768hz
  291 D1:A9F6 6F -  -  -  	ld l,a
  292 D1:A9F7 3A 01 00 F2 	ld a,($F20001);128hz 
  293 D1:A9FB 67 -  -  -  	ld h,a
  294 D1:A9FC CB 3C -  -  	srl h ;div by 8
  295 D1:A9FE CB 1D -  -  	rr l 
  296 D1:AA00 CB 3C -  -  	srl h
  297 D1:AA02 CB 1D -  -  	rr l 
  298 D1:AA04 CB 3C -  -  	srl h
  299 D1:AA06 CB 1D -  -  	rr l 
  300 D1:AA08 7D -  -  -  	ld a,l
  301 D1:AA09 32 F6 AB D1 	ld (decompress_time),a
  302 D1:AA0D -  -  -  -  
  303 D1:AA0D -  -  -  -  
  304 D1:AA0D -  -  -  -  	
  305 D1:AA0D -  -  -  -  
  306 D1:AA0D -  -  -  -  	;Draw time bar at top of screen 
  307 D1:AA0D 2A EC AB D1 	ld hl, (draw_buffer)
  308 D1:AA11 01 00 00 00 	ld bc,0 
  309 D1:AA15 3A F6 AB D1 	ld a,(decompress_time)
  310 D1:AA19 4F -  -  -  	ld c,a 
  311 D1:AA1A 3E 55 -  -  	ld a, $55
  312 D1:AA1C CD E0 10 02 	call _MemSet
  313 D1:AA20 -  -  -  -  	
  314 D1:AA20 2A EC AB D1 	ld hl, (draw_buffer)
  315 D1:AA24 01 00 00 00 	ld bc,0 
  316 D1:AA28 3A F5 AB D1 	ld a,(draw_fg_time)
  317 D1:AA2C 4F -  -  -  	ld c,a 
  318 D1:AA2D 3E 44 -  -  	ld a, $44
  319 D1:AA2F CD E0 10 02 	call _MemSet
  320 D1:AA33 -  -  -  -  	
  321 D1:AA33 2A EC AB D1 	ld hl, (draw_buffer)
  322 D1:AA37 01 00 00 00 	ld bc,0 
  323 D1:AA3B 3A F4 AB D1 	ld a,(draw_mg_time)
  324 D1:AA3F 4F -  -  -  	ld c,a 
  325 D1:AA40 3E 33 -  -  	ld a, $33
  326 D1:AA42 CD E0 10 02 	call _MemSet
  327 D1:AA46 -  -  -  -  
  328 D1:AA46 2A EC AB D1 	ld hl, (draw_buffer)
  329 D1:AA4A 01 00 00 00 	ld bc,0 
  330 D1:AA4E 3A F3 AB D1 	ld a,(draw_bg_time)
  331 D1:AA52 4F -  -  -  	ld c,a 
  332 D1:AA53 3E 22 -  -  	ld a, $22
  333 D1:AA55 CD E0 10 02 	call _MemSet
  334 D1:AA59 -  -  -  -  	
  335 D1:AA59 -  -  -  -  
  336 D1:AA59 2A EC AB D1 	ld hl, (draw_buffer)
  337 D1:AA5D -  -  -  -  	;max time = 00000011 11100010
  338 D1:AA5D -  -  -  -  	;after 3x shift, a = 01111100 = 120
  339 D1:AA5D 01 78 00 00 	ld bc, 120  ; =1000/4 /2 for 2pix/bit 
  340 D1:AA61 09 -  -  -  	add hl,bc 
  341 D1:AA62 3E 55 -  -  	ld a,$55
  342 D1:AA64 77 -  -  -  	ld (hl),a 
  343 D1:AA65 -  -  -  -  	
  344 D1:AA65 -  -  -  -  	
  345 D1:AA65 -  -  -  -  	;Again for thick line
  346 D1:AA65 -  -  -  -  	
  347 D1:AA65 2A EC AB D1 	ld hl, (draw_buffer)
  348 D1:AA69 01 A0 00 00 	ld bc,160
  349 D1:AA6D 09 -  -  -  	add hl,bc 
  350 D1:AA6E 3A F6 AB D1 	ld a,(decompress_time)
  351 D1:AA72 4F -  -  -  	ld c,a 
  352 D1:AA73 3E 55 -  -  	ld a, $55
  353 D1:AA75 CD E0 10 02 	call _MemSet
  354 D1:AA79 -  -  -  -  	
  355 D1:AA79 2A EC AB D1 	ld hl, (draw_buffer)
  356 D1:AA7D 01 A0 00 00 	ld bc,160
  357 D1:AA81 09 -  -  -  	add hl,bc 
  358 D1:AA82 3A F5 AB D1 	ld a,(draw_fg_time)
  359 D1:AA86 4F -  -  -  	ld c,a 
  360 D1:AA87 3E 44 -  -  	ld a, $44
  361 D1:AA89 CD E0 10 02 	call _MemSet
  362 D1:AA8D -  -  -  -  	
  363 D1:AA8D 2A EC AB D1 	ld hl, (draw_buffer)
  364 D1:AA91 01 A0 00 00 	ld bc,160
  365 D1:AA95 09 -  -  -  	add hl,bc
  366 D1:AA96 3A F4 AB D1 	ld a,(draw_mg_time)
  367 D1:AA9A 4F -  -  -  	ld c,a 
  368 D1:AA9B 3E 33 -  -  	ld a, $33
  369 D1:AA9D CD E0 10 02 	call _MemSet
  370 D1:AAA1 -  -  -  -  
  371 D1:AAA1 2A EC AB D1 	ld hl, (draw_buffer)
  372 D1:AAA5 01 A0 00 00 	ld bc,160
  373 D1:AAA9 09 -  -  -  	add hl,bc
  374 D1:AAAA 3A F3 AB D1 	ld a,(draw_bg_time)
  375 D1:AAAE 4F -  -  -  	ld c,a 
  376 D1:AAAF 3E 22 -  -  	ld a, $22
  377 D1:AAB1 CD E0 10 02 	call _MemSet
  378 D1:AAB5 -  -  -  -  	
  379 D1:AAB5 2A EC AB D1 	ld hl, (draw_buffer)
  380 D1:AAB9 01 18 01 00 	ld bc,280
  381 D1:AABD 09 -  -  -  	add hl,bc 
  382 D1:AABE 3E 55 -  -  	ld a,$55
  383 D1:AAC0 77 -  -  -  	ld (hl),a 
  384 D1:AAC1 -  -  -  -  	
  385 D1:AAC1 -  -  -  -  	
  386 D1:AAC1 -  -  -  -  
  387 D1:AAC1 -  -  -  -  
  388 D1:AAC1 -  -  -  -  	
  389 D1:AAC1 -  -  -  -  
  390 D1:AAC1 -  -  -  -  	;swap draw buffers
  391 D1:AAC1 2A 10 00 E3 	ld hl,(mpLcdBase)
  392 D1:AAC5 ED 5B EC AB 
              D1 -  -  -  	ld de,(draw_buffer)
  393 D1:AACA ED 53 10 00 
              E3 -  -  -  	ld (mpLcdBase),de
  394 D1:AACF 22 EC AB D1 	ld (draw_buffer),hl
  395 D1:AAD3 -  -  -  -  
  396 D1:AAD3 -  -  -  -  
  397 D1:AAD3 -  -  -  -  	;wait until finished drawing second frame
  398 D1:AAD3 -  -  -  -  	;Need to check clock here, there wont always be decompression to wait for
  399 D1:AAD3 -  -  -  -  	;Max time = 00000011 11000000
  400 D1:AAD3 -  -  -  -  main_clock_check_loop:
  401 D1:AAD3 3A 01 00 F2 	ld a,($F20001);128hz clock
  402 D1:AAD7 FE 03 -  -  	cp %00000011 ;check if reached 4 
  403 D1:AAD9 DA D3 AA D1 	jp c,main_clock_check_loop ;msb <= 2, can continue  
  404 D1:AADD 3A 00 00 F2 	ld a,($F20000);32768hz clock
  405 D1:AAE1 FE E0 -  -  	cp %11100000;check if reached value 
  406 D1:AAE3 DA D3 AA D1 	jp c,main_clock_check_loop ;msb = 3 and lsb < value, can continue
  407 D1:AAE7 -  -  -  -  	
  408 D1:AAE7 -  -  -  -  
  409 D1:AAE7 -  -  -  -  
  410 D1:AAE7 -  -  -  -  clear_int:      
  411 D1:AAE7 21 28 00 E3     ld hl, mpLcdIcr
  412 D1:AAEB CB D6 -  -      set 2, (hl)            ; clear interrupt
  413 D1:AAED 21 20 00 E3     ld hl, mpLcdRis
  414 D1:AAF1 -  -  -  -  wait_int:
  415 D1:AAF1 CB 56 -  -      bit 2, (hl)
  416 D1:AAF3 28 FC -  -      jr z, wait_int  
  417 D1:AAF5 -  -  -  -  
  418 D1:AAF5 -  -  -  -  
  419 D1:AAF5 21 00 00 00 	ld hl,0
  420 D1:AAF9 -  -  -  -  	
  421 D1:AAF9 3A 02 00 F2 	ld a,($F20002)
  422 D1:AAFD 67 -  -  -  	ld h,a
  423 D1:AAFE 3A 01 00 F2 	ld a,($F20001)
  424 D1:AB02 6F -  -  -  	ld l,a
  425 D1:AB03 ED 4B FD AB 
              D1 -  -  -  	ld bc,(totalTime)
  426 D1:AB08 09 -  -  -  	add hl,bc 
  427 D1:AB09 22 FD AB D1 	ld (totalTime),hl 
  428 D1:AB0D -  -  -  -  	
  429 D1:AB0D -  -  -  -  	
  430 D1:AB0D -  -  -  -  	
  431 D1:AB0D -  -  -  -  	
  432 D1:AB0D -  -  -  -  
  433 D1:AB0D -  -  -  -  	
  434 D1:AB0D -  -  -  -  
  435 D1:AB0D C2 0F A9 D1 	jp nz,main_loop
  436 D1:AB11 -  -  -  -  		
  437 D1:AB11 -  -  -  -  	;print debug times 
  438 D1:AB11 21 00 00 D4 	ld hl,vRam
  439 D1:AB15 22 10 00 E3 	ld (mpLcdBase),hl
  440 D1:AB19 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  441 D1:AB1D 3E 2D -  -  	ld	a,lcdBpp16
  442 D1:AB1F 32 18 00 E3 	ld (mpLcdCtrl),a
  443 D1:AB23 -  -  -  -  	
  444 D1:AB23 3E 00 -  -  	ld a,0
  445 D1:AB25 32 95 05 D0 	ld (curRow),a
  446 D1:AB29 32 96 05 D0 	ld (curCol),a
  447 D1:AB2D 2A F7 AB D1 	ld hl,(longestFrame)
  448 D1:AB31 CD E0 1E 02 	call _DispHL
  449 D1:AB35 3E 01 -  -  	ld a,1
  450 D1:AB37 32 95 05 D0 	ld (curRow),a
  451 D1:AB3B 3E 00 -  -  	ld a,0
  452 D1:AB3D 32 96 05 D0 	ld (curCol),a
  453 D1:AB41 2A FA AB D1 	ld hl,(longestFramePos)
  454 D1:AB45 CD E0 1E 02 	call _DispHL
  455 D1:AB49 3E 02 -  -  	ld a,2
  456 D1:AB4B 32 95 05 D0 	ld (curRow),a
  457 D1:AB4F 3E 00 -  -  	ld a,0
  458 D1:AB51 32 96 05 D0 	ld (curCol),a
  459 D1:AB55 2A FD AB D1 	ld hl,(totalTime)
  460 D1:AB59 CD E0 1E 02 	call _DispHL
  461 D1:AB5D 3E 03 -  -  	ld a,3
  462 D1:AB5F 32 95 05 D0 	ld (curRow),a
  463 D1:AB63 3E 00 -  -  	ld a,0
  464 D1:AB65 32 96 05 D0 	ld (curCol),a
  465 D1:AB69 2A 00 AC D1 	ld hl,(frameCount)
  466 D1:AB6D CD E0 1E 02 	call _DispHL
  467 D1:AB71 -  -  -  -  	
  468 D1:AB71 CD D5 AB D1 	call prgmpause
  469 D1:AB75 CD D5 AB D1 	call prgmpause
  470 D1:AB79 -  -  -  -  	
  471 D1:AB79 -  -  -  -  	
  472 D1:AB79 -  -  -  -  exit_prgm:
  473 D1:AB79 21 00 00 D4 	ld hl,vRam
  474 D1:AB7D 22 10 00 E3 	ld (mpLcdBase),hl
  475 D1:AB81 CD 10 08 02 	call _ClrScrnFull
  476 D1:AB85 3E 2D -  -  	ld	a,lcdBpp16
  477 D1:AB87 32 18 00 E3 	ld	(mpLcdCtrl),a
  478 D1:AB8B CD 3C 1A 02 	call _DrawStatusBar
  479 D1:AB8F -  -  -  -  	
  480 D1:AB8F FB -  -  -  	ei				; reset screen back to normal
  481 D1:AB90 C9 -  -  -  	ret			; return to os
  482 D1:AB91 -  -  -  -  
  483 D1:AB91 -  -  -  -  
  484 D1:AB91 -  -  -  -  printHL:;=================REMOVE
  485 D1:AB91 E5 -  -  -  	push hl
  486 D1:AB92 21 00 00 D4 	ld hl,vRam
  487 D1:AB96 22 10 00 E3 	ld (mpLcdBase),hl
  488 D1:AB9A CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  489 D1:AB9E 3E 2D -  -  	ld	a,lcdBpp16
  490 D1:ABA0 32 18 00 E3 	ld (mpLcdCtrl),a
  491 D1:ABA4 E1 -  -  -  	pop hl
  492 D1:ABA5 CD E0 1E 02 	call _DispHL
  493 D1:ABA9 FB -  -  -  	ei
  494 D1:ABAA CD 8C 0D 02 	call _GetKey
  495 D1:ABAE F3 -  -  -  	di
  496 D1:ABAF C3 79 AB D1 	jp exit_prgm
  497 D1:ABB3 -  -  -  -  
  498 D1:ABB3 -  -  -  -  
  499 D1:ABB3 -  -  -  -  write_a_to_ram:
  500 D1:ABB3 F5 -  -  -  	push af 
  501 D1:ABB4 E5 -  -  -  	push hl 
  502 D1:ABB5 -  -  -  -  write_a_to_ram_addr .equ $ + 1 
  503 D1:ABB5 21 00 80 D4 	ld hl, $d48000
  504 D1:ABB9 77 -  -  -  	ld (hl),a 
  505 D1:ABBA 23 -  -  -  	inc hl 
  506 D1:ABBB 22 B6 AB D1 	ld (write_a_to_ram_addr),hl 
  507 D1:ABBF E1 -  -  -  	pop hl 
  508 D1:ABC0 F1 -  -  -  	pop af 
  509 D1:ABC1 C9 -  -  -  	ret 
  510 D1:ABC2 -  -  -  -  	
  511 D1:ABC2 -  -  -  -  write_hl_to_ram:
  512 D1:ABC2 E5 -  -  -  	push hl 
  513 D1:ABC3 D5 -  -  -  	push de 
  514 D1:ABC4 EB -  -  -  	ex de,hl
  515 D1:ABC5 2A B6 AB D1 	ld hl,(write_a_to_ram_addr)
  516 D1:ABC9 ED 1F -  -  	ld (hl),de 
  517 D1:ABCB 23 -  -  -  	inc hl
  518 D1:ABCC 23 -  -  -  	inc hl
  519 D1:ABCD 23 -  -  -  	inc hl
  520 D1:ABCE 22 B6 AB D1 	ld (write_a_to_ram_addr),hl
  521 D1:ABD2 D1 -  -  -  	pop de 
  522 D1:ABD3 E1 -  -  -  	pop hl
  523 D1:ABD4 C9 -  -  -  	ret 
  524 D1:ABD5 -  -  -  -  
  525 D1:ABD5 -  -  -  -  prgmpause: ;for testing, interrupts code until key pressed. will destroy af register
  526 D1:ABD5 F5 -  -  -  	push af
  527 D1:ABD6 D5 -  -  -  	push de 
  528 D1:ABD7 E5 -  -  -  	push hl 
  529 D1:ABD8 08 -  -  -  	ex af,af';'
  530 D1:ABD9 F5 -  -  -  	push af 
  531 D1:ABDA FB -  -  -  	ei
  532 D1:ABDB CD 8C 0D 02 	call _GetKey
  533 D1:ABDF F3 -  -  -  	di
  534 D1:ABE0 F1 -  -  -  	pop af 
  535 D1:ABE1 08 -  -  -  	ex af,af';'
  536 D1:ABE2 E1 -  -  -  	pop hl 
  537 D1:ABE3 D1 -  -  -  	pop de 
  538 D1:ABE4 F1 -  -  -  	pop af
  539 D1:ABE5 C9 -  -  -  	ret
  540 D1:ABE6 -  -  -  -  
  541 D1:ABE6 -  -  -  -  cam_pos:;y position of lowest visible line in fg layer
  542 D1:ABE6 00 00 00 -  	.dl 0
  543 D1:ABE9 -  -  -  -  bg_cam_pos: ;y position of lowest visible line in bg layer (= cam pos / 8)
  544 D1:ABE9 00 00 00 -  	.dl 0
  545 D1:ABEC -  -  -  -  
  546 D1:ABEC -  -  -  -  
  547 D1:ABEC -  -  -  -  draw_buffer:;where new frame is drawn before lcd pointer is swapped 
  548 D1:ABEC 00 2C D5 -  	.dl $d52c00
  549 D1:ABEF -  -  -  -  	
  550 D1:ABEF -  -  -  -  BG_draw_buffer: ;Address of the uppermost line of the background buffer. This is where new lines of bg are drawn to 
  551 D1:ABEF 00 00 00 -  	.dl 0
  552 D1:ABF2 -  -  -  -  BG_buffer .equ vram + (160*240) ;Start of BG buffer 
  553 D1:ABF2 -  -  -  -  
  554 D1:ABF2 -  -  -  -  
  555 D1:ABF2 -  -  -  -  ;d40000 = Decompressed sprite data
  556 D1:ABF2 -  -  -  -  ;d49600 = BG buffer
  557 D1:ABF2 -  -  -  -  ;d52c00 = Frame draw buffer 1 
  558 D1:ABF2 -  -  -  -  ;d5c200 = frame draw buffer 2
  559 D1:ABF2 -  -  -  -  
  560 D1:ABF2 -  -  -  -  ;pixelShadow .equ $D031F6 
  561 D1:ABF2 -  -  -  -  
  562 D1:ABF2 -  -  -  -  move_bg_time:
  563 D1:ABF2 00 -  -  -  	.db 0
  564 D1:ABF3 -  -  -  -  draw_bg_time:
  565 D1:ABF3 00 -  -  -  	.db 0
  566 D1:ABF4 -  -  -  -  draw_mg_time:
  567 D1:ABF4 00 -  -  -  	.db 0
  568 D1:ABF5 -  -  -  -  draw_fg_time:
  569 D1:ABF5 00 -  -  -  	.db 0
  570 D1:ABF6 -  -  -  -  decompress_time:
  571 D1:ABF6 00 -  -  -  	.db 0
  572 D1:ABF7 -  -  -  -  
  573 D1:ABF7 -  -  -  -  
  574 D1:ABF7 -  -  -  -  longestFrame:
  575 D1:ABF7 00 00 00 -  	.dl 0
  576 D1:ABFA -  -  -  -  longestFramePos:
  577 D1:ABFA 00 00 00 -  	.dl 0
  578 D1:ABFD -  -  -  -  totalTime:
  579 D1:ABFD 00 00 00 -  	.dl 0
  580 D1:AC00 -  -  -  -  frameCount:
  581 D1:AC00 00 00 00 -  	.dl 0
  582 D1:AC03 -  -  -  -  hasLagged:
  583 D1:AC03 00 00 00 -  	.dl 0
  584 D1:AC06 -  -  -  -  
  585 D1:AC06 -  -  -  -  sd_test_a:
  586 D1:AC06 00 00 00 -  	.dl 0 
  587 D1:AC09 -  -  -  -  
  588 D1:AC09 -  -  -  -  
  589 D1:AC09 -  -  -  -  
  590 D1:AC09 -  -  -  -  
  591 D1:AC09 -  -  -  -  
  592 D1:AC09 -  -  -  -  
  593 D1:AC09 -  -  -  -  #include "timeTesting.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\timeTesting.txt"
    1 D1:AC09 -  -  -  -  
    2 D1:AC09 -  -  -  -  
    3 D1:AC09 -  -  -  -  
    4 D1:AC09 -  -  -  -  time_test_start:
    5 D1:AC09 -  -  -  -  
    6 D1:AC09 -  -  -  -  		; 76543210	
    7 D1:AC09 3E 03 -  -  	ld a,%00000011;enable, 32768hz
    8 D1:AC0B 32 30 00 F2 	ld ($F20030),a
    9 D1:AC0F -  -  -  -  	;	  fedcba98
   10 D1:AC0F 3E 02 -  -  	ld a,%00000010;count up
   11 D1:AC11 32 31 00 F2 	ld ($F20031),a
   12 D1:AC15 3E 00 -  -  	ld a,0
   13 D1:AC17 32 00 00 F2 	ld ($F20000),a
   14 D1:AC1B 32 01 00 F2 	ld ($F20001),a
   15 D1:AC1F 32 02 00 F2 	ld ($F20002),a
   16 D1:AC23 32 03 00 F2 	ld ($F20003),a
   17 D1:AC27 -  -  -  -  	
   18 D1:AC27 21 2C 01 00 	ld hl,300
   19 D1:AC2B -  -  -  -  	
   20 D1:AC2B -  -  -  -  time_testing_loop:
   21 D1:AC2B E5 -  -  -  	push hl
   22 D1:AC2C 01 E8 03 00 	ld bc,1000
   23 D1:AC30 -  -  -  -  time_testing_loop_2:
   24 D1:AC30 C5 -  -  -  	push bc
   25 D1:AC31 -  -  -  -  	;instruction here
   26 D1:AC31 -  -  -  -  	
   27 D1:AC31 -  -  -  -  	
   28 D1:AC31 -  -  -  -  	;Instruction end
   29 D1:AC31 C1 -  -  -  	pop bc
   30 D1:AC32 0B -  -  -  	dec bc
   31 D1:AC33 79 -  -  -  	ld a,c
   32 D1:AC34 B0 -  -  -  	or b
   33 D1:AC35 C2 30 AC D1 	jp nz,time_testing_loop_2
   34 D1:AC39 E1 -  -  -  	pop hl
   35 D1:AC3A 2B -  -  -  	dec hl
   36 D1:AC3B 7D -  -  -  	ld a,l
   37 D1:AC3C B4 -  -  -  	or h
   38 D1:AC3D C2 2B AC D1 	jp nz,time_testing_loop
   39 D1:AC41 -  -  -  -  	
   40 D1:AC41 3A 01 00 F2 	ld a,($F20001);128hz
   41 D1:AC45 6F -  -  -  	ld l,a
   42 D1:AC46 3A 02 00 F2 	ld a,($F20002);0.5hz
   43 D1:AC4A 67 -  -  -  	ld h,a
   44 D1:AC4B C3 91 AB D1 	jp printHL;div by 128 for time
   45 D1:AC4F -  -  -  -  	
   46 D1:AC4F -  -  -  -  
   47 D1:AC4F -  -  -  -  ;60fps = .0166sec/f	
   48 D1:AC4F -  -  -  -  
   49 D1:AC4F -  -  -  -  ;1000 ldir in vram of 160*240 bytes
   50 D1:AC4F -  -  -  -  ;6.8sec, .0068 sec/instruction   0.4 of a frame
   51 D1:AC4F -  -  -  -  
   52 D1:AC4F -  -  -  -  
   53 D1:AC4F -  -  -  -  ;10,000 draw 1 bg line very complex 
   54 D1:AC4F -  -  -  -  ;9 sec  .07 of frame/instruction
   55 D1:AC4F -  -  -  -  
   56 D1:AC4F -  -  -  -  ;300k draw slow sprite 12*5 px complex
   57 D1:AC4F -  -  -  -  ;16.4RT, 14.8CLK
   58 D1:AC4F -  -  -  -  ;.00328 frames/sprite, 4.19 frames / screen
   59 D1:AC4F -  -  -  -  ;.24 screens/frame
   60 D1:AC4F -  -  -  -  
   61 D1:AC4F -  -  -  -  
   62 D1:AC4F -  -  -  -  ;300k slow sprite best case 12*5px
   63 D1:AC4F -  -  -  -  ;8.75RT 7.6clk
   64 D1:AC4F -  -  -  -  ;.00175 frames/spr 2.24 frames/screen
   65 D1:AC4F -  -  -  -  ;.446 screens/frame
   66 D1:AC4F -  -  -  -  
   67 D1:AC4F -  -  -  -  
   68 D1:AC4F -  -  -  -  
   69 D1:AC4F -  -  -  -  ;1,000,000 fast fg sprite 20*4 px
   70 D1:AC4F -  -  -  -  ;22.15RT,20.35clk
   71 D1:AC4F -  -  -  -  ;.00133 frames/spr 1.275 frames/screen
   72 D1:AC4F -  -  -  -  ;.78 screens/frame
   73 D1:AC4F -  -  -  -  
   74 D1:AC4F -  -  -  -  
   75 D1:AC4F -  -  -  -  ;for 60% of screen with fg sprites in 1 frame
   76 D1:AC4F -  -  -  -  ;.6 = .78*fast + .44*(1-fast)
   77 D1:AC4F -  -  -  -  ;.47 = FAST
   78 D1:AC4F -  -  -  -  
   79 D1:AC4F -  -  -  -  ;50% fast sprites, 50% slow sprites
   80 D1:AC4F -  -  -  -  
   81 D1:AC4F -  -  -  -  
   82 D1:AC4F -  -  -  -  
   83 D1:AC4F -  -  -  -  
   84 D1:AC4F -  -  -  -  
   85 D1:AC4F -  -  -  -  
   86 D1:AC4F -  -  -  -  
   87 D1:AC4F -  -  -  -  
   88 D1:AC4F -  -  -  -  
Listing for file "ascent.asm"
  594 D1:AC4F -  -  -  -  #include "drawBGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawBGSprite.txt"
    1 D1:AC4F -  -  -  -  
    2 D1:AC4F -  -  -  -  
    3 D1:AC4F -  -  -  -  BGMaxSpriteHeight .equ 120
    4 D1:AC4F -  -  -  -  
    5 D1:AC4F -  -  -  -  
    6 D1:AC4F -  -  -  -  draw_bg:; function for drawing background buffer to the draw buffer, clearing the frame for fg sprites to be drawn over 
    7 D1:AC4F CD 83 AC D1 	call move_bg
    8 D1:AC53 21 00 2C D5 	ld hl,$d52c00;BG_buffer_end
    9 D1:AC57 ED 4B EF AB 
              D1 -  -  -  	ld bc,(BG_draw_buffer)
   10 D1:AC5C 37 -  -  -  	scf 
   11 D1:AC5D 3F -  -  -  	ccf 
   12 D1:AC5E ED 42 -  -  	sbc hl,bc ;get number of bytes from the loop point in the buffer to end of the buffer 
   13 D1:AC60 E5 -  -  -  	push hl 
   14 D1:AC61 C1 -  -  -  	pop bc	;put into bc for ldir 
   15 D1:AC62 2A EF AB D1 	ld hl,(BG_draw_buffer)
   16 D1:AC66 ED 5B EC AB 
              D1 -  -  -  	ld de,(draw_buffer)
   17 D1:AC6B ED B0 -  -  	ldir
   18 D1:AC6D 2A EF AB D1 	ld hl,(BG_draw_buffer) ;loop point in buffer
   19 D1:AC71 01 00 96 D4 	ld bc,BG_buffer ;start of buffer
   20 D1:AC75 37 -  -  -  	scf 
   21 D1:AC76 3F -  -  -  	ccf 
   22 D1:AC77 ED 42 -  -  	sbc hl,bc ;number of bytes from start to loop point 
   23 D1:AC79 C8 -  -  -  	ret z ;if bg buffer line is at top of buffer, no second ldir
   24 D1:AC7A E5 -  -  -  	push hl 
   25 D1:AC7B C1 -  -  -  	pop bc
   26 D1:AC7C 21 00 96 D4 	ld hl,BG_buffer 
   27 D1:AC80 ED B0 -  -  	ldir 
   28 D1:AC82 C9 -  -  -  	ret 
   29 D1:AC83 -  -  -  -  	
   30 D1:AC83 -  -  -  -  	
   31 D1:AC83 -  -  -  -  ;function for moving the backgrond buffer. checks if camera has moved since the buffer was last updated.
   32 D1:AC83 -  -  -  -  ;if so will draw new lines of the bg buffer to move it up or down until it is in the correct position
   33 D1:AC83 -  -  -  -  move_bg:
   34 D1:AC83 2A E6 AB D1 	ld hl,(cam_pos);load cam pos 
   35 D1:AC87 -  -  -  -  	;call write_hl_to_ram
   36 D1:AC87 CB 3C -  -  	srl h
   37 D1:AC89 CB 1D -  -  	rr l
   38 D1:AC8B CB 3C -  -  	srl h
   39 D1:AC8D CB 1D -  -  	rr l
   40 D1:AC8F CB 3C -  -  	srl h
   41 D1:AC91 CB 1D -  -  	rr l	;div by 8 to get location of BG layer
   42 D1:AC93 -  -  -  -  	;hl holds bg cam pos, lowest visible line of bg layer 
   43 D1:AC93 ED 4B E9 AB 
              D1 -  -  -  	ld bc,(bg_cam_pos);previous BG cam location 
   44 D1:AC98 37 -  -  -  	scf
   45 D1:AC99 3F -  -  -  	ccf
   46 D1:AC9A ED 42 -  -  	sbc hl,bc ;compare to the updated location
   47 D1:AC9C C8 -  -  -  	ret z ;if 0, the bg buffer does not need to be moved 
   48 D1:AC9D DA A9 AC D1 	jp c,move_bg_down ;if previous cam pos id above current pos, screen has moved down, go to move bg down 1 line
   49 D1:ACA1 CD F8 AC D1 	call inc_bg ;otherwise, screen has moved up, need to move bg up 1 line
   50 D1:ACA5 C3 83 AC D1 	jp move_bg ;repeat until bg is in correct pos
   51 D1:ACA9 -  -  -  -  move_bg_down:
   52 D1:ACA9 CD B1 AC D1 	call dec_bg
   53 D1:ACAD C3 83 AC D1 	jp move_bg ;repeat until bg is in correct pos
   54 D1:ACB1 -  -  -  -  
   55 D1:ACB1 -  -  -  -  
   56 D1:ACB1 -  -  -  -  dec_bg:;move bg cam down 1px 
   57 D1:ACB1 -  -  -  -  
   58 D1:ACB1 -  -  -  -  	
   59 D1:ACB1 -  -  -  -  	;Testibng
   60 D1:ACB1 -  -  -  -  	;ld a,$AD
   61 D1:ACB1 -  -  -  -  	;call write_a_to_ram
   62 D1:ACB1 -  -  -  -  	
   63 D1:ACB1 -  -  -  -  
   64 D1:ACB1 -  -  -  -  	;write on draw buffer line 
   65 D1:ACB1 2A EF AB D1 	ld hl,(BG_draw_buffer) ;topmost line of bg buffer will be overwritten with new bottom line 
   66 D1:ACB5 22 08 AE D1 	ld (dbgl_vram_line_start),hl 
   67 D1:ACB9 -  -  -  -  	
   68 D1:ACB9 2A E9 AB D1 	ld hl,(bg_cam_pos)
   69 D1:ACBD 2B -  -  -  	dec hl ;dec bg cam pos by 1 
   70 D1:ACBE 22 E9 AB D1 	ld (bg_cam_pos),hl 
   71 D1:ACC2 -  -  -  -  	
   72 D1:ACC2 01 00 00 00 	ld bc,0 ;clear bc reg
   73 D1:ACC6 4C -  -  -  	ld c,h;bottom y value msb 
   74 D1:ACC7 7D -  -  -  	ld a,l ;bottom y value lsb 
   75 D1:ACC8 21 00 C9 D1 	ld hl,BG_Data_frame_table
   76 D1:ACCC 0C -  -  -  	inc c 
   77 D1:ACCD 09 -  -  -  	add hl,bc 
   78 D1:ACCE 09 -  -  -  	add hl,bc 
   79 D1:ACCF 09 -  -  -  	add hl,bc ;add 3*frame number to get to correct frame pointer
   80 D1:ACD0 ED 27 -  -  	ld hl,(hl) ;hl now points to bg frame data 
   81 D1:ACD2 CD 9A AD D1 	call draw_bg_line
   82 D1:ACD6 -  -  -  -  	
   83 D1:ACD6 -  -  -  -  
   84 D1:ACD6 -  -  -  -  	;move buffer pos
   85 D1:ACD6 2A EF AB D1 	ld hl,(BG_draw_buffer)
   86 D1:ACDA 01 60 2B D5 	ld bc,$d52b60;BG_buffer_end, start of last line of vram buffer 
   87 D1:ACDE 37 -  -  -  	scf 
   88 D1:ACDF 3F -  -  -  	ccf 
   89 D1:ACE0 ED 42 -  -  	sbc hl,bc ;compare to current line 
   90 D1:ACE2 2A EF AB D1 	ld hl,(BG_draw_buffer)
   91 D1:ACE6 C2 EE AC D1 	jp nz,dec_bg_bottom_skip
   92 D1:ACEA 21 60 95 D4 	ld hl,$d49560;1 row above top of bg buffer 
   93 D1:ACEE -  -  -  -  dec_bg_bottom_skip:
   94 D1:ACEE 01 A0 00 00 	ld bc,160 
   95 D1:ACF2 09 -  -  -  	add hl,bc
   96 D1:ACF3 22 EF AB D1 	ld (BG_draw_buffer),hl 
   97 D1:ACF7 C9 -  -  -  	ret
   98 D1:ACF8 -  -  -  -  
   99 D1:ACF8 -  -  -  -  
  100 D1:ACF8 -  -  -  -  inc_bg:;move cam up 
  101 D1:ACF8 -  -  -  -  
  102 D1:ACF8 -  -  -  -  	
  103 D1:ACF8 -  -  -  -  	;Testibng
  104 D1:ACF8 -  -  -  -  	;ld a,$00
  105 D1:ACF8 -  -  -  -  	;call write_a_to_ram
  106 D1:ACF8 -  -  -  -  	;call prgmpause
  107 D1:ACF8 -  -  -  -  
  108 D1:ACF8 2A EF AB D1 	ld hl,(BG_draw_buffer)
  109 D1:ACFC 01 00 96 D4 	ld bc,BG_buffer
  110 D1:AD00 37 -  -  -  	scf 
  111 D1:AD01 3F -  -  -  	ccf 
  112 D1:AD02 ED 42 -  -  	sbc hl,bc ;compare current drawing line to top of bg buffer 
  113 D1:AD04 2A EF AB D1 	ld hl,(BG_draw_buffer)
  114 D1:AD08 C2 10 AD D1 	jp nz,inc_bg_top_skip ;if they are not equal, continue
  115 D1:AD0C 21 00 2C D5 	ld hl,$d52c00;otherwise need to wrap back to bottom of buffer, set hl to 1 below bottom of bg buffer 
  116 D1:AD10 -  -  -  -  inc_bg_top_skip:
  117 D1:AD10 01 A0 00 00 	ld bc,160 
  118 D1:AD14 37 -  -  -  	scf
  119 D1:AD15 3F -  -  -  	ccf 
  120 D1:AD16 ED 42 -  -  	sbc hl,bc ;move up line, hl now points to line drawing location in vram 
  121 D1:AD18 22 EF AB D1 	ld (BG_draw_buffer),hl 
  122 D1:AD1C 22 08 AE D1 	ld (dbgl_vram_line_start),hl 
  123 D1:AD20 2A E9 AB D1 	ld hl,(bg_cam_pos)
  124 D1:AD24 23 -  -  -  	inc hl 
  125 D1:AD25 22 E9 AB D1 	ld (bg_cam_pos),hl ;incremnet cam pos 
  126 D1:AD29 -  -  -  -  	;call write_hl_to_ram
  127 D1:AD29 01 EF 00 00 	ld bc,239
  128 D1:AD2D 09 -  -  -  	add hl,bc ;gets uppermost visible line y value in bg layer
  129 D1:AD2E 4C -  -  -  	ld c,h;cam pos msb 
  130 D1:AD2F 7D -  -  -  	ld a,l ;a holds line number in target frame 
  131 D1:AD30 21 00 C9 D1 	ld hl,BG_Data_frame_table
  132 D1:AD34 0C -  -  -  	inc c ;inc to get to upper frame 
  133 D1:AD35 09 -  -  -  	add hl,bc 
  134 D1:AD36 09 -  -  -  	add hl,bc 
  135 D1:AD37 09 -  -  -  	add hl,bc 
  136 D1:AD38 ED 27 -  -  	ld hl,(hl)
  137 D1:AD3A CD 9A AD D1 	call draw_bg_line
  138 D1:AD3E C9 -  -  -  	ret
  139 D1:AD3F -  -  -  -  	
  140 D1:AD3F -  -  -  -  
  141 D1:AD3F -  -  -  -  
  142 D1:AD3F -  -  -  -  
  143 D1:AD3F -  -  -  -  
  144 D1:AD3F -  -  -  -  setup_bg: ;Draws entire BG buffer when loading game 
  145 D1:AD3F 2A E6 AB D1 	ld hl,(cam_pos)
  146 D1:AD43 CB 3C -  -  	srl h
  147 D1:AD45 CB 1D -  -  	rr l
  148 D1:AD47 CB 3C -  -  	srl h
  149 D1:AD49 CB 1D -  -  	rr l
  150 D1:AD4B CB 3C -  -  	srl h
  151 D1:AD4D CB 1D -  -  	rr l ;div by 8
  152 D1:AD4F -  -  -  -  	;hl holds bg cam pos 
  153 D1:AD4F 22 E9 AB D1 	ld (bg_cam_pos),hl
  154 D1:AD53 -  -  -  -  	
  155 D1:AD53 01 EF 00 00 	ld bc,239
  156 D1:AD57 09 -  -  -  	add hl,bc;hl holds y position of uppermost visible line in bg layer 
  157 D1:AD58 -  -  -  -  	
  158 D1:AD58 23 -  -  -  	inc hl;to be dec in loop
  159 D1:AD59 E5 -  -  -  	push hl ;save uppermost line y val
  160 D1:AD5A 21 00 96 D4 	ld hl,BG_buffer ;start of bg drawing buffer 
  161 D1:AD5E 22 EF AB D1 	ld (BG_draw_buffer),hl ;set current bg line drawing location 
  162 D1:AD62 E5 -  -  -  	push hl 
  163 D1:AD63 -  -  -  -  	
  164 D1:AD63 3E F0 -  -  	ld a,240 ;num loops
  165 D1:AD65 32 8D AD D1 	ld (setup_bg_loop_count),a
  166 D1:AD69 -  -  -  -  setup_bg_loop:
  167 D1:AD69 -  -  -  -  
  168 D1:AD69 E1 -  -  -  	pop hl;vram draw pos, next line of bg drawn here 
  169 D1:AD6A 22 08 AE D1 	ld (dbgl_vram_line_start),hl ;set drawing pos 
  170 D1:AD6E 01 A0 00 00 	ld bc,160
  171 D1:AD72 09 -  -  -  	add hl,bc 
  172 D1:AD73 EB -  -  -  	ex de,hl ;put next vram pos in de 
  173 D1:AD74 E1 -  -  -  	pop hl;uppermost line y val
  174 D1:AD75 2B -  -  -  	dec hl ;dec line y value (move to next lowest line)
  175 D1:AD76 E5 -  -  -  	push hl;push uppermost line y val
  176 D1:AD77 D5 -  -  -  	push de ;push vram pos 
  177 D1:AD78 01 00 00 00 	ld bc,0
  178 D1:AD7C 4C -  -  -  	ld c,h;cam pos msb 
  179 D1:AD7D 7D -  -  -  	ld a,l ;a holds line number in current frame 
  180 D1:AD7E 21 00 C9 D1 	ld hl,BG_Data_frame_table
  181 D1:AD82 0C -  -  -  	inc c ;add 1 to get to upper frame
  182 D1:AD83 09 -  -  -  	add hl,bc 
  183 D1:AD84 09 -  -  -  	add hl,bc 
  184 D1:AD85 09 -  -  -  	add hl,bc 
  185 D1:AD86 ED 27 -  -  	ld hl,(hl) ;hl now points to upper frame data 
  186 D1:AD88 CD 9A AD D1 	call draw_bg_line ;hl pts to upper frame data, a = line num in target frame
  187 D1:AD8C -  -  -  -  	
  188 D1:AD8C -  -  -  -  setup_bg_loop_count .equ $ + 1
  189 D1:AD8C 3E 00 -  -  	ld a,0
  190 D1:AD8E 3D -  -  -  	dec a ;dec loop counter
  191 D1:AD8F 32 8D AD D1 	ld (setup_bg_loop_count),a
  192 D1:AD93 C2 69 AD D1 	jp nz,setup_bg_loop 
  193 D1:AD97 E1 -  -  -  	pop hl ;pop vram pos 
  194 D1:AD98 E1 -  -  -  	pop hl ;pop current line number 
  195 D1:AD99 C9 -  -  -  	ret 
  196 D1:AD9A -  -  -  -  
  197 D1:AD9A -  -  -  -  
  198 D1:AD9A -  -  -  -  
  199 D1:AD9A -  -  -  -  
  200 D1:AD9A -  -  -  -  
  201 D1:AD9A -  -  -  -  
  202 D1:AD9A -  -  -  -  ;hl = upper data frame, a = line number in target frame
  203 D1:AD9A -  -  -  -  ;for drawing BG, only 1 line is drawn at a time.
  204 D1:AD9A -  -  -  -  ;therefore only check sprites in the above frame that may extend downwards, 
  205 D1:AD9A -  -  -  -  ;and the sprites in the target frame which contains the y position of the line being drawn
  206 D1:AD9A -  -  -  -  ;set dbgl_vram_line_start before calling 
  207 D1:AD9A -  -  -  -  draw_bg_line:
  208 D1:AD9A -  -  -  -  	
  209 D1:AD9A -  -  -  -  	
  210 D1:AD9A 32 E6 AD D1 	ld (dbgl_line_num),a ;write line num to required positions 
  211 D1:AD9E 32 CA B5 D1 	ld (dfgs_cam_height_1), a ;Used to check if upper frame should be considered
  212 D1:ADA2 ED 44 -  -  	neg 
  213 D1:ADA4 32 D2 AD D1 	ld (dbgl_lines_to_top_of_target_frame),a 
  214 D1:ADA8 -  -  -  -  	
  215 D1:ADA8 E5 -  -  -  	push hl ;upper frame sprite table pointer 
  216 D1:ADA9 3E FF -  -  	ld a,$FF ;Set all of line to FF to clear it with color 16
  217 D1:ADAB 01 A0 00 00 	ld bc,160
  218 D1:ADAF 2A 08 AE D1 	ld hl,(dbgl_vram_line_start) ;Drawing address of line 
  219 D1:ADB3 CD E0 10 02 	call _MemSet ;Clear all of line 
  220 D1:ADB7 E1 -  -  -  	pop hl ;return upper frame ptr 
  221 D1:ADB8 -  -  -  -  
  222 D1:ADB8 -  -  -  -  	
  223 D1:ADB8 3E DA -  -  	ld a,%11011010;jp c
  224 D1:ADBA 32 FC B5 D1 	ld (dfgs_bg_mode_1),a 
  225 D1:ADBE 32 60 B6 D1 	ld (dfgs_bg_mode_2),a 
  226 D1:ADC2 -  -  -  -  	
  227 D1:ADC2 3E FF -  -  	ld a,255;
  228 D1:ADC4 32 F9 B6 D1 	ld (dfgs_cam_height_3),a ;Will skip drawing of lower frame
  229 D1:ADC8 32 13 B7 D1 	ld (dfgs_cam_height_4),a
  230 D1:ADCC -  -  -  -  	
  231 D1:ADCC -  -  -  -  
  232 D1:ADCC -  -  -  -  	
  233 D1:ADCC CD B1 B5 D1 	call draw_fg_sprites
  234 D1:ADD0 -  -  -  -  	
  235 D1:ADD0 C9 -  -  -  	ret
  236 D1:ADD1 -  -  -  -  	
  237 D1:ADD1 -  -  -  -  
  238 D1:ADD1 -  -  -  -  
  239 D1:ADD1 -  -  -  -  	;a = y value of sprite in upper frame, hl pts to height
  240 D1:ADD1 -  -  -  -  dbgl_draw_upper_sprite:	
  241 D1:ADD1 -  -  -  -  
  242 D1:ADD1 -  -  -  -  	;push af 
  243 D1:ADD1 -  -  -  -  	;call write_a_to_ram
  244 D1:ADD1 -  -  -  -  	;ld a,(hl)
  245 D1:ADD1 -  -  -  -  	;call write_a_to_ram
  246 D1:ADD1 -  -  -  -  	;ld a,$BC
  247 D1:ADD1 -  -  -  -  	;call write_a_to_ram
  248 D1:ADD1 -  -  -  -  	;pop af
  249 D1:ADD1 -  -  -  -  	
  250 D1:ADD1 -  -  -  -  	;call write_hl_to_ram
  251 D1:ADD1 -  -  -  -  	
  252 D1:ADD1 -  -  -  -  	;call prgmpause
  253 D1:ADD1 -  -  -  -  
  254 D1:ADD1 -  -  -  -  dbgl_lines_to_top_of_target_frame .equ $ + 1
  255 D1:ADD1 C6 00 -  -  	add a,0 ;a holds line number in sprite to draw (0 indexed)
  256 D1:ADD3 -  -  -  -  	;call write_a_to_ram
  257 D1:ADD3 DA E1 AD D1 	jp c,dbgl_upper_skip_sprite ; if line to draw >255, skip (happens if sprite has large y val)
  258 D1:ADD7 BE -  -  -  	cp (hl) ;compare to sprite height 
  259 D1:ADD8 D2 E1 AD D1 	jp nc, dbgl_upper_skip_sprite; Skip drawing, sprite does not extend to target line 
  260 D1:ADDC -  -  -  -  	;Sprite is to be drawn, a holds line number 
  261 D1:ADDC CD F9 AD D1 	call dbgl_setup_and_draw ;draw sprite line 
  262 D1:ADE0 -  -  -  -  	;hl pts to next sprite y
  263 D1:ADE0 C9 -  -  -  	ret
  264 D1:ADE1 -  -  -  -  	
  265 D1:ADE1 -  -  -  -  dbgl_upper_skip_sprite:
  266 D1:ADE1 23 -  -  -  	inc hl ;to x 
  267 D1:ADE2 23 -  -  -  	inc hl ;to index 
  268 D1:ADE3 23 -  -  -  	inc hl ;to next y
  269 D1:ADE4 C9 -  -  -  	ret
  270 D1:ADE5 -  -  -  -  	
  271 D1:ADE5 -  -  -  -  
  272 D1:ADE5 -  -  -  -  	;a holds y in frame, (hl) = height
  273 D1:ADE5 -  -  -  -  dbgl_draw_lower_sprite:
  274 D1:ADE5 -  -  -  -  	
  275 D1:ADE5 -  -  -  -  	;call write_a_to_ram
  276 D1:ADE5 -  -  -  -  	;call prgmpause
  277 D1:ADE5 -  -  -  -  	;call write_hl_to_ram
  278 D1:ADE5 -  -  -  -  	
  279 D1:ADE5 -  -  -  -  	;call prgmpause
  280 D1:ADE5 -  -  -  -  	
  281 D1:ADE5 -  -  -  -  dbgl_line_num .equ $ + 1
  282 D1:ADE5 D6 00 -  -  	sub 0;subtract line num 
  283 D1:ADE7 DA F5 AD D1 	jp c, dbgl_lower_skip_sprite ;if carry, line number was above sprite y pos 
  284 D1:ADEB -  -  -  -  	;if a is 0, we draw first line of sprite, if a is 1, draw second... a holds line num of sprite to draw (0 indexed) 
  285 D1:ADEB BE -  -  -  	cp (hl) ;compare to sprite height
  286 D1:ADEC D2 F5 AD D1 	jp nc, dbgl_lower_skip_sprite; Skip drawing, sprite does not extend to target line 
  287 D1:ADF0 -  -  -  -  	
  288 D1:ADF0 -  -  -  -  	;Sprite is to be drawn, a holds line number 
  289 D1:ADF0 CD F9 AD D1 	call dbgl_setup_and_draw ;draw sprite line 
  290 D1:ADF4 -  -  -  -  	;hl pts to next y
  291 D1:ADF4 C9 -  -  -  	ret
  292 D1:ADF5 -  -  -  -  	
  293 D1:ADF5 -  -  -  -  dbgl_lower_skip_sprite:
  294 D1:ADF5 -  -  -  -  
  295 D1:ADF5 -  -  -  -  	;ld a,$AA 
  296 D1:ADF5 -  -  -  -  	;call write_a_to_ram
  297 D1:ADF5 -  -  -  -  	;call prgmpause
  298 D1:ADF5 -  -  -  -  	
  299 D1:ADF5 23 -  -  -  	inc hl ;to x 
  300 D1:ADF6 23 -  -  -  	inc hl ;to index 
  301 D1:ADF7 23 -  -  -  	inc hl ;to y
  302 D1:ADF8 C9 -  -  -  	ret
  303 D1:ADF9 -  -  -  -  
  304 D1:ADF9 -  -  -  -  
  305 D1:ADF9 -  -  -  -  
  306 D1:ADF9 -  -  -  -  
  307 D1:ADF9 -  -  -  -  ;a holds 0 indexed line num of sprite, (hl) = height ,bc,de = 0
  308 D1:ADF9 -  -  -  -  ;returns hl holds next y val
  309 D1:ADF9 -  -  -  -  dbgl_setup_and_draw:
  310 D1:ADF9 -  -  -  -  
  311 D1:ADF9 -  -  -  -  	;push af 
  312 D1:ADF9 -  -  -  -  	;ld a,$AB 
  313 D1:ADF9 -  -  -  -  	;call write_a_to_ram
  314 D1:ADF9 -  -  -  -  	;call write_hl_to_ram
  315 D1:ADF9 -  -  -  -  	;pop af 
  316 D1:ADF9 -  -  -  -  	;call write_a_to_ram
  317 D1:ADF9 -  -  -  -  	
  318 D1:ADF9 -  -  -  -  	;call prgmpause
  319 D1:ADF9 -  -  -  -  
  320 D1:ADF9 01 00 00 00 	ld bc,0
  321 D1:ADFD 11 00 00 00 	ld de,0
  322 D1:AE01 -  -  -  -  	
  323 D1:AE01 23 -  -  -  	inc hl;to x pos
  324 D1:AE02 5E -  -  -  	ld e,(hl);e holds x pos 
  325 D1:AE03 23 -  -  -  	inc hl 
  326 D1:AE04 4E -  -  -  	ld c,(hl);sprite index 
  327 D1:AE05 23 -  -  -  	inc hl ;next y
  328 D1:AE06 E5 -  -  -  	push hl ;save location in data 
  329 D1:AE07 -  -  -  -  dbgl_vram_line_start .equ $ + 1	
  330 D1:AE07 21 00 00 00 	ld hl,0
  331 D1:AE0B 19 -  -  -  	add hl,de;add x pos
  332 D1:AE0C -  -  -  -  dbgl_sg_x_origin .equ $ + 1
  333 D1:AE0C 1E 00 -  -  	ld e,0 
  334 D1:AE0E 19 -  -  -  	add hl,de;add x pos
  335 D1:AE0F -  -  -  -  	
  336 D1:AE0F EB -  -  -  	ex de,hl;put vram pos into de 
  337 D1:AE10 -  -  -  -  	
  338 D1:AE10 26 A0 -  -  	ld h,160
  339 D1:AE12 6F -  -  -  	ld l,a ;number of lines to subtract 
  340 D1:AE13 ED 6C -  -  	mlt hl;bytes to subtract from vram
  341 D1:AE15 37 -  -  -  	scf 
  342 D1:AE16 3F -  -  -  	ccf
  343 D1:AE17 EB -  -  -  	ex de,hl;hl holds initial vram pos, de is lines to subtract  
  344 D1:AE18 ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  345 D1:AE1A EB -  -  -  	ex de,hl;put in de
  346 D1:AE1B -  -  -  -  	
  347 D1:AE1B -  -  -  -  dbgl_sprite_pointers .equ $ + 1
  348 D1:AE1B 21 00 00 00 	ld hl,0
  349 D1:AE1F 09 -  -  -  	add hl,bc
  350 D1:AE20 09 -  -  -  	add hl,bc 
  351 D1:AE21 09 -  -  -  	add hl,bc ;hl points to sprite data pointer 
  352 D1:AE22 ED 27 -  -  	ld hl,(hl);hl holds sprite data
  353 D1:AE24 -  -  -  -  
  354 D1:AE24 -  -  -  -  
  355 D1:AE24 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  356 D1:AE26 CA 32 AE D1 	jp z,dbgl_fast_sprite ;if even address, fast sprite 
  357 D1:AE2A CD 04 AF D1 	call draw_slow_sprite_single_line
  358 D1:AE2E C3 36 AE D1 	jp dbgl_slow_sprite
  359 D1:AE32 -  -  -  -  dbgl_fast_sprite:
  360 D1:AE32 CD 86 AE D1 	call draw_fast_sprite_single_line
  361 D1:AE36 -  -  -  -  dbgl_slow_sprite:
  362 D1:AE36 -  -  -  -  	
  363 D1:AE36 11 00 00 00 	ld de,0;clear de 
  364 D1:AE3A 01 00 00 00 	ld bc,0
  365 D1:AE3E E1 -  -  -  	pop hl;back to data
  366 D1:AE3F C9 -  -  -  	ret
  367 D1:AE40 -  -  -  -  	
  368 D1:AE40 -  -  -  -  
  369 D1:AE40 -  -  -  -  
  370 D1:AE40 -  -  -  -  
  371 D1:AE40 -  -  -  -  
  372 D1:AE40 -  -  -  -  
  373 D1:AE40 -  -  -  -  
  374 D1:AE40 -  -  -  -  
  375 D1:AE40 -  -  -  -  
  376 D1:AE40 -  -  -  -  
  377 D1:AE40 -  -  -  -  
  378 D1:AE40 -  -  -  -  
  379 D1:AE40 -  -  -  -  
  380 D1:AE40 -  -  -  -  
  381 D1:AE40 -  -  -  -  
  382 D1:AE40 -  -  -  -  
  383 D1:AE40 -  -  -  -  
  384 D1:AE40 -  -  -  -  
  385 D1:AE40 -  -  -  -  
Listing for file "ascent.asm"
  595 D1:AE40 -  -  -  -  #include "drawFGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFGSprite.txt"
    1 D1:AE40 -  -  -  -  
    2 D1:AE40 -  -  -  -  ;hl = data, a = lines to draw. returns a = num loops to draw, hl = 1 before first gap length
    3 D1:AE40 -  -  -  -  setup_sprite_bottom_cut:
    4 D1:AE40 1B -  -  -  	dec de
    5 D1:AE41 01 00 00 00 	ld bc,0 ;clear bc
    6 D1:AE45 4F -  -  -  	ld c,a;c = lines to draw
    7 D1:AE46 E5 -  -  -  	push hl ;save data 
    8 D1:AE47 09 -  -  -  	add hl,bc
    9 D1:AE48 7E -  -  -  	ld a,(hl);num loops to draw
   10 D1:AE49 E1 -  -  -  	pop hl ;return to start of data
   11 D1:AE4A 4E -  -  -  	ld c,(hl) ;height
   12 D1:AE4B 09 -  -  -  	add hl,bc ;hl now points to 1 before first gap length
   13 D1:AE4C C9 -  -  -  	ret 
   14 D1:AE4D -  -  -  -  
   15 D1:AE4D -  -  -  -  setup_sprite_top_cut:
   16 D1:AE4D 1B -  -  -  	dec de ;move to correct vram pos 
   17 D1:AE4E 01 00 00 00 	ld bc,0
   18 D1:AE52 4F -  -  -  	ld c,a ;lines to skip (1 indexed)
   19 D1:AE53 D5 -  -  -  	push de
   20 D1:AE54 11 00 00 00 	ld de,0
   21 D1:AE58 E5 -  -  -  	push hl
   22 D1:AE59 5E -  -  -  	ld e,(hl);height
   23 D1:AE5A 09 -  -  -  	add hl,bc;hl points to num skip loops 
   24 D1:AE5B 4E -  -  -  	ld c,(hl);c holds num skip loops
   25 D1:AE5C E1 -  -  -  	pop hl;start of data
   26 D1:AE5D 19 -  -  -  	add hl,de
   27 D1:AE5E 46 -  -  -  	ld b,(hl);total number of loops
   28 D1:AE5F 23 -  -  -  	inc hl;hl is pixel data
   29 D1:AE60 D1 -  -  -  	pop de;back to vram
   30 D1:AE61 79 -  -  -  	ld a,c;loops to skip
   31 D1:AE62 C9 -  -  -  	ret 
   32 D1:AE63 -  -  -  -  
   33 D1:AE63 -  -  -  -  ;hl = data, a = line number to draw. returns a = c = number of loops to skip, b = loops to skip + loops to draw. HL = gap length  
   34 D1:AE63 -  -  -  -  setup_sprite_single_line: ;sets up for single line drawing mode 
   35 D1:AE63 1B -  -  -  	dec de
   36 D1:AE64 01 00 00 00 	ld bc,0
   37 D1:AE68 4F -  -  -  	ld c,a ;line to draw
   38 D1:AE69 D5 -  -  -  	push de ;save vram 
   39 D1:AE6A 11 00 00 00 	ld de,0
   40 D1:AE6E E5 -  -  -  	push hl
   41 D1:AE6F 5E -  -  -  	ld e,(hl);height
   42 D1:AE70 09 -  -  -  	add hl,bc;hl points to num skip loops 
   43 D1:AE71 4E -  -  -  	ld c,(hl);c holds num skip loops
   44 D1:AE72 23 -  -  -  	inc hl 
   45 D1:AE73 46 -  -  -  	ld b,(hl);b holds num loops after drawn line 
   46 D1:AE74 E1 -  -  -  	pop hl;start of data
   47 D1:AE75 19 -  -  -  	add hl,de
   48 D1:AE76 23 -  -  -  	inc hl;hl is pixel data points to gap length 
   49 D1:AE77 D1 -  -  -  	pop de;back to vram
   50 D1:AE78 79 -  -  -  	ld a,c;loops to skip
   51 D1:AE79 C9 -  -  -  	ret 
   52 D1:AE7A -  -  -  -  
   53 D1:AE7A -  -  -  -  
   54 D1:AE7A -  -  -  -  
   55 D1:AE7A -  -  -  -  draw_fast_sprite_bottom_cut_from_line:
   56 D1:AE7A 3C -  -  -  	inc a 
   57 D1:AE7B -  -  -  -  ;de = vram , hl = data, a = number lines to draw
   58 D1:AE7B -  -  -  -  draw_fast_sprite_bottom_cut:
   59 D1:AE7B CD 40 AE D1 	call setup_sprite_bottom_cut
   60 D1:AE7F 23 -  -  -  	inc hl ;hl points to gap length 
   61 D1:AE80 4E -  -  -  	ld c,(hl);load alpha length
   62 D1:AE81 EB -  -  -  	ex de,hl;hl is vram, de is data
   63 D1:AE82 C3 C9 AE D1 	jp dfgs_loop
   64 D1:AE86 -  -  -  -  
   65 D1:AE86 -  -  -  -  
   66 D1:AE86 -  -  -  -  ;de = vram , hl = data, a = line to draw (starting from 0)
   67 D1:AE86 -  -  -  -  draw_fast_sprite_single_line:
   68 D1:AE86 B7 -  -  -  	or a 
   69 D1:AE87 CA 7A AE D1 	jp z,draw_fast_sprite_bottom_cut_from_line ; if a is 0, same as drawing bottom cut
   70 D1:AE8B -  -  -  -  	;we know a is not 0 here 
   71 D1:AE8B CD 63 AE D1 	call setup_sprite_single_line
   72 D1:AE8F -  -  -  -  	
   73 D1:AE8F C5 -  -  -  	push bc;save total and skipped loops
   74 D1:AE90 01 00 00 00 	ld bc,0
   75 D1:AE94 -  -  -  -  	
   76 D1:AE94 C3 A1 AE D1 	jp draw_fast_sprite_top_loop 
   77 D1:AE98 -  -  -  -  
   78 D1:AE98 -  -  -  -  
   79 D1:AE98 -  -  -  -  
   80 D1:AE98 -  -  -  -  ;de = vram , hl = data, a = top lines to skip (1 indexed)
   81 D1:AE98 -  -  -  -  draw_fast_sprite_top_cut:
   82 D1:AE98 CD 4D AE D1 	call setup_sprite_top_cut
   83 D1:AE9C C5 -  -  -  	push bc ;save total and skipped loops 
   84 D1:AE9D 01 00 00 00 	ld bc,0 
   85 D1:AEA1 -  -  -  -  	
   86 D1:AEA1 -  -  -  -  draw_fast_sprite_top_loop:; need to follow through gap and drawn lengths to find start of drawing
   87 D1:AEA1 4E -  -  -  	ld c,(hl);load with first gap length	
   88 D1:AEA2 EB -  -  -  	ex de,hl;hl is vram
   89 D1:AEA3 09 -  -  -  	add hl,bc
   90 D1:AEA4 EB -  -  -  	ex de,hl;hl is data
   91 D1:AEA5 23 -  -  -  	inc hl
   92 D1:AEA6 4E -  -  -  	ld c,(hl);ldir length
   93 D1:AEA7 09 -  -  -  	add hl,bc;add ldir length
   94 D1:AEA8 EB -  -  -  	ex de,hl;hl is vram
   95 D1:AEA9 09 -  -  -  	add hl,bc;add ldir length
   96 D1:AEAA 13 -  -  -  	inc de
   97 D1:AEAB EB -  -  -  	ex de,hl;hl is data
   98 D1:AEAC 3D -  -  -  	dec a
   99 D1:AEAD C2 A1 AE D1 	jp nz,draw_fast_sprite_top_loop
  100 D1:AEB1 -  -  -  -  	
  101 D1:AEB1 -  -  -  -  	
  102 D1:AEB1 C1 -  -  -  	pop bc ;b is total loops, c is skipped loops 
  103 D1:AEB2 78 -  -  -  	ld a,b
  104 D1:AEB3 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
  105 D1:AEB4 -  -  -  -  		
  106 D1:AEB4 01 00 00 00 	ld bc,0
  107 D1:AEB8 4E -  -  -  	ld c,(hl);load c with gap length
  108 D1:AEB9 EB -  -  -  	ex de,hl ;setup for loop 
  109 D1:AEBA C3 C9 AE D1 	jp dfgs_loop
  110 D1:AEBE -  -  -  -  
  111 D1:AEBE -  -  -  -  
  112 D1:AEBE -  -  -  -  ;de = vram , hl = data
  113 D1:AEBE -  -  -  -  draw_fast_sprite_full:
  114 D1:AEBE 1B -  -  -  	dec de
  115 D1:AEBF 01 00 00 00 	ld bc,0
  116 D1:AEC3 4E -  -  -  	ld c,(hl);height
  117 D1:AEC4 09 -  -  -  	add hl,bc
  118 D1:AEC5 7E -  -  -  	ld a,(hl);total loops
  119 D1:AEC6 23 -  -  -  	inc hl
  120 D1:AEC7 4E -  -  -  	ld c,(hl);first gap length
  121 D1:AEC8 EB -  -  -  	ex de,hl
  122 D1:AEC9 -  -  -  -  ;a = num loops, c = alphaLength,hl = vram
  123 D1:AEC9 -  -  -  -  dfgs_loop:;gap, colors
  124 D1:AEC9 09 -  -  -  	add hl,bc;add alpha length
  125 D1:AECA EB -  -  -  	ex de,hl;swap, hl is data, de is vram
  126 D1:AECB 23 -  -  -  	inc hl
  127 D1:AECC 4E -  -  -  	ld c,(hl);get ldir length
  128 D1:AECD 23 -  -  -  	inc hl
  129 D1:AECE ED B0 -  -  	ldir
  130 D1:AED0 4E -  -  -  	ld c,(hl);load c with next alpha length
  131 D1:AED1 EB -  -  -  	ex de,hl;swap, hl is vram
  132 D1:AED2 3D -  -  -  	dec a
  133 D1:AED3 C2 C9 AE D1 	jp nz,dfgs_loop
  134 D1:AED7 C9 -  -  -  	ret
  135 D1:AED8 -  -  -  -  	
  136 D1:AED8 -  -  -  -  	
  137 D1:AED8 -  -  -  -  	
  138 D1:AED8 -  -  -  -  	
  139 D1:AED8 -  -  -  -  
  140 D1:AED8 -  -  -  -  
  141 D1:AED8 -  -  -  -  ;hl = data, de = vram
  142 D1:AED8 -  -  -  -  draw_slow_sprite_full:
  143 D1:AED8 01 00 00 00 	ld bc,0
  144 D1:AEDC 4E -  -  -  	ld c,(hl);height
  145 D1:AEDD 09 -  -  -  	add hl,bc
  146 D1:AEDE 7E -  -  -  	ld a,(hl);num loops
  147 D1:AEDF 1B -  -  -  	dec de ;correct vram pos 
  148 D1:AEE0 D9 -  -  -  	exx;into shadow 
  149 D1:AEE1 47 -  -  -  	ld b,a ;number of loops
  150 D1:AEE2 -  -  -  -  	;hl = (gap length) -1 de = vram-1 b' = loops
  151 D1:AEE2 -  -  -  -  dsfgs_line_loop:
  152 D1:AEE2 D9 -  -  -  	exx;out of shadow
  153 D1:AEE3 23 -  -  -  	inc hl;gap length
  154 D1:AEE4 4E -  -  -  	ld c,(hl);gap length
  155 D1:AEE5 EB -  -  -  	ex de,hl;hl is vram
  156 D1:AEE6 09 -  -  -  	add hl,bc;add aplha gap
  157 D1:AEE7 EB -  -  -  	ex de,hl;hl is data
  158 D1:AEE8 23 -  -  -  	inc hl;hl points to single pix mask
  159 D1:AEE9 1A -  -  -  	ld a,(de);vram data
  160 D1:AEEA A6 -  -  -  	and (hl)
  161 D1:AEEB 23 -  -  -  	inc hl;pixel data
  162 D1:AEEC B6 -  -  -  	or (hl)
  163 D1:AEED 12 -  -  -  	ld (de),a
  164 D1:AEEE 23 -  -  -  	inc hl;ldir length
  165 D1:AEEF -  -  -  -  	
  166 D1:AEEF 13 -  -  -  	inc de;move to next pixel
  167 D1:AEF0 -  -  -  -  	
  168 D1:AEF0 7E -  -  -  	ld a,(hl);ldir length
  169 D1:AEF1 23 -  -  -  	inc hl;data
  170 D1:AEF2 4F -  -  -  	ld c,a
  171 D1:AEF3 B7 -  -  -  	or a
  172 D1:AEF4 CA FA AE D1 	jp z,dsfgs_ldir_skip
  173 D1:AEF8 ED B0 -  -  	ldir
  174 D1:AEFA -  -  -  -  dsfgs_ldir_skip:
  175 D1:AEFA 1A -  -  -  	ld a,(de);vram data
  176 D1:AEFB A6 -  -  -  	and (hl)
  177 D1:AEFC 23 -  -  -  	inc hl;pixel data
  178 D1:AEFD B6 -  -  -  	or (hl)
  179 D1:AEFE 12 -  -  -  	ld (de),a
  180 D1:AEFF -  -  -  -  	
  181 D1:AEFF D9 -  -  -  	exx ;into shadow
  182 D1:AF00 10 E0 -  -  	djnz dsfgs_line_loop
  183 D1:AF02 D9 -  -  -  	exx ;out 
  184 D1:AF03 C9 -  -  -  	ret
  185 D1:AF04 -  -  -  -  
  186 D1:AF04 -  -  -  -  
  187 D1:AF04 -  -  -  -  
  188 D1:AF04 -  -  -  -  ;de = vram , hl = data, a = line to draw (from 0)
  189 D1:AF04 -  -  -  -  draw_slow_sprite_single_line:
  190 D1:AF04 -  -  -  -  
  191 D1:AF04 B7 -  -  -  	or a 
  192 D1:AF05 CA 42 AF D1 	jp z,draw_slow_sprite_bottom_cut_from_line ; if a is 0, same as drawing bottom cut
  193 D1:AF09 -  -  -  -  	;we know a is not 0 here
  194 D1:AF09 CD 63 AE D1 	call setup_sprite_single_line
  195 D1:AF0D C5 -  -  -  	push bc;save total and skipped loops
  196 D1:AF0E 01 00 00 00 	ld bc,0
  197 D1:AF12 -  -  -  -  	
  198 D1:AF12 C3 1F AF D1 	jp slow_sprite_data_traverse 
  199 D1:AF16 -  -  -  -  	
  200 D1:AF16 -  -  -  -  
  201 D1:AF16 -  -  -  -  ;de = vram , hl = data, a = top lines to skip (from 1)
  202 D1:AF16 -  -  -  -  draw_slow_sprite_top_cut:
  203 D1:AF16 CD 4D AE D1 	call setup_sprite_top_cut
  204 D1:AF1A C5 -  -  -  	push bc;save total and skipped loops
  205 D1:AF1B 01 00 00 00 	ld bc,0
  206 D1:AF1F -  -  -  -  ;hl = data start, a = num loops to skip, bc = 0
  207 D1:AF1F -  -  -  -  slow_sprite_data_traverse:
  208 D1:AF1F 4E -  -  -  	ld c,(hl);gap length
  209 D1:AF20 EB -  -  -  	ex de,hl;hl is vram
  210 D1:AF21 09 -  -  -  	add hl,bc
  211 D1:AF22 EB -  -  -  	ex de,hl
  212 D1:AF23 -  -  -  -  	
  213 D1:AF23 23 -  -  -  	inc hl ;inc past leading pixels
  214 D1:AF24 23 -  -  -  	inc hl
  215 D1:AF25 23 -  -  -  	inc hl;ldir length
  216 D1:AF26 4E -  -  -  	ld c,(hl)
  217 D1:AF27 09 -  -  -  	add hl,bc
  218 D1:AF28 EB -  -  -  	ex de,hl
  219 D1:AF29 09 -  -  -  	add hl,bc
  220 D1:AF2A EB -  -  -  	ex de,hl
  221 D1:AF2B 13 -  -  -  	inc de;inc for leading pix 
  222 D1:AF2C 23 -  -  -  	inc hl;inc past ending pixels
  223 D1:AF2D 23 -  -  -  	inc hl
  224 D1:AF2E 23 -  -  -  	inc hl;gap length
  225 D1:AF2F -  -  -  -  	
  226 D1:AF2F 3D -  -  -  	dec a 
  227 D1:AF30 C2 1F AF D1 	jp nz,slow_sprite_data_traverse
  228 D1:AF34 -  -  -  -  
  229 D1:AF34 -  -  -  -  
  230 D1:AF34 C1 -  -  -  	pop bc ;b is total loops, c is skipped loops 
  231 D1:AF35 78 -  -  -  	ld a,b
  232 D1:AF36 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
  233 D1:AF37 01 00 00 00 	ld bc,0;clear bc 
  234 D1:AF3B 2B -  -  -  	dec hl	;hl points to 1 before gaplength
  235 D1:AF3C D9 -  -  -  	exx ;toshadow
  236 D1:AF3D 47 -  -  -  	ld b,a 
  237 D1:AF3E C3 E2 AE D1 	jp dsfgs_line_loop
  238 D1:AF42 -  -  -  -  	
  239 D1:AF42 -  -  -  -  	
  240 D1:AF42 -  -  -  -  	
  241 D1:AF42 -  -  -  -  draw_slow_sprite_bottom_cut_from_line:
  242 D1:AF42 3C -  -  -  	inc a 
  243 D1:AF43 -  -  -  -  ;de = vram , hl = data, a = number lines to draw
  244 D1:AF43 -  -  -  -  draw_slow_sprite_bottom_cut:
  245 D1:AF43 -  -  -  -  
  246 D1:AF43 CD 40 AE D1 	call setup_sprite_bottom_cut
  247 D1:AF47 -  -  -  -  	;a = loops to draw, hl = 1 before gap length 
  248 D1:AF47 D9 -  -  -  	exx ;toshadow
  249 D1:AF48 47 -  -  -  	ld b,a
  250 D1:AF49 C3 E2 AE D1 	jp dsfgs_line_loop
  251 D1:AF4D -  -  -  -  
  252 D1:AF4D -  -  -  -  
  253 D1:AF4D -  -  -  -  
  254 D1:AF4D -  -  -  -  
  255 D1:AF4D -  -  -  -  
  256 D1:AF4D -  -  -  -  
  257 D1:AF4D -  -  -  -  
  258 D1:AF4D -  -  -  -  
  259 D1:AF4D -  -  -  -  
  260 D1:AF4D -  -  -  -  
  261 D1:AF4D -  -  -  -  
  262 D1:AF4D -  -  -  -  
  263 D1:AF4D -  -  -  -  
  264 D1:AF4D -  -  -  -  
  265 D1:AF4D -  -  -  -  
  266 D1:AF4D -  -  -  -  
  267 D1:AF4D -  -  -  -  
  268 D1:AF4D -  -  -  -  
  269 D1:AF4D -  -  -  -  
  270 D1:AF4D -  -  -  -  
  271 D1:AF4D -  -  -  -  
  272 D1:AF4D -  -  -  -  
  273 D1:AF4D -  -  -  -  
  274 D1:AF4D -  -  -  -  
  275 D1:AF4D -  -  -  -  
  276 D1:AF4D -  -  -  -  
  277 D1:AF4D -  -  -  -  
  278 D1:AF4D -  -  -  -  
  279 D1:AF4D -  -  -  -  
  280 D1:AF4D -  -  -  -  
  281 D1:AF4D -  -  -  -  
  282 D1:AF4D -  -  -  -  
  283 D1:AF4D -  -  -  -  
  284 D1:AF4D -  -  -  -  
  285 D1:AF4D -  -  -  -  
  286 D1:AF4D -  -  -  -  
  287 D1:AF4D -  -  -  -   
  288 D1:AF4D -  -  -  -  
  289 D1:AF4D -  -  -  -  
  290 D1:AF4D -  -  -  -  
  291 D1:AF4D -  -  -  -  
  292 D1:AF4D -  -  -  -  
  293 D1:AF4D -  -  -  -  
  294 D1:AF4D -  -  -  -  
  295 D1:AF4D -  -  -  -  
  296 D1:AF4D -  -  -  -  
  297 D1:AF4D -  -  -  -  
  298 D1:AF4D -  -  -  -  
  299 D1:AF4D -  -  -  -  
  300 D1:AF4D -  -  -  -  
  301 D1:AF4D -  -  -  -  
  302 D1:AF4D -  -  -  -  
  303 D1:AF4D -  -  -  -  
  304 D1:AF4D -  -  -  -  
  305 D1:AF4D -  -  -  -  
  306 D1:AF4D -  -  -  -  
  307 D1:AF4D -  -  -  -  
  308 D1:AF4D -  -  -  -  
  309 D1:AF4D -  -  -  -  
  310 D1:AF4D -  -  -  -  
  311 D1:AF4D -  -  -  -  
  312 D1:AF4D -  -  -  -  
  313 D1:AF4D -  -  -  -  
  314 D1:AF4D -  -  -  -  
  315 D1:AF4D -  -  -  -  
  316 D1:AF4D -  -  -  -  
  317 D1:AF4D -  -  -  -  
  318 D1:AF4D -  -  -  -  
  319 D1:AF4D -  -  -  -  
  320 D1:AF4D -  -  -  -  
  321 D1:AF4D -  -  -  -  
  322 D1:AF4D -  -  -  -  
  323 D1:AF4D -  -  -  -  
  324 D1:AF4D -  -  -  -  
  325 D1:AF4D -  -  -  -  
  326 D1:AF4D -  -  -  -  
  327 D1:AF4D -  -  -  -  
  328 D1:AF4D -  -  -  -  
  329 D1:AF4D -  -  -  -  
  330 D1:AF4D -  -  -  -  
  331 D1:AF4D -  -  -  -  
  332 D1:AF4D -  -  -  -  
  333 D1:AF4D -  -  -  -  
  334 D1:AF4D -  -  -  -  
  335 D1:AF4D -  -  -  -  
  336 D1:AF4D -  -  -  -  
  337 D1:AF4D -  -  -  -  
  338 D1:AF4D -  -  -  -  
  339 D1:AF4D -  -  -  -  
  340 D1:AF4D -  -  -  -  
  341 D1:AF4D -  -  -  -  
  342 D1:AF4D -  -  -  -  
  343 D1:AF4D -  -  -  -  	
  344 D1:AF4D -  -  -  -  	
Listing for file "ascent.asm"
  596 D1:AF4D -  -  -  -  #include "BetterSpriteDecompress.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\BetterSpriteDecompress.txt"
    1 D1:AF4D -  -  -  -  
    2 D1:AF4D -  -  -  -  
    3 D1:AF4D -  -  -  -  
    4 D1:AF4D -  -  -  -  
    5 D1:AF4D -  -  -  -  
    6 D1:AF4D -  -  -  -  
    7 D1:AF4D -  -  -  -  
    8 D1:AF4D -  -  -  -  
    9 D1:AF4D -  -  -  -  ;REGISTER USEAGE
   10 D1:AF4D -  -  -  -  ;HL = sprite color data byte
   11 D1:AF4D -  -  -  -  ;C = bit selector for color data 
   12 D1:AF4D -  -  -  -  ;HL' = alpha data byte
   13 D1:AF4D -  -  -  -  ;C' = bit selector for alpha data
   14 D1:AF4D -  -  -  -  ;DE = output sprite data location
   15 D1:AF4D -  -  -  -  ;DE' = loops/line write location 
   16 D1:AF4D -  -  -  -  ;A' = alpha bits remaining to read in row
   17 D1:AF4D -  -  -  -  
   18 D1:AF4D -  -  -  -  ;SETUP ----------------
   19 D1:AF4D -  -  -  -  ;SET UP BPC MODE AND ALPHA/NOALPHA
   20 D1:AF4D -  -  -  -  ;write height or width(BG) data to decompressed sprite 
   21 D1:AF4D -  -  -  -  ;GET PER SPRITE PALETTE DATA
   22 D1:AF4D -  -  -  -  ;set registers to point to correct locations for decompression
   23 D1:AF4D -  -  -  -  ;------------
   24 D1:AF4D -  -  -  -  
   25 D1:AF4D -  -  -  -  ;GO TO EITHER FAST, SLOW, or BG SPRITE ALGORITHMS
   26 D1:AF4D -  -  -  -  
   27 D1:AF4D -  -  -  -  
   28 D1:AF4D -  -  -  -  ;FAST / SLOW ROUTINE ---------------------------
   29 D1:AF4D -  -  -  -  ;Parse through alpha data, count number of 00 pairs (gap length)
   30 D1:AF4D -  -  -  -  ;IF FAST, GOTO LDIR ROUTINE
   31 D1:AF4D -  -  -  -  ;leading pixel(s), either 11, 01, 10 in alpha data. 
   32 D1:AF4D -  -  -  -  ;write pixel mask and color data
   33 D1:AF4D -  -  -  -  
   34 D1:AF4D -  -  -  -  ;LDIR ROUTINE
   35 D1:AF4D -  -  -  -  ;Count number of 11 pairs in alpha data (LDIR length)
   36 D1:AF4D -  -  -  -  ;if slow and alpha data ends with 00, the last 11 pair becomes trailing pixels
   37 D1:AF4D -  -  -  -  ;Write LDIR length to sprite data 
   38 D1:AF4D -  -  -  -  ;Write LDIR pixel data (if nonzero)
   39 D1:AF4D -  -  -  -  ;IF FAST, GOTO END
   40 D1:AF4D -  -  -  -  
   41 D1:AF4D -  -  -  -  ;trailing pixels
   42 D1:AF4D -  -  -  -  ;11,10,01 in alpha data 
   43 D1:AF4D -  -  -  -  
   44 D1:AF4D -  -  -  -  ;END AND RESTART
   45 D1:AF4D -  -  -  -  ;Increment loops/line counter
   46 D1:AF4D -  -  -  -  ;check if end of line and write loops/line
   47 D1:AF4D -  -  -  -  
   48 D1:AF4D -  -  -  -  ;store registers and check if interrupt is required
   49 D1:AF4D -  -  -  -  ;if interruption required, return to main loop to draw next frame
   50 D1:AF4D -  -  -  -  ;otherwise return to start of loop
   51 D1:AF4D -  -  -  -  
   52 D1:AF4D -  -  -  -  ;
   53 D1:AF4D -  -  -  -  
   54 D1:AF4D -  -  -  -  
   55 D1:AF4D -  -  -  -  
   56 D1:AF4D -  -  -  -  
   57 D1:AF4D -  -  -  -  
   58 D1:AF4D -  -  -  -  
   59 D1:AF4D -  -  -  -  ;rotates c and incs hl if needed to point to next bit. can be flipped to dec bit 
   60 D1:AF4D -  -  -  -  sdcomp_next_in_bitstream:
   61 D1:AF4D -  -  -  -  sdcomp_flip_bitstream .equ $ + 1
   62 D1:AF4D CB 09 -  -  	rrc c;rlc flip
   63 D1:AF4F D0 -  -  -  	ret nc
   64 D1:AF50 -  -  -  -  sdcomp_flip_bitstream_2 .equ $
   65 D1:AF50 23 -  -  -  	inc hl;dec hl flip
   66 D1:AF51 C9 -  -  -  	ret
   67 D1:AF52 -  -  -  -  
   68 D1:AF52 -  -  -  -  ;ALPHA HELPER FUNCS ================================================================================================	
   69 D1:AF52 -  -  -  -  
   70 D1:AF52 -  -  -  -  ;IN SHADOW
   71 D1:AF52 -  -  -  -  ;HL POINTS TO PIXEL ALPHA DATA
   72 D1:AF52 -  -  -  -  ;C IS BITMASK
   73 D1:AF52 -  -  -  -  ;RETURNS 0 OR nonzero IN A 
   74 D1:AF52 -  -  -  -  ;If final alpha bit in line is read, writes loop/line data, ...
   75 D1:AF52 -  -  -  -  ; sets some flags, decrements remaining lines, traverses sprite data if flip, returns the read data 
   76 D1:AF52 -  -  -  -  ; next call returns first bit in next row  
   77 D1:AF52 -  -  -  -  sdcomp_get_next_alpha:
   78 D1:AF52 -  -  -  -  	;ld a,$A2;test 
   79 D1:AF52 -  -  -  -  	;call write_a_to_ram
   80 D1:AF52 79 -  -  -  	ld a,c 
   81 D1:AF53 -  -  -  -  	;call write_a_to_ram 
   82 D1:AF53 7E -  -  -  	ld a,(hl)
   83 D1:AF54 -  -  -  -  	;call write_a_to_ram
   84 D1:AF54 -  -  -  -  	
   85 D1:AF54 37 -  -  -  	scf 
   86 D1:AF55 -  -  -  -  sdcomp_end_of_line_alp .equ $
   87 D1:AF55 DA 62 AF D1 	jp c, sdcomp_end_of_line_alp_skip
   88 D1:AF59 -  -  -  -  
   89 D1:AF59 -  -  -  -  	;ld a,$A3
   90 D1:AF59 -  -  -  -  	;call write_a_to_ram 
   91 D1:AF59 -  -  -  -  	
   92 D1:AF59 3E D2 -  -  	ld a, %11010010 ;jp nc 
   93 D1:AF5B 32 C5 AF D1 	ld (sdcomp_end_vitrual_zero_read),a 
   94 D1:AF5F -  -  -  -  	
   95 D1:AF5F 3E 00 -  -  	ld a,0
   96 D1:AF61 C9 -  -  -  	ret ;returns virtual 0, outside of data range 
   97 D1:AF62 -  -  -  -  
   98 D1:AF62 -  -  -  -  sdcomp_end_of_line_alp_skip:
   99 D1:AF62 -  -  -  -  	
  100 D1:AF62 -  -  -  -  	
  101 D1:AF62 -  -  -  -  	
  102 D1:AF62 -  -  -  -  ;MUST BE RESET EVERY ROW
  103 D1:AF62 37 -  -  -  	scf
  104 D1:AF63 -  -  -  -  sdcomp_bit_offset .equ $ ;jp nc for offset
  105 D1:AF63 DA 70 AF D1 	jp c,sdcomp_bit_offset_skip
  106 D1:AF67 3E DA -  -  	ld a,%11011010;jp c 
  107 D1:AF69 32 63 AF D1 	ld (sdcomp_bit_offset),a
  108 D1:AF6D -  -  -  -  	;ld a,$A9
  109 D1:AF6D -  -  -  -  	;call write_a_to_ram
  110 D1:AF6D 3E 00 -  -  	ld a,0
  111 D1:AF6F C9 -  -  -  	ret ;return 0 first bit
  112 D1:AF70 -  -  -  -  sdcomp_bit_offset_skip:;skip bit offset
  113 D1:AF70 -  -  -  -  		
  114 D1:AF70 -  -  -  -  	;ld a,$EF
  115 D1:AF70 -  -  -  -  	;call write_a_to_ram
  116 D1:AF70 7E -  -  -  	ld a,(hl)
  117 D1:AF71 -  -  -  -  	;push af 
  118 D1:AF71 -  -  -  -  	;call write_a_to_ram
  119 D1:AF71 -  -  -  -  	;ld a,c
  120 D1:AF71 -  -  -  -  	;call write_a_to_ram
  121 D1:AF71 -  -  -  -  	;pop af 
  122 D1:AF71 -  -  -  -  	
  123 D1:AF71 -  -  -  -  	
  124 D1:AF71 A1 -  -  -  	and c 
  125 D1:AF72 CD 4D AF D1 	call sdcomp_next_in_bitstream;incs bitstream
  126 D1:AF76 -  -  -  -  	;a holds data to return
  127 D1:AF76 -  -  -  -  	;call write_a_to_ram
  128 D1:AF76 37 -  -  -  	scf 
  129 D1:AF77 -  -  -  -  sdcomp_no_alpha_1 .equ $;Load a with 1 if no alpha
  130 D1:AF77 DA 7D AF D1 	jp c,sdcomp_no_alpha_1_skip
  131 D1:AF7B 3E 01 -  -  	ld a,1
  132 D1:AF7D -  -  -  -  sdcomp_no_alpha_1_skip:
  133 D1:AF7D -  -  -  -  	
  134 D1:AF7D -  -  -  -  	
  135 D1:AF7D 08 -  -  -  	ex af,af' ;';into shadow
  136 D1:AF7E 3D -  -  -  	dec a 
  137 D1:AF7F -  -  -  -  	;call write_a_to_ram
  138 D1:AF7F C2 AB AF D1 	jp nz, sdcomp_end_of_line_skip
  139 D1:AF83 -  -  -  -  	
  140 D1:AF83 -  -  -  -  	;HAve read last bit in line  
  141 D1:AF83 -  -  -  -  	
  142 D1:AF83 -  -  -  -  	;ld a,$AC;Test
  143 D1:AF83 -  -  -  -  	;call write_a_to_ram;Test
  144 D1:AF83 -  -  -  -  	;Decrement lines remaining in sprite
  145 D1:AF83 -  -  -  -  sdcomp_lines_remaining .equ $ + 1
  146 D1:AF83 3E 00 -  -  	ld a,0
  147 D1:AF85 3D -  -  -  	dec a 
  148 D1:AF86 32 84 AF D1 	ld (sdcomp_lines_remaining),a
  149 D1:AF8A -  -  -  -  	;call write_a_to_ram
  150 D1:AF8A C2 94 AF D1 	jp nz,sdcomp_set_end_flag_skip
  151 D1:AF8E -  -  -  -  	;end of last line reached 
  152 D1:AF8E 3E DA -  -  	ld a,%11011010;jp c
  153 D1:AF90 32 0A B2 D1 	ld (sdcomp_end_reached_flag) , a ;set end reached flag to indicate sprite is done decompressing TODO 
  154 D1:AF94 -  -  -  -  	;ld a,$E9
  155 D1:AF94 -  -  -  -  	;call write_a_to_ram;TEST 
  156 D1:AF94 -  -  -  -  sdcomp_set_end_flag_skip:
  157 D1:AF94 -  -  -  -  	
  158 D1:AF94 -  -  -  -  
  159 D1:AF94 -  -  -  -  	
  160 D1:AF94 3E D2 -  -  	ld a, %11010010 ;jp nc 
  161 D1:AF96 32 E5 B1 D1 	ld (sdcomp_end_of_line_gaplength),a
  162 D1:AF9A 32 55 AF D1 	ld (sdcomp_end_of_line_alp),a
  163 D1:AF9E -  -  -  -  	;ld (sdcomp_write_loops_per_line_flag),a 
  164 D1:AF9E 37 -  -  -  	scf ;Set offset bit for next line
  165 D1:AF9F -  -  -  -  sdcomp_offset_1 .equ $
  166 D1:AF9F DA A9 AF D1 	jp c,sdcomp_offset_1_skip
  167 D1:AFA3 3E D2 -  -  	ld a, %11010010 ;jp nc 
  168 D1:AFA5 32 63 AF D1 	ld (sdcomp_bit_offset),a
  169 D1:AFA9 -  -  -  -  sdcomp_offset_1_skip:
  170 D1:AFA9 -  -  -  -  	
  171 D1:AFA9 -  -  -  -  sdcomp_sprite_width_2 .equ $+1
  172 D1:AFA9 3E 00 -  -  	ld a,0 ;Return sprite width to a'
  173 D1:AFAB -  -  -  -  	
  174 D1:AFAB -  -  -  -  	;call write_a_to_ram
  175 D1:AFAB -  -  -  -  	
  176 D1:AFAB -  -  -  -  sdcomp_end_of_line_skip:
  177 D1:AFAB 08 -  -  -  	ex af,af' ;' ;out
  178 D1:AFAC -  -  -  -  	
  179 D1:AFAC -  -  -  -  	;push af ;testing
  180 D1:AFAC -  -  -  -  	;ld a,$A0
  181 D1:AFAC -  -  -  -  	;call write_a_to_ram
  182 D1:AFAC -  -  -  -  	;pop af 
  183 D1:AFAC -  -  -  -  	;call write_a_to_ram
  184 D1:AFAC -  -  -  -  	
  185 D1:AFAC C9 -  -  -  	ret 
  186 D1:AFAD -  -  -  -  	
  187 D1:AFAD -  -  -  -  
  188 D1:AFAD -  -  -  -  
  189 D1:AFAD -  -  -  -  ;in shadow,returns a $FF,$0F,$F0,$00
  190 D1:AFAD -  -  -  -  sdcomp_get_next_alpha_pair:
  191 D1:AFAD -  -  -  -  	;ld a,$A1
  192 D1:AFAD -  -  -  -  	;call write_a_to_ram
  193 D1:AFAD -  -  -  -  	
  194 D1:AFAD -  -  -  -  	;ld a,c ;test
  195 D1:AFAD -  -  -  -  	;call write_a_to_ram 
  196 D1:AFAD -  -  -  -  	;ld a,(hl) ;test
  197 D1:AFAD -  -  -  -  	;call write_a_to_ram
  198 D1:AFAD -  -  -  -  	
  199 D1:AFAD 3E DA -  -  	ld a,%11011010;jp c 
  200 D1:AFAF 32 C5 AF D1 	ld(sdcomp_end_vitrual_zero_read),a ;reset vitrual zero read flag
  201 D1:AFB3 -  -  -  -  	
  202 D1:AFB3 CD 52 AF D1 	call sdcomp_get_next_alpha
  203 D1:AFB7 B7 -  -  -  	or a 
  204 D1:AFB8 CA C2 AF D1 	jp z,sdcomp_get_next_alpha_pair0
  205 D1:AFBC 3E F0 -  -  	ld a,$F0;FIRST BIT WAS 1
  206 D1:AFBE -  -  -  -  	;call write_a_to_ram
  207 D1:AFBE C3 D1 AF D1 	jp sdcomp_get_next_alpha_pair1
  208 D1:AFC2 -  -  -  -  sdcomp_get_next_alpha_pair0:
  209 D1:AFC2 3E 00 -  -  	ld a,0
  210 D1:AFC4 -  -  -  -  	
  211 D1:AFC4 37 -  -  -  	scf 
  212 D1:AFC5 -  -  -  -  sdcomp_end_vitrual_zero_read .equ $
  213 D1:AFC5 DA D1 AF D1 	jp c,sdcomp_get_next_alpha_pair1
  214 D1:AFC9 F5 -  -  -  	push af 
  215 D1:AFCA -  -  -  -  	;This gets triggered when we have read a vitrual 0 (outside of line) as the first bit in an alpha pair 
  216 D1:AFCA -  -  -  -  	
  217 D1:AFCA 3E 3D -  -  	ld a,%00111101 ;dec a 
  218 D1:AFCC 32 EC B1 D1 	ld (sdcomp_dec_gap_btwn_rows),a 
  219 D1:AFD0 -  -  -  -  	;We should subtract 1 from the next interline gap length whenever a virtual 00 is read.
  220 D1:AFD0 -  -  -  -  	;ld a,$A4
  221 D1:AFD0 -  -  -  -  	;call write_a_to_ram
  222 D1:AFD0 F1 -  -  -  	pop af 
  223 D1:AFD1 -  -  -  -  	
  224 D1:AFD1 -  -  -  -  sdcomp_get_next_alpha_pair1:
  225 D1:AFD1 -  -  -  -  
  226 D1:AFD1 -  -  -  -  	
  227 D1:AFD1 32 E7 AF D1 	ld (sdcomp_get_next_alpha_pair_or),a 
  228 D1:AFD5 -  -  -  -  	
  229 D1:AFD5 CD 52 AF D1 	call sdcomp_get_next_alpha
  230 D1:AFD9 B7 -  -  -  	or a 
  231 D1:AFDA CA E4 AF D1 	jp z,sdcomp_get_next_alpha_pair2
  232 D1:AFDE 3E 0F -  -  	ld a,$0F;SECOND BIT WAS 1
  233 D1:AFE0 C3 E6 AF D1 	jp sdcomp_get_next_alpha_pair3
  234 D1:AFE4 -  -  -  -  sdcomp_get_next_alpha_pair2:
  235 D1:AFE4 3E 00 -  -  	ld a,0;SECOND BIT WAS 0
  236 D1:AFE6 -  -  -  -  sdcomp_get_next_alpha_pair3:	
  237 D1:AFE6 -  -  -  -  sdcomp_get_next_alpha_pair_or .equ $ + 1
  238 D1:AFE6 F6 00 -  -  	or 0;OR WITH FIRST BIT 
  239 D1:AFE8 -  -  -  -  	
  240 D1:AFE8 C9 -  -  -  	ret 
  241 D1:AFE9 -  -  -  -  	
  242 D1:AFE9 -  -  -  -  ;COLOR HELPER FUNCS =================================================================================================
  243 D1:AFE9 -  -  -  -  
  244 D1:AFE9 -  -  -  -  ;not in shadow, returns a = color0000
  245 D1:AFE9 -  -  -  -  sdcomp_get_next_color_leading_nibble:
  246 D1:AFE9 CD F2 AF D1 	call sdcomp_get_next_color
  247 D1:AFED 0F -  -  -  	rrca 
  248 D1:AFEE 0F -  -  -  	rrca 
  249 D1:AFEF 0F -  -  -  	rrca 
  250 D1:AFF0 0F -  -  -  	rrca
  251 D1:AFF1 C9 -  -  -  	ret 
  252 D1:AFF2 -  -  -  -  
  253 D1:AFF2 -  -  -  -  
  254 D1:AFF2 -  -  -  -  
  255 D1:AFF2 -  -  -  -  ;bit orders
  256 D1:AFF2 -  -  -  -  ;	noflip   flip 
  257 D1:AFF2 -  -  -  -  ;4bpp 3210 	 0123
  258 D1:AFF2 -  -  -  -  ;3bpp 210	 012
  259 D1:AFF2 -  -  -  -  ;2bpp 10	 01
  260 D1:AFF2 -  -  -  -  ;1bpp 0		 0
  261 D1:AFF2 -  -  -  -  
  262 D1:AFF2 -  -  -  -  ;not in shadow, returns a = 0000color
  263 D1:AFF2 -  -  -  -  sdcomp_get_next_color:
  264 D1:AFF2 D5 -  -  -  	push de ;save data write location
  265 D1:AFF3 1E 00 -  -  	ld e,0;E will store the final color data
  266 D1:AFF5 -  -  -  -  	
  267 D1:AFF5 37 -  -  -  	scf
  268 D1:AFF6 -  -  -  -  sdcomp_0bpc .equ $ ;if sprite is 0bpc, skip reading bitstream, set to jp c 
  269 D1:AFF6 D2 40 B0 D1 	jp nc,sdcomp_get_color_from_index
  270 D1:AFFA -  -  -  -  	
  271 D1:AFFA -  -  -  -  	;ld a,$C1
  272 D1:AFFA -  -  -  -  	;call write_a_to_ram
  273 D1:AFFA -  -  -  -  	
  274 D1:AFFA 7E -  -  -  	ld a,(hl) ;read next bit 
  275 D1:AFFB -  -  -  -  	;call write_a_to_ram ;TEST
  276 D1:AFFB A1 -  -  -  	and c
  277 D1:AFFC -  -  -  -  	;call write_a_to_ram ;TEST
  278 D1:AFFC CD 4D AF D1 	call sdcomp_next_in_bitstream  ;inc bitstream 
  279 D1:B000 B7 -  -  -  	or a
  280 D1:B001 CA 07 B0 D1 	jp z,sdcomp_get_color_data_set_skip_1
  281 D1:B005 -  -  -  -  sdcomp_color_bit_0 .equ $ + 1 
  282 D1:B005 CB CB -  -  	set 1,e  ;set bit of e reg to color, 0 for flip, else depends on bpc 
  283 D1:B007 -  -  -  -  sdcomp_get_color_data_set_skip_1:
  284 D1:B007 -  -  -  -  	
  285 D1:B007 37 -  -  -  	scf
  286 D1:B008 -  -  -  -  sdcomp_1bpc .equ $
  287 D1:B008 D2 40 B0 D1 	jp nc,sdcomp_get_color_from_index ;if 1bpc jump to end 
  288 D1:B00C -  -  -  -  
  289 D1:B00C -  -  -  -  	;ld a,$C2
  290 D1:B00C -  -  -  -  	;call write_a_to_ram
  291 D1:B00C -  -  -  -  	
  292 D1:B00C 7E -  -  -  	ld a,(hl)
  293 D1:B00D -  -  -  -  	;call write_a_to_ram ;TEST
  294 D1:B00D A1 -  -  -  	and c 
  295 D1:B00E -  -  -  -  	;call write_a_to_ram ;TEST
  296 D1:B00E CD 4D AF D1 	call sdcomp_next_in_bitstream
  297 D1:B012 B7 -  -  -  	or a
  298 D1:B013 CA 19 B0 D1 	jp z,sdcomp_get_color_data_set_skip_2
  299 D1:B017 -  -  -  -  sdcomp_color_bit_1 .equ $ + 1 	
  300 D1:B017 CB C3 -  -  	set 0,e ;store next bit of color data in e  
  301 D1:B019 -  -  -  -  sdcomp_get_color_data_set_skip_2:
  302 D1:B019 -  -  -  -  	
  303 D1:B019 37 -  -  -  	scf
  304 D1:B01A -  -  -  -  sdcomp_2bpc .equ $ ;if 2bpc jump to end
  305 D1:B01A D2 40 B0 D1 	jp nc,sdcomp_get_color_from_index
  306 D1:B01E -  -  -  -  	
  307 D1:B01E 7E -  -  -  	ld a,(hl)
  308 D1:B01F A1 -  -  -  	and c 
  309 D1:B020 CD 4D AF D1 	call sdcomp_next_in_bitstream
  310 D1:B024 B7 -  -  -  	or a
  311 D1:B025 CA 2B B0 D1 	jp z,sdcomp_get_color_data_set_skip_3
  312 D1:B029 -  -  -  -  sdcomp_color_bit_2 .equ $ + 1 
  313 D1:B029 CB D3 -  -  	set 2,e 
  314 D1:B02B -  -  -  -  sdcomp_get_color_data_set_skip_3:
  315 D1:B02B -  -  -  -  	
  316 D1:B02B 37 -  -  -  	scf
  317 D1:B02C -  -  -  -  sdcomp_3bpc .equ $
  318 D1:B02C D2 40 B0 D1 	jp nc,sdcomp_get_color_from_index	
  319 D1:B030 -  -  -  -  
  320 D1:B030 -  -  -  -  ;4bpp, interpret as color data, not indexed	
  321 D1:B030 7E -  -  -  	ld a,(hl)
  322 D1:B031 A1 -  -  -  	and c 
  323 D1:B032 CD 4D AF D1 	call sdcomp_next_in_bitstream
  324 D1:B036 B7 -  -  -  	or a
  325 D1:B037 CA 3D B0 D1 	jp z,sdcomp_get_color_data_set_skip_4
  326 D1:B03B -  -  -  -  sdcomp_color_bit_3 .equ $ + 1 
  327 D1:B03B CB DB -  -  	set 3,e 
  328 D1:B03D -  -  -  -  sdcomp_get_color_data_set_skip_4:
  329 D1:B03D -  -  -  -  ;4bpp, interpret as color data, not indexed
  330 D1:B03D 7B -  -  -  	ld a,e 
  331 D1:B03E D1 -  -  -  	pop de 
  332 D1:B03F C9 -  -  -  	ret 
  333 D1:B040 -  -  -  -  
  334 D1:B040 -  -  -  -  sdcomp_get_color_from_index: ; e holds index of color data, 1-8
  335 D1:B040 -  -  -  -  	
  336 D1:B040 -  -  -  -  	;ld a,$DD
  337 D1:B040 -  -  -  -  	;call write_a_to_ram
  338 D1:B040 -  -  -  -  	;ld a,e 
  339 D1:B040 -  -  -  -  	;call write_a_to_ram
  340 D1:B040 -  -  -  -  	
  341 D1:B040 -  -  -  -  	
  342 D1:B040 CB 53 -  -  	bit 2,e 
  343 D1:B042 CA 64 B0 D1 	jp z, sdcomp_get_color_from_index_2l
  344 D1:B046 -  -  -  -  	
  345 D1:B046 -  -  -  -  	;Bit 2 = 1 
  346 D1:B046 CB 4B -  -  	bit 1,e 
  347 D1:B048 CA 58 B0 D1 	jp z,sdcomp_get_color_from_index_2h1l
  348 D1:B04C -  -  -  -  
  349 D1:B04C -  -  -  -  	;bit 2 = 1 1 = 1
  350 D1:B04C -  -  -  -  sdcomp_indexed_color_data_4 .equ $ + 1	
  351 D1:B04C 3E 00 -  -  	ld a,0
  352 D1:B04E CB 43 -  -  	bit 0,e 
  353 D1:B050 CA 86 B0 D1 	jp z,sdcomp_get_color_from_index_msn
  354 D1:B054 C3 82 B0 D1 	jp sdcomp_get_color_from_index_lsn
  355 D1:B058 -  -  -  -  
  356 D1:B058 -  -  -  -  sdcomp_get_color_from_index_2h1l:
  357 D1:B058 -  -  -  -  	;2 = 1 1 = 0 
  358 D1:B058 -  -  -  -  sdcomp_indexed_color_data_3 .equ $ + 1	
  359 D1:B058 3E 00 -  -  	ld a,0
  360 D1:B05A CB 43 -  -  	bit 0,e 
  361 D1:B05C CA 86 B0 D1 	jp z,sdcomp_get_color_from_index_msn
  362 D1:B060 C3 82 B0 D1 	jp sdcomp_get_color_from_index_lsn
  363 D1:B064 -  -  -  -  	
  364 D1:B064 -  -  -  -  sdcomp_get_color_from_index_2l:
  365 D1:B064 -  -  -  -  	;bit 2 was 0 
  366 D1:B064 CB 4B -  -  	bit 1,e 
  367 D1:B066 CA 76 B0 D1 	jp z,sdcomp_get_color_from_index_2l1l
  368 D1:B06A -  -  -  -  	
  369 D1:B06A -  -  -  -  	;bit 2 = 0 1 = 1
  370 D1:B06A -  -  -  -  sdcomp_indexed_color_data_2 .equ $ + 1	
  371 D1:B06A 3E 00 -  -  	ld a,0
  372 D1:B06C CB 43 -  -  	bit 0,e 
  373 D1:B06E CA 86 B0 D1 	jp z,sdcomp_get_color_from_index_msn
  374 D1:B072 C3 82 B0 D1 	jp sdcomp_get_color_from_index_lsn
  375 D1:B076 -  -  -  -  	
  376 D1:B076 -  -  -  -  sdcomp_get_color_from_index_2l1l:
  377 D1:B076 -  -  -  -  	;bit 2 =0  1 = 0
  378 D1:B076 -  -  -  -  sdcomp_indexed_color_data_1 .equ $ + 1	
  379 D1:B076 3E 00 -  -  	ld a,0
  380 D1:B078 -  -  -  -  	
  381 D1:B078 CB 43 -  -  	bit 0,e 
  382 D1:B07A CA 86 B0 D1 	jp z,sdcomp_get_color_from_index_msn
  383 D1:B07E C3 82 B0 D1 	jp sdcomp_get_color_from_index_lsn
  384 D1:B082 -  -  -  -  sdcomp_get_color_from_index_lsn:
  385 D1:B082 E6 0F -  -  	and %00001111;and with least significant nibble 
  386 D1:B084 D1 -  -  -  	pop de 
  387 D1:B085 -  -  -  -  	
  388 D1:B085 -  -  -  -  	;push af 
  389 D1:B085 -  -  -  -  	;ld a,$C0
  390 D1:B085 -  -  -  -  	;call write_a_to_ram
  391 D1:B085 -  -  -  -  	;pop af 
  392 D1:B085 -  -  -  -  	;call write_a_to_ram
  393 D1:B085 -  -  -  -  	
  394 D1:B085 C9 -  -  -  	ret 
  395 D1:B086 -  -  -  -  	
  396 D1:B086 -  -  -  -  sdcomp_get_color_from_index_msn:
  397 D1:B086 E6 F0 -  -  	and %11110000;and with most significant nibble 
  398 D1:B088 0F -  -  -  	rrca 
  399 D1:B089 0F -  -  -  	rrca 
  400 D1:B08A 0F -  -  -  	rrca 
  401 D1:B08B 0F -  -  -  	rrca 
  402 D1:B08C D1 -  -  -  	pop de 
  403 D1:B08D -  -  -  -  	
  404 D1:B08D -  -  -  -  	;push af 
  405 D1:B08D -  -  -  -  	;ld a,$C0
  406 D1:B08D -  -  -  -  	;call write_a_to_ram
  407 D1:B08D -  -  -  -  	;pop af 
  408 D1:B08D -  -  -  -  	;call write_a_to_ram
  409 D1:B08D -  -  -  -  	
  410 D1:B08D C9 -  -  -  	ret 
  411 D1:B08E -  -  -  -  
  412 D1:B08E -  -  -  -  
  413 D1:B08E -  -  -  -  
  414 D1:B08E -  -  -  -  ;function for traversing sprite data for reversed sprites.
  415 D1:B08E -  -  -  -  ;Reads forward through alpha and color data to end of line, so that it can then be read backwards 
  416 D1:B08E -  -  -  -  ;in shadow ,destroys a
  417 D1:B08E -  -  -  -  sdcomp_traverse_line_data:
  418 D1:B08E D9 -  -  -  	exx ;OUT 
  419 D1:B08F -  -  -  -  sdcomp_color_data_line_end_byte .equ $ + 1
  420 D1:B08F 21 00 00 00 	ld hl,0 ;load end of previous color data line 
  421 D1:B093 -  -  -  -  sdcomp_color_data_line_end_mask .equ $ + 1
  422 D1:B093 0E 00 -  -  	ld c,0 ;load end of previous color data line
  423 D1:B095 D9 -  -  -  	exx;toshadow 
  424 D1:B096 -  -  -  -  	
  425 D1:B096 -  -  -  -  	;load end of previous alpha data line 
  426 D1:B096 -  -  -  -  sdcomp_alpha_data_line_end_byte .equ $ + 1
  427 D1:B096 21 00 00 00 	ld hl,0
  428 D1:B09A -  -  -  -  sdcomp_alpha_data_line_end_mask .equ $ + 1
  429 D1:B09A 0E 00 -  -  	ld c,0
  430 D1:B09C -  -  -  -  sdcomp_traverse_initial:
  431 D1:B09C D5 -  -  -  	push de
  432 D1:B09D -  -  -  -  sdcomp_sprite_width .equ $ + 1
  433 D1:B09D 1E 00 -  -  	ld e, 0
  434 D1:B09F -  -  -  -  	;e holds sprite width 
  435 D1:B09F -  -  -  -  	
  436 D1:B09F -  -  -  -  	;Read forward through alpha data and inc color pointer if alpha is 1 
  437 D1:B09F -  -  -  -  sdcomp_traverse_line_data_loop:
  438 D1:B09F CB 09 -  -  	rrc c 
  439 D1:B0A1 D2 A6 B0 D1 	jp nc,sdcomp_traverse_line_data_alpha_inc_skip ;if not reached end of byte, skip
  440 D1:B0A5 23 -  -  -  	inc hl ;have reached end of alpha byte, inc hl 
  441 D1:B0A6 -  -  -  -  sdcomp_traverse_line_data_alpha_inc_skip:
  442 D1:B0A6 7E -  -  -  	ld a,(hl)
  443 D1:B0A7 A1 -  -  -  	and c ;read alpha data 
  444 D1:B0A8 -  -  -  -  sdcomp_no_alpha_3 .equ $ ;jp c for no alpha sprites to always inc color 
  445 D1:B0A8 CA BE B0 D1 	jp z,sdcomp_traverse_line_data_color_skip;if no alpha skip incrementing color. 
  446 D1:B0AC D9 -  -  -  	exx;out of shadow 
  447 D1:B0AD -  -  -  -  
  448 D1:B0AD CB 09 -  -  	rrc c ;rotate mask
  449 D1:B0AF -  -  -  -  sdcomp_traverse_2bpp .equ $ + 1
  450 D1:B0AF CB 0F -  -  	rrc a ;replace with rrc c for 2bpc (not nop because rrc c is 2 byte operation)
  451 D1:B0B1 -  -  -  -  sdcomp_traverse_3bpp .equ $ + 1
  452 D1:B0B1 CB 0F -  -  	rrc a;rrc c for 3bpc
  453 D1:B0B3 -  -  -  -  sdcomp_traverse_4bpp .equ $ + 1
  454 D1:B0B3 CB 0F -  -  	rrc a;rrc c for 4 bpc 
  455 D1:B0B5 -  -  -  -  	
  456 D1:B0B5 -  -  -  -  	;check if end of byte was reached during rotations
  457 D1:B0B5 79 -  -  -  	ld a,c
  458 D1:B0B6 -  -  -  -  sdcomp_traverse_bit_check .equ $ + 1
  459 D1:B0B6 E6 F0 -  -  	and %11110000 ; 4bpc = 11110000 3bpc = 11100000, 2bpc 11000000 1bpc 10000000 TODO 
  460 D1:B0B8 CA BD B0 D1 	jp z,sdcomp_traverse_line_data_color_inc_skip
  461 D1:B0BC 23 -  -  -  	inc hl ;inc hl if end of byte was reached 
  462 D1:B0BD -  -  -  -  sdcomp_traverse_line_data_color_inc_skip:
  463 D1:B0BD D9 -  -  -  	exx ;toshadow
  464 D1:B0BE -  -  -  -  sdcomp_traverse_line_data_color_skip:
  465 D1:B0BE 1D -  -  -  	dec e ;e holds sprite width 
  466 D1:B0BF C2 9F B0 D1 	jp nz,sdcomp_traverse_line_data_loop ;loop until end of line reached 
  467 D1:B0C3 D1 -  -  -  	pop de  ;back to write location 
  468 D1:B0C4 -  -  -  -  	;set new end of line pointers 
  469 D1:B0C4 -  -  -  -  	
  470 D1:B0C4 -  -  -  -  	;ld a,$BB 
  471 D1:B0C4 -  -  -  -  	;call write_a_to_ram 
  472 D1:B0C4 -  -  -  -  	;ld a,(hl) 
  473 D1:B0C4 -  -  -  -  	;call write_a_to_ram 
  474 D1:B0C4 -  -  -  -  	;ld a,c 
  475 D1:B0C4 -  -  -  -  	;call write_a_to_ram 
  476 D1:B0C4 -  -  -  -  	
  477 D1:B0C4 -  -  -  -  	
  478 D1:B0C4 22 97 B0 D1 	ld (sdcomp_alpha_data_line_end_byte),hl
  479 D1:B0C8 79 -  -  -  	ld a,c
  480 D1:B0C9 32 9B B0 D1 	ld (sdcomp_alpha_data_line_end_mask),a
  481 D1:B0CD D9 -  -  -  	exx ;out
  482 D1:B0CE 22 90 B0 D1 	ld (sdcomp_color_data_line_end_byte),hl
  483 D1:B0D2 79 -  -  -  	ld a,c 
  484 D1:B0D3 32 94 B0 D1 	ld (sdcomp_color_data_line_end_mask),a
  485 D1:B0D7 -  -  -  -  	
  486 D1:B0D7 -  -  -  -  	;ld a,(hl) 
  487 D1:B0D7 -  -  -  -  	;call write_a_to_ram 
  488 D1:B0D7 -  -  -  -  	;ld a,c 
  489 D1:B0D7 -  -  -  -  	;call write_a_to_ram 
  490 D1:B0D7 -  -  -  -  	
  491 D1:B0D7 D9 -  -  -  	exx;to shadow 
  492 D1:B0D8 C9 -  -  -  	ret
  493 D1:B0D9 -  -  -  -  
  494 D1:B0D9 -  -  -  -  
  495 D1:B0D9 -  -  -  -  
  496 D1:B0D9 -  -  -  -  
  497 D1:B0D9 -  -  -  -  
  498 D1:B0D9 -  -  -  -  ;hl/c is color data, de is ldir write pos, b' is ldir length, not in shadow 
  499 D1:B0D9 -  -  -  -  sdcomp_write_ldir_data_loop:
  500 D1:B0D9 CD F2 AF D1 	call sdcomp_get_next_color
  501 D1:B0DD 47 -  -  -  	ld b,a;first pixel
  502 D1:B0DE CD E9 AF D1 	call sdcomp_get_next_color_leading_nibble
  503 D1:B0E2 B0 -  -  -  	or b
  504 D1:B0E3 -  -  -  -  	
  505 D1:B0E3 -  -  -  -  	
  506 D1:B0E3 12 -  -  -  	ld (de),a;write color data
  507 D1:B0E4 13 -  -  -  	inc de
  508 D1:B0E5 D9 -  -  -  	exx;to shadow
  509 D1:B0E6 05 -  -  -  	dec b;ldir length counter
  510 D1:B0E7 D9 -  -  -  	exx
  511 D1:B0E8 C2 D9 B0 D1 	jp nz,sdcomp_write_ldir_data_loop
  512 D1:B0EC C9 -  -  -  	ret
  513 D1:B0ED -  -  -  -  	
  514 D1:B0ED -  -  -  -  
  515 D1:B0ED -  -  -  -  ;Not in shadow, a holds alpha data pair, writes color and mask data to output 
  516 D1:B0ED -  -  -  -  sdcomp_write_leading_or_end_pixels:
  517 D1:B0ED D5 -  -  -  	push de ;output location	
  518 D1:B0EE 47 -  -  -  	ld b,a;save for later
  519 D1:B0EF CB 67 -  -  	bit 4,a ;check if first pixel has color 
  520 D1:B0F1 3E 00 -  -  	ld a,0
  521 D1:B0F3 16 FF -  -  	ld d,%11111111;pixel data mask assuming no colors 
  522 D1:B0F5 CA FF B0 D1 	jp z,sdcomp_leading_pixel_first_skip
  523 D1:B0F9 -  -  -  -  	;has first color
  524 D1:B0F9 16 F0 -  -  	ld d,%11110000;save second pixel of bg 
  525 D1:B0FB CD F2 AF D1 	call sdcomp_get_next_color
  526 D1:B0FF -  -  -  -  sdcomp_leading_pixel_first_skip:
  527 D1:B0FF -  -  -  -  	;a is either $00 or $0color1
  528 D1:B0FF -  -  -  -  	
  529 D1:B0FF 1E FF -  -  	ld e,%11111111;assuming no colors
  530 D1:B101 -  -  -  -  	
  531 D1:B101 CB 40 -  -  	bit 0,b;check second pixel alpha
  532 D1:B103 47 -  -  -  	ld b,a;save for later 
  533 D1:B104 3E 00 -  -  	ld a,0
  534 D1:B106 CA 10 B1 D1 	jp z,sdcomp_leading_pixel_second_skip;
  535 D1:B10A -  -  -  -  	;has second color 
  536 D1:B10A CD E9 AF D1 	call sdcomp_get_next_color_leading_nibble
  537 D1:B10E -  -  -  -  	;a = color2 0 
  538 D1:B10E 1E 0F -  -  	ld e,%00001111;save first pixel of bg
  539 D1:B110 -  -  -  -  	
  540 D1:B110 -  -  -  -  sdcomp_leading_pixel_second_skip:
  541 D1:B110 -  -  -  -  	;a is either 00 or c2 0 
  542 D1:B110 -  -  -  -  	;b is either 00 or 0 c1 
  543 D1:B110 B0 -  -  -  	or b 
  544 D1:B111 47 -  -  -  	ld b,a;final color data
  545 D1:B112 7A -  -  -  	ld a,d 
  546 D1:B113 A3 -  -  -  	and e ;final mask data 
  547 D1:B114 -  -  -  -  	
  548 D1:B114 D1 -  -  -  	pop de;return to pointer 
  549 D1:B115 -  -  -  -  	
  550 D1:B115 12 -  -  -  	ld (de),a;write mask data 
  551 D1:B116 13 -  -  -  	inc de 
  552 D1:B117 78 -  -  -  	ld a,b;color data 
  553 D1:B118 12 -  -  -  	ld (de),a;write color data 
  554 D1:B119 -  -  -  -  	
  555 D1:B119 -  -  -  -  	
  556 D1:B119 -  -  -  -  	
  557 D1:B119 -  -  -  -  	;call write_a_to_ram
  558 D1:B119 -  -  -  -  	
  559 D1:B119 13 -  -  -  	inc de 
  560 D1:B11A C9 -  -  -  	ret 
  561 D1:B11B -  -  -  -  
  562 D1:B11B -  -  -  -  
  563 D1:B11B -  -  -  -  
  564 D1:B11B -  -  -  -  ;ENTRY POINT 
  565 D1:B11B -  -  -  -  
  566 D1:B11B -  -  -  -  
  567 D1:B11B -  -  -  -  ;hl = sprite data start, de = main data decompress location
  568 D1:B11B -  -  -  -  sprite_decompress:
  569 D1:B11B -  -  -  -  
  570 D1:B11B -  -  -  -  
  571 D1:B11B -  -  -  -  	;SETUP ===========================================================================================================
  572 D1:B11B -  -  -  -  
  573 D1:B11B -  -  -  -  	;SET UP BPC MODE AND ALPHA/NOALPHA
  574 D1:B11B -  -  -  -  
  575 D1:B11B -  -  -  -  	;HL pointing to flags registers
  576 D1:B11B -  -  -  -  	;TODO set up bpc and alpha modes, Sprite type and offset. Write conditional jumps where needed
  577 D1:B11B -  -  -  -  	;set bpc mode 
  578 D1:B11B CB 7E -  -  	bit 7,(hl)
  579 D1:B11D C4 EB B3 D1 	call nz,sdcomp_set_4bpc
  580 D1:B121 CB 76 -  -  	bit 6,(hl)
  581 D1:B123 C4 88 B3 D1 	call nz,sdcomp_set_3bpc 
  582 D1:B127 CB 6E -  -  	bit 5,(hl)
  583 D1:B129 C4 35 B3 D1 	call nz,sdcomp_set_2bpc 
  584 D1:B12D CB 66 -  -  	bit 4,(hl)
  585 D1:B12F C4 00 B3 D1 	call nz,sdcomp_set_1bpc 
  586 D1:B133 CB 5E -  -  	bit 3,(hl)
  587 D1:B135 C4 E5 B2 D1 	call nz,sdcomp_set_0bpc 
  588 D1:B139 CB 56 -  -  	bit 2,(hl)
  589 D1:B13B C4 52 B4 D1 	call nz,sdcomp_set_noalpha
  590 D1:B13F CB 56 -  -  	bit 2,(hl)
  591 D1:B141 CC 63 B4 D1 	call z,sdcomp_reset_noalpha
  592 D1:B145 -  -  -  -  	
  593 D1:B145 -  -  -  -  	
  594 D1:B145 3E 00 -  -  	ld a,0
  595 D1:B147 32 73 B2 D1 	ld (sdcomp_loops_per_line_counter),a ;reset loops counter
  596 D1:B14B 3E DA -  -  	ld a,%11011010;jp c 
  597 D1:B14D 32 C5 AF D1 	ld(sdcomp_end_vitrual_zero_read),a ;reset vitrual zero read flag
  598 D1:B151 -  -  -  -  	;write height or width(BG) data to decompressed sprite 
  599 D1:B151 -  -  -  -  	
  600 D1:B151 23 -  -  -  	inc hl ;hl points to width in px 
  601 D1:B152 -  -  -  -  	
  602 D1:B152 -  -  -  -  	
  603 D1:B152 7E -  -  -  	ld a,(hl) 
  604 D1:B153 32 9E B0 D1 	ld (sdcomp_sprite_width),a ;TODO set width in required locations
  605 D1:B157 32 AA AF D1 	ld (sdcomp_sprite_width_2),a
  606 D1:B15B 47 -  -  -  	ld b,a;width
  607 D1:B15C 08 -  -  -  	ex af,af' ;'
  608 D1:B15D 78 -  -  -  	ld a,b;Number of alpha bits remaining in row
  609 D1:B15E 08 -  -  -  	ex af,af' ;' 
  610 D1:B15F -  -  -  -  
  611 D1:B15F -  -  -  -  
  612 D1:B15F -  -  -  -  sdcomp_offset_2 .equ $ 
  613 D1:B15F 00 -  -  -  	nop ;replace with inc b for offset 
  614 D1:B160 -  -  -  -  
  615 D1:B160 -  -  -  -  	;Calculate number of bytes to skip between rows for gap length  
  616 D1:B160 04 -  -  -  	inc b ;round up on odd sprites
  617 D1:B161 CB 38 -  -  	srl b;divide by 2
  618 D1:B163 -  -  -  -  	
  619 D1:B163 -  -  -  -  	
  620 D1:B163 3E A0 -  -  	ld a,160
  621 D1:B165 90 -  -  -  	sub b ;a holds 160 - (width in pairs)
  622 D1:B166 32 EA B1 D1 	ld (sdcomp_gap_btwn_rows),a 
  623 D1:B16A -  -  -  -  	
  624 D1:B16A -  -  -  -  	;call write_a_to_ram
  625 D1:B16A -  -  -  -  	;ld a,$BE
  626 D1:B16A -  -  -  -  	;call write_a_to_ram
  627 D1:B16A -  -  -  -  	;ld a,b 
  628 D1:B16A -  -  -  -  	;call write_a_to_ram
  629 D1:B16A -  -  -  -  	
  630 D1:B16A -  -  -  -  	
  631 D1:B16A 7E -  -  -  	ld a,(hl);load width again
  632 D1:B16B -  -  -  -  	
  633 D1:B16B 47 -  -  -  	ld b,a 
  634 D1:B16C -  -  -  -  	
  635 D1:B16C -  -  -  -  
  636 D1:B16C 23 -  -  -  	inc hl ;hl points to height 
  637 D1:B16D 7E -  -  -  	ld a,(hl);height
  638 D1:B16E 32 84 AF D1 	ld (sdcomp_lines_remaining),a ;write height to lines remaining counter
  639 D1:B172 -  -  -  -  	
  640 D1:B172 -  -  -  -  	
  641 D1:B172 -  -  -  -  
  642 D1:B172 12 -  -  -  	ld (de), a ;write height to first byte of sprite data 
  643 D1:B173 13 -  -  -  	inc de 
  644 D1:B174 -  -  -  -  	
  645 D1:B174 23 -  -  -  	inc hl ;HL points to start of alpha data 
  646 D1:B175 -  -  -  -  
  647 D1:B175 E5 -  -  -  	push hl ;Save alpha data 
  648 D1:B176 -  -  -  -  	
  649 D1:B176 -  -  -  -  	
  650 D1:B176 -  -  -  -  	;Need to find start of color data
  651 D1:B176 -  -  -  -  	;at this point a = height, b = width 
  652 D1:B176 -  -  -  -  	
  653 D1:B176 37 -  -  -  	scf
  654 D1:B177 -  -  -  -  	
  655 D1:B177 -  -  -  -  sdcomp_no_alpha_2 .equ $
  656 D1:B177 D2 90 B1 D1 	jp nc,sdcomp_no_alpha_2_skip ; if no alpha skip this part
  657 D1:B17B -  -  -  -  	
  658 D1:B17B -  -  -  -  	;need to find number of pixels, div by 8 and skip that many bytes
  659 D1:B17B -  -  -  -  	
  660 D1:B17B E5 -  -  -  	push hl
  661 D1:B17C 67 -  -  -  	ld h,a;height
  662 D1:B17D 68 -  -  -  	ld l,b;width
  663 D1:B17E ED 6C -  -  	mlt hl;number of pixels
  664 D1:B180 -  -  -  -  	;rounds up to nearest multiple of 8
  665 D1:B180 2B -  -  -  	dec hl
  666 D1:B181 CB 3C -  -  	srl h
  667 D1:B183 CB 1D -  -  	rr l
  668 D1:B185 CB 3C -  -  	srl h
  669 D1:B187 CB 1D -  -  	rr l 
  670 D1:B189 CB 3C -  -  	srl h 
  671 D1:B18B CB 1D -  -  	rr l 
  672 D1:B18D 23 -  -  -  	inc hl 
  673 D1:B18E C1 -  -  -  	pop bc ;initial hl location
  674 D1:B18F -  -  -  -  	;add number of bytes to skip 
  675 D1:B18F 09 -  -  -  	add hl,bc ;HL points to start of color data 
  676 D1:B190 -  -  -  -  	
  677 D1:B190 -  -  -  -  	
  678 D1:B190 -  -  -  -  	
  679 D1:B190 -  -  -  -  sdcomp_no_alpha_2_skip:
  680 D1:B190 -  -  -  -  
  681 D1:B190 -  -  -  -  	
  682 D1:B190 -  -  -  -  	;HL POINTING TO COLOR PALETTE DATA
  683 D1:B190 -  -  -  -  
  684 D1:B190 -  -  -  -  	
  685 D1:B190 47 -  -  -  	ld b,a ;save for after
  686 D1:B191 -  -  -  -  	;GET LOCAL PALETTE DATA
  687 D1:B191 -  -  -  -  	
  688 D1:B191 37 -  -  -  	scf 
  689 D1:B192 -  -  -  -  sdcomp_1bpc_1 .equ $ 
  690 D1:B192 D2 9C B1 D1 	jp nc,sdcomp_1bpc_1_skip ;skip if not 1bpc or 2bpc or 3bpc
  691 D1:B196 -  -  -  -  	
  692 D1:B196 7E -  -  -  	ld a,(hl);color data 	
  693 D1:B197 32 77 B0 D1 	ld (sdcomp_indexed_color_data_1),a 
  694 D1:B19B 23 -  -  -  	inc hl 
  695 D1:B19C -  -  -  -  	
  696 D1:B19C -  -  -  -  sdcomp_1bpc_1_skip:	
  697 D1:B19C -  -  -  -  
  698 D1:B19C -  -  -  -  
  699 D1:B19C 37 -  -  -  	scf 
  700 D1:B19D -  -  -  -  sdcomp_2bpc_1 .equ $ 
  701 D1:B19D D2 A7 B1 D1 	jp nc,sdcomp_2bpc_1_skip ;skip if not 2bpc or 3bpc
  702 D1:B1A1 -  -  -  -  	
  703 D1:B1A1 7E -  -  -  	ld a,(hl);color data 
  704 D1:B1A2 32 6B B0 D1 	ld (sdcomp_indexed_color_data_2),a 
  705 D1:B1A6 23 -  -  -  	inc hl 
  706 D1:B1A7 -  -  -  -  	
  707 D1:B1A7 -  -  -  -  sdcomp_2bpc_1_skip:	
  708 D1:B1A7 -  -  -  -  
  709 D1:B1A7 -  -  -  -  
  710 D1:B1A7 37 -  -  -  	scf 
  711 D1:B1A8 -  -  -  -  sdcomp_3bpc_1 .equ $ 
  712 D1:B1A8 DA B8 B1 D1 	jp c,sdcomp_3bpc_1_skip ;skip if not 3bpc
  713 D1:B1AC -  -  -  -  	
  714 D1:B1AC 7E -  -  -  	ld a,(hl);color data 
  715 D1:B1AD 32 59 B0 D1 	ld (sdcomp_indexed_color_data_3),a 
  716 D1:B1B1 23 -  -  -  	inc hl 
  717 D1:B1B2 7E -  -  -  	ld a,(hl);color data 
  718 D1:B1B3 32 4D B0 D1 	ld (sdcomp_indexed_color_data_4),a 
  719 D1:B1B7 23 -  -  -  	inc hl 
  720 D1:B1B8 -  -  -  -  	
  721 D1:B1B8 -  -  -  -  sdcomp_3bpc_1_skip:	
  722 D1:B1B8 -  -  -  -  
  723 D1:B1B8 -  -  -  -  	
  724 D1:B1B8 D5 -  -  -  	push de ;loops/line data location
  725 D1:B1B9 EB -  -  -  	ex de,hl
  726 D1:B1BA 78 -  -  -  	ld a,b
  727 D1:B1BB 01 00 00 00 	ld bc,0
  728 D1:B1BF 4F -  -  -  	ld c,a;height 
  729 D1:B1C0 09 -  -  -  	add hl,bc
  730 D1:B1C1 EB -  -  -  	ex de,hl;de points to data write location
  731 D1:B1C2 -  -  -  -  	
  732 D1:B1C2 -  -  -  -  	
  733 D1:B1C2 D9 -  -  -  	exx;in to shadow
  734 D1:B1C3 D1 -  -  -  	pop de 
  735 D1:B1C4 E1 -  -  -  	pop hl ;alpha data stored from earlier
  736 D1:B1C5 0E 80 -  -  	ld c,%10000000;alpha mask
  737 D1:B1C7 D9 -  -  -  	exx;out 
  738 D1:B1C8 0E 80 -  -  	ld c,%10000000;color mask
  739 D1:B1CA -  -  -  -  	
  740 D1:B1CA -  -  -  -  	;HL now points to pixel color data 
  741 D1:B1CA -  -  -  -  	;HL' points to pixel alpha data 
  742 D1:B1CA -  -  -  -  	;C holds color mask
  743 D1:B1CA -  -  -  -  	;C' holds alpha mask
  744 D1:B1CA -  -  -  -  	;DE' holds loops/line output data location
  745 D1:B1CA -  -  -  -  	;DE holds main data output location
  746 D1:B1CA -  -  -  -  	;A holds height
  747 D1:B1CA -  -  -  -  	;A' holds bits remaining in row
  748 D1:B1CA -  -  -  -  
  749 D1:B1CA -  -  -  -  
  750 D1:B1CA 37 -  -  -  	scf 
  751 D1:B1CB -  -  -  -  sdcomp_flip_setup .equ $
  752 D1:B1CB DA DB B1 D1 	jp c,sdcomp_find_gap_length;continue if no flip
  753 D1:B1CF -  -  -  -  
  754 D1:B1CF -  -  -  -  	
  755 D1:B1CF 2B -  -  -  	dec hl;dec color pointer
  756 D1:B1D0 0E 01 -  -  	ld c, %00000001
  757 D1:B1D2 D9 -  -  -  	exx;to shadow 
  758 D1:B1D3 2B -  -  -  	dec hl;dec alpha pointer
  759 D1:B1D4 0E 01 -  -  	ld c, %00000001;alpha mask
  760 D1:B1D6 CD 9C B0 D1 	call sdcomp_traverse_initial
  761 D1:B1DA D9 -  -  -  	exx ;out of shadow 
  762 D1:B1DB -  -  -  -  	
  763 D1:B1DB -  -  -  -  	
  764 D1:B1DB -  -  -  -  
  765 D1:B1DB -  -  -  -  	;TODO jump to BG routine here
  766 D1:B1DB -  -  -  -  	;END SETUP ======================================================================================================
  767 D1:B1DB -  -  -  -  	
  768 D1:B1DB -  -  -  -  	
  769 D1:B1DB -  -  -  -  sdcomp_find_gap_length:
  770 D1:B1DB -  -  -  -  	
  771 D1:B1DB -  -  -  -  	
  772 D1:B1DB -  -  -  -  	
  773 D1:B1DB -  -  -  -  ;If virtual 0 was read as the start of an alpha pair, remove 1 from next gap length 
  774 D1:B1DB -  -  -  -  ;this will occur if:
  775 D1:B1DB -  -  -  -  ;Starting pixels are at the end of line, eg :00000001. ldir length = 0 as virtual 0s are read. interline length should be reduced by 1 
  776 D1:B1DB -  -  -  -  ;
  777 D1:B1DB -  -  -  -  ;if during ldir search, line data ends in 11, followed by virtual 00. In this case the 11 is the ending pixels if slow sprite, so gap length should not be reduced
  778 D1:B1DB -  -  -  -  ; This is done from the addition of 1 gap length whenever the 11->00 case occurs, canceling the interline reduction due to reading vitrual 00. 
  779 D1:B1DB -  -  -  -  	
  780 D1:B1DB D9 -  -  -  	exx ;to shadow
  781 D1:B1DC -  -  -  -  	
  782 D1:B1DC -  -  -  -  sdcomp_add_1_gap_length .equ $ + 1
  783 D1:B1DC 06 00 -  -  	ld b,0;00 pairs found 
  784 D1:B1DE 3E 00 -  -  	ld a,0 ;reset
  785 D1:B1E0 32 DD B1 D1 	ld (sdcomp_add_1_gap_length),a 
  786 D1:B1E4 -  -  -  -  
  787 D1:B1E4 -  -  -  -  sdcomp_find_gap_length_loop:
  788 D1:B1E4 -  -  -  -  
  789 D1:B1E4 37 -  -  -  	scf 
  790 D1:B1E5 -  -  -  -  sdcomp_end_of_line_gaplength .equ $ 
  791 D1:B1E5 DA 0E B2 D1 	jp c, sdcomp_end_of_line_gaplength_skip
  792 D1:B1E9 -  -  -  -  	
  793 D1:B1E9 -  -  -  -  	;We have reached the end of the alpha data, add between line gap length 
  794 D1:B1E9 -  -  -  -  sdcomp_gap_btwn_rows .equ $ + 1
  795 D1:B1E9 3E 00 -  -  	ld a,0
  796 D1:B1EB 80 -  -  -  	add a,b 
  797 D1:B1EC -  -  -  -  sdcomp_dec_gap_btwn_rows .equ $ 	
  798 D1:B1EC 00 -  -  -  	nop ;replace with dec a to decrease gap length 
  799 D1:B1ED 47 -  -  -  	ld b,a 
  800 D1:B1EE 3E 00 -  -  	ld a,%00000000 ;nop 
  801 D1:B1F0 32 EC B1 D1 	ld (sdcomp_dec_gap_btwn_rows),a ;reset dec gap
  802 D1:B1F4 3E DA -  -  	ld a,%11011010;jp c
  803 D1:B1F6 32 55 AF D1 	ld (sdcomp_end_of_line_alp),a ;Reset virtual zero flag, reading alpha data will now be the next line 
  804 D1:B1FA 32 E5 B1 D1 	ld (sdcomp_end_of_line_gaplength),a ;Reset flag for adding interline gaplength 
  805 D1:B1FE -  -  -  -  	
  806 D1:B1FE 37 -  -  -  	scf
  807 D1:B1FF -  -  -  -  sdcomp_flip_traverse .equ $
  808 D1:B1FF D4 8E B0 D1 	call nc,sdcomp_traverse_line_data ;call line data traverse if flip
  809 D1:B203 -  -  -  -  		
  810 D1:B203 -  -  -  -  	;Write loops/line data as we have reached a gap btwn lines 
  811 D1:B203 3A 73 B2 D1 	ld a,(sdcomp_loops_per_line_counter)
  812 D1:B207 12 -  -  -  	ld (de),a ;write loops/line data 
  813 D1:B208 13 -  -  -  	inc de
  814 D1:B209 -  -  -  -  	
  815 D1:B209 -  -  -  -  	
  816 D1:B209 37 -  -  -  	scf 
  817 D1:B20A -  -  -  -  sdcomp_end_reached_flag .equ $;check if end of sprite reached
  818 D1:B20A D2 DC B2 D1 	jp nc,sdcomp_end
  819 D1:B20E -  -  -  -  
  820 D1:B20E -  -  -  -  	
  821 D1:B20E -  -  -  -  sdcomp_end_of_line_gaplength_skip:
  822 D1:B20E CD AD AF D1 	call sdcomp_get_next_alpha_pair
  823 D1:B212 -  -  -  -  	;call write_a_to_ram
  824 D1:B212 04 -  -  -  	inc b 
  825 D1:B213 -  -  -  -  
  826 D1:B213 -  -  -  -  	;push af ;TEST
  827 D1:B213 -  -  -  -  	;ld a,$AB;TEST
  828 D1:B213 -  -  -  -  	;call write_a_to_ram
  829 D1:B213 -  -  -  -  	
  830 D1:B213 -  -  -  -  	;call write_a_to_ram
  831 D1:B213 -  -  -  -  	;pop af ;TEST
  832 D1:B213 -  -  -  -  	
  833 D1:B213 B7 -  -  -  	or a
  834 D1:B214 CA E4 B1 D1 	jp z,sdcomp_find_gap_length_loop
  835 D1:B218 -  -  -  -  	
  836 D1:B218 -  -  -  -  ;END OF GAP LENGTH LOOP =====================	
  837 D1:B218 -  -  -  -  	
  838 D1:B218 F5 -  -  -  	push af; save leading pixel alpha data 
  839 D1:B219 -  -  -  -  	;B holds number of 00 pairs + 1
  840 D1:B219 -  -  -  -  	
  841 D1:B219 -  -  -  -  	;ld a,$AA ;test
  842 D1:B219 -  -  -  -  	;call write_a_to_ram
  843 D1:B219 -  -  -  -  	;ld a,b ;test
  844 D1:B219 -  -  -  -  	;call write_a_to_ram
  845 D1:B219 -  -  -  -  	
  846 D1:B219 -  -  -  -  	
  847 D1:B219 -  -  -  -  	
  848 D1:B219 -  -  -  -  	;Write gap length data to output
  849 D1:B219 78 -  -  -  	ld a,b 
  850 D1:B21A D9 -  -  -  	exx;out of shadow 
  851 D1:B21B 12 -  -  -  	ld (de),a;GAP LENGTH 
  852 D1:B21C 13 -  -  -  	inc de 
  853 D1:B21D D9 -  -  -  	exx;into shadow 	
  854 D1:B21E -  -  -  -  	
  855 D1:B21E -  -  -  -  	
  856 D1:B21E -  -  -  -  ;LEADING PIXELS ===================================================================================================
  857 D1:B21E F1 -  -  -  	pop af ;a holds leading pixel pair alpha data (FF,0F,F0)
  858 D1:B21F -  -  -  -  	
  859 D1:B21F 37 -  -  -  	scf 
  860 D1:B220 -  -  -  -  sdcomp_fast_1 .equ $ 
  861 D1:B220 D2 2A B2 D1 	jp nc, sdcomp_ldir_start 
  862 D1:B224 -  -  -  -  	
  863 D1:B224 D9 -  -  -  	exx;out of shadow
  864 D1:B225 CD ED B0 D1 	call sdcomp_write_leading_or_end_pixels
  865 D1:B229 D9 -  -  -  	exx;into shadow 
  866 D1:B22A -  -  -  -  	
  867 D1:B22A -  -  -  -  
  868 D1:B22A -  -  -  -  	
  869 D1:B22A -  -  -  -  ;LDIR ==============================================================================================================	
  870 D1:B22A -  -  -  -  	;Count number of 11 pairs for LDIR section
  871 D1:B22A -  -  -  -  	;If end of line reached we know last pixels must be the ending pair
  872 D1:B22A -  -  -  -  	;
  873 D1:B22A -  -  -  -  	
  874 D1:B22A -  -  -  -  	;If ending is 11 -> 00 
  875 D1:B22A -  -  -  -  	;11 pair will need to become ending pixels if slow sprite
  876 D1:B22A -  -  -  -  	;Will need to reduce b by 1 
  877 D1:B22A -  -  -  -  	
  878 D1:B22A -  -  -  -  	;If ending is 11 ->01/10
  879 D1:B22A -  -  -  -  	;last pair wil become ending pixels, dont reduce b 
  880 D1:B22A -  -  -  -  	
  881 D1:B22A -  -  -  -  sdcomp_ldir_start:
  882 D1:B22A -  -  -  -  
  883 D1:B22A -  -  -  -  ;	ld a, %11010010 ;jp nc 
  884 D1:B22A -  -  -  -  ;	ld (sdcomp_end_of_line_2) , a ;reset end of line flag 
  885 D1:B22A -  -  -  -  
  886 D1:B22A 06 00 -  -  	ld b,0; will hold number of 11 pairs found
  887 D1:B22C -  -  -  -  sdcomp_ldir_loop:
  888 D1:B22C CD AD AF D1 	call sdcomp_get_next_alpha_pair ;get alpha data
  889 D1:B230 04 -  -  -  	inc b 
  890 D1:B231 -  -  -  -  	
  891 D1:B231 -  -  -  -  	;push af 
  892 D1:B231 -  -  -  -  	;ld a,$DE 
  893 D1:B231 -  -  -  -  	;call write_a_to_ram
  894 D1:B231 -  -  -  -  	;pop af
  895 D1:B231 -  -  -  -  	;call write_a_to_ram
  896 D1:B231 -  -  -  -  	
  897 D1:B231 -  -  -  -  ;	scf 
  898 D1:B231 -  -  -  -  ;sdcomp_end_of_line_2 .equ $ ;set when end of line reached 
  899 D1:B231 -  -  -  -  ;	jp nc, sdcomp_ldir_loop_end;If read last in line
  900 D1:B231 -  -  -  -  	
  901 D1:B231 EE FF -  -  	xor %11111111 ;flip all bits  (CPL does not set flags :(  )
  902 D1:B233 CA 2C B2 D1 	jp z, sdcomp_ldir_loop; if a is 0 means a was $FF 
  903 D1:B237 2F -  -  -  	cpl ; flip back 
  904 D1:B238 -  -  -  -  sdcomp_ldir_loop_end:
  905 D1:B238 -  -  -  -  
  906 D1:B238 -  -  -  -  	
  907 D1:B238 -  -  -  -  	;at this point b holds # 11 pairs +1 
  908 D1:B238 37 -  -  -  	scf 
  909 D1:B239 -  -  -  -  sdcomp_fast_2 .equ $ 
  910 D1:B239 D2 54 B2 D1 	jp nc,sdcomp_ldir_write ;jump before dec b because we have read first 11 pair in searching for gaplength 
  911 D1:B23D -  -  -  -  
  912 D1:B23D -  -  -  -  	
  913 D1:B23D -  -  -  -  	
  914 D1:B23D 05 -  -  -  	dec b ;b holds # 11 pairs 
  915 D1:B23E CA 67 B2 D1 	jp z,sdcomp_no_ldir;no pairs found,no ldir length
  916 D1:B242 B7 -  -  -  	or a
  917 D1:B243 C2 54 B2 D1 	jp nz,sdcomp_ldir_write;ends not in 00, has single ending pixel
  918 D1:B247 -  -  -  -  	
  919 D1:B247 -  -  -  -  	;ends in 11 -> 00,ending pixels will be 11 if slow sprite. If fast, jump to ldir write here 
  920 D1:B247 -  -  -  -  	
  921 D1:B247 -  -  -  -  	;ld a,$DF
  922 D1:B247 -  -  -  -  	;call write_a_to_ram
  923 D1:B247 -  -  -  -  	
  924 D1:B247 -  -  -  -  	;must add 1 to next gap length, have already read first 00
  925 D1:B247 -  -  -  -  	;for the case with virtual 00, this cancels the decrease in gap length 
  926 D1:B247 3E 01 -  -  	ld a,1;start w 1 gap len
  927 D1:B249 32 DD B1 D1 	ld (sdcomp_add_1_gap_length),a 
  928 D1:B24D 3E FF -  -  	ld a,$ff;ending pixels 11
  929 D1:B24F -  -  -  -  	
  930 D1:B24F 05 -  -  -  	dec b;reduce length by 1, final pair is end pixels
  931 D1:B250 CA 67 B2 D1 	jp z,sdcomp_no_ldir;no ldir length,ending pixels is 11 
  932 D1:B254 -  -  -  -  	;b holds ldir length 
  933 D1:B254 -  -  -  -  	
  934 D1:B254 -  -  -  -  
  935 D1:B254 -  -  -  -  ;b holds ldir length, a holds ending pixels
  936 D1:B254 -  -  -  -  sdcomp_ldir_write:
  937 D1:B254 -  -  -  -  
  938 D1:B254 -  -  -  -  	;b holds 11 pairs found 
  939 D1:B254 -  -  -  -  	
  940 D1:B254 -  -  -  -  	;push af;TEST
  941 D1:B254 -  -  -  -  	;ld a,$DA 
  942 D1:B254 -  -  -  -  	;call write_a_to_ram
  943 D1:B254 -  -  -  -  	;ld a,b 
  944 D1:B254 -  -  -  -  	;call write_a_to_ram
  945 D1:B254 -  -  -  -  	;pop af ;TEST
  946 D1:B254 -  -  -  -  
  947 D1:B254 F5 -  -  -  	push af;save ending pixels
  948 D1:B255 78 -  -  -  	ld a,b
  949 D1:B256 D9 -  -  -  	exx ;out 
  950 D1:B257 12 -  -  -  	ld (de),a;write ldir length
  951 D1:B258 13 -  -  -  	inc de 
  952 D1:B259 CD D9 B0 D1 	call sdcomp_write_ldir_data_loop
  953 D1:B25D -  -  -  -  
  954 D1:B25D F1 -  -  -  	pop af;return ending pixels
  955 D1:B25E -  -  -  -  	
  956 D1:B25E 37 -  -  -  	scf
  957 D1:B25F -  -  -  -  sdcomp_fast_3 .equ $ 
  958 D1:B25F D2 72 B2 D1 	jp nc,sdcomp_inc_loops_per_line ;skip ending pixels
  959 D1:B263 -  -  -  -  	
  960 D1:B263 C3 6E B2 D1 	jp sdcomp_write_end_pixels
  961 D1:B267 -  -  -  -  sdcomp_no_ldir:;no ldir length, a holds ending pixels,00,10,01,11
  962 D1:B267 -  -  -  -  
  963 D1:B267 -  -  -  -  
  964 D1:B267 -  -  -  -  	;push af ;TEST
  965 D1:B267 -  -  -  -  	;ld a,$DB
  966 D1:B267 -  -  -  -  	;call write_a_to_ram
  967 D1:B267 -  -  -  -  	;pop af ;TEST
  968 D1:B267 -  -  -  -  	;call write_a_to_ram
  969 D1:B267 -  -  -  -  
  970 D1:B267 F5 -  -  -  	push af;save end pixels
  971 D1:B268 -  -  -  -  	
  972 D1:B268 D9 -  -  -  	exx;out of shadow
  973 D1:B269 3E 00 -  -  	ld a,0
  974 D1:B26B 12 -  -  -  	ld (de),a ;write 0 as ldir length
  975 D1:B26C 13 -  -  -  	inc de 
  976 D1:B26D F1 -  -  -  	pop af;return ending pixels
  977 D1:B26E -  -  -  -  
  978 D1:B26E -  -  -  -  ;WRITE ENDING PIXELS ======================================================================================
  979 D1:B26E -  -  -  -  
  980 D1:B26E -  -  -  -  sdcomp_write_end_pixels:
  981 D1:B26E -  -  -  -  ;not in shadow
  982 D1:B26E -  -  -  -  	
  983 D1:B26E -  -  -  -  	;test
  984 D1:B26E -  -  -  -  	;push af 
  985 D1:B26E -  -  -  -  	;ld a,$E0
  986 D1:B26E -  -  -  -  	;call write_a_to_ram
  987 D1:B26E -  -  -  -  	;pop af 
  988 D1:B26E -  -  -  -  	
  989 D1:B26E -  -  -  -  
  990 D1:B26E CD ED B0 D1 	call sdcomp_write_leading_or_end_pixels
  991 D1:B272 -  -  -  -  	
  992 D1:B272 -  -  -  -  	
  993 D1:B272 -  -  -  -  ;sdcomp_test_lines_stop .equ $ + 1 
  994 D1:B272 -  -  -  -  	;ld a,2
  995 D1:B272 -  -  -  -  	;dec a 
  996 D1:B272 -  -  -  -  	;jp z,sdcomp_end
  997 D1:B272 -  -  -  -  	;ld (sdcomp_test_lines_stop),a 
  998 D1:B272 -  -  -  -  
  999 D1:B272 -  -  -  -  sdcomp_inc_loops_per_line:	
 1000 D1:B272 -  -  -  -  	;INC LOOP/LINE count
 1001 D1:B272 -  -  -  -  sdcomp_loops_per_line_counter .equ $ + 1
 1002 D1:B272 3E 00 -  -  	ld a,0;inc number of loops
 1003 D1:B274 3C -  -  -  	inc a 
 1004 D1:B275 32 73 B2 D1 	ld (sdcomp_loops_per_line_counter),a
 1005 D1:B279 -  -  -  -  
 1006 D1:B279 -  -  -  -  
 1007 D1:B279 -  -  -  -  	;jp sdcomp_find_gap_length ;TESTING REMOVE
 1008 D1:B279 -  -  -  -  	
 1009 D1:B279 -  -  -  -  	;Check the timer to see if we need to begin rendering next frame 
 1010 D1:B279 -  -  -  -  	;1090 cycles @ 32768hz ~= 1 frame (1/30s)
 1011 D1:B279 -  -  -  -  	;Should stop decompressions at 1000 cycles?
 1012 D1:B279 -  -  -  -  	; = %00000011, 11100000
 1013 D1:B279 -  -  -  -  sdcomp_clock_check_loop:
 1014 D1:B279 3A 01 00 F2 	ld a,($F20001);128hz clock
 1015 D1:B27D FE 03 -  -  	cp %00000011 ;check if reached 3 
 1016 D1:B27F DA DB B1 D1 	jp c,sdcomp_find_gap_length ;msb <= 2, can continue  
 1017 D1:B283 3A 00 00 F2 	ld a,($F20000);32768hz clock
 1018 D1:B287 FE E0 -  -  	cp %11100000;check if reached value 
 1019 D1:B289 DA DB B1 D1 	jp c,sdcomp_find_gap_length ;msb = 3 and lsb < value, can continue
 1020 D1:B28D -  -  -  -  	
 1021 D1:B28D -  -  -  -  	;Past clock threshold, need to stop decompressions
 1022 D1:B28D -  -  -  -  
 1023 D1:B28D -  -  -  -  
 1024 D1:B28D -  -  -  -  	;TODO can prob not need to save (a) register
 1025 D1:B28D -  -  -  -  sdcomp_interrupt:
 1026 D1:B28D -  -  -  -  
 1027 D1:B28D -  -  -  -  
 1028 D1:B28D -  -  -  -  	;not in shadow 
 1029 D1:B28D 22 B9 B2 D1 	ld (sdcomp_cont_hl),hl 
 1030 D1:B291 EB -  -  -  	ex de,hl
 1031 D1:B292 22 BD B2 D1 	ld (sdcomp_cont_de),hl 
 1032 D1:B296 C5 -  -  -  	push bc
 1033 D1:B297 E1 -  -  -  	pop hl
 1034 D1:B298 22 C1 B2 D1 	ld (sdcomp_cont_bc),hl
 1035 D1:B29C 32 C5 B2 D1 	ld (sdcomp_cont_a),a 
 1036 D1:B2A0 D9 -  -  -  	exx 
 1037 D1:B2A1 08 -  -  -  	ex af,af' ;'
 1038 D1:B2A2 22 C9 B2 D1 	ld (sdcomp_cont_hlP),hl 
 1039 D1:B2A6 EB -  -  -  	ex de,hl
 1040 D1:B2A7 22 CD B2 D1 	ld (sdcomp_cont_deP),hl 
 1041 D1:B2AB C5 -  -  -  	push bc 
 1042 D1:B2AC E1 -  -  -  	pop hl
 1043 D1:B2AD 22 D1 B2 D1 	ld (sdcomp_cont_bcP),hl
 1044 D1:B2B1 32 D5 B2 D1 	ld (sdcomp_cont_aP),a 
 1045 D1:B2B5 -  -  -  -  	
 1046 D1:B2B5 -  -  -  -  	
 1047 D1:B2B5 -  -  -  -  	;ld a, $AA
 1048 D1:B2B5 -  -  -  -  	;call write_a_to_ram
 1049 D1:B2B5 -  -  -  -  	
 1050 D1:B2B5 3E 01 -  -  	ld a,1 ;Return 1 if interrupted
 1051 D1:B2B7 C9 -  -  -  	ret 
 1052 D1:B2B8 -  -  -  -  	
 1053 D1:B2B8 -  -  -  -  sdcomp_continue:
 1054 D1:B2B8 -  -  -  -  	;not in shadow 
 1055 D1:B2B8 -  -  -  -  sdcomp_cont_hl .equ $ + 1
 1056 D1:B2B8 21 00 00 00 	ld hl,0
 1057 D1:B2BC -  -  -  -  sdcomp_cont_de .equ $ + 1
 1058 D1:B2BC 11 00 00 00 	ld de,0
 1059 D1:B2C0 -  -  -  -  sdcomp_cont_bc .equ $ + 1
 1060 D1:B2C0 01 00 00 00 	ld bc,0
 1061 D1:B2C4 -  -  -  -  sdcomp_cont_a .equ $ + 1
 1062 D1:B2C4 3E 00 -  -  	ld a,0
 1063 D1:B2C6 D9 -  -  -  	exx 
 1064 D1:B2C7 08 -  -  -  	ex af,af' ;'
 1065 D1:B2C8 -  -  -  -  sdcomp_cont_hlP .equ $ + 1
 1066 D1:B2C8 21 00 00 00 	ld hl,0
 1067 D1:B2CC -  -  -  -  sdcomp_cont_deP .equ $ + 1
 1068 D1:B2CC 11 00 00 00 	ld de,0
 1069 D1:B2D0 -  -  -  -  sdcomp_cont_bcP .equ $ + 1
 1070 D1:B2D0 01 00 00 00 	ld bc,0
 1071 D1:B2D4 -  -  -  -  sdcomp_cont_aP .equ $ + 1
 1072 D1:B2D4 3E 00 -  -  	ld a,0	
 1073 D1:B2D6 -  -  -  -  	
 1074 D1:B2D6 D9 -  -  -  	exx ;out of shadow 
 1075 D1:B2D7 08 -  -  -  	ex af,af' ;'
 1076 D1:B2D8 -  -  -  -  
 1077 D1:B2D8 C3 DB B1 D1 	jp sdcomp_find_gap_length
 1078 D1:B2DC -  -  -  -  
 1079 D1:B2DC -  -  -  -  	
 1080 D1:B2DC -  -  -  -  
 1081 D1:B2DC -  -  -  -  sdcomp_end:
 1082 D1:B2DC -  -  -  -  	
 1083 D1:B2DC -  -  -  -  	;ld a,$69
 1084 D1:B2DC -  -  -  -  	;call write_a_to_ram
 1085 D1:B2DC -  -  -  -  	
 1086 D1:B2DC 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1087 D1:B2DE 32 0A B2 D1 	ld (sdcomp_end_reached_flag),a 
 1088 D1:B2E2 -  -  -  -  	
 1089 D1:B2E2 3E 00 -  -  	ld a,0 ;return 0 if finished decompressing 
 1090 D1:B2E4 C9 -  -  -  	ret 
 1091 D1:B2E5 -  -  -  -  
 1092 D1:B2E5 -  -  -  -  
 1093 D1:B2E5 -  -  -  -  ;bit orders
 1094 D1:B2E5 -  -  -  -  ;	noflip   flip 
 1095 D1:B2E5 -  -  -  -  ;4bpp 3210 	 0123
 1096 D1:B2E5 -  -  -  -  ;3bpp 210	 012
 1097 D1:B2E5 -  -  -  -  ;2bpp 10	 01
 1098 D1:B2E5 -  -  -  -  ;1bpp 0		 0
 1099 D1:B2E5 -  -  -  -  
 1100 D1:B2E5 -  -  -  -  
 1101 D1:B2E5 -  -  -  -  sdcomp_set_0bpc:
 1102 D1:B2E5 3E DA -  -  	ld a,%11011010;jp c
 1103 D1:B2E7 32 F6 AF D1 	ld (sdcomp_0bpc),a
 1104 D1:B2EB -  -  -  -  	
 1105 D1:B2EB 32 9D B1 D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
 1106 D1:B2EF 32 A8 B1 D1 	ld (sdcomp_3bpc_1),a 
 1107 D1:B2F3 -  -  -  -  	
 1108 D1:B2F3 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1109 D1:B2F5 32 92 B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1110 D1:B2F9 3E 00 -  -  	ld a,%00000000
 1111 D1:B2FB 32 B7 B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1112 D1:B2FF C9 -  -  -  	ret 
 1113 D1:B300 -  -  -  -  	
 1114 D1:B300 -  -  -  -  sdcomp_set_1bpc:
 1115 D1:B300 3E D2 -  -  	ld a,%11010010;jp nc
 1116 D1:B302 32 F6 AF D1 	ld (sdcomp_0bpc),a
 1117 D1:B306 3E DA -  -  	ld a,%11011010;jp c
 1118 D1:B308 32 08 B0 D1 	ld (sdcomp_1bpc),a
 1119 D1:B30C -  -  -  -  	
 1120 D1:B30C 32 9D B1 D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
 1121 D1:B310 32 A8 B1 D1 	ld (sdcomp_3bpc_1),a 
 1122 D1:B314 -  -  -  -  	
 1123 D1:B314 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1124 D1:B316 32 92 B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1125 D1:B31A -  -  -  -  	
 1126 D1:B31A -  -  -  -  	
 1127 D1:B31A 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1128 D1:B31C 32 06 B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1129 D1:B320 -  -  -  -  	
 1130 D1:B320 3E 80 -  -  	ld a,%10000000
 1131 D1:B322 32 B7 B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1132 D1:B326 -  -  -  -  	
 1133 D1:B326 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1134 D1:B328 32 B0 B0 D1 	ld (sdcomp_traverse_2bpp),a
 1135 D1:B32C 32 B2 B0 D1 	ld (sdcomp_traverse_3bpp),a
 1136 D1:B330 32 B4 B0 D1 	ld (sdcomp_traverse_4bpp),a
 1137 D1:B334 C9 -  -  -  	ret 
 1138 D1:B335 -  -  -  -  
 1139 D1:B335 -  -  -  -  sdcomp_set_2bpc:
 1140 D1:B335 3E D2 -  -  	ld a,%11010010;jp nc
 1141 D1:B337 32 F6 AF D1 	ld (sdcomp_0bpc),a
 1142 D1:B33B 32 08 B0 D1 	ld (sdcomp_1bpc),a
 1143 D1:B33F -  -  -  -  	
 1144 D1:B33F 3E DA -  -  	ld a,%11011010;jp c
 1145 D1:B341 32 1A B0 D1 	ld (sdcomp_2bpc),a
 1146 D1:B345 -  -  -  -  	
 1147 D1:B345 32 A8 B1 D1 	ld (sdcomp_3bpc_1),a ;for setting local pallete data
 1148 D1:B349 -  -  -  -  	
 1149 D1:B349 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1150 D1:B34B 32 92 B1 D1 	ld (sdcomp_1bpc_1),a;for setting local pallete data
 1151 D1:B34F 32 9D B1 D1 	ld (sdcomp_2bpc_1),a 
 1152 D1:B353 -  -  -  -  	
 1153 D1:B353 37 -  -  -  	scf 
 1154 D1:B354 -  -  -  -  sdcomp_flip_2bpc .equ $ 
 1155 D1:B354 D2 65 B3 D1 	jp nc, sdcomp_2bpc_flip
 1156 D1:B358 -  -  -  -  	
 1157 D1:B358 3E CB -  -  	ld a,%11001011 ;set 1,e
 1158 D1:B35A 32 06 B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1159 D1:B35E 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1160 D1:B360 32 18 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1161 D1:B364 -  -  -  -  	
 1162 D1:B364 C9 -  -  -  	ret 
 1163 D1:B365 -  -  -  -  	
 1164 D1:B365 -  -  -  -  sdcomp_2bpc_flip:
 1165 D1:B365 3E CB -  -  	ld a,%11001011 ;set 1,e
 1166 D1:B367 32 18 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1167 D1:B36B 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1168 D1:B36D 32 06 B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1169 D1:B371 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1170 D1:B373 32 B0 B0 D1 	ld (sdcomp_traverse_2bpp),a
 1171 D1:B377 -  -  -  -  
 1172 D1:B377 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1173 D1:B379 32 B2 B0 D1 	ld (sdcomp_traverse_3bpp),a
 1174 D1:B37D 32 B4 B0 D1 	ld (sdcomp_traverse_4bpp),a
 1175 D1:B381 -  -  -  -  	
 1176 D1:B381 3E C0 -  -  	ld a,%11000000
 1177 D1:B383 32 B7 B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1178 D1:B387 C9 -  -  -  	ret 
 1179 D1:B388 -  -  -  -  
 1180 D1:B388 -  -  -  -  
 1181 D1:B388 -  -  -  -  sdcomp_set_3bpc:
 1182 D1:B388 -  -  -  -  	
 1183 D1:B388 3E D2 -  -  	ld a,%11010010;jp nc
 1184 D1:B38A 32 F6 AF D1 	ld (sdcomp_0bpc),a
 1185 D1:B38E 32 08 B0 D1 	ld (sdcomp_1bpc),a
 1186 D1:B392 32 1A B0 D1 	ld (sdcomp_2bpc),a
 1187 D1:B396 -  -  -  -  	
 1188 D1:B396 3E DA -  -  	ld a,%11011010;jp c
 1189 D1:B398 32 2C B0 D1 	ld (sdcomp_3bpc),a
 1190 D1:B39C -  -  -  -  	
 1191 D1:B39C 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1192 D1:B39E 32 92 B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1193 D1:B3A2 32 9D B1 D1 	ld (sdcomp_2bpc_1),a 
 1194 D1:B3A6 32 A8 B1 D1 	ld (sdcomp_3bpc_1),a 
 1195 D1:B3AA -  -  -  -  	
 1196 D1:B3AA 37 -  -  -  	scf 
 1197 D1:B3AB -  -  -  -  sdcomp_flip_3bpc .equ $ 
 1198 D1:B3AB D2 C2 B3 D1 	jp nc, sdcomp_3bpc_flip	
 1199 D1:B3AF -  -  -  -  	
 1200 D1:B3AF 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1201 D1:B3B1 32 06 B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1202 D1:B3B5 3E CB -  -  	ld a,%11001011 ;set 1,e
 1203 D1:B3B7 32 18 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1204 D1:B3BB 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1205 D1:B3BD 32 2A B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1206 D1:B3C1 -  -  -  -  	
 1207 D1:B3C1 C9 -  -  -  	ret 
 1208 D1:B3C2 -  -  -  -  	
 1209 D1:B3C2 -  -  -  -  sdcomp_3bpc_flip:
 1210 D1:B3C2 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1211 D1:B3C4 32 2A B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1212 D1:B3C8 3E CB -  -  	ld a,%11001011 ;set 1,e
 1213 D1:B3CA 32 18 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1214 D1:B3CE 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1215 D1:B3D0 32 06 B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1216 D1:B3D4 -  -  -  -  	
 1217 D1:B3D4 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1218 D1:B3D6 32 B0 B0 D1 	ld (sdcomp_traverse_2bpp),a 
 1219 D1:B3DA 32 B2 B0 D1 	ld (sdcomp_traverse_3bpp),a 
 1220 D1:B3DE -  -  -  -  	
 1221 D1:B3DE 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1222 D1:B3E0 32 B4 B0 D1 	ld (sdcomp_traverse_4bpp),a
 1223 D1:B3E4 -  -  -  -  	
 1224 D1:B3E4 3E E0 -  -  	ld a,%11100000
 1225 D1:B3E6 32 B7 B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1226 D1:B3EA -  -  -  -  	
 1227 D1:B3EA C9 -  -  -  	ret 
 1228 D1:B3EB -  -  -  -  
 1229 D1:B3EB -  -  -  -  sdcomp_set_4bpc:
 1230 D1:B3EB -  -  -  -  
 1231 D1:B3EB 3E D2 -  -  	ld a,%11010010;jp nc
 1232 D1:B3ED 32 F6 AF D1 	ld (sdcomp_0bpc),a
 1233 D1:B3F1 32 08 B0 D1 	ld (sdcomp_1bpc),a
 1234 D1:B3F5 32 1A B0 D1 	ld (sdcomp_2bpc),a
 1235 D1:B3F9 -  -  -  -  
 1236 D1:B3F9 3E DA -  -  	ld a,%11011010;jp c
 1237 D1:B3FB -  -  -  -  
 1238 D1:B3FB 32 92 B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1239 D1:B3FF 32 9D B1 D1 	ld (sdcomp_2bpc_1),a 
 1240 D1:B403 32 A8 B1 D1 	ld (sdcomp_3bpc_1),a 
 1241 D1:B407 -  -  -  -  	
 1242 D1:B407 37 -  -  -  	scf 
 1243 D1:B408 -  -  -  -  sdcomp_flip_4bpc .equ $ 
 1244 D1:B408 D2 25 B4 D1 	jp nc, sdcomp_4bpc_flip	
 1245 D1:B40C 3E DB -  -  	ld a,%11011011 ;set 3,e
 1246 D1:B40E 32 06 B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1247 D1:B412 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1248 D1:B414 32 18 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1249 D1:B418 3E CB -  -  	ld a,%11001011 ;set 1,e
 1250 D1:B41A 32 2A B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1251 D1:B41E 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1252 D1:B420 32 3C B0 D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
 1253 D1:B424 C9 -  -  -  	ret 
 1254 D1:B425 -  -  -  -  sdcomp_4bpc_flip:
 1255 D1:B425 3E DB -  -  	ld a,%11011011 ;set 3,e
 1256 D1:B427 32 3C B0 D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
 1257 D1:B42B 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1258 D1:B42D 32 2A B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1259 D1:B431 3E CB -  -  	ld a,%11001011 ;set 1,e
 1260 D1:B433 32 18 B0 D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1261 D1:B437 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1262 D1:B439 32 06 B0 D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1263 D1:B43D 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1264 D1:B43F 32 B0 B0 D1 	ld (sdcomp_traverse_2bpp),a 
 1265 D1:B443 32 B2 B0 D1 	ld (sdcomp_traverse_3bpp),a 
 1266 D1:B447 32 B4 B0 D1 	ld (sdcomp_traverse_4bpp),a 
 1267 D1:B44B -  -  -  -  	
 1268 D1:B44B 3E F0 -  -  	ld a,%11110000
 1269 D1:B44D 32 B7 B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1270 D1:B451 -  -  -  -  	
 1271 D1:B451 C9 -  -  -  	ret 
 1272 D1:B452 -  -  -  -  	
 1273 D1:B452 -  -  -  -  	
 1274 D1:B452 -  -  -  -  sdcomp_set_noalpha:
 1275 D1:B452 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1276 D1:B454 32 77 AF D1 	ld (sdcomp_no_alpha_1),a 
 1277 D1:B458 3E DA -  -  	ld a,%11011010;jp c
 1278 D1:B45A 32 77 B1 D1 	ld (sdcomp_no_alpha_2),a 
 1279 D1:B45E 32 A8 B0 D1 	ld (sdcomp_no_alpha_3),a 
 1280 D1:B462 C9 -  -  -  	ret
 1281 D1:B463 -  -  -  -  	
 1282 D1:B463 -  -  -  -  sdcomp_reset_noalpha:
 1283 D1:B463 -  -  -  -  
 1284 D1:B463 3E DA -  -  	ld a,%11011010;jp c
 1285 D1:B465 32 77 AF D1 	ld (sdcomp_no_alpha_1),a 
 1286 D1:B469 3E D2 -  -  	ld a, %11010010 ;jp nc
 1287 D1:B46B 32 77 B1 D1 	ld (sdcomp_no_alpha_2),a 
 1288 D1:B46F 3E CA -  -  	ld a, %11001010 ;jp z
 1289 D1:B471 32 A8 B0 D1 	ld (sdcomp_no_alpha_3),a 
 1290 D1:B475 C9 -  -  -  	ret
 1291 D1:B476 -  -  -  -  
 1292 D1:B476 -  -  -  -  
 1293 D1:B476 -  -  -  -  sdcomp_set_offset:
 1294 D1:B476 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1295 D1:B478 32 9F AF D1 	ld (sdcomp_offset_1),a 
 1296 D1:B47C 32 63 AF D1 	ld (sdcomp_bit_offset),a 
 1297 D1:B480 3E 04 -  -  	ld a,%00000100 ;inc b 
 1298 D1:B482 32 5F B1 D1 	ld (sdcomp_offset_2),a 
 1299 D1:B486 -  -  -  -  	
 1300 D1:B486 C9 -  -  -  	ret 
 1301 D1:B487 -  -  -  -  
 1302 D1:B487 -  -  -  -  sdcomp_reset_offset:
 1303 D1:B487 3E DA -  -  	ld a,%11011010;jp c
 1304 D1:B489 32 9F AF D1 	ld (sdcomp_offset_1),a 
 1305 D1:B48D 32 63 AF D1 	ld (sdcomp_bit_offset),a 
 1306 D1:B491 3E 00 -  -  	ld a,%00000000 ;nop
 1307 D1:B493 32 5F B1 D1 	ld (sdcomp_offset_2),a 
 1308 D1:B497 C9 -  -  -  	ret 
 1309 D1:B498 -  -  -  -  	
 1310 D1:B498 -  -  -  -  sdcomp_set_flip:
 1311 D1:B498 3E 01 -  -  	ld a, %00000001 ;rlc c 
 1312 D1:B49A 32 4E AF D1 	ld (sdcomp_flip_bitstream),a
 1313 D1:B49E 3E 2B -  -  	ld a, %00101011 ;dec hl 
 1314 D1:B4A0 32 50 AF D1 	ld (sdcomp_flip_bitstream_2),a 
 1315 D1:B4A4 3E DC -  -  	ld a, %11011100 ;call c 
 1316 D1:B4A6 32 FF B1 D1 	ld (sdcomp_flip_traverse),a 
 1317 D1:B4AA -  -  -  -  	
 1318 D1:B4AA 3E DA -  -  	ld a,%11011010;jp c
 1319 D1:B4AC 32 54 B3 D1 	ld (sdcomp_flip_2bpc),a
 1320 D1:B4B0 32 AB B3 D1 	ld (sdcomp_flip_3bpc),a
 1321 D1:B4B4 32 08 B4 D1 	ld (sdcomp_flip_4bpc),a
 1322 D1:B4B8 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1323 D1:B4BA 32 CB B1 D1 	ld (sdcomp_flip_setup),a 
 1324 D1:B4BE -  -  -  -  	
 1325 D1:B4BE C9 -  -  -  	ret 
 1326 D1:B4BF -  -  -  -  
 1327 D1:B4BF -  -  -  -  sdcomp_reset_flip:
 1328 D1:B4BF 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1329 D1:B4C1 32 4E AF D1 	ld (sdcomp_flip_bitstream),a
 1330 D1:B4C5 3E 23 -  -  	ld a, %00100011 ;inc hl 
 1331 D1:B4C7 32 50 AF D1 	ld (sdcomp_flip_bitstream_2),a 
 1332 D1:B4CB 3E D4 -  -  	ld a, %11010100 ;call nc 
 1333 D1:B4CD 32 FF B1 D1 	ld (sdcomp_flip_traverse),a 
 1334 D1:B4D1 -  -  -  -  	
 1335 D1:B4D1 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1336 D1:B4D3 32 54 B3 D1 	ld (sdcomp_flip_2bpc),a
 1337 D1:B4D7 32 AB B3 D1 	ld (sdcomp_flip_3bpc),a
 1338 D1:B4DB 32 08 B4 D1 	ld (sdcomp_flip_4bpc),a
 1339 D1:B4DF 3E DA -  -  	ld a,%11011010;jp c
 1340 D1:B4E1 32 CB B1 D1 	ld (sdcomp_flip_setup),a 
 1341 D1:B4E5 C9 -  -  -  	ret 
 1342 D1:B4E6 -  -  -  -  
 1343 D1:B4E6 -  -  -  -  
 1344 D1:B4E6 -  -  -  -  sdcomp_set_fast:
 1345 D1:B4E6 3E DA -  -  	ld a,%11011010;jp c
 1346 D1:B4E8 32 20 B2 D1 	ld(sdcomp_fast_1),a 
 1347 D1:B4EC 32 39 B2 D1 	ld(sdcomp_fast_2),a 
 1348 D1:B4F0 32 5F B2 D1 	ld(sdcomp_fast_3),a 
 1349 D1:B4F4 -  -  -  -  	
 1350 D1:B4F4 C9 -  -  -  	ret 
 1351 D1:B4F5 -  -  -  -  
 1352 D1:B4F5 -  -  -  -  sdcomp_reset_fast:
 1353 D1:B4F5 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1354 D1:B4F7 32 20 B2 D1 	ld(sdcomp_fast_1),a 
 1355 D1:B4FB 32 39 B2 D1 	ld(sdcomp_fast_2),a 
 1356 D1:B4FF 32 5F B2 D1 	ld(sdcomp_fast_3),a 
 1357 D1:B503 -  -  -  -  	
 1358 D1:B503 C9 -  -  -  	ret 
 1359 D1:B504 -  -  -  -  
 1360 D1:B504 -  -  -  -  
 1361 D1:B504 -  -  -  -  
 1362 D1:B504 -  -  -  -  
 1363 D1:B504 -  -  -  -  
 1364 D1:B504 -  -  -  -  
Listing for file "ascent.asm"
  597 D1:B504 -  -  -  -  #include "drawFG.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFG.txt"
    1 D1:B504 -  -  -  -  
    2 D1:B504 -  -  -  -  FGMaxSpriteHeight .equ 120
    3 D1:B504 -  -  -  -  
    4 D1:B504 -  -  -  -  draw_fg_setup:
    5 D1:B504 3E D2 -  -  	ld a, %11010010 ;jp nc
    6 D1:B506 32 FC B5 D1 	ld (dfgs_bg_mode_1),a 
    7 D1:B50A 32 60 B6 D1 	ld (dfgs_bg_mode_2),a 
    8 D1:B50E -  -  -  -  
    9 D1:B50E 2A EC AB D1 	ld hl,(draw_buffer)
   10 D1:B512 22 0C B6 D1 	ld (dfgs_vram_top_1),hl
   11 D1:B516 22 C1 B6 D1 	ld (dfgs_vram_top_2),hl
   12 D1:B51A 01 00 96 00 	ld bc,160*240
   13 D1:B51E 09 -  -  -  	add hl,bc
   14 D1:B51F 22 7C B6 D1 	ld (dfgs_vram_bottom_1),hl 
   15 D1:B523 22 9C B6 D1 	ld (dfgs_vram_bottom_2),hl 
   16 D1:B527 22 28 B7 D1 	ld (dfgs_vram_bottom_3),hl 
   17 D1:B52B 22 48 B7 D1 	ld (dfgs_vram_bottom_4),hl 
   18 D1:B52F C9 -  -  -  	ret 
   19 D1:B530 -  -  -  -  
   20 D1:B530 -  -  -  -  
   21 D1:B530 -  -  -  -  draw_fg_setup_2:
   22 D1:B530 01 EF 00 00 	ld bc,239
   23 D1:B534 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of fg layer
   24 D1:B535 7D -  -  -  	ld a,l ;lsb cam pos, = line number in middle frame
   25 D1:B536 32 CA B5 D1 	ld (dfgs_cam_height_1),a
   26 D1:B53A 32 65 B6 D1 	ld (dfgs_cam_height_2),a ;y value in dataframe of uppermost line of viewport
   27 D1:B53E 32 F9 B6 D1 	ld (dfgs_cam_height_3),a
   28 D1:B542 32 13 B7 D1 	ld (dfgs_cam_height_4),a	
   29 D1:B546 ED 44 -  -  	neg 
   30 D1:B548 32 01 B6 D1 	ld (dfgs_viewport_to_upper_frame),a ;1 = top line of VP is top line of middle frame
   31 D1:B54C ED 44 -  -  	neg 
   32 D1:B54E D6 EF -  -  	sub 239
   33 D1:B550 32 1C B7 D1 	ld (dfgs_viewport_bottom_y),a
   34 D1:B554 -  -  -  -  	
   35 D1:B554 01 00 00 00 	ld bc,0
   36 D1:B558 4C -  -  -  	ld c,h;msb ccam pos 
   37 D1:B559 0C -  -  -  	inc c 
   38 D1:B55A -  -  -  -  	
   39 D1:B55A C9 -  -  -  	ret 
   40 D1:B55B -  -  -  -  
   41 D1:B55B -  -  -  -  draw_mg:
   42 D1:B55B -  -  -  -  
   43 D1:B55B CD 04 B5 D1 	call draw_fg_setup
   44 D1:B55F -  -  -  -  	
   45 D1:B55F 2A E6 AB D1 	ld hl,(cam_pos)
   46 D1:B563 CB 3C -  -  	srl h ;div by 2
   47 D1:B565 CB 1D -  -  	rr l 
   48 D1:B567 -  -  -  -  	
   49 D1:B567 CD 30 B5 D1 	call draw_fg_setup_2
   50 D1:B56B -  -  -  -  
   51 D1:B56B 21 FE C9 D1 	ld hl,MG_Data_frame_table
   52 D1:B56F 09 -  -  -  	add hl,bc
   53 D1:B570 09 -  -  -  	add hl,bc 
   54 D1:B571 09 -  -  -  	add hl,bc 	
   55 D1:B572 ED 27 -  -  	ld hl,(hl);upper frame 
   56 D1:B574 -  -  -  -  	
   57 D1:B574 CD B1 B5 D1 	call draw_fg_sprites
   58 D1:B578 C9 -  -  -  	ret
   59 D1:B579 -  -  -  -  
   60 D1:B579 -  -  -  -  draw_mg2:
   61 D1:B579 -  -  -  -  
   62 D1:B579 CD 04 B5 D1 	call draw_fg_setup
   63 D1:B57D -  -  -  -  	
   64 D1:B57D 2A E6 AB D1 	ld hl,(cam_pos)
   65 D1:B581 CB 3C -  -  	srl h ;div by 2
   66 D1:B583 CB 1D -  -  	rr l 
   67 D1:B585 -  -  -  -  	
   68 D1:B585 CD 30 B5 D1 	call draw_fg_setup_2
   69 D1:B589 -  -  -  -  
   70 D1:B589 21 90 CC D1 	ld hl,MG2_Data_frame_table
   71 D1:B58D 09 -  -  -  	add hl,bc
   72 D1:B58E 09 -  -  -  	add hl,bc 
   73 D1:B58F 09 -  -  -  	add hl,bc 	
   74 D1:B590 ED 27 -  -  	ld hl,(hl);upper frame 
   75 D1:B592 -  -  -  -  
   76 D1:B592 CD B1 B5 D1 	call draw_fg_sprites
   77 D1:B596 C9 -  -  -  	ret
   78 D1:B597 -  -  -  -  	
   79 D1:B597 -  -  -  -  
   80 D1:B597 -  -  -  -  draw_fg:
   81 D1:B597 -  -  -  -  
   82 D1:B597 CD 04 B5 D1 	call draw_fg_setup
   83 D1:B59B -  -  -  -  	
   84 D1:B59B 2A E6 AB D1 	ld hl,(cam_pos)
   85 D1:B59F -  -  -  -  	
   86 D1:B59F CD 30 B5 D1 	call draw_fg_setup_2
   87 D1:B5A3 -  -  -  -  	
   88 D1:B5A3 21 82 CD D1 	ld hl,FG_Data_frame_table
   89 D1:B5A7 09 -  -  -  	add hl,bc
   90 D1:B5A8 09 -  -  -  	add hl,bc 
   91 D1:B5A9 09 -  -  -  	add hl,bc 	
   92 D1:B5AA ED 27 -  -  	ld hl,(hl);upper frame 
   93 D1:B5AC -  -  -  -  
   94 D1:B5AC CD B1 B5 D1 	call draw_fg_sprites
   95 D1:B5B0 C9 -  -  -  	ret
   96 D1:B5B1 -  -  -  -  
   97 D1:B5B1 -  -  -  -  
   98 D1:B5B1 -  -  -  -  ; Upper Frame =======================================================================================================
   99 D1:B5B1 -  -  -  -  ; Upper Frame =======================================================================================================
  100 D1:B5B1 -  -  -  -  ;hl = upper frame data
  101 D1:B5B1 -  -  -  -   
  102 D1:B5B1 -  -  -  -  ;load cam height 123,vram top 12 vram bottom 1234
  103 D1:B5B1 -  -  -  -  draw_fg_sprites:
  104 D1:B5B1 -  -  -  -  	;UPPER FRAME, bottom of upper frame is not on screen, bottom of mid frame is on screen bottom of lower is not on screen
  105 D1:B5B1 CD 92 B8 D1 	call sprite_table_from_index
  106 D1:B5B5 ED 53 89 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de ;write sprite table ptr to required locations 
  107 D1:B5BA ED 53 CB B7 
              D1 -  -  -  	ld (dfgs_sprite_pointers_2),de 
  108 D1:B5BF ED 53 1C AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  109 D1:B5C4 -  -  -  -  	
  110 D1:B5C4 11 00 00 00 	ld de,0
  111 D1:B5C8 23 -  -  -  	inc hl;past data table 
  112 D1:B5C9 -  -  -  -  	;hl is number of elements
  113 D1:B5C9 -  -  -  -  	
  114 D1:B5C9 -  -  -  -  	
  115 D1:B5C9 -  -  -  -  	;if cam is far below upper frame, can skip upper frame 
  116 D1:B5C9 -  -  -  -  dfgs_cam_height_1 .equ $ + 1
  117 D1:B5C9 3E 00 -  -  	ld a,0 
  118 D1:B5CB FE 78 -  -  	cp FGMaxSpriteHeight
  119 D1:B5CD D2 DF B5 D1 	jp nc, dfgs_do_upper_loop
  120 D1:B5D1 -  -  -  -  	;cam too low for upper frame sprites to be drawn
  121 D1:B5D1 01 00 00 00 	ld bc,0
  122 D1:B5D5 4E -  -  -  	ld c,(hl) ;bc holds number of elements
  123 D1:B5D6 09 -  -  -  	add hl,bc 
  124 D1:B5D7 09 -  -  -  	add hl,bc 
  125 D1:B5D8 09 -  -  -  	add hl,bc 
  126 D1:B5D9 09 -  -  -  	add hl,bc;hl points to end of current frame data 
  127 D1:B5DA 23 -  -  -  	inc hl;start of next frame
  128 D1:B5DB C3 2B B6 D1 	jp dfgs_mid_start ;skip upper loop
  129 D1:B5DF -  -  -  -  	
  130 D1:B5DF -  -  -  -  	
  131 D1:B5DF -  -  -  -  dfgs_do_upper_loop:	
  132 D1:B5DF 08 -  -  -  	ex af,af' ;'
  133 D1:B5E0 -  -  -  -  	
  134 D1:B5E0 7E -  -  -  	ld a,(hl);number of elements
  135 D1:B5E1 -  -  -  -  	;TESTING
  136 D1:B5E1 -  -  -  -  	;call write_a_to_ram
  137 D1:B5E1 -  -  -  -  	;call prgmpause
  138 D1:B5E1 -  -  -  -  	;TESTING
  139 D1:B5E1 -  -  -  -  	
  140 D1:B5E1 3C -  -  -  	inc a ;to be decd later
  141 D1:B5E2 08 -  -  -  	ex af,af' ;'
  142 D1:B5E3 23 -  -  -  	inc hl;hl points to first sprite in upper frame  
  143 D1:B5E4 -  -  -  -  
  144 D1:B5E4 -  -  -  -  dfgs_upper_loop:;Want to check for sprites in upper frame that extend to lower frame 
  145 D1:B5E4 -  -  -  -  
  146 D1:B5E4 08 -  -  -  	ex af,af';'
  147 D1:B5E5 3D -  -  -  	dec a ;dec number of elements
  148 D1:B5E6 -  -  -  -  	;call write_a_to_ram
  149 D1:B5E6 CA 2B B6 D1 	jp z,dfgs_mid_start 
  150 D1:B5EA 08 -  -  -  	ex af,af';'
  151 D1:B5EB -  -  -  -  
  152 D1:B5EB 7E -  -  -  	ld a,(hl);sprite y value 
  153 D1:B5EC 23 -  -  -  	inc hl ;to height
  154 D1:B5ED -  -  -  -  	
  155 D1:B5ED -  -  -  -  	;call write_a_to_ram
  156 D1:B5ED -  -  -  -  	;call prgmpause
  157 D1:B5ED CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  158 D1:B5EF C2 92 B7 D1 	jp nz, dfgs_sg_upper ;goto group loop 
  159 D1:B5F3 -  -  -  -  	
  160 D1:B5F3 -  -  -  -  	;otherwise single sprite, call draw routine 
  161 D1:B5F3 CD FB B5 D1 	call dfgs_draw_upper_sprite
  162 D1:B5F7 -  -  -  -  	
  163 D1:B5F7 C3 E4 B5 D1 	jp dfgs_upper_loop
  164 D1:B5FB -  -  -  -  	
  165 D1:B5FB -  -  -  -  
  166 D1:B5FB -  -  -  -  ;Can be used for normal sprites and in sprite groups 
  167 D1:B5FB -  -  -  -  ;a holds y pos in upper frame, hl pts to sprite height 
  168 D1:B5FB -  -  -  -  dfgs_draw_upper_sprite:
  169 D1:B5FB -  -  -  -  
  170 D1:B5FB 37 -  -  -  	scf 
  171 D1:B5FC -  -  -  -  dfgs_bg_mode_1 .equ $ 
  172 D1:B5FC D2 D1 AD D1 	jp nc, dbgl_draw_upper_sprite ;if bg mode go to bg draw routine
  173 D1:B600 -  -  -  -  
  174 D1:B600 -  -  -  -  
  175 D1:B600 -  -  -  -  dfgs_viewport_to_upper_frame .equ $ + 1
  176 D1:B600 C6 00 -  -  	add a,0 ;a now holds number of lines to skip in current sprite (1 indexed)
  177 D1:B602 -  -  -  -  	;call write_a_to_ram
  178 D1:B602 DA 27 B6 D1 	jp c, dfgs_upper_skip ;if sprite has large y pos, can carry over
  179 D1:B606 BE -  -  -  	cp (hl) ;compare to sprite height 
  180 D1:B607 D2 27 B6 D1 	jp nc, dfgs_upper_skip ;skips drawing too many lines, sprite is not on screen
  181 D1:B60B -  -  -  -  	;a holds number of lines to skip drawing
  182 D1:B60B -  -  -  -  
  183 D1:B60B -  -  -  -  dfgs_vram_top_1 .equ $ + 1 
  184 D1:B60B 11 00 00 00 	ld de,0;load top of vram 
  185 D1:B60F E5 -  -  -  	push hl ;save height ptr
  186 D1:B610 CD 6F B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  187 D1:B614 -  -  -  -  	
  188 D1:B614 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  189 D1:B616 CA 22 B6 D1 	jp z,dfgs_upper_fast
  190 D1:B61A CD 16 AF D1 	call draw_slow_sprite_top_cut
  191 D1:B61E C3 26 B6 D1 	jp dfgs_upper_skip_2
  192 D1:B622 -  -  -  -  dfgs_upper_fast:
  193 D1:B622 CD 98 AE D1 	call draw_fast_sprite_top_cut
  194 D1:B626 -  -  -  -  dfgs_upper_skip_2:
  195 D1:B626 E1 -  -  -  	pop hl ;hl holds (height)
  196 D1:B627 -  -  -  -  	
  197 D1:B627 -  -  -  -  
  198 D1:B627 -  -  -  -  dfgs_upper_skip:
  199 D1:B627 -  -  -  -  
  200 D1:B627 23 -  -  -  	inc hl ;to x
  201 D1:B628 23 -  -  -  	inc hl ;to index 
  202 D1:B629 23 -  -  -  	inc hl;to y 
  203 D1:B62A -  -  -  -  	
  204 D1:B62A C9 -  -  -  	ret ;end of dfgs_draw_upper_sprite
  205 D1:B62B -  -  -  -  	
  206 D1:B62B -  -  -  -  	;ld a,$AA
  207 D1:B62B -  -  -  -  	;call write_a_to_ram
  208 D1:B62B -  -  -  -  	;call prgmpause
  209 D1:B62B -  -  -  -  	
  210 D1:B62B -  -  -  -  
  211 D1:B62B -  -  -  -  ;MIDDLE FRAME ====================================================================================================
  212 D1:B62B -  -  -  -  	
  213 D1:B62B -  -  -  -  dfgs_mid_start:;MIDDLE FRAME, can be top cut, no cut, or bottom cut ===============================================
  214 D1:B62B -  -  -  -  	
  215 D1:B62B -  -  -  -  	;call prgmpause
  216 D1:B62B -  -  -  -  	
  217 D1:B62B CD 92 B8 D1 	call sprite_table_from_index
  218 D1:B62F ED 53 89 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  219 D1:B634 ED 53 15 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_3),de 
  220 D1:B639 ED 53 1C AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  221 D1:B63E 11 00 00 00 	ld de,0
  222 D1:B642 23 -  -  -  	inc hl;past sprite table ptr
  223 D1:B643 08 -  -  -  	ex af,af' ;'
  224 D1:B644 7E -  -  -  	ld a,(hl);number of elements
  225 D1:B645 3C -  -  -  	inc a 
  226 D1:B646 08 -  -  -  	ex af,af' ;'
  227 D1:B647 -  -  -  -  	
  228 D1:B647 23 -  -  -  	inc hl ;to first y val 
  229 D1:B648 -  -  -  -  dfgs_mid_loop:
  230 D1:B648 -  -  -  -  	
  231 D1:B648 08 -  -  -  	ex af,af';'
  232 D1:B649 3D -  -  -  	dec a 
  233 D1:B64A CA E0 B6 D1 	jp z,dfgs_lower_start ;check for end of data
  234 D1:B64E -  -  -  -  	
  235 D1:B64E 08 -  -  -  	ex af,af';'
  236 D1:B64F -  -  -  -  
  237 D1:B64F -  -  -  -  	;ld a, $AB
  238 D1:B64F -  -  -  -  	;call write_a_to_ram
  239 D1:B64F -  -  -  -  
  240 D1:B64F 7E -  -  -  	ld a,(hl);y val of sprite in dataframe
  241 D1:B650 -  -  -  -  	;call write_a_to_ram
  242 D1:B650 23 -  -  -  	inc hl ;to height
  243 D1:B651 -  -  -  -  	
  244 D1:B651 CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  245 D1:B653 C2 DC B7 D1 	jp nz, dfgs_sg_mid ;goto group loop 
  246 D1:B657 -  -  -  -  	
  247 D1:B657 -  -  -  -  	;otherwise, draw single sprite 
  248 D1:B657 CD 5F B6 D1 	call dfgs_draw_mid_sprite
  249 D1:B65B -  -  -  -  
  250 D1:B65B -  -  -  -  	
  251 D1:B65B C3 48 B6 D1 	jp dfgs_mid_loop
  252 D1:B65F -  -  -  -  	
  253 D1:B65F -  -  -  -  	
  254 D1:B65F -  -  -  -  	
  255 D1:B65F -  -  -  -  	;a = ypos in mid frame, hl pts to height
  256 D1:B65F -  -  -  -  dfgs_draw_mid_sprite:	
  257 D1:B65F -  -  -  -  	
  258 D1:B65F 37 -  -  -  	scf 
  259 D1:B660 -  -  -  -  dfgs_bg_mode_2 .equ $ 
  260 D1:B660 D2 E5 AD D1 	jp nc, dbgl_draw_lower_sprite ;if bg mode go to bg draw routine
  261 D1:B664 -  -  -  -  
  262 D1:B664 -  -  -  -  	;call write_a_to_ram
  263 D1:B664 -  -  -  -  	
  264 D1:B664 -  -  -  -  dfgs_cam_height_2 .equ $ + 1 ;y value in dataframe of uppermost line of viewport
  265 D1:B664 D6 00 -  -  	sub 0;subtract cam pos
  266 D1:B666 -  -  -  -  	;call write_a_to_ram
  267 D1:B666 -  -  -  -  
  268 D1:B666 CA 6E B6 D1 	jp z, dfgs_mid_sprite_topline ;check case where sprite is on top line of viewport
  269 D1:B66A D2 BB B6 D1 	jp nc, dfgs_mid_sprite_above ; carried, sprite is above viewport boundary, a holds num lines to skip
  270 D1:B66E -  -  -  -  dfgs_mid_sprite_topline:
  271 D1:B66E -  -  -  -  
  272 D1:B66E -  -  -  -  	;Sprite is below viewport bound, either full or bottom cut 
  273 D1:B66E -  -  -  -  	
  274 D1:B66E -  -  -  -  	;a = sprite y - cam pos 
  275 D1:B66E 3D -  -  -  	dec a ;for case where sprite pos = cam pos
  276 D1:B66F C6 F0 -  -  	add a,240 
  277 D1:B671 -  -  -  -  
  278 D1:B671 D2 97 B6 D1 	jp nc, dfgs_mid_skip
  279 D1:B675 -  -  -  -  	;a holds y pos above bottom of vp (0 indexed )
  280 D1:B675 3C -  -  -  	inc a 
  281 D1:B676 -  -  -  -  	
  282 D1:B676 -  -  -  -  	
  283 D1:B676 -  -  -  -  	
  284 D1:B676 BE -  -  -  	cp (hl) ;compare to sprite height 
  285 D1:B677 DA 9B B6 D1 	jp c, dfgs_mid_bottom_cut ;height > lines to draw, bottom is cut off 
  286 D1:B67B -  -  -  -  	;otherwise, draw full sprite 
  287 D1:B67B -  -  -  -  	
  288 D1:B67B -  -  -  -  dfgs_vram_bottom_1 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  289 D1:B67B 11 00 00 00 	ld de,0;load bottom of vram 
  290 D1:B67F E5 -  -  -  	push hl ;save height ptr
  291 D1:B680 CD 6F B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  292 D1:B684 -  -  -  -  	
  293 D1:B684 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  294 D1:B686 CA 92 B6 D1 	jp z,dfgs_mid_full_fast
  295 D1:B68A CD D8 AE D1 	call draw_slow_sprite_full
  296 D1:B68E C3 96 B6 D1 	jp dfgs_mid_skip_1
  297 D1:B692 -  -  -  -  dfgs_mid_full_fast:
  298 D1:B692 CD BE AE D1 	call draw_fast_sprite_full
  299 D1:B696 -  -  -  -  dfgs_mid_skip_1:
  300 D1:B696 E1 -  -  -  	pop hl ;hl holds (height)
  301 D1:B697 -  -  -  -  	
  302 D1:B697 -  -  -  -  	
  303 D1:B697 -  -  -  -  dfgs_mid_skip:;sprite is entirely above or below cam pos 
  304 D1:B697 23 -  -  -  	inc hl ;x
  305 D1:B698 23 -  -  -  	inc hl ;index 
  306 D1:B699 23 -  -  -  	inc hl;to y 
  307 D1:B69A -  -  -  -  	
  308 D1:B69A -  -  -  -  	
  309 D1:B69A -  -  -  -  	
  310 D1:B69A C9 -  -  -  	ret
  311 D1:B69B -  -  -  -  	
  312 D1:B69B -  -  -  -  
  313 D1:B69B -  -  -  -  dfgs_mid_bottom_cut:
  314 D1:B69B -  -  -  -  dfgs_vram_bottom_2 .equ $ + 1  ;Bottom Cut SPRITE, a = lines above bottom of viewport
  315 D1:B69B 11 00 00 00 	ld de,0;load bottom of vram 
  316 D1:B69F E5 -  -  -  	push hl ;save height ptr
  317 D1:B6A0 CD 6F B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  318 D1:B6A4 -  -  -  -  	
  319 D1:B6A4 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  320 D1:B6A6 CA B2 B6 D1 	jp z,dfgs_mid_bcut_fast
  321 D1:B6AA CD 43 AF D1 	call draw_slow_sprite_bottom_cut
  322 D1:B6AE C3 B6 B6 D1 	jp dfgs_mid_skip_2
  323 D1:B6B2 -  -  -  -  dfgs_mid_bcut_fast:
  324 D1:B6B2 CD 7B AE D1 	call draw_fast_sprite_bottom_cut
  325 D1:B6B6 -  -  -  -  dfgs_mid_skip_2:
  326 D1:B6B6 E1 -  -  -  	pop hl ;hl holds (height)
  327 D1:B6B7 C3 97 B6 D1 	jp dfgs_mid_skip
  328 D1:B6BB -  -  -  -  
  329 D1:B6BB -  -  -  -  dfgs_mid_sprite_above:
  330 D1:B6BB -  -  -  -  	
  331 D1:B6BB -  -  -  -  	;a holds lines to skip 
  332 D1:B6BB BE -  -  -  	cp (hl) ;compare to height
  333 D1:B6BC D2 97 B6 D1 	jp nc, dfgs_mid_skip ;skip sprite, entirely above viewport
  334 D1:B6C0 -  -  -  -  
  335 D1:B6C0 -  -  -  -  dfgs_vram_top_2 .equ $ + 1
  336 D1:B6C0 11 00 00 00 	ld de,0;top of vram 
  337 D1:B6C4 E5 -  -  -  	push hl ;save height ptr
  338 D1:B6C5 CD 6F B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  339 D1:B6C9 -  -  -  -  	
  340 D1:B6C9 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  341 D1:B6CB CA D7 B6 D1 	jp z,dfgs_mid_tcut_fast
  342 D1:B6CF CD 16 AF D1 	call draw_slow_sprite_top_cut
  343 D1:B6D3 C3 DB B6 D1 	jp dfgs_mid_skip_3
  344 D1:B6D7 -  -  -  -  dfgs_mid_tcut_fast:
  345 D1:B6D7 CD 98 AE D1 	call draw_fast_sprite_top_cut
  346 D1:B6DB -  -  -  -  dfgs_mid_skip_3:
  347 D1:B6DB E1 -  -  -  	pop hl ;hl holds (height)
  348 D1:B6DC C3 97 B6 D1 	jp dfgs_mid_skip
  349 D1:B6E0 -  -  -  -  	
  350 D1:B6E0 -  -  -  -  	
  351 D1:B6E0 -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================		
  352 D1:B6E0 -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================	
  353 D1:B6E0 -  -  -  -  dfgs_lower_start:
  354 D1:B6E0 -  -  -  -  	
  355 D1:B6E0 CD 92 B8 D1 	call sprite_table_from_index
  356 D1:B6E4 ED 53 89 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  357 D1:B6E9 ED 53 5E B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_4),de
  358 D1:B6EE 11 00 00 00 	ld de,0
  359 D1:B6F2 23 -  -  -  	inc hl;past data table 
  360 D1:B6F3 -  -  -  -  	
  361 D1:B6F3 08 -  -  -  	ex af,af' ;'
  362 D1:B6F4 7E -  -  -  	ld a,(hl);number of elements
  363 D1:B6F5 3C -  -  -  	inc a 
  364 D1:B6F6 08 -  -  -  	ex af,af' ;'
  365 D1:B6F7 23 -  -  -  	inc hl
  366 D1:B6F8 -  -  -  -  	
  367 D1:B6F8 -  -  -  -  
  368 D1:B6F8 -  -  -  -  dfgs_cam_height_3 .equ $ + 1 
  369 D1:B6F8 3E 00 -  -  	ld a, 0
  370 D1:B6FA D6 EF -  -  	sub 239
  371 D1:B6FC D0 -  -  -  	ret nc;if bottom frame is offscreen 
  372 D1:B6FD -  -  -  -  
  373 D1:B6FD -  -  -  -  	;a holds y value of viewport bottom line in lower frame 
  374 D1:B6FD -  -  -  -  	
  375 D1:B6FD -  -  -  -  
  376 D1:B6FD -  -  -  -  dfgs_lower_loop:
  377 D1:B6FD -  -  -  -  
  378 D1:B6FD 08 -  -  -  	ex af,af';'
  379 D1:B6FE 3D -  -  -  	dec a 
  380 D1:B6FF C8 -  -  -  	ret z
  381 D1:B700 08 -  -  -  	ex af,af';'
  382 D1:B701 -  -  -  -  	
  383 D1:B701 7E -  -  -  	ld a,(hl);y
  384 D1:B702 -  -  -  -  	;call write_a_to_ram
  385 D1:B702 23 -  -  -  	inc hl ;inc to height
  386 D1:B703 -  -  -  -  	
  387 D1:B703 CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  388 D1:B705 C2 26 B8 D1 	jp nz, dfgs_sg_lower ;goto group loop 
  389 D1:B709 -  -  -  -  	
  390 D1:B709 -  -  -  -  	;otherwise, draw single sprite 
  391 D1:B709 CD 11 B7 D1 	call dfgs_draw_lower_sprite
  392 D1:B70D -  -  -  -  	
  393 D1:B70D C3 FD B6 D1 	jp dfgs_lower_loop
  394 D1:B711 -  -  -  -  
  395 D1:B711 -  -  -  -  	
  396 D1:B711 -  -  -  -  dfgs_draw_lower_sprite: ;a = ypos, hl pts to height
  397 D1:B711 -  -  -  -  	
  398 D1:B711 -  -  -  -  
  399 D1:B711 -  -  -  -  	;call write_a_to_ram
  400 D1:B711 47 -  -  -  	ld b,a ;save
  401 D1:B712 -  -  -  -  dfgs_cam_height_4 .equ $ + 1 
  402 D1:B712 3E 00 -  -  	ld a, 0 ;check if bottom frame is in VP at all
  403 D1:B714 D6 EF -  -  	sub 239
  404 D1:B716 D2 43 B7 D1 	jp nc,dfgs_lower_skip
  405 D1:B71A 78 -  -  -  	ld a,b
  406 D1:B71B -  -  -  -  dfgs_viewport_bottom_y .equ $ + 1
  407 D1:B71B D6 00 -  -  	sub 0;subtract y val of viewport bottom
  408 D1:B71D -  -  -  -  
  409 D1:B71D DA 43 B7 D1 	jp c,dfgs_lower_skip;sprite below screen
  410 D1:B721 -  -  -  -  	
  411 D1:B721 -  -  -  -  	;push af 
  412 D1:B721 -  -  -  -  	;ld a,$A0
  413 D1:B721 -  -  -  -  	;call write_a_to_ram
  414 D1:B721 -  -  -  -  	;pop af
  415 D1:B721 -  -  -  -  	
  416 D1:B721 -  -  -  -  	
  417 D1:B721 3C -  -  -  	inc a
  418 D1:B722 -  -  -  -  	;a holds number of lines to draw 
  419 D1:B722 BE -  -  -  	cp (hl) ;compare to sprite height 
  420 D1:B723 DA 47 B7 D1 	jp c, dfgs_lower_bottom_cut ;bottom is below viewport 
  421 D1:B727 -  -  -  -  	
  422 D1:B727 -  -  -  -  	;draw full sprite 
  423 D1:B727 -  -  -  -  dfgs_vram_bottom_3 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  424 D1:B727 11 00 00 00 	ld de,0;load bottom of vram 
  425 D1:B72B E5 -  -  -  	push hl ;save height ptr
  426 D1:B72C CD 6F B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  427 D1:B730 -  -  -  -  	
  428 D1:B730 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  429 D1:B732 CA 3E B7 D1 	jp z,dfgs_lower_full_fast
  430 D1:B736 CD D8 AE D1 	call draw_slow_sprite_full
  431 D1:B73A C3 42 B7 D1 	jp dfgs_lower_skip_1
  432 D1:B73E -  -  -  -  dfgs_lower_full_fast:
  433 D1:B73E CD BE AE D1 	call draw_fast_sprite_full
  434 D1:B742 -  -  -  -  dfgs_lower_skip_1:
  435 D1:B742 E1 -  -  -  	pop hl ;hl holds (height)
  436 D1:B743 -  -  -  -  
  437 D1:B743 -  -  -  -  	
  438 D1:B743 -  -  -  -  dfgs_lower_skip:;sprite offscreen
  439 D1:B743 23 -  -  -  	inc hl ;x 
  440 D1:B744 23 -  -  -  	inc hl ;index 
  441 D1:B745 23 -  -  -  	inc hl;to y 
  442 D1:B746 -  -  -  -  	;call write_a_to_ram
  443 D1:B746 -  -  -  -  	;ld a,$AD
  444 D1:B746 -  -  -  -  	;call write_a_to_ram
  445 D1:B746 C9 -  -  -  	ret
  446 D1:B747 -  -  -  -  	
  447 D1:B747 -  -  -  -  dfgs_lower_bottom_cut: 
  448 D1:B747 -  -  -  -  dfgs_vram_bottom_4 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  449 D1:B747 11 00 00 00 	ld de,0;load bottom of vram 
  450 D1:B74B E5 -  -  -  	push hl ;save height ptr
  451 D1:B74C CD 6F B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  452 D1:B750 -  -  -  -  	
  453 D1:B750 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  454 D1:B752 CA 5E B7 D1 	jp z,dfgs_lower_bcut_fast ;even= fast
  455 D1:B756 CD 43 AF D1 	call draw_slow_sprite_bottom_cut
  456 D1:B75A C3 62 B7 D1 	jp dfgs_lower_skip_2
  457 D1:B75E -  -  -  -  dfgs_lower_bcut_fast:
  458 D1:B75E CD 7B AE D1 	call draw_fast_sprite_bottom_cut
  459 D1:B762 -  -  -  -  dfgs_lower_skip_2:
  460 D1:B762 E1 -  -  -  	pop hl ;hl holds (height)
  461 D1:B763 C3 43 B7 D1 	jp dfgs_lower_skip
  462 D1:B767 -  -  -  -  	
  463 D1:B767 -  -  -  -  
  464 D1:B767 -  -  -  -  ;===================================================================================================================
  465 D1:B767 -  -  -  -  ;SPRITE GROUPS =====================================================================================================
  466 D1:B767 -  -  -  -  
  467 D1:B767 -  -  -  -  dfgs_sg_setup:
  468 D1:B767 23 -  -  -  	inc hl ;hl points to xPos of sprite group 
  469 D1:B768 7E -  -  -  	ld a,(hl)
  470 D1:B769 32 83 B8 D1 	ld (dfgs_sg_x_origin),a 
  471 D1:B76D 32 0D AE D1 	ld (dbgl_sg_x_origin),a
  472 D1:B771 -  -  -  -  	;call write_a_to_ram
  473 D1:B771 01 00 00 00 	ld bc,0
  474 D1:B775 23 -  -  -  	inc hl ; index 
  475 D1:B776 4E -  -  -  	ld c,(hl) ;sprite group index 
  476 D1:B777 -  -  -  -  
  477 D1:B777 21 25 F3 D1 	ld hl, Sprite_Groups
  478 D1:B77B -  -  -  -  	;ld c,0 ;TESTING
  479 D1:B77B -  -  -  -  
  480 D1:B77B 09 -  -  -  	add hl,bc 
  481 D1:B77C 09 -  -  -  	add hl,bc 
  482 D1:B77D 09 -  -  -  	add hl,bc 
  483 D1:B77E -  -  -  -  	
  484 D1:B77E -  -  -  -  	;hl now points to correct sprite group ptr 
  485 D1:B77E ED 27 -  -  	ld hl, (hl)	
  486 D1:B780 -  -  -  -  	;hl pts to sprite table for this group 
  487 D1:B780 -  -  -  -  
  488 D1:B780 CD 92 B8 D1 	call sprite_table_from_index
  489 D1:B784 ED 53 89 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1), de ;NEed to undo after loop is done 
  490 D1:B789 ED 53 1C AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  491 D1:B78E 23 -  -  -  	inc hl ;to num sprites 
  492 D1:B78F -  -  -  -  
  493 D1:B78F 7E -  -  -  	ld a,(hl) ;num sprites in group
  494 D1:B790 23 -  -  -  	inc hl;first sprite y 
  495 D1:B791 C9 -  -  -  	ret
  496 D1:B792 -  -  -  -  	
  497 D1:B792 -  -  -  -  	;Sprite group in upper frame. a holds y pos of sprite group. HL points to height (unused)
  498 D1:B792 -  -  -  -  dfgs_sg_upper:	
  499 D1:B792 32 A0 B7 D1 	ld (dfgs_sg_upper_y_origin),a
  500 D1:B796 E5 -  -  -  	push hl ;save frame data location (height ptr)
  501 D1:B797 CD 67 B7 D1 	call dfgs_sg_setup ;returns with a = num sprites
  502 D1:B79B -  -  -  -   
  503 D1:B79B 32 B4 B7 D1 	ld (dfgs_sg_upper_count),a 
  504 D1:B79F -  -  -  -  	
  505 D1:B79F -  -  -  -  dfgs_sg_upper_loop:
  506 D1:B79F -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  507 D1:B79F -  -  -  -  	;if no carry, sprite is still in upper frame, a holds pos in upper frame 
  508 D1:B79F -  -  -  -  	;if carry sprite is entirely in mid frame, a holds y pos in mid frame 
  509 D1:B79F -  -  -  -  dfgs_sg_upper_y_origin .equ $ + 1 
  510 D1:B79F 3E 00 -  -  	ld a, 0
  511 D1:B7A1 96 -  -  -  	sub a,(hl)
  512 D1:B7A2 -  -  -  -  	;call write_a_to_ram
  513 D1:B7A2 23 -  -  -  	inc hl ;to height
  514 D1:B7A3 D2 AF B7 D1 	jp nc, dfgs_sg_upper_draw_upper
  515 D1:B7A7 -  -  -  -  	
  516 D1:B7A7 CD 5F B6 D1 	call dfgs_draw_mid_sprite
  517 D1:B7AB C3 B3 B7 D1 	jp dfgs_sg_upper_continue
  518 D1:B7AF -  -  -  -  	;otherwise, sprite is entirely in mid frame, a holds y pos in mid frame
  519 D1:B7AF -  -  -  -  	
  520 D1:B7AF -  -  -  -  	
  521 D1:B7AF -  -  -  -  dfgs_sg_upper_draw_upper:
  522 D1:B7AF CD FB B5 D1 	call dfgs_draw_upper_sprite
  523 D1:B7B3 -  -  -  -  dfgs_sg_upper_continue:
  524 D1:B7B3 -  -  -  -  dfgs_sg_upper_count .equ $ + 1
  525 D1:B7B3 3E 00 -  -  	ld a, 0
  526 D1:B7B5 3D -  -  -  	dec a 
  527 D1:B7B6 32 B4 B7 D1 	ld (dfgs_sg_upper_count),a 
  528 D1:B7BA C2 9F B7 D1 	jp nz, dfgs_sg_upper_loop 
  529 D1:B7BE -  -  -  -  	;otherwise, end of sprite group 
  530 D1:B7BE 32 83 B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  531 D1:B7C2 32 0D AE D1 	ld (dbgl_sg_x_origin),a
  532 D1:B7C6 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  533 D1:B7C7 23 -  -  -  	inc hl
  534 D1:B7C8 23 -  -  -  	inc hl
  535 D1:B7C9 23 -  -  -  	inc hl ;to y pos of next sprite
  536 D1:B7CA -  -  -  -  dfgs_sprite_pointers_2 .equ $ + 1
  537 D1:B7CA 11 00 00 00 	ld de, 0
  538 D1:B7CE ED 53 89 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  539 D1:B7D3 ED 53 1C AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  540 D1:B7D8 C3 E4 B5 D1 	jp dfgs_upper_loop
  541 D1:B7DC -  -  -  -  	
  542 D1:B7DC -  -  -  -  
  543 D1:B7DC -  -  -  -  
  544 D1:B7DC -  -  -  -  ;SG MID =========================================================================================================
  545 D1:B7DC -  -  -  -  	;Sprite group in middle frame. a holds y pos of sprite group. HL points to height (unused)
  546 D1:B7DC -  -  -  -  dfgs_sg_mid:	
  547 D1:B7DC E5 -  -  -  	push hl
  548 D1:B7DD 32 EA B7 D1 	ld (dfgs_sg_mid_y_origin),a
  549 D1:B7E1 CD 67 B7 D1 	call dfgs_sg_setup 
  550 D1:B7E5 -  -  -  -  	
  551 D1:B7E5 32 FE B7 D1 	ld (dfgs_sg_mid_count),a
  552 D1:B7E9 -  -  -  -  	
  553 D1:B7E9 -  -  -  -  dfgs_sg_mid_loop:
  554 D1:B7E9 -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  555 D1:B7E9 -  -  -  -  	;if no carry, sprite is still in mid frame, a holds pos in mid frame 
  556 D1:B7E9 -  -  -  -  	;if carry sprite is entirely in lower frame, a holds y pos in lower frame 
  557 D1:B7E9 -  -  -  -  dfgs_sg_mid_y_origin .equ $ + 1 
  558 D1:B7E9 3E 00 -  -  	ld a, 0
  559 D1:B7EB 96 -  -  -  	sub a,(hl)
  560 D1:B7EC 23 -  -  -  	inc hl ;to height
  561 D1:B7ED D2 F9 B7 D1 	jp nc, dfgs_sg_mid_draw_mid
  562 D1:B7F1 -  -  -  -  	
  563 D1:B7F1 CD 11 B7 D1 	call dfgs_draw_lower_sprite
  564 D1:B7F5 C3 FD B7 D1 	jp dfgs_sg_mid_continue
  565 D1:B7F9 -  -  -  -  
  566 D1:B7F9 -  -  -  -  		
  567 D1:B7F9 -  -  -  -  dfgs_sg_mid_draw_mid:
  568 D1:B7F9 CD 5F B6 D1 	call dfgs_draw_mid_sprite
  569 D1:B7FD -  -  -  -  dfgs_sg_mid_continue:
  570 D1:B7FD -  -  -  -  dfgs_sg_mid_count .equ $ + 1
  571 D1:B7FD 3E 00 -  -  	ld a, 0
  572 D1:B7FF 3D -  -  -  	dec a 
  573 D1:B800 32 FE B7 D1 	ld (dfgs_sg_mid_count),a 
  574 D1:B804 C2 E9 B7 D1 	jp nz, dfgs_sg_mid_loop 
  575 D1:B808 -  -  -  -  	;otherwise, end of sprite group 
  576 D1:B808 32 83 B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  577 D1:B80C 32 0D AE D1 	ld (dbgl_sg_x_origin),a 
  578 D1:B810 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  579 D1:B811 23 -  -  -  	inc hl
  580 D1:B812 23 -  -  -  	inc hl
  581 D1:B813 23 -  -  -  	inc hl ;to y pos of next sprite
  582 D1:B814 -  -  -  -  dfgs_sprite_pointers_3 .equ $ + 1
  583 D1:B814 11 00 00 00 	ld de, 0
  584 D1:B818 ED 53 89 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  585 D1:B81D ED 53 1C AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  586 D1:B822 C3 48 B6 D1 	jp dfgs_mid_loop
  587 D1:B826 -  -  -  -  	
  588 D1:B826 -  -  -  -  	
  589 D1:B826 -  -  -  -  ;SG Lower =========================================================================================================
  590 D1:B826 -  -  -  -  	;Sprite group in lower frame. a holds y pos of sprite group. HL points to height (unused)
  591 D1:B826 -  -  -  -  dfgs_sg_lower:	
  592 D1:B826 32 34 B8 D1 	ld (dfgs_sg_lower_y_origin),a
  593 D1:B82A E5 -  -  -  	push hl
  594 D1:B82B CD 67 B7 D1 	call dfgs_sg_setup 
  595 D1:B82F 32 47 B8 D1 	ld (dfgs_sg_lower_count),a
  596 D1:B833 -  -  -  -  	;call write_a_to_ram
  597 D1:B833 -  -  -  -  dfgs_sg_lower_loop:
  598 D1:B833 -  -  -  -  
  599 D1:B833 -  -  -  -  	;call prgmpause
  600 D1:B833 -  -  -  -  
  601 D1:B833 -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  602 D1:B833 -  -  -  -  	;if no carry, sprite is still in lower frame, a holds pos in lower frame 
  603 D1:B833 -  -  -  -  	;if carry sprite is offscreen
  604 D1:B833 -  -  -  -  dfgs_sg_lower_y_origin .equ $ + 1 
  605 D1:B833 3E 00 -  -  	ld a, 0
  606 D1:B835 96 -  -  -  	sub a,(hl)
  607 D1:B836 -  -  -  -  	;call write_a_to_ram
  608 D1:B836 23 -  -  -  	inc hl ;to height
  609 D1:B837 D2 42 B8 D1 	jp nc, dfgs_sg_lower_draw_lower
  610 D1:B83B -  -  -  -  	
  611 D1:B83B 23 -  -  -  	inc hl 
  612 D1:B83C 23 -  -  -  	inc hl
  613 D1:B83D 23 -  -  -  	inc hl 
  614 D1:B83E C3 46 B8 D1 	jp dfgs_sg_lower_continue
  615 D1:B842 -  -  -  -  	;otherwise, sprite is entirely below lower frame, skip
  616 D1:B842 -  -  -  -  	
  617 D1:B842 -  -  -  -  	
  618 D1:B842 -  -  -  -  dfgs_sg_lower_draw_lower:
  619 D1:B842 CD 11 B7 D1 	call dfgs_draw_lower_sprite
  620 D1:B846 -  -  -  -  dfgs_sg_lower_continue:
  621 D1:B846 -  -  -  -  dfgs_sg_lower_count .equ $ + 1
  622 D1:B846 3E 00 -  -  	ld a, 0
  623 D1:B848 -  -  -  -  	;call write_a_to_ram
  624 D1:B848 3D -  -  -  	dec a 
  625 D1:B849 32 47 B8 D1 	ld (dfgs_sg_lower_count),a 
  626 D1:B84D C2 33 B8 D1 	jp nz, dfgs_sg_lower_loop 
  627 D1:B851 -  -  -  -  	;otherwise, end of sprite group 
  628 D1:B851 32 83 B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  629 D1:B855 32 0D AE D1 	ld (dbgl_sg_x_origin),a 
  630 D1:B859 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  631 D1:B85A 23 -  -  -  	inc hl
  632 D1:B85B 23 -  -  -  	inc hl
  633 D1:B85C 23 -  -  -  	inc hl ;to y pos of next sprite
  634 D1:B85D -  -  -  -  dfgs_sprite_pointers_4 .equ $ + 1
  635 D1:B85D 11 00 00 00 	ld de, 0
  636 D1:B861 ED 53 89 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  637 D1:B866 ED 53 1C AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  638 D1:B86B C3 FD B6 D1 	jp dfgs_lower_loop
  639 D1:B86F -  -  -  -  	
  640 D1:B86F -  -  -  -  	
  641 D1:B86F -  -  -  -  	
  642 D1:B86F -  -  -  -  	
  643 D1:B86F -  -  -  -  ;a holds distance from bottom of screen, starting from 1, or for top cut dist above screen = num lines to skip 
  644 D1:B86F -  -  -  -  ;(hl) = height 	
  645 D1:B86F -  -  -  -  ;de = initial vram, top for top cut, otherwise bottom
  646 D1:B86F -  -  -  -  
  647 D1:B86F -  -  -  -  ;Subtracts a lines from de (initial vram pos),
  648 D1:B86F -  -  -  -  ;returns hl = sprite data, de = new vram position
  649 D1:B86F -  -  -  -  dfgs_setup_draw:
  650 D1:B86F 23 -  -  -  	inc hl ;x pos 
  651 D1:B870 01 00 00 00 	ld bc,0
  652 D1:B874 4E -  -  -  	ld c,(hl); x pos
  653 D1:B875 23 -  -  -  	inc hl;to index
  654 D1:B876 E5 -  -  -  	push hl;save sprite index 
  655 D1:B877 26 A0 -  -  	ld h,160
  656 D1:B879 6F -  -  -  	ld l,a ;number of lines to subtract 
  657 D1:B87A ED 6C -  -  	mlt hl;subtract from vram
  658 D1:B87C 37 -  -  -  	scf 
  659 D1:B87D 3F -  -  -  	ccf
  660 D1:B87E EB -  -  -  	ex de,hl;hl holds initial vram pos, de is lines to subtract  
  661 D1:B87F ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  662 D1:B881 09 -  -  -  	add hl,bc;add x pos ;hl now holds sprite draw start pos 
  663 D1:B882 -  -  -  -  dfgs_sg_x_origin .equ $ + 1 ;
  664 D1:B882 0E 00 -  -  	ld c, 0
  665 D1:B884 09 -  -  -  	add hl,bc;add sprite group x pos offset (if applicable)
  666 D1:B885 EB -  -  -  	ex de,hl;put in de
  667 D1:B886 E1 -  -  -  	pop hl;back to frame data 
  668 D1:B887 4E -  -  -  	ld c,(hl);sprite index
  669 D1:B888 -  -  -  -  dfgs_sprite_pointers_1 .equ $ + 1	
  670 D1:B888 21 00 00 00 	ld hl,0 ;load sprite table 
  671 D1:B88C 09 -  -  -  	add hl,bc
  672 D1:B88D 09 -  -  -  	add hl,bc 
  673 D1:B88E 09 -  -  -  	add hl,bc;move to sprite ptr
  674 D1:B88F -  -  -  -  	;call prgmpause
  675 D1:B88F ED 27 -  -  	ld hl,(hl);hl holds sprite data, if even = fast sprite 
  676 D1:B891 -  -  -  -  
  677 D1:B891 C9 -  -  -  	ret
  678 D1:B892 -  -  -  -  
  679 D1:B892 -  -  -  -  	;hl pts to sprite table index, returns de = sprite table ptr
  680 D1:B892 -  -  -  -  	
  681 D1:B892 -  -  -  -  sprite_table_from_index:
  682 D1:B892 E5 -  -  -  	push hl ;save 
  683 D1:B893 11 00 00 00 	ld de,0
  684 D1:B897 5E -  -  -  	ld e,(hl) ;e holds table index
  685 D1:B898 21 35 DA D1 	ld hl,Sprite_Table_Table
  686 D1:B89C 19 -  -  -  	add hl,de 
  687 D1:B89D 19 -  -  -  	add hl,de 
  688 D1:B89E 19 -  -  -  	add hl,de ;inc to correct table
  689 D1:B89F ED 17 -  -  	ld de,(hl)
  690 D1:B8A1 -  -  -  -  	
  691 D1:B8A1 -  -  -  -  
  692 D1:B8A1 -  -  -  -  	
  693 D1:B8A1 -  -  -  -  	;call prgmpause Seems to work
  694 D1:B8A1 -  -  -  -  	
  695 D1:B8A1 E1 -  -  -  	pop hl 
  696 D1:B8A2 C9 -  -  -  	ret 
  697 D1:B8A3 -  -  -  -  	
  698 D1:B8A3 -  -  -  -  
  699 D1:B8A3 -  -  -  -  
  700 D1:B8A3 -  -  -  -  	
  701 D1:B8A3 -  -  -  -  	
  702 D1:B8A3 -  -  -  -  	
  703 D1:B8A3 -  -  -  -  	
  704 D1:B8A3 -  -  -  -  	
  705 D1:B8A3 -  -  -  -  	
  706 D1:B8A3 -  -  -  -  	
  707 D1:B8A3 -  -  -  -  	
  708 D1:B8A3 -  -  -  -  	
  709 D1:B8A3 -  -  -  -  	
Listing for file "ascent.asm"
  598 D1:B8A3 -  -  -  -  #include "SpriteDecompressManager.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\SpriteDecompressManager.txt"
    1 D1:B8A3 -  -  -  -  
    2 D1:B8A3 -  -  -  -  
    3 D1:B8A3 -  -  -  -  decompress_queue_start .equ vram
    4 D1:B8A3 -  -  -  -  
    5 D1:B8A3 -  -  -  -  decompress_queue_end .equ vram + (7*64) ;Max queue length of 64
    6 D1:B8A3 -  -  -  -  
    7 D1:B8A3 -  -  -  -  decompress_tail_ptr:
    8 D1:B8A3 06 00 D4 -  	.dl decompress_queue_start + 6  ;points to sprite being currently decompressed (parameters byte)
    9 D1:B8A6 -  -  -  -  
   10 D1:B8A6 -  -  -  -  decompress_head_ptr: ;points to where next element will be added to queue
   11 D1:B8A6 00 00 D4 -  	.dl decompress_queue_start
   12 D1:B8A9 -  -  -  -  
   13 D1:B8A9 -  -  -  -  ;Decompress queue format
   14 D1:B8A9 -  -  -  -  ; .dl Sprite data ptr, decompress location, parameters (7 = fast, 6 = offset, 5 = flip, 4 =started decompressing 3 = finished decompressing )
   15 D1:B8A9 -  -  -  -  
   16 D1:B8A9 -  -  -  -  setup_decompress_queue: ;clears memory in queue
   17 D1:B8A9 3E FF -  -  	ld a,$FF
   18 D1:B8AB 01 C0 01 00 	ld bc, 7*64
   19 D1:B8AF 21 00 00 D4 	ld hl, decompress_queue_start
   20 D1:B8B3 22 A6 B8 D1 	ld (decompress_head_ptr),hl 
   21 D1:B8B7 CD E0 10 02 	call _MemSet
   22 D1:B8BB 21 06 00 D4 	ld hl, decompress_queue_start + 6
   23 D1:B8BF 22 A3 B8 D1 	ld (decompress_tail_ptr),hl 
   24 D1:B8C3 3E 00 -  -  	ld a,0 
   25 D1:B8C5 32 CE B9 D1 	ld (last_decompressed_cam_pos),a
   26 D1:B8C9 C9 -  -  -  	ret 
   27 D1:B8CA -  -  -  -  
   28 D1:B8CA -  -  -  -  ;bc = sprite data ptr, de = decompress location, a = params
   29 D1:B8CA -  -  -  -  ;adds sprite to queue
   30 D1:B8CA -  -  -  -  add_to_decompress_queue:
   31 D1:B8CA 2A A6 B8 D1 	ld hl, (decompress_head_ptr)
   32 D1:B8CE ED 0F -  -  	ld (hl), bc 
   33 D1:B8D0 23 -  -  -  	inc hl
   34 D1:B8D1 23 -  -  -  	inc hl 
   35 D1:B8D2 23 -  -  -  	inc hl 
   36 D1:B8D3 -  -  -  -  
   37 D1:B8D3 ED 1F -  -  	ld (hl),de
   38 D1:B8D5 -  -  -  -  	
   39 D1:B8D5 23 -  -  -  	inc hl 
   40 D1:B8D6 23 -  -  -  	inc hl 
   41 D1:B8D7 23 -  -  -  	inc hl 
   42 D1:B8D8 -  -  -  -  	
   43 D1:B8D8 77 -  -  -  	ld (hl), a 
   44 D1:B8D9 23 -  -  -  	inc hl ;start of next element 
   45 D1:B8DA -  -  -  -  	
   46 D1:B8DA E5 -  -  -  	push hl 
   47 D1:B8DB 11 C0 01 D4 	ld de, decompress_queue_end
   48 D1:B8DF 37 -  -  -  	scf
   49 D1:B8E0 3F -  -  -  	ccf
   50 D1:B8E1 ED 52 -  -  	sbc hl,de ;check if we have reached end of queue to wrap around
   51 D1:B8E3 E1 -  -  -  	pop hl
   52 D1:B8E4 CA ED B8 D1 	jp z, a2dq_back_to_start
   53 D1:B8E8 -  -  -  -  	
   54 D1:B8E8 22 A6 B8 D1 	ld (decompress_head_ptr),hl
   55 D1:B8EC -  -  -  -  	;ld a,$AB ;testing
   56 D1:B8EC -  -  -  -  	;call write_a_to_ram
   57 D1:B8EC C9 -  -  -  	ret
   58 D1:B8ED -  -  -  -  	
   59 D1:B8ED -  -  -  -  a2dq_back_to_start:
   60 D1:B8ED -  -  -  -  	;ld a,$AA ;testing
   61 D1:B8ED -  -  -  -  	;call write_a_to_ram
   62 D1:B8ED -  -  -  -  
   63 D1:B8ED 21 00 00 D4 	ld hl,decompress_queue_start
   64 D1:B8F1 22 A6 B8 D1 	ld (decompress_head_ptr),hl
   65 D1:B8F5 C9 -  -  -  	ret
   66 D1:B8F6 -  -  -  -  	
   67 D1:B8F6 -  -  -  -  	
   68 D1:B8F6 -  -  -  -  
   69 D1:B8F6 -  -  -  -  
   70 D1:B8F6 -  -  -  -  ;Runs after frame has been rendered. Checks through decompress queue and continues sprite decompressions
   71 D1:B8F6 -  -  -  -  	;if has ended, return. at end of queue
   72 D1:B8F6 -  -  -  -  	;if not started, begin decompression and set start flag
   73 D1:B8F6 -  -  -  -  	;if has started, but not ended, continue decompression 
   74 D1:B8F6 -  -  -  -  	;if started and ended, move to next element 
   75 D1:B8F6 -  -  -  -  continue_decompressions:
   76 D1:B8F6 2A A3 B8 D1 	ld hl, (decompress_tail_ptr)
   77 D1:B8FA 7E -  -  -  	ld a,(hl) ;decompress params 
   78 D1:B8FB CB 5F -  -  	bit 3,a 
   79 D1:B8FD C0 -  -  -  	ret nz ;sprite is done decompressing, at end of queue 
   80 D1:B8FE -  -  -  -  	
   81 D1:B8FE -  -  -  -  	;testing
   82 D1:B8FE -  -  -  -  	;push af
   83 D1:B8FE -  -  -  -  	;ld a,$55
   84 D1:B8FE -  -  -  -  	;call write_a_to_ram
   85 D1:B8FE -  -  -  -  	;pop af
   86 D1:B8FE -  -  -  -  	
   87 D1:B8FE -  -  -  -  	
   88 D1:B8FE -  -  -  -  	
   89 D1:B8FE -  -  -  -  	
   90 D1:B8FE CB 67 -  -  	bit 4,a
   91 D1:B900 CA 3C B9 D1 	jp z, cd_begin_decompression
   92 D1:B904 -  -  -  -  	
   93 D1:B904 -  -  -  -  	;has started,not ended 
   94 D1:B904 CD B8 B2 D1 	call sdcomp_continue 
   95 D1:B908 B7 -  -  -  	or a 
   96 D1:B909 C0 -  -  -  	ret nz ;sprite not yet done decompressing 
   97 D1:B90A -  -  -  -  
   98 D1:B90A -  -  -  -  cd_done_decompressing:
   99 D1:B90A -  -  -  -  	;sprite finished decompressing
  100 D1:B90A 2A A3 B8 D1 	ld hl, (decompress_tail_ptr)	
  101 D1:B90E CB DE -  -  	set 3,(hl) ;set finished flag
  102 D1:B910 11 07 00 00 	ld de,7 
  103 D1:B914 19 -  -  -  	add hl,de ;points to next element in queue
  104 D1:B915 -  -  -  -  	
  105 D1:B915 E5 -  -  -  	push hl 
  106 D1:B916 11 C0 01 D4 	ld de, decompress_queue_end
  107 D1:B91A 37 -  -  -  	scf
  108 D1:B91B 3F -  -  -  	ccf
  109 D1:B91C ED 52 -  -  	sbc hl,de ;check if need to wrap to start of queue
  110 D1:B91E E1 -  -  -  	pop hl
  111 D1:B91F D2 2B B9 D1 	jp nc, cd_back_to_start
  112 D1:B923 22 A3 B8 D1 	ld (decompress_tail_ptr),hl
  113 D1:B927 C3 F6 B8 D1 	jp continue_decompressions ;Move on to next sprite 
  114 D1:B92B -  -  -  -  	
  115 D1:B92B -  -  -  -  cd_back_to_start:
  116 D1:B92B 21 00 00 D4 	ld hl,decompress_queue_start
  117 D1:B92F 11 06 00 00 	ld de,6 ;tail points to the parameters byte
  118 D1:B933 19 -  -  -  	add hl,de
  119 D1:B934 22 A3 B8 D1 	ld (decompress_tail_ptr),hl
  120 D1:B938 C3 F6 B8 D1 	jp continue_decompressions ;Move on to next sprite 
  121 D1:B93C -  -  -  -  
  122 D1:B93C -  -  -  -  cd_begin_decompression:
  123 D1:B93C -  -  -  -  
  124 D1:B93C -  -  -  -  	;testing
  125 D1:B93C -  -  -  -  	;push af 
  126 D1:B93C -  -  -  -  	;ld a,$AA
  127 D1:B93C -  -  -  -  	;call write_a_to_ram
  128 D1:B93C -  -  -  -  	;pop af
  129 D1:B93C -  -  -  -  	
  130 D1:B93C -  -  -  -  	;setup and begin decompressing
  131 D1:B93C CB E6 -  -  	set 4,(hl) ;set start flag
  132 D1:B93E F5 -  -  -  	push af 
  133 D1:B93F CB 7F -  -  	bit 7,a 
  134 D1:B941 C4 E6 B4 D1 	call nz, sdcomp_set_fast
  135 D1:B945 F1 -  -  -  	pop af 
  136 D1:B946 -  -  -  -  	
  137 D1:B946 F5 -  -  -  	push af 
  138 D1:B947 CB 7F -  -  	bit 7,a 
  139 D1:B949 CC F5 B4 D1 	call z, sdcomp_reset_fast
  140 D1:B94D F1 -  -  -  	pop af 
  141 D1:B94E -  -  -  -  	
  142 D1:B94E F5 -  -  -  	push af 
  143 D1:B94F CB 77 -  -  	bit 6,a 
  144 D1:B951 C4 76 B4 D1 	call nz, sdcomp_set_offset
  145 D1:B955 F1 -  -  -  	pop af 
  146 D1:B956 -  -  -  -  	
  147 D1:B956 F5 -  -  -  	push af 
  148 D1:B957 CB 77 -  -  	bit 6,a 
  149 D1:B959 CC 87 B4 D1 	call z, sdcomp_reset_offset
  150 D1:B95D F1 -  -  -  	pop af 
  151 D1:B95E -  -  -  -  	
  152 D1:B95E F5 -  -  -  	push af 
  153 D1:B95F CB 6F -  -  	bit 5,a 
  154 D1:B961 C4 98 B4 D1 	call nz, sdcomp_set_flip
  155 D1:B965 F1 -  -  -  	pop af 
  156 D1:B966 -  -  -  -  	
  157 D1:B966 F5 -  -  -  	push af 
  158 D1:B967 CB 6F -  -  	bit 5,a 
  159 D1:B969 CC BF B4 D1 	call z, sdcomp_reset_flip
  160 D1:B96D F1 -  -  -  	pop af 
  161 D1:B96E -  -  -  -  	
  162 D1:B96E 2A A3 B8 D1 	ld hl, (decompress_tail_ptr) ;may be unnessecary
  163 D1:B972 -  -  -  -  	
  164 D1:B972 2B -  -  -  	dec hl 
  165 D1:B973 2B -  -  -  	dec hl 
  166 D1:B974 2B -  -  -  	dec hl 
  167 D1:B975 ED 17 -  -  	ld de,(hl) ;load decompress location
  168 D1:B977 -  -  -  -  
  169 D1:B977 2B -  -  -  	dec hl 
  170 D1:B978 2B -  -  -  	dec hl 
  171 D1:B979 2B -  -  -  	dec hl 
  172 D1:B97A ED 27 -  -  	ld hl,(hl) ;load sprite data ptr
  173 D1:B97C -  -  -  -  
  174 D1:B97C CD 1B B1 D1 	call sprite_decompress
  175 D1:B980 B7 -  -  -  	or a 
  176 D1:B981 C0 -  -  -  	ret nz ;sprite not yet done decompressing 
  177 D1:B982 C3 0A B9 D1 	jp cd_done_decompressing
  178 D1:B986 -  -  -  -  
  179 D1:B986 -  -  -  -  
  180 D1:B986 -  -  -  -  ;Checks to see if cam has moved to a new frame and decompressions need to be added to queue
  181 D1:B986 -  -  -  -  check_for_decompress_calls:
  182 D1:B986 3A CE B9 D1 	ld a, (last_decompressed_cam_pos)
  183 D1:B98A 47 -  -  -  	ld b,a ;put last decompressed pos in b
  184 D1:B98B 3A E7 AB D1 	ld a, (cam_pos + 1) ;Current frame cam is in
  185 D1:B98F 32 CE B9 D1 	ld (last_decompressed_cam_pos),a ;store this frame as the last decompressed frame 
  186 D1:B993 -  -  -  -  	;need to check if cam has moved up or down since last time
  187 D1:B993 B8 -  -  -  	cp a,b 
  188 D1:B994 -  -  -  -  	
  189 D1:B994 -  -  -  -  	
  190 D1:B994 C8 -  -  -  	ret z ;if same, no new things to add to queue 
  191 D1:B995 D2 A1 B9 D1 	jp nc, cfdc_cam_move_up ;camera has moved up since last time 
  192 D1:B999 -  -  -  -  	
  193 D1:B999 -  -  -  -  	;cam has moved down since last time 
  194 D1:B999 21 8E CF D1 	ld hl, decompress_calls_table_down
  195 D1:B99D C3 A5 B9 D1 	jp cfdc_add_calls_to_queue
  196 D1:B9A1 -  -  -  -  	
  197 D1:B9A1 -  -  -  -  	
  198 D1:B9A1 -  -  -  -  cfdc_cam_move_up:
  199 D1:B9A1 21 80 CE D1 	ld hl, decompress_calls_table_up
  200 D1:B9A5 -  -  -  -  
  201 D1:B9A5 -  -  -  -  	;a = cam frame, hl = decompress call table (up or down)
  202 D1:B9A5 -  -  -  -  cfdc_add_calls_to_queue:
  203 D1:B9A5 -  -  -  -  
  204 D1:B9A5 -  -  -  -  	;call write_a_to_ram
  205 D1:B9A5 -  -  -  -  
  206 D1:B9A5 01 00 00 00 	ld bc,0
  207 D1:B9A9 4F -  -  -  	ld c,a
  208 D1:B9AA 09 -  -  -  	add hl,bc 
  209 D1:B9AB 09 -  -  -  	add hl,bc 
  210 D1:B9AC 09 -  -  -  	add hl,bc 
  211 D1:B9AD ED 27 -  -  	ld hl,(hl) ;hl now points to correct decompress frame 
  212 D1:B9AF -  -  -  -  cfdc_direct_add_decompress_frame:
  213 D1:B9AF -  -  -  -  
  214 D1:B9AF 08 -  -  -  	ex af,af' ;'
  215 D1:B9B0 7E -  -  -  	ld a,(hl) ;a' holds num elements 
  216 D1:B9B1 -  -  -  -  	
  217 D1:B9B1 -  -  -  -  	;call write_a_to_ram
  218 D1:B9B1 -  -  -  -  	
  219 D1:B9B1 -  -  -  -  	;call prgmpause
  220 D1:B9B1 -  -  -  -  	
  221 D1:B9B1 3C -  -  -  	inc a ;to be decd later
  222 D1:B9B2 08 -  -  -  	ex af,af' ;'
  223 D1:B9B3 -  -  -  -  	
  224 D1:B9B3 23 -  -  -  	inc hl ;points to first sprite data 
  225 D1:B9B4 -  -  -  -  cfdc_add_to_queue_loop:
  226 D1:B9B4 08 -  -  -  	ex af,af' ;'
  227 D1:B9B5 -  -  -  -  	;call write_a_to_ram
  228 D1:B9B5 3D -  -  -  	dec a ;account for cases where frame has 0 elements 
  229 D1:B9B6 C8 -  -  -  	ret z
  230 D1:B9B7 08 -  -  -  	ex af,af' ;'
  231 D1:B9B8 ED 07 -  -  	ld bc ,(hl) ;load sprite data 
  232 D1:B9BA 23 -  -  -  	inc hl 
  233 D1:B9BB 23 -  -  -  	inc hl
  234 D1:B9BC 23 -  -  -  	inc hl 
  235 D1:B9BD ED 17 -  -  	ld de,(hl) ;load decomp location 
  236 D1:B9BF 23 -  -  -  	inc hl 
  237 D1:B9C0 23 -  -  -  	inc hl
  238 D1:B9C1 23 -  -  -  	inc hl 
  239 D1:B9C2 7E -  -  -  	ld a,(hl) ;ld params
  240 D1:B9C3 23 -  -  -  	inc hl 
  241 D1:B9C4 E5 -  -  -  	push hl
  242 D1:B9C5 CD CA B8 D1 	call add_to_decompress_queue
  243 D1:B9C9 E1 -  -  -  	pop hl
  244 D1:B9CA C3 B4 B9 D1 	jp cfdc_add_to_queue_loop
  245 D1:B9CE -  -  -  -  	
  246 D1:B9CE -  -  -  -  	
  247 D1:B9CE -  -  -  -  
  248 D1:B9CE -  -  -  -  
  249 D1:B9CE -  -  -  -  last_decompressed_cam_pos:
  250 D1:B9CE 00 -  -  -  	.db 0 ;camera frame last time checking for decomp was called 
  251 D1:B9CF -  -  -  -  	
  252 D1:B9CF -  -  -  -  	
  253 D1:B9CF -  -  -  -  
  254 D1:B9CF -  -  -  -  
  255 D1:B9CF -  -  -  -  
  256 D1:B9CF -  -  -  -  
  257 D1:B9CF -  -  -  -  
  258 D1:B9CF -  -  -  -  
  259 D1:B9CF -  -  -  -  
  260 D1:B9CF -  -  -  -  
  261 D1:B9CF -  -  -  -  
  262 D1:B9CF -  -  -  -  
  263 D1:B9CF -  -  -  -  
  264 D1:B9CF -  -  -  -  
  265 D1:B9CF -  -  -  -  
  266 D1:B9CF -  -  -  -  
  267 D1:B9CF -  -  -  -  
  268 D1:B9CF -  -  -  -  
  269 D1:B9CF -  -  -  -  
  270 D1:B9CF -  -  -  -  
  271 D1:B9CF -  -  -  -  
  272 D1:B9CF -  -  -  -  
  273 D1:B9CF -  -  -  -  
  274 D1:B9CF -  -  -  -  
  275 D1:B9CF -  -  -  -  
  276 D1:B9CF -  -  -  -  
  277 D1:B9CF -  -  -  -  
Listing for file "ascent.asm"
  599 D1:B9CF -  -  -  -  #include "getInputs.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\getInputs.txt"
    1 D1:B9CF -  -  -  -  
    2 D1:B9CF -  -  -  -  
    3 D1:B9CF -  -  -  -  
    4 D1:B9CF -  -  -  -  get_inputs:
    5 D1:B9CF 21 00 00 F5 	ld	hl,DI_Mode		; register for keypad mode
    6 D1:B9D3 36 02 -  -  	ld	(hl),2			; set single scan mode
    7 D1:B9D5 -  -  -  -  
    8 D1:B9D5 AF -  -  -  	xor	a,a
    9 D1:B9D6 -  -  -  -  scan_wait:
   10 D1:B9D6 BE -  -  -  	cp	a,(hl)			; wait for keypad idle mode
   11 D1:B9D7 20 FD -  -  	jr	nz,scan_wait
   12 D1:B9D9 -  -  -  -  	
   13 D1:B9D9 -  -  -  -  	; https://wikiti.brandonw.net/index.php?title=84PCE:Ports:A000
   14 D1:B9D9 -  -  -  -  	
   15 D1:B9D9 3E 00 -  -  	ld a,0
   16 D1:B9DB 32 79 BF D1 	ld (player_flags+1),a ;clear cam moove flags
   17 D1:B9DF -  -  -  -  	
   18 D1:B9DF 3A 1E 00 F5 	ld	a,(kbdG7) ; $F5001E
   19 D1:B9E3 CB 5F -  -   	bit	kbitUp,a
   20 D1:B9E5 F5 -  -  -  	push af 
   21 D1:B9E6 C4 1D BA D1 	call nz, input_cam_up
   22 D1:B9EA F1 -  -  -  	pop af 
   23 D1:B9EB -  -  -  -  	
   24 D1:B9EB CB 47 -  -  	bit	kbitDown,a
   25 D1:B9ED C4 28 BA D1 	call nz, input_cam_down
   26 D1:B9F1 -  -  -  -  
   27 D1:B9F1 -  -  -  -  
   28 D1:B9F1 3A 1C 00 F5 	ld a,(kbdG6)
   29 D1:B9F5 CB 77 -  -  	bit kbitClear,a
   30 D1:B9F7 C2 79 AB D1 	jp nz,exit_prgm
   31 D1:B9FB -  -  -  -  	
   32 D1:B9FB 3A 18 00 F5 	ld a,(kbdG4)
   33 D1:B9FF CB 57 -  -  	bit kbit5,a 
   34 D1:BA01 C4 7B BA D1 	call nz, try_tongue
   35 D1:BA05 -  -  -  -  	
   36 D1:BA05 3A 1A 00 F5 	ld a,(kbdG5)
   37 D1:BA09 CB 57 -  -  	bit kbit6,a 
   38 D1:BA0B C4 5B BA D1 	call nz, charge_jump_right
   39 D1:BA0F -  -  -  -  	
   40 D1:BA0F 3A 16 00 F5 	ld a,(kbdG3)
   41 D1:BA13 CB 57 -  -  	bit kbit4,a 
   42 D1:BA15 C4 33 BA D1 	call nz, charge_jump_left
   43 D1:BA19 -  -  -  -  	
   44 D1:BA19 -  -  -  -  
   45 D1:BA19 C3 25 A9 D1 	jp get_inputs_return
   46 D1:BA1D -  -  -  -  	
   47 D1:BA1D -  -  -  -  	
   48 D1:BA1D -  -  -  -  input_cam_up:
   49 D1:BA1D -  -  -  -  	;set flag for cam move up 
   50 D1:BA1D 3A 79 BF D1 	ld a,(player_flags + 1)
   51 D1:BA21 CB FF -  -  	set 7,a 
   52 D1:BA23 32 79 BF D1 	ld (player_flags + 1),a 
   53 D1:BA27 C9 -  -  -  	ret
   54 D1:BA28 -  -  -  -  
   55 D1:BA28 -  -  -  -  input_cam_down:
   56 D1:BA28 -  -  -  -  	;set flag for cam move up 
   57 D1:BA28 3A 79 BF D1 	ld a,(player_flags + 1)
   58 D1:BA2C CB F7 -  -  	set 6,a 
   59 D1:BA2E 32 79 BF D1 	ld (player_flags + 1),a 
   60 D1:BA32 C9 -  -  -  	ret
   61 D1:BA33 -  -  -  -  	
   62 D1:BA33 -  -  -  -  	
   63 D1:BA33 -  -  -  -  	
Listing for file "ascent.asm"
  600 D1:BA33 -  -  -  -  #include "PlayerController.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\PlayerController.txt"
    1 D1:BA33 -  -  -  -  
    2 D1:BA33 -  -  -  -  
    3 D1:BA33 -  -  -  -  
    4 D1:BA33 -  -  -  -  charge_jump_left:
    5 D1:BA33 -  -  -  -  	;Decrease jump right strength
    6 D1:BA33 -  -  -  -  	;Increase jump up strength 
    7 D1:BA33 -  -  -  -  	;Do nothing if jump left timer is above max value 
    8 D1:BA33 3A 78 BF D1 	ld a,(player_flags)
    9 D1:BA37 CB FF -  -  	set 7, a 
   10 D1:BA39 32 78 BF D1 	ld (player_flags),a 
   11 D1:BA3D 3A 5E BF D1 	ld a,(jump_charge_timer)
   12 D1:BA41 FE 20 -  -  	cp timer_max_val
   13 D1:BA43 D0 -  -  -  	ret nc
   14 D1:BA44 3A 5D BF D1 	ld a,(jump_strength_left)
   15 D1:BA48 06 04 -  -  	ld b,4
   16 D1:BA4A 80 -  -  -  	add a,b 
   17 D1:BA4B 32 5D BF D1 	ld (jump_strength_left),a
   18 D1:BA4F -  -  -  -  jump_add_up_strength:
   19 D1:BA4F 3A 5B BF D1 	ld a,(jump_strength_up)
   20 D1:BA53 3C -  -  -  	inc a 
   21 D1:BA54 3C -  -  -  	inc a 
   22 D1:BA55 3C -  -  -  	inc a 
   23 D1:BA56 32 5B BF D1 	ld (jump_strength_up),a
   24 D1:BA5A C9 -  -  -  	ret
   25 D1:BA5B -  -  -  -  
   26 D1:BA5B -  -  -  -  
   27 D1:BA5B -  -  -  -  charge_jump_right:
   28 D1:BA5B -  -  -  -  	;Increase jump right strength 
   29 D1:BA5B -  -  -  -  	;Increase jump up strength 
   30 D1:BA5B -  -  -  -  	;Do nothing if jump  timer is above max value 
   31 D1:BA5B 3A 78 BF D1 	ld a,(player_flags)
   32 D1:BA5F CB FF -  -  	set 7, a 
   33 D1:BA61 32 78 BF D1 	ld (player_flags),a 
   34 D1:BA65 3A 5E BF D1 	ld a,(jump_charge_timer)
   35 D1:BA69 FE 20 -  -  	cp timer_max_val
   36 D1:BA6B D0 -  -  -  	ret nc
   37 D1:BA6C 3A 5C BF D1 	ld a,(jump_strength_right)
   38 D1:BA70 06 04 -  -  	ld b,4
   39 D1:BA72 80 -  -  -  	add a,b 
   40 D1:BA73 32 5C BF D1 	ld (jump_strength_right),a
   41 D1:BA77 C3 4F BA D1 	jp jump_add_up_strength
   42 D1:BA7B -  -  -  -  
   43 D1:BA7B -  -  -  -  
   44 D1:BA7B -  -  -  -  try_tongue: ;called from getinput
   45 D1:BA7B -  -  -  -  
   46 D1:BA7B -  -  -  -  	;check if player in air 
   47 D1:BA7B 3A 78 BF D1 	ld a,(player_flags)
   48 D1:BA7F CB 77 -  -  	bit 6,a ;on ground flag 
   49 D1:BA81 C0 -  -  -  	ret nz 
   50 D1:BA82 CB 57 -  -  	bit 2,a 
   51 D1:BA84 C0 -  -  -  	ret nz ;already in tongue state
   52 D1:BA85 CB 5F -  -  	bit 3,a 
   53 D1:BA87 C0 -  -  -  	ret nz ;falling
   54 D1:BA88 -  -  -  -  	;ld a,$A0
   55 D1:BA88 -  -  -  -  	;call write_a_to_ram
   56 D1:BA88 -  -  -  -  
   57 D1:BA88 11 00 00 00 	ld de,0 
   58 D1:BA8C 01 00 00 00 	ld bc,0
   59 D1:BA90 21 00 00 00 	ld hl,0
   60 D1:BA94 3A 64 BF D1 	ld a, (player_y_pos + 2) ;player y frame 
   61 D1:BA98 67 -  -  -  	ld h,a 
   62 D1:BA99 3A 63 BF D1 	ld a, (player_y_pos + 1);player y pixel 
   63 D1:BA9D 6F -  -  -  	ld l,a
   64 D1:BA9E 2B -  -  -  	dec hl ;Offset y pos to mouth origin
   65 D1:BA9F 2B -  -  -  	dec hl 
   66 D1:BAA0 2B -  -  -  	dec hl 
   67 D1:BAA1 2B -  -  -  	dec hl 
   68 D1:BAA2 2B -  -  -  	dec hl 
   69 D1:BAA3 2B -  -  -  	dec hl 
   70 D1:BAA4 2B -  -  -  	dec hl ;hl holds y poos of mouth
   71 D1:BAA5 -  -  -  -  	
   72 D1:BAA5 11 C8 F9 D1 	ld de, Tongue_Rings
   73 D1:BAA9 08 -  -  -  	ex af,af' ;'
   74 D1:BAAA 1A -  -  -  	ld a,(de) ; a' is counter 
   75 D1:BAAB -  -  -  -  	;call write_a_to_ram
   76 D1:BAAB 13 -  -  -  	inc de ;to first element 
   77 D1:BAAC -  -  -  -  try_tongue_loop:
   78 D1:BAAC 08 -  -  -  	ex af,af' ;' 
   79 D1:BAAD -  -  -  -  	;hl holds player y ,de holds data
   80 D1:BAAD 1A -  -  -  	ld a ,(de)
   81 D1:BAAE 47 -  -  -  	ld b,a ;frame num 
   82 D1:BAAF 13 -  -  -  	inc de
   83 D1:BAB0 1A -  -  -  	ld a,(de)
   84 D1:BAB1 13 -  -  -  	inc de
   85 D1:BAB2 4F -  -  -  	ld c,a ;pixel
   86 D1:BAB3 -  -  -  -  	;call write_a_to_ram
   87 D1:BAB3 E5 -  -  -  	push hl ;hl holds player y 
   88 D1:BAB4 -  -  -  -  	;call write_hl_to_ram
   89 D1:BAB4 C5 -  -  -  	push bc ;bc holds ring y 
   90 D1:BAB5 37 -  -  -  	scf 
   91 D1:BAB6 3F -  -  -  	ccf 
   92 D1:BAB7 ED 42 -  -  	sbc hl,bc ;compare to ring y 
   93 D1:BAB9 D2 0C BB D1 	jp nc, tongue_loop_continue ;ring below player 
   94 D1:BABD -  -  -  -  	;call write_hl_to_ram
   95 D1:BABD -  -  -  -  	;otherwise ring above player, hl holds -dist 
   96 D1:BABD 01 0A 00 00 	ld bc,10 ; min dist threshold 
   97 D1:BAC1 09 -  -  -  	add hl,bc 
   98 D1:BAC2 DA 0C BB D1 	jp c, tongue_loop_continue ; ring less than min dist above player 
   99 D1:BAC6 01 5A 00 00 	ld bc,tongue_max_length ;ring max dist threshold - min dist threshold
  100 D1:BACA 09 -  -  -  	add hl,bc 
  101 D1:BACB D2 0C BB D1 	jp nc,tongue_loop_continue ;ring above max distance threshold
  102 D1:BACF -  -  -  -  	;jp nc,test_1	
  103 D1:BACF -  -  -  -  	
  104 D1:BACF -  -  -  -  	;Ring has valid y pos 
  105 D1:BACF E1 -  -  -  	pop hl ;ring y 
  106 D1:BAD0 22 74 BF D1 	ld (tongue_ring_y_pos),hl
  107 D1:BAD4 C1 -  -  -  	pop bc ;player y  
  108 D1:BAD5 C5 -  -  -  	push bc
  109 D1:BAD6 37 -  -  -  	scf 
  110 D1:BAD7 3F -  -  -  	ccf 
  111 D1:BAD8 ED 42 -  -  	sbc hl,bc ;hl holds distance ring is above player  
  112 D1:BADA -  -  -  -  	;ld a,$AA
  113 D1:BADA -  -  -  -  	;call write_a_to_ram
  114 D1:BADA 1A -  -  -  	ld a,(de) ;ring x pos 
  115 D1:BADB -  -  -  -  	;call write_a_to_ram
  116 D1:BADB 4F -  -  -  	ld c,a 
  117 D1:BADC 32 77 BF D1 	ld (tongue_ring_x_pos),a 
  118 D1:BAE0 CD 4D BF D1 	call player_x_half ;a holds player x in pairs  (destroys b)
  119 D1:BAE4 -  -  -  -  	;call write_a_to_ram
  120 D1:BAE4 06 03 -  -  	ld b,3;x offset from collider to center of player collider
  121 D1:BAE6 80 -  -  -  	add a,b 
  122 D1:BAE7 91 -  -  -  	sub a,c ;player x - ring x 
  123 D1:BAE8 -  -  -  -  	;call write_a_to_ram
  124 D1:BAE8 D2 EE BA D1 	jp nc, tongue_ring_to_left
  125 D1:BAEC ED 44 -  -  	neg 
  126 D1:BAEE -  -  -  -  tongue_ring_to_left:
  127 D1:BAEE -  -  -  -  	;player sprite will be flipped 
  128 D1:BAEE -  -  -  -  	;a holds abs(xdistance) to ring in pair pixels 
  129 D1:BAEE -  -  -  -  	; l holds y dist in single px
  130 D1:BAEE FE 1E -  -  	cp 30
  131 D1:BAF0 D2 0E BB D1 	jp nc,tongue_loop_continue_2 ;x dist > 20
  132 D1:BAF4 2D -  -  -  	dec l ;safety factor
  133 D1:BAF5 95 -  -  -  	sub a,l
  134 D1:BAF6 -  -  -  -  	;call write_a_to_ram
  135 D1:BAF6 D2 0E BB D1 	jp nc, tongue_loop_continue_2 ;x dist > y dist 
  136 D1:BAFA -  -  -  -  	;jp nc, test_2
  137 D1:BAFA -  -  -  -  	;Valid ring found 
  138 D1:BAFA -  -  -  -  	
  139 D1:BAFA -  -  -  -  	;call prgmpause;
  140 D1:BAFA -  -  -  -  	
  141 D1:BAFA E1 -  -  -  	pop hl ;player y 
  142 D1:BAFB 3A 78 BF D1 	ld a,(player_flags)
  143 D1:BAFF CB D7 -  -  	set 2,a 
  144 D1:BB01 32 78 BF D1 	ld (player_flags),a 
  145 D1:BB05 3E 00 -  -  	ld a,0 
  146 D1:BB07 32 7E BF D1 	ld (tongue_extend_timer),a
  147 D1:BB0B -  -  -  -  	;call write_a_to_ram
  148 D1:BB0B -  -  -  -  	;ld a,$AA
  149 D1:BB0B -  -  -  -  	;call write_a_to_ram
  150 D1:BB0B C9 -  -  -  	ret 
  151 D1:BB0C -  -  -  -  
  152 D1:BB0C -  -  -  -  
  153 D1:BB0C -  -  -  -  tongue_loop_continue:
  154 D1:BB0C C1 -  -  -  	pop bc ;ring y 
  155 D1:BB0D 13 -  -  -  	inc de ;to next
  156 D1:BB0E -  -  -  -  tongue_loop_continue_2:
  157 D1:BB0E E1 -  -  -  	pop hl ;player y
  158 D1:BB0F 08 -  -  -  	ex af,af' ;' 
  159 D1:BB10 3D -  -  -  	dec a 
  160 D1:BB11 C2 AC BA D1 	jp nz,try_tongue_loop
  161 D1:BB15 -  -  -  -  	
  162 D1:BB15 C9 -  -  -  	ret 
  163 D1:BB16 -  -  -  -  
  164 D1:BB16 -  -  -  -  
  165 D1:BB16 -  -  -  -  
  166 D1:BB16 -  -  -  -  
  167 D1:BB16 -  -  -  -  player_update: ;Should be called after inputs
  168 D1:BB16 -  -  -  -  
  169 D1:BB16 3A 78 BF D1 	ld a,(player_flags)
  170 D1:BB1A CB 57 -  -  	bit 2,a ;tongue flag 
  171 D1:BB1C C2 33 BB D1 	jp nz, pu_tongue_update	
  172 D1:BB20 CB 7F -  -  	bit 7,a ;jump key  flag 
  173 D1:BB22 CA DD BB D1 	jp z, pu_try_jump
  174 D1:BB26 -  -  -  -  	
  175 D1:BB26 -  -  -  -  	;Jump key is held, charge jump
  176 D1:BB26 3A 5E BF D1 	ld a,(jump_charge_timer)
  177 D1:BB2A 3C -  -  -  	inc a 
  178 D1:BB2B 32 5E BF D1 	ld (jump_charge_timer),a
  179 D1:BB2F -  -  -  -  	;Jumps can be charged in air, for immediate jump
  180 D1:BB2F -  -  -  -  	
  181 D1:BB2F C3 3A BC D1 	jp pu_physics
  182 D1:BB33 -  -  -  -  
  183 D1:BB33 -  -  -  -  pu_tongue_update:
  184 D1:BB33 -  -  -  -  	
  185 D1:BB33 -  -  -  -  	;ld a,$AB
  186 D1:BB33 -  -  -  -  	;call write_a_to_ram
  187 D1:BB33 -  -  -  -  	
  188 D1:BB33 -  -  -  -  	;compute y dist to ring, and angle to check cancel 
  189 D1:BB33 CD A0 C3 D1 	call y_length_to_tongue_ring
  190 D1:BB37 7D -  -  -  	ld a,l
  191 D1:BB38 FE 5A -  -  	cp tongue_max_length
  192 D1:BB3A D2 CF BB D1 	jp nc, pu_tongue_release 
  193 D1:BB3E -  -  -  -  	;call write_hl_to_ram
  194 D1:BB3E -  -  -  -  	;hl holds line y length 
  195 D1:BB3E -  -  -  -  	;ld a,l 
  196 D1:BB3E -  -  -  -  	;call write_a_to_ram
  197 D1:BB3E 3A 7E BF D1 	ld a,(tongue_extend_timer)
  198 D1:BB42 -  -  -  -  	;call write_a_to_ram
  199 D1:BB42 -  -  -  -  	;compare timer to y dist / 8 
  200 D1:BB42 CB 3D -  -  	srl l 
  201 D1:BB44 CB 3D -  -  	srl l 
  202 D1:BB46 CB 3D -  -  	srl l 
  203 D1:BB48 BD -  -  -  	cp l 
  204 D1:BB49 DA C5 BB D1 	jp c, pu_tongue_extend
  205 D1:BB4D -  -  -  -  	
  206 D1:BB4D FE 7F -  -  	cp 127 ;if > 127 go to contract
  207 D1:BB4F D2 65 BB D1 	jp nc, pu_tongue_contract
  208 D1:BB53 -  -  -  -  	;ld a,$AC
  209 D1:BB53 -  -  -  -  	;call write_a_to_ram
  210 D1:BB53 -  -  -  -  	;otherwise tongue is full length, set timer to 128 to start contract phase 
  211 D1:BB53 3E 80 -  -  	ld a,128 
  212 D1:BB55 32 7E BF D1 	ld (tongue_extend_timer),a 
  213 D1:BB59 21 00 00 00 	ld hl,0 
  214 D1:BB5D 22 68 BF D1 	ld (player_y_vel),hl 
  215 D1:BB61 22 65 BF D1 	ld (player_x_vel),hl
  216 D1:BB65 -  -  -  -  
  217 D1:BB65 -  -  -  -  pu_tongue_contract:
  218 D1:BB65 -  -  -  -  
  219 D1:BB65 3E AD -  -  	ld a,$AD 
  220 D1:BB67 CD B3 AB D1 	call write_a_to_ram
  221 D1:BB6B -  -  -  -  	;Add distance to ring to player velocity until reach ring
  222 D1:BB6B CD A0 C3 D1 	call y_length_to_tongue_ring ;l holds y dist in px 
  223 D1:BB6F 7D -  -  -  	ld a,l 
  224 D1:BB70 -  -  -  -  	;call write_a_to_ram
  225 D1:BB70 FE 03 -  -  	cp 3 
  226 D1:BB72 DA CF BB D1 	jp c, pu_tongue_release
  227 D1:BB76 CB 7C -  -  	bit 7,h 
  228 D1:BB78 C2 CF BB D1 	jp nz,pu_tongue_release
  229 D1:BB7C -  -  -  -  	;div by ~6
  230 D1:BB7C CB 3D -  -  	srl l
  231 D1:BB7E CB 3D -  -  	srl l
  232 D1:BB80 CB 3D -  -  	srl l
  233 D1:BB82 7D -  -  -  	ld a,l 
  234 D1:BB83 CB 3D -  -  	srl l 
  235 D1:BB85 85 -  -  -  	add a,l 
  236 D1:BB86 6F -  -  -    	ld l,a 
  237 D1:BB87 -  -  -  -  	;call write_a_to_ram
  238 D1:BB87 -  -  -  -  	;call prgmpause
  239 D1:BB87 -  -  -  -  	;call write_hl_to_ram
  240 D1:BB87 11 14 00 00 	ld de,20
  241 D1:BB8B 19 -  -  -  	add hl,de 
  242 D1:BB8C EB -  -  -  	ex de,hl 
  243 D1:BB8D 2A 68 BF D1 	ld hl,(player_y_vel)
  244 D1:BB91 19 -  -  -  	add hl,de 
  245 D1:BB92 22 68 BF D1 	ld (player_y_vel),hl 
  246 D1:BB96 -  -  -  -  	;call write_hl_to_ram
  247 D1:BB96 -  -  -  -  	;call prgmpause
  248 D1:BB96 -  -  -  -  	
  249 D1:BB96 CD BD C3 D1 	call x_length_to_tongue_ring
  250 D1:BB9A -  -  -  -  	;a holds x dist in pairs
  251 D1:BB9A CB 7F -  -  	bit 7,a ;check sign 
  252 D1:BB9C C2 AE BB D1 	jp nz, pu_tongue_contract_left
  253 D1:BBA0 11 00 00 00 	ld de,0 
  254 D1:BBA4 1E 03 -  -  	ld e,3 
  255 D1:BBA6 83 -  -  -  	add a,e 
  256 D1:BBA7 5F -  -  -  	ld e,a
  257 D1:BBA8 CB 3B -  -  	srl e ;div by 2
  258 D1:BBAA C3 B8 BB D1 	jp pu_tongue_contract_right
  259 D1:BBAE -  -  -  -  pu_tongue_contract_left:
  260 D1:BBAE 11 FF FF FF 	ld de, $ffffff
  261 D1:BBB2 1E FD -  -  	ld e,-3 
  262 D1:BBB4 83 -  -  -  	add a,e
  263 D1:BBB5 5F -  -  -  	ld e,a 
  264 D1:BBB6 CB 2B -  -  	sra e ;div 2
  265 D1:BBB8 -  -  -  -  pu_tongue_contract_right:
  266 D1:BBB8 -  -  -  -  	
  267 D1:BBB8 2A 65 BF D1 	ld hl,(player_x_vel)
  268 D1:BBBC 19 -  -  -  	add hl,de 
  269 D1:BBBD 22 65 BF D1 	ld (player_x_vel),hl 
  270 D1:BBC1 -  -  -  -  	
  271 D1:BBC1 C3 3A BC D1 	jp pu_physics
  272 D1:BBC5 -  -  -  -  	
  273 D1:BBC5 -  -  -  -  	;tongue extends 8px per frame until max length 
  274 D1:BBC5 -  -  -  -  	;then set timer to 128 for contract phase 
  275 D1:BBC5 -  -  -  -  pu_tongue_extend:
  276 D1:BBC5 -  -  -  -  	;Extend tongue and do normal air physics
  277 D1:BBC5 3C -  -  -  	inc a 
  278 D1:BBC6 3C -  -  -  	inc a 
  279 D1:BBC7 -  -  -  -  	;call write_a_to_ram
  280 D1:BBC7 32 7E BF D1 	ld (tongue_extend_timer),a 
  281 D1:BBCB C3 3A BC D1 	jp pu_physics
  282 D1:BBCF -  -  -  -  
  283 D1:BBCF -  -  -  -  
  284 D1:BBCF -  -  -  -  pu_tongue_release:
  285 D1:BBCF 3A 78 BF D1 	ld a,(player_flags)
  286 D1:BBD3 CB 97 -  -  	res 2,a 
  287 D1:BBD5 32 78 BF D1 	ld (player_flags),a 
  288 D1:BBD9 C3 3A BC D1 	jp pu_physics
  289 D1:BBDD -  -  -  -  
  290 D1:BBDD -  -  -  -  
  291 D1:BBDD -  -  -  -  pu_try_jump:
  292 D1:BBDD -  -  -  -  	;no jump keys held this frame. If jump timer > 0 and on ground, then jump 
  293 D1:BBDD -  -  -  -  	
  294 D1:BBDD CB 77 -  -  	bit 6,a ;ground check 
  295 D1:BBDF CA 28 BC D1 	jp z, pu_no_jump ;if not on ground, cant jump
  296 D1:BBE3 3A 5E BF D1 	ld a,(jump_charge_timer)
  297 D1:BBE7 B7 -  -  -  	or a 
  298 D1:BBE8 CA 28 BC D1 	jp z,pu_no_jump ;jump timers are 0 = no jump
  299 D1:BBEC -  -  -  -  	
  300 D1:BBEC FE 08 -  -  	cp 8;if timer < 8 no jump
  301 D1:BBEE DA 28 BC D1 	jp c, pu_no_jump
  302 D1:BBF2 -  -  -  -  	
  303 D1:BBF2 -  -  -  -  	;This is the minimum jump player can do 
  304 D1:BBF2 -  -  -  -  	;ld a,(jump_strength_right)
  305 D1:BBF2 -  -  -  -  	;bit 7,a 
  306 D1:BBF2 -  -  -  -  	;;jp nz, pu_min_jump_left 
  307 D1:BBF2 -  -  -  -  	;or a 
  308 D1:BBF2 -  -  -  -  	;jp z, pu_min_jump_up 
  309 D1:BBF2 -  -  -  -  	;ld a,20 
  310 D1:BBF2 -  -  -  -  	;jp pu_min_jump_up
  311 D1:BBF2 -  -  -  -  ;pu_min_jump_left:
  312 D1:BBF2 -  -  -  -  	;ld a, -20
  313 D1:BBF2 -  -  -  -  ;pu_min_jump_up:
  314 D1:BBF2 -  -  -  -  	;ld (jump_strength_right),a 
  315 D1:BBF2 -  -  -  -  	
  316 D1:BBF2 -  -  -  -  	;ld a,15 
  317 D1:BBF2 -  -  -  -  	;ld (jump_strength_up),a 
  318 D1:BBF2 -  -  -  -  	
  319 D1:BBF2 -  -  -  -  	;ld a,$55
  320 D1:BBF2 -  -  -  -  	;call write_a_to_ram
  321 D1:BBF2 -  -  -  -  	
  322 D1:BBF2 -  -  -  -  	;Player is on ground and should execute a jump 
  323 D1:BBF2 -  -  -  -  pu_jump_notmin:
  324 D1:BBF2 -  -  -  -  	
  325 D1:BBF2 21 00 00 00 	ld hl,0 
  326 D1:BBF6 3A 5B BF D1 	ld a,(jump_strength_up)
  327 D1:BBFA 6F -  -  -  	ld l,a
  328 D1:BBFB -  -  -  -  	;call write_a_to_ram
  329 D1:BBFB -  -  -  -  
  330 D1:BBFB 22 68 BF D1 	ld (player_y_vel),hl 
  331 D1:BBFF -  -  -  -  	;call write_hl_to_ram
  332 D1:BBFF -  -  -  -  	
  333 D1:BBFF 3A 5D BF D1 	ld a,(jump_strength_left)
  334 D1:BC03 47 -  -  -  	ld b,a 
  335 D1:BC04 3A 5C BF D1 	ld a,(jump_strength_right)
  336 D1:BC08 90 -  -  -  	sub a,b ;subtract left jump from right
  337 D1:BC09 DA 15 BC D1 	jp c, pu_left_jump 
  338 D1:BC0D -  -  -  -  	;right jump 
  339 D1:BC0D 21 00 00 00 	ld hl,0
  340 D1:BC11 C3 19 BC D1 	jp pu_jump_cont
  341 D1:BC15 -  -  -  -  pu_left_jump:	
  342 D1:BC15 21 FF FF FF 	ld hl, $ffffff ;makes x vel negative 
  343 D1:BC19 -  -  -  -  pu_jump_cont:
  344 D1:BC19 6F -  -  -  	ld l,a 
  345 D1:BC1A -  -  -  -  	;call write_a_to_ram
  346 D1:BC1A 22 65 BF D1 	ld (player_x_vel),hl 
  347 D1:BC1E -  -  -  -  	;call write_hl_to_ram
  348 D1:BC1E -  -  -  -  	;Clear ground flag 
  349 D1:BC1E 3A 78 BF D1 	ld a,(player_flags)
  350 D1:BC22 CB B7 -  -  	res 6, a 
  351 D1:BC24 32 78 BF D1 	ld (player_flags),a 
  352 D1:BC28 -  -  -  -  	
  353 D1:BC28 -  -  -  -  pu_no_jump:	
  354 D1:BC28 -  -  -  -  	;reset jump timers 
  355 D1:BC28 3E 00 -  -  	ld a,0 
  356 D1:BC2A 32 5E BF D1 	ld (jump_charge_timer),a 
  357 D1:BC2E 32 5C BF D1 	ld (jump_strength_right),a 
  358 D1:BC32 32 5D BF D1 	ld (jump_strength_left),a 
  359 D1:BC36 32 5B BF D1 	ld (jump_strength_up),a	
  360 D1:BC3A -  -  -  -  	
  361 D1:BC3A -  -  -  -  pu_physics:
  362 D1:BC3A -  -  -  -  
  363 D1:BC3A -  -  -  -  	;Execute player physics update and check for collisions 
  364 D1:BC3A -  -  -  -  	;Run multiple times, 16 steps per frame? 
  365 D1:BC3A -  -  -  -  	;Move up first, then check collision, then move side and check again 
  366 D1:BC3A -  -  -  -  
  367 D1:BC3A 3E 10 -  -  	ld a,16 ;num physics loops 
  368 D1:BC3C 32 41 BC D1 	ld (pu_physics_count),a 
  369 D1:BC40 -  -  -  -  	
  370 D1:BC40 -  -  -  -  pu_physics_loop:
  371 D1:BC40 -  -  -  -  
  372 D1:BC40 -  -  -  -  pu_physics_count .equ $ + 1
  373 D1:BC40 3E 00 -  -  	ld a,0
  374 D1:BC42 3D -  -  -  	dec a 
  375 D1:BC43 CA CD BC D1 	jp z, pu_physics_end
  376 D1:BC47 32 41 BC D1 	ld (pu_physics_count),a
  377 D1:BC4B -  -  -  -  	
  378 D1:BC4B 3A 78 BF D1 	ld a,(player_flags)
  379 D1:BC4F -  -  -  -  	
  380 D1:BC4F CB AF -  -  	res 5,a ;reset in semisolid flag 
  381 D1:BC51 32 78 BF D1 	ld (player_flags),a 
  382 D1:BC55 CB 77 -  -  	bit 6,a 
  383 D1:BC57 C2 40 BC D1 	jp nz,pu_physics_loop ;If on ground, no need to do physics 
  384 D1:BC5B -  -  -  -  	
  385 D1:BC5B -  -  -  -  	
  386 D1:BC5B -  -  -  -  
  387 D1:BC5B -  -  -  -  ;Y POS UPDATE
  388 D1:BC5B -  -  -  -  
  389 D1:BC5B 2A 68 BF D1 	ld hl, (player_y_vel) 	
  390 D1:BC5F EB -  -  -  	ex de,hl 
  391 D1:BC60 2A 62 BF D1 	ld hl, (player_y_pos) 
  392 D1:BC64 19 -  -  -  	add hl,de ;add y vel to y pos 
  393 D1:BC65 22 62 BF D1 	ld (player_y_pos),hl 
  394 D1:BC69 -  -  -  -  	
  395 D1:BC69 -  -  -  -  	;check for vertical collisions here 
  396 D1:BC69 3E DA -  -  	ld a,%11011010;jp c
  397 D1:BC6B 32 88 BD D1 	ld (collision_check_vertical),a
  398 D1:BC6F CD F8 BC D1 	call check_collisions
  399 D1:BC73 -  -  -  -  
  400 D1:BC73 -  -  -  -  pu_update_x_pos:
  401 D1:BC73 -  -  -  -  
  402 D1:BC73 -  -  -  -  ;X POS UPDATE
  403 D1:BC73 2A 65 BF D1 	ld hl, (player_x_vel) 
  404 D1:BC77 EB -  -  -  	ex de,hl 
  405 D1:BC78 2A 5F BF D1 	ld hl, (player_x_pos) 
  406 D1:BC7C 19 -  -  -  	add hl,de ;add x vel to x pos 
  407 D1:BC7D 22 5F BF D1 	ld (player_x_pos),hl 
  408 D1:BC81 -  -  -  -  	
  409 D1:BC81 11 00 09 00 	ld de,$000900
  410 D1:BC85 ED 52 -  -  	sbc hl,de 
  411 D1:BC87 DC 21 BF D1 	call c, reverse_x_vel ;If xpos < 2px
  412 D1:BC8B 2A 5F BF D1 	ld hl, (player_x_pos) 
  413 D1:BC8F 11 00 23 01 	ld de,$012300; if xpos > 300px
  414 D1:BC93 ED 52 -  -  	sbc hl,de 
  415 D1:BC95 D4 21 BF D1 	call nc,reverse_x_vel
  416 D1:BC99 -  -  -  -  	
  417 D1:BC99 -  -  -  -  	;TODO check horizontal collisoins 
  418 D1:BC99 3E D2 -  -  	ld a, %11010010 ;jp nc 
  419 D1:BC9B 32 88 BD D1 	ld (collision_check_vertical),a
  420 D1:BC9F CD F8 BC D1 	call check_collisions
  421 D1:BCA3 -  -  -  -  	
  422 D1:BCA3 -  -  -  -  	;Set previous position 
  423 D1:BCA3 2A 62 BF D1 	ld hl, (player_y_pos)
  424 D1:BCA7 22 6E BF D1 	ld (player_y_pos_prev), hl 
  425 D1:BCAB 2A 5F BF D1 	ld hl, (player_x_pos)
  426 D1:BCAF 22 6B BF D1 	ld (player_x_pos_prev), hl 
  427 D1:BCB3 -  -  -  -  	
  428 D1:BCB3 3A 78 BF D1 	ld a,(player_flags)
  429 D1:BCB7 CB 6F -  -  	bit 5,a ;in semisolid flag 
  430 D1:BCB9 CA C3 BC D1 	jp z, pu_no_semisolid
  431 D1:BCBD CB E7 -  -  	set 4,a	
  432 D1:BCBF C3 C5 BC D1 	jp pu_prev_semisolid
  433 D1:BCC3 -  -  -  -  pu_no_semisolid:
  434 D1:BCC3 CB A7 -  -  	res 4,a 
  435 D1:BCC5 -  -  -  -  pu_prev_semisolid:
  436 D1:BCC5 32 78 BF D1 	ld (player_flags),a 
  437 D1:BCC9 -  -  -  -  	
  438 D1:BCC9 C3 40 BC D1 	jp pu_physics_loop
  439 D1:BCCD -  -  -  -  	;Apply gravity and terminal v check after loop 
  440 D1:BCCD -  -  -  -  	
  441 D1:BCCD -  -  -  -  pu_physics_end:
  442 D1:BCCD -  -  -  -  	;Apply gravity 
  443 D1:BCCD 2A 68 BF D1 	ld hl,(player_y_vel)
  444 D1:BCD1 CB 7C -  -  	bit 7,h  ;Check if vel is negative
  445 D1:BCD3 CA E2 BC D1 	jp z,pu_apply_gravity ;if moving up apply gravity
  446 D1:BCD7 -  -  -  -  	
  447 D1:BCD7 E5 -  -  -  	push hl 
  448 D1:BCD8 -  -  -  -  	;check foor terminal vel 
  449 D1:BCD8 11 80 00 00 	ld de, $000080 ;8px per frame
  450 D1:BCDC 19 -  -  -  	add hl,de ;terminal V is negative
  451 D1:BCDD E1 -  -  -  	pop hl 
  452 D1:BCDE D2 EF BC D1 	jp nc, pu_terminal_vel
  453 D1:BCE2 -  -  -  -  pu_apply_gravity:
  454 D1:BCE2 11 0B 00 00 	ld de,11 ;GRAVITY CONSTANT
  455 D1:BCE6 37 -  -  -  	scf 
  456 D1:BCE7 3F -  -  -  	ccf ;reset carry flag 
  457 D1:BCE8 ED 52 -  -  	sbc hl,de 
  458 D1:BCEA 22 68 BF D1 	ld (player_y_vel),hl
  459 D1:BCEE -  -  -  -  
  460 D1:BCEE C9 -  -  -  	ret 
  461 D1:BCEF -  -  -  -  pu_terminal_vel:
  462 D1:BCEF 21 80 FF FF 	ld hl, $ffff80 ;-8 px per frame
  463 D1:BCF3 22 68 BF D1 	ld (player_y_vel),hl
  464 D1:BCF7 -  -  -  -  	;call write_hl_to_ram
  465 D1:BCF7 C9 -  -  -  	ret 
  466 D1:BCF8 -  -  -  -  
  467 D1:BCF8 -  -  -  -  
  468 D1:BCF8 -  -  -  -  
  469 D1:BCF8 -  -  -  -  check_collisions:
  470 D1:BCF8 3A 64 BF D1 	ld a,(player_y_pos+2) ;Frame Number
  471 D1:BCFC 01 00 00 00 	ld bc,0 
  472 D1:BD00 21 15 F8 D1 	ld hl, Collision_Data_frame_table
  473 D1:BD04 4F -  -  -  	ld c,a 
  474 D1:BD05 09 -  -  -  	add hl,bc ;add frame num 
  475 D1:BD06 09 -  -  -  	add hl,bc ;add frame num 
  476 D1:BD07 09 -  -  -  	add hl,bc ;add frame num 
  477 D1:BD08 ED 27 -  -  	ld hl,(hl)
  478 D1:BD0A -  -  -  -  	
  479 D1:BD0A 3E DA -  -  	ld a,%11011010;jp c
  480 D1:BD0C 32 19 BF D1 	ld(check_col_lower_jump),a 
  481 D1:BD10 -  -  -  -  	
  482 D1:BD10 -  -  -  -  	;hl points to collision data for this frame 
  483 D1:BD10 08 -  -  -  	ex af,af' ;' 
  484 D1:BD11 7E -  -  -  	ld a,(hl) ;ld number of elements 
  485 D1:BD12 3C -  -  -  	inc a ;for 0 case
  486 D1:BD13 08 -  -  -  	ex af,af' ;' 
  487 D1:BD14 23 -  -  -  	inc hl ;to first element
  488 D1:BD15 -  -  -  -  
  489 D1:BD15 -  -  -  -  check_collisions_same_loop:
  490 D1:BD15 -  -  -  -  	;hl pts to ymin of collider 
  491 D1:BD15 08 -  -  -  	ex af,af' ;'
  492 D1:BD16 3D -  -  -  	dec a 
  493 D1:BD17 CA 36 BD D1 	jp z, check_collisions_lower
  494 D1:BD1B 08 -  -  -  	ex af,af';' 
  495 D1:BD1C -  -  -  -  	;Collider bottom is in same frame as player 
  496 D1:BD1C 3A 63 BF D1 	ld a,(player_y_pos + 1)
  497 D1:BD20 96 -  -  -  	sub a,(hl); sub y pos of collider 
  498 D1:BD21 -  -  -  -  	;call write_a_to_ram
  499 D1:BD21 DA 13 BF D1 	jp c, check_col_skip_4 
  500 D1:BD25 23 -  -  -  	inc hl; to height 
  501 D1:BD26 -  -  -  -  	;Player top is above bottom of collider 
  502 D1:BD26 -  -  -  -  	;a holds # pixels above bottom of collider (0 indexed)	
  503 D1:BD26 0E 12 -  -  	ld c,player_collider_height
  504 D1:BD28 -  -  -  -  	;call write_a_to_ram
  505 D1:BD28 91 -  -  -  	sub a,c
  506 D1:BD29 DA 5F BD D1 	jp c, check_col_y_collision
  507 D1:BD2D 96 -  -  -  	sub (hl); cokmpare to collider height -1 
  508 D1:BD2E DA 5F BD D1 	jp c,check_col_y_collision
  509 D1:BD32 -  -  -  -  	;Otherwise no collision 	
  510 D1:BD32 C3 14 BF D1 	jp check_col_skip_3
  511 D1:BD36 -  -  -  -  
  512 D1:BD36 -  -  -  -  check_collisions_lower:
  513 D1:BD36 -  -  -  -  	;hl pts to start of lower frame collisoin data 
  514 D1:BD36 08 -  -  -  	ex af,af' ;' 
  515 D1:BD37 7E -  -  -  	ld a,(hl) ;ld number of elements 
  516 D1:BD38 3C -  -  -  	inc a ;for 0 case
  517 D1:BD39 -  -  -  -  	;call write_a_to_ram
  518 D1:BD39 08 -  -  -  	ex af,af' ;' 
  519 D1:BD3A 23 -  -  -  	inc hl ;to first element
  520 D1:BD3B 3E D2 -  -  	ld a, %11010010 ;jp nc 
  521 D1:BD3D 32 19 BF D1 	ld(check_col_lower_jump),a 
  522 D1:BD41 -  -  -  -  
  523 D1:BD41 -  -  -  -  check_collisions_lower_loop:
  524 D1:BD41 -  -  -  -  ;hl pts to ymin of collider 
  525 D1:BD41 08 -  -  -  	ex af,af' ;'
  526 D1:BD42 3D -  -  -  	dec a 
  527 D1:BD43 C8 -  -  -  	ret z 
  528 D1:BD44 08 -  -  -  	ex af,af';' 
  529 D1:BD45 -  -  -  -  	;collider y min is in frame below player
  530 D1:BD45 -  -  -  -  	;we already know player is above collider bottom 
  531 D1:BD45 3A 63 BF D1 	ld a,(player_y_pos + 1)
  532 D1:BD49 96 -  -  -  	sub (hl)
  533 D1:BD4A D2 13 BF D1 	jp nc,check_col_skip_4
  534 D1:BD4E -  -  -  -  	;call write_a_to_ram
  535 D1:BD4E 23 -  -  -  	inc hl ;to height 
  536 D1:BD4F -  -  -  -  	;a holds px from player top to collider bottom 
  537 D1:BD4F 0E 12 -  -  	ld c,player_collider_height
  538 D1:BD51 -  -  -  -  	;call write_a_to_ram
  539 D1:BD51 91 -  -  -  	sub a,c
  540 D1:BD52 DA 5F BD D1 	jp c, check_col_y_collision
  541 D1:BD56 -  -  -  -  	
  542 D1:BD56 -  -  -  -  	
  543 D1:BD56 -  -  -  -  	;call write_a_to_ram
  544 D1:BD56 96 -  -  -  	sub (hl); cokmpare to collider height -1 
  545 D1:BD57 DA 5F BD D1 	jp c,check_col_y_collision
  546 D1:BD5B -  -  -  -  	;Otherwise no collision 	
  547 D1:BD5B C3 14 BF D1 	jp check_col_skip_3
  548 D1:BD5F -  -  -  -  	
  549 D1:BD5F -  -  -  -  check_col_y_collision:
  550 D1:BD5F -  -  -  -  	;call write_a_to_ram
  551 D1:BD5F -  -  -  -  
  552 D1:BD5F -  -  -  -  	;Player is within Y range of collider 
  553 D1:BD5F -  -  -  -  	;ld a,$AA 
  554 D1:BD5F -  -  -  -  	;call write_a_to_ram;TESTIng
  555 D1:BD5F -  -  -  -  	
  556 D1:BD5F 23 -  -  -  	inc hl ;to x max 
  557 D1:BD60 CD 4D BF D1 	call player_x_half
  558 D1:BD64 -  -  -  -  	;A holds x pos / 2 (paired pixels) 
  559 D1:BD64 -  -  -  -  	
  560 D1:BD64 BE -  -  -  	cp (hl) ;compare to x max 
  561 D1:BD65 -  -  -  -  	;zero or carry = collison 
  562 D1:BD65 CA 71 BD D1 	jp z, check_col_x_collision
  563 D1:BD69 DA 71 BD D1 	jp c, check_col_x_collision
  564 D1:BD6D -  -  -  -  	
  565 D1:BD6D C3 15 BF D1 	jp check_col_skip_2
  566 D1:BD71 -  -  -  -  	
  567 D1:BD71 -  -  -  -  check_col_x_collision:
  568 D1:BD71 -  -  -  -  
  569 D1:BD71 -  -  -  -  	;ld a,$BB
  570 D1:BD71 -  -  -  -  	;call write_a_to_ram
  571 D1:BD71 -  -  -  -  	;Need to find x pos of right of player, then div by 2 
  572 D1:BD71 3A 60 BF D1 	ld a,(player_x_pos+1);Fullpixels
  573 D1:BD75 C6 14 -  -  	add a, player_collider_width ;Will set carry flag if right side of player > 255 and left of player < 255 
  574 D1:BD77 1F -  -  -  	rra ;div by 2 and move carry flag to bit 7. 
  575 D1:BD78 47 -  -  -  	ld b,a 
  576 D1:BD79 3A 61 BF D1 	ld a,(player_x_pos +2 ); MSB pixel 
  577 D1:BD7D 0F -  -  -  	rrca ;move bit 0 to bit 7
  578 D1:BD7E B0 -  -  -  	or b ;a holds right pos of player / 2 
  579 D1:BD7F 23 -  -  -  	inc hl ;to x min 
  580 D1:BD80 BE -  -  -  	cp (hl) 
  581 D1:BD81 -  -  -  -   
  582 D1:BD81 DA 16 BF D1 	jp c, check_col_skip_1 
  583 D1:BD85 -  -  -  -  
  584 D1:BD85 -  -  -  -  
  585 D1:BD85 -  -  -  -  
  586 D1:BD85 -  -  -  -  
  587 D1:BD85 -  -  -  -  
  588 D1:BD85 -  -  -  -  
  589 D1:BD85 -  -  -  -  	
  590 D1:BD85 -  -  -  -  collision_found: ;A collision has been detected
  591 D1:BD85 -  -  -  -  	
  592 D1:BD85 -  -  -  -  	;TESTing 
  593 D1:BD85 23 -  -  -  	inc hl ;to flags 
  594 D1:BD86 7E -  -  -  	ld a,(hl)
  595 D1:BD87 -  -  -  -  	;call write_a_to_ram
  596 D1:BD87 -  -  -  -  	
  597 D1:BD87 37 -  -  -  	scf 
  598 D1:BD88 -  -  -  -  collision_check_vertical .equ $
  599 D1:BD88 DA B7 BD D1 	jp c, collision_check_vert 
  600 D1:BD8C -  -  -  -  	
  601 D1:BD8C -  -  -  -  
  602 D1:BD8C 3A 78 BF D1 	ld a,(player_flags)
  603 D1:BD90 CB 5F -  -  	bit 3,a 
  604 D1:BD92 CA A0 BD D1 	jp z,colis_horiz_not_fall
  605 D1:BD96 -  -  -  -  	;player is falling 
  606 D1:BD96 CB EF -  -  	set 5,a ;set semisolid flag 
  607 D1:BD98 32 78 BF D1 	ld (player_flags),a 
  608 D1:BD9C C3 17 BF D1 	jp check_col_skip_0
  609 D1:BDA0 -  -  -  -  	
  610 D1:BDA0 -  -  -  -  colis_horiz_not_fall:
  611 D1:BDA0 -  -  -  -  	;Player is moving horizontal 
  612 D1:BDA0 7E -  -  -  	ld a,(hl) ;flags 
  613 D1:BDA1 CB 7F -  -  	bit 7,a ;semisolid 
  614 D1:BDA3 C2 F8 BD D1 	jp nz,vert_col_up_semisolid ;skips semisolid 
  615 D1:BDA7 -  -  -  -  
  616 D1:BDA7 CB 77 -  -  	bit 6,a 
  617 D1:BDA9 C2 A7 BE D1 	jp nz, collision_spikes
  618 D1:BDAD -  -  -  -  	
  619 D1:BDAD -  -  -  -  	;TODO breakaway platforms 
  620 D1:BDAD -  -  -  -  	
  621 D1:BDAD -  -  -  -  	;player has moved horiz and hit a solid wall 
  622 D1:BDAD -  -  -  -  	;Reverse x velocity 
  623 D1:BDAD E5 -  -  -  	push hl 
  624 D1:BDAE CD 21 BF D1 	call reverse_x_vel
  625 D1:BDB2 E1 -  -  -  	pop hl 
  626 D1:BDB3 -  -  -  -  	
  627 D1:BDB3 C3 17 BF D1 	jp check_col_skip_0
  628 D1:BDB7 -  -  -  -  
  629 D1:BDB7 -  -  -  -  collision_check_vert:
  630 D1:BDB7 -  -  -  -  	;Player is moving in vertical direction 
  631 D1:BDB7 -  -  -  -  
  632 D1:BDB7 3A 6A BF D1 	ld a,(player_y_vel + 2) ;MSB of y vel 
  633 D1:BDBB CB 7F -  -  	bit 7,a ;check if moving up or down 
  634 D1:BDBD C2 06 BE D1 	jp nz, vert_col_down
  635 D1:BDC1 -  -  -  -  	
  636 D1:BDC1 -  -  -  -  	
  637 D1:BDC1 3A 78 BF D1 	ld a,(player_flags)
  638 D1:BDC5 CB 5F -  -  	bit 3,a 
  639 D1:BDC7 CA D5 BD D1 	jp z,colis_vert_up_not_fall
  640 D1:BDCB CB EF -  -  	set 5,a ;set semisolid flag. All colliders act semisolid while in fall
  641 D1:BDCD 32 78 BF D1 	ld (player_flags),a 
  642 D1:BDD1 C3 17 BF D1 	jp check_col_skip_0
  643 D1:BDD5 -  -  -  -  	
  644 D1:BDD5 -  -  -  -  	
  645 D1:BDD5 -  -  -  -  colis_vert_up_not_fall:
  646 D1:BDD5 -  -  -  -  	;player is moving up 
  647 D1:BDD5 7E -  -  -  	ld a,(hl) ;flags 
  648 D1:BDD6 CB 7F -  -  	bit 7,a ;semisolid 
  649 D1:BDD8 C2 F8 BD D1 	jp nz,vert_col_up_semisolid ;semisolid and moving up
  650 D1:BDDC -  -  -  -  
  651 D1:BDDC CB 77 -  -  	bit 6,a 
  652 D1:BDDE C2 A7 BE D1 	jp nz, collision_spikes
  653 D1:BDE2 -  -  -  -  
  654 D1:BDE2 -  -  -  -  	;TODO breakaway platforms 
  655 D1:BDE2 -  -  -  -  	
  656 D1:BDE2 -  -  -  -  	;Plyaer has moved up and hit non spike object 
  657 D1:BDE2 -  -  -  -  	;Set velocity to 0 
  658 D1:BDE2 E5 -  -  -  	push hl 
  659 D1:BDE3 21 00 00 00 	ld hl,0
  660 D1:BDE7 22 68 BF D1 	ld (player_y_vel),hl 
  661 D1:BDEB 2A 6E BF D1 	ld hl, (player_y_pos_prev) ;revert to previous y pos 
  662 D1:BDEF 22 62 BF D1 	ld (player_y_pos),hl 
  663 D1:BDF3 E1 -  -  -  	pop hl 
  664 D1:BDF4 -  -  -  -  	
  665 D1:BDF4 C3 17 BF D1 	jp check_col_skip_0
  666 D1:BDF8 -  -  -  -  	
  667 D1:BDF8 -  -  -  -  vert_col_up_semisolid:
  668 D1:BDF8 3A 78 BF D1 	ld a,(player_flags)
  669 D1:BDFC CB EF -  -  	set 5,a ;set semisolid flag 
  670 D1:BDFE 32 78 BF D1 	ld (player_flags),a 
  671 D1:BE02 C3 17 BF D1 	jp check_col_skip_0
  672 D1:BE06 -  -  -  -  	
  673 D1:BE06 -  -  -  -  	
  674 D1:BE06 -  -  -  -  	
  675 D1:BE06 -  -  -  -  vert_col_down:
  676 D1:BE06 -  -  -  -  
  677 D1:BE06 -  -  -  -  
  678 D1:BE06 3A 78 BF D1 	ld a,(player_flags)
  679 D1:BE0A CB 5F -  -  	bit 3,a 
  680 D1:BE0C CA 63 BE D1 	jp z,colis_vert_down_not_fall
  681 D1:BE10 CB EF -  -  	set 5,a ;set semisolid flag. All colliders act semisolid while in fall
  682 D1:BE12 32 78 BF D1 	ld (player_flags),a 
  683 D1:BE16 -  -  -  -  	
  684 D1:BE16 E5 -  -  -  	push hl 
  685 D1:BE17 -  -  -  -  	;check if we are below spike hit height 
  686 D1:BE17 2A 7A BF D1 	ld hl,(spike_hit_height)
  687 D1:BE1B EB -  -  -  	ex de,hl 
  688 D1:BE1C 2A 62 BF D1 	ld hl,(player_y_pos) 
  689 D1:BE20 ED 52 -  -  	sbc hl,de 
  690 D1:BE22 DA 2B BE D1 	jp c,check_end_fall
  691 D1:BE26 -  -  -  -  	;Player is above threshold 
  692 D1:BE26 E1 -  -  -  	pop hl 
  693 D1:BE27 C3 17 BF D1 	jp check_col_skip_0 ;continue 
  694 D1:BE2B -  -  -  -  	
  695 D1:BE2B -  -  -  -  
  696 D1:BE2B -  -  -  -  check_end_fall:
  697 D1:BE2B -  -  -  -  	;Player has hit ground below fall threshold 
  698 D1:BE2B 32 78 BF D1 	ld (player_flags),a 
  699 D1:BE2F CB 67 -  -  	bit 4,a ;check we were not in semisolid last update 
  700 D1:BE31 CA 3A BE D1 	jp z, check_end_fall_2; player not currently in collider 
  701 D1:BE35 E1 -  -  -  	pop hl 
  702 D1:BE36 C3 17 BF D1 	jp check_col_skip_0 ;continue 
  703 D1:BE3A -  -  -  -  check_end_fall_2:
  704 D1:BE3A -  -  -  -  	;player can land 
  705 D1:BE3A -  -  -  -  	;check for unlucky bounce 
  706 D1:BE3A CB 9F -  -  	res 3,a 
  707 D1:BE3C 32 78 BF D1 	ld (player_flags),a ;reset fall flag 
  708 D1:BE40 E1 -  -  -  	pop hl 
  709 D1:BE41 3A 7D BF D1 	ld a, (fall_num_bounces)
  710 D1:BE45 47 -  -  -  	ld b,a 
  711 D1:BE46 -  -  -  -  	;call write_a_to_ram
  712 D1:BE46 CD 42 BF D1 	call random_val
  713 D1:BE4A 0E 01 -  -  	ld c,%00000001
  714 D1:BE4C -  -  -  -  unlucky_bounce_loop:
  715 D1:BE4C A1 -  -  -  	and a,c 
  716 D1:BE4D CA 63 BE D1 	jp z,colis_vert_down_not_fall
  717 D1:BE51 CB 01 -  -  	rlc c 
  718 D1:BE53 DA 63 BE D1 	jp c,colis_vert_down_not_fall
  719 D1:BE57 10 F3 -  -  	djnz unlucky_bounce_loop
  720 D1:BE59 -  -  -  -  	
  721 D1:BE59 -  -  -  -  ;Player has hit unlucky bounce 
  722 D1:BE59 E5 -  -  -  	push hl 
  723 D1:BE5A CD B7 BE D1 	call spike_hit_bounce
  724 D1:BE5E E1 -  -  -  	pop hl
  725 D1:BE5F C3 17 BF D1 	jp check_col_skip_0 ;continue 
  726 D1:BE63 -  -  -  -  	
  727 D1:BE63 -  -  -  -  colis_vert_down_not_fall:
  728 D1:BE63 -  -  -  -  	;player is moving down 
  729 D1:BE63 7E -  -  -  	ld a,(hl) ;flags 
  730 D1:BE64 CB 7F -  -  	bit 7,a ;semisolid 
  731 D1:BE66 CA 7B BE D1 	jp z,vert_col_down_solid 
  732 D1:BE6A -  -  -  -  	
  733 D1:BE6A -  -  -  -  	;semisolid and moving down
  734 D1:BE6A 3A 78 BF D1 	ld a,(player_flags)
  735 D1:BE6E CB EF -  -  	set 5,a ;set semisolid flag 
  736 D1:BE70 32 78 BF D1 	ld (player_flags),a 
  737 D1:BE74 CB 67 -  -  	bit 4,a ;check we were not in semisolid last update 
  738 D1:BE76 C2 17 BF D1 	jp nz, check_col_skip_0 ;we were already within semisolid collider 
  739 D1:BE7A -  -  -  -  	;otherwise, hit the collider 
  740 D1:BE7A 7E -  -  -  	ld a,(hl)
  741 D1:BE7B -  -  -  -  
  742 D1:BE7B -  -  -  -  vert_col_down_solid:
  743 D1:BE7B CB 77 -  -  	bit 6,a 
  744 D1:BE7D C2 A7 BE D1 	jp nz, collision_spikes
  745 D1:BE81 -  -  -  -  
  746 D1:BE81 -  -  -  -  	;TODO breakaway platforms 
  747 D1:BE81 -  -  -  -  	
  748 D1:BE81 -  -  -  -  	;Plyaer has moved down and hit non spike object 
  749 D1:BE81 -  -  -  -  	;Set velocity to 0 
  750 D1:BE81 E5 -  -  -  	push hl 
  751 D1:BE82 21 00 00 00 	ld hl,0
  752 D1:BE86 22 68 BF D1 	ld (player_y_vel),hl 
  753 D1:BE8A 2A 6E BF D1 	ld hl, (player_y_pos_prev) ;revert to previous y pos 
  754 D1:BE8E 22 62 BF D1 	ld (player_y_pos),hl 
  755 D1:BE92 22 71 BF D1 	ld (player_last_ground_pos),hl
  756 D1:BE96 E1 -  -  -  	pop hl 
  757 D1:BE97 -  -  -  -  	
  758 D1:BE97 3A 78 BF D1 	ld a,(player_flags)
  759 D1:BE9B CB F7 -  -  	set 6,a  ;set ground flag 
  760 D1:BE9D CB 97 -  -  	res 2,a ;reset tongue flag (cancel tongue if landed)
  761 D1:BE9F 32 78 BF D1 	ld (player_flags),a
  762 D1:BEA3 C3 17 BF D1 	jp check_col_skip_0 ;continue 
  763 D1:BEA7 -  -  -  -  
  764 D1:BEA7 -  -  -  -  
  765 D1:BEA7 -  -  -  -  
  766 D1:BEA7 -  -  -  -  
  767 D1:BEA7 -  -  -  -  
  768 D1:BEA7 -  -  -  -  collision_spikes:
  769 D1:BEA7 E5 -  -  -  	push hl
  770 D1:BEA8 -  -  -  -  	;player has collided with spikes 
  771 D1:BEA8 CD B7 BE D1 	call spike_hit_bounce
  772 D1:BEAC 3E 01 -  -  	ld a,1
  773 D1:BEAE 32 7D BF D1 	ld (fall_num_bounces),a 
  774 D1:BEB2 E1 -  -  -  	pop hl 
  775 D1:BEB3 C3 17 BF D1 	jp check_col_skip_0
  776 D1:BEB7 -  -  -  -  
  777 D1:BEB7 -  -  -  -  
  778 D1:BEB7 -  -  -  -  spike_hit_bounce:
  779 D1:BEB7 21 80 00 00 	ld hl,$000080
  780 D1:BEBB 22 68 BF D1 	ld (player_y_vel),hl 
  781 D1:BEBF CD 42 BF D1 	call random_val
  782 D1:BEC3 CB 47 -  -  	bit 0, a 
  783 D1:BEC5 C2 DA BE D1 	jp nz, spike_negative_bounce
  784 D1:BEC9 21 00 00 00 	ld hl,0
  785 D1:BECD E6 C0 -  -  	and %11000000 ;pull 2 bits of a for velocity
  786 D1:BECF F6 30 -  -  	or  %00110000
  787 D1:BED1 6F -  -  -  	ld l,a 
  788 D1:BED2 22 65 BF D1 	ld (player_x_vel),hl
  789 D1:BED6 C3 E7 BE D1 	jp spike_pos_bounce
  790 D1:BEDA -  -  -  -  spike_negative_bounce:
  791 D1:BEDA 21 FF FF FF 	ld hl,$ffffff
  792 D1:BEDE E6 C0 -  -  	and %11000000 ;pull 2 bits of a for velocity
  793 D1:BEE0 F6 0F -  -  	or  %00001111
  794 D1:BEE2 6F -  -  -  	ld l,a 
  795 D1:BEE3 22 65 BF D1 	ld (player_x_vel),hl
  796 D1:BEE7 -  -  -  -  spike_pos_bounce:
  797 D1:BEE7 3A 78 BF D1 	ld a,(player_flags)
  798 D1:BEEB CB DF -  -  	set 3,a  ;set fall flag 
  799 D1:BEED CB 97 -  -  	res 2,a ;reset tongue flag
  800 D1:BEEF 32 78 BF D1 	ld (player_flags),a 
  801 D1:BEF3 -  -  -  -  	;Set spike hit height 
  802 D1:BEF3 2A 62 BF D1 	ld hl, (player_y_pos)
  803 D1:BEF7 11 00 FF 00 	ld de, $00ff00 ;fall minimum of 256px 
  804 D1:BEFB ED 52 -  -  	sbc hl,de 
  805 D1:BEFD D2 05 BF D1 	jp nc, spike_bounce_min_height_threshold
  806 D1:BF01 21 00 00 00 	ld hl,0
  807 D1:BF05 -  -  -  -  spike_bounce_min_height_threshold:
  808 D1:BF05 11 00 43 00 	ld de, $004300  ;minimum spike height threshold 
  809 D1:BF09 19 -  -  -  	add hl,de 
  810 D1:BF0A 22 7A BF D1 	ld (spike_hit_height),hl 
  811 D1:BF0E CD C2 AB D1 	call write_hl_to_ram
  812 D1:BF12 C9 -  -  -  	ret 
  813 D1:BF13 -  -  -  -  
  814 D1:BF13 -  -  -  -  
  815 D1:BF13 -  -  -  -  check_col_skip_4:
  816 D1:BF13 23 -  -  -  	inc hl ;to height
  817 D1:BF14 -  -  -  -  check_col_skip_3:
  818 D1:BF14 23 -  -  -  	inc hl ;to xmax
  819 D1:BF15 -  -  -  -  check_col_skip_2:	
  820 D1:BF15 23 -  -  -  	inc hl ;to xmin
  821 D1:BF16 -  -  -  -  check_col_skip_1:	
  822 D1:BF16 23 -  -  -  	inc hl ;to flags
  823 D1:BF17 -  -  -  -  check_col_skip_0:
  824 D1:BF17 23 -  -  -  	inc hl ;to next element
  825 D1:BF18 -  -  -  -  	
  826 D1:BF18 37 -  -  -  	scf 
  827 D1:BF19 -  -  -  -  check_col_lower_jump .equ $
  828 D1:BF19 DA 15 BD D1 	jp c, check_collisions_same_loop
  829 D1:BF1D C3 41 BD D1 	jp check_collisions_lower_loop
  830 D1:BF21 -  -  -  -  
  831 D1:BF21 -  -  -  -  
  832 D1:BF21 -  -  -  -  
  833 D1:BF21 -  -  -  -  reverse_x_vel:;bounce player off wall
  834 D1:BF21 2A 65 BF D1 	ld hl,(player_x_vel)
  835 D1:BF25 EB -  -  -  	ex de,hl 
  836 D1:BF26 21 00 00 00 	ld hl,0
  837 D1:BF2A ED 52 -  -  	sbc hl, de  
  838 D1:BF2C -  -  -  -  	
  839 D1:BF2C 7C -  -  -  	ld a,h
  840 D1:BF2D E6 80 -  -  	and %10000000
  841 D1:BF2F CB 3C -  -  	srl h ;div by 2 
  842 D1:BF31 CB 1D -  -  	rr l 
  843 D1:BF33 B4 -  -  -  	or h ;keeps bit 7 the same 
  844 D1:BF34 67 -  -  -  	ld h,a 
  845 D1:BF35 -  -  -  -  
  846 D1:BF35 22 65 BF D1 	ld (player_x_vel),hl 
  847 D1:BF39 2A 6B BF D1 	ld hl, (player_x_pos_prev) ;revert to previous x pos 
  848 D1:BF3D 22 5F BF D1 	ld (player_x_pos),hl 
  849 D1:BF41 C9 -  -  -  	ret 
  850 D1:BF42 -  -  -  -  
  851 D1:BF42 -  -  -  -  
  852 D1:BF42 -  -  -  -  
  853 D1:BF42 -  -  -  -  random_val:
  854 D1:BF42 3A 62 BF D1 	ld a, (player_y_pos)
  855 D1:BF46 4F -  -  -  	ld c,a 
  856 D1:BF47 3A 00 00 F2 	ld a,($F20000) ;fast timer 
  857 D1:BF4B A9 -  -  -  	xor c
  858 D1:BF4C C9 -  -  -  	ret 
  859 D1:BF4D -  -  -  -  
  860 D1:BF4D -  -  -  -  player_x_half:
  861 D1:BF4D 3A 60 BF D1 	ld a,(player_x_pos+1);Fullpixels
  862 D1:BF51 CB 3F -  -  	srl a ;div by 2 
  863 D1:BF53 47 -  -  -  	ld b,a 
  864 D1:BF54 3A 61 BF D1 	ld a,(player_x_pos+2);MSB fullpixel 
  865 D1:BF58 0F -  -  -  	rrca ;Move bit 0 to bit 7
  866 D1:BF59 B0 -  -  -  	or b 
  867 D1:BF5A C9 -  -  -  	ret 
  868 D1:BF5B -  -  -  -  
  869 D1:BF5B -  -  -  -  
  870 D1:BF5B -  -  -  -  jump_strength_up:
  871 D1:BF5B 00 -  -  -  	.db 0 
  872 D1:BF5C -  -  -  -  jump_strength_right:
  873 D1:BF5C 00 -  -  -  	.db 0 
  874 D1:BF5D -  -  -  -  jump_strength_left:
  875 D1:BF5D 00 -  -  -  	.db 0
  876 D1:BF5E -  -  -  -  jump_charge_timer:
  877 D1:BF5E 00 -  -  -  	.db 0 
  878 D1:BF5F -  -  -  -  
  879 D1:BF5F -  -  -  -  	
  880 D1:BF5F -  -  -  -  timer_max_val .equ 32
  881 D1:BF5F -  -  -  -  
  882 D1:BF5F -  -  -  -  player_collider_height .equ 18
  883 D1:BF5F -  -  -  -  player_collider_width .equ 20 ;width -1 
  884 D1:BF5F -  -  -  -  
  885 D1:BF5F -  -  -  -  
  886 D1:BF5F -  -  -  -  player_x_pos:
  887 D1:BF5F 00 00 00 -  	.dl 0 ; (MSB fullpixel, Fullpixels, subpixels)
  888 D1:BF62 -  -  -  -  	
  889 D1:BF62 -  -  -  -  player_y_pos:
  890 D1:BF62 00 00 00 -  	.dl 0 ; (Frame #, Fullpixels, subpixels)
  891 D1:BF65 -  -  -  -  
  892 D1:BF65 -  -  -  -  player_x_vel:
  893 D1:BF65 00 00 00 -  	.dl 0 ; (Unused, Fullpixels, subpixels)
  894 D1:BF68 -  -  -  -  	
  895 D1:BF68 -  -  -  -  player_y_vel:
  896 D1:BF68 00 00 00 -  	.dl 0 ; (Unused, Fullpixels, subpixels)
  897 D1:BF6B -  -  -  -  
  898 D1:BF6B -  -  -  -  
  899 D1:BF6B -  -  -  -  player_x_pos_prev: ;x position before update, revert to this if collision 
  900 D1:BF6B 00 00 00 -  	.dl 0 ; (MSB fullpixel, Fullpixels, subpixels)
  901 D1:BF6E -  -  -  -  	
  902 D1:BF6E -  -  -  -  player_y_pos_prev: ;y position before update, revert to this if collision :
  903 D1:BF6E 00 00 00 -  	.dl 0 ; (Frame #, Fullpixels, subpixels)
  904 D1:BF71 -  -  -  -  
  905 D1:BF71 -  -  -  -  player_last_ground_pos:
  906 D1:BF71 00 00 00 -  	.dl 0
  907 D1:BF74 -  -  -  -  
  908 D1:BF74 -  -  -  -  tongue_ring_y_pos:
  909 D1:BF74 00 00 00 -  	.dl 0
  910 D1:BF77 -  -  -  -  tongue_ring_x_pos:
  911 D1:BF77 00 -  -  -  	.db 0	
  912 D1:BF78 -  -  -  -  tongue_max_length .equ 90
  913 D1:BF78 -  -  -  -  
  914 D1:BF78 -  -  -  -  player_flags:
  915 D1:BF78 00 -  -  -  	.db %00000000 ; (7 = Any jump button held, 6 = on ground,5 = within semisolid, 4 = in semisolid last update, 3= isfalling, 2 = tongueActive, 1 = lastDirection(1=right))
  916 D1:BF79 00 -  -  -  	.db %00000000 ; 7= cam move up, 6 = cam move down
  917 D1:BF7A -  -  -  -  spike_hit_height:
  918 D1:BF7A 00 00 00 -  	.dl 0 ;Height where player can land after hitting spike
  919 D1:BF7D -  -  -  -  fall_num_bounces:
  920 D1:BF7D 00 -  -  -  	.db 0 ;Number of times player has had unlucky bounce
  921 D1:BF7E -  -  -  -  tongue_extend_timer:
  922 D1:BF7E 00 -  -  -  	.db 0 ;Timer for extend tongue anim
  923 D1:BF7F -  -  -  -  
  924 D1:BF7F -  -  -  -  	
  925 D1:BF7F -  -  -  -  	
  926 D1:BF7F -  -  -  -  	
  927 D1:BF7F -  -  -  -  	
  928 D1:BF7F -  -  -  -  	
  929 D1:BF7F -  -  -  -  	
  930 D1:BF7F -  -  -  -  	
  931 D1:BF7F -  -  -  -  	
  932 D1:BF7F -  -  -  -  	
  933 D1:BF7F -  -  -  -  	
  934 D1:BF7F -  -  -  -  player_move_debug:
  935 D1:BF7F -  -  -  -  ;DEBUG MODE ============================================================================= 
  936 D1:BF7F 21 00 00 F5 	ld	hl,DI_Mode		; register for keypad mode
  937 D1:BF83 36 02 -  -  	ld	(hl),2			; set single scan mode
  938 D1:BF85 AF -  -  -  	xor	a,a
  939 D1:BF86 -  -  -  -  dbg_scan_wait:
  940 D1:BF86 BE -  -  -  	cp	a,(hl)			; wait for keypad idle mode
  941 D1:BF87 20 FD -  -  	jr	nz,dbg_scan_wait
  942 D1:BF89 -  -  -  -  	
  943 D1:BF89 3A 1A 00 F5 	ld a,(kbdG5)
  944 D1:BF8D CB 57 -  -  	bit kbit6,a 
  945 D1:BF8F C2 C5 BF D1 	jp nz, player_move_debug_right
  946 D1:BF93 -  -  -  -  	
  947 D1:BF93 3A 16 00 F5 	ld a,(kbdG3)
  948 D1:BF97 CB 57 -  -  	bit kbit4,a 
  949 D1:BF99 C2 B2 BF D1 	jp nz, player_move_debug_left
  950 D1:BF9D -  -  -  -  	
  951 D1:BF9D 3A 18 00 F5 	ld a,(kbdG4)
  952 D1:BFA1 CB 4F -  -  	bit kbit2,a 
  953 D1:BFA3 C2 E9 BF D1 	jp nz, player_move_debug_down 
  954 D1:BFA7 -  -  -  -  	
  955 D1:BFA7 3A 18 00 F5 	ld a,(kbdG4)
  956 D1:BFAB CB 5F -  -  	bit kbit8,a 
  957 D1:BFAD C2 D7 BF D1 	jp nz, player_move_debug_up
  958 D1:BFB1 -  -  -  -  	
  959 D1:BFB1 C9 -  -  -  	ret 
  960 D1:BFB2 -  -  -  -  	
  961 D1:BFB2 -  -  -  -  	
  962 D1:BFB2 -  -  -  -  
  963 D1:BFB2 -  -  -  -  
  964 D1:BFB2 -  -  -  -  player_move_debug_left:
  965 D1:BFB2 2A 5F BF D1 	ld hl,(player_x_pos)
  966 D1:BFB6 01 80 00 00 	ld bc, 128
  967 D1:BFBA ED 42 -  -  	sbc hl,bc 
  968 D1:BFBC 22 5F BF D1 	ld (player_x_pos),hl 
  969 D1:BFC0 CD F8 BC D1 	call check_collisions
  970 D1:BFC4 C9 -  -  -  	ret 
  971 D1:BFC5 -  -  -  -  
  972 D1:BFC5 -  -  -  -  player_move_debug_right:
  973 D1:BFC5 2A 5F BF D1 	ld hl,(player_x_pos)
  974 D1:BFC9 01 80 00 00 	ld bc, 128
  975 D1:BFCD 09 -  -  -  	add hl,bc 
  976 D1:BFCE 22 5F BF D1 	ld (player_x_pos),hl 
  977 D1:BFD2 CD F8 BC D1 	call check_collisions
  978 D1:BFD6 C9 -  -  -  	ret 
  979 D1:BFD7 -  -  -  -  
  980 D1:BFD7 -  -  -  -  player_move_debug_up:
  981 D1:BFD7 2A 62 BF D1 	ld hl,(player_y_pos)
  982 D1:BFDB 01 80 00 00 	ld bc, 128
  983 D1:BFDF 09 -  -  -  	add hl,bc 
  984 D1:BFE0 22 62 BF D1 	ld (player_y_pos),hl 
  985 D1:BFE4 CD F8 BC D1 	call check_collisions
  986 D1:BFE8 C9 -  -  -  	ret 
  987 D1:BFE9 -  -  -  -  
  988 D1:BFE9 -  -  -  -  player_move_debug_down:
  989 D1:BFE9 2A 62 BF D1 	ld hl,(player_y_pos)
  990 D1:BFED 01 80 00 00 	ld bc, 128
  991 D1:BFF1 ED 42 -  -  	sbc hl,bc 
  992 D1:BFF3 22 62 BF D1 	ld (player_y_pos),hl 
  993 D1:BFF7 CD F8 BC D1 	call check_collisions
  994 D1:BFFB C9 -  -  -  	ret
Listing for file "ascent.asm"
  601 D1:BFFC -  -  -  -  #include "PlayerDraw.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\PlayerDraw.txt"
    1 D1:BFFC -  -  -  -  
    2 D1:BFFC -  -  -  -  
    3 D1:BFFC -  -  -  -  desired_cam_pos: ;Target position, can smoothly move cam to here 
    4 D1:BFFC 00 00 00 -  	.dl 0
    5 D1:BFFF -  -  -  -  
    6 D1:BFFF -  -  -  -  player_move_cam:
    7 D1:BFFF -  -  -  -  	;cam follow player 
    8 D1:BFFF -  -  -  -  	;if player on ground, scroll up to keep player near bottom of screen, 90px
    9 D1:BFFF -  -  -  -  	;if player below last grounded pos, desired cam pos = 150px
   10 D1:BFFF -  -  -  -  	;if player is near top of screen, scroll up 
   11 D1:BFFF -  -  -  -  	
   12 D1:BFFF -  -  -  -  	;if player using tounge scroll up
   13 D1:BFFF -  -  -  -  	
   14 D1:BFFF -  -  -  -  	
   15 D1:BFFF 3A 78 BF D1 	ld a,(player_flags)
   16 D1:C003 CB 77 -  -  	bit 6,a ;ground flag 
   17 D1:C005 C2 45 C0 D1 	jp nz, pmc_grounded
   18 D1:C009 CB 5F -  -  	bit 3,a ;is falling 
   19 D1:C00B C2 70 C0 D1 	jp nz, pmc_falling
   20 D1:C00F -  -  -  -  	;otherwise, check if player below last grounded pos 
   21 D1:C00F 2A 71 BF D1 	ld hl,(player_last_ground_pos)
   22 D1:C013 EB -  -  -  	ex de,hl 
   23 D1:C014 2A 62 BF D1 	ld hl,(player_y_pos)
   24 D1:C018 ED 52 -  -  	sbc hl,de 
   25 D1:C01A DA B8 C0 D1 	jp c, pmc_below_last_ground
   26 D1:C01E -  -  -  -  	
   27 D1:C01E -  -  -  -  	
   28 D1:C01E -  -  -  -  	;Check if player is near top or bottom of screen
   29 D1:C01E 2A E6 AB D1 	ld hl, (cam_pos)
   30 D1:C022 E5 -  -  -  	push hl
   31 D1:C023 CD 7F C3 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
   32 D1:C027 D1 -  -  -  	pop de 	
   33 D1:C028 ED 52 -  -  	sbc hl,de ;max cam pos - current cam pos 
   34 D1:C02A -  -  -  -  	;hl holds how far up to move cam to have player at bottom = how far player is above bottom of screen
   35 D1:C02A E5 -  -  -  	push hl 
   36 D1:C02B DA D3 C0 D1 	jp c, pmc_player_near_bottom ;player is below screen, need to move cam down
   37 D1:C02F 11 0A 00 00 	ld de,10
   38 D1:C033 ED 52 -  -  	sbc hl,de ;check if within 10px of screen bottom 
   39 D1:C035 DA D3 C0 D1 	jp c,pmc_player_near_bottom 
   40 D1:C039 -  -  -  -  	
   41 D1:C039 E1 -  -  -  	pop hl 
   42 D1:C03A 11 F0 00 00 	ld de,240
   43 D1:C03E ED 52 -  -  	sbc hl,de 
   44 D1:C040 D2 EB C0 D1 	jp nc, pmc_player_near_top
   45 D1:C044 -  -  -  -  	
   46 D1:C044 -  -  -  -  	;no cam move needed 
   47 D1:C044 C9 -  -  -  	ret 
   48 D1:C045 -  -  -  -  	
   49 D1:C045 -  -  -  -  	
   50 D1:C045 -  -  -  -  pmc_grounded:
   51 D1:C045 -  -  -  -  
   52 D1:C045 3A 79 BF D1 	ld a,(player_flags+1);camera control flags 
   53 D1:C049 CB 7F -  -  	bit 7,a 
   54 D1:C04B C2 8B C0 D1 	jp nz,pmc_camscroll_up
   55 D1:C04F CB 77 -  -  	bit 6,a 
   56 D1:C051 C2 9D C0 D1 	jp nz,pmc_camscroll_down
   57 D1:C055 -  -  -  -  	;If player on ground, desired cam pos = 90px below player 
   58 D1:C055 CD 7F C3 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
   59 D1:C059 11 5A 00 00 	ld de,90
   60 D1:C05D ED 52 -  -  	sbc hl,de
   61 D1:C05F D2 67 C0 D1 	jp nc, set_desired_pos_0_skip
   62 D1:C063 21 00 00 00 	ld hl,0
   63 D1:C067 -  -  -  -  set_desired_pos_0_skip:
   64 D1:C067 22 FC BF D1 	ld (desired_cam_pos),hl 
   65 D1:C06B CD FA C0 D1 	call pmc_move_towards_desired_pos
   66 D1:C06F C9 -  -  -  	ret 
   67 D1:C070 -  -  -  -  
   68 D1:C070 -  -  -  -  
   69 D1:C070 -  -  -  -  pmc_falling:
   70 D1:C070 CD 7F C3 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
   71 D1:C074 11 DC 00 00 	ld de,220
   72 D1:C078 ED 52 -  -  	sbc hl,de
   73 D1:C07A D2 67 C0 D1 	jp nc, set_desired_pos_0_skip
   74 D1:C07E 21 00 00 00 	ld hl,0
   75 D1:C082 22 FC BF D1 	ld (desired_cam_pos),hl 
   76 D1:C086 CD FA C0 D1 	call pmc_move_towards_desired_pos
   77 D1:C08A C9 -  -  -  	ret 
   78 D1:C08B -  -  -  -  
   79 D1:C08B -  -  -  -  pmc_camscroll_up:
   80 D1:C08B CD 7F C3 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
   81 D1:C08F 11 40 01 00 	ld de,320
   82 D1:C093 19 -  -  -  	add hl,de 
   83 D1:C094 22 FC BF D1 	ld (desired_cam_pos),hl 
   84 D1:C098 CD FA C0 D1 	call pmc_move_towards_desired_pos
   85 D1:C09C C9 -  -  -  	ret
   86 D1:C09D -  -  -  -  
   87 D1:C09D -  -  -  -  pmc_camscroll_down:
   88 D1:C09D CD 7F C3 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
   89 D1:C0A1 11 04 01 00 	ld de,260
   90 D1:C0A5 ED 52 -  -  	sbc hl,de 
   91 D1:C0A7 D2 67 C0 D1 	jp nc, set_desired_pos_0_skip
   92 D1:C0AB 21 00 00 00 	ld hl,0
   93 D1:C0AF 22 FC BF D1 	ld (desired_cam_pos),hl 
   94 D1:C0B3 CD FA C0 D1 	call pmc_move_towards_desired_pos
   95 D1:C0B7 C9 -  -  -  	ret
   96 D1:C0B8 -  -  -  -  
   97 D1:C0B8 -  -  -  -  pmc_below_last_ground:
   98 D1:C0B8 -  -  -  -  	;if below last ground pos, deired pos = 150px 
   99 D1:C0B8 CD 7F C3 D1 	call player_to_cam_coords ;hl holds cam pos to put player at bottom of frame
  100 D1:C0BC 11 96 00 00 	ld de,150
  101 D1:C0C0 ED 52 -  -  	sbc hl,de 
  102 D1:C0C2 D2 67 C0 D1 	jp nc, set_desired_pos_0_skip
  103 D1:C0C6 21 00 00 00 	ld hl,0
  104 D1:C0CA 22 FC BF D1 	ld (desired_cam_pos),hl 
  105 D1:C0CE CD FA C0 D1 	call pmc_move_towards_desired_pos
  106 D1:C0D2 C9 -  -  -  	ret
  107 D1:C0D3 -  -  -  -  
  108 D1:C0D3 -  -  -  -  
  109 D1:C0D3 -  -  -  -  pmc_player_near_bottom: ;need to set cam to 10px from bottom
  110 D1:C0D3 E1 -  -  -  	pop hl
  111 D1:C0D4 CD 7F C3 D1 	call player_to_cam_coords
  112 D1:C0D8 11 0C 00 00 	ld de,12
  113 D1:C0DC ED 52 -  -  	sbc hl,de 
  114 D1:C0DE D2 26 C1 D1 	jp nc,set_cam_0_skip
  115 D1:C0E2 21 00 00 00 	ld hl,0
  116 D1:C0E6 22 E6 AB D1 	ld (cam_pos),hl 
  117 D1:C0EA C9 -  -  -  	ret 
  118 D1:C0EB -  -  -  -  	
  119 D1:C0EB -  -  -  -  pmc_player_near_top: ;need to set cam to 10px from top
  120 D1:C0EB CD 7F C3 D1 	call player_to_cam_coords
  121 D1:C0EF 11 F0 00 00 	ld de,240
  122 D1:C0F3 ED 52 -  -  	sbc hl,de 
  123 D1:C0F5 22 E6 AB D1 	ld (cam_pos),hl 
  124 D1:C0F9 -  -  -  -  	
  125 D1:C0F9 C9 -  -  -  	ret 
  126 D1:C0FA -  -  -  -  
  127 D1:C0FA -  -  -  -  
  128 D1:C0FA -  -  -  -  pmc_move_towards_desired_pos: 
  129 D1:C0FA -  -  -  -  	;moves cam closer to desired cam pos. Speed proportinal to difference btwn current and desired 
  130 D1:C0FA 2A FC BF D1 	ld hl,(desired_cam_pos)
  131 D1:C0FE -  -  -  -  	;call write_hl_to_ram
  132 D1:C0FE EB -  -  -  	ex de,hl 
  133 D1:C0FF 2A E6 AB D1 	ld hl,(cam_pos)
  134 D1:C103 ED 52 -  -  	sbc hl,de 
  135 D1:C105 DA 2B C1 D1 	jp c, pmc_move_towards_up
  136 D1:C109 -  -  -  -  	;else move cam down 
  137 D1:C109 7D -  -  -  	ld a,l 
  138 D1:C10A 11 00 00 00 	ld de,0 
  139 D1:C10E CD 47 C1 D1 	call pmc_set_speed
  140 D1:C112 7C -  -  -  	ld a,h 
  141 D1:C113 B7 -  -  -  	or a 
  142 D1:C114 C4 74 C1 D1 	call nz,pmc_max_speed ;set max speed
  143 D1:C118 2A E6 AB D1 	ld hl,(cam_pos)
  144 D1:C11C ED 52 -  -  	sbc hl,de ;add speed to cam pos 
  145 D1:C11E -  -  -  -  	
  146 D1:C11E D2 26 C1 D1 	jp nc,set_cam_0_skip
  147 D1:C122 21 00 00 00 	ld hl,0
  148 D1:C126 -  -  -  -  set_cam_0_skip:
  149 D1:C126 22 E6 AB D1 	ld (cam_pos),hl 
  150 D1:C12A C9 -  -  -  	ret 
  151 D1:C12B -  -  -  -  	
  152 D1:C12B -  -  -  -  pmc_move_towards_up:
  153 D1:C12B -  -  -  -  	;hl holds difference btwn current and desired, is negative
  154 D1:C12B -  -  -  -  	;check bits of l to determine speed 
  155 D1:C12B 7D -  -  -  	ld a,l 
  156 D1:C12C ED 44 -  -  	neg 
  157 D1:C12E 11 00 00 00 	ld de,0
  158 D1:C132 CD 47 C1 D1 	call pmc_set_speed ;de holds px to add 
  159 D1:C136 7C -  -  -  	ld a,h 
  160 D1:C137 EE FF -  -  	xor %11111111 ;Check if h has zeros = >255 px difference 
  161 D1:C139 C4 74 C1 D1 	call nz,pmc_max_speed ;set max speed
  162 D1:C13D 2A E6 AB D1 	ld hl,(cam_pos)
  163 D1:C141 19 -  -  -  	add hl,de ;add speed to cam pos 
  164 D1:C142 22 E6 AB D1 	ld (cam_pos),hl 
  165 D1:C146 -  -  -  -  	;call write_hl_to_ram
  166 D1:C146 C9 -  -  -  	ret 
  167 D1:C147 -  -  -  -  	
  168 D1:C147 -  -  -  -  
  169 D1:C147 -  -  -  -  
  170 D1:C147 -  -  -  -  
  171 D1:C147 -  -  -  -  pmc_set_speed: ;a holds magnitude of difference btwn current and desired pos 
  172 D1:C147 1E 00 -  -  	ld e, 0
  173 D1:C149 FE 03 -  -  	cp 3
  174 D1:C14B D8 -  -  -  	ret c ;difference < 3px
  175 D1:C14C 1E 01 -  -  	ld e, 1
  176 D1:C14E FE 0A -  -  	cp 10
  177 D1:C150 D8 -  -  -  	ret c ;difference < 8px
  178 D1:C151 1E 02 -  -  	ld e, 2
  179 D1:C153 FE 14 -  -  	cp 20
  180 D1:C155 D8 -  -  -  	ret c ;difference < 16px
  181 D1:C156 1E 03 -  -  	ld e, 3
  182 D1:C158 FE 1E -  -  	cp 30
  183 D1:C15A C8 -  -  -  	ret z ;difference < 24px
  184 D1:C15B 1E 04 -  -  	ld e, 4
  185 D1:C15D FE 28 -  -  	cp 40
  186 D1:C15F D8 -  -  -  	ret c 
  187 D1:C160 1E 05 -  -  	ld e, 5
  188 D1:C162 FE 37 -  -  	cp 55
  189 D1:C164 D8 -  -  -  	ret c 
  190 D1:C165 1E 08 -  -  	ld e, 8
  191 D1:C167 FE 5A -  -  	cp 90
  192 D1:C169 D8 -  -  -  	ret c 
  193 D1:C16A 1E 0C -  -  	ld e, 12
  194 D1:C16C FE 8C -  -  	cp 140
  195 D1:C16E D8 -  -  -  	ret c
  196 D1:C16F 1E 14 -  -  	ld e, 20
  197 D1:C171 FE FA -  -  	cp 250
  198 D1:C173 D8 -  -  -  	ret c
  199 D1:C174 -  -  -  -  pmc_max_speed:	
  200 D1:C174 1E 18 -  -  	ld e, 24 ;Max cam speed px/frame
  201 D1:C176 C9 -  -  -  	ret
  202 D1:C177 -  -  -  -  
  203 D1:C177 -  -  -  -  player_draw:
  204 D1:C177 -  -  -  -  ;Draw sprite and reset any flags 
  205 D1:C177 -  -  -  -  
  206 D1:C177 01 00 00 00 	ld bc,0 ;clear 
  207 D1:C17B -  -  -  -  	;bc is sprite index counter 
  208 D1:C17B -  -  -  -  	;default, charge, chargelit, jump, jumpmouth, fall
  209 D1:C17B -  -  -  -  	;Add 4 for sprite, add 2 for flip, add 1 for offset
  210 D1:C17B -  -  -  -  	
  211 D1:C17B 3A 78 BF D1 	ld a,(player_flags)
  212 D1:C17F CB 5F -  -  	bit 3,a ;check fall flag 
  213 D1:C181 C2 BF C1 D1 	jp nz,pd_set_fall
  214 D1:C185 -  -  -  -  	;TODO tounge flag
  215 D1:C185 CB 57 -  -  	bit 2,a 
  216 D1:C187 C2 E1 C1 D1 	jp nz,pd_set_tongue
  217 D1:C18B CB 7F -  -  	bit 7,a ;Check jump held flag 
  218 D1:C18D C2 1A C2 D1 	jp nz,pd_set_charge
  219 D1:C191 -  -  -  -  	
  220 D1:C191 CB 77 -  -  	bit 6,a ;on ground flag
  221 D1:C193 CA 70 C2 D1 	jp z, pd_set_jump
  222 D1:C197 -  -  -  -  
  223 D1:C197 -  -  -  -  	;On ground 
  224 D1:C197 -  -  -  -  	;c=0
  225 D1:C197 -  -  -  -  	;Set sprite heights and offsets
  226 D1:C197 3E 13 -  -  	ld a,19
  227 D1:C199 32 14 C3 D1 	ld (pd_sprite_height_1),a 
  228 D1:C19D 32 47 C3 D1 	ld (pd_sprite_height_2),a 
  229 D1:C1A1 3E 02 -  -  	ld a,2
  230 D1:C1A3 32 AD C2 D1 	ld (pd_x_offset_noflip),a 
  231 D1:C1A7 32 A5 C2 D1 	ld (pd_x_offset_flip),a 
  232 D1:C1AB 3E 01 -  -  	ld a,1 
  233 D1:C1AD 32 E5 C2 D1 	ld (pd_y_offset),a
  234 D1:C1B1 3A 78 BF D1 	ld a,(player_flags)
  235 D1:C1B5 CB 4F -  -  	bit 1,a 
  236 D1:C1B7 C2 AC C2 D1 	jp nz,pd_noflip
  237 D1:C1BB C3 98 C2 D1 	jp pd_flip
  238 D1:C1BF -  -  -  -  
  239 D1:C1BF -  -  -  -  pd_set_fall:
  240 D1:C1BF 0E 14 -  -  	ld c,20
  241 D1:C1C1 3E 1A -  -  	ld a,26
  242 D1:C1C3 32 14 C3 D1 	ld (pd_sprite_height_1),a 
  243 D1:C1C7 32 47 C3 D1 	ld (pd_sprite_height_2),a 
  244 D1:C1CB 3E 01 -  -  	ld a,1
  245 D1:C1CD 32 AD C2 D1 	ld (pd_x_offset_noflip),a 
  246 D1:C1D1 3E 00 -  -  	ld a,0
  247 D1:C1D3 32 A5 C2 D1 	ld (pd_x_offset_flip),a 
  248 D1:C1D7 3E 07 -  -  	ld a,7 
  249 D1:C1D9 32 E5 C2 D1 	ld (pd_y_offset),a 
  250 D1:C1DD C3 8E C2 D1 	jp pd_check_flip
  251 D1:C1E1 -  -  -  -  
  252 D1:C1E1 -  -  -  -  pd_set_tongue:
  253 D1:C1E1 3E 1D -  -  	ld a,29
  254 D1:C1E3 32 14 C3 D1 	ld (pd_sprite_height_1),a 
  255 D1:C1E7 32 47 C3 D1 	ld (pd_sprite_height_2),a 
  256 D1:C1EB 3E 01 -  -  	ld a,1 
  257 D1:C1ED 32 E5 C2 D1 	ld (pd_y_offset),a 
  258 D1:C1F1 -  -  -  -  	
  259 D1:C1F1 -  -  -  -  	;Need to check if player center is to the left or right of ring, will determine flip 
  260 D1:C1F1 CD 4D BF D1 	call player_x_half ;a holds x pos in px pairs
  261 D1:C1F5 06 03 -  -  	ld b,3 ;center offset for jump sprite (in pairs) from collider 
  262 D1:C1F7 80 -  -  -  	add a,b 
  263 D1:C1F8 -  -  -  -  	;compare to ring pos to determine sprite flip
  264 D1:C1F8 47 -  -  -  	ld b,a 
  265 D1:C1F9 3A 77 BF D1 	ld a,(tongue_ring_x_pos)
  266 D1:C1FD B8 -  -  -  	cp b 
  267 D1:C1FE D2 0E C2 D1 	jp nc, pd_tongue_noflip
  268 D1:C202 -  -  -  -  	;ring to left of player, yes flip 
  269 D1:C202 06 00 -  -  	ld b,0
  270 D1:C204 0E 12 -  -  	ld c,18
  271 D1:C206 11 02 00 00 	ld de,2 ;flip offset
  272 D1:C20A C3 BA C2 D1 	jp pd_check_offset
  273 D1:C20E -  -  -  -  pd_tongue_noflip:
  274 D1:C20E -  -  -  -  	;ring is to the right of player, no sprite flip
  275 D1:C20E 06 00 -  -  	ld b,0
  276 D1:C210 0E 10 -  -  	ld c,16
  277 D1:C212 11 07 00 00 	ld de,7
  278 D1:C216 C3 BA C2 D1 	jp pd_check_offset
  279 D1:C21A -  -  -  -  
  280 D1:C21A -  -  -  -  pd_set_charge:
  281 D1:C21A 3E 12 -  -  	ld a,18
  282 D1:C21C 32 14 C3 D1 	ld (pd_sprite_height_1),a 
  283 D1:C220 32 47 C3 D1 	ld (pd_sprite_height_2),a 
  284 D1:C224 3E 02 -  -  	ld a,2
  285 D1:C226 32 AD C2 D1 	ld (pd_x_offset_noflip),a 
  286 D1:C22A 32 A5 C2 D1 	ld (pd_x_offset_flip),a 
  287 D1:C22E 3E 00 -  -  	ld a,0
  288 D1:C230 32 E5 C2 D1 	ld (pd_y_offset),a 
  289 D1:C234 -  -  -  -  
  290 D1:C234 3A 5E BF D1 	ld a,(jump_charge_timer)
  291 D1:C238 FE 20 -  -  	cp timer_max_val
  292 D1:C23A DA 48 C2 D1 	jp c,pd_set_charge_norm
  293 D1:C23E -  -  -  -  
  294 D1:C23E 3A 00 AC D1 	ld a,(frameCount)
  295 D1:C242 CB 57 -  -  	bit 2,a 
  296 D1:C244 C2 5C C2 D1 	jp nz,pd_set_charge_lit 
  297 D1:C248 -  -  -  -  pd_set_charge_norm:
  298 D1:C248 0E 04 -  -  	ld c,4
  299 D1:C24A 3A 5D BF D1 	ld a,(jump_strength_left)
  300 D1:C24E 47 -  -  -  	ld b,a 
  301 D1:C24F 3A 5C BF D1 	ld a,(jump_strength_right)
  302 D1:C253 90 -  -  -  	sub a,b ;Check which direction jump is being charged 
  303 D1:C254 D2 AC C2 D1 	jp nc,pd_noflip
  304 D1:C258 C3 98 C2 D1 	jp pd_flip
  305 D1:C25C -  -  -  -  	
  306 D1:C25C -  -  -  -  pd_set_charge_lit:
  307 D1:C25C 0E 08 -  -  	ld c,8
  308 D1:C25E 3A 5D BF D1 	ld a,(jump_strength_left)
  309 D1:C262 47 -  -  -  	ld b,a 
  310 D1:C263 3A 5C BF D1 	ld a,(jump_strength_right)
  311 D1:C267 90 -  -  -  	sub a,b ;Check which direction jump is being charged 
  312 D1:C268 D2 AC C2 D1 	jp nc,pd_noflip
  313 D1:C26C C3 98 C2 D1 	jp pd_flip
  314 D1:C270 -  -  -  -  	
  315 D1:C270 -  -  -  -  	
  316 D1:C270 -  -  -  -  pd_set_jump:
  317 D1:C270 0E 0C -  -  	ld c,12
  318 D1:C272 3E 1D -  -  	ld a,29
  319 D1:C274 32 14 C3 D1 	ld (pd_sprite_height_1),a 
  320 D1:C278 32 47 C3 D1 	ld (pd_sprite_height_2),a 
  321 D1:C27C 3E 07 -  -  	ld a,7
  322 D1:C27E 32 AD C2 D1 	ld (pd_x_offset_noflip),a 
  323 D1:C282 3E 02 -  -  	ld a,2
  324 D1:C284 32 A5 C2 D1 	ld (pd_x_offset_flip),a 
  325 D1:C288 3E 01 -  -  	ld a,1 
  326 D1:C28A 32 E5 C2 D1 	ld (pd_y_offset),a 
  327 D1:C28E -  -  -  -  	
  328 D1:C28E -  -  -  -  
  329 D1:C28E -  -  -  -  pd_check_flip:
  330 D1:C28E 3A 67 BF D1 	ld a,(player_x_vel + 2);MSB velocity
  331 D1:C292 CB 7F -  -  	bit 7,a 
  332 D1:C294 CA AC C2 D1 	jp z,pd_noflip
  333 D1:C298 -  -  -  -  pd_flip:
  334 D1:C298 0C -  -  -  	inc c 
  335 D1:C299 0C -  -  -  	inc c
  336 D1:C29A 3A 78 BF D1 	ld a,(player_flags)
  337 D1:C29E CB 8F -  -  	res 1,a 
  338 D1:C2A0 32 78 BF D1 	ld (player_flags),a 
  339 D1:C2A4 -  -  -  -  pd_x_offset_flip .equ $+1
  340 D1:C2A4 11 00 00 00 	ld de,0 
  341 D1:C2A8 C3 BA C2 D1 	jp pd_check_offset
  342 D1:C2AC -  -  -  -  pd_noflip:
  343 D1:C2AC -  -  -  -  pd_x_offset_noflip .equ $+1
  344 D1:C2AC 11 00 00 00 	ld de,0 
  345 D1:C2B0 3A 78 BF D1 	ld a,(player_flags)
  346 D1:C2B4 CB CF -  -  	set 1,a 
  347 D1:C2B6 32 78 BF D1 	ld (player_flags),a 
  348 D1:C2BA -  -  -  -  pd_check_offset:
  349 D1:C2BA -  -  -  -  	;ld x pos
  350 D1:C2BA 2A 60 BF D1 	ld hl,(player_x_pos+1);fullpx
  351 D1:C2BE ED 52 -  -  	sbc hl,de ;subtract x offset
  352 D1:C2C0 5D -  -  -  	ld e,l
  353 D1:C2C1 CB 3C -  -  	srl h ;div 2
  354 D1:C2C3 CB 1D -  -  	rr l 
  355 D1:C2C5 7D -  -  -  	ld a,l
  356 D1:C2C6 32 70 C3 D1 	ld (pd_xpos_full),a 
  357 D1:C2CA -  -  -  -  
  358 D1:C2CA CB 43 -  -  	bit 0, e ;least fullpixel bit 
  359 D1:C2CC CA D1 C2 D1 	jp z, pd_even_px 
  360 D1:C2D0 0C -  -  -  	inc c ;add 1 for offset 
  361 D1:C2D1 -  -  -  -  pd_even_px:
  362 D1:C2D1 79 -  -  -  	ld a,c
  363 D1:C2D2 32 78 C3 D1 	ld (player_sprite_index),a 
  364 D1:C2D6 -  -  -  -  
  365 D1:C2D6 -  -  -  -  	;call write_a_to_ram
  366 D1:C2D6 -  -  -  -  
  367 D1:C2D6 -  -  -  -  	;get y pos
  368 D1:C2D6 21 00 00 00 	ld hl,0 
  369 D1:C2DA 3A 64 BF D1 	ld a,(player_y_pos + 2) ;MSB
  370 D1:C2DE 67 -  -  -  	ld h,a 
  371 D1:C2DF 3A 63 BF D1 	ld a, (player_y_pos + 1) ;middle bit (fullpixel LSB)
  372 D1:C2E3 6F -  -  -  	ld l,a 
  373 D1:C2E4 -  -  -  -  	;hl holds y pos fullpixels
  374 D1:C2E4 -  -  -  -  	
  375 D1:C2E4 -  -  -  -  pd_y_offset .equ $+1
  376 D1:C2E4 11 00 00 00 	ld de,0 
  377 D1:C2E8 19 -  -  -  	add hl,de ;add y offset
  378 D1:C2E9 -  -  -  -  
  379 D1:C2E9 EB -  -  -  	ex de,hl 
  380 D1:C2EA 2A E6 AB D1 	ld hl,(cam_pos)
  381 D1:C2EE CB 3C -  -  	srl h ;div by 2
  382 D1:C2F0 CB 1D -  -  	rr l 
  383 D1:C2F2 01 EF 00 00 	ld bc,239
  384 D1:C2F6 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of fg layer
  385 D1:C2F7 37 -  -  -  	scf 
  386 D1:C2F8 3F -  -  -  	ccf 
  387 D1:C2F9 -  -  -  -  	;Uppermost vp line - player y  = lines below top to draw player 
  388 D1:C2F9 ED 52 -  -  	sbc hl,de 
  389 D1:C2FB -  -  -  -  	;call write_hl_to_ram
  390 D1:C2FB DA 3F C3 D1 	jp c, pd_top_cut
  391 D1:C2FF -  -  -  -  	
  392 D1:C2FF 7C -  -  -  	ld a,h 
  393 D1:C300 -  -  -  -  	
  394 D1:C300 B7 -  -  -  	or a 
  395 D1:C301 C0 -  -  -  	ret nz ;player is > 256 px below cam 
  396 D1:C302 -  -  -  -  	
  397 D1:C302 7D -  -  -  	ld a,l 
  398 D1:C303 -  -  -  -  	;a holds lines below vp top to draw player
  399 D1:C303 47 -  -  -  	ld b,a 
  400 D1:C304 3E F0 -  -  	ld a,240
  401 D1:C306 90 -  -  -  	sub a,b ;lines above bottom of VP 
  402 D1:C307 D8 -  -  -  	ret c ;player below VP 
  403 D1:C308 -  -  -  -  
  404 D1:C308 -  -  -  -  	
  405 D1:C308 ED 5B EC AB 
              D1 -  -  -  	ld de, (draw_buffer)
  406 D1:C30D 21 00 96 00 	ld hl, 240*160
  407 D1:C311 19 -  -  -  	add hl,de 
  408 D1:C312 EB -  -  -  	ex de,hl ;DE hlds VP bottom 
  409 D1:C313 -  -  -  -  	
  410 D1:C313 -  -  -  -  pd_sprite_height_1 .equ $ + 1
  411 D1:C313 FE 00 -  -  	cp 0 
  412 D1:C315 DA 2C C3 D1 	jp c, pd_bottom_cut 
  413 D1:C319 -  -  -  -  
  414 D1:C319 -  -  -  -  	;Otherwise, no top or bottm cut
  415 D1:C319 -  -  -  -  	;a holds lines above bottom VP 
  416 D1:C319 CD 61 C3 D1 	call pd_setup_draw
  417 D1:C31D CD D8 AE D1 	call draw_slow_sprite_full
  418 D1:C321 3A 78 BF D1 	ld a,(player_flags)
  419 D1:C325 CB 57 -  -  	bit 2,a 
  420 D1:C327 C4 CB C3 D1 	call nz, draw_tongue
  421 D1:C32B C9 -  -  -  	ret
  422 D1:C32C -  -  -  -  
  423 D1:C32C -  -  -  -  pd_bottom_cut:
  424 D1:C32C -  -  -  -  	;a holds lines to draw
  425 D1:C32C -  -  -  -  	;DE holds vram bottom 
  426 D1:C32C CD 61 C3 D1 	call pd_setup_draw
  427 D1:C330 CD 43 AF D1 	call draw_slow_sprite_bottom_cut
  428 D1:C334 3A 78 BF D1 	ld a,(player_flags)
  429 D1:C338 CB 57 -  -  	bit 2,a 
  430 D1:C33A C4 CB C3 D1 	call nz, draw_tongue
  431 D1:C33E C9 -  -  -  	ret 
  432 D1:C33F -  -  -  -  	
  433 D1:C33F -  -  -  -  
  434 D1:C33F -  -  -  -  pd_top_cut:
  435 D1:C33F -  -  -  -  	;call write_hl_to_ram
  436 D1:C33F -  -  -  -  	;push af 
  437 D1:C33F -  -  -  -  	;ld a,$44
  438 D1:C33F -  -  -  -  	;call write_a_to_ram 
  439 D1:C33F -  -  -  -  	;pop af 
  440 D1:C33F -  -  -  -  
  441 D1:C33F 7C -  -  -  	ld a,h ;Upper byte after subtraction, check for chase where player > 256 px above cam to prevent overflow errors
  442 D1:C340 EE FF -  -  	xor %11111111 ;flip all bits 
  443 D1:C342 C0 -  -  -  	ret nz ;player is > 256 px above cam 
  444 D1:C343 -  -  -  -  
  445 D1:C343 7D -  -  -  	ld a,l ;lines below VP
  446 D1:C344 ED 44 -  -  	neg 
  447 D1:C346 -  -  -  -  
  448 D1:C346 -  -  -  -  	;a holds lines above vp top = lines to cut 
  449 D1:C346 -  -  -  -  pd_sprite_height_2 .equ $ + 1 
  450 D1:C346 FE 00 -  -  	cp 0 ; compare to height 
  451 D1:C348 D0 -  -  -  	ret nc 
  452 D1:C349 -  -  -  -  
  453 D1:C349 ED 5B EC AB 
              D1 -  -  -  	ld de,(draw_buffer)
  454 D1:C34E CD 61 C3 D1 	call pd_setup_draw ;Setup draw pos 
  455 D1:C352 -  -  -  -  	
  456 D1:C352 -  -  -  -  	;bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  457 D1:C352 -  -  -  -  	;jp z,pd_top_cut_fast
  458 D1:C352 CD 16 AF D1 	call draw_slow_sprite_top_cut ;for now assume all sprites are slow
  459 D1:C356 -  -  -  -  	
  460 D1:C356 3A 78 BF D1 	ld a,(player_flags)
  461 D1:C35A CB 57 -  -  	bit 2,a 
  462 D1:C35C C4 CB C3 D1 	call nz, draw_tongue
  463 D1:C360 C9 -  -  -  	ret 
  464 D1:C361 -  -  -  -  	
  465 D1:C361 -  -  -  -  
  466 D1:C361 -  -  -  -  
  467 D1:C361 -  -  -  -  
  468 D1:C361 -  -  -  -  pd_setup_draw:
  469 D1:C361 -  -  -  -  	;A holds lines above bottom (or top) line of VP 
  470 D1:C361 -  -  -  -  	;DE holds VP top or bottom
  471 D1:C361 26 A0 -  -  	ld h,160
  472 D1:C363 6F -  -  -  	ld l,a ;Num lines to subtract
  473 D1:C364 ED 6C -  -  	mlt hl 
  474 D1:C366 37 -  -  -  	scf 
  475 D1:C367 3F -  -  -  	ccf 
  476 D1:C368 EB -  -  -  	ex de,hl ;De holds lines to subtract, hl holds vram pos 
  477 D1:C369 ED 52 -  -  	sbc hl,de 
  478 D1:C36B 01 00 00 00 	ld bc,0 
  479 D1:C36F -  -  -  -  pd_xpos_full .equ $ + 1 
  480 D1:C36F 0E 00 -  -  	ld c, 0 ;ld x pos 
  481 D1:C371 09 -  -  -  	add hl,bc 
  482 D1:C372 EB -  -  -  	ex de,hl 
  483 D1:C373 21 16 C5 D1 	ld hl,player_sprite_table ;Load sprite table
  484 D1:C377 -  -  -  -  
  485 D1:C377 -  -  -  -  player_sprite_index .equ $ + 1 
  486 D1:C377 0E 00 -  -  	ld c,0 ;load sprite index 
  487 D1:C379 09 -  -  -  	add hl,bc 
  488 D1:C37A 09 -  -  -  	add hl,bc 
  489 D1:C37B 09 -  -  -  	add hl,bc 
  490 D1:C37C ED 27 -  -  	ld hl,(hl)
  491 D1:C37E -  -  -  -  	;HL holds sprite data, de holds draw pos 
  492 D1:C37E C9 -  -  -  	ret 
  493 D1:C37F -  -  -  -  
  494 D1:C37F -  -  -  -  
  495 D1:C37F -  -  -  -  
  496 D1:C37F -  -  -  -  player_to_cam_coords:
  497 D1:C37F 21 00 00 00 	ld hl,0
  498 D1:C383 3A 64 BF D1 	ld a,(player_y_pos + 2) ;frame number
  499 D1:C387 67 -  -  -  	ld h,a 
  500 D1:C388 3A 63 BF D1 	ld a,(player_y_pos + 1) ;pixel number
  501 D1:C38C 6F -  -  -  	ld l,a 
  502 D1:C38D -  -  -  -  	
  503 D1:C38D CB 25 -  -  	sla l ;mult by 2 to convert to FG space
  504 D1:C38F CB 14 -  -  	rl h 
  505 D1:C391 11 24 00 00 	ld de,36 ;add offset to put player at bottom of screen
  506 D1:C395 ED 52 -  -  	sbc hl,de 
  507 D1:C397 D2 9F C3 D1 	jp nc, set_cam_0_pos_skip
  508 D1:C39B 21 00 00 00 	ld hl,0
  509 D1:C39F -  -  -  -  set_cam_0_pos_skip:
  510 D1:C39F C9 -  -  -  	ret
  511 D1:C3A0 -  -  -  -  	
  512 D1:C3A0 -  -  -  -  	
  513 D1:C3A0 -  -  -  -  	
  514 D1:C3A0 -  -  -  -  
  515 D1:C3A0 -  -  -  -  y_length_to_tongue_ring: ;returns hl = y dist
  516 D1:C3A0 21 00 00 00 	ld hl,0 
  517 D1:C3A4 3A 64 BF D1 	ld a,(player_y_pos +2)
  518 D1:C3A8 67 -  -  -  	ld h,a 
  519 D1:C3A9 3A 63 BF D1 	ld a,(player_y_pos +1)
  520 D1:C3AD 6F -  -  -  	ld l,a 
  521 D1:C3AE 2B -  -  -  	dec hl ;mouth y offset
  522 D1:C3AF 2B -  -  -  	dec hl
  523 D1:C3B0 2B -  -  -  	dec hl 
  524 D1:C3B1 2B -  -  -  	dec hl
  525 D1:C3B2 2B -  -  -  	dec hl
  526 D1:C3B3 2B -  -  -  	dec hl
  527 D1:C3B4 2B -  -  -  	dec hl
  528 D1:C3B5 -  -  -  -  	;call write_hl_to_ram
  529 D1:C3B5 -  -  -  -  	;hl holds player y fullpixels 
  530 D1:C3B5 EB -  -  -  	ex de,hl 
  531 D1:C3B6 2A 74 BF D1 	ld hl,(tongue_ring_y_pos)
  532 D1:C3BA -  -  -  -  	;call write_hl_to_ram
  533 D1:C3BA ED 52 -  -  	sbc hl,de 
  534 D1:C3BC C9 -  -  -  	ret 
  535 D1:C3BD -  -  -  -  
  536 D1:C3BD -  -  -  -  x_length_to_tongue_ring: ;returns a = dist 
  537 D1:C3BD CD 4D BF D1 	call player_x_half
  538 D1:C3C1 06 03 -  -  	ld b,3 ;offset to center of collider 
  539 D1:C3C3 80 -  -  -  	add a,b 
  540 D1:C3C4 47 -  -  -  	ld b,a
  541 D1:C3C5 3A 77 BF D1 	ld a,(tongue_ring_x_pos)
  542 D1:C3C9 90 -  -  -  	sub a,b 
  543 D1:C3CA C9 -  -  -  	ret 
  544 D1:C3CB -  -  -  -  
  545 D1:C3CB -  -  -  -  
  546 D1:C3CB -  -  -  -  draw_tongue:
  547 D1:C3CB -  -  -  -  	;c holds max y dist to draw 
  548 D1:C3CB -  -  -  -  	;ld a,$DD
  549 D1:C3CB -  -  -  -  	;call write_a_to_ram
  550 D1:C3CB -  -  -  -  	
  551 D1:C3CB 3A 7E BF D1 	ld a, (tongue_extend_timer)
  552 D1:C3CF -  -  -  -  	;call write_a_to_ram
  553 D1:C3CF CB 7F -  -  	bit 7,a 
  554 D1:C3D1 C2 DB C3 D1 	jp nz,dt_full_extend ; a > 128 = full exted
  555 D1:C3D5 CB 27 -  -  	sla a ;otherwise mult by 8 to find limit 
  556 D1:C3D7 CB 27 -  -  	sla a 
  557 D1:C3D9 CB 27 -  -  	sla a 
  558 D1:C3DB -  -  -  -  dt_full_extend:
  559 D1:C3DB 4F -  -  -  	ld c,a 
  560 D1:C3DC -  -  -  -  	;call write_a_to_ram
  561 D1:C3DC CD A0 C3 D1 	call y_length_to_tongue_ring ;hl holds y dist to ring
  562 D1:C3E0 D8 -  -  -  	ret c ;distance should not be negative 
  563 D1:C3E1 -  -  -  -  	
  564 D1:C3E1 -  -  -  -  	;hl holds line y length 
  565 D1:C3E1 7D -  -  -  	ld a,l ;a holds line length
  566 D1:C3E2 32 71 C4 D1 	ld (dl_cutoff_length),a
  567 D1:C3E6 -  -  -  -  	;call write_a_to_ram
  568 D1:C3E6 FE 05 -  -  	cp 5 
  569 D1:C3E8 D8 -  -  -  	ret c ;min line length
  570 D1:C3E9 B9 -  -  -  	cp c 
  571 D1:C3EA DA F4 C3 D1 	jp c, dt_full_len
  572 D1:C3EE -  -  -  -  	
  573 D1:C3EE -  -  -  -  	;otherwise limit line length
  574 D1:C3EE 79 -  -  -  	ld a,c 
  575 D1:C3EF 32 71 C4 D1 	ld (dl_cutoff_length),a
  576 D1:C3F3 -  -  -  -  	;ld a,$A1 
  577 D1:C3F3 -  -  -  -  	;call write_a_to_ram
  578 D1:C3F3 -  -  -  -  	;call write_a_to_ram
  579 D1:C3F3 7D -  -  -  	ld a,l ;line length
  580 D1:C3F4 -  -  -  -  dt_full_len:
  581 D1:C3F4 32 BF C4 D1 	ld (dl_y_dist_1),a
  582 D1:C3F8 32 E9 C4 D1 	ld (dl_y_dist_2),a 
  583 D1:C3FC -  -  -  -  	;call write_a_to_ram
  584 D1:C3FC -  -  -  -  
  585 D1:C3FC -  -  -  -  
  586 D1:C3FC -  -  -  -  	;Find line start y in screen space 
  587 D1:C3FC -  -  -  -  	;de still holds player y in fullpixels
  588 D1:C3FC -  -  -  -  	
  589 D1:C3FC 2A E6 AB D1 	ld hl,(cam_pos)
  590 D1:C400 CB 3C -  -  	srl h ;div by 2
  591 D1:C402 CB 1D -  -  	rr l 
  592 D1:C404 01 EF 00 00 	ld bc,239 + 0 ;top of screen - mouth y offset 
  593 D1:C408 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of mg layer
  594 D1:C409 37 -  -  -  	scf 
  595 D1:C40A 3F -  -  -  	ccf 
  596 D1:C40B -  -  -  -  	;Uppermost vp line - player y  = lines below top to draw player 
  597 D1:C40B ED 52 -  -  	sbc hl,de
  598 D1:C40D 7D -  -  -  	ld a,l 
  599 D1:C40E 26 A0 -  -  	ld h,160 
  600 D1:C410 ED 6C -  -  	mlt hl 
  601 D1:C412 EB -  -  -  	ex de,hl 
  602 D1:C413 2A EC AB D1 	ld hl, (draw_buffer)
  603 D1:C417 19 -  -  -  	add hl,de 
  604 D1:C418 EB -  -  -  	ex de,hl ;de holds correct y pos in vram 
  605 D1:C419 -  -  -  -  	
  606 D1:C419 21 00 00 00 	ld hl,0 
  607 D1:C41D 3A 61 BF D1 	ld a,(player_x_pos + 2);msb 
  608 D1:C421 67 -  -  -  	ld h,a 
  609 D1:C422 3A 60 BF D1 	ld a,(player_x_pos + 1)
  610 D1:C426 6F -  -  -  	ld l,a ;hl holds x pos in fullpixels
  611 D1:C427 -  -  -  -  	
  612 D1:C427 -  -  -  -  	;Need to find x and y pos of player mouth (world coords)
  613 D1:C427 -  -  -  -  	;Need to check if player center is to the left or right of ring, will determine flip 
  614 D1:C427 CD 4D BF D1 	call player_x_half ;a holds x pos in px pairs
  615 D1:C42B 06 03 -  -  	ld b,3 ;center offset for jump sprite (in pairs) from collider 
  616 D1:C42D 80 -  -  -  	add a,b 
  617 D1:C42E -  -  -  -  	;compare to ring pos to determine sprite flip
  618 D1:C42E 47 -  -  -  	ld b,a 
  619 D1:C42F 3A 77 BF D1 	ld a,(tongue_ring_x_pos)
  620 D1:C433 B8 -  -  -  	cp b 
  621 D1:C434 D2 40 C4 D1 	jp nc, dt_noflip
  622 D1:C438 -  -  -  -  	;ring to left of player 
  623 D1:C438 -  -  -  -  	
  624 D1:C438 01 01 00 00 	ld bc,1 
  625 D1:C43C C3 44 C4 D1 	jp dt_flip
  626 D1:C440 -  -  -  -  dt_noflip:
  627 D1:C440 -  -  -  -  	;ring is to the right of player, no sprite flip
  628 D1:C440 01 11 00 00 	ld bc,17 ;17px offset from collider x 
  629 D1:C444 -  -  -  -  dt_flip:
  630 D1:C444 09 -  -  -  	add hl,bc ;hl holds x pos of line start (mouth pos) fullpixels 
  631 D1:C445 -  -  -  -  	
  632 D1:C445 E5 -  -  -  	push hl
  633 D1:C446 01 00 00 00 	ld bc,0
  634 D1:C44A 4F -  -  -  	ld c,a ;a holds ring x pos (in pair pixels)
  635 D1:C44B CB 21 -  -  	sla c ;mult by 2  
  636 D1:C44D CB 10 -  -  	rl b 
  637 D1:C44F ED 42 -  -  	sbc hl,bc ;hl holds x delta in px (player - ring)
  638 D1:C451 D2 60 C4 D1 	jp nc,dt_neg_delta_x
  639 D1:C455 -  -  -  -  	;ring to the right
  640 D1:C455 CD FC C4 D1 	call dl_set_positive
  641 D1:C459 7D -  -  -  	ld a,l ;a holds x delta
  642 D1:C45A ED 44 -  -  	neg 
  643 D1:C45C C3 65 C4 D1 	jp dt_pos_delta_x
  644 D1:C460 -  -  -  -  dt_neg_delta_x:
  645 D1:C460 -  -  -  -  	;ring to the left 
  646 D1:C460 CD 09 C5 D1 	call dl_set_negative ;set neg slope
  647 D1:C464 7D -  -  -  	ld a,l ;a holds x delta
  648 D1:C465 -  -  -  -  dt_pos_delta_x:
  649 D1:C465 -  -  -  -  	
  650 D1:C465 32 BB C4 D1 	ld (dl_x_dist),a 
  651 D1:C469 -  -  -  -  	
  652 D1:C469 E1 -  -  -  	pop hl ;x pos of line start 
  653 D1:C46A 45 -  -  -  	ld b,l ;offset counter
  654 D1:C46B -  -  -  -  	
  655 D1:C46B CB 3C -  -  	srl h ;div by 2
  656 D1:C46D CB 1D -  -  	rr l
  657 D1:C46F 19 -  -  -  	add hl,de ;add to vram y pos 
  658 D1:C470 -  -  -  -  	;hl = line bottom pos in vram 
  659 D1:C470 -  -  -  -  	
  660 D1:C470 -  -  -  -  	
  661 D1:C470 -  -  -  -  	;set (dl_y_dist_1), (dl_y_dist_2), (dl_x_dist)
  662 D1:C470 -  -  -  -  	;a is byte counter, incs by xdist, if >ydist subtract ydist 
  663 D1:C470 -  -  -  -  dl_cutoff_length .equ $+1
  664 D1:C470 0E 00 -  -  	ld c,0 
  665 D1:C472 -  -  -  -  	;ld a,c
  666 D1:C472 -  -  -  -  	;call write_a_to_ram
  667 D1:C472 11 00 00 00 	ld de,0 ;amount to inc per line 
  668 D1:C476 3E 00 -  -  	ld a,0 
  669 D1:C478 -  -  -  -  draw_line_loop:
  670 D1:C478 08 -  -  -  	ex af,af';' ;a' used for writing to hl
  671 D1:C479 -  -  -  -  	
  672 D1:C479 CB 40 -  -  	bit 0,b 
  673 D1:C47B CA 9E C4 D1 	jp z,dl_no_offset
  674 D1:C47F -  -  -  -  	
  675 D1:C47F 3E DA -  -  	ld a, %11011010 ;%JP c
  676 D1:C481 32 D2 C4 D1 	ld (dl_end_sprite_offset) ,a 
  677 D1:C485 -  -  -  -  	
  678 D1:C485 7E -  -  -  	ld a,(hl)
  679 D1:C486 E6 0F -  -  	and %00001111 ;save left pixel 
  680 D1:C488 F6 A0 -  -  	or $A0 ;right pixel = 12 
  681 D1:C48A 77 -  -  -  	ld (hl),a 
  682 D1:C48B 23 -  -  -  	inc hl 
  683 D1:C48C 3E AA -  -  	ld a,$AA
  684 D1:C48E 77 -  -  -  	ld (hl),a 
  685 D1:C48F 23 -  -  -  	inc hl 
  686 D1:C490 7E -  -  -  	ld a,(hl)
  687 D1:C491 E6 F0 -  -  	and %11110000 ;save right pixel 
  688 D1:C493 F6 0A -  -  	or $0A ;right pixel = 12 
  689 D1:C495 77 -  -  -  	ld (hl),a 
  690 D1:C496 11 A2 00 00 	ld de,162 ;1 line up to left 
  691 D1:C49A C3 B0 C4 D1 	jp dl_check_slope
  692 D1:C49E -  -  -  -  	
  693 D1:C49E -  -  -  -  dl_no_offset:
  694 D1:C49E -  -  -  -  	
  695 D1:C49E 3E D2 -  -  	ld a, %11010010 ;%JP nc
  696 D1:C4A0 32 D2 C4 D1 	ld (dl_end_sprite_offset) ,a 
  697 D1:C4A4 -  -  -  -  
  698 D1:C4A4 3E CB -  -  	ld a,$CB ;left side colors 
  699 D1:C4A6 77 -  -  -  	ld (hl),a 
  700 D1:C4A7 23 -  -  -  	inc hl 
  701 D1:C4A8 3E BC -  -  	ld a,$BC ;Right side colors 
  702 D1:C4AA 77 -  -  -  	ld (hl),a 
  703 D1:C4AB 23 -  -  -  	inc hl 
  704 D1:C4AC 11 A2 00 00 	ld de,162 ;to move 1 line up to left side 
  705 D1:C4B0 -  -  -  -  	
  706 D1:C4B0 -  -  -  -  dl_check_slope:
  707 D1:C4B0 37 -  -  -  	scf 
  708 D1:C4B1 3F -  -  -  	ccf 
  709 D1:C4B2 ED 52 -  -  	sbc hl,de ;add default length
  710 D1:C4B4 08 -  -  -  	ex af,af' ;' ; back to slope byte counter 
  711 D1:C4B5 -  -  -  -  
  712 D1:C4B5 0D -  -  -  	dec c ;check here to avoid hl being changed in inc x to stop weird behavior in end sprite
  713 D1:C4B6 CA C8 C4 D1 	jp z, dl_loop_end
  714 D1:C4BA -  -  -  -  
  715 D1:C4BA -  -  -  -  dl_x_dist .equ $+1 
  716 D1:C4BA 1E 00 -  -  	ld e,0 
  717 D1:C4BC 83 -  -  -  	add a,e  ;add x dist 
  718 D1:C4BD 3C -  -  -  	inc a
  719 D1:C4BE -  -  -  -  dl_compare_y:
  720 D1:C4BE -  -  -  -  dl_y_dist_1 .equ $ + 1 
  721 D1:C4BE FE 00 -  -  	cp 0 ;compare to y dist
  722 D1:C4C0 D2 E8 C4 D1 	jp nc, dl_inc_x
  723 D1:C4C4 -  -  -  -  	
  724 D1:C4C4 C3 78 C4 D1 	jp draw_line_loop
  725 D1:C4C8 -  -  -  -  	
  726 D1:C4C8 -  -  -  -  dl_loop_end:
  727 D1:C4C8 -  -  -  -  
  728 D1:C4C8 -  -  -  -  	;Draw tongue end sprite
  729 D1:C4C8 -  -  -  -  	;hl should be pointing to end of line vram already 
  730 D1:C4C8 11 E1 01 00 	ld de, 160*3 + 1
  731 D1:C4CC 37 -  -  -  	scf 
  732 D1:C4CD 3F -  -  -  	ccf 
  733 D1:C4CE ED 52 -  -  	sbc hl,de  
  734 D1:C4D0 -  -  -  -  ;dl_negative_x_2 .equ $
  735 D1:C4D0 -  -  -  -  	;dec hl ;fixes weird offset issue
  736 D1:C4D0 EB -  -  -  	ex de,hl 
  737 D1:C4D1 37 -  -  -  	scf
  738 D1:C4D2 -  -  -  -  dl_end_sprite_offset .equ $
  739 D1:C4D2 DA DF C4 D1 	jp c, dt_end_sprite_offset
  740 D1:C4D6 21 E9 16 D4 	ld hl, FrogTongue_Slow
  741 D1:C4DA CD D8 AE D1 	call draw_slow_sprite_full
  742 D1:C4DE C9 -  -  -  	ret 
  743 D1:C4DF -  -  -  -  	
  744 D1:C4DF -  -  -  -  dt_end_sprite_offset:
  745 D1:C4DF -  -  -  -  	;dec de
  746 D1:C4DF 21 2F 17 D4 	ld hl, FrogTongue_Slow_O
  747 D1:C4E3 CD D8 AE D1 	call draw_slow_sprite_full 
  748 D1:C4E7 -  -  -  -  	;call write_a_to_ram
  749 D1:C4E7 C9 -  -  -  	ret 
  750 D1:C4E8 -  -  -  -  	
  751 D1:C4E8 -  -  -  -  	
  752 D1:C4E8 -  -  -  -  dl_inc_x:
  753 D1:C4E8 -  -  -  -  
  754 D1:C4E8 -  -  -  -  dl_y_dist_2 .equ $ + 1 
  755 D1:C4E8 1E 00 -  -  	ld e,0 ;ld with y dist
  756 D1:C4EA 93 -  -  -  	sub a,e ;subtract y dist 
  757 D1:C4EB -  -  -  -  	
  758 D1:C4EB 04 -  -  -  	inc b 
  759 D1:C4EC CB 40 -  -  	bit 0,b 
  760 D1:C4EE C2 F7 C4 D1 	jp nz,dl_inc_to_offset
  761 D1:C4F2 -  -  -  -  dl_negative_x .equ $ ;replace with nop for negative 
  762 D1:C4F2 23 -  -  -  	inc hl ;add 1 to hl 	
  763 D1:C4F3 C3 BE C4 D1 	jp dl_compare_y
  764 D1:C4F7 -  -  -  -  	
  765 D1:C4F7 -  -  -  -  
  766 D1:C4F7 -  -  -  -  dl_inc_to_offset:
  767 D1:C4F7 -  -  -  -  
  768 D1:C4F7 -  -  -  -  dl_negative_x_1 .equ $ ;replace with dec for negative 
  769 D1:C4F7 00 -  -  -  	nop
  770 D1:C4F8 C3 BE C4 D1 	jp dl_compare_y
  771 D1:C4FC -  -  -  -  	
  772 D1:C4FC -  -  -  -  
  773 D1:C4FC -  -  -  -  dl_set_positive: ;line has pos slope
  774 D1:C4FC 3E 00 -  -  	ld a,%00000000 ;nop 
  775 D1:C4FE 32 F7 C4 D1 	ld (dl_negative_x_1),a
  776 D1:C502 -  -  -  -  	
  777 D1:C502 -  -  -  -  	;ld a, %00100011 ;inc  hl 
  778 D1:C502 -  -  -  -  	;ld (dl_negative_x_2),a	
  779 D1:C502 3E 23 -  -  	ld a, %00100011 ;inc  hl 
  780 D1:C504 32 F2 C4 D1 	ld (dl_negative_x),a 
  781 D1:C508 C9 -  -  -  	ret 
  782 D1:C509 -  -  -  -  	 
  783 D1:C509 -  -  -  -  
  784 D1:C509 -  -  -  -  dl_set_negative: ;line has neg slope 
  785 D1:C509 3E 00 -  -  	ld a,%00000000 ;nop 
  786 D1:C50B 32 F2 C4 D1 	ld (dl_negative_x),a 
  787 D1:C50F -  -  -  -  	;ld a, %00101011 ;dec hl
  788 D1:C50F -  -  -  -  	;ld (dl_negative_x_2),a
  789 D1:C50F 3E 2B -  -  	ld a, %00101011 ;dec hl 
  790 D1:C511 32 F7 C4 D1 	ld (dl_negative_x_1),a 
  791 D1:C515 -  -  -  -  	
  792 D1:C515 C9 -  -  -  	ret 
  793 D1:C516 -  -  -  -  	
  794 D1:C516 -  -  -  -  	
  795 D1:C516 -  -  -  -  	
  796 D1:C516 -  -  -  -  	
  797 D1:C516 -  -  -  -  	
  798 D1:C516 -  -  -  -  	
  799 D1:C516 -  -  -  -  	
  800 D1:C516 -  -  -  -  	
  801 D1:C516 -  -  -  -  	
  802 D1:C516 -  -  -  -  	
  803 D1:C516 -  -  -  -  	
  804 D1:C516 -  -  -  -  	
  805 D1:C516 -  -  -  -  player_sprite_table: ;Add 4 for sprite, add 2 for flip, add 1 for offset
  806 D1:C516 FD 36 D4 -  	.dl FrogDefault_Slow
  807 D1:C519 2D 38 D4 -  	.dl FrogDefault_Slow_O
  808 D1:C51C 5D 39 D4 -  	.dl FrogDefault_Slow_F
  809 D1:C51F 8D 3A D4 -  	.dl FrogDefault_Slow_O_F
  810 D1:C522 49 40 D4 -  	.dl FrogCharge_Slow
  811 D1:C525 C1 01 D4 -  	.dl FrogCharge_Slow_O
  812 D1:C528 E7 02 D4 -  	.dl FrogCharge_Slow_F
  813 D1:C52B 0D 04 D4 -  	.dl FrogCharge_Slow_O_F
  814 D1:C52E BD 3B D4 -  	.dl FrogChargeLit_Slow
  815 D1:C531 DD 3C D4 -  	.dl FrogChargeLit_Slow_O
  816 D1:C534 03 3E D4 -  	.dl FrogChargeLit_Slow_F
  817 D1:C537 29 3F D4 -  	.dl FrogChargeLit_Slow_O_F
  818 D1:C53A 2D 05 D4 -  	.dl FrogJump_Slow
  819 D1:C53D A5 06 D4 -  	.dl FrogJump_Slow_O
  820 D1:C540 27 08 D4 -  	.dl FrogJump_Slow_F
  821 D1:C543 9F 09 D4 -  	.dl FrogJump_Slow_O_F
  822 D1:C546 21 0B D4 -  	.dl FrogJumpMouth_Slow
  823 D1:C549 99 0C D4 -  	.dl FrogJumpMouth_Slow_O
  824 D1:C54C 1B 0E D4 -  	.dl FrogJumpMouth_Slow_F
  825 D1:C54F 93 0F D4 -  	.dl FrogJumpMouth_Slow_O_F
  826 D1:C552 15 11 D4 -  	.dl FrogFall_Slow
  827 D1:C555 85 12 D4 -  	.dl FrogFall_Slow_O
  828 D1:C558 FF 13 D4 -  	.dl FrogFall_Slow_F
  829 D1:C55B 6F 15 D4 -  	.dl FrogFall_Slow_O_F
  830 D1:C55E -  -  -  -  	
  831 D1:C55E -  -  -  -  	
  832 D1:C55E -  -  -  -  	
  833 D1:C55E -  -  -  -  	
  834 D1:C55E -  -  -  -  	
  835 D1:C55E -  -  -  -  	
  836 D1:C55E -  -  -  -  	
  837 D1:C55E -  -  -  -  	
  838 D1:C55E -  -  -  -  	
  839 D1:C55E -  -  -  -  	
  840 D1:C55E -  -  -  -  	
  841 D1:C55E -  -  -  -  	
  842 D1:C55E -  -  -  -  	
  843 D1:C55E -  -  -  -  	
  844 D1:C55E -  -  -  -  	
  845 D1:C55E -  -  -  -  	
  846 D1:C55E -  -  -  -  	
  847 D1:C55E -  -  -  -  	
  848 D1:C55E -  -  -  -  	
  849 D1:C55E -  -  -  -  	
Listing for file "ascent.asm"
  602 D1:C55E -  -  -  -  #include "sineFunc.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\sineFunc.txt"
    1 D1:C55E -  -  -  -  
    2 D1:C55E -  -  -  -  update_sine_vals:
    3 D1:C55E 01 00 00 00 	ld bc,0
    4 D1:C562 -  -  -  -  	
    5 D1:C562 3A 01 AC D1 	ld a, (frameCount+1);middle byte 
    6 D1:C566 CB 3F -  -  	srl a ;put bit 0 to carry flag 
    7 D1:C568 3A 00 AC D1 	ld a, (frameCount)
    8 D1:C56C 1F -  -  -  	rra ;a holds frame counter/2, ~16 second timer
    9 D1:C56D 21 DB C5 D1 	ld hl,sine_modes_table
   10 D1:C571 08 -  -  -  	ex af,af' ;' ;in
   11 D1:C572 3E 14 -  -  	ld a,20
   12 D1:C574 -  -  -  -  	
   13 D1:C574 -  -  -  -  update_sine_loop:
   14 D1:C574 08 -  -  -  	ex af,af' ;' ;out
   15 D1:C575 F5 -  -  -  	push af ;frame count 
   16 D1:C576 ED 17 -  -  	ld de, (hl) ;de holds correct sine value table 
   17 D1:C578 23 -  -  -  	inc hl 
   18 D1:C579 23 -  -  -  	inc hl 
   19 D1:C57A 23 -  -  -  	inc hl 
   20 D1:C57B E5 -  -  -  	push hl 
   21 D1:C57C CD BB C5 D1 	call sine_apply_amplitudes
   22 D1:C580 E1 -  -  -  	pop hl
   23 D1:C581 F1 -  -  -  	pop af 
   24 D1:C582 -  -  -  -  	;a holds frame count 
   25 D1:C582 ED 17 -  -  	ld de, (hl) ;de holds lin value table
   26 D1:C584 23 -  -  -  	inc hl 
   27 D1:C585 23 -  -  -  	inc hl 
   28 D1:C586 23 -  -  -  	inc hl 
   29 D1:C587 E5 -  -  -  	push hl 
   30 D1:C588 F5 -  -  -  	push af
   31 D1:C589 -  -  -  -  	;A holds frame count for linear curve
   32 D1:C589 CD C2 C5 D1 	call lin_apply_amplitudes
   33 D1:C58D F1 -  -  -  	pop af 
   34 D1:C58E E1 -  -  -  	pop hl
   35 D1:C58F F5 -  -  -  	push af
   36 D1:C590 ED 17 -  -  	ld de, (hl) ;de holds linrep value table
   37 D1:C592 23 -  -  -  	inc hl 
   38 D1:C593 23 -  -  -  	inc hl 
   39 D1:C594 23 -  -  -  	inc hl 
   40 D1:C595 CB 7F -  -  	bit 7,a 
   41 D1:C597 CA 9D C5 D1 	jp z,update_sine_skip_rep
   42 D1:C59B EE FF -  -  	xor %11111111 ;if a >127, negate it to reverse the time 
   43 D1:C59D -  -  -  -  update_sine_skip_rep:
   44 D1:C59D E5 -  -  -  	push hl
   45 D1:C59E EB -  -  -  	ex de,hl 	
   46 D1:C59F CD C5 C5 D1 	call linrep_apply_amplitudes
   47 D1:C5A3 E1 -  -  -  	pop hl
   48 D1:C5A4 F1 -  -  -  	pop af 
   49 D1:C5A5 0E 40 -  -  	ld c,64 ;add quarter phase offset 
   50 D1:C5A7 81 -  -  -  	add a,c 
   51 D1:C5A8 08 -  -  -  	ex af,af' ;' ;in
   52 D1:C5A9 3D -  -  -  	dec a 
   53 D1:C5AA C8 -  -  -  	ret z 
   54 D1:C5AB 4F -  -  -  	ld c,a
   55 D1:C5AC E6 03 -  -  	and %00000011 ;check last 2 bits
   56 D1:C5AE 79 -  -  -  	ld a,c
   57 D1:C5AF C2 74 C5 D1 	jp nz,update_sine_loop
   58 D1:C5B3 -  -  -  -  	;otherwise, a is multiple of 4, multiply clock speed 
   59 D1:C5B3 08 -  -  -  	ex af, af' ;' ;out
   60 D1:C5B4 CB 27 -  -  	sla a ;mult by 2 
   61 D1:C5B6 08 -  -  -  	ex af, af' ;' ;in
   62 D1:C5B7 C3 74 C5 D1 	jp update_sine_loop
   63 D1:C5BB -  -  -  -  	
   64 D1:C5BB -  -  -  -  	
   65 D1:C5BB -  -  -  -  	
   66 D1:C5BB -  -  -  -  	
   67 D1:C5BB -  -  -  -  	
   68 D1:C5BB -  -  -  -  	
   69 D1:C5BB -  -  -  -  sine_apply_amplitudes: ;a holds scaled frame count,de holds ptr to correct sine value table
   70 D1:C5BB 21 BB C7 D1 	ld hl, sine
   71 D1:C5BF 4F -  -  -  	ld c,a 
   72 D1:C5C0 09 -  -  -  	add hl,bc 
   73 D1:C5C1 7E -  -  -  	ld a,(hl); a holds sine value 
   74 D1:C5C2 -  -  -  -  lin_apply_amplitudes:
   75 D1:C5C2 EB -  -  -  	ex de,hl 
   76 D1:C5C3 CB 3F -  -  	srl a ;div 2 
   77 D1:C5C5 -  -  -  -  linrep_apply_amplitudes:
   78 D1:C5C5 CB 3F -  -  	srl a 
   79 D1:C5C7 CB 3F -  -  	srl a ;amplitude of 31 
   80 D1:C5C9 77 -  -  -  	ld (hl),a 
   81 D1:C5CA 23 -  -  -  	inc hl 
   82 D1:C5CB CB 3F -  -  	srl a ;amplitude of 15 
   83 D1:C5CD 77 -  -  -  	ld (hl),a 
   84 D1:C5CE 23 -  -  -  	inc hl
   85 D1:C5CF CB 3F -  -  	srl a ;amplitude of 7 
   86 D1:C5D1 77 -  -  -  	ld (hl),a 
   87 D1:C5D2 23 -  -  -  	inc hl
   88 D1:C5D3 CB 3F -  -  	srl a ;amplitude of 3 
   89 D1:C5D5 77 -  -  -  	ld (hl),a 
   90 D1:C5D6 23 -  -  -  	inc hl
   91 D1:C5D7 CB 3F -  -  	srl a ;amplitude of 1 
   92 D1:C5D9 77 -  -  -  	ld (hl),a
   93 D1:C5DA C9 -  -  -  	ret 
   94 D1:C5DB -  -  -  -  
   95 D1:C5DB -  -  -  -  
   96 D1:C5DB -  -  -  -  
   97 D1:C5DB -  -  -  -  sine_modes_table:
   98 D1:C5DB 8F C6 D1 -  	.dl sine_05_1
   99 D1:C5DE F3 C6 D1 -  	.dl lin_05_1
  100 D1:C5E1 57 C7 D1 -  	.dl linrep_05_1
  101 D1:C5E4 94 C6 D1 -  	.dl sine_05_2
  102 D1:C5E7 F8 C6 D1 -  	.dl lin_05_2
  103 D1:C5EA 5C C7 D1 -  	.dl linrep_05_2
  104 D1:C5ED 99 C6 D1 -  	.dl sine_05_3
  105 D1:C5F0 FD C6 D1 -  	.dl lin_05_3
  106 D1:C5F3 61 C7 D1 -  	.dl linrep_05_3
  107 D1:C5F6 9E C6 D1 -  	.dl sine_05_4
  108 D1:C5F9 02 C7 D1 -  	.dl lin_05_4
  109 D1:C5FC 66 C7 D1 -  	.dl linrep_05_4
  110 D1:C5FF -  -  -  -  	
  111 D1:C5FF A3 C6 D1 -  	.dl sine_1_1
  112 D1:C602 07 C7 D1 -  	.dl lin_1_1
  113 D1:C605 6B C7 D1 -  	.dl linrep_1_1
  114 D1:C608 A8 C6 D1 -  	.dl sine_1_2
  115 D1:C60B 0C C7 D1 -  	.dl lin_1_2
  116 D1:C60E 70 C7 D1 -  	.dl linrep_1_2
  117 D1:C611 AD C6 D1 -  	.dl sine_1_3
  118 D1:C614 11 C7 D1 -  	.dl lin_1_3
  119 D1:C617 75 C7 D1 -  	.dl linrep_1_3
  120 D1:C61A B2 C6 D1 -  	.dl sine_1_4
  121 D1:C61D 16 C7 D1 -  	.dl lin_1_4
  122 D1:C620 7A C7 D1 -  	.dl linrep_1_4
  123 D1:C623 -  -  -  -  	
  124 D1:C623 B7 C6 D1 -  	.dl sine_2_1
  125 D1:C626 1B C7 D1 -  	.dl lin_2_1
  126 D1:C629 7F C7 D1 -  	.dl linrep_2_1
  127 D1:C62C BC C6 D1 -  	.dl sine_2_2
  128 D1:C62F 20 C7 D1 -  	.dl lin_2_2
  129 D1:C632 84 C7 D1 -  	.dl linrep_2_2
  130 D1:C635 C1 C6 D1 -  	.dl sine_2_3
  131 D1:C638 25 C7 D1 -  	.dl lin_2_3
  132 D1:C63B 89 C7 D1 -  	.dl linrep_2_3
  133 D1:C63E C6 C6 D1 -  	.dl sine_2_4
  134 D1:C641 2A C7 D1 -  	.dl lin_2_4
  135 D1:C644 8E C7 D1 -  	.dl linrep_2_4
  136 D1:C647 -  -  -  -  	
  137 D1:C647 CB C6 D1 -  	.dl sine_4_1
  138 D1:C64A 2F C7 D1 -  	.dl lin_4_1
  139 D1:C64D 93 C7 D1 -  	.dl linrep_4_1
  140 D1:C650 D0 C6 D1 -  	.dl sine_4_2
  141 D1:C653 34 C7 D1 -  	.dl lin_4_2
  142 D1:C656 98 C7 D1 -  	.dl linrep_4_2
  143 D1:C659 D5 C6 D1 -  	.dl sine_4_3
  144 D1:C65C 39 C7 D1 -  	.dl lin_4_3
  145 D1:C65F 9D C7 D1 -  	.dl linrep_4_3
  146 D1:C662 DA C6 D1 -  	.dl sine_4_4
  147 D1:C665 3E C7 D1 -  	.dl lin_4_4
  148 D1:C668 A2 C7 D1 -  	.dl linrep_4_4
  149 D1:C66B -  -  -  -  
  150 D1:C66B DF C6 D1 -  	.dl sine_8_1
  151 D1:C66E 43 C7 D1 -  	.dl lin_8_1
  152 D1:C671 A7 C7 D1 -  	.dl linrep_8_1
  153 D1:C674 E4 C6 D1 -  	.dl sine_8_2
  154 D1:C677 48 C7 D1 -  	.dl lin_8_2
  155 D1:C67A AC C7 D1 -  	.dl linrep_8_2
  156 D1:C67D E9 C6 D1 -  	.dl sine_8_3
  157 D1:C680 4D C7 D1 -  	.dl lin_8_3
  158 D1:C683 B1 C7 D1 -  	.dl linrep_8_3
  159 D1:C686 EE C6 D1 -  	.dl sine_8_4
  160 D1:C689 52 C7 D1 -  	.dl lin_8_4
  161 D1:C68C B6 C7 D1 -  	.dl linrep_8_4
  162 D1:C68F -  -  -  -  
  163 D1:C68F -  -  -  -  
  164 D1:C68F -  -  -  -  
  165 D1:C68F -  -  -  -  
  166 D1:C68F -  -  -  -  sine_05_1: ;half frequency, no phase shift
  167 D1:C68F -  -  -  -  sine_05_31_1: ;freqMult, amplitude, phase 
  168 D1:C68F 00 -  -  -  	.db 0  
  169 D1:C690 -  -  -  -  sine_05_15_1: ;freqMult, amplitude, phase 
  170 D1:C690 00 -  -  -  	.db 0 
  171 D1:C691 -  -  -  -  sine_05_7_1: ;freqMult, amplitude, phase 
  172 D1:C691 00 -  -  -  	.db 0 
  173 D1:C692 -  -  -  -  sine_05_3_1: ;freqMult, amplitude, phase 
  174 D1:C692 00 -  -  -  	.db 0 
  175 D1:C693 -  -  -  -  sine_05_1_1: ;freqMult, amplitude, phase 
  176 D1:C693 00 -  -  -  	.db 0 
  177 D1:C694 -  -  -  -  
  178 D1:C694 -  -  -  -  	
  179 D1:C694 -  -  -  -  	
  180 D1:C694 -  -  -  -  sine_05_2: ;half frequency, no phase shift 
  181 D1:C694 -  -  -  -  sine_05_31_2: ;freqMult, amplitude, phase 
  182 D1:C694 00 -  -  -  	.db 0 
  183 D1:C695 -  -  -  -  sine_05_15_2: ;freqMult, amplitude, phase 
  184 D1:C695 00 -  -  -  	.db 0 
  185 D1:C696 -  -  -  -  sine_05_7_2: ;freqMult, amplitude, phase 
  186 D1:C696 00 -  -  -  	.db 0 
  187 D1:C697 -  -  -  -  sine_05_3_2: ;freqMult, amplitude, phase 
  188 D1:C697 00 -  -  -  	.db 0 
  189 D1:C698 -  -  -  -  sine_05_1_2: ;freqMult, amplitude, phase 
  190 D1:C698 00 -  -  -  	.db 0 
  191 D1:C699 -  -  -  -  
  192 D1:C699 -  -  -  -  	
  193 D1:C699 -  -  -  -  sine_05_3: ;half frequency, no phase shift
  194 D1:C699 -  -  -  -  sine_05_31_3: ;freqMult, amplitude, phase 
  195 D1:C699 00 -  -  -  	.db 0  
  196 D1:C69A -  -  -  -  sine_05_15_3: ;freqMult, amplitude, phase 
  197 D1:C69A 00 -  -  -  	.db 0 
  198 D1:C69B -  -  -  -  sine_05_7_3: ;freqMult, amplitude, phase 
  199 D1:C69B 00 -  -  -  	.db 0 
  200 D1:C69C -  -  -  -  sine_05_3_3: ;freqMult, amplitude, phase 
  201 D1:C69C 00 -  -  -  	.db 0 
  202 D1:C69D -  -  -  -  sine_05_1_3: ;freqMult, amplitude, phase 
  203 D1:C69D 00 -  -  -  	.db 0 
  204 D1:C69E -  -  -  -  
  205 D1:C69E -  -  -  -  
  206 D1:C69E -  -  -  -  sine_05_4: ;half frequency, no phase shift 
  207 D1:C69E -  -  -  -  sine_05_31_4: ;freqMult, amplitude, phase 
  208 D1:C69E 00 -  -  -  	.db 0
  209 D1:C69F -  -  -  -  sine_05_15_4: ;freqMult, amplitude, phase 
  210 D1:C69F 00 -  -  -  	.db 0 
  211 D1:C6A0 -  -  -  -  sine_05_7_4: ;freqMult, amplitude, phase 
  212 D1:C6A0 00 -  -  -  	.db 0 
  213 D1:C6A1 -  -  -  -  sine_05_3_4: ;freqMult, amplitude, phase 
  214 D1:C6A1 00 -  -  -  	.db 0 
  215 D1:C6A2 -  -  -  -  sine_05_1_4: ;freqMult, amplitude, phase 
  216 D1:C6A2 00 -  -  -  	.db 0 
  217 D1:C6A3 -  -  -  -  
  218 D1:C6A3 -  -  -  -  
  219 D1:C6A3 -  -  -  -  	
  220 D1:C6A3 -  -  -  -  sine_1_1: ;no freq mult, no phase shift
  221 D1:C6A3 -  -  -  -  sine_1_31_1: ;freqMult, amplitude, phase 
  222 D1:C6A3 00 -  -  -  	.db 0  
  223 D1:C6A4 -  -  -  -  sine_1_15_1: ;freqMult, amplitude, phase 
  224 D1:C6A4 00 -  -  -  	.db 0 
  225 D1:C6A5 -  -  -  -  sine_1_7_1: ;freqMult, amplitude, phase 
  226 D1:C6A5 00 -  -  -  	.db 0 
  227 D1:C6A6 -  -  -  -  sine_1_3_1: ;freqMult, amplitude, phase 
  228 D1:C6A6 00 -  -  -  	.db 0 
  229 D1:C6A7 -  -  -  -  sine_1_1_1: ;freqMult, amplitude, phase 
  230 D1:C6A7 00 -  -  -  	.db 0 
  231 D1:C6A8 -  -  -  -  
  232 D1:C6A8 -  -  -  -  	
  233 D1:C6A8 -  -  -  -  sine_1_2: ;no freq mult, no phase shift 
  234 D1:C6A8 -  -  -  -  sine_1_31_2: ;freqMult, amplitude, phase 
  235 D1:C6A8 00 -  -  -  	.db 0 
  236 D1:C6A9 -  -  -  -  sine_1_15_2: ;freqMult, amplitude, phase 
  237 D1:C6A9 00 -  -  -  	.db 0 
  238 D1:C6AA -  -  -  -  sine_1_7_2: ;freqMult, amplitude, phase 
  239 D1:C6AA 00 -  -  -  	.db 0 
  240 D1:C6AB -  -  -  -  sine_1_3_2: ;freqMult, amplitude, phase 
  241 D1:C6AB 00 -  -  -  	.db 0 
  242 D1:C6AC -  -  -  -  sine_1_1_2: ;freqMult, amplitude, phase 
  243 D1:C6AC 00 -  -  -  	.db 0 
  244 D1:C6AD -  -  -  -  
  245 D1:C6AD -  -  -  -  sine_1_3: ;no freq mult, no phase shift 
  246 D1:C6AD -  -  -  -  sine_1_31_3: ;freqMult, amplitude, phase 
  247 D1:C6AD 00 -  -  -  	.db 0 
  248 D1:C6AE -  -  -  -  sine_1_15_3: ;freqMult, amplitude, phase 
  249 D1:C6AE 00 -  -  -  	.db 0 
  250 D1:C6AF -  -  -  -  sine_1_7_3: ;freqMult, amplitude, phase 
  251 D1:C6AF 00 -  -  -  	.db 0 
  252 D1:C6B0 -  -  -  -  sine_1_3_3: ;freqMult, amplitude, phase 
  253 D1:C6B0 00 -  -  -  	.db 0 
  254 D1:C6B1 -  -  -  -  sine_1_1_3: ;freqMult, amplitude, phase 
  255 D1:C6B1 00 -  -  -  	.db 0 
  256 D1:C6B2 -  -  -  -  
  257 D1:C6B2 -  -  -  -  	
  258 D1:C6B2 -  -  -  -  sine_1_4: ;no freq mult, no phase shift
  259 D1:C6B2 -  -  -  -  sine_1_31_4: ;freqMult, amplitude, phase 
  260 D1:C6B2 00 -  -  -  	.db 0  
  261 D1:C6B3 -  -  -  -  sine_1_15_4: ;freqMult, amplitude, phase 
  262 D1:C6B3 00 -  -  -  	.db 0 
  263 D1:C6B4 -  -  -  -  sine_1_7_4: ;freqMult, amplitude, phase 
  264 D1:C6B4 00 -  -  -  	.db 0 
  265 D1:C6B5 -  -  -  -  sine_1_3_4: ;freqMult, amplitude, phase 
  266 D1:C6B5 00 -  -  -  	.db 0 
  267 D1:C6B6 -  -  -  -  sine_1_1_4: ;freqMult, amplitude, phase 
  268 D1:C6B6 00 -  -  -  	.db 0 
  269 D1:C6B7 -  -  -  -  
  270 D1:C6B7 -  -  -  -  
  271 D1:C6B7 -  -  -  -  
  272 D1:C6B7 -  -  -  -  
  273 D1:C6B7 -  -  -  -  sine_2_1: ;double freq mult
  274 D1:C6B7 -  -  -  -  sine_2_31_1: ;freqMult, amplitude, phase 
  275 D1:C6B7 00 -  -  -  	.db 0 
  276 D1:C6B8 -  -  -  -  sine_2_15_1: ;freqMult, amplitude, phase 
  277 D1:C6B8 00 -  -  -  	.db 0 
  278 D1:C6B9 -  -  -  -  sine_2_7_1: ;freqMult, amplitude, phase 
  279 D1:C6B9 00 -  -  -  	.db 0 
  280 D1:C6BA -  -  -  -  sine_2_3_1: ;freqMult, amplitude, phase 
  281 D1:C6BA 00 -  -  -  	.db 0 
  282 D1:C6BB -  -  -  -  sine_2_1_1: ;freqMult, amplitude, phase 
  283 D1:C6BB 00 -  -  -  	.db 0 
  284 D1:C6BC -  -  -  -  
  285 D1:C6BC -  -  -  -  	
  286 D1:C6BC -  -  -  -  sine_2_2: 
  287 D1:C6BC -  -  -  -  sine_2_31_2: ;freqMult, amplitude, phase 
  288 D1:C6BC 00 -  -  -  	.db 0 
  289 D1:C6BD -  -  -  -  sine_2_15_2: ;freqMult, amplitude, phase 
  290 D1:C6BD 00 -  -  -  	.db 0 
  291 D1:C6BE -  -  -  -  sine_2_7_2: ;freqMult, amplitude, phase 
  292 D1:C6BE 00 -  -  -  	.db 0 
  293 D1:C6BF -  -  -  -  sine_2_3_2: ;freqMult, amplitude, phase 
  294 D1:C6BF 00 -  -  -  	.db 0 
  295 D1:C6C0 -  -  -  -  sine_2_1_2: ;freqMult, amplitude, phase 
  296 D1:C6C0 00 -  -  -  	.db 0 
  297 D1:C6C1 -  -  -  -  
  298 D1:C6C1 -  -  -  -  	
  299 D1:C6C1 -  -  -  -  sine_2_3: 
  300 D1:C6C1 -  -  -  -  sine_2_31_3: ;freqMult, amplitude, phase 
  301 D1:C6C1 00 -  -  -  	.db 0 
  302 D1:C6C2 -  -  -  -  sine_2_15_3: ;freqMult, amplitude, phase 
  303 D1:C6C2 00 -  -  -  	.db 0 
  304 D1:C6C3 -  -  -  -  sine_2_7_3: ;freqMult, amplitude, phase 
  305 D1:C6C3 00 -  -  -  	.db 0 
  306 D1:C6C4 -  -  -  -  sine_2_3_3: ;freqMult, amplitude, phase 
  307 D1:C6C4 00 -  -  -  	.db 0 
  308 D1:C6C5 -  -  -  -  sine_2_1_3: ;freqMult, amplitude, phase 
  309 D1:C6C5 00 -  -  -  	.db 0 
  310 D1:C6C6 -  -  -  -  
  311 D1:C6C6 -  -  -  -  	
  312 D1:C6C6 -  -  -  -  sine_2_4: 
  313 D1:C6C6 -  -  -  -  sine_2_31_4: ;freqMult, amplitude, phase 
  314 D1:C6C6 00 -  -  -  	.db 0	
  315 D1:C6C7 -  -  -  -  sine_2_15_4: ;freqMult, amplitude, phase 
  316 D1:C6C7 00 -  -  -  	.db 0 
  317 D1:C6C8 -  -  -  -  sine_2_7_4: ;freqMult, amplitude, phase 
  318 D1:C6C8 00 -  -  -  	.db 0 
  319 D1:C6C9 -  -  -  -  sine_2_3_4: ;freqMult, amplitude, phase 
  320 D1:C6C9 00 -  -  -  	.db 0 
  321 D1:C6CA -  -  -  -  sine_2_1_4: ;freqMult, amplitude, phase 
  322 D1:C6CA 00 -  -  -  	.db 0 
  323 D1:C6CB -  -  -  -  
  324 D1:C6CB -  -  -  -  
  325 D1:C6CB -  -  -  -  
  326 D1:C6CB -  -  -  -  
  327 D1:C6CB -  -  -  -  sine_4_1: ;double freq mult
  328 D1:C6CB -  -  -  -  sine_4_31_1: ;freqMult, amplitude, phase 
  329 D1:C6CB 00 -  -  -  	.db 0 
  330 D1:C6CC -  -  -  -  sine_4_15_1: ;freqMult, amplitude, phase 
  331 D1:C6CC 00 -  -  -  	.db 0 
  332 D1:C6CD -  -  -  -  sine_4_7_1: ;freqMult, amplitude, phase 
  333 D1:C6CD 00 -  -  -  	.db 0 
  334 D1:C6CE -  -  -  -  sine_4_3_1: ;freqMult, amplitude, phase 
  335 D1:C6CE 00 -  -  -  	.db 0 
  336 D1:C6CF -  -  -  -  sine_4_1_1: ;freqMult, amplitude, phase 
  337 D1:C6CF 00 -  -  -  	.db 0 
  338 D1:C6D0 -  -  -  -  
  339 D1:C6D0 -  -  -  -  	
  340 D1:C6D0 -  -  -  -  sine_4_2: 
  341 D1:C6D0 -  -  -  -  sine_4_31_2: ;freqMult, amplitude, phase 
  342 D1:C6D0 00 -  -  -  	.db 0
  343 D1:C6D1 -  -  -  -  sine_4_15_2: ;freqMult, amplitude, phase 
  344 D1:C6D1 00 -  -  -  	.db 0 
  345 D1:C6D2 -  -  -  -  sine_4_7_2: ;freqMult, amplitude, phase 
  346 D1:C6D2 00 -  -  -  	.db 0 
  347 D1:C6D3 -  -  -  -  sine_4_3_2: ;freqMult, amplitude, phase 
  348 D1:C6D3 00 -  -  -  	.db 0 
  349 D1:C6D4 -  -  -  -  sine_4_1_2: ;freqMult, amplitude, phase 
  350 D1:C6D4 00 -  -  -  	.db 0 
  351 D1:C6D5 -  -  -  -  
  352 D1:C6D5 -  -  -  -  	
  353 D1:C6D5 -  -  -  -  sine_4_3: 
  354 D1:C6D5 -  -  -  -  sine_4_31_3: ;freqMult, amplitude, phase 
  355 D1:C6D5 00 -  -  -  	.db 0 
  356 D1:C6D6 -  -  -  -  sine_4_15_3: ;freqMult, amplitude, phase 
  357 D1:C6D6 00 -  -  -  	.db 0 
  358 D1:C6D7 -  -  -  -  sine_4_7_3: ;freqMult, amplitude, phase 
  359 D1:C6D7 00 -  -  -  	.db 0 
  360 D1:C6D8 -  -  -  -  sine_4_3_3: ;freqMult, amplitude, phase 
  361 D1:C6D8 00 -  -  -  	.db 0 
  362 D1:C6D9 -  -  -  -  sine_4_1_3: ;freqMult, amplitude, phase 
  363 D1:C6D9 00 -  -  -  	.db 0 
  364 D1:C6DA -  -  -  -  
  365 D1:C6DA -  -  -  -  	
  366 D1:C6DA -  -  -  -  sine_4_4: 
  367 D1:C6DA -  -  -  -  sine_4_314: ;freqMult, amplitude, phase 
  368 D1:C6DA 00 -  -  -  	.db 0
  369 D1:C6DB -  -  -  -  sine_4_15_4: ;freqMult, amplitude, phase 
  370 D1:C6DB 00 -  -  -  	.db 0 
  371 D1:C6DC -  -  -  -  sine_4_7_4: ;freqMult, amplitude, phase 
  372 D1:C6DC 00 -  -  -  	.db 0 
  373 D1:C6DD -  -  -  -  sine_4_3_4: ;freqMult, amplitude, phase 
  374 D1:C6DD 00 -  -  -  	.db 0 
  375 D1:C6DE -  -  -  -  sine_4_1_4: ;freqMult, amplitude, phase 
  376 D1:C6DE 00 -  -  -  	.db 0 
  377 D1:C6DF -  -  -  -  
  378 D1:C6DF -  -  -  -  
  379 D1:C6DF -  -  -  -  
  380 D1:C6DF -  -  -  -  
  381 D1:C6DF -  -  -  -  
  382 D1:C6DF -  -  -  -  sine_8_1: ;double freq mult
  383 D1:C6DF -  -  -  -  sine_8_31_1: ;freqMult, amplitude, phase 
  384 D1:C6DF 00 -  -  -  	.db 0 
  385 D1:C6E0 -  -  -  -  sine_8_15_1: ;freqMult, amplitude, phase 
  386 D1:C6E0 00 -  -  -  	.db 0 
  387 D1:C6E1 -  -  -  -  sine_8_7_1: ;freqMult, amplitude, phase 
  388 D1:C6E1 00 -  -  -  	.db 0 
  389 D1:C6E2 -  -  -  -  sine_8_3_1: ;freqMult, amplitude, phase 
  390 D1:C6E2 00 -  -  -  	.db 0 
  391 D1:C6E3 -  -  -  -  sine_8_1_1: ;freqMult, amplitude, phase 
  392 D1:C6E3 00 -  -  -  	.db 0 
  393 D1:C6E4 -  -  -  -  
  394 D1:C6E4 -  -  -  -  	
  395 D1:C6E4 -  -  -  -  sine_8_2: 
  396 D1:C6E4 -  -  -  -  sine_8_31_2: ;freqMult, amplitude, phase 
  397 D1:C6E4 00 -  -  -  	.db 0 
  398 D1:C6E5 -  -  -  -  sine_8_15_2: ;freqMult, amplitude, phase 
  399 D1:C6E5 00 -  -  -  	.db 0 
  400 D1:C6E6 -  -  -  -  sine_8_7_2: ;freqMult, amplitude, phase 
  401 D1:C6E6 00 -  -  -  	.db 0 
  402 D1:C6E7 -  -  -  -  sine_8_3_2: ;freqMult, amplitude, phase 
  403 D1:C6E7 00 -  -  -  	.db 0 
  404 D1:C6E8 -  -  -  -  sine_8_1_2: ;freqMult, amplitude, phase 
  405 D1:C6E8 00 -  -  -  	.db 0 
  406 D1:C6E9 -  -  -  -  
  407 D1:C6E9 -  -  -  -  	
  408 D1:C6E9 -  -  -  -  sine_8_3: 
  409 D1:C6E9 -  -  -  -  sine_8_313: ;freqMult, amplitude, phase 
  410 D1:C6E9 00 -  -  -  	.db 0 
  411 D1:C6EA -  -  -  -  sine_8_15_3: ;freqMult, amplitude, phase 
  412 D1:C6EA 00 -  -  -  	.db 0 
  413 D1:C6EB -  -  -  -  sine_8_7_3: ;freqMult, amplitude, phase 
  414 D1:C6EB 00 -  -  -  	.db 0 
  415 D1:C6EC -  -  -  -  sine_8_3_3: ;freqMult, amplitude, phase 
  416 D1:C6EC 00 -  -  -  	.db 0 
  417 D1:C6ED -  -  -  -  sine_8_1_3: ;freqMult, amplitude, phase 
  418 D1:C6ED 00 -  -  -  	.db 0 
  419 D1:C6EE -  -  -  -  
  420 D1:C6EE -  -  -  -  	
  421 D1:C6EE -  -  -  -  sine_8_4: 
  422 D1:C6EE -  -  -  -  sine_8_31_4: ;freqMult, amplitude, phase 
  423 D1:C6EE 00 -  -  -  	.db 0
  424 D1:C6EF -  -  -  -  sine_8_15_4: ;freqMult, amplitude, phase 
  425 D1:C6EF 00 -  -  -  	.db 0 
  426 D1:C6F0 -  -  -  -  sine_8_7_4: ;freqMult, amplitude, phase 
  427 D1:C6F0 00 -  -  -  	.db 0 
  428 D1:C6F1 -  -  -  -  sine_8_3_4: ;freqMult, amplitude, phase 
  429 D1:C6F1 00 -  -  -  	.db 0 
  430 D1:C6F2 -  -  -  -  sine_8_1_4: ;freqMult, amplitude, phase 
  431 D1:C6F2 00 -  -  -  	.db 0 
  432 D1:C6F3 -  -  -  -  
  433 D1:C6F3 -  -  -  -  
  434 D1:C6F3 -  -  -  -  
  435 D1:C6F3 -  -  -  -  
  436 D1:C6F3 -  -  -  -  lin_05_1:
  437 D1:C6F3 -  -  -  -  lin_05_31_1:
  438 D1:C6F3 00 -  -  -  	.db 0 
  439 D1:C6F4 -  -  -  -  lin_05_15_1:
  440 D1:C6F4 00 -  -  -  	.db 0 
  441 D1:C6F5 -  -  -  -  lin_05_7_1:
  442 D1:C6F5 00 -  -  -  	.db 0 
  443 D1:C6F6 -  -  -  -  lin_05_3_1:
  444 D1:C6F6 00 -  -  -  	.db 0 
  445 D1:C6F7 -  -  -  -  lin_05_1_1:
  446 D1:C6F7 00 -  -  -  	.db 0 
  447 D1:C6F8 -  -  -  -  
  448 D1:C6F8 -  -  -  -  lin_05_2:
  449 D1:C6F8 -  -  -  -  lin_05_31_2:
  450 D1:C6F8 00 -  -  -  	.db 0 
  451 D1:C6F9 -  -  -  -  lin_05_15_2:
  452 D1:C6F9 00 -  -  -  	.db 0 
  453 D1:C6FA -  -  -  -  lin_05_7_2:
  454 D1:C6FA 00 -  -  -  	.db 0 
  455 D1:C6FB -  -  -  -  lin_05_3_2:
  456 D1:C6FB 00 -  -  -  	.db 0 
  457 D1:C6FC -  -  -  -  lin_05_1_2:
  458 D1:C6FC 00 -  -  -  	.db 0 	
  459 D1:C6FD -  -  -  -  	
  460 D1:C6FD -  -  -  -  lin_05_3:
  461 D1:C6FD -  -  -  -  lin_05_31_3:
  462 D1:C6FD 00 -  -  -  	.db 0 
  463 D1:C6FE -  -  -  -  lin_05_15_3:
  464 D1:C6FE 00 -  -  -  	.db 0 
  465 D1:C6FF -  -  -  -  lin_05_7_3:
  466 D1:C6FF 00 -  -  -  	.db 0 
  467 D1:C700 -  -  -  -  lin_05_3_3:
  468 D1:C700 00 -  -  -  	.db 0 
  469 D1:C701 -  -  -  -  lin_05_1_3:
  470 D1:C701 00 -  -  -  	.db 0 	
  471 D1:C702 -  -  -  -  	
  472 D1:C702 -  -  -  -  lin_05_4:
  473 D1:C702 -  -  -  -  lin_05_31_4:
  474 D1:C702 00 -  -  -  	.db 0 
  475 D1:C703 -  -  -  -  lin_05_15_4:
  476 D1:C703 00 -  -  -  	.db 0 
  477 D1:C704 -  -  -  -  lin_05_7_4:
  478 D1:C704 00 -  -  -  	.db 0 
  479 D1:C705 -  -  -  -  lin_05_3_4:
  480 D1:C705 00 -  -  -  	.db 0 
  481 D1:C706 -  -  -  -  lin_05_1_4:
  482 D1:C706 00 -  -  -  	.db 0 
  483 D1:C707 -  -  -  -  
  484 D1:C707 -  -  -  -  lin_1_1:
  485 D1:C707 -  -  -  -  lin_1_31_1:
  486 D1:C707 00 -  -  -  	.db 0 
  487 D1:C708 -  -  -  -  lin_1_15_1:
  488 D1:C708 00 -  -  -  	.db 0 
  489 D1:C709 -  -  -  -  lin_1_7_1:
  490 D1:C709 00 -  -  -  	.db 0 
  491 D1:C70A -  -  -  -  lin_1_3_1:
  492 D1:C70A 00 -  -  -  	.db 0
  493 D1:C70B -  -  -  -  lin_1_1_1:
  494 D1:C70B 00 -  -  -  	.db 0 	
  495 D1:C70C -  -  -  -  
  496 D1:C70C -  -  -  -  lin_1_2:
  497 D1:C70C -  -  -  -  lin_1_31_2:
  498 D1:C70C 00 -  -  -  	.db 0 
  499 D1:C70D -  -  -  -  lin_1_15_2:
  500 D1:C70D 00 -  -  -  	.db 0 
  501 D1:C70E -  -  -  -  lin_1_7_2:
  502 D1:C70E 00 -  -  -  	.db 0 
  503 D1:C70F -  -  -  -  lin_1_3_2:
  504 D1:C70F 00 -  -  -  	.db 0 
  505 D1:C710 -  -  -  -  lin_1_1_2:
  506 D1:C710 00 -  -  -  	.db 0 
  507 D1:C711 -  -  -  -  	
  508 D1:C711 -  -  -  -  lin_1_3:
  509 D1:C711 -  -  -  -  lin_1_31_3:
  510 D1:C711 00 -  -  -  	.db 0 
  511 D1:C712 -  -  -  -  lin_1_15_3:
  512 D1:C712 00 -  -  -  	.db 0 
  513 D1:C713 -  -  -  -  lin_1_7_3:
  514 D1:C713 00 -  -  -  	.db 0 
  515 D1:C714 -  -  -  -  lin_1_3_3:
  516 D1:C714 00 -  -  -  	.db 0 
  517 D1:C715 -  -  -  -  lin_1_1_3:
  518 D1:C715 00 -  -  -  	.db 0 
  519 D1:C716 -  -  -  -  	
  520 D1:C716 -  -  -  -  lin_1_4:
  521 D1:C716 -  -  -  -  lin_1_31_4:
  522 D1:C716 00 -  -  -  	.db 0 
  523 D1:C717 -  -  -  -  lin_1_15_4:
  524 D1:C717 00 -  -  -  	.db 0 
  525 D1:C718 -  -  -  -  lin_1_7_4:
  526 D1:C718 00 -  -  -  	.db 0 
  527 D1:C719 -  -  -  -  lin_1_3_4:
  528 D1:C719 00 -  -  -  	.db 0 
  529 D1:C71A -  -  -  -  lin_1_1_4:
  530 D1:C71A 00 -  -  -  	.db 0 
  531 D1:C71B -  -  -  -  	
  532 D1:C71B -  -  -  -  lin_2_1:
  533 D1:C71B -  -  -  -  lin_2_31_1:
  534 D1:C71B 00 -  -  -  	.db 0 
  535 D1:C71C -  -  -  -  lin_2_15_1:
  536 D1:C71C 00 -  -  -  	.db 0 
  537 D1:C71D -  -  -  -  lin_2_7_1:
  538 D1:C71D 00 -  -  -  	.db 0 
  539 D1:C71E -  -  -  -  lin_2_3_1:
  540 D1:C71E 00 -  -  -  	.db 0 
  541 D1:C71F -  -  -  -  lin_2_1_1:
  542 D1:C71F 00 -  -  -  	.db 0
  543 D1:C720 -  -  -  -  
  544 D1:C720 -  -  -  -  lin_2_2:
  545 D1:C720 -  -  -  -  lin_2_31_2:
  546 D1:C720 00 -  -  -  	.db 0 
  547 D1:C721 -  -  -  -  lin_2_15_2:
  548 D1:C721 00 -  -  -  	.db 0 
  549 D1:C722 -  -  -  -  lin_2_7_2:
  550 D1:C722 00 -  -  -  	.db 0 
  551 D1:C723 -  -  -  -  lin_2_3_2:
  552 D1:C723 00 -  -  -  	.db 0 
  553 D1:C724 -  -  -  -  lin_2_1_2:
  554 D1:C724 00 -  -  -  	.db 0 
  555 D1:C725 -  -  -  -  	
  556 D1:C725 -  -  -  -  lin_2_3:
  557 D1:C725 -  -  -  -  lin_2_31_3:
  558 D1:C725 00 -  -  -  	.db 0 
  559 D1:C726 -  -  -  -  lin_2_15_3:
  560 D1:C726 00 -  -  -  	.db 0 
  561 D1:C727 -  -  -  -  lin_2_7_3:
  562 D1:C727 00 -  -  -  	.db 0 
  563 D1:C728 -  -  -  -  lin_2_3_3:
  564 D1:C728 00 -  -  -  	.db 0 
  565 D1:C729 -  -  -  -  lin_2_1_3:
  566 D1:C729 00 -  -  -  	.db 0 
  567 D1:C72A -  -  -  -  	
  568 D1:C72A -  -  -  -  lin_2_4:
  569 D1:C72A -  -  -  -  lin_2_31_4:
  570 D1:C72A 00 -  -  -  	.db 0 
  571 D1:C72B -  -  -  -  lin_2_15_4:
  572 D1:C72B 00 -  -  -  	.db 0 
  573 D1:C72C -  -  -  -  lin_2_7_4:
  574 D1:C72C 00 -  -  -  	.db 0 
  575 D1:C72D -  -  -  -  lin_2_3_4:
  576 D1:C72D 00 -  -  -  	.db 0 
  577 D1:C72E -  -  -  -  lin_2_1_4:
  578 D1:C72E 00 -  -  -  	.db 0 
  579 D1:C72F -  -  -  -  	
  580 D1:C72F -  -  -  -  lin_4_1:
  581 D1:C72F -  -  -  -  lin_4_31_1:
  582 D1:C72F 00 -  -  -  	.db 0 
  583 D1:C730 -  -  -  -  lin_4_15_1:
  584 D1:C730 00 -  -  -  	.db 0 
  585 D1:C731 -  -  -  -  lin_4_7_1:
  586 D1:C731 00 -  -  -  	.db 0 
  587 D1:C732 -  -  -  -  lin_4_3_1:
  588 D1:C732 00 -  -  -  	.db 0 
  589 D1:C733 -  -  -  -  lin_4_1_1:
  590 D1:C733 00 -  -  -  	.db 0 
  591 D1:C734 -  -  -  -  
  592 D1:C734 -  -  -  -  
  593 D1:C734 -  -  -  -  lin_4_2:
  594 D1:C734 -  -  -  -  lin_4_31_2:
  595 D1:C734 00 -  -  -  	.db 0 
  596 D1:C735 -  -  -  -  lin_4_15_2:
  597 D1:C735 00 -  -  -  	.db 0 
  598 D1:C736 -  -  -  -  lin_4_7_2:
  599 D1:C736 00 -  -  -  	.db 0 
  600 D1:C737 -  -  -  -  lin_4_3_2:
  601 D1:C737 00 -  -  -  	.db 0 
  602 D1:C738 -  -  -  -  lin_4_1_2:
  603 D1:C738 00 -  -  -  	.db 0 
  604 D1:C739 -  -  -  -  	
  605 D1:C739 -  -  -  -  lin_4_3:
  606 D1:C739 -  -  -  -  lin_4_31_3:
  607 D1:C739 00 -  -  -  	.db 0 
  608 D1:C73A -  -  -  -  lin_4_15_3:
  609 D1:C73A 00 -  -  -  	.db 0 
  610 D1:C73B -  -  -  -  lin_4_7_3:
  611 D1:C73B 00 -  -  -  	.db 0 
  612 D1:C73C -  -  -  -  lin_4_3_3:
  613 D1:C73C 00 -  -  -  	.db 0 
  614 D1:C73D -  -  -  -  lin_4_1_3:
  615 D1:C73D 00 -  -  -  	.db 0 
  616 D1:C73E -  -  -  -  	
  617 D1:C73E -  -  -  -  lin_4_4:
  618 D1:C73E -  -  -  -  lin_4_31_4:
  619 D1:C73E 00 -  -  -  	.db 0 
  620 D1:C73F -  -  -  -  lin_4_15_4:
  621 D1:C73F 00 -  -  -  	.db 0 
  622 D1:C740 -  -  -  -  lin_4_7_4:
  623 D1:C740 00 -  -  -  	.db 0 
  624 D1:C741 -  -  -  -  lin_4_3_4:
  625 D1:C741 00 -  -  -  	.db 0 
  626 D1:C742 -  -  -  -  lin_4_1_4:
  627 D1:C742 00 -  -  -  	.db 0 
  628 D1:C743 -  -  -  -  	
  629 D1:C743 -  -  -  -  	
  630 D1:C743 -  -  -  -  lin_8_1:
  631 D1:C743 -  -  -  -  lin_8_31_1:
  632 D1:C743 00 -  -  -  	.db 0 
  633 D1:C744 -  -  -  -  lin_8_15_1:
  634 D1:C744 00 -  -  -  	.db 0 
  635 D1:C745 -  -  -  -  lin_8_7_1:
  636 D1:C745 00 -  -  -  	.db 0 
  637 D1:C746 -  -  -  -  lin_8_3_1:
  638 D1:C746 00 -  -  -  	.db 0 
  639 D1:C747 -  -  -  -  lin_8_1_1:
  640 D1:C747 00 -  -  -  	.db 0 
  641 D1:C748 -  -  -  -  
  642 D1:C748 -  -  -  -  lin_8_2:
  643 D1:C748 -  -  -  -  lin_8_31_2:
  644 D1:C748 00 -  -  -  	.db 0 
  645 D1:C749 -  -  -  -  lin_8_15_2:
  646 D1:C749 00 -  -  -  	.db 0 
  647 D1:C74A -  -  -  -  lin_8_7_2:
  648 D1:C74A 00 -  -  -  	.db 0 
  649 D1:C74B -  -  -  -  lin_8_3_2:
  650 D1:C74B 00 -  -  -  	.db 0 
  651 D1:C74C -  -  -  -  lin_8_1_2:
  652 D1:C74C 00 -  -  -  	.db 0 
  653 D1:C74D -  -  -  -  	
  654 D1:C74D -  -  -  -  lin_8_3:
  655 D1:C74D -  -  -  -  lin_8_31_3:
  656 D1:C74D 00 -  -  -  	.db 0 
  657 D1:C74E -  -  -  -  lin_8_15_3:
  658 D1:C74E 00 -  -  -  	.db 0 
  659 D1:C74F -  -  -  -  lin_8_7_3:
  660 D1:C74F 00 -  -  -  	.db 0 
  661 D1:C750 -  -  -  -  lin_8_3_3:
  662 D1:C750 00 -  -  -  	.db 0 
  663 D1:C751 -  -  -  -  lin_8_1_3:
  664 D1:C751 00 -  -  -  	.db 0 
  665 D1:C752 -  -  -  -  	
  666 D1:C752 -  -  -  -  lin_8_4:
  667 D1:C752 -  -  -  -  lin_8_31_4:
  668 D1:C752 00 -  -  -  	.db 0 
  669 D1:C753 -  -  -  -  lin_8_15_4:
  670 D1:C753 00 -  -  -  	.db 0 
  671 D1:C754 -  -  -  -  lin_8_7_4:
  672 D1:C754 00 -  -  -  	.db 0 
  673 D1:C755 -  -  -  -  lin_8_3_4:
  674 D1:C755 00 -  -  -  	.db 0 
  675 D1:C756 -  -  -  -  lin_8_1_4:
  676 D1:C756 00 -  -  -  	.db 0 
  677 D1:C757 -  -  -  -  
  678 D1:C757 -  -  -  -  
  679 D1:C757 -  -  -  -  
  680 D1:C757 -  -  -  -  
  681 D1:C757 -  -  -  -  
  682 D1:C757 -  -  -  -  linrep_05_1:
  683 D1:C757 -  -  -  -  linrep_05_31_1:
  684 D1:C757 00 -  -  -  	.db 0 
  685 D1:C758 -  -  -  -  linrep_05_15_1:
  686 D1:C758 00 -  -  -  	.db 0 
  687 D1:C759 -  -  -  -  linrep_05_7_1:
  688 D1:C759 00 -  -  -  	.db 0 
  689 D1:C75A -  -  -  -  linrep_05_3_1:
  690 D1:C75A 00 -  -  -  	.db 0 
  691 D1:C75B -  -  -  -  linrep_05_1_1:
  692 D1:C75B 00 -  -  -  	.db 0 
  693 D1:C75C -  -  -  -  
  694 D1:C75C -  -  -  -  linrep_05_2:
  695 D1:C75C -  -  -  -  linrep_05_31_2:
  696 D1:C75C 00 -  -  -  	.db 0 
  697 D1:C75D -  -  -  -  linrep_05_15_2:
  698 D1:C75D 00 -  -  -  	.db 0 
  699 D1:C75E -  -  -  -  linrep_05_7_2:
  700 D1:C75E 00 -  -  -  	.db 0 
  701 D1:C75F -  -  -  -  linrep_05_3_2:
  702 D1:C75F 00 -  -  -  	.db 0 
  703 D1:C760 -  -  -  -  linrep_05_1_2:
  704 D1:C760 00 -  -  -  	.db 0 	
  705 D1:C761 -  -  -  -  	
  706 D1:C761 -  -  -  -  linrep_05_3:
  707 D1:C761 -  -  -  -  linrep_05_31_3:
  708 D1:C761 00 -  -  -  	.db 0 
  709 D1:C762 -  -  -  -  linrep_05_15_3:
  710 D1:C762 00 -  -  -  	.db 0 
  711 D1:C763 -  -  -  -  linrep_05_7_3:
  712 D1:C763 00 -  -  -  	.db 0 
  713 D1:C764 -  -  -  -  linrep_05_3_3:
  714 D1:C764 00 -  -  -  	.db 0 
  715 D1:C765 -  -  -  -  linrep_05_1_3:
  716 D1:C765 00 -  -  -  	.db 0 	
  717 D1:C766 -  -  -  -  	
  718 D1:C766 -  -  -  -  linrep_05_4:
  719 D1:C766 -  -  -  -  linrep_05_31_4:
  720 D1:C766 00 -  -  -  	.db 0 
  721 D1:C767 -  -  -  -  linrep_05_15_4:
  722 D1:C767 00 -  -  -  	.db 0 
  723 D1:C768 -  -  -  -  linrep_05_7_4:
  724 D1:C768 00 -  -  -  	.db 0 
  725 D1:C769 -  -  -  -  linrep_05_3_4:
  726 D1:C769 00 -  -  -  	.db 0 
  727 D1:C76A -  -  -  -  linrep_05_1_4:
  728 D1:C76A 00 -  -  -  	.db 0 
  729 D1:C76B -  -  -  -  
  730 D1:C76B -  -  -  -  linrep_1_1:
  731 D1:C76B -  -  -  -  linrep_1_31_1:
  732 D1:C76B 00 -  -  -  	.db 0 
  733 D1:C76C -  -  -  -  linrep_1_15_1:
  734 D1:C76C 00 -  -  -  	.db 0 
  735 D1:C76D -  -  -  -  linrep_1_7_1:
  736 D1:C76D 00 -  -  -  	.db 0 
  737 D1:C76E -  -  -  -  linrep_1_3_1:
  738 D1:C76E 00 -  -  -  	.db 0
  739 D1:C76F -  -  -  -  linrep_1_1_1:
  740 D1:C76F 00 -  -  -  	.db 0 	
  741 D1:C770 -  -  -  -  
  742 D1:C770 -  -  -  -  linrep_1_2:
  743 D1:C770 -  -  -  -  linrep_1_31_2:
  744 D1:C770 00 -  -  -  	.db 0 
  745 D1:C771 -  -  -  -  linrep_1_15_2:
  746 D1:C771 00 -  -  -  	.db 0 
  747 D1:C772 -  -  -  -  linrep_1_7_2:
  748 D1:C772 00 -  -  -  	.db 0 
  749 D1:C773 -  -  -  -  linrep_1_3_2:
  750 D1:C773 00 -  -  -  	.db 0 
  751 D1:C774 -  -  -  -  linrep_1_1_2:
  752 D1:C774 00 -  -  -  	.db 0 
  753 D1:C775 -  -  -  -  	
  754 D1:C775 -  -  -  -  linrep_1_3:
  755 D1:C775 -  -  -  -  linrep_1_31_3:
  756 D1:C775 00 -  -  -  	.db 0 
  757 D1:C776 -  -  -  -  linrep_1_15_3:
  758 D1:C776 00 -  -  -  	.db 0 
  759 D1:C777 -  -  -  -  linrep_1_7_3:
  760 D1:C777 00 -  -  -  	.db 0 
  761 D1:C778 -  -  -  -  linrep_1_3_3:
  762 D1:C778 00 -  -  -  	.db 0 
  763 D1:C779 -  -  -  -  linrep_1_1_3:
  764 D1:C779 00 -  -  -  	.db 0 
  765 D1:C77A -  -  -  -  	
  766 D1:C77A -  -  -  -  linrep_1_4:
  767 D1:C77A -  -  -  -  linrep_1_31_4:
  768 D1:C77A 00 -  -  -  	.db 0 
  769 D1:C77B -  -  -  -  linrep_1_15_4:
  770 D1:C77B 00 -  -  -  	.db 0 
  771 D1:C77C -  -  -  -  linrep_1_7_4:
  772 D1:C77C 00 -  -  -  	.db 0 
  773 D1:C77D -  -  -  -  linrep_1_3_4:
  774 D1:C77D 00 -  -  -  	.db 0 
  775 D1:C77E -  -  -  -  linrep_1_1_4:
  776 D1:C77E 00 -  -  -  	.db 0 
  777 D1:C77F -  -  -  -  	
  778 D1:C77F -  -  -  -  linrep_2_1:
  779 D1:C77F -  -  -  -  linrep_2_31_1:
  780 D1:C77F 00 -  -  -  	.db 0 
  781 D1:C780 -  -  -  -  linrep_2_15_1:
  782 D1:C780 00 -  -  -  	.db 0 
  783 D1:C781 -  -  -  -  linrep_2_7_1:
  784 D1:C781 00 -  -  -  	.db 0 
  785 D1:C782 -  -  -  -  linrep_2_3_1:
  786 D1:C782 00 -  -  -  	.db 0 
  787 D1:C783 -  -  -  -  linrep_2_1_1:
  788 D1:C783 00 -  -  -  	.db 0
  789 D1:C784 -  -  -  -  
  790 D1:C784 -  -  -  -  linrep_2_2:
  791 D1:C784 -  -  -  -  linrep_2_31_2:
  792 D1:C784 00 -  -  -  	.db 0 
  793 D1:C785 -  -  -  -  linrep_2_15_2:
  794 D1:C785 00 -  -  -  	.db 0 
  795 D1:C786 -  -  -  -  linrep_2_7_2:
  796 D1:C786 00 -  -  -  	.db 0 
  797 D1:C787 -  -  -  -  linrep_2_3_2:
  798 D1:C787 00 -  -  -  	.db 0 
  799 D1:C788 -  -  -  -  linrep_2_1_2:
  800 D1:C788 00 -  -  -  	.db 0 
  801 D1:C789 -  -  -  -  	
  802 D1:C789 -  -  -  -  linrep_2_3:
  803 D1:C789 -  -  -  -  linrep_2_31_3:
  804 D1:C789 00 -  -  -  	.db 0 
  805 D1:C78A -  -  -  -  linrep_2_15_3:
  806 D1:C78A 00 -  -  -  	.db 0 
  807 D1:C78B -  -  -  -  linrep_2_7_3:
  808 D1:C78B 00 -  -  -  	.db 0 
  809 D1:C78C -  -  -  -  linrep_2_3_3:
  810 D1:C78C 00 -  -  -  	.db 0 
  811 D1:C78D -  -  -  -  linrep_2_1_3:
  812 D1:C78D 00 -  -  -  	.db 0 
  813 D1:C78E -  -  -  -  	
  814 D1:C78E -  -  -  -  linrep_2_4:
  815 D1:C78E -  -  -  -  linrep_2_31_4:
  816 D1:C78E 00 -  -  -  	.db 0 
  817 D1:C78F -  -  -  -  linrep_2_15_4:
  818 D1:C78F 00 -  -  -  	.db 0 
  819 D1:C790 -  -  -  -  linrep_2_7_4:
  820 D1:C790 00 -  -  -  	.db 0 
  821 D1:C791 -  -  -  -  linrep_2_3_4:
  822 D1:C791 00 -  -  -  	.db 0 
  823 D1:C792 -  -  -  -  linrep_2_1_4:
  824 D1:C792 00 -  -  -  	.db 0 
  825 D1:C793 -  -  -  -  	
  826 D1:C793 -  -  -  -  linrep_4_1:
  827 D1:C793 -  -  -  -  linrep_4_31_1:
  828 D1:C793 00 -  -  -  	.db 0 
  829 D1:C794 -  -  -  -  linrep_4_15_1:
  830 D1:C794 00 -  -  -  	.db 0 
  831 D1:C795 -  -  -  -  linrep_4_7_1:
  832 D1:C795 00 -  -  -  	.db 0 
  833 D1:C796 -  -  -  -  linrep_4_3_1:
  834 D1:C796 00 -  -  -  	.db 0 
  835 D1:C797 -  -  -  -  linrep_4_1_1:
  836 D1:C797 00 -  -  -  	.db 0 
  837 D1:C798 -  -  -  -  
  838 D1:C798 -  -  -  -  
  839 D1:C798 -  -  -  -  linrep_4_2:
  840 D1:C798 -  -  -  -  linrep_4_31_2:
  841 D1:C798 00 -  -  -  	.db 0 
  842 D1:C799 -  -  -  -  linrep_4_15_2:
  843 D1:C799 00 -  -  -  	.db 0 
  844 D1:C79A -  -  -  -  linrep_4_7_2:
  845 D1:C79A 00 -  -  -  	.db 0 
  846 D1:C79B -  -  -  -  linrep_4_3_2:
  847 D1:C79B 00 -  -  -  	.db 0 
  848 D1:C79C -  -  -  -  linrep_4_1_2:
  849 D1:C79C 00 -  -  -  	.db 0 
  850 D1:C79D -  -  -  -  	
  851 D1:C79D -  -  -  -  linrep_4_3:
  852 D1:C79D -  -  -  -  linrep_4_31_3:
  853 D1:C79D 00 -  -  -  	.db 0 
  854 D1:C79E -  -  -  -  linrep_4_15_3:
  855 D1:C79E 00 -  -  -  	.db 0 
  856 D1:C79F -  -  -  -  linrep_4_7_3:
  857 D1:C79F 00 -  -  -  	.db 0 
  858 D1:C7A0 -  -  -  -  linrep_4_3_3:
  859 D1:C7A0 00 -  -  -  	.db 0 
  860 D1:C7A1 -  -  -  -  linrep_4_1_3:
  861 D1:C7A1 00 -  -  -  	.db 0 
  862 D1:C7A2 -  -  -  -  	
  863 D1:C7A2 -  -  -  -  linrep_4_4:
  864 D1:C7A2 -  -  -  -  linrep_4_31_4:
  865 D1:C7A2 00 -  -  -  	.db 0 
  866 D1:C7A3 -  -  -  -  linrep_4_15_4:
  867 D1:C7A3 00 -  -  -  	.db 0 
  868 D1:C7A4 -  -  -  -  linrep_4_7_4:
  869 D1:C7A4 00 -  -  -  	.db 0 
  870 D1:C7A5 -  -  -  -  linrep_4_3_4:
  871 D1:C7A5 00 -  -  -  	.db 0 
  872 D1:C7A6 -  -  -  -  linrep_4_1_4:
  873 D1:C7A6 00 -  -  -  	.db 0 
  874 D1:C7A7 -  -  -  -  	
  875 D1:C7A7 -  -  -  -  	
  876 D1:C7A7 -  -  -  -  linrep_8_1:
  877 D1:C7A7 -  -  -  -  linrep_8_31_1:
  878 D1:C7A7 00 -  -  -  	.db 0 
  879 D1:C7A8 -  -  -  -  linrep_8_15_1:
  880 D1:C7A8 00 -  -  -  	.db 0 
  881 D1:C7A9 -  -  -  -  linrep_8_7_1:
  882 D1:C7A9 00 -  -  -  	.db 0 
  883 D1:C7AA -  -  -  -  linrep_8_3_1:
  884 D1:C7AA 00 -  -  -  	.db 0 
  885 D1:C7AB -  -  -  -  linrep_8_1_1:
  886 D1:C7AB 00 -  -  -  	.db 0 
  887 D1:C7AC -  -  -  -  
  888 D1:C7AC -  -  -  -  linrep_8_2:
  889 D1:C7AC -  -  -  -  linrep_8_31_2:
  890 D1:C7AC 00 -  -  -  	.db 0 
  891 D1:C7AD -  -  -  -  linrep_8_15_2:
  892 D1:C7AD 00 -  -  -  	.db 0 
  893 D1:C7AE -  -  -  -  linrep_8_7_2:
  894 D1:C7AE 00 -  -  -  	.db 0 
  895 D1:C7AF -  -  -  -  linrep_8_3_2:
  896 D1:C7AF 00 -  -  -  	.db 0 
  897 D1:C7B0 -  -  -  -  linrep_8_1_2:
  898 D1:C7B0 00 -  -  -  	.db 0 
  899 D1:C7B1 -  -  -  -  	
  900 D1:C7B1 -  -  -  -  linrep_8_3:
  901 D1:C7B1 -  -  -  -  linrep_8_31_3:
  902 D1:C7B1 00 -  -  -  	.db 0 
  903 D1:C7B2 -  -  -  -  linrep_8_15_3:
  904 D1:C7B2 00 -  -  -  	.db 0 
  905 D1:C7B3 -  -  -  -  linrep_8_7_3:
  906 D1:C7B3 00 -  -  -  	.db 0 
  907 D1:C7B4 -  -  -  -  linrep_8_3_3:
  908 D1:C7B4 00 -  -  -  	.db 0 
  909 D1:C7B5 -  -  -  -  linrep_8_1_3:
  910 D1:C7B5 00 -  -  -  	.db 0 
  911 D1:C7B6 -  -  -  -  	
  912 D1:C7B6 -  -  -  -  linrep_8_4:
  913 D1:C7B6 -  -  -  -  linrep_8_31_4:
  914 D1:C7B6 00 -  -  -  	.db 0 
  915 D1:C7B7 -  -  -  -  linrep_8_15_4:
  916 D1:C7B7 00 -  -  -  	.db 0 
  917 D1:C7B8 -  -  -  -  linrep_8_7_4:
  918 D1:C7B8 00 -  -  -  	.db 0 
  919 D1:C7B9 -  -  -  -  linrep_8_3_4:
  920 D1:C7B9 00 -  -  -  	.db 0 
  921 D1:C7BA -  -  -  -  linrep_8_1_4:
  922 D1:C7BA 00 -  -  -  	.db 0 
  923 D1:C7BB -  -  -  -  	
  924 D1:C7BB -  -  -  -  	
  925 D1:C7BB -  -  -  -  	
  926 D1:C7BB -  -  -  -  
  927 D1:C7BB -  -  -  -  
  928 D1:C7BB -  -  -  -  sine:
  929 D1:C7BB 80 -  -  -  	.db 128
  930 D1:C7BC 83 -  -  -  	.db 131
  931 D1:C7BD 86 -  -  -  	.db 134
  932 D1:C7BE 89 -  -  -  	.db 137
  933 D1:C7BF 8C -  -  -  	.db 140
  934 D1:C7C0 8F -  -  -  	.db 143
  935 D1:C7C1 92 -  -  -  	.db 146
  936 D1:C7C2 95 -  -  -  	.db 149
  937 D1:C7C3 98 -  -  -  	.db 152
  938 D1:C7C4 9C -  -  -  	.db 156
  939 D1:C7C5 9F -  -  -  	.db 159
  940 D1:C7C6 A2 -  -  -  	.db 162
  941 D1:C7C7 A5 -  -  -  	.db 165
  942 D1:C7C8 A8 -  -  -  	.db 168
  943 D1:C7C9 AB -  -  -  	.db 171
  944 D1:C7CA AE -  -  -  	.db 174
  945 D1:C7CB B0 -  -  -  	.db 176
  946 D1:C7CC B3 -  -  -  	.db 179
  947 D1:C7CD B6 -  -  -  	.db 182
  948 D1:C7CE B9 -  -  -  	.db 185
  949 D1:C7CF BC -  -  -  	.db 188
  950 D1:C7D0 BF -  -  -  	.db 191
  951 D1:C7D1 C1 -  -  -  	.db 193
  952 D1:C7D2 C4 -  -  -  	.db 196
  953 D1:C7D3 C7 -  -  -  	.db 199
  954 D1:C7D4 C9 -  -  -  	.db 201
  955 D1:C7D5 CC -  -  -  	.db 204
  956 D1:C7D6 CE -  -  -  	.db 206
  957 D1:C7D7 D1 -  -  -  	.db 209
  958 D1:C7D8 D3 -  -  -  	.db 211
  959 D1:C7D9 D5 -  -  -  	.db 213
  960 D1:C7DA D8 -  -  -  	.db 216
  961 D1:C7DB DA -  -  -  	.db 218
  962 D1:C7DC DC -  -  -  	.db 220
  963 D1:C7DD DE -  -  -  	.db 222
  964 D1:C7DE E0 -  -  -  	.db 224
  965 D1:C7DF E2 -  -  -  	.db 226
  966 D1:C7E0 E4 -  -  -  	.db 228
  967 D1:C7E1 E6 -  -  -  	.db 230
  968 D1:C7E2 E8 -  -  -  	.db 232
  969 D1:C7E3 EA -  -  -  	.db 234
  970 D1:C7E4 EB -  -  -  	.db 235
  971 D1:C7E5 ED -  -  -  	.db 237
  972 D1:C7E6 EF -  -  -  	.db 239
  973 D1:C7E7 F0 -  -  -  	.db 240
  974 D1:C7E8 F2 -  -  -  	.db 242
  975 D1:C7E9 F3 -  -  -  	.db 243
  976 D1:C7EA F4 -  -  -  	.db 244
  977 D1:C7EB F6 -  -  -  	.db 246
  978 D1:C7EC F7 -  -  -  	.db 247
  979 D1:C7ED F8 -  -  -  	.db 248
  980 D1:C7EE F9 -  -  -  	.db 249
  981 D1:C7EF FA -  -  -  	.db 250
  982 D1:C7F0 FB -  -  -  	.db 251
  983 D1:C7F1 FB -  -  -  	.db 251
  984 D1:C7F2 FC -  -  -  	.db 252
  985 D1:C7F3 FD -  -  -  	.db 253
  986 D1:C7F4 FD -  -  -  	.db 253
  987 D1:C7F5 FE -  -  -  	.db 254
  988 D1:C7F6 FE -  -  -  	.db 254
  989 D1:C7F7 FE -  -  -  	.db 254
  990 D1:C7F8 FF -  -  -  	.db 255
  991 D1:C7F9 FF -  -  -  	.db 255
  992 D1:C7FA FF -  -  -  	.db 255
  993 D1:C7FB FF -  -  -  	.db 255
  994 D1:C7FC FF -  -  -  	.db 255
  995 D1:C7FD FF -  -  -  	.db 255
  996 D1:C7FE FF -  -  -  	.db 255
  997 D1:C7FF FE -  -  -  	.db 254
  998 D1:C800 FE -  -  -  	.db 254
  999 D1:C801 FD -  -  -  	.db 253
 1000 D1:C802 FD -  -  -  	.db 253
 1001 D1:C803 FC -  -  -  	.db 252
 1002 D1:C804 FC -  -  -  	.db 252
 1003 D1:C805 FB -  -  -  	.db 251
 1004 D1:C806 FA -  -  -  	.db 250
 1005 D1:C807 F9 -  -  -  	.db 249
 1006 D1:C808 F8 -  -  -  	.db 248
 1007 D1:C809 F7 -  -  -  	.db 247
 1008 D1:C80A F6 -  -  -  	.db 246
 1009 D1:C80B F5 -  -  -  	.db 245
 1010 D1:C80C F4 -  -  -  	.db 244
 1011 D1:C80D F2 -  -  -  	.db 242
 1012 D1:C80E F1 -  -  -  	.db 241
 1013 D1:C80F EF -  -  -  	.db 239
 1014 D1:C810 EE -  -  -  	.db 238
 1015 D1:C811 EC -  -  -  	.db 236
 1016 D1:C812 EB -  -  -  	.db 235
 1017 D1:C813 E9 -  -  -  	.db 233
 1018 D1:C814 E7 -  -  -  	.db 231
 1019 D1:C815 E5 -  -  -  	.db 229
 1020 D1:C816 E3 -  -  -  	.db 227
 1021 D1:C817 E1 -  -  -  	.db 225
 1022 D1:C818 DF -  -  -  	.db 223
 1023 D1:C819 DD -  -  -  	.db 221
 1024 D1:C81A DB -  -  -  	.db 219
 1025 D1:C81B D9 -  -  -  	.db 217
 1026 D1:C81C D7 -  -  -  	.db 215
 1027 D1:C81D D4 -  -  -  	.db 212
 1028 D1:C81E D2 -  -  -  	.db 210
 1029 D1:C81F CF -  -  -  	.db 207
 1030 D1:C820 CD -  -  -  	.db 205
 1031 D1:C821 CA -  -  -  	.db 202
 1032 D1:C822 C8 -  -  -  	.db 200
 1033 D1:C823 C5 -  -  -  	.db 197
 1034 D1:C824 C3 -  -  -  	.db 195
 1035 D1:C825 C0 -  -  -  	.db 192
 1036 D1:C826 BD -  -  -  	.db 189
 1037 D1:C827 BA -  -  -  	.db 186
 1038 D1:C828 B8 -  -  -  	.db 184
 1039 D1:C829 B5 -  -  -  	.db 181
 1040 D1:C82A B2 -  -  -  	.db 178
 1041 D1:C82B AF -  -  -  	.db 175
 1042 D1:C82C AC -  -  -  	.db 172
 1043 D1:C82D A9 -  -  -  	.db 169
 1044 D1:C82E A6 -  -  -  	.db 166
 1045 D1:C82F A3 -  -  -  	.db 163
 1046 D1:C830 A0 -  -  -  	.db 160
 1047 D1:C831 9D -  -  -  	.db 157
 1048 D1:C832 9A -  -  -  	.db 154
 1049 D1:C833 97 -  -  -  	.db 151
 1050 D1:C834 94 -  -  -  	.db 148
 1051 D1:C835 91 -  -  -  	.db 145
 1052 D1:C836 8E -  -  -  	.db 142
 1053 D1:C837 8A -  -  -  	.db 138
 1054 D1:C838 87 -  -  -  	.db 135
 1055 D1:C839 84 -  -  -  	.db 132
 1056 D1:C83A 81 -  -  -  	.db 129
 1057 D1:C83B 7E -  -  -  	.db 126
 1058 D1:C83C 7B -  -  -  	.db 123
 1059 D1:C83D 78 -  -  -  	.db 120
 1060 D1:C83E 75 -  -  -  	.db 117
 1061 D1:C83F 71 -  -  -  	.db 113
 1062 D1:C840 6E -  -  -  	.db 110
 1063 D1:C841 6B -  -  -  	.db 107
 1064 D1:C842 68 -  -  -  	.db 104
 1065 D1:C843 65 -  -  -  	.db 101
 1066 D1:C844 62 -  -  -  	.db 98
 1067 D1:C845 5F -  -  -  	.db 95
 1068 D1:C846 5C -  -  -  	.db 92
 1069 D1:C847 59 -  -  -  	.db 89
 1070 D1:C848 56 -  -  -  	.db 86
 1071 D1:C849 53 -  -  -  	.db 83
 1072 D1:C84A 50 -  -  -  	.db 80
 1073 D1:C84B 4D -  -  -  	.db 77
 1074 D1:C84C 4A -  -  -  	.db 74
 1075 D1:C84D 47 -  -  -  	.db 71
 1076 D1:C84E 45 -  -  -  	.db 69
 1077 D1:C84F 42 -  -  -  	.db 66
 1078 D1:C850 3F -  -  -  	.db 63
 1079 D1:C851 3C -  -  -  	.db 60
 1080 D1:C852 3A -  -  -  	.db 58
 1081 D1:C853 37 -  -  -  	.db 55
 1082 D1:C854 35 -  -  -  	.db 53
 1083 D1:C855 32 -  -  -  	.db 50
 1084 D1:C856 30 -  -  -  	.db 48
 1085 D1:C857 2D -  -  -  	.db 45
 1086 D1:C858 2B -  -  -  	.db 43
 1087 D1:C859 28 -  -  -  	.db 40
 1088 D1:C85A 26 -  -  -  	.db 38
 1089 D1:C85B 24 -  -  -  	.db 36
 1090 D1:C85C 22 -  -  -  	.db 34
 1091 D1:C85D 20 -  -  -  	.db 32
 1092 D1:C85E 1E -  -  -  	.db 30
 1093 D1:C85F 1C -  -  -  	.db 28
 1094 D1:C860 1A -  -  -  	.db 26
 1095 D1:C861 18 -  -  -  	.db 24
 1096 D1:C862 16 -  -  -  	.db 22
 1097 D1:C863 14 -  -  -  	.db 20
 1098 D1:C864 13 -  -  -  	.db 19
 1099 D1:C865 11 -  -  -  	.db 17
 1100 D1:C866 10 -  -  -  	.db 16
 1101 D1:C867 0E -  -  -  	.db 14
 1102 D1:C868 0D -  -  -  	.db 13
 1103 D1:C869 0B -  -  -  	.db 11
 1104 D1:C86A 0A -  -  -  	.db 10
 1105 D1:C86B 09 -  -  -  	.db 9
 1106 D1:C86C 08 -  -  -  	.db 8
 1107 D1:C86D 07 -  -  -  	.db 7
 1108 D1:C86E 06 -  -  -  	.db 6
 1109 D1:C86F 05 -  -  -  	.db 5
 1110 D1:C870 04 -  -  -  	.db 4
 1111 D1:C871 03 -  -  -  	.db 3
 1112 D1:C872 03 -  -  -  	.db 3
 1113 D1:C873 02 -  -  -  	.db 2
 1114 D1:C874 02 -  -  -  	.db 2
 1115 D1:C875 01 -  -  -  	.db 1
 1116 D1:C876 01 -  -  -  	.db 1
 1117 D1:C877 00 -  -  -  	.db 0
 1118 D1:C878 00 -  -  -  	.db 0
 1119 D1:C879 00 -  -  -  	.db 0
 1120 D1:C87A 00 -  -  -  	.db 0
 1121 D1:C87B 00 -  -  -  	.db 0
 1122 D1:C87C 00 -  -  -  	.db 0
 1123 D1:C87D 00 -  -  -  	.db 0
 1124 D1:C87E 01 -  -  -  	.db 1
 1125 D1:C87F 01 -  -  -  	.db 1
 1126 D1:C880 01 -  -  -  	.db 1
 1127 D1:C881 02 -  -  -  	.db 2
 1128 D1:C882 02 -  -  -  	.db 2
 1129 D1:C883 03 -  -  -  	.db 3
 1130 D1:C884 04 -  -  -  	.db 4
 1131 D1:C885 04 -  -  -  	.db 4
 1132 D1:C886 05 -  -  -  	.db 5
 1133 D1:C887 06 -  -  -  	.db 6
 1134 D1:C888 07 -  -  -  	.db 7
 1135 D1:C889 08 -  -  -  	.db 8
 1136 D1:C88A 09 -  -  -  	.db 9
 1137 D1:C88B 0B -  -  -  	.db 11
 1138 D1:C88C 0C -  -  -  	.db 12
 1139 D1:C88D 0D -  -  -  	.db 13
 1140 D1:C88E 0F -  -  -  	.db 15
 1141 D1:C88F 10 -  -  -  	.db 16
 1142 D1:C890 12 -  -  -  	.db 18
 1143 D1:C891 14 -  -  -  	.db 20
 1144 D1:C892 15 -  -  -  	.db 21
 1145 D1:C893 17 -  -  -  	.db 23
 1146 D1:C894 19 -  -  -  	.db 25
 1147 D1:C895 1B -  -  -  	.db 27
 1148 D1:C896 1D -  -  -  	.db 29
 1149 D1:C897 1F -  -  -  	.db 31
 1150 D1:C898 21 -  -  -  	.db 33
 1151 D1:C899 23 -  -  -  	.db 35
 1152 D1:C89A 25 -  -  -  	.db 37
 1153 D1:C89B 27 -  -  -  	.db 39
 1154 D1:C89C 2A -  -  -  	.db 42
 1155 D1:C89D 2C -  -  -  	.db 44
 1156 D1:C89E 2E -  -  -  	.db 46
 1157 D1:C89F 31 -  -  -  	.db 49
 1158 D1:C8A0 33 -  -  -  	.db 51
 1159 D1:C8A1 36 -  -  -  	.db 54
 1160 D1:C8A2 38 -  -  -  	.db 56
 1161 D1:C8A3 3B -  -  -  	.db 59
 1162 D1:C8A4 3E -  -  -  	.db 62
 1163 D1:C8A5 40 -  -  -  	.db 64
 1164 D1:C8A6 43 -  -  -  	.db 67
 1165 D1:C8A7 46 -  -  -  	.db 70
 1166 D1:C8A8 49 -  -  -  	.db 73
 1167 D1:C8A9 4C -  -  -  	.db 76
 1168 D1:C8AA 4F -  -  -  	.db 79
 1169 D1:C8AB 51 -  -  -  	.db 81
 1170 D1:C8AC 54 -  -  -  	.db 84
 1171 D1:C8AD 57 -  -  -  	.db 87
 1172 D1:C8AE 5A -  -  -  	.db 90
 1173 D1:C8AF 5D -  -  -  	.db 93
 1174 D1:C8B0 60 -  -  -  	.db 96
 1175 D1:C8B1 63 -  -  -  	.db 99
 1176 D1:C8B2 67 -  -  -  	.db 103
 1177 D1:C8B3 6A -  -  -  	.db 106
 1178 D1:C8B4 6D -  -  -  	.db 109
 1179 D1:C8B5 70 -  -  -  	.db 112
 1180 D1:C8B6 73 -  -  -  	.db 115
 1181 D1:C8B7 76 -  -  -  	.db 118
 1182 D1:C8B8 79 -  -  -  	.db 121
 1183 D1:C8B9 7C -  -  -  	.db 124
 1184 D1:C8BA 7F -  -  -  	.db 127
 1185 D1:C8BB -  -  -  -  	
Listing for file "ascent.asm"
  603 D1:C8BB -  -  -  -  #include "animations.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\animations.txt"
    1 D1:C8BB -  -  -  -   
    2 D1:C8BB -  -  -  -  update_animations:
    3 D1:C8BB -  -  -  -  	;Will update all animations every frame. Not significant performance impact
    4 D1:C8BB -  -  -  -  	
    5 D1:C8BB -  -  -  -  	;POSITION
    6 D1:C8BB -  -  -  -  	;load hl with data pointer (dataframe or sprite group)
    7 D1:C8BB -  -  -  -  	;ld bc with number of bytes to target property
    8 D1:C8BB -  -  -  -  	;add hl bc 
    9 D1:C8BB -  -  -  -  
   10 D1:C8BB -  -  -  -  	;ld a with desired sine freq,phase,and amplitude 
   11 D1:C8BB -  -  -  -  	;add a,xx ;Base value
   12 D1:C8BB -  -  -  -  	;ld (hl),a
   13 D1:C8BB -  -  -  -  
   14 D1:C8BB -  -  -  -  	;7 bytes per animated value
   15 D1:C8BB 08 -  -  -  	ex af, af' ;'
   16 D1:C8BC 21 61 F8 D1 	ld hl,position_animation_data
   17 D1:C8C0 7E -  -  -  	ld a,(hl)
   18 D1:C8C1 23 -  -  -  	inc hl
   19 D1:C8C2 -  -  -  -  update_animation_position_loop:
   20 D1:C8C2 08 -  -  -  	ex af, af' ;'
   21 D1:C8C3 ED 17 -  -  	ld de,(hl);load address of property
   22 D1:C8C5 23 -  -  -  	inc hl
   23 D1:C8C6 23 -  -  -  	inc hl 
   24 D1:C8C7 23 -  -  -  	inc hl 
   25 D1:C8C8 ED 07 -  -  	ld bc,(hl) ;address of anim curve 
   26 D1:C8CA 23 -  -  -  	inc hl 
   27 D1:C8CB 23 -  -  -  	inc hl 
   28 D1:C8CC 23 -  -  -  	inc hl
   29 D1:C8CD 0A -  -  -  	ld a,(bc) ;value of anim curve
   30 D1:C8CE 4E -  -  -  	ld c, (hl) ;base value
   31 D1:C8CF 23 -  -  -  	inc hl
   32 D1:C8D0 81 -  -  -  	add a,c
   33 D1:C8D1 12 -  -  -  	ld (de),a 
   34 D1:C8D2 08 -  -  -  	ex af, af' ;'
   35 D1:C8D3 3D -  -  -  	dec a 
   36 D1:C8D4 C2 C2 C8 D1 	jp nz,update_animation_position_loop
   37 D1:C8D8 -  -  -  -  	
   38 D1:C8D8 -  -  -  -  	
   39 D1:C8D8 -  -  -  -  	
   40 D1:C8D8 11 00 00 00 	ld de,0 ;clear upper byte 
   41 D1:C8DC 08 -  -  -  	ex af, af' ;' ;in
   42 D1:C8DD 21 81 F9 D1 	ld hl,sprite_animation_data
   43 D1:C8E1 7E -  -  -  	ld a,(hl)
   44 D1:C8E2 23 -  -  -  	inc hl
   45 D1:C8E3 -  -  -  -  update_animation_sprite_loop:
   46 D1:C8E3 08 -  -  -  	ex af, af' ;' ;out
   47 D1:C8E4 ED 07 -  -  	ld bc,(hl) ;animation curve address
   48 D1:C8E6 23 -  -  -  	inc hl 
   49 D1:C8E7 23 -  -  -  	inc hl
   50 D1:C8E8 23 -  -  -  	inc hl
   51 D1:C8E9 0A -  -  -  	ld a,(bc) ;anim curve value (btwn 0 and 7)
   52 D1:C8EA 5F -  -  -  	ld e,a 
   53 D1:C8EB 19 -  -  -  	add hl,de ;jump to correct place
   54 D1:C8EC ED 44 -  -  	neg ;a holds -curve value
   55 D1:C8EE C6 08 -  -  	add a,8; a holds amt to jump to get past sprite table
   56 D1:C8F0 5F -  -  -  	ld e,a 
   57 D1:C8F1 7E -  -  -  	ld a,(hl);correct sprite index 
   58 D1:C8F2 19 -  -  -  	add hl,de ;to address of target property
   59 D1:C8F3 ED 07 -  -  	ld bc,(hl)
   60 D1:C8F5 02 -  -  -  	ld (bc),a 
   61 D1:C8F6 23 -  -  -  	inc hl 
   62 D1:C8F7 23 -  -  -  	inc hl 
   63 D1:C8F8 23 -  -  -  	inc hl
   64 D1:C8F9 08 -  -  -  	ex af, af' ;' ;in
   65 D1:C8FA 3D -  -  -  	dec a 
   66 D1:C8FB C2 E3 C8 D1 	jp nz,update_animation_sprite_loop
   67 D1:C8FF -  -  -  -  	
   68 D1:C8FF -  -  -  -  	
   69 D1:C8FF -  -  -  -  	;call write_a_to_ram
   70 D1:C8FF C9 -  -  -  	ret 
   71 D1:C900 -  -  -  -  	
   72 D1:C900 -  -  -  -  	
   73 D1:C900 -  -  -  -  	
   74 D1:C900 -  -  -  -  	
   75 D1:C900 -  -  -  -  	;SPRITE
   76 D1:C900 -  -  -  -  	;ld hl with base data ptr
   77 D1:C900 -  -  -  -  	;ld bc with number of bytes to target property
   78 D1:C900 -  -  -  -  	
   79 D1:C900 -  -  -  -  
   80 D1:C900 -  -  -  -  ;position_animation_data: ;7 bytes per animation
   81 D1:C900 -  -  -  -  	;.db number of animations
   82 D1:C900 -  -  -  -  	;.dl address of target property
   83 D1:C900 -  -  -  -  	;.dl address of desired animation curve value (could use lookup table to reduce memory)
   84 D1:C900 -  -  -  -  	;.db base value 
   85 D1:C900 -  -  -  -  	;...
   86 D1:C900 -  -  -  -  	;.dl MG_Data_0 + 18 
   87 D1:C900 -  -  -  -  	;.dl lin_05_3_2
   88 D1:C900 -  -  -  -  	;.db 168
   89 D1:C900 -  -  -  -  	
   90 D1:C900 -  -  -  -  	
   91 D1:C900 -  -  -  -  
   92 D1:C900 -  -  -  -  ;sprite_animation_data: ;14 bytes per animation
   93 D1:C900 -  -  -  -  	;.db number of animations
   94 D1:C900 -  -  -  -  	;.dl address of desired animation curve value (could use lookup table to reduce memory)
   95 D1:C900 -  -  -  -  	;.db sprite frame 0 
   96 D1:C900 -  -  -  -  	;.db sprite frame 1
   97 D1:C900 -  -  -  -  	;.db sprite frame 2
   98 D1:C900 -  -  -  -  	;.db sprite frame 3
   99 D1:C900 -  -  -  -  	;.db sprite frame 4
  100 D1:C900 -  -  -  -  	;.db sprite frame 5
  101 D1:C900 -  -  -  -  	;.db sprite frame 6
  102 D1:C900 -  -  -  -  	;.db sprite frame 7
  103 D1:C900 -  -  -  -  	;.dl address of target property
  104 D1:C900 -  -  -  -  	;.dl sine_2_7_1
  105 D1:C900 -  -  -  -  	;.db 70
  106 D1:C900 -  -  -  -  	;.db 71
  107 D1:C900 -  -  -  -  	;.db 72
  108 D1:C900 -  -  -  -  	;.db 73
  109 D1:C900 -  -  -  -  	;.db 74
  110 D1:C900 -  -  -  -  	;.db 71
  111 D1:C900 -  -  -  -  	;.db 70
  112 D1:C900 -  -  -  -  	;.db 71
  113 D1:C900 -  -  -  -  	;.dl SG_TreeRow3 + 5
  114 D1:C900 -  -  -  -  	
  115 D1:C900 -  -  -  -  	
  116 D1:C900 -  -  -  -  	
  117 D1:C900 -  -  -  -  	
  118 D1:C900 -  -  -  -   
  119 D1:C900 -  -  -  -   
  120 D1:C900 -  -  -  -   
Listing for file "ascent.asm"
  604 D1:C900 -  -  -  -  ;#include "levelData.txt"
  605 D1:C900 -  -  -  -  ;#include "FGLevelData.txt"
  606 D1:C900 -  -  -  -  ;#include "testing/TestingCollisionData.txt"
  607 D1:C900 -  -  -  -  
  608 D1:C900 -  -  -  -  #include "generated/BG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\BG_Data.txt"
    1 D1:C900 -  -  -  -  BG_Data_frame_table:
    2 D1:C900 A0 C9 D1 -  	.dl BG_Data_0
    3 D1:C903 92 C9 D1 -  	.dl BG_Data_1
    4 D1:C906 90 C9 D1 -  	.dl BG_Data_2
    5 D1:C909 8E C9 D1 -  	.dl BG_Data_3
    6 D1:C90C 8C C9 D1 -  	.dl BG_Data_4
    7 D1:C90F 8A C9 D1 -  	.dl BG_Data_5
    8 D1:C912 88 C9 D1 -  	.dl BG_Data_6
    9 D1:C915 86 C9 D1 -  	.dl BG_Data_7
   10 D1:C918 84 C9 D1 -  	.dl BG_Data_8
   11 D1:C91B 82 C9 D1 -  	.dl BG_Data_9
   12 D1:C91E 80 C9 D1 -  	.dl BG_Data_10
   13 D1:C921 7E C9 D1 -  	.dl BG_Data_11
   14 D1:C924 7C C9 D1 -  	.dl BG_Data_12
   15 D1:C927 7A C9 D1 -  	.dl BG_Data_13
   16 D1:C92A 78 C9 D1 -  	.dl BG_Data_14
   17 D1:C92D 76 C9 D1 -  	.dl BG_Data_15
   18 D1:C930 74 C9 D1 -  	.dl BG_Data_16
   19 D1:C933 72 C9 D1 -  	.dl BG_Data_17
   20 D1:C936 70 C9 D1 -  	.dl BG_Data_18
   21 D1:C939 6E C9 D1 -  	.dl BG_Data_19
   22 D1:C93C 6C C9 D1 -  	.dl BG_Data_20
   23 D1:C93F 6A C9 D1 -  	.dl BG_Data_21
   24 D1:C942 68 C9 D1 -  	.dl BG_Data_22
   25 D1:C945 66 C9 D1 -  	.dl BG_Data_23
   26 D1:C948 64 C9 D1 -  	.dl BG_Data_24
   27 D1:C94B 62 C9 D1 -  	.dl BG_Data_25
   28 D1:C94E 60 C9 D1 -  	.dl BG_Data_26
   29 D1:C951 5E C9 D1 -  	.dl BG_Data_27
   30 D1:C954 5C C9 D1 -  	.dl BG_Data_28
   31 D1:C957 5A C9 D1 -  	.dl BG_Data_29
   32 D1:C95A -  -  -  -  
   33 D1:C95A -  -  -  -  
   34 D1:C95A -  -  -  -  
   35 D1:C95A -  -  -  -  BG_Data_29:
   36 D1:C95A 00 -  -  -  	.db 0
   37 D1:C95B 00 -  -  -  	.db 0
   38 D1:C95C -  -  -  -  
   39 D1:C95C -  -  -  -  BG_Data_28:
   40 D1:C95C 00 -  -  -  	.db 0
   41 D1:C95D 00 -  -  -  	.db 0
   42 D1:C95E -  -  -  -  
   43 D1:C95E -  -  -  -  BG_Data_27:
   44 D1:C95E 00 -  -  -  	.db 0
   45 D1:C95F 00 -  -  -  	.db 0
   46 D1:C960 -  -  -  -  
   47 D1:C960 -  -  -  -  BG_Data_26:
   48 D1:C960 00 -  -  -  	.db 0
   49 D1:C961 00 -  -  -  	.db 0
   50 D1:C962 -  -  -  -  
   51 D1:C962 -  -  -  -  BG_Data_25:
   52 D1:C962 00 -  -  -  	.db 0
   53 D1:C963 00 -  -  -  	.db 0
   54 D1:C964 -  -  -  -  
   55 D1:C964 -  -  -  -  BG_Data_24:
   56 D1:C964 00 -  -  -  	.db 0
   57 D1:C965 00 -  -  -  	.db 0
   58 D1:C966 -  -  -  -  
   59 D1:C966 -  -  -  -  BG_Data_23:
   60 D1:C966 00 -  -  -  	.db 0
   61 D1:C967 00 -  -  -  	.db 0
   62 D1:C968 -  -  -  -  
   63 D1:C968 -  -  -  -  BG_Data_22:
   64 D1:C968 00 -  -  -  	.db 0
   65 D1:C969 00 -  -  -  	.db 0
   66 D1:C96A -  -  -  -  
   67 D1:C96A -  -  -  -  BG_Data_21:
   68 D1:C96A 00 -  -  -  	.db 0
   69 D1:C96B 00 -  -  -  	.db 0
   70 D1:C96C -  -  -  -  
   71 D1:C96C -  -  -  -  BG_Data_20:
   72 D1:C96C 00 -  -  -  	.db 0
   73 D1:C96D 00 -  -  -  	.db 0
   74 D1:C96E -  -  -  -  
   75 D1:C96E -  -  -  -  BG_Data_19:
   76 D1:C96E 00 -  -  -  	.db 0
   77 D1:C96F 00 -  -  -  	.db 0
   78 D1:C970 -  -  -  -  
   79 D1:C970 -  -  -  -  BG_Data_18:
   80 D1:C970 00 -  -  -  	.db 0
   81 D1:C971 00 -  -  -  	.db 0
   82 D1:C972 -  -  -  -  
   83 D1:C972 -  -  -  -  BG_Data_17:
   84 D1:C972 00 -  -  -  	.db 0
   85 D1:C973 00 -  -  -  	.db 0
   86 D1:C974 -  -  -  -  
   87 D1:C974 -  -  -  -  BG_Data_16:
   88 D1:C974 00 -  -  -  	.db 0
   89 D1:C975 00 -  -  -  	.db 0
   90 D1:C976 -  -  -  -  
   91 D1:C976 -  -  -  -  BG_Data_15:
   92 D1:C976 00 -  -  -  	.db 0
   93 D1:C977 00 -  -  -  	.db 0
   94 D1:C978 -  -  -  -  
   95 D1:C978 -  -  -  -  BG_Data_14:
   96 D1:C978 00 -  -  -  	.db 0
   97 D1:C979 00 -  -  -  	.db 0
   98 D1:C97A -  -  -  -  
   99 D1:C97A -  -  -  -  BG_Data_13:
  100 D1:C97A 00 -  -  -  	.db 0
  101 D1:C97B 00 -  -  -  	.db 0
  102 D1:C97C -  -  -  -  
  103 D1:C97C -  -  -  -  BG_Data_12:
  104 D1:C97C 00 -  -  -  	.db 0
  105 D1:C97D 00 -  -  -  	.db 0
  106 D1:C97E -  -  -  -  
  107 D1:C97E -  -  -  -  BG_Data_11:
  108 D1:C97E 00 -  -  -  	.db 0
  109 D1:C97F 00 -  -  -  	.db 0
  110 D1:C980 -  -  -  -  
  111 D1:C980 -  -  -  -  BG_Data_10:
  112 D1:C980 00 -  -  -  	.db 0
  113 D1:C981 00 -  -  -  	.db 0
  114 D1:C982 -  -  -  -  
  115 D1:C982 -  -  -  -  BG_Data_9:
  116 D1:C982 00 -  -  -  	.db 0
  117 D1:C983 00 -  -  -  	.db 0
  118 D1:C984 -  -  -  -  
  119 D1:C984 -  -  -  -  BG_Data_8:
  120 D1:C984 00 -  -  -  	.db 0
  121 D1:C985 00 -  -  -  	.db 0
  122 D1:C986 -  -  -  -  
  123 D1:C986 -  -  -  -  BG_Data_7:
  124 D1:C986 00 -  -  -  	.db 0
  125 D1:C987 00 -  -  -  	.db 0
  126 D1:C988 -  -  -  -  
  127 D1:C988 -  -  -  -  BG_Data_6:
  128 D1:C988 00 -  -  -  	.db 0
  129 D1:C989 00 -  -  -  	.db 0
  130 D1:C98A -  -  -  -  
  131 D1:C98A -  -  -  -  BG_Data_5:
  132 D1:C98A 00 -  -  -  	.db 0
  133 D1:C98B 00 -  -  -  	.db 0
  134 D1:C98C -  -  -  -  
  135 D1:C98C -  -  -  -  BG_Data_4:
  136 D1:C98C 00 -  -  -  	.db 0
  137 D1:C98D 00 -  -  -  	.db 0
  138 D1:C98E -  -  -  -  
  139 D1:C98E -  -  -  -  BG_Data_3:
  140 D1:C98E 00 -  -  -  	.db 0
  141 D1:C98F 00 -  -  -  	.db 0
  142 D1:C990 -  -  -  -  
  143 D1:C990 -  -  -  -  BG_Data_2:
  144 D1:C990 00 -  -  -  	.db 0
  145 D1:C991 00 -  -  -  	.db 0
  146 D1:C992 -  -  -  -  
  147 D1:C992 -  -  -  -  BG_Data_1:
  148 D1:C992 00 -  -  -  	.db 0
  149 D1:C993 03 -  -  -  	.db 3
  150 D1:C994 22 FF 7D 1F 	.db 34, 255, 125, 31  ;SG_Cloud1
  151 D1:C998 70 FF 76 1F 	.db 112, 255, 118, 31  ;SG_Cloud1
  152 D1:C99C A3 FF 15 1F 	.db 163, 255, 21, 31  ;SG_Cloud1
  153 D1:C9A0 -  -  -  -  
  154 D1:C9A0 -  -  -  -  BG_Data_0:
  155 D1:C9A0 00 -  -  -  	.db 0
  156 D1:C9A1 17 -  -  -  	.db 23
  157 D1:C9A2 55 FF 00 1C 	.db 85, 255, 0, 28  ;SG_DarkGroundChunk
  158 D1:C9A6 4F FF 88 1C 	.db 79, 255, 136, 28  ;SG_DarkGroundChunk
  159 D1:C9AA 55 FF 18 1C 	.db 85, 255, 24, 28  ;SG_DarkGroundChunk
  160 D1:C9AE 50 FF 70 1C 	.db 80, 255, 112, 28  ;SG_DarkGroundChunk
  161 D1:C9B2 81 FF 6F 1E 	.db 129, 255, 111, 30  ;SG_BGTree2
  162 D1:C9B6 81 FF 8E 1E 	.db 129, 255, 142, 30  ;SG_BGTree2
  163 D1:C9BA 88 FF 16 1E 	.db 136, 255, 22, 30  ;SG_BGTree2
  164 D1:C9BE 8D FF 0B 1E 	.db 141, 255, 11, 30  ;SG_BGTree2
  165 D1:C9C2 7C FF 86 1D 	.db 124, 255, 134, 29  ;SG_BGTree1
  166 D1:C9C6 80 FF 80 1D 	.db 128, 255, 128, 29  ;SG_BGTree1
  167 D1:C9CA 7F FF 77 1D 	.db 127, 255, 119, 29  ;SG_BGTree1
  168 D1:C9CE 81 FF 1F 1D 	.db 129, 255, 31, 29  ;SG_BGTree1
  169 D1:C9D2 26 FF 70 07 	.db 38, 255, 112, 7  ;SG_GroundChunk2
  170 D1:C9D6 84 FF 7F 1E 	.db 132, 255, 127, 30  ;SG_BGTree2
  171 D1:C9DA 26 FF 88 08 	.db 38, 255, 136, 8  ;SG_GroundChunk1
  172 D1:C9DE 2A FF 00 07 	.db 42, 255, 0, 7  ;SG_GroundChunk2
  173 D1:C9E2 2D FF 18 08 	.db 45, 255, 24, 8  ;SG_GroundChunk1
  174 D1:C9E6 41 FF 18 07 	.db 65, 255, 24, 7  ;SG_GroundChunk2
  175 D1:C9EA 3C FF 88 07 	.db 60, 255, 136, 7  ;SG_GroundChunk2
  176 D1:C9EE 3D FF 70 08 	.db 61, 255, 112, 8  ;SG_GroundChunk1
  177 D1:C9F2 43 FF 00 08 	.db 67, 255, 0, 8  ;SG_GroundChunk1
  178 D1:C9F6 84 FF 00 1D 	.db 132, 255, 0, 29  ;SG_BGTree1
  179 D1:C9FA F2 FF 02 1F 	.db 242, 255, 2, 31  ;SG_Cloud1
  180 D1:C9FE -  -  -  -  
  181 D1:C9FE -  -  -  -  
  182 D1:C9FE -  -  -  -  
Listing for file "ascent.asm"
  609 D1:C9FE -  -  -  -  #include "generated/MG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\MG_Data.txt"
    1 D1:C9FE -  -  -  -  MG_Data_frame_table:
    2 D1:C9FE 0A CC D1 -  	.dl MG_Data_0
    3 D1:CA01 B4 CB D1 -  	.dl MG_Data_1
    4 D1:CA04 6A CB D1 -  	.dl MG_Data_2
    5 D1:CA07 1C CB D1 -  	.dl MG_Data_3
    6 D1:CA0A CA CA D1 -  	.dl MG_Data_4
    7 D1:CA0D 88 CA D1 -  	.dl MG_Data_5
    8 D1:CA10 86 CA D1 -  	.dl MG_Data_6
    9 D1:CA13 84 CA D1 -  	.dl MG_Data_7
   10 D1:CA16 82 CA D1 -  	.dl MG_Data_8
   11 D1:CA19 80 CA D1 -  	.dl MG_Data_9
   12 D1:CA1C 7E CA D1 -  	.dl MG_Data_10
   13 D1:CA1F 7C CA D1 -  	.dl MG_Data_11
   14 D1:CA22 7A CA D1 -  	.dl MG_Data_12
   15 D1:CA25 78 CA D1 -  	.dl MG_Data_13
   16 D1:CA28 76 CA D1 -  	.dl MG_Data_14
   17 D1:CA2B 74 CA D1 -  	.dl MG_Data_15
   18 D1:CA2E 72 CA D1 -  	.dl MG_Data_16
   19 D1:CA31 70 CA D1 -  	.dl MG_Data_17
   20 D1:CA34 6E CA D1 -  	.dl MG_Data_18
   21 D1:CA37 6C CA D1 -  	.dl MG_Data_19
   22 D1:CA3A 6A CA D1 -  	.dl MG_Data_20
   23 D1:CA3D 68 CA D1 -  	.dl MG_Data_21
   24 D1:CA40 66 CA D1 -  	.dl MG_Data_22
   25 D1:CA43 64 CA D1 -  	.dl MG_Data_23
   26 D1:CA46 62 CA D1 -  	.dl MG_Data_24
   27 D1:CA49 60 CA D1 -  	.dl MG_Data_25
   28 D1:CA4C 5E CA D1 -  	.dl MG_Data_26
   29 D1:CA4F 5C CA D1 -  	.dl MG_Data_27
   30 D1:CA52 5A CA D1 -  	.dl MG_Data_28
   31 D1:CA55 58 CA D1 -  	.dl MG_Data_29
   32 D1:CA58 -  -  -  -  
   33 D1:CA58 -  -  -  -  
   34 D1:CA58 -  -  -  -  
   35 D1:CA58 -  -  -  -  MG_Data_29:
   36 D1:CA58 00 -  -  -  	.db 0
   37 D1:CA59 00 -  -  -  	.db 0
   38 D1:CA5A -  -  -  -  
   39 D1:CA5A -  -  -  -  MG_Data_28:
   40 D1:CA5A 00 -  -  -  	.db 0
   41 D1:CA5B 00 -  -  -  	.db 0
   42 D1:CA5C -  -  -  -  
   43 D1:CA5C -  -  -  -  MG_Data_27:
   44 D1:CA5C 00 -  -  -  	.db 0
   45 D1:CA5D 00 -  -  -  	.db 0
   46 D1:CA5E -  -  -  -  
   47 D1:CA5E -  -  -  -  MG_Data_26:
   48 D1:CA5E 00 -  -  -  	.db 0
   49 D1:CA5F 00 -  -  -  	.db 0
   50 D1:CA60 -  -  -  -  
   51 D1:CA60 -  -  -  -  MG_Data_25:
   52 D1:CA60 00 -  -  -  	.db 0
   53 D1:CA61 00 -  -  -  	.db 0
   54 D1:CA62 -  -  -  -  
   55 D1:CA62 -  -  -  -  MG_Data_24:
   56 D1:CA62 00 -  -  -  	.db 0
   57 D1:CA63 00 -  -  -  	.db 0
   58 D1:CA64 -  -  -  -  
   59 D1:CA64 -  -  -  -  MG_Data_23:
   60 D1:CA64 00 -  -  -  	.db 0
   61 D1:CA65 00 -  -  -  	.db 0
   62 D1:CA66 -  -  -  -  
   63 D1:CA66 -  -  -  -  MG_Data_22:
   64 D1:CA66 00 -  -  -  	.db 0
   65 D1:CA67 00 -  -  -  	.db 0
   66 D1:CA68 -  -  -  -  
   67 D1:CA68 -  -  -  -  MG_Data_21:
   68 D1:CA68 00 -  -  -  	.db 0
   69 D1:CA69 00 -  -  -  	.db 0
   70 D1:CA6A -  -  -  -  
   71 D1:CA6A -  -  -  -  MG_Data_20:
   72 D1:CA6A 00 -  -  -  	.db 0
   73 D1:CA6B 00 -  -  -  	.db 0
   74 D1:CA6C -  -  -  -  
   75 D1:CA6C -  -  -  -  MG_Data_19:
   76 D1:CA6C 00 -  -  -  	.db 0
   77 D1:CA6D 00 -  -  -  	.db 0
   78 D1:CA6E -  -  -  -  
   79 D1:CA6E -  -  -  -  MG_Data_18:
   80 D1:CA6E 00 -  -  -  	.db 0
   81 D1:CA6F 00 -  -  -  	.db 0
   82 D1:CA70 -  -  -  -  
   83 D1:CA70 -  -  -  -  MG_Data_17:
   84 D1:CA70 00 -  -  -  	.db 0
   85 D1:CA71 00 -  -  -  	.db 0
   86 D1:CA72 -  -  -  -  
   87 D1:CA72 -  -  -  -  MG_Data_16:
   88 D1:CA72 00 -  -  -  	.db 0
   89 D1:CA73 00 -  -  -  	.db 0
   90 D1:CA74 -  -  -  -  
   91 D1:CA74 -  -  -  -  MG_Data_15:
   92 D1:CA74 00 -  -  -  	.db 0
   93 D1:CA75 00 -  -  -  	.db 0
   94 D1:CA76 -  -  -  -  
   95 D1:CA76 -  -  -  -  MG_Data_14:
   96 D1:CA76 00 -  -  -  	.db 0
   97 D1:CA77 00 -  -  -  	.db 0
   98 D1:CA78 -  -  -  -  
   99 D1:CA78 -  -  -  -  MG_Data_13:
  100 D1:CA78 00 -  -  -  	.db 0
  101 D1:CA79 00 -  -  -  	.db 0
  102 D1:CA7A -  -  -  -  
  103 D1:CA7A -  -  -  -  MG_Data_12:
  104 D1:CA7A 00 -  -  -  	.db 0
  105 D1:CA7B 00 -  -  -  	.db 0
  106 D1:CA7C -  -  -  -  
  107 D1:CA7C -  -  -  -  MG_Data_11:
  108 D1:CA7C 00 -  -  -  	.db 0
  109 D1:CA7D 00 -  -  -  	.db 0
  110 D1:CA7E -  -  -  -  
  111 D1:CA7E -  -  -  -  MG_Data_10:
  112 D1:CA7E 00 -  -  -  	.db 0
  113 D1:CA7F 00 -  -  -  	.db 0
  114 D1:CA80 -  -  -  -  
  115 D1:CA80 -  -  -  -  MG_Data_9:
  116 D1:CA80 00 -  -  -  	.db 0
  117 D1:CA81 00 -  -  -  	.db 0
  118 D1:CA82 -  -  -  -  
  119 D1:CA82 -  -  -  -  MG_Data_8:
  120 D1:CA82 00 -  -  -  	.db 0
  121 D1:CA83 00 -  -  -  	.db 0
  122 D1:CA84 -  -  -  -  
  123 D1:CA84 -  -  -  -  MG_Data_7:
  124 D1:CA84 00 -  -  -  	.db 0
  125 D1:CA85 00 -  -  -  	.db 0
  126 D1:CA86 -  -  -  -  
  127 D1:CA86 -  -  -  -  MG_Data_6:
  128 D1:CA86 00 -  -  -  	.db 0
  129 D1:CA87 00 -  -  -  	.db 0
  130 D1:CA88 -  -  -  -  
  131 D1:CA88 -  -  -  -  MG_Data_5:
  132 D1:CA88 00 -  -  -  	.db 0
  133 D1:CA89 10 -  -  -  	.db 16
  134 D1:CA8A 0F FF 1C 0C 	.db 15, 255, 28, 12  ;SG_TreeRow1
  135 D1:CA8E FF FF 13 0C 	.db 255, 255, 19, 12  ;SG_TreeRow1
  136 D1:CA92 9F FF 16 0C 	.db 159, 255, 22, 12  ;SG_TreeRow1
  137 D1:CA96 1F FF 1B 0B 	.db 31, 255, 27, 11  ;SG_TreeRow5
  138 D1:CA9A BF FF 14 0D 	.db 191, 255, 20, 13  ;SG_TreeRow2
  139 D1:CA9E EF FF 14 0B 	.db 239, 255, 20, 11  ;SG_TreeRow5
  140 D1:CAA2 7F FF 18 0D 	.db 127, 255, 24, 13  ;SG_TreeRow2
  141 D1:CAA6 DF FF 13 0E 	.db 223, 255, 19, 14  ;SG_TreeRow4
  142 D1:CAAA CF FF 13 0E 	.db 207, 255, 19, 14  ;SG_TreeRow4
  143 D1:CAAE AF FF 15 0A 	.db 175, 255, 21, 10  ;SG_TreeRow3
  144 D1:CAB2 6F FF 19 0D 	.db 111, 255, 25, 13  ;SG_TreeRow2
  145 D1:CAB6 3F FF 19 0D 	.db 63, 255, 25, 13  ;SG_TreeRow2
  146 D1:CABA 5F FF 18 0A 	.db 95, 255, 24, 10  ;SG_TreeRow3
  147 D1:CABE 2F FF 1A 0E 	.db 47, 255, 26, 14  ;SG_TreeRow4
  148 D1:CAC2 8F FF 17 0B 	.db 143, 255, 23, 11  ;SG_TreeRow5
  149 D1:CAC6 4F FF 19 0B 	.db 79, 255, 25, 11  ;SG_TreeRow5
  150 D1:CACA -  -  -  -  
  151 D1:CACA -  -  -  -  MG_Data_4:
  152 D1:CACA 00 -  -  -  	.db 0
  153 D1:CACB 14 -  -  -  	.db 20
  154 D1:CACC 0F FF 29 0C 	.db 15, 255, 41, 12  ;SG_TreeRow1
  155 D1:CAD0 4F FF 26 0B 	.db 79, 255, 38, 11  ;SG_TreeRow5
  156 D1:CAD4 8F FF 22 0B 	.db 143, 255, 34, 11  ;SG_TreeRow5
  157 D1:CAD8 3F FF 27 0E 	.db 63, 255, 39, 14  ;SG_TreeRow4
  158 D1:CADC 2F FF 27 0E 	.db 47, 255, 39, 14  ;SG_TreeRow4
  159 D1:CAE0 6F FF 24 0D 	.db 111, 255, 36, 13  ;SG_TreeRow2
  160 D1:CAE4 9F FF 21 0E 	.db 159, 255, 33, 14  ;SG_TreeRow4
  161 D1:CAE8 CF FF 1E 0B 	.db 207, 255, 30, 11  ;SG_TreeRow5
  162 D1:CAEC BF FF 1F 0E 	.db 191, 255, 31, 14  ;SG_TreeRow4
  163 D1:CAF0 FF FF 1D 0A 	.db 255, 255, 29, 10  ;SG_TreeRow3
  164 D1:CAF4 1F FF 28 0A 	.db 31, 255, 40, 10  ;SG_TreeRow3
  165 D1:CAF8 5F FF 25 0C 	.db 95, 255, 37, 12  ;SG_TreeRow1
  166 D1:CAFC 7F FF 23 0C 	.db 127, 255, 35, 12  ;SG_TreeRow1
  167 D1:CB00 AF FF 20 0C 	.db 175, 255, 32, 12  ;SG_TreeRow1
  168 D1:CB04 EF FF 1E 0C 	.db 239, 255, 30, 12  ;SG_TreeRow1
  169 D1:CB08 DF FF 1F 0D 	.db 223, 255, 31, 13  ;SG_TreeRow2
  170 D1:CB0C CF FF 65 04 	.db 207, 255, 101, 4  ;SG_Branch5
  171 D1:CB10 2E FF 00 0F 	.db 46, 255, 0, 15  ;SG_Branch1
  172 D1:CB14 C3 FF 54 16 	.db 195, 255, 84, 22  ;SG_BranchBase4
  173 D1:CB18 E4 FF 69 04 	.db 228, 255, 105, 4  ;SG_Branch5
  174 D1:CB1C -  -  -  -  
  175 D1:CB1C -  -  -  -  MG_Data_3:
  176 D1:CB1C 00 -  -  -  	.db 0
  177 D1:CB1D 13 -  -  -  	.db 19
  178 D1:CB1E 0F FF 28 0B 	.db 15, 255, 40, 11  ;SG_TreeRow5
  179 D1:CB22 5F FF 26 0E 	.db 95, 255, 38, 14  ;SG_TreeRow4
  180 D1:CB26 6F FF 25 0B 	.db 111, 255, 37, 11  ;SG_TreeRow5
  181 D1:CB2A 2F FF 28 0D 	.db 47, 255, 40, 13  ;SG_TreeRow2
  182 D1:CB2E 4F FF 27 0A 	.db 79, 255, 39, 10  ;SG_TreeRow3
  183 D1:CB32 7F FF 26 0A 	.db 127, 255, 38, 10  ;SG_TreeRow3
  184 D1:CB36 8F FF 27 0D 	.db 143, 255, 39, 13  ;SG_TreeRow2
  185 D1:CB3A BF FF 29 0D 	.db 191, 255, 41, 13  ;SG_TreeRow2
  186 D1:CB3E 9F FF 27 0A 	.db 159, 255, 39, 10  ;SG_TreeRow3
  187 D1:CB42 EF FF 2A 0E 	.db 239, 255, 42, 14  ;SG_TreeRow4
  188 D1:CB46 FF FF 2A 0A 	.db 255, 255, 42, 10  ;SG_TreeRow3
  189 D1:CB4A 1F FF 28 0A 	.db 31, 255, 40, 10  ;SG_TreeRow3
  190 D1:CB4E 3F FF 28 0C 	.db 63, 255, 40, 12  ;SG_TreeRow1
  191 D1:CB52 AF FF 28 0C 	.db 175, 255, 40, 12  ;SG_TreeRow1
  192 D1:CB56 CF FF 29 0C 	.db 207, 255, 41, 12  ;SG_TreeRow1
  193 D1:CB5A DF FF 2A 0B 	.db 223, 255, 42, 11  ;SG_TreeRow5
  194 D1:CB5E 87 FF 02 01 	.db 135, 255, 2, 1  ;SG_Branch3
  195 D1:CB62 5D FF 6C 05 	.db 93, 255, 108, 5  ;SG_Branch6
  196 D1:CB66 95 FF 1E 15 	.db 149, 255, 30, 21  ;SG_BranchBase2
  197 D1:CB6A -  -  -  -  
  198 D1:CB6A -  -  -  -  MG_Data_2:
  199 D1:CB6A 00 -  -  -  	.db 0
  200 D1:CB6B 12 -  -  -  	.db 18
  201 D1:CB6C 0F FF 22 0A 	.db 15, 255, 34, 10  ;SG_TreeRow3
  202 D1:CB70 4F FF 26 0E 	.db 79, 255, 38, 14  ;SG_TreeRow4
  203 D1:CB74 3F FF 25 0B 	.db 63, 255, 37, 11  ;SG_TreeRow5
  204 D1:CB78 6F FF 28 0A 	.db 111, 255, 40, 10  ;SG_TreeRow3
  205 D1:CB7C 8F FF 2A 0B 	.db 143, 255, 42, 11  ;SG_TreeRow5
  206 D1:CB80 9F FF 2B 0E 	.db 159, 255, 43, 14  ;SG_TreeRow4
  207 D1:CB84 AF FF 2A 0B 	.db 175, 255, 42, 11  ;SG_TreeRow5
  208 D1:CB88 1F FF 23 0C 	.db 31, 255, 35, 12  ;SG_TreeRow1
  209 D1:CB8C 5F FF 27 0D 	.db 95, 255, 39, 13  ;SG_TreeRow2
  210 D1:CB90 CF FF 2A 0D 	.db 207, 255, 42, 13  ;SG_TreeRow2
  211 D1:CB94 DF FF 29 0E 	.db 223, 255, 41, 14  ;SG_TreeRow4
  212 D1:CB98 FF FF 28 0A 	.db 255, 255, 40, 10  ;SG_TreeRow3
  213 D1:CB9C 2F FF 24 0C 	.db 47, 255, 36, 12  ;SG_TreeRow1
  214 D1:CBA0 7F FF 29 0C 	.db 127, 255, 41, 12  ;SG_TreeRow1
  215 D1:CBA4 BF FF 2A 0C 	.db 191, 255, 42, 12  ;SG_TreeRow1
  216 D1:CBA8 EF FF 28 0C 	.db 239, 255, 40, 12  ;SG_TreeRow1
  217 D1:CBAC 78 FF 60 14 	.db 120, 255, 96, 20  ;SG_BranchBase3
  218 D1:CBB0 A8 FF 72 02 	.db 168, 255, 114, 2  ;SG_Branch7
  219 D1:CBB4 -  -  -  -  
  220 D1:CBB4 -  -  -  -  MG_Data_1:
  221 D1:CBB4 00 -  -  -  	.db 0
  222 D1:CBB5 15 -  -  -  	.db 21
  223 D1:CBB6 0F FF 21 0B 	.db 15, 255, 33, 11  ;SG_TreeRow5
  224 D1:CBBA 5F FF 1F 0B 	.db 95, 255, 31, 11  ;SG_TreeRow5
  225 D1:CBBE AF FF 1F 0B 	.db 175, 255, 31, 11  ;SG_TreeRow5
  226 D1:CBC2 2F FF 20 0E 	.db 47, 255, 32, 14  ;SG_TreeRow4
  227 D1:CBC6 3F FF 1F 0D 	.db 63, 255, 31, 13  ;SG_TreeRow2
  228 D1:CBCA 6F FF 1F 0D 	.db 111, 255, 31, 13  ;SG_TreeRow2
  229 D1:CBCE 9F FF 1F 0E 	.db 159, 255, 31, 14  ;SG_TreeRow4
  230 D1:CBD2 DF FF 21 0E 	.db 223, 255, 33, 14  ;SG_TreeRow4
  231 D1:CBD6 7F FF 1F 0A 	.db 127, 255, 31, 10  ;SG_TreeRow3
  232 D1:CBDA FF FF 22 0E 	.db 255, 255, 34, 14  ;SG_TreeRow4
  233 D1:CBDE 1F FF 20 0A 	.db 31, 255, 32, 10  ;SG_TreeRow3
  234 D1:CBE2 4F FF 1F 0C 	.db 79, 255, 31, 12  ;SG_TreeRow1
  235 D1:CBE6 8F FF 1F 0C 	.db 143, 255, 31, 12  ;SG_TreeRow1
  236 D1:CBEA BF FF 20 0C 	.db 191, 255, 32, 12  ;SG_TreeRow1
  237 D1:CBEE CF FF 20 0C 	.db 207, 255, 32, 12  ;SG_TreeRow1
  238 D1:CBF2 EF FF 21 0A 	.db 239, 255, 33, 10  ;SG_TreeRow3
  239 D1:CBF6 A3 FF 52 13 	.db 163, 255, 82, 19  ;SG_Vines5
  240 D1:CBFA D9 FF 60 02 	.db 217, 255, 96, 2  ;SG_Branch7
  241 D1:CBFE AA FF 49 14 	.db 170, 255, 73, 20  ;SG_BranchBase3
  242 D1:CC02 EF FF 06 06 	.db 239, 255, 6, 6  ;SG_Branch2
  243 D1:CC06 A3 FF 4A 10 	.db 163, 255, 74, 16  ;SG_Vines2
  244 D1:CC0A -  -  -  -  
  245 D1:CC0A -  -  -  -  MG_Data_0:
  246 D1:CC0A 00 -  -  -  	.db 0
  247 D1:CC0B 21 -  -  -  	.db 33
  248 D1:CC0C 39 FF 88 07 	.db 57, 255, 136, 7  ;SG_GroundChunk2
  249 D1:CC10 3B FF 72 08 	.db 59, 255, 114, 8  ;SG_GroundChunk1
  250 D1:CC14 3B FF 16 07 	.db 59, 255, 22, 7  ;SG_GroundChunk2
  251 D1:CC18 3C FF 00 08 	.db 60, 255, 0, 8  ;SG_GroundChunk1
  252 D1:CC1C FF FF 22 0D 	.db 255, 255, 34, 13  ;SG_TreeRow2
  253 D1:CC20 EF FF 23 0A 	.db 239, 255, 35, 10  ;SG_TreeRow3
  254 D1:CC24 DF FF 22 0C 	.db 223, 255, 34, 12  ;SG_TreeRow1
  255 D1:CC28 CF FF 23 0B 	.db 207, 255, 35, 11  ;SG_TreeRow5
  256 D1:CC2C BF FF 22 0C 	.db 191, 255, 34, 12  ;SG_TreeRow1
  257 D1:CC30 AF FF 22 0E 	.db 175, 255, 34, 14  ;SG_TreeRow4
  258 D1:CC34 9F FF 22 0D 	.db 159, 255, 34, 13  ;SG_TreeRow2
  259 D1:CC38 8F FF 23 0C 	.db 143, 255, 35, 12  ;SG_TreeRow1
  260 D1:CC3C 7F FF 23 0A 	.db 127, 255, 35, 10  ;SG_TreeRow3
  261 D1:CC40 6F FF 23 0B 	.db 111, 255, 35, 11  ;SG_TreeRow5
  262 D1:CC44 5F FF 22 0D 	.db 95, 255, 34, 13  ;SG_TreeRow2
  263 D1:CC48 4F FF 22 0C 	.db 79, 255, 34, 12  ;SG_TreeRow1
  264 D1:CC4C 2F FF 22 0A 	.db 47, 255, 34, 10  ;SG_TreeRow3
  265 D1:CC50 35 FF 12 09 	.db 53, 255, 18, 9  ;SG_Root1
  266 D1:CC54 33 FF 86 09 	.db 51, 255, 134, 9  ;SG_Root1
  267 D1:CC58 3B FF 79 09 	.db 59, 255, 121, 9  ;SG_Root1
  268 D1:CC5C 3F FF 22 0B 	.db 63, 255, 34, 11  ;SG_TreeRow5
  269 D1:CC60 D1 FF 49 12 	.db 209, 255, 73, 18  ;SG_Vines7
  270 D1:CC64 CF FF 1F 11 	.db 207, 255, 31, 17  ;SG_Vines6
  271 D1:CC68 23 FF 18 08 	.db 35, 255, 24, 8  ;SG_GroundChunk1
  272 D1:CC6C 25 FF 30 08 	.db 37, 255, 48, 8  ;SG_GroundChunk1
  273 D1:CC70 24 FF 48 07 	.db 36, 255, 72, 7  ;SG_GroundChunk2
  274 D1:CC74 25 FF 60 08 	.db 37, 255, 96, 8  ;SG_GroundChunk1
  275 D1:CC78 22 FF 78 07 	.db 34, 255, 120, 7  ;SG_GroundChunk2
  276 D1:CC7C 1F FF 88 07 	.db 31, 255, 136, 7  ;SG_GroundChunk2
  277 D1:CC80 22 FF 00 07 	.db 34, 255, 0, 7  ;SG_GroundChunk2
  278 D1:CC84 E9 FF 00 0F 	.db 233, 255, 0, 15  ;SG_Branch1
  279 D1:CC88 DB 10 74 51 	.db 219, 16, 116, 81  ;Vine5_Slow
  280 D1:CC8C CF FF 17 10 	.db 207, 255, 23, 16  ;SG_Vines2
  281 D1:CC90 -  -  -  -  
  282 D1:CC90 -  -  -  -  
  283 D1:CC90 -  -  -  -  
Listing for file "ascent.asm"
  610 D1:CC90 -  -  -  -  #include "generated/MG2_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\MG2_Data.txt"
    1 D1:CC90 -  -  -  -  MG2_Data_frame_table:
    2 D1:CC90 6C CD D1 -  	.dl MG2_Data_0
    3 D1:CC93 4E CD D1 -  	.dl MG2_Data_1
    4 D1:CC96 34 CD D1 -  	.dl MG2_Data_2
    5 D1:CC99 22 CD D1 -  	.dl MG2_Data_3
    6 D1:CC9C 1C CD D1 -  	.dl MG2_Data_4
    7 D1:CC9F 1A CD D1 -  	.dl MG2_Data_5
    8 D1:CCA2 18 CD D1 -  	.dl MG2_Data_6
    9 D1:CCA5 16 CD D1 -  	.dl MG2_Data_7
   10 D1:CCA8 14 CD D1 -  	.dl MG2_Data_8
   11 D1:CCAB 12 CD D1 -  	.dl MG2_Data_9
   12 D1:CCAE 10 CD D1 -  	.dl MG2_Data_10
   13 D1:CCB1 0E CD D1 -  	.dl MG2_Data_11
   14 D1:CCB4 0C CD D1 -  	.dl MG2_Data_12
   15 D1:CCB7 0A CD D1 -  	.dl MG2_Data_13
   16 D1:CCBA 08 CD D1 -  	.dl MG2_Data_14
   17 D1:CCBD 06 CD D1 -  	.dl MG2_Data_15
   18 D1:CCC0 04 CD D1 -  	.dl MG2_Data_16
   19 D1:CCC3 02 CD D1 -  	.dl MG2_Data_17
   20 D1:CCC6 00 CD D1 -  	.dl MG2_Data_18
   21 D1:CCC9 FE CC D1 -  	.dl MG2_Data_19
   22 D1:CCCC FC CC D1 -  	.dl MG2_Data_20
   23 D1:CCCF FA CC D1 -  	.dl MG2_Data_21
   24 D1:CCD2 F8 CC D1 -  	.dl MG2_Data_22
   25 D1:CCD5 F6 CC D1 -  	.dl MG2_Data_23
   26 D1:CCD8 F4 CC D1 -  	.dl MG2_Data_24
   27 D1:CCDB F2 CC D1 -  	.dl MG2_Data_25
   28 D1:CCDE F0 CC D1 -  	.dl MG2_Data_26
   29 D1:CCE1 EE CC D1 -  	.dl MG2_Data_27
   30 D1:CCE4 EC CC D1 -  	.dl MG2_Data_28
   31 D1:CCE7 EA CC D1 -  	.dl MG2_Data_29
   32 D1:CCEA -  -  -  -  
   33 D1:CCEA -  -  -  -  
   34 D1:CCEA -  -  -  -  
   35 D1:CCEA -  -  -  -  MG2_Data_29:
   36 D1:CCEA 00 -  -  -  	.db 0
   37 D1:CCEB 00 -  -  -  	.db 0
   38 D1:CCEC -  -  -  -  
   39 D1:CCEC -  -  -  -  MG2_Data_28:
   40 D1:CCEC 00 -  -  -  	.db 0
   41 D1:CCED 00 -  -  -  	.db 0
   42 D1:CCEE -  -  -  -  
   43 D1:CCEE -  -  -  -  MG2_Data_27:
   44 D1:CCEE 00 -  -  -  	.db 0
   45 D1:CCEF 00 -  -  -  	.db 0
   46 D1:CCF0 -  -  -  -  
   47 D1:CCF0 -  -  -  -  MG2_Data_26:
   48 D1:CCF0 00 -  -  -  	.db 0
   49 D1:CCF1 00 -  -  -  	.db 0
   50 D1:CCF2 -  -  -  -  
   51 D1:CCF2 -  -  -  -  MG2_Data_25:
   52 D1:CCF2 00 -  -  -  	.db 0
   53 D1:CCF3 00 -  -  -  	.db 0
   54 D1:CCF4 -  -  -  -  
   55 D1:CCF4 -  -  -  -  MG2_Data_24:
   56 D1:CCF4 00 -  -  -  	.db 0
   57 D1:CCF5 00 -  -  -  	.db 0
   58 D1:CCF6 -  -  -  -  
   59 D1:CCF6 -  -  -  -  MG2_Data_23:
   60 D1:CCF6 00 -  -  -  	.db 0
   61 D1:CCF7 00 -  -  -  	.db 0
   62 D1:CCF8 -  -  -  -  
   63 D1:CCF8 -  -  -  -  MG2_Data_22:
   64 D1:CCF8 00 -  -  -  	.db 0
   65 D1:CCF9 00 -  -  -  	.db 0
   66 D1:CCFA -  -  -  -  
   67 D1:CCFA -  -  -  -  MG2_Data_21:
   68 D1:CCFA 00 -  -  -  	.db 0
   69 D1:CCFB 00 -  -  -  	.db 0
   70 D1:CCFC -  -  -  -  
   71 D1:CCFC -  -  -  -  MG2_Data_20:
   72 D1:CCFC 00 -  -  -  	.db 0
   73 D1:CCFD 00 -  -  -  	.db 0
   74 D1:CCFE -  -  -  -  
   75 D1:CCFE -  -  -  -  MG2_Data_19:
   76 D1:CCFE 00 -  -  -  	.db 0
   77 D1:CCFF 00 -  -  -  	.db 0
   78 D1:CD00 -  -  -  -  
   79 D1:CD00 -  -  -  -  MG2_Data_18:
   80 D1:CD00 00 -  -  -  	.db 0
   81 D1:CD01 00 -  -  -  	.db 0
   82 D1:CD02 -  -  -  -  
   83 D1:CD02 -  -  -  -  MG2_Data_17:
   84 D1:CD02 00 -  -  -  	.db 0
   85 D1:CD03 00 -  -  -  	.db 0
   86 D1:CD04 -  -  -  -  
   87 D1:CD04 -  -  -  -  MG2_Data_16:
   88 D1:CD04 00 -  -  -  	.db 0
   89 D1:CD05 00 -  -  -  	.db 0
   90 D1:CD06 -  -  -  -  
   91 D1:CD06 -  -  -  -  MG2_Data_15:
   92 D1:CD06 00 -  -  -  	.db 0
   93 D1:CD07 00 -  -  -  	.db 0
   94 D1:CD08 -  -  -  -  
   95 D1:CD08 -  -  -  -  MG2_Data_14:
   96 D1:CD08 00 -  -  -  	.db 0
   97 D1:CD09 00 -  -  -  	.db 0
   98 D1:CD0A -  -  -  -  
   99 D1:CD0A -  -  -  -  MG2_Data_13:
  100 D1:CD0A 00 -  -  -  	.db 0
  101 D1:CD0B 00 -  -  -  	.db 0
  102 D1:CD0C -  -  -  -  
  103 D1:CD0C -  -  -  -  MG2_Data_12:
  104 D1:CD0C 00 -  -  -  	.db 0
  105 D1:CD0D 00 -  -  -  	.db 0
  106 D1:CD0E -  -  -  -  
  107 D1:CD0E -  -  -  -  MG2_Data_11:
  108 D1:CD0E 00 -  -  -  	.db 0
  109 D1:CD0F 00 -  -  -  	.db 0
  110 D1:CD10 -  -  -  -  
  111 D1:CD10 -  -  -  -  MG2_Data_10:
  112 D1:CD10 00 -  -  -  	.db 0
  113 D1:CD11 00 -  -  -  	.db 0
  114 D1:CD12 -  -  -  -  
  115 D1:CD12 -  -  -  -  MG2_Data_9:
  116 D1:CD12 00 -  -  -  	.db 0
  117 D1:CD13 00 -  -  -  	.db 0
  118 D1:CD14 -  -  -  -  
  119 D1:CD14 -  -  -  -  MG2_Data_8:
  120 D1:CD14 00 -  -  -  	.db 0
  121 D1:CD15 00 -  -  -  	.db 0
  122 D1:CD16 -  -  -  -  
  123 D1:CD16 -  -  -  -  MG2_Data_7:
  124 D1:CD16 00 -  -  -  	.db 0
  125 D1:CD17 00 -  -  -  	.db 0
  126 D1:CD18 -  -  -  -  
  127 D1:CD18 -  -  -  -  MG2_Data_6:
  128 D1:CD18 00 -  -  -  	.db 0
  129 D1:CD19 00 -  -  -  	.db 0
  130 D1:CD1A -  -  -  -  
  131 D1:CD1A -  -  -  -  MG2_Data_5:
  132 D1:CD1A 00 -  -  -  	.db 0
  133 D1:CD1B 00 -  -  -  	.db 0
  134 D1:CD1C -  -  -  -  
  135 D1:CD1C -  -  -  -  MG2_Data_4:
  136 D1:CD1C 00 -  -  -  	.db 0
  137 D1:CD1D 01 -  -  -  	.db 1
  138 D1:CD1E 1B FF 36 17 	.db 27, 255, 54, 23  ;SG_Platform3
  139 D1:CD22 -  -  -  -  
  140 D1:CD22 -  -  -  -  MG2_Data_3:
  141 D1:CD22 00 -  -  -  	.db 0
  142 D1:CD23 04 -  -  -  	.db 4
  143 D1:CD24 21 FF 5F 1B 	.db 33, 255, 95, 27  ;SG_TongueRing
  144 D1:CD28 7E FF 4C 1B 	.db 126, 255, 76, 27  ;SG_TongueRing
  145 D1:CD2C AD FF 76 1B 	.db 173, 255, 118, 27  ;SG_TongueRing
  146 D1:CD30 BC FF 1F 1B 	.db 188, 255, 31, 27  ;SG_TongueRing
  147 D1:CD34 -  -  -  -  
  148 D1:CD34 -  -  -  -  MG2_Data_2:
  149 D1:CD34 00 -  -  -  	.db 0
  150 D1:CD35 06 -  -  -  	.db 6
  151 D1:CD36 25 FF 6C 1B 	.db 37, 255, 108, 27  ;SG_TongueRing
  152 D1:CD3A 54 FF 40 1B 	.db 84, 255, 64, 27  ;SG_TongueRing
  153 D1:CD3E 81 FF 62 1B 	.db 129, 255, 98, 27  ;SG_TongueRing
  154 D1:CD42 AB FF 18 1B 	.db 171, 255, 24, 27  ;SG_TongueRing
  155 D1:CD46 D5 FF 7C 1B 	.db 213, 255, 124, 27  ;SG_TongueRing
  156 D1:CD4A DF FF 3B 1B 	.db 223, 255, 59, 27  ;SG_TongueRing
  157 D1:CD4E -  -  -  -  
  158 D1:CD4E -  -  -  -  MG2_Data_1:
  159 D1:CD4E 00 -  -  -  	.db 0
  160 D1:CD4F 07 -  -  -  	.db 7
  161 D1:CD50 14 FF 51 19 	.db 20, 255, 81, 25  ;SG_Platform1
  162 D1:CD54 35 FF 0F 19 	.db 53, 255, 15, 25  ;SG_Platform1
  163 D1:CD58 79 FF 28 17 	.db 121, 255, 40, 23  ;SG_Platform3
  164 D1:CD5C BD FF 6E 1A 	.db 189, 255, 110, 26  ;SG_Platform2
  165 D1:CD60 6D FF 78 1B 	.db 109, 255, 120, 27  ;SG_TongueRing
  166 D1:CD64 FF FF 24 1B 	.db 255, 255, 36, 27  ;SG_TongueRing
  167 D1:CD68 82 09 3B 6A 	.db 130, 9, 59, 106  ;Spikes_0_Fast
  168 D1:CD6C -  -  -  -  
  169 D1:CD6C -  -  -  -  MG2_Data_0:
  170 D1:CD6C 00 -  -  -  	.db 0
  171 D1:CD6D 05 -  -  -  	.db 5
  172 D1:CD6E 63 FF 69 17 	.db 99, 255, 105, 23  ;SG_Platform3
  173 D1:CD72 63 FF 05 18 	.db 99, 255, 5, 24  ;SG_Platform4
  174 D1:CD76 9F FF 41 19 	.db 159, 255, 65, 25  ;SG_Platform1
  175 D1:CD7A CE FF 74 1A 	.db 206, 255, 116, 26  ;SG_Platform2
  176 D1:CD7E CC FF 21 1B 	.db 204, 255, 33, 27  ;SG_TongueRing
  177 D1:CD82 -  -  -  -  
  178 D1:CD82 -  -  -  -  
  179 D1:CD82 -  -  -  -  
Listing for file "ascent.asm"
  611 D1:CD82 -  -  -  -  #include "generated/FG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\FG_Data.txt"
    1 D1:CD82 -  -  -  -  FG_Data_frame_table:
    2 D1:CD82 6A CE D1 -  	.dl FG_Data_0
    3 D1:CD85 5C CE D1 -  	.dl FG_Data_1
    4 D1:CD88 52 CE D1 -  	.dl FG_Data_2
    5 D1:CD8B 4C CE D1 -  	.dl FG_Data_3
    6 D1:CD8E 46 CE D1 -  	.dl FG_Data_4
    7 D1:CD91 3C CE D1 -  	.dl FG_Data_5
    8 D1:CD94 36 CE D1 -  	.dl FG_Data_6
    9 D1:CD97 2C CE D1 -  	.dl FG_Data_7
   10 D1:CD9A 1E CE D1 -  	.dl FG_Data_8
   11 D1:CD9D 08 CE D1 -  	.dl FG_Data_9
   12 D1:CDA0 02 CE D1 -  	.dl FG_Data_10
   13 D1:CDA3 00 CE D1 -  	.dl FG_Data_11
   14 D1:CDA6 FE CD D1 -  	.dl FG_Data_12
   15 D1:CDA9 FC CD D1 -  	.dl FG_Data_13
   16 D1:CDAC FA CD D1 -  	.dl FG_Data_14
   17 D1:CDAF F8 CD D1 -  	.dl FG_Data_15
   18 D1:CDB2 F6 CD D1 -  	.dl FG_Data_16
   19 D1:CDB5 F4 CD D1 -  	.dl FG_Data_17
   20 D1:CDB8 F2 CD D1 -  	.dl FG_Data_18
   21 D1:CDBB F0 CD D1 -  	.dl FG_Data_19
   22 D1:CDBE EE CD D1 -  	.dl FG_Data_20
   23 D1:CDC1 EC CD D1 -  	.dl FG_Data_21
   24 D1:CDC4 EA CD D1 -  	.dl FG_Data_22
   25 D1:CDC7 E8 CD D1 -  	.dl FG_Data_23
   26 D1:CDCA E6 CD D1 -  	.dl FG_Data_24
   27 D1:CDCD E4 CD D1 -  	.dl FG_Data_25
   28 D1:CDD0 E2 CD D1 -  	.dl FG_Data_26
   29 D1:CDD3 E0 CD D1 -  	.dl FG_Data_27
   30 D1:CDD6 DE CD D1 -  	.dl FG_Data_28
   31 D1:CDD9 DC CD D1 -  	.dl FG_Data_29
   32 D1:CDDC -  -  -  -  
   33 D1:CDDC -  -  -  -  
   34 D1:CDDC -  -  -  -  
   35 D1:CDDC -  -  -  -  FG_Data_29:
   36 D1:CDDC 00 -  -  -  	.db 0
   37 D1:CDDD 00 -  -  -  	.db 0
   38 D1:CDDE -  -  -  -  
   39 D1:CDDE -  -  -  -  FG_Data_28:
   40 D1:CDDE 00 -  -  -  	.db 0
   41 D1:CDDF 00 -  -  -  	.db 0
   42 D1:CDE0 -  -  -  -  
   43 D1:CDE0 -  -  -  -  FG_Data_27:
   44 D1:CDE0 00 -  -  -  	.db 0
   45 D1:CDE1 00 -  -  -  	.db 0
   46 D1:CDE2 -  -  -  -  
   47 D1:CDE2 -  -  -  -  FG_Data_26:
   48 D1:CDE2 00 -  -  -  	.db 0
   49 D1:CDE3 00 -  -  -  	.db 0
   50 D1:CDE4 -  -  -  -  
   51 D1:CDE4 -  -  -  -  FG_Data_25:
   52 D1:CDE4 00 -  -  -  	.db 0
   53 D1:CDE5 00 -  -  -  	.db 0
   54 D1:CDE6 -  -  -  -  
   55 D1:CDE6 -  -  -  -  FG_Data_24:
   56 D1:CDE6 00 -  -  -  	.db 0
   57 D1:CDE7 00 -  -  -  	.db 0
   58 D1:CDE8 -  -  -  -  
   59 D1:CDE8 -  -  -  -  FG_Data_23:
   60 D1:CDE8 00 -  -  -  	.db 0
   61 D1:CDE9 00 -  -  -  	.db 0
   62 D1:CDEA -  -  -  -  
   63 D1:CDEA -  -  -  -  FG_Data_22:
   64 D1:CDEA 00 -  -  -  	.db 0
   65 D1:CDEB 00 -  -  -  	.db 0
   66 D1:CDEC -  -  -  -  
   67 D1:CDEC -  -  -  -  FG_Data_21:
   68 D1:CDEC 00 -  -  -  	.db 0
   69 D1:CDED 00 -  -  -  	.db 0
   70 D1:CDEE -  -  -  -  
   71 D1:CDEE -  -  -  -  FG_Data_20:
   72 D1:CDEE 00 -  -  -  	.db 0
   73 D1:CDEF 00 -  -  -  	.db 0
   74 D1:CDF0 -  -  -  -  
   75 D1:CDF0 -  -  -  -  FG_Data_19:
   76 D1:CDF0 00 -  -  -  	.db 0
   77 D1:CDF1 00 -  -  -  	.db 0
   78 D1:CDF2 -  -  -  -  
   79 D1:CDF2 -  -  -  -  FG_Data_18:
   80 D1:CDF2 00 -  -  -  	.db 0
   81 D1:CDF3 00 -  -  -  	.db 0
   82 D1:CDF4 -  -  -  -  
   83 D1:CDF4 -  -  -  -  FG_Data_17:
   84 D1:CDF4 00 -  -  -  	.db 0
   85 D1:CDF5 00 -  -  -  	.db 0
   86 D1:CDF6 -  -  -  -  
   87 D1:CDF6 -  -  -  -  FG_Data_16:
   88 D1:CDF6 00 -  -  -  	.db 0
   89 D1:CDF7 00 -  -  -  	.db 0
   90 D1:CDF8 -  -  -  -  
   91 D1:CDF8 -  -  -  -  FG_Data_15:
   92 D1:CDF8 00 -  -  -  	.db 0
   93 D1:CDF9 00 -  -  -  	.db 0
   94 D1:CDFA -  -  -  -  
   95 D1:CDFA -  -  -  -  FG_Data_14:
   96 D1:CDFA 00 -  -  -  	.db 0
   97 D1:CDFB 00 -  -  -  	.db 0
   98 D1:CDFC -  -  -  -  
   99 D1:CDFC -  -  -  -  FG_Data_13:
  100 D1:CDFC 00 -  -  -  	.db 0
  101 D1:CDFD 00 -  -  -  	.db 0
  102 D1:CDFE -  -  -  -  
  103 D1:CDFE -  -  -  -  FG_Data_12:
  104 D1:CDFE 00 -  -  -  	.db 0
  105 D1:CDFF 00 -  -  -  	.db 0
  106 D1:CE00 -  -  -  -  
  107 D1:CE00 -  -  -  -  FG_Data_11:
  108 D1:CE00 00 -  -  -  	.db 0
  109 D1:CE01 00 -  -  -  	.db 0
  110 D1:CE02 -  -  -  -  
  111 D1:CE02 -  -  -  -  FG_Data_10:
  112 D1:CE02 00 -  -  -  	.db 0
  113 D1:CE03 01 -  -  -  	.db 1
  114 D1:CE04 CA FF 80 01 	.db 202, 255, 128, 1  ;SG_Branch3
  115 D1:CE08 -  -  -  -  
  116 D1:CE08 -  -  -  -  FG_Data_9:
  117 D1:CE08 00 -  -  -  	.db 0
  118 D1:CE09 05 -  -  -  	.db 5
  119 D1:CE0A D5 FF 72 03 	.db 213, 255, 114, 3  ;SG_Branch4
  120 D1:CE0E B0 0E 00 29 	.db 176, 14, 0, 41  ;Branches_3_Fast
  121 D1:CE12 B1 0E 09 2A 	.db 177, 14, 9, 42  ;Branches_2_Fast
  122 D1:CE16 B1 0E 12 23 	.db 177, 14, 18, 35  ;Branches_4_Fast_F
  123 D1:CE1A EA FF 13 02 	.db 234, 255, 19, 2  ;SG_Branch7
  124 D1:CE1E -  -  -  -  
  125 D1:CE1E -  -  -  -  FG_Data_8:
  126 D1:CE1E 00 -  -  -  	.db 0
  127 D1:CE1F 03 -  -  -  	.db 3
  128 D1:CE20 7C 0E 97 27 	.db 124, 14, 151, 39  ;Branches_5_Fast
  129 D1:CE24 7C 0E 8E 28 	.db 124, 14, 142, 40  ;Branches_4_Fast
  130 D1:CE28 BA FF 6E 06 	.db 186, 255, 110, 6  ;SG_Branch2
  131 D1:CE2C -  -  -  -  
  132 D1:CE2C -  -  -  -  FG_Data_7:
  133 D1:CE2C 00 -  -  -  	.db 0
  134 D1:CE2D 02 -  -  -  	.db 2
  135 D1:CE2E 87 FF 00 04 	.db 135, 255, 0, 4  ;SG_Branch5
  136 D1:CE32 ED FF 00 05 	.db 237, 255, 0, 5  ;SG_Branch6
  137 D1:CE36 -  -  -  -  
  138 D1:CE36 -  -  -  -  FG_Data_6:
  139 D1:CE36 00 -  -  -  	.db 0
  140 D1:CE37 01 -  -  -  	.db 1
  141 D1:CE38 64 FF 00 05 	.db 100, 255, 0, 5  ;SG_Branch6
  142 D1:CE3C -  -  -  -  
  143 D1:CE3C -  -  -  -  FG_Data_5:
  144 D1:CE3C 00 -  -  -  	.db 0
  145 D1:CE3D 02 -  -  -  	.db 2
  146 D1:CE3E D7 FF 80 01 	.db 215, 255, 128, 1  ;SG_Branch3
  147 D1:CE42 5D FF 00 04 	.db 93, 255, 0, 4  ;SG_Branch5
  148 D1:CE46 -  -  -  -  
  149 D1:CE46 -  -  -  -  FG_Data_4:
  150 D1:CE46 00 -  -  -  	.db 0
  151 D1:CE47 01 -  -  -  	.db 1
  152 D1:CE48 B5 FF 80 01 	.db 181, 255, 128, 1  ;SG_Branch3
  153 D1:CE4C -  -  -  -  
  154 D1:CE4C -  -  -  -  FG_Data_3:
  155 D1:CE4C 00 -  -  -  	.db 0
  156 D1:CE4D 01 -  -  -  	.db 1
  157 D1:CE4E C1 FF 00 05 	.db 193, 255, 0, 5  ;SG_Branch6
  158 D1:CE52 -  -  -  -  
  159 D1:CE52 -  -  -  -  FG_Data_2:
  160 D1:CE52 00 -  -  -  	.db 0
  161 D1:CE53 02 -  -  -  	.db 2
  162 D1:CE54 FB FF 72 03 	.db 251, 255, 114, 3  ;SG_Branch4
  163 D1:CE58 93 FF 00 04 	.db 147, 255, 0, 4  ;SG_Branch5
  164 D1:CE5C -  -  -  -  
  165 D1:CE5C -  -  -  -  FG_Data_1:
  166 D1:CE5C 00 -  -  -  	.db 0
  167 D1:CE5D 03 -  -  -  	.db 3
  168 D1:CE5E C9 FF 80 01 	.db 201, 255, 128, 1  ;SG_Branch3
  169 D1:CE62 87 FF 00 02 	.db 135, 255, 0, 2  ;SG_Branch7
  170 D1:CE66 4B 0E 00 09 	.db 75, 14, 0, 9  ;Branches_9_Fast
  171 D1:CE6A -  -  -  -  
  172 D1:CE6A -  -  -  -  FG_Data_0:
  173 D1:CE6A 00 -  -  -  	.db 0
  174 D1:CE6B 05 -  -  -  	.db 5
  175 D1:CE6C 19 1A 94 01 	.db 25, 26, 148, 1  ;BigGrassBase_Fast
  176 D1:CE70 1E 17 93 04 	.db 30, 23, 147, 4  ;BigGrassTop_Fast_F
  177 D1:CE74 33 FF 00 00 	.db 51, 255, 0, 0  ;SG_GroundGrass
  178 D1:CE78 33 FF 38 00 	.db 51, 255, 56, 0  ;SG_GroundGrass
  179 D1:CE7C 33 FF 5F 00 	.db 51, 255, 95, 0  ;SG_GroundGrass
  180 D1:CE80 -  -  -  -  
  181 D1:CE80 -  -  -  -  
  182 D1:CE80 -  -  -  -  
Listing for file "ascent.asm"
  612 D1:CE80 -  -  -  -  #include "generated/DecompressCalls.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\DecompressCalls.txt"
    1 D1:CE80 -  -  -  -  decompress_calls_table_up:
    2 D1:CE80 D5 D2 D1 -  	.dl decompress_frame_up_0
    3 D1:CE83 96 D4 D1 -  	.dl decompress_frame_up_1
    4 D1:CE86 97 D4 D1 -  	.dl decompress_frame_up_2
    5 D1:CE89 B4 D4 D1 -  	.dl decompress_frame_up_3
    6 D1:CE8C B5 D4 D1 -  	.dl decompress_frame_up_4
    7 D1:CE8F CB D4 D1 -  	.dl decompress_frame_up_5
    8 D1:CE92 D3 D4 D1 -  	.dl decompress_frame_up_6
    9 D1:CE95 D4 D4 D1 -  	.dl decompress_frame_up_7
   10 D1:CE98 D5 D4 D1 -  	.dl decompress_frame_up_8
   11 D1:CE9B D6 D4 D1 -  	.dl decompress_frame_up_9
   12 D1:CE9E D7 D4 D1 -  	.dl decompress_frame_up_10
   13 D1:CEA1 D8 D4 D1 -  	.dl decompress_frame_up_11
   14 D1:CEA4 D9 D4 D1 -  	.dl decompress_frame_up_12
   15 D1:CEA7 DA D4 D1 -  	.dl decompress_frame_up_13
   16 D1:CEAA DB D4 D1 -  	.dl decompress_frame_up_14
   17 D1:CEAD DC D4 D1 -  	.dl decompress_frame_up_15
   18 D1:CEB0 DD D4 D1 -  	.dl decompress_frame_up_16
   19 D1:CEB3 DE D4 D1 -  	.dl decompress_frame_up_17
   20 D1:CEB6 DF D4 D1 -  	.dl decompress_frame_up_18
   21 D1:CEB9 E0 D4 D1 -  	.dl decompress_frame_up_19
   22 D1:CEBC E1 D4 D1 -  	.dl decompress_frame_up_20
   23 D1:CEBF E2 D4 D1 -  	.dl decompress_frame_up_21
   24 D1:CEC2 E3 D4 D1 -  	.dl decompress_frame_up_22
   25 D1:CEC5 E4 D4 D1 -  	.dl decompress_frame_up_23
   26 D1:CEC8 E5 D4 D1 -  	.dl decompress_frame_up_24
   27 D1:CECB E6 D4 D1 -  	.dl decompress_frame_up_25
   28 D1:CECE E7 D4 D1 -  	.dl decompress_frame_up_26
   29 D1:CED1 E8 D4 D1 -  	.dl decompress_frame_up_27
   30 D1:CED4 E9 D4 D1 -  	.dl decompress_frame_up_28
   31 D1:CED7 EA D4 D1 -  	.dl decompress_frame_up_29
   32 D1:CEDA EB D4 D1 -  	.dl decompress_frame_up_30
   33 D1:CEDD EC D4 D1 -  	.dl decompress_frame_up_31
   34 D1:CEE0 ED D4 D1 -  	.dl decompress_frame_up_32
   35 D1:CEE3 EE D4 D1 -  	.dl decompress_frame_up_33
   36 D1:CEE6 EF D4 D1 -  	.dl decompress_frame_up_34
   37 D1:CEE9 F0 D4 D1 -  	.dl decompress_frame_up_35
   38 D1:CEEC F1 D4 D1 -  	.dl decompress_frame_up_36
   39 D1:CEEF F2 D4 D1 -  	.dl decompress_frame_up_37
   40 D1:CEF2 F3 D4 D1 -  	.dl decompress_frame_up_38
   41 D1:CEF5 F4 D4 D1 -  	.dl decompress_frame_up_39
   42 D1:CEF8 F5 D4 D1 -  	.dl decompress_frame_up_40
   43 D1:CEFB F6 D4 D1 -  	.dl decompress_frame_up_41
   44 D1:CEFE F7 D4 D1 -  	.dl decompress_frame_up_42
   45 D1:CF01 F8 D4 D1 -  	.dl decompress_frame_up_43
   46 D1:CF04 F9 D4 D1 -  	.dl decompress_frame_up_44
   47 D1:CF07 FA D4 D1 -  	.dl decompress_frame_up_45
   48 D1:CF0A FB D4 D1 -  	.dl decompress_frame_up_46
   49 D1:CF0D FC D4 D1 -  	.dl decompress_frame_up_47
   50 D1:CF10 FD D4 D1 -  	.dl decompress_frame_up_48
   51 D1:CF13 FE D4 D1 -  	.dl decompress_frame_up_49
   52 D1:CF16 FF D4 D1 -  	.dl decompress_frame_up_50
   53 D1:CF19 00 D5 D1 -  	.dl decompress_frame_up_51
   54 D1:CF1C 01 D5 D1 -  	.dl decompress_frame_up_52
   55 D1:CF1F 02 D5 D1 -  	.dl decompress_frame_up_53
   56 D1:CF22 03 D5 D1 -  	.dl decompress_frame_up_54
   57 D1:CF25 04 D5 D1 -  	.dl decompress_frame_up_55
   58 D1:CF28 05 D5 D1 -  	.dl decompress_frame_up_56
   59 D1:CF2B 06 D5 D1 -  	.dl decompress_frame_up_57
   60 D1:CF2E 07 D5 D1 -  	.dl decompress_frame_up_58
   61 D1:CF31 08 D5 D1 -  	.dl decompress_frame_up_59
   62 D1:CF34 09 D5 D1 -  	.dl decompress_frame_up_60
   63 D1:CF37 0A D5 D1 -  	.dl decompress_frame_up_61
   64 D1:CF3A 0B D5 D1 -  	.dl decompress_frame_up_62
   65 D1:CF3D 0C D5 D1 -  	.dl decompress_frame_up_63
   66 D1:CF40 0D D5 D1 -  	.dl decompress_frame_up_64
   67 D1:CF43 0E D5 D1 -  	.dl decompress_frame_up_65
   68 D1:CF46 0F D5 D1 -  	.dl decompress_frame_up_66
   69 D1:CF49 10 D5 D1 -  	.dl decompress_frame_up_67
   70 D1:CF4C 11 D5 D1 -  	.dl decompress_frame_up_68
   71 D1:CF4F 12 D5 D1 -  	.dl decompress_frame_up_69
   72 D1:CF52 13 D5 D1 -  	.dl decompress_frame_up_70
   73 D1:CF55 14 D5 D1 -  	.dl decompress_frame_up_71
   74 D1:CF58 15 D5 D1 -  	.dl decompress_frame_up_72
   75 D1:CF5B 16 D5 D1 -  	.dl decompress_frame_up_73
   76 D1:CF5E 17 D5 D1 -  	.dl decompress_frame_up_74
   77 D1:CF61 18 D5 D1 -  	.dl decompress_frame_up_75
   78 D1:CF64 19 D5 D1 -  	.dl decompress_frame_up_76
   79 D1:CF67 1A D5 D1 -  	.dl decompress_frame_up_77
   80 D1:CF6A 1B D5 D1 -  	.dl decompress_frame_up_78
   81 D1:CF6D 1C D5 D1 -  	.dl decompress_frame_up_79
   82 D1:CF70 1D D5 D1 -  	.dl decompress_frame_up_80
   83 D1:CF73 1E D5 D1 -  	.dl decompress_frame_up_81
   84 D1:CF76 1F D5 D1 -  	.dl decompress_frame_up_82
   85 D1:CF79 20 D5 D1 -  	.dl decompress_frame_up_83
   86 D1:CF7C 21 D5 D1 -  	.dl decompress_frame_up_84
   87 D1:CF7F 22 D5 D1 -  	.dl decompress_frame_up_85
   88 D1:CF82 23 D5 D1 -  	.dl decompress_frame_up_86
   89 D1:CF85 24 D5 D1 -  	.dl decompress_frame_up_87
   90 D1:CF88 25 D5 D1 -  	.dl decompress_frame_up_88
   91 D1:CF8B 26 D5 D1 -  	.dl decompress_frame_up_89
   92 D1:CF8E -  -  -  -  
   93 D1:CF8E -  -  -  -  
   94 D1:CF8E -  -  -  -  decompress_calls_table_down:
   95 D1:CF8E 27 D5 D1 -  	.dl decompress_frame_down_0
   96 D1:CF91 28 D5 D1 -  	.dl decompress_frame_down_1
   97 D1:CF94 29 D5 D1 -  	.dl decompress_frame_down_2
   98 D1:CF97 5B D5 D1 -  	.dl decompress_frame_down_3
   99 D1:CF9A 5C D5 D1 -  	.dl decompress_frame_down_4
  100 D1:CF9D 72 D5 D1 -  	.dl decompress_frame_down_5
  101 D1:CFA0 73 D5 D1 -  	.dl decompress_frame_down_6
  102 D1:CFA3 D6 D5 D1 -  	.dl decompress_frame_down_7
  103 D1:CFA6 D7 D5 D1 -  	.dl decompress_frame_down_8
  104 D1:CFA9 ED D5 D1 -  	.dl decompress_frame_down_9
  105 D1:CFAC EE D5 D1 -  	.dl decompress_frame_down_10
  106 D1:CFAF 43 D6 D1 -  	.dl decompress_frame_down_11
  107 D1:CFB2 6E D6 D1 -  	.dl decompress_frame_down_12
  108 D1:CFB5 4F D7 D1 -  	.dl decompress_frame_down_13
  109 D1:CFB8 50 D7 D1 -  	.dl decompress_frame_down_14
  110 D1:CFBB F2 D7 D1 -  	.dl decompress_frame_down_15
  111 D1:CFBE F3 D7 D1 -  	.dl decompress_frame_down_16
  112 D1:CFC1 6B D8 D1 -  	.dl decompress_frame_down_17
  113 D1:CFC4 6C D8 D1 -  	.dl decompress_frame_down_18
  114 D1:CFC7 6D D8 D1 -  	.dl decompress_frame_down_19
  115 D1:CFCA 6E D8 D1 -  	.dl decompress_frame_down_20
  116 D1:CFCD 6F D8 D1 -  	.dl decompress_frame_down_21
  117 D1:CFD0 70 D8 D1 -  	.dl decompress_frame_down_22
  118 D1:CFD3 71 D8 D1 -  	.dl decompress_frame_down_23
  119 D1:CFD6 72 D8 D1 -  	.dl decompress_frame_down_24
  120 D1:CFD9 B9 D8 D1 -  	.dl decompress_frame_down_25
  121 D1:CFDC BA D8 D1 -  	.dl decompress_frame_down_26
  122 D1:CFDF BB D8 D1 -  	.dl decompress_frame_down_27
  123 D1:CFE2 BC D8 D1 -  	.dl decompress_frame_down_28
  124 D1:CFE5 BD D8 D1 -  	.dl decompress_frame_down_29
  125 D1:CFE8 BE D8 D1 -  	.dl decompress_frame_down_30
  126 D1:CFEB BF D8 D1 -  	.dl decompress_frame_down_31
  127 D1:CFEE C0 D8 D1 -  	.dl decompress_frame_down_32
  128 D1:CFF1 C1 D8 D1 -  	.dl decompress_frame_down_33
  129 D1:CFF4 C2 D8 D1 -  	.dl decompress_frame_down_34
  130 D1:CFF7 C3 D8 D1 -  	.dl decompress_frame_down_35
  131 D1:CFFA C4 D8 D1 -  	.dl decompress_frame_down_36
  132 D1:CFFD C5 D8 D1 -  	.dl decompress_frame_down_37
  133 D1:D000 C6 D8 D1 -  	.dl decompress_frame_down_38
  134 D1:D003 C7 D8 D1 -  	.dl decompress_frame_down_39
  135 D1:D006 C8 D8 D1 -  	.dl decompress_frame_down_40
  136 D1:D009 C9 D8 D1 -  	.dl decompress_frame_down_41
  137 D1:D00C CA D8 D1 -  	.dl decompress_frame_down_42
  138 D1:D00F CB D8 D1 -  	.dl decompress_frame_down_43
  139 D1:D012 CC D8 D1 -  	.dl decompress_frame_down_44
  140 D1:D015 CD D8 D1 -  	.dl decompress_frame_down_45
  141 D1:D018 CE D8 D1 -  	.dl decompress_frame_down_46
  142 D1:D01B CF D8 D1 -  	.dl decompress_frame_down_47
  143 D1:D01E D0 D8 D1 -  	.dl decompress_frame_down_48
  144 D1:D021 D1 D8 D1 -  	.dl decompress_frame_down_49
  145 D1:D024 D2 D8 D1 -  	.dl decompress_frame_down_50
  146 D1:D027 D3 D8 D1 -  	.dl decompress_frame_down_51
  147 D1:D02A D4 D8 D1 -  	.dl decompress_frame_down_52
  148 D1:D02D D5 D8 D1 -  	.dl decompress_frame_down_53
  149 D1:D030 D6 D8 D1 -  	.dl decompress_frame_down_54
  150 D1:D033 D7 D8 D1 -  	.dl decompress_frame_down_55
  151 D1:D036 D8 D8 D1 -  	.dl decompress_frame_down_56
  152 D1:D039 D9 D8 D1 -  	.dl decompress_frame_down_57
  153 D1:D03C DA D8 D1 -  	.dl decompress_frame_down_58
  154 D1:D03F DB D8 D1 -  	.dl decompress_frame_down_59
  155 D1:D042 DC D8 D1 -  	.dl decompress_frame_down_60
  156 D1:D045 DD D8 D1 -  	.dl decompress_frame_down_61
  157 D1:D048 DE D8 D1 -  	.dl decompress_frame_down_62
  158 D1:D04B DF D8 D1 -  	.dl decompress_frame_down_63
  159 D1:D04E E0 D8 D1 -  	.dl decompress_frame_down_64
  160 D1:D051 E1 D8 D1 -  	.dl decompress_frame_down_65
  161 D1:D054 E2 D8 D1 -  	.dl decompress_frame_down_66
  162 D1:D057 E3 D8 D1 -  	.dl decompress_frame_down_67
  163 D1:D05A E4 D8 D1 -  	.dl decompress_frame_down_68
  164 D1:D05D E5 D8 D1 -  	.dl decompress_frame_down_69
  165 D1:D060 E6 D8 D1 -  	.dl decompress_frame_down_70
  166 D1:D063 E7 D8 D1 -  	.dl decompress_frame_down_71
  167 D1:D066 E8 D8 D1 -  	.dl decompress_frame_down_72
  168 D1:D069 E9 D8 D1 -  	.dl decompress_frame_down_73
  169 D1:D06C EA D8 D1 -  	.dl decompress_frame_down_74
  170 D1:D06F EB D8 D1 -  	.dl decompress_frame_down_75
  171 D1:D072 EC D8 D1 -  	.dl decompress_frame_down_76
  172 D1:D075 ED D8 D1 -  	.dl decompress_frame_down_77
  173 D1:D078 EE D8 D1 -  	.dl decompress_frame_down_78
  174 D1:D07B EF D8 D1 -  	.dl decompress_frame_down_79
  175 D1:D07E F0 D8 D1 -  	.dl decompress_frame_down_80
  176 D1:D081 F1 D8 D1 -  	.dl decompress_frame_down_81
  177 D1:D084 F2 D8 D1 -  	.dl decompress_frame_down_82
  178 D1:D087 F3 D8 D1 -  	.dl decompress_frame_down_83
  179 D1:D08A F4 D8 D1 -  	.dl decompress_frame_down_84
  180 D1:D08D F5 D8 D1 -  	.dl decompress_frame_down_85
  181 D1:D090 F6 D8 D1 -  	.dl decompress_frame_down_86
  182 D1:D093 F7 D8 D1 -  	.dl decompress_frame_down_87
  183 D1:D096 F8 D8 D1 -  	.dl decompress_frame_down_88
  184 D1:D099 F9 D8 D1 -  	.dl decompress_frame_down_89
  185 D1:D09C -  -  -  -  
  186 D1:D09C -  -  -  -  
  187 D1:D09C -  -  -  -  
  188 D1:D09C -  -  -  -  decompress_frame_up_pre2:
  189 D1:D09C 11 -  -  -  	.db 17
  190 D1:D09D 2B EF D1 C1 
              01 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_O
  191 D1:D0A3 40 -  -  -  	.db %01000000
  192 D1:D0A4 2B EF D1 E7 
              02 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_F
  193 D1:D0AA 20 -  -  -  	.db %00100000
  194 D1:D0AB 2B EF D1 0D 
              04 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_O_F
  195 D1:D0B1 60 -  -  -  	.db %01100000
  196 D1:D0B2 FA EF D1 2D 
              05 D4 -  -  	.dl FrogJump, FrogJump_Slow
  197 D1:D0B8 00 -  -  -  	.db %00000000
  198 D1:D0B9 FA EF D1 A5 
              06 D4 -  -  	.dl FrogJump, FrogJump_Slow_O
  199 D1:D0BF 40 -  -  -  	.db %01000000
  200 D1:D0C0 FA EF D1 27 
              08 D4 -  -  	.dl FrogJump, FrogJump_Slow_F
  201 D1:D0C6 20 -  -  -  	.db %00100000
  202 D1:D0C7 FA EF D1 9F 
              09 D4 -  -  	.dl FrogJump, FrogJump_Slow_O_F
  203 D1:D0CD 60 -  -  -  	.db %01100000
  204 D1:D0CE 13 F1 D1 21 
              0B D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow
  205 D1:D0D4 00 -  -  -  	.db %00000000
  206 D1:D0D5 13 F1 D1 99 
              0C D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_O
  207 D1:D0DB 40 -  -  -  	.db %01000000
  208 D1:D0DC 13 F1 D1 1B 
              0E D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_F
  209 D1:D0E2 20 -  -  -  	.db %00100000
  210 D1:D0E3 13 F1 D1 93 
              0F D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_O_F
  211 D1:D0E9 60 -  -  -  	.db %01100000
  212 D1:D0EA 2C F2 D1 15 
              11 D4 -  -  	.dl FrogFall, FrogFall_Slow
  213 D1:D0F0 00 -  -  -  	.db %00000000
  214 D1:D0F1 2C F2 D1 85 
              12 D4 -  -  	.dl FrogFall, FrogFall_Slow_O
  215 D1:D0F7 40 -  -  -  	.db %01000000
  216 D1:D0F8 2C F2 D1 FF 
              13 D4 -  -  	.dl FrogFall, FrogFall_Slow_F
  217 D1:D0FE 20 -  -  -  	.db %00100000
  218 D1:D0FF 2C F2 D1 6F 
              15 D4 -  -  	.dl FrogFall, FrogFall_Slow_O_F
  219 D1:D105 60 -  -  -  	.db %01100000
  220 D1:D106 12 F3 D1 E9 
              16 D4 -  -  	.dl FrogTongue, FrogTongue_Slow
  221 D1:D10C 00 -  -  -  	.db %00000000
  222 D1:D10D 12 F3 D1 2F 
              17 D4 -  -  	.dl FrogTongue, FrogTongue_Slow_O
  223 D1:D113 40 -  -  -  	.db %01000000
  224 D1:D114 -  -  -  -  
  225 D1:D114 -  -  -  -  decompress_frame_up_pre1:
  226 D1:D114 40 -  -  -  	.db 64
  227 D1:D115 A0 E2 D1 78 
              17 D4 -  -  	.dl Branches_5, Branches_5_Fast
  228 D1:D11B 80 -  -  -  	.db %10000000
  229 D1:D11C FE E2 D1 18 
              18 D4 -  -  	.dl Branches_3, Branches_3_Fast
  230 D1:D122 80 -  -  -  	.db %10000000
  231 D1:D123 5E E3 D1 C0 
              18 D4 -  -  	.dl Branches_2, Branches_2_Fast
  232 D1:D129 80 -  -  -  	.db %10000000
  233 D1:D12A F7 E8 D1 6A 
              19 D4 -  -  	.dl Tree_11, Tree_11_Fast
  234 D1:D130 80 -  -  -  	.db %10000000
  235 D1:D131 8A E8 D1 6C 
              1A D4 -  -  	.dl Tree_5, Tree_5_Fast_F
  236 D1:D137 A0 -  -  -  	.db %10100000
  237 D1:D138 4D E4 D1 6E 
              1B D4 -  -  	.dl Tree_2, Tree_2_Fast_F
  238 D1:D13E A0 -  -  -  	.db %10100000
  239 D1:D13F F7 E8 D1 6A 
              1C D4 -  -  	.dl Tree_11, Tree_11_Fast_F
  240 D1:D145 A0 -  -  -  	.db %10100000
  241 D1:D146 64 E9 D1 6C 
              1D D4 -  -  	.dl Branches_1, Branches_1_Fast
  242 D1:D14C 80 -  -  -  	.db %10000000
  243 D1:D14D BF E9 D1 05 
              1E D4 -  -  	.dl Vine2, Vine2_Slow
  244 D1:D153 00 -  -  -  	.db %00000000
  245 D1:D154 E3 E9 D1 A5 
              1E D4 -  -  	.dl VineVertical, VineVertical_Slow_O
  246 D1:D15A 40 -  -  -  	.db %01000000
  247 D1:D15B E3 E9 D1 51 
              1F D4 -  -  	.dl VineVertical, VineVertical_Slow
  248 D1:D161 00 -  -  -  	.db %00000000
  249 D1:D162 09 EA D1 FF 
              1F D4 -  -  	.dl Vine4, Vine4_Slow_F
  250 D1:D168 20 -  -  -  	.db %00100000
  251 D1:D169 09 EA D1 BF 
              20 D4 -  -  	.dl Vine4, Vine4_Slow_O_F
  252 D1:D16F 60 -  -  -  	.db %01100000
  253 D1:D170 45 EA D1 7F 
              21 D4 -  -  	.dl Vine5, Vine5_Slow_O_F
  254 D1:D176 60 -  -  -  	.db %01100000
  255 D1:D177 7D EA D1 3F 
              22 D4 -  -  	.dl Vine6, Vine6_Slow_O
  256 D1:D17D 40 -  -  -  	.db %01000000
  257 D1:D17E A9 EA D1 E5 
              22 D4 -  -  	.dl Vine7, Vine7_Slow
  258 D1:D184 00 -  -  -  	.db %00000000
  259 D1:D185 45 EA D1 6B 
              23 D4 -  -  	.dl Vine5, Vine5_Slow
  260 D1:D18B 00 -  -  -  	.db %00000000
  261 D1:D18C 7D EA D1 29 
              24 D4 -  -  	.dl Vine6, Vine6_Slow
  262 D1:D192 00 -  -  -  	.db %00000000
  263 D1:D193 09 EA D1 CD 
              24 D4 -  -  	.dl Vine4, Vine4_Slow
  264 D1:D199 00 -  -  -  	.db %00000000
  265 D1:D19A A9 EA D1 8D 
              25 D4 -  -  	.dl Vine7, Vine7_Slow_O
  266 D1:D1A0 40 -  -  -  	.db %01000000
  267 D1:D1A1 45 EA D1 0D 
              26 D4 -  -  	.dl Vine5, Vine5_Slow_O
  268 D1:D1A7 40 -  -  -  	.db %01000000
  269 D1:D1A8 09 EA D1 CB 
              26 D4 -  -  	.dl Vine4, Vine4_Slow_O
  270 D1:D1AE 40 -  -  -  	.db %01000000
  271 D1:D1AF 64 E9 D1 8A 
              27 D4 -  -  	.dl Branches_1, Branches_1_Fast_F
  272 D1:D1B5 A0 -  -  -  	.db %10100000
  273 D1:D1B6 5E E3 D1 22 
              28 D4 -  -  	.dl Branches_2, Branches_2_Fast_F
  274 D1:D1BC A0 -  -  -  	.db %10100000
  275 D1:D1BD A0 E2 D1 CC 
              28 D4 -  -  	.dl Branches_5, Branches_5_Fast_F
  276 D1:D1C3 A0 -  -  -  	.db %10100000
  277 D1:D1C4 22 EB D1 6C 
              29 D4 -  -  	.dl Platforms_0, Platforms_0_Fast
  278 D1:D1CA 80 -  -  -  	.db %10000000
  279 D1:D1CB 54 EB D1 E2 
              29 D4 -  -  	.dl Platforms_1, Platforms_1_Fast
  280 D1:D1D1 80 -  -  -  	.db %10000000
  281 D1:D1D2 22 EB D1 58 
              2A D4 -  -  	.dl Platforms_0, Platforms_0_Fast_F
  282 D1:D1D8 A0 -  -  -  	.db %10100000
  283 D1:D1D9 86 EB D1 CF 
              2A D4 -  -  	.dl Platforms_2, Platforms_2_Slow_O_F
  284 D1:D1DF 60 -  -  -  	.db %01100000
  285 D1:D1E0 86 EB D1 4B 
              2B D4 -  -  	.dl Platforms_2, Platforms_2_Slow_O
  286 D1:D1E6 40 -  -  -  	.db %01000000
  287 D1:D1E7 B9 EB D1 C6 
              2B D4 -  -  	.dl Spikes_0, Spikes_0_Fast
  288 D1:D1ED 80 -  -  -  	.db %10000000
  289 D1:D1EE 03 EC D1 47 
              2C D4 -  -  	.dl TongueRing1, TongueRing1_Slow
  290 D1:D1F4 00 -  -  -  	.db %00000000
  291 D1:D1F5 22 EC D1 CB 
              2C D4 -  -  	.dl TongueRing2, TongueRing2_Slow
  292 D1:D1FB 00 -  -  -  	.db %00000000
  293 D1:D1FC 03 EC D1 4F 
              2D D4 -  -  	.dl TongueRing1, TongueRing1_Slow_F
  294 D1:D202 20 -  -  -  	.db %00100000
  295 D1:D203 22 EC D1 D3 
              2D D4 -  -  	.dl TongueRing2, TongueRing2_Slow_F
  296 D1:D209 20 -  -  -  	.db %00100000
  297 D1:D20A 41 EC D1 56 
              2E D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast
  298 D1:D210 80 -  -  -  	.db %10000000
  299 D1:D211 41 EC D1 DC 
              2E D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast_F
  300 D1:D217 A0 -  -  -  	.db %10100000
  301 D1:D218 76 EC D1 62 
              2F D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast
  302 D1:D21E 80 -  -  -  	.db %10000000
  303 D1:D21F 76 EC D1 E8 
              2F D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast_F
  304 D1:D225 A0 -  -  -  	.db %10100000
  305 D1:D226 C4 EC D1 6E 
              30 D4 -  -  	.dl Tree_16, Tree_16_Fast
  306 D1:D22C 80 -  -  -  	.db %10000000
  307 D1:D22D DC EC D1 C3 
              30 D4 -  -  	.dl Tree_17, Tree_17_Slow
  308 D1:D233 00 -  -  -  	.db %00000000
  309 D1:D234 DC EC D1 29 
              31 D4 -  -  	.dl Tree_17, Tree_17_Slow_O_F
  310 D1:D23A 60 -  -  -  	.db %01100000
  311 D1:D23B ED EC D1 8F 
              31 D4 -  -  	.dl Tree_18, Tree_18_Slow
  312 D1:D241 00 -  -  -  	.db %00000000
  313 D1:D242 ED EC D1 F3 
              31 D4 -  -  	.dl Tree_18, Tree_18_Slow_O_F
  314 D1:D248 60 -  -  -  	.db %01100000
  315 D1:D249 C4 EC D1 58 
              32 D4 -  -  	.dl Tree_16, Tree_16_Fast_F
  316 D1:D24F A0 -  -  -  	.db %10100000
  317 D1:D250 FE EC D1 AE 
              32 D4 -  -  	.dl Clouds_0, Clouds_0_Fast
  318 D1:D256 80 -  -  -  	.db %10000000
  319 D1:D257 27 ED D1 14 
              33 D4 -  -  	.dl Clouds_1, Clouds_1_Fast
  320 D1:D25D 80 -  -  -  	.db %10000000
  321 D1:D25E 4E ED D1 78 
              33 D4 -  -  	.dl Clouds_3, Clouds_3_Fast
  322 D1:D264 80 -  -  -  	.db %10000000
  323 D1:D265 7A ED D1 E4 
              33 D4 -  -  	.dl Clouds_4, Clouds_4_Fast
  324 D1:D26B 80 -  -  -  	.db %10000000
  325 D1:D26C 91 ED D1 24 
              34 D4 -  -  	.dl Clouds_2, Clouds_2_Fast
  326 D1:D272 80 -  -  -  	.db %10000000
  327 D1:D273 FE EC D1 D6 
              34 D4 -  -  	.dl Clouds_0, Clouds_0_Fast_F
  328 D1:D279 A0 -  -  -  	.db %10100000
  329 D1:D27A 27 ED D1 3C 
              35 D4 -  -  	.dl Clouds_1, Clouds_1_Fast_F
  330 D1:D280 A0 -  -  -  	.db %10100000
  331 D1:D281 7A ED D1 A0 
              35 D4 -  -  	.dl Clouds_4, Clouds_4_Fast_F
  332 D1:D287 A0 -  -  -  	.db %10100000
  333 D1:D288 4E ED D1 E0 
              35 D4 -  -  	.dl Clouds_3, Clouds_3_Fast_F
  334 D1:D28E A0 -  -  -  	.db %10100000
  335 D1:D28F 91 ED D1 4C 
              36 D4 -  -  	.dl Clouds_2, Clouds_2_Fast_F
  336 D1:D295 A0 -  -  -  	.db %10100000
  337 D1:D296 B5 ED D1 FD 
              36 D4 -  -  	.dl FrogDefault, FrogDefault_Slow
  338 D1:D29C 00 -  -  -  	.db %00000000
  339 D1:D29D B5 ED D1 2D 
              38 D4 -  -  	.dl FrogDefault, FrogDefault_Slow_O
  340 D1:D2A3 40 -  -  -  	.db %01000000
  341 D1:D2A4 B5 ED D1 5D 
              39 D4 -  -  	.dl FrogDefault, FrogDefault_Slow_F
  342 D1:D2AA 20 -  -  -  	.db %00100000
  343 D1:D2AB B5 ED D1 8D 
              3A D4 -  -  	.dl FrogDefault, FrogDefault_Slow_O_F
  344 D1:D2B1 60 -  -  -  	.db %01100000
  345 D1:D2B2 8D EE D1 BD 
              3B D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow
  346 D1:D2B8 00 -  -  -  	.db %00000000
  347 D1:D2B9 8D EE D1 DD 
              3C D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_O
  348 D1:D2BF 40 -  -  -  	.db %01000000
  349 D1:D2C0 8D EE D1 03 
              3E D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_F
  350 D1:D2C6 20 -  -  -  	.db %00100000
  351 D1:D2C7 8D EE D1 29 
              3F D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_O_F
  352 D1:D2CD 60 -  -  -  	.db %01100000
  353 D1:D2CE 2B EF D1 49 
              40 D4 -  -  	.dl FrogCharge, FrogCharge_Slow
  354 D1:D2D4 00 -  -  -  	.db %00000000
  355 D1:D2D5 -  -  -  -  
  356 D1:D2D5 -  -  -  -  decompress_frame_up_0:
  357 D1:D2D5 40 -  -  -  	.db 64
  358 D1:D2D6 B8 DB D1 6A 
              41 D4 -  -  	.dl BigGrassBase, BigGrassBase_Fast
  359 D1:D2DC 80 -  -  -  	.db %10000000
  360 D1:D2DD 51 DC D1 D2 
              42 D4 -  -  	.dl BigGrassTop, BigGrassTop_Fast
  361 D1:D2E3 80 -  -  -  	.db %10000000
  362 D1:D2E4 B8 DB D1 C7 
              43 D4 -  -  	.dl BigGrassBase, BigGrassBase_Slow_O
  363 D1:D2EA 40 -  -  -  	.db %01000000
  364 D1:D2EB B8 DB D1 7E 
              45 D4 -  -  	.dl BigGrassBase, BigGrassBase_Fast_F
  365 D1:D2F1 A0 -  -  -  	.db %10100000
  366 D1:D2F2 51 DC D1 E6 
              46 D4 -  -  	.dl BigGrassTop, BigGrassTop_Fast_F
  367 D1:D2F8 A0 -  -  -  	.db %10100000
  368 D1:D2F9 51 DC D1 DB 
              47 D4 -  -  	.dl BigGrassTop, BigGrassTop_Slow_O
  369 D1:D2FF 40 -  -  -  	.db %01000000
  370 D1:D300 CC DC D1 15 
              49 D4 -  -  	.dl DualLeaf4, DualLeaf4_Slow
  371 D1:D306 00 -  -  -  	.db %00000000
  372 D1:D307 CC DC D1 C5 
              49 D4 -  -  	.dl DualLeaf4, DualLeaf4_Slow_F
  373 D1:D30D 20 -  -  -  	.db %00100000
  374 D1:D30E 06 DD D1 76 
              4A D4 -  -  	.dl DualLeaf3, DualLeaf3_Fast
  375 D1:D314 80 -  -  -  	.db %10000000
  376 D1:D315 3C DD D1 EE 
              4A D4 -  -  	.dl Branches_10, Branches_10_Fast
  377 D1:D31B 80 -  -  -  	.db %10000000
  378 D1:D31C 86 DD D1 66 
              4B D4 -  -  	.dl Branches_9, Branches_9_Fast
  379 D1:D322 80 -  -  -  	.db %10000000
  380 D1:D323 D6 DD D1 E9 
              4B D4 -  -  	.dl Branches_16, Branches_16_Slow
  381 D1:D329 00 -  -  -  	.db %00000000
  382 D1:D32A 03 DE D1 56 
              4C D4 -  -  	.dl Branches_13, Branches_13_Fast
  383 D1:D330 80 -  -  -  	.db %10000000
  384 D1:D331 21 DE D1 88 
              4C D4 -  -  	.dl Leaves1, Leaves1_Fast
  385 D1:D337 80 -  -  -  	.db %10000000
  386 D1:D338 D7 DE D1 A0 
              4D D4 -  -  	.dl DualLeaf1, DualLeaf1_Fast
  387 D1:D33E 80 -  -  -  	.db %10000000
  388 D1:D33F 02 DF D1 10 
              4E D4 -  -  	.dl DualLeaf2, DualLeaf2_Fast
  389 D1:D345 80 -  -  -  	.db %10000000
  390 D1:D346 02 DF D1 81 
              4E D4 -  -  	.dl DualLeaf2, DualLeaf2_Slow_O
  391 D1:D34C 40 -  -  -  	.db %01000000
  392 D1:D34D D7 DE D1 2B 
              4F D4 -  -  	.dl DualLeaf1, DualLeaf1_Slow_O
  393 D1:D353 40 -  -  -  	.db %01000000
  394 D1:D354 31 DF D1 D3 
              4F D4 -  -  	.dl Branches_6, Branches_6_Slow
  395 D1:D35A 00 -  -  -  	.db %00000000
  396 D1:D35B 3C DD D1 70 
              50 D4 -  -  	.dl Branches_10, Branches_10_Fast_F
  397 D1:D361 A0 -  -  -  	.db %10100000
  398 D1:D362 7B DF D1 E8 
              50 D4 -  -  	.dl Branches_7, Branches_7_Fast
  399 D1:D368 80 -  -  -  	.db %10000000
  400 D1:D369 C0 DF D1 61 
              51 D4 -  -  	.dl Branches_15, Branches_15_Slow
  401 D1:D36F 00 -  -  -  	.db %00000000
  402 D1:D370 E4 DF D1 D2 
              51 D4 -  -  	.dl Branches_8, Branches_8_Fast_F
  403 D1:D376 A0 -  -  -  	.db %10100000
  404 D1:D377 15 E0 D1 30 
              52 D4 -  -  	.dl Branches_12, Branches_12_Fast
  405 D1:D37D 80 -  -  -  	.db %10000000
  406 D1:D37E C0 DF D1 8B 
              52 D4 -  -  	.dl Branches_15, Branches_15_Slow_O_F
  407 D1:D384 60 -  -  -  	.db %01100000
  408 D1:D385 4F E0 D1 FC 
              52 D4 -  -  	.dl LeavesDark, LeavesDark_Fast
  409 D1:D38B 80 -  -  -  	.db %10000000
  410 D1:D38C 4F E0 D1 14 
              54 D4 -  -  	.dl LeavesDark, LeavesDark_Fast_F
  411 D1:D392 A0 -  -  -  	.db %10100000
  412 D1:D393 CE E0 D1 2C 
              55 D4 -  -  	.dl Leaves2, Leaves2_Fast
  413 D1:D399 80 -  -  -  	.db %10000000
  414 D1:D39A CE E0 D1 18 
              56 D4 -  -  	.dl Leaves2, Leaves2_Fast_F
  415 D1:D3A0 A0 -  -  -  	.db %10100000
  416 D1:D3A1 66 E1 D1 04 
              57 D4 -  -  	.dl LeavesLight, LeavesLight_Fast
  417 D1:D3A7 80 -  -  -  	.db %10000000
  418 D1:D3A8 E4 DF D1 1C 
              58 D4 -  -  	.dl Branches_8, Branches_8_Fast
  419 D1:D3AE 80 -  -  -  	.db %10000000
  420 D1:D3AF E5 E1 D1 7A 
              58 D4 -  -  	.dl Branches_11, Branches_11_Fast_F
  421 D1:D3B5 A0 -  -  -  	.db %10100000
  422 D1:D3B6 D6 DD D1 E1 
              58 D4 -  -  	.dl Branches_16, Branches_16_Slow_O_F
  423 D1:D3BC 60 -  -  -  	.db %01100000
  424 D1:D3BD 03 DE D1 4E 
              59 D4 -  -  	.dl Branches_13, Branches_13_Fast_F
  425 D1:D3C3 A0 -  -  -  	.db %10100000
  426 D1:D3C4 23 E2 D1 7F 
              59 D4 -  -  	.dl Branches_14, Branches_14_Slow
  427 D1:D3CA 00 -  -  -  	.db %00000000
  428 D1:D3CB 42 E2 D1 EC 
              59 D4 -  -  	.dl Branches_4, Branches_4_Fast_F
  429 D1:D3D1 A0 -  -  -  	.db %10100000
  430 D1:D3D2 7B DF D1 8A 
              5A D4 -  -  	.dl Branches_7, Branches_7_Fast_F
  431 D1:D3D8 A0 -  -  -  	.db %10100000
  432 D1:D3D9 15 E0 D1 04 
              5B D4 -  -  	.dl Branches_12, Branches_12_Fast_F
  433 D1:D3DF A0 -  -  -  	.db %10100000
  434 D1:D3E0 21 DE D1 60 
              5B D4 -  -  	.dl Leaves1, Leaves1_Fast_F
  435 D1:D3E6 A0 -  -  -  	.db %10100000
  436 D1:D3E7 BE E3 D1 78 
              5C D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast_F
  437 D1:D3ED A0 -  -  -  	.db %10100000
  438 D1:D3EE BE E3 D1 2A 
              5D D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast
  439 D1:D3F4 80 -  -  -  	.db %10000000
  440 D1:D3F5 03 E4 D1 DC 
              5D D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast
  441 D1:D3FB 80 -  -  -  	.db %10000000
  442 D1:D3FC 03 E4 D1 5C 
              5E D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast_F
  443 D1:D402 A0 -  -  -  	.db %10100000
  444 D1:D403 E4 DF D1 DB 
              5E D4 -  -  	.dl Branches_8, Branches_8_Slow_O_F
  445 D1:D409 60 -  -  -  	.db %01100000
  446 D1:D40A 86 DD D1 63 
              5F D4 -  -  	.dl Branches_9, Branches_9_Slow_O
  447 D1:D410 40 -  -  -  	.db %01000000
  448 D1:D411 4D E4 D1 12 
              60 D4 -  -  	.dl Tree_2, Tree_2_Fast
  449 D1:D417 80 -  -  -  	.db %10000000
  450 D1:D418 B8 E4 D1 0E 
              61 D4 -  -  	.dl Tree_4, Tree_4_Fast
  451 D1:D41E 80 -  -  -  	.db %10000000
  452 D1:D41F 25 E5 D1 10 
              62 D4 -  -  	.dl Tree_7, Tree_7_Fast
  453 D1:D425 80 -  -  -  	.db %10000000
  454 D1:D426 92 E5 D1 12 
              63 D4 -  -  	.dl Tree_9, Tree_9_Fast
  455 D1:D42C 80 -  -  -  	.db %10000000
  456 D1:D42D FF E5 D1 14 
              64 D4 -  -  	.dl Tree_6, Tree_6_Fast_F
  457 D1:D433 A0 -  -  -  	.db %10100000
  458 D1:D434 6C E6 D1 16 
              65 D4 -  -  	.dl Tree_3, Tree_3_Fast_F
  459 D1:D43A A0 -  -  -  	.db %10100000
  460 D1:D43B D9 E6 D1 18 
              66 D4 -  -  	.dl Tree_0, Tree_0_Fast_F
  461 D1:D441 A0 -  -  -  	.db %10100000
  462 D1:D442 6C E6 D1 14 
              67 D4 -  -  	.dl Tree_3, Tree_3_Fast
  463 D1:D448 80 -  -  -  	.db %10000000
  464 D1:D449 44 E7 D1 16 
              68 D4 -  -  	.dl Tree_8, Tree_8_Fast
  465 D1:D44F 80 -  -  -  	.db %10000000
  466 D1:D450 92 E5 D1 18 
              69 D4 -  -  	.dl Tree_9, Tree_9_Fast_F
  467 D1:D456 A0 -  -  -  	.db %10100000
  468 D1:D457 44 E7 D1 1A 
              6A D4 -  -  	.dl Tree_8, Tree_8_Fast_F
  469 D1:D45D A0 -  -  -  	.db %10100000
  470 D1:D45E B8 E4 D1 1C 
              6B D4 -  -  	.dl Tree_4, Tree_4_Fast_F
  471 D1:D464 A0 -  -  -  	.db %10100000
  472 D1:D465 D9 E6 D1 1E 
              6C D4 -  -  	.dl Tree_0, Tree_0_Fast
  473 D1:D46B 80 -  -  -  	.db %10000000
  474 D1:D46C FF E5 D1 1A 
              6D D4 -  -  	.dl Tree_6, Tree_6_Fast
  475 D1:D472 80 -  -  -  	.db %10000000
  476 D1:D473 B1 E7 D1 1C 
              6E D4 -  -  	.dl Tree_10, Tree_10_Fast
  477 D1:D479 80 -  -  -  	.db %10000000
  478 D1:D47A 25 E5 D1 1E 
              6F D4 -  -  	.dl Tree_7, Tree_7_Fast_F
  479 D1:D480 A0 -  -  -  	.db %10100000
  480 D1:D481 1E E8 D1 20 
              70 D4 -  -  	.dl Tree_1, Tree_1_Fast_F
  481 D1:D487 A0 -  -  -  	.db %10100000
  482 D1:D488 1E E8 D1 1E 
              71 D4 -  -  	.dl Tree_1, Tree_1_Fast
  483 D1:D48E 80 -  -  -  	.db %10000000
  484 D1:D48F 8A E8 D1 1C 
              72 D4 -  -  	.dl Tree_5, Tree_5_Fast
  485 D1:D495 80 -  -  -  	.db %10000000
  486 D1:D496 -  -  -  -  
  487 D1:D496 -  -  -  -  decompress_frame_up_1:
  488 D1:D496 00 -  -  -  	.db 0
  489 D1:D497 -  -  -  -  
  490 D1:D497 -  -  -  -  decompress_frame_up_2:
  491 D1:D497 04 -  -  -  	.db 4
  492 D1:D498 64 E9 D1 1D 
              73 D4 -  -  	.dl Branches_1, Branches_1_Slow_O
  493 D1:D49E 40 -  -  -  	.db %01000000
  494 D1:D49F 5E E3 D1 E3 
              73 D4 -  -  	.dl Branches_2, Branches_2_Slow_O
  495 D1:D4A5 40 -  -  -  	.db %01000000
  496 D1:D4A6 42 E2 D1 C3 
              74 D4 -  -  	.dl Branches_4, Branches_4_Slow_O
  497 D1:D4AC 40 -  -  -  	.db %01000000
  498 D1:D4AD 7B DF D1 8F 
              75 D4 -  -  	.dl Branches_7, Branches_7_Slow_O
  499 D1:D4B3 40 -  -  -  	.db %01000000
  500 D1:D4B4 -  -  -  -  
  501 D1:D4B4 -  -  -  -  decompress_frame_up_3:
  502 D1:D4B4 00 -  -  -  	.db 0
  503 D1:D4B5 -  -  -  -  
  504 D1:D4B5 -  -  -  -  decompress_frame_up_4:
  505 D1:D4B5 03 -  -  -  	.db 3
  506 D1:D4B6 CA EA D1 6A 
              41 D4 -  -  	.dl Branches_0, Branches_0_Fast_F
  507 D1:D4BC A0 -  -  -  	.db %10100000
  508 D1:D4BD E4 DF D1 01 
              42 D4 -  -  	.dl Branches_8, Branches_8_Slow_O
  509 D1:D4C3 40 -  -  -  	.db %01000000
  510 D1:D4C4 86 DD D1 8A 
              42 D4 -  -  	.dl Branches_9, Branches_9_Fast_F
  511 D1:D4CA A0 -  -  -  	.db %10100000
  512 D1:D4CB -  -  -  -  
  513 D1:D4CB -  -  -  -  decompress_frame_up_5:
  514 D1:D4CB 01 -  -  -  	.db 1
  515 D1:D4CC 42 E2 D1 0C 
              43 D4 -  -  	.dl Branches_4, Branches_4_Fast
  516 D1:D4D2 80 -  -  -  	.db %10000000
  517 D1:D4D3 -  -  -  -  
  518 D1:D4D3 -  -  -  -  decompress_frame_up_6:
  519 D1:D4D3 00 -  -  -  	.db 0
  520 D1:D4D4 -  -  -  -  
  521 D1:D4D4 -  -  -  -  decompress_frame_up_7:
  522 D1:D4D4 00 -  -  -  	.db 0
  523 D1:D4D5 -  -  -  -  
  524 D1:D4D5 -  -  -  -  decompress_frame_up_8:
  525 D1:D4D5 00 -  -  -  	.db 0
  526 D1:D4D6 -  -  -  -  
  527 D1:D4D6 -  -  -  -  decompress_frame_up_9:
  528 D1:D4D6 00 -  -  -  	.db 0
  529 D1:D4D7 -  -  -  -  
  530 D1:D4D7 -  -  -  -  decompress_frame_up_10:
  531 D1:D4D7 00 -  -  -  	.db 0
  532 D1:D4D8 -  -  -  -  
  533 D1:D4D8 -  -  -  -  decompress_frame_up_11:
  534 D1:D4D8 00 -  -  -  	.db 0
  535 D1:D4D9 -  -  -  -  
  536 D1:D4D9 -  -  -  -  decompress_frame_up_12:
  537 D1:D4D9 00 -  -  -  	.db 0
  538 D1:D4DA -  -  -  -  
  539 D1:D4DA -  -  -  -  decompress_frame_up_13:
  540 D1:D4DA 00 -  -  -  	.db 0
  541 D1:D4DB -  -  -  -  
  542 D1:D4DB -  -  -  -  decompress_frame_up_14:
  543 D1:D4DB 00 -  -  -  	.db 0
  544 D1:D4DC -  -  -  -  
  545 D1:D4DC -  -  -  -  decompress_frame_up_15:
  546 D1:D4DC 00 -  -  -  	.db 0
  547 D1:D4DD -  -  -  -  
  548 D1:D4DD -  -  -  -  decompress_frame_up_16:
  549 D1:D4DD 00 -  -  -  	.db 0
  550 D1:D4DE -  -  -  -  
  551 D1:D4DE -  -  -  -  decompress_frame_up_17:
  552 D1:D4DE 00 -  -  -  	.db 0
  553 D1:D4DF -  -  -  -  
  554 D1:D4DF -  -  -  -  decompress_frame_up_18:
  555 D1:D4DF 00 -  -  -  	.db 0
  556 D1:D4E0 -  -  -  -  
  557 D1:D4E0 -  -  -  -  decompress_frame_up_19:
  558 D1:D4E0 00 -  -  -  	.db 0
  559 D1:D4E1 -  -  -  -  
  560 D1:D4E1 -  -  -  -  decompress_frame_up_20:
  561 D1:D4E1 00 -  -  -  	.db 0
  562 D1:D4E2 -  -  -  -  
  563 D1:D4E2 -  -  -  -  decompress_frame_up_21:
  564 D1:D4E2 00 -  -  -  	.db 0
  565 D1:D4E3 -  -  -  -  
  566 D1:D4E3 -  -  -  -  decompress_frame_up_22:
  567 D1:D4E3 00 -  -  -  	.db 0
  568 D1:D4E4 -  -  -  -  
  569 D1:D4E4 -  -  -  -  decompress_frame_up_23:
  570 D1:D4E4 00 -  -  -  	.db 0
  571 D1:D4E5 -  -  -  -  
  572 D1:D4E5 -  -  -  -  decompress_frame_up_24:
  573 D1:D4E5 00 -  -  -  	.db 0
  574 D1:D4E6 -  -  -  -  
  575 D1:D4E6 -  -  -  -  decompress_frame_up_25:
  576 D1:D4E6 00 -  -  -  	.db 0
  577 D1:D4E7 -  -  -  -  
  578 D1:D4E7 -  -  -  -  decompress_frame_up_26:
  579 D1:D4E7 00 -  -  -  	.db 0
  580 D1:D4E8 -  -  -  -  
  581 D1:D4E8 -  -  -  -  decompress_frame_up_27:
  582 D1:D4E8 00 -  -  -  	.db 0
  583 D1:D4E9 -  -  -  -  
  584 D1:D4E9 -  -  -  -  decompress_frame_up_28:
  585 D1:D4E9 00 -  -  -  	.db 0
  586 D1:D4EA -  -  -  -  
  587 D1:D4EA -  -  -  -  decompress_frame_up_29:
  588 D1:D4EA 00 -  -  -  	.db 0
  589 D1:D4EB -  -  -  -  
  590 D1:D4EB -  -  -  -  decompress_frame_up_30:
  591 D1:D4EB 00 -  -  -  	.db 0
  592 D1:D4EC -  -  -  -  
  593 D1:D4EC -  -  -  -  decompress_frame_up_31:
  594 D1:D4EC 00 -  -  -  	.db 0
  595 D1:D4ED -  -  -  -  
  596 D1:D4ED -  -  -  -  decompress_frame_up_32:
  597 D1:D4ED 00 -  -  -  	.db 0
  598 D1:D4EE -  -  -  -  
  599 D1:D4EE -  -  -  -  decompress_frame_up_33:
  600 D1:D4EE 00 -  -  -  	.db 0
  601 D1:D4EF -  -  -  -  
  602 D1:D4EF -  -  -  -  decompress_frame_up_34:
  603 D1:D4EF 00 -  -  -  	.db 0
  604 D1:D4F0 -  -  -  -  
  605 D1:D4F0 -  -  -  -  decompress_frame_up_35:
  606 D1:D4F0 00 -  -  -  	.db 0
  607 D1:D4F1 -  -  -  -  
  608 D1:D4F1 -  -  -  -  decompress_frame_up_36:
  609 D1:D4F1 00 -  -  -  	.db 0
  610 D1:D4F2 -  -  -  -  
  611 D1:D4F2 -  -  -  -  decompress_frame_up_37:
  612 D1:D4F2 00 -  -  -  	.db 0
  613 D1:D4F3 -  -  -  -  
  614 D1:D4F3 -  -  -  -  decompress_frame_up_38:
  615 D1:D4F3 00 -  -  -  	.db 0
  616 D1:D4F4 -  -  -  -  
  617 D1:D4F4 -  -  -  -  decompress_frame_up_39:
  618 D1:D4F4 00 -  -  -  	.db 0
  619 D1:D4F5 -  -  -  -  
  620 D1:D4F5 -  -  -  -  decompress_frame_up_40:
  621 D1:D4F5 00 -  -  -  	.db 0
  622 D1:D4F6 -  -  -  -  
  623 D1:D4F6 -  -  -  -  decompress_frame_up_41:
  624 D1:D4F6 00 -  -  -  	.db 0
  625 D1:D4F7 -  -  -  -  
  626 D1:D4F7 -  -  -  -  decompress_frame_up_42:
  627 D1:D4F7 00 -  -  -  	.db 0
  628 D1:D4F8 -  -  -  -  
  629 D1:D4F8 -  -  -  -  decompress_frame_up_43:
  630 D1:D4F8 00 -  -  -  	.db 0
  631 D1:D4F9 -  -  -  -  
  632 D1:D4F9 -  -  -  -  decompress_frame_up_44:
  633 D1:D4F9 00 -  -  -  	.db 0
  634 D1:D4FA -  -  -  -  
  635 D1:D4FA -  -  -  -  decompress_frame_up_45:
  636 D1:D4FA 00 -  -  -  	.db 0
  637 D1:D4FB -  -  -  -  
  638 D1:D4FB -  -  -  -  decompress_frame_up_46:
  639 D1:D4FB 00 -  -  -  	.db 0
  640 D1:D4FC -  -  -  -  
  641 D1:D4FC -  -  -  -  decompress_frame_up_47:
  642 D1:D4FC 00 -  -  -  	.db 0
  643 D1:D4FD -  -  -  -  
  644 D1:D4FD -  -  -  -  decompress_frame_up_48:
  645 D1:D4FD 00 -  -  -  	.db 0
  646 D1:D4FE -  -  -  -  
  647 D1:D4FE -  -  -  -  decompress_frame_up_49:
  648 D1:D4FE 00 -  -  -  	.db 0
  649 D1:D4FF -  -  -  -  
  650 D1:D4FF -  -  -  -  decompress_frame_up_50:
  651 D1:D4FF 00 -  -  -  	.db 0
  652 D1:D500 -  -  -  -  
  653 D1:D500 -  -  -  -  decompress_frame_up_51:
  654 D1:D500 00 -  -  -  	.db 0
  655 D1:D501 -  -  -  -  
  656 D1:D501 -  -  -  -  decompress_frame_up_52:
  657 D1:D501 00 -  -  -  	.db 0
  658 D1:D502 -  -  -  -  
  659 D1:D502 -  -  -  -  decompress_frame_up_53:
  660 D1:D502 00 -  -  -  	.db 0
  661 D1:D503 -  -  -  -  
  662 D1:D503 -  -  -  -  decompress_frame_up_54:
  663 D1:D503 00 -  -  -  	.db 0
  664 D1:D504 -  -  -  -  
  665 D1:D504 -  -  -  -  decompress_frame_up_55:
  666 D1:D504 00 -  -  -  	.db 0
  667 D1:D505 -  -  -  -  
  668 D1:D505 -  -  -  -  decompress_frame_up_56:
  669 D1:D505 00 -  -  -  	.db 0
  670 D1:D506 -  -  -  -  
  671 D1:D506 -  -  -  -  decompress_frame_up_57:
  672 D1:D506 00 -  -  -  	.db 0
  673 D1:D507 -  -  -  -  
  674 D1:D507 -  -  -  -  decompress_frame_up_58:
  675 D1:D507 00 -  -  -  	.db 0
  676 D1:D508 -  -  -  -  
  677 D1:D508 -  -  -  -  decompress_frame_up_59:
  678 D1:D508 00 -  -  -  	.db 0
  679 D1:D509 -  -  -  -  
  680 D1:D509 -  -  -  -  decompress_frame_up_60:
  681 D1:D509 00 -  -  -  	.db 0
  682 D1:D50A -  -  -  -  
  683 D1:D50A -  -  -  -  decompress_frame_up_61:
  684 D1:D50A 00 -  -  -  	.db 0
  685 D1:D50B -  -  -  -  
  686 D1:D50B -  -  -  -  decompress_frame_up_62:
  687 D1:D50B 00 -  -  -  	.db 0
  688 D1:D50C -  -  -  -  
  689 D1:D50C -  -  -  -  decompress_frame_up_63:
  690 D1:D50C 00 -  -  -  	.db 0
  691 D1:D50D -  -  -  -  
  692 D1:D50D -  -  -  -  decompress_frame_up_64:
  693 D1:D50D 00 -  -  -  	.db 0
  694 D1:D50E -  -  -  -  
  695 D1:D50E -  -  -  -  decompress_frame_up_65:
  696 D1:D50E 00 -  -  -  	.db 0
  697 D1:D50F -  -  -  -  
  698 D1:D50F -  -  -  -  decompress_frame_up_66:
  699 D1:D50F 00 -  -  -  	.db 0
  700 D1:D510 -  -  -  -  
  701 D1:D510 -  -  -  -  decompress_frame_up_67:
  702 D1:D510 00 -  -  -  	.db 0
  703 D1:D511 -  -  -  -  
  704 D1:D511 -  -  -  -  decompress_frame_up_68:
  705 D1:D511 00 -  -  -  	.db 0
  706 D1:D512 -  -  -  -  
  707 D1:D512 -  -  -  -  decompress_frame_up_69:
  708 D1:D512 00 -  -  -  	.db 0
  709 D1:D513 -  -  -  -  
  710 D1:D513 -  -  -  -  decompress_frame_up_70:
  711 D1:D513 00 -  -  -  	.db 0
  712 D1:D514 -  -  -  -  
  713 D1:D514 -  -  -  -  decompress_frame_up_71:
  714 D1:D514 00 -  -  -  	.db 0
  715 D1:D515 -  -  -  -  
  716 D1:D515 -  -  -  -  decompress_frame_up_72:
  717 D1:D515 00 -  -  -  	.db 0
  718 D1:D516 -  -  -  -  
  719 D1:D516 -  -  -  -  decompress_frame_up_73:
  720 D1:D516 00 -  -  -  	.db 0
  721 D1:D517 -  -  -  -  
  722 D1:D517 -  -  -  -  decompress_frame_up_74:
  723 D1:D517 00 -  -  -  	.db 0
  724 D1:D518 -  -  -  -  
  725 D1:D518 -  -  -  -  decompress_frame_up_75:
  726 D1:D518 00 -  -  -  	.db 0
  727 D1:D519 -  -  -  -  
  728 D1:D519 -  -  -  -  decompress_frame_up_76:
  729 D1:D519 00 -  -  -  	.db 0
  730 D1:D51A -  -  -  -  
  731 D1:D51A -  -  -  -  decompress_frame_up_77:
  732 D1:D51A 00 -  -  -  	.db 0
  733 D1:D51B -  -  -  -  
  734 D1:D51B -  -  -  -  decompress_frame_up_78:
  735 D1:D51B 00 -  -  -  	.db 0
  736 D1:D51C -  -  -  -  
  737 D1:D51C -  -  -  -  decompress_frame_up_79:
  738 D1:D51C 00 -  -  -  	.db 0
  739 D1:D51D -  -  -  -  
  740 D1:D51D -  -  -  -  decompress_frame_up_80:
  741 D1:D51D 00 -  -  -  	.db 0
  742 D1:D51E -  -  -  -  
  743 D1:D51E -  -  -  -  decompress_frame_up_81:
  744 D1:D51E 00 -  -  -  	.db 0
  745 D1:D51F -  -  -  -  
  746 D1:D51F -  -  -  -  decompress_frame_up_82:
  747 D1:D51F 00 -  -  -  	.db 0
  748 D1:D520 -  -  -  -  
  749 D1:D520 -  -  -  -  decompress_frame_up_83:
  750 D1:D520 00 -  -  -  	.db 0
  751 D1:D521 -  -  -  -  
  752 D1:D521 -  -  -  -  decompress_frame_up_84:
  753 D1:D521 00 -  -  -  	.db 0
  754 D1:D522 -  -  -  -  
  755 D1:D522 -  -  -  -  decompress_frame_up_85:
  756 D1:D522 00 -  -  -  	.db 0
  757 D1:D523 -  -  -  -  
  758 D1:D523 -  -  -  -  decompress_frame_up_86:
  759 D1:D523 00 -  -  -  	.db 0
  760 D1:D524 -  -  -  -  
  761 D1:D524 -  -  -  -  decompress_frame_up_87:
  762 D1:D524 00 -  -  -  	.db 0
  763 D1:D525 -  -  -  -  
  764 D1:D525 -  -  -  -  decompress_frame_up_88:
  765 D1:D525 00 -  -  -  	.db 0
  766 D1:D526 -  -  -  -  
  767 D1:D526 -  -  -  -  decompress_frame_up_89:
  768 D1:D526 00 -  -  -  	.db 0
  769 D1:D527 -  -  -  -  
  770 D1:D527 -  -  -  -  
  771 D1:D527 -  -  -  -  
  772 D1:D527 -  -  -  -  decompress_frame_down_0:
  773 D1:D527 00 -  -  -  	.db 0
  774 D1:D528 -  -  -  -  
  775 D1:D528 -  -  -  -  decompress_frame_down_1:
  776 D1:D528 00 -  -  -  	.db 0
  777 D1:D529 -  -  -  -  
  778 D1:D529 -  -  -  -  decompress_frame_down_2:
  779 D1:D529 07 -  -  -  	.db 7
  780 D1:D52A B8 DB D1 6A 
              41 D4 -  -  	.dl BigGrassBase, BigGrassBase_Fast
  781 D1:D530 80 -  -  -  	.db %10000000
  782 D1:D531 51 DC D1 D2 
              42 D4 -  -  	.dl BigGrassTop, BigGrassTop_Fast
  783 D1:D537 80 -  -  -  	.db %10000000
  784 D1:D538 B8 DB D1 C7 
              43 D4 -  -  	.dl BigGrassBase, BigGrassBase_Slow_O
  785 D1:D53E 40 -  -  -  	.db %01000000
  786 D1:D53F B8 DB D1 7E 
              45 D4 -  -  	.dl BigGrassBase, BigGrassBase_Fast_F
  787 D1:D545 A0 -  -  -  	.db %10100000
  788 D1:D546 51 DC D1 E6 
              46 D4 -  -  	.dl BigGrassTop, BigGrassTop_Fast_F
  789 D1:D54C A0 -  -  -  	.db %10100000
  790 D1:D54D 51 DC D1 DB 
              47 D4 -  -  	.dl BigGrassTop, BigGrassTop_Slow_O
  791 D1:D553 40 -  -  -  	.db %01000000
  792 D1:D554 CC DC D1 C5 
              49 D4 -  -  	.dl DualLeaf4, DualLeaf4_Slow_F
  793 D1:D55A 20 -  -  -  	.db %00100000
  794 D1:D55B -  -  -  -  
  795 D1:D55B -  -  -  -  decompress_frame_down_3:
  796 D1:D55B 00 -  -  -  	.db 0
  797 D1:D55C -  -  -  -  
  798 D1:D55C -  -  -  -  decompress_frame_down_4:
  799 D1:D55C 03 -  -  -  	.db 3
  800 D1:D55D E4 DF D1 DB 
              5E D4 -  -  	.dl Branches_8, Branches_8_Slow_O_F
  801 D1:D563 60 -  -  -  	.db %01100000
  802 D1:D564 A9 EA D1 E5 
              22 D4 -  -  	.dl Vine7, Vine7_Slow
  803 D1:D56A 00 -  -  -  	.db %00000000
  804 D1:D56B 09 EA D1 CD 
              24 D4 -  -  	.dl Vine4, Vine4_Slow
  805 D1:D571 00 -  -  -  	.db %00000000
  806 D1:D572 -  -  -  -  
  807 D1:D572 -  -  -  -  decompress_frame_down_5:
  808 D1:D572 00 -  -  -  	.db 0
  809 D1:D573 -  -  -  -  
  810 D1:D573 -  -  -  -  decompress_frame_down_6:
  811 D1:D573 0E -  -  -  	.db 14
  812 D1:D574 BF E9 D1 05 
              1E D4 -  -  	.dl Vine2, Vine2_Slow
  813 D1:D57A 00 -  -  -  	.db %00000000
  814 D1:D57B E3 E9 D1 A5 
              1E D4 -  -  	.dl VineVertical, VineVertical_Slow_O
  815 D1:D581 40 -  -  -  	.db %01000000
  816 D1:D582 E3 E9 D1 51 
              1F D4 -  -  	.dl VineVertical, VineVertical_Slow
  817 D1:D588 00 -  -  -  	.db %00000000
  818 D1:D589 09 EA D1 FF 
              1F D4 -  -  	.dl Vine4, Vine4_Slow_F
  819 D1:D58F 20 -  -  -  	.db %00100000
  820 D1:D590 09 EA D1 BF 
              20 D4 -  -  	.dl Vine4, Vine4_Slow_O_F
  821 D1:D596 60 -  -  -  	.db %01100000
  822 D1:D597 45 EA D1 7F 
              21 D4 -  -  	.dl Vine5, Vine5_Slow_O_F
  823 D1:D59D 60 -  -  -  	.db %01100000
  824 D1:D59E 7D EA D1 3F 
              22 D4 -  -  	.dl Vine6, Vine6_Slow_O
  825 D1:D5A4 40 -  -  -  	.db %01000000
  826 D1:D5A5 45 EA D1 6B 
              23 D4 -  -  	.dl Vine5, Vine5_Slow
  827 D1:D5AB 00 -  -  -  	.db %00000000
  828 D1:D5AC 7D EA D1 29 
              24 D4 -  -  	.dl Vine6, Vine6_Slow
  829 D1:D5B2 00 -  -  -  	.db %00000000
  830 D1:D5B3 A9 EA D1 8D 
              25 D4 -  -  	.dl Vine7, Vine7_Slow_O
  831 D1:D5B9 40 -  -  -  	.db %01000000
  832 D1:D5BA 45 EA D1 0D 
              26 D4 -  -  	.dl Vine5, Vine5_Slow_O
  833 D1:D5C0 40 -  -  -  	.db %01000000
  834 D1:D5C1 09 EA D1 CB 
              26 D4 -  -  	.dl Vine4, Vine4_Slow_O
  835 D1:D5C7 40 -  -  -  	.db %01000000
  836 D1:D5C8 86 EB D1 4B 
              2B D4 -  -  	.dl Platforms_2, Platforms_2_Slow_O
  837 D1:D5CE 40 -  -  -  	.db %01000000
  838 D1:D5CF B9 EB D1 C6 
              2B D4 -  -  	.dl Spikes_0, Spikes_0_Fast
  839 D1:D5D5 80 -  -  -  	.db %10000000
  840 D1:D5D6 -  -  -  -  
  841 D1:D5D6 -  -  -  -  decompress_frame_down_7:
  842 D1:D5D6 00 -  -  -  	.db 0
  843 D1:D5D7 -  -  -  -  
  844 D1:D5D7 -  -  -  -  decompress_frame_down_8:
  845 D1:D5D7 03 -  -  -  	.db 3
  846 D1:D5D8 64 E9 D1 8A 
              27 D4 -  -  	.dl Branches_1, Branches_1_Fast_F
  847 D1:D5DE A0 -  -  -  	.db %10100000
  848 D1:D5DF 5E E3 D1 22 
              28 D4 -  -  	.dl Branches_2, Branches_2_Fast_F
  849 D1:D5E5 A0 -  -  -  	.db %10100000
  850 D1:D5E6 A0 E2 D1 CC 
              28 D4 -  -  	.dl Branches_5, Branches_5_Fast_F
  851 D1:D5EC A0 -  -  -  	.db %10100000
  852 D1:D5ED -  -  -  -  
  853 D1:D5ED -  -  -  -  decompress_frame_down_9:
  854 D1:D5ED 00 -  -  -  	.db 0
  855 D1:D5EE -  -  -  -  
  856 D1:D5EE -  -  -  -  decompress_frame_down_10:
  857 D1:D5EE 0C -  -  -  	.db 12
  858 D1:D5EF 7B DF D1 8A 
              5A D4 -  -  	.dl Branches_7, Branches_7_Fast_F
  859 D1:D5F5 A0 -  -  -  	.db %10100000
  860 D1:D5F6 15 E0 D1 04 
              5B D4 -  -  	.dl Branches_12, Branches_12_Fast_F
  861 D1:D5FC A0 -  -  -  	.db %10100000
  862 D1:D5FD 21 DE D1 60 
              5B D4 -  -  	.dl Leaves1, Leaves1_Fast_F
  863 D1:D603 A0 -  -  -  	.db %10100000
  864 D1:D604 42 E2 D1 0C 
              43 D4 -  -  	.dl Branches_4, Branches_4_Fast
  865 D1:D60A 80 -  -  -  	.db %10000000
  866 D1:D60B 64 E9 D1 1D 
              73 D4 -  -  	.dl Branches_1, Branches_1_Slow_O
  867 D1:D611 40 -  -  -  	.db %01000000
  868 D1:D612 5E E3 D1 E3 
              73 D4 -  -  	.dl Branches_2, Branches_2_Slow_O
  869 D1:D618 40 -  -  -  	.db %01000000
  870 D1:D619 42 E2 D1 C3 
              74 D4 -  -  	.dl Branches_4, Branches_4_Slow_O
  871 D1:D61F 40 -  -  -  	.db %01000000
  872 D1:D620 7B DF D1 8F 
              75 D4 -  -  	.dl Branches_7, Branches_7_Slow_O
  873 D1:D626 40 -  -  -  	.db %01000000
  874 D1:D627 03 EC D1 47 
              2C D4 -  -  	.dl TongueRing1, TongueRing1_Slow
  875 D1:D62D 00 -  -  -  	.db %00000000
  876 D1:D62E 22 EC D1 CB 
              2C D4 -  -  	.dl TongueRing2, TongueRing2_Slow
  877 D1:D634 00 -  -  -  	.db %00000000
  878 D1:D635 03 EC D1 4F 
              2D D4 -  -  	.dl TongueRing1, TongueRing1_Slow_F
  879 D1:D63B 20 -  -  -  	.db %00100000
  880 D1:D63C 22 EC D1 D3 
              2D D4 -  -  	.dl TongueRing2, TongueRing2_Slow_F
  881 D1:D642 20 -  -  -  	.db %00100000
  882 D1:D643 -  -  -  -  
  883 D1:D643 -  -  -  -  decompress_frame_down_11:
  884 D1:D643 06 -  -  -  	.db 6
  885 D1:D644 31 DF D1 D3 
              4F D4 -  -  	.dl Branches_6, Branches_6_Slow
  886 D1:D64A 00 -  -  -  	.db %00000000
  887 D1:D64B E4 DF D1 D2 
              51 D4 -  -  	.dl Branches_8, Branches_8_Fast_F
  888 D1:D651 A0 -  -  -  	.db %10100000
  889 D1:D652 15 E0 D1 30 
              52 D4 -  -  	.dl Branches_12, Branches_12_Fast
  890 D1:D658 80 -  -  -  	.db %10000000
  891 D1:D659 4F E0 D1 14 
              54 D4 -  -  	.dl LeavesDark, LeavesDark_Fast_F
  892 D1:D65F A0 -  -  -  	.db %10100000
  893 D1:D660 CE E0 D1 18 
              56 D4 -  -  	.dl Leaves2, Leaves2_Fast_F
  894 D1:D666 A0 -  -  -  	.db %10100000
  895 D1:D667 42 E2 D1 EC 
              59 D4 -  -  	.dl Branches_4, Branches_4_Fast_F
  896 D1:D66D A0 -  -  -  	.db %10100000
  897 D1:D66E -  -  -  -  
  898 D1:D66E -  -  -  -  decompress_frame_down_12:
  899 D1:D66E 20 -  -  -  	.db 32
  900 D1:D66F CC DC D1 15 
              49 D4 -  -  	.dl DualLeaf4, DualLeaf4_Slow
  901 D1:D675 00 -  -  -  	.db %00000000
  902 D1:D676 3C DD D1 EE 
              4A D4 -  -  	.dl Branches_10, Branches_10_Fast
  903 D1:D67C 80 -  -  -  	.db %10000000
  904 D1:D67D 86 DD D1 66 
              4B D4 -  -  	.dl Branches_9, Branches_9_Fast
  905 D1:D683 80 -  -  -  	.db %10000000
  906 D1:D684 D6 DD D1 E9 
              4B D4 -  -  	.dl Branches_16, Branches_16_Slow
  907 D1:D68A 00 -  -  -  	.db %00000000
  908 D1:D68B 03 DE D1 56 
              4C D4 -  -  	.dl Branches_13, Branches_13_Fast
  909 D1:D691 80 -  -  -  	.db %10000000
  910 D1:D692 21 DE D1 88 
              4C D4 -  -  	.dl Leaves1, Leaves1_Fast
  911 D1:D698 80 -  -  -  	.db %10000000
  912 D1:D699 D7 DE D1 A0 
              4D D4 -  -  	.dl DualLeaf1, DualLeaf1_Fast
  913 D1:D69F 80 -  -  -  	.db %10000000
  914 D1:D6A0 02 DF D1 81 
              4E D4 -  -  	.dl DualLeaf2, DualLeaf2_Slow_O
  915 D1:D6A6 40 -  -  -  	.db %01000000
  916 D1:D6A7 D7 DE D1 2B 
              4F D4 -  -  	.dl DualLeaf1, DualLeaf1_Slow_O
  917 D1:D6AD 40 -  -  -  	.db %01000000
  918 D1:D6AE 3C DD D1 70 
              50 D4 -  -  	.dl Branches_10, Branches_10_Fast_F
  919 D1:D6B4 A0 -  -  -  	.db %10100000
  920 D1:D6B5 7B DF D1 E8 
              50 D4 -  -  	.dl Branches_7, Branches_7_Fast
  921 D1:D6BB 80 -  -  -  	.db %10000000
  922 D1:D6BC C0 DF D1 61 
              51 D4 -  -  	.dl Branches_15, Branches_15_Slow
  923 D1:D6C2 00 -  -  -  	.db %00000000
  924 D1:D6C3 C0 DF D1 8B 
              52 D4 -  -  	.dl Branches_15, Branches_15_Slow_O_F
  925 D1:D6C9 60 -  -  -  	.db %01100000
  926 D1:D6CA CE E0 D1 2C 
              55 D4 -  -  	.dl Leaves2, Leaves2_Fast
  927 D1:D6D0 80 -  -  -  	.db %10000000
  928 D1:D6D1 66 E1 D1 04 
              57 D4 -  -  	.dl LeavesLight, LeavesLight_Fast
  929 D1:D6D7 80 -  -  -  	.db %10000000
  930 D1:D6D8 E4 DF D1 1C 
              58 D4 -  -  	.dl Branches_8, Branches_8_Fast
  931 D1:D6DE 80 -  -  -  	.db %10000000
  932 D1:D6DF E5 E1 D1 7A 
              58 D4 -  -  	.dl Branches_11, Branches_11_Fast_F
  933 D1:D6E5 A0 -  -  -  	.db %10100000
  934 D1:D6E6 D6 DD D1 E1 
              58 D4 -  -  	.dl Branches_16, Branches_16_Slow_O_F
  935 D1:D6EC 60 -  -  -  	.db %01100000
  936 D1:D6ED 03 DE D1 4E 
              59 D4 -  -  	.dl Branches_13, Branches_13_Fast_F
  937 D1:D6F3 A0 -  -  -  	.db %10100000
  938 D1:D6F4 23 E2 D1 7F 
              59 D4 -  -  	.dl Branches_14, Branches_14_Slow
  939 D1:D6FA 00 -  -  -  	.db %00000000
  940 D1:D6FB A0 E2 D1 78 
              17 D4 -  -  	.dl Branches_5, Branches_5_Fast
  941 D1:D701 80 -  -  -  	.db %10000000
  942 D1:D702 FE E2 D1 18 
              18 D4 -  -  	.dl Branches_3, Branches_3_Fast
  943 D1:D708 80 -  -  -  	.db %10000000
  944 D1:D709 5E E3 D1 C0 
              18 D4 -  -  	.dl Branches_2, Branches_2_Fast
  945 D1:D70F 80 -  -  -  	.db %10000000
  946 D1:D710 86 DD D1 63 
              5F D4 -  -  	.dl Branches_9, Branches_9_Slow_O
  947 D1:D716 40 -  -  -  	.db %01000000
  948 D1:D717 64 E9 D1 6C 
              1D D4 -  -  	.dl Branches_1, Branches_1_Fast
  949 D1:D71D 80 -  -  -  	.db %10000000
  950 D1:D71E CA EA D1 6A 
              41 D4 -  -  	.dl Branches_0, Branches_0_Fast_F
  951 D1:D724 A0 -  -  -  	.db %10100000
  952 D1:D725 E4 DF D1 01 
              42 D4 -  -  	.dl Branches_8, Branches_8_Slow_O
  953 D1:D72B 40 -  -  -  	.db %01000000
  954 D1:D72C 86 DD D1 8A 
              42 D4 -  -  	.dl Branches_9, Branches_9_Fast_F
  955 D1:D732 A0 -  -  -  	.db %10100000
  956 D1:D733 22 EB D1 6C 
              29 D4 -  -  	.dl Platforms_0, Platforms_0_Fast
  957 D1:D739 80 -  -  -  	.db %10000000
  958 D1:D73A 54 EB D1 E2 
              29 D4 -  -  	.dl Platforms_1, Platforms_1_Fast
  959 D1:D740 80 -  -  -  	.db %10000000
  960 D1:D741 22 EB D1 58 
              2A D4 -  -  	.dl Platforms_0, Platforms_0_Fast_F
  961 D1:D747 A0 -  -  -  	.db %10100000
  962 D1:D748 86 EB D1 CF 
              2A D4 -  -  	.dl Platforms_2, Platforms_2_Slow_O_F
  963 D1:D74E 60 -  -  -  	.db %01100000
  964 D1:D74F -  -  -  -  
  965 D1:D74F -  -  -  -  decompress_frame_down_13:
  966 D1:D74F 00 -  -  -  	.db 0
  967 D1:D750 -  -  -  -  
  968 D1:D750 -  -  -  -  decompress_frame_down_14:
  969 D1:D750 17 -  -  -  	.db 23
  970 D1:D751 4D E4 D1 12 
              60 D4 -  -  	.dl Tree_2, Tree_2_Fast
  971 D1:D757 80 -  -  -  	.db %10000000
  972 D1:D758 B8 E4 D1 0E 
              61 D4 -  -  	.dl Tree_4, Tree_4_Fast
  973 D1:D75E 80 -  -  -  	.db %10000000
  974 D1:D75F 25 E5 D1 10 
              62 D4 -  -  	.dl Tree_7, Tree_7_Fast
  975 D1:D765 80 -  -  -  	.db %10000000
  976 D1:D766 92 E5 D1 12 
              63 D4 -  -  	.dl Tree_9, Tree_9_Fast
  977 D1:D76C 80 -  -  -  	.db %10000000
  978 D1:D76D FF E5 D1 14 
              64 D4 -  -  	.dl Tree_6, Tree_6_Fast_F
  979 D1:D773 A0 -  -  -  	.db %10100000
  980 D1:D774 6C E6 D1 16 
              65 D4 -  -  	.dl Tree_3, Tree_3_Fast_F
  981 D1:D77A A0 -  -  -  	.db %10100000
  982 D1:D77B D9 E6 D1 18 
              66 D4 -  -  	.dl Tree_0, Tree_0_Fast_F
  983 D1:D781 A0 -  -  -  	.db %10100000
  984 D1:D782 6C E6 D1 14 
              67 D4 -  -  	.dl Tree_3, Tree_3_Fast
  985 D1:D788 80 -  -  -  	.db %10000000
  986 D1:D789 44 E7 D1 16 
              68 D4 -  -  	.dl Tree_8, Tree_8_Fast
  987 D1:D78F 80 -  -  -  	.db %10000000
  988 D1:D790 92 E5 D1 18 
              69 D4 -  -  	.dl Tree_9, Tree_9_Fast_F
  989 D1:D796 A0 -  -  -  	.db %10100000
  990 D1:D797 44 E7 D1 1A 
              6A D4 -  -  	.dl Tree_8, Tree_8_Fast_F
  991 D1:D79D A0 -  -  -  	.db %10100000
  992 D1:D79E B8 E4 D1 1C 
              6B D4 -  -  	.dl Tree_4, Tree_4_Fast_F
  993 D1:D7A4 A0 -  -  -  	.db %10100000
  994 D1:D7A5 D9 E6 D1 1E 
              6C D4 -  -  	.dl Tree_0, Tree_0_Fast
  995 D1:D7AB 80 -  -  -  	.db %10000000
  996 D1:D7AC FF E5 D1 1A 
              6D D4 -  -  	.dl Tree_6, Tree_6_Fast
  997 D1:D7B2 80 -  -  -  	.db %10000000
  998 D1:D7B3 B1 E7 D1 1C 
              6E D4 -  -  	.dl Tree_10, Tree_10_Fast
  999 D1:D7B9 80 -  -  -  	.db %10000000
 1000 D1:D7BA 25 E5 D1 1E 
              6F D4 -  -  	.dl Tree_7, Tree_7_Fast_F
 1001 D1:D7C0 A0 -  -  -  	.db %10100000
 1002 D1:D7C1 1E E8 D1 20 
              70 D4 -  -  	.dl Tree_1, Tree_1_Fast_F
 1003 D1:D7C7 A0 -  -  -  	.db %10100000
 1004 D1:D7C8 1E E8 D1 1E 
              71 D4 -  -  	.dl Tree_1, Tree_1_Fast
 1005 D1:D7CE 80 -  -  -  	.db %10000000
 1006 D1:D7CF 8A E8 D1 1C 
              72 D4 -  -  	.dl Tree_5, Tree_5_Fast
 1007 D1:D7D5 80 -  -  -  	.db %10000000
 1008 D1:D7D6 F7 E8 D1 6A 
              19 D4 -  -  	.dl Tree_11, Tree_11_Fast
 1009 D1:D7DC 80 -  -  -  	.db %10000000
 1010 D1:D7DD 8A E8 D1 6C 
              1A D4 -  -  	.dl Tree_5, Tree_5_Fast_F
 1011 D1:D7E3 A0 -  -  -  	.db %10100000
 1012 D1:D7E4 4D E4 D1 6E 
              1B D4 -  -  	.dl Tree_2, Tree_2_Fast_F
 1013 D1:D7EA A0 -  -  -  	.db %10100000
 1014 D1:D7EB F7 E8 D1 6A 
              1C D4 -  -  	.dl Tree_11, Tree_11_Fast_F
 1015 D1:D7F1 A0 -  -  -  	.db %10100000
 1016 D1:D7F2 -  -  -  -  
 1017 D1:D7F2 -  -  -  -  decompress_frame_down_15:
 1018 D1:D7F2 00 -  -  -  	.db 0
 1019 D1:D7F3 -  -  -  -  
 1020 D1:D7F3 -  -  -  -  decompress_frame_down_16:
 1021 D1:D7F3 11 -  -  -  	.db 17
 1022 D1:D7F4 06 DD D1 76 
              4A D4 -  -  	.dl DualLeaf3, DualLeaf3_Fast
 1023 D1:D7FA 80 -  -  -  	.db %10000000
 1024 D1:D7FB 02 DF D1 10 
              4E D4 -  -  	.dl DualLeaf2, DualLeaf2_Fast
 1025 D1:D801 80 -  -  -  	.db %10000000
 1026 D1:D802 4F E0 D1 FC 
              52 D4 -  -  	.dl LeavesDark, LeavesDark_Fast
 1027 D1:D808 80 -  -  -  	.db %10000000
 1028 D1:D809 BE E3 D1 78 
              5C D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast_F
 1029 D1:D80F A0 -  -  -  	.db %10100000
 1030 D1:D810 BE E3 D1 2A 
              5D D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast
 1031 D1:D816 80 -  -  -  	.db %10000000
 1032 D1:D817 03 E4 D1 DC 
              5D D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast
 1033 D1:D81D 80 -  -  -  	.db %10000000
 1034 D1:D81E 03 E4 D1 5C 
              5E D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast_F
 1035 D1:D824 A0 -  -  -  	.db %10100000
 1036 D1:D825 41 EC D1 56 
              2E D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast
 1037 D1:D82B 80 -  -  -  	.db %10000000
 1038 D1:D82C 41 EC D1 DC 
              2E D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast_F
 1039 D1:D832 A0 -  -  -  	.db %10100000
 1040 D1:D833 76 EC D1 62 
              2F D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast
 1041 D1:D839 80 -  -  -  	.db %10000000
 1042 D1:D83A 76 EC D1 E8 
              2F D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast_F
 1043 D1:D840 A0 -  -  -  	.db %10100000
 1044 D1:D841 C4 EC D1 6E 
              30 D4 -  -  	.dl Tree_16, Tree_16_Fast
 1045 D1:D847 80 -  -  -  	.db %10000000
 1046 D1:D848 DC EC D1 C3 
              30 D4 -  -  	.dl Tree_17, Tree_17_Slow
 1047 D1:D84E 00 -  -  -  	.db %00000000
 1048 D1:D84F DC EC D1 29 
              31 D4 -  -  	.dl Tree_17, Tree_17_Slow_O_F
 1049 D1:D855 60 -  -  -  	.db %01100000
 1050 D1:D856 ED EC D1 8F 
              31 D4 -  -  	.dl Tree_18, Tree_18_Slow
 1051 D1:D85C 00 -  -  -  	.db %00000000
 1052 D1:D85D ED EC D1 F3 
              31 D4 -  -  	.dl Tree_18, Tree_18_Slow_O_F
 1053 D1:D863 60 -  -  -  	.db %01100000
 1054 D1:D864 C4 EC D1 58 
              32 D4 -  -  	.dl Tree_16, Tree_16_Fast_F
 1055 D1:D86A A0 -  -  -  	.db %10100000
 1056 D1:D86B -  -  -  -  
 1057 D1:D86B -  -  -  -  decompress_frame_down_17:
 1058 D1:D86B 00 -  -  -  	.db 0
 1059 D1:D86C -  -  -  -  
 1060 D1:D86C -  -  -  -  decompress_frame_down_18:
 1061 D1:D86C 00 -  -  -  	.db 0
 1062 D1:D86D -  -  -  -  
 1063 D1:D86D -  -  -  -  decompress_frame_down_19:
 1064 D1:D86D 00 -  -  -  	.db 0
 1065 D1:D86E -  -  -  -  
 1066 D1:D86E -  -  -  -  decompress_frame_down_20:
 1067 D1:D86E 00 -  -  -  	.db 0
 1068 D1:D86F -  -  -  -  
 1069 D1:D86F -  -  -  -  decompress_frame_down_21:
 1070 D1:D86F 00 -  -  -  	.db 0
 1071 D1:D870 -  -  -  -  
 1072 D1:D870 -  -  -  -  decompress_frame_down_22:
 1073 D1:D870 00 -  -  -  	.db 0
 1074 D1:D871 -  -  -  -  
 1075 D1:D871 -  -  -  -  decompress_frame_down_23:
 1076 D1:D871 00 -  -  -  	.db 0
 1077 D1:D872 -  -  -  -  
 1078 D1:D872 -  -  -  -  decompress_frame_down_24:
 1079 D1:D872 0A -  -  -  	.db 10
 1080 D1:D873 FE EC D1 AE 
              32 D4 -  -  	.dl Clouds_0, Clouds_0_Fast
 1081 D1:D879 80 -  -  -  	.db %10000000
 1082 D1:D87A 27 ED D1 14 
              33 D4 -  -  	.dl Clouds_1, Clouds_1_Fast
 1083 D1:D880 80 -  -  -  	.db %10000000
 1084 D1:D881 4E ED D1 78 
              33 D4 -  -  	.dl Clouds_3, Clouds_3_Fast
 1085 D1:D887 80 -  -  -  	.db %10000000
 1086 D1:D888 7A ED D1 E4 
              33 D4 -  -  	.dl Clouds_4, Clouds_4_Fast
 1087 D1:D88E 80 -  -  -  	.db %10000000
 1088 D1:D88F 91 ED D1 24 
              34 D4 -  -  	.dl Clouds_2, Clouds_2_Fast
 1089 D1:D895 80 -  -  -  	.db %10000000
 1090 D1:D896 FE EC D1 D6 
              34 D4 -  -  	.dl Clouds_0, Clouds_0_Fast_F
 1091 D1:D89C A0 -  -  -  	.db %10100000
 1092 D1:D89D 27 ED D1 3C 
              35 D4 -  -  	.dl Clouds_1, Clouds_1_Fast_F
 1093 D1:D8A3 A0 -  -  -  	.db %10100000
 1094 D1:D8A4 7A ED D1 A0 
              35 D4 -  -  	.dl Clouds_4, Clouds_4_Fast_F
 1095 D1:D8AA A0 -  -  -  	.db %10100000
 1096 D1:D8AB 4E ED D1 E0 
              35 D4 -  -  	.dl Clouds_3, Clouds_3_Fast_F
 1097 D1:D8B1 A0 -  -  -  	.db %10100000
 1098 D1:D8B2 91 ED D1 4C 
              36 D4 -  -  	.dl Clouds_2, Clouds_2_Fast_F
 1099 D1:D8B8 A0 -  -  -  	.db %10100000
 1100 D1:D8B9 -  -  -  -  
 1101 D1:D8B9 -  -  -  -  decompress_frame_down_25:
 1102 D1:D8B9 00 -  -  -  	.db 0
 1103 D1:D8BA -  -  -  -  
 1104 D1:D8BA -  -  -  -  decompress_frame_down_26:
 1105 D1:D8BA 00 -  -  -  	.db 0
 1106 D1:D8BB -  -  -  -  
 1107 D1:D8BB -  -  -  -  decompress_frame_down_27:
 1108 D1:D8BB 00 -  -  -  	.db 0
 1109 D1:D8BC -  -  -  -  
 1110 D1:D8BC -  -  -  -  decompress_frame_down_28:
 1111 D1:D8BC 00 -  -  -  	.db 0
 1112 D1:D8BD -  -  -  -  
 1113 D1:D8BD -  -  -  -  decompress_frame_down_29:
 1114 D1:D8BD 00 -  -  -  	.db 0
 1115 D1:D8BE -  -  -  -  
 1116 D1:D8BE -  -  -  -  decompress_frame_down_30:
 1117 D1:D8BE 00 -  -  -  	.db 0
 1118 D1:D8BF -  -  -  -  
 1119 D1:D8BF -  -  -  -  decompress_frame_down_31:
 1120 D1:D8BF 00 -  -  -  	.db 0
 1121 D1:D8C0 -  -  -  -  
 1122 D1:D8C0 -  -  -  -  decompress_frame_down_32:
 1123 D1:D8C0 00 -  -  -  	.db 0
 1124 D1:D8C1 -  -  -  -  
 1125 D1:D8C1 -  -  -  -  decompress_frame_down_33:
 1126 D1:D8C1 00 -  -  -  	.db 0
 1127 D1:D8C2 -  -  -  -  
 1128 D1:D8C2 -  -  -  -  decompress_frame_down_34:
 1129 D1:D8C2 00 -  -  -  	.db 0
 1130 D1:D8C3 -  -  -  -  
 1131 D1:D8C3 -  -  -  -  decompress_frame_down_35:
 1132 D1:D8C3 00 -  -  -  	.db 0
 1133 D1:D8C4 -  -  -  -  
 1134 D1:D8C4 -  -  -  -  decompress_frame_down_36:
 1135 D1:D8C4 00 -  -  -  	.db 0
 1136 D1:D8C5 -  -  -  -  
 1137 D1:D8C5 -  -  -  -  decompress_frame_down_37:
 1138 D1:D8C5 00 -  -  -  	.db 0
 1139 D1:D8C6 -  -  -  -  
 1140 D1:D8C6 -  -  -  -  decompress_frame_down_38:
 1141 D1:D8C6 00 -  -  -  	.db 0
 1142 D1:D8C7 -  -  -  -  
 1143 D1:D8C7 -  -  -  -  decompress_frame_down_39:
 1144 D1:D8C7 00 -  -  -  	.db 0
 1145 D1:D8C8 -  -  -  -  
 1146 D1:D8C8 -  -  -  -  decompress_frame_down_40:
 1147 D1:D8C8 00 -  -  -  	.db 0
 1148 D1:D8C9 -  -  -  -  
 1149 D1:D8C9 -  -  -  -  decompress_frame_down_41:
 1150 D1:D8C9 00 -  -  -  	.db 0
 1151 D1:D8CA -  -  -  -  
 1152 D1:D8CA -  -  -  -  decompress_frame_down_42:
 1153 D1:D8CA 00 -  -  -  	.db 0
 1154 D1:D8CB -  -  -  -  
 1155 D1:D8CB -  -  -  -  decompress_frame_down_43:
 1156 D1:D8CB 00 -  -  -  	.db 0
 1157 D1:D8CC -  -  -  -  
 1158 D1:D8CC -  -  -  -  decompress_frame_down_44:
 1159 D1:D8CC 00 -  -  -  	.db 0
 1160 D1:D8CD -  -  -  -  
 1161 D1:D8CD -  -  -  -  decompress_frame_down_45:
 1162 D1:D8CD 00 -  -  -  	.db 0
 1163 D1:D8CE -  -  -  -  
 1164 D1:D8CE -  -  -  -  decompress_frame_down_46:
 1165 D1:D8CE 00 -  -  -  	.db 0
 1166 D1:D8CF -  -  -  -  
 1167 D1:D8CF -  -  -  -  decompress_frame_down_47:
 1168 D1:D8CF 00 -  -  -  	.db 0
 1169 D1:D8D0 -  -  -  -  
 1170 D1:D8D0 -  -  -  -  decompress_frame_down_48:
 1171 D1:D8D0 00 -  -  -  	.db 0
 1172 D1:D8D1 -  -  -  -  
 1173 D1:D8D1 -  -  -  -  decompress_frame_down_49:
 1174 D1:D8D1 00 -  -  -  	.db 0
 1175 D1:D8D2 -  -  -  -  
 1176 D1:D8D2 -  -  -  -  decompress_frame_down_50:
 1177 D1:D8D2 00 -  -  -  	.db 0
 1178 D1:D8D3 -  -  -  -  
 1179 D1:D8D3 -  -  -  -  decompress_frame_down_51:
 1180 D1:D8D3 00 -  -  -  	.db 0
 1181 D1:D8D4 -  -  -  -  
 1182 D1:D8D4 -  -  -  -  decompress_frame_down_52:
 1183 D1:D8D4 00 -  -  -  	.db 0
 1184 D1:D8D5 -  -  -  -  
 1185 D1:D8D5 -  -  -  -  decompress_frame_down_53:
 1186 D1:D8D5 00 -  -  -  	.db 0
 1187 D1:D8D6 -  -  -  -  
 1188 D1:D8D6 -  -  -  -  decompress_frame_down_54:
 1189 D1:D8D6 00 -  -  -  	.db 0
 1190 D1:D8D7 -  -  -  -  
 1191 D1:D8D7 -  -  -  -  decompress_frame_down_55:
 1192 D1:D8D7 00 -  -  -  	.db 0
 1193 D1:D8D8 -  -  -  -  
 1194 D1:D8D8 -  -  -  -  decompress_frame_down_56:
 1195 D1:D8D8 00 -  -  -  	.db 0
 1196 D1:D8D9 -  -  -  -  
 1197 D1:D8D9 -  -  -  -  decompress_frame_down_57:
 1198 D1:D8D9 00 -  -  -  	.db 0
 1199 D1:D8DA -  -  -  -  
 1200 D1:D8DA -  -  -  -  decompress_frame_down_58:
 1201 D1:D8DA 00 -  -  -  	.db 0
 1202 D1:D8DB -  -  -  -  
 1203 D1:D8DB -  -  -  -  decompress_frame_down_59:
 1204 D1:D8DB 00 -  -  -  	.db 0
 1205 D1:D8DC -  -  -  -  
 1206 D1:D8DC -  -  -  -  decompress_frame_down_60:
 1207 D1:D8DC 00 -  -  -  	.db 0
 1208 D1:D8DD -  -  -  -  
 1209 D1:D8DD -  -  -  -  decompress_frame_down_61:
 1210 D1:D8DD 00 -  -  -  	.db 0
 1211 D1:D8DE -  -  -  -  
 1212 D1:D8DE -  -  -  -  decompress_frame_down_62:
 1213 D1:D8DE 00 -  -  -  	.db 0
 1214 D1:D8DF -  -  -  -  
 1215 D1:D8DF -  -  -  -  decompress_frame_down_63:
 1216 D1:D8DF 00 -  -  -  	.db 0
 1217 D1:D8E0 -  -  -  -  
 1218 D1:D8E0 -  -  -  -  decompress_frame_down_64:
 1219 D1:D8E0 00 -  -  -  	.db 0
 1220 D1:D8E1 -  -  -  -  
 1221 D1:D8E1 -  -  -  -  decompress_frame_down_65:
 1222 D1:D8E1 00 -  -  -  	.db 0
 1223 D1:D8E2 -  -  -  -  
 1224 D1:D8E2 -  -  -  -  decompress_frame_down_66:
 1225 D1:D8E2 00 -  -  -  	.db 0
 1226 D1:D8E3 -  -  -  -  
 1227 D1:D8E3 -  -  -  -  decompress_frame_down_67:
 1228 D1:D8E3 00 -  -  -  	.db 0
 1229 D1:D8E4 -  -  -  -  
 1230 D1:D8E4 -  -  -  -  decompress_frame_down_68:
 1231 D1:D8E4 00 -  -  -  	.db 0
 1232 D1:D8E5 -  -  -  -  
 1233 D1:D8E5 -  -  -  -  decompress_frame_down_69:
 1234 D1:D8E5 00 -  -  -  	.db 0
 1235 D1:D8E6 -  -  -  -  
 1236 D1:D8E6 -  -  -  -  decompress_frame_down_70:
 1237 D1:D8E6 00 -  -  -  	.db 0
 1238 D1:D8E7 -  -  -  -  
 1239 D1:D8E7 -  -  -  -  decompress_frame_down_71:
 1240 D1:D8E7 00 -  -  -  	.db 0
 1241 D1:D8E8 -  -  -  -  
 1242 D1:D8E8 -  -  -  -  decompress_frame_down_72:
 1243 D1:D8E8 00 -  -  -  	.db 0
 1244 D1:D8E9 -  -  -  -  
 1245 D1:D8E9 -  -  -  -  decompress_frame_down_73:
 1246 D1:D8E9 00 -  -  -  	.db 0
 1247 D1:D8EA -  -  -  -  
 1248 D1:D8EA -  -  -  -  decompress_frame_down_74:
 1249 D1:D8EA 00 -  -  -  	.db 0
 1250 D1:D8EB -  -  -  -  
 1251 D1:D8EB -  -  -  -  decompress_frame_down_75:
 1252 D1:D8EB 00 -  -  -  	.db 0
 1253 D1:D8EC -  -  -  -  
 1254 D1:D8EC -  -  -  -  decompress_frame_down_76:
 1255 D1:D8EC 00 -  -  -  	.db 0
 1256 D1:D8ED -  -  -  -  
 1257 D1:D8ED -  -  -  -  decompress_frame_down_77:
 1258 D1:D8ED 00 -  -  -  	.db 0
 1259 D1:D8EE -  -  -  -  
 1260 D1:D8EE -  -  -  -  decompress_frame_down_78:
 1261 D1:D8EE 00 -  -  -  	.db 0
 1262 D1:D8EF -  -  -  -  
 1263 D1:D8EF -  -  -  -  decompress_frame_down_79:
 1264 D1:D8EF 00 -  -  -  	.db 0
 1265 D1:D8F0 -  -  -  -  
 1266 D1:D8F0 -  -  -  -  decompress_frame_down_80:
 1267 D1:D8F0 00 -  -  -  	.db 0
 1268 D1:D8F1 -  -  -  -  
 1269 D1:D8F1 -  -  -  -  decompress_frame_down_81:
 1270 D1:D8F1 00 -  -  -  	.db 0
 1271 D1:D8F2 -  -  -  -  
 1272 D1:D8F2 -  -  -  -  decompress_frame_down_82:
 1273 D1:D8F2 00 -  -  -  	.db 0
 1274 D1:D8F3 -  -  -  -  
 1275 D1:D8F3 -  -  -  -  decompress_frame_down_83:
 1276 D1:D8F3 00 -  -  -  	.db 0
 1277 D1:D8F4 -  -  -  -  
 1278 D1:D8F4 -  -  -  -  decompress_frame_down_84:
 1279 D1:D8F4 00 -  -  -  	.db 0
 1280 D1:D8F5 -  -  -  -  
 1281 D1:D8F5 -  -  -  -  decompress_frame_down_85:
 1282 D1:D8F5 00 -  -  -  	.db 0
 1283 D1:D8F6 -  -  -  -  
 1284 D1:D8F6 -  -  -  -  decompress_frame_down_86:
 1285 D1:D8F6 00 -  -  -  	.db 0
 1286 D1:D8F7 -  -  -  -  
 1287 D1:D8F7 -  -  -  -  decompress_frame_down_87:
 1288 D1:D8F7 00 -  -  -  	.db 0
 1289 D1:D8F8 -  -  -  -  
 1290 D1:D8F8 -  -  -  -  decompress_frame_down_88:
 1291 D1:D8F8 00 -  -  -  	.db 0
 1292 D1:D8F9 -  -  -  -  
 1293 D1:D8F9 -  -  -  -  decompress_frame_down_89:
 1294 D1:D8F9 1A -  -  -  	.db 26
 1295 D1:D8FA B5 ED D1 FD 
              36 D4 -  -  	.dl FrogDefault, FrogDefault_Slow
 1296 D1:D900 00 -  -  -  	.db %00000000
 1297 D1:D901 B5 ED D1 2D 
              38 D4 -  -  	.dl FrogDefault, FrogDefault_Slow_O
 1298 D1:D907 40 -  -  -  	.db %01000000
 1299 D1:D908 B5 ED D1 5D 
              39 D4 -  -  	.dl FrogDefault, FrogDefault_Slow_F
 1300 D1:D90E 20 -  -  -  	.db %00100000
 1301 D1:D90F B5 ED D1 8D 
              3A D4 -  -  	.dl FrogDefault, FrogDefault_Slow_O_F
 1302 D1:D915 60 -  -  -  	.db %01100000
 1303 D1:D916 8D EE D1 BD 
              3B D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow
 1304 D1:D91C 00 -  -  -  	.db %00000000
 1305 D1:D91D 8D EE D1 DD 
              3C D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_O
 1306 D1:D923 40 -  -  -  	.db %01000000
 1307 D1:D924 8D EE D1 03 
              3E D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_F
 1308 D1:D92A 20 -  -  -  	.db %00100000
 1309 D1:D92B 8D EE D1 29 
              3F D4 -  -  	.dl FrogChargeLit, FrogChargeLit_Slow_O_F
 1310 D1:D931 60 -  -  -  	.db %01100000
 1311 D1:D932 2B EF D1 49 
              40 D4 -  -  	.dl FrogCharge, FrogCharge_Slow
 1312 D1:D938 00 -  -  -  	.db %00000000
 1313 D1:D939 2B EF D1 C1 
              01 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_O
 1314 D1:D93F 40 -  -  -  	.db %01000000
 1315 D1:D940 2B EF D1 E7 
              02 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_F
 1316 D1:D946 20 -  -  -  	.db %00100000
 1317 D1:D947 2B EF D1 0D 
              04 D4 -  -  	.dl FrogCharge, FrogCharge_Slow_O_F
 1318 D1:D94D 60 -  -  -  	.db %01100000
 1319 D1:D94E FA EF D1 2D 
              05 D4 -  -  	.dl FrogJump, FrogJump_Slow
 1320 D1:D954 00 -  -  -  	.db %00000000
 1321 D1:D955 FA EF D1 A5 
              06 D4 -  -  	.dl FrogJump, FrogJump_Slow_O
 1322 D1:D95B 40 -  -  -  	.db %01000000
 1323 D1:D95C FA EF D1 27 
              08 D4 -  -  	.dl FrogJump, FrogJump_Slow_F
 1324 D1:D962 20 -  -  -  	.db %00100000
 1325 D1:D963 FA EF D1 9F 
              09 D4 -  -  	.dl FrogJump, FrogJump_Slow_O_F
 1326 D1:D969 60 -  -  -  	.db %01100000
 1327 D1:D96A 13 F1 D1 21 
              0B D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow
 1328 D1:D970 00 -  -  -  	.db %00000000
 1329 D1:D971 13 F1 D1 99 
              0C D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_O
 1330 D1:D977 40 -  -  -  	.db %01000000
 1331 D1:D978 13 F1 D1 1B 
              0E D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_F
 1332 D1:D97E 20 -  -  -  	.db %00100000
 1333 D1:D97F 13 F1 D1 93 
              0F D4 -  -  	.dl FrogJumpMouth, FrogJumpMouth_Slow_O_F
 1334 D1:D985 60 -  -  -  	.db %01100000
 1335 D1:D986 2C F2 D1 15 
              11 D4 -  -  	.dl FrogFall, FrogFall_Slow
 1336 D1:D98C 00 -  -  -  	.db %00000000
 1337 D1:D98D 2C F2 D1 85 
              12 D4 -  -  	.dl FrogFall, FrogFall_Slow_O
 1338 D1:D993 40 -  -  -  	.db %01000000
 1339 D1:D994 2C F2 D1 FF 
              13 D4 -  -  	.dl FrogFall, FrogFall_Slow_F
 1340 D1:D99A 20 -  -  -  	.db %00100000
 1341 D1:D99B 2C F2 D1 6F 
              15 D4 -  -  	.dl FrogFall, FrogFall_Slow_O_F
 1342 D1:D9A1 60 -  -  -  	.db %01100000
 1343 D1:D9A2 12 F3 D1 E9 
              16 D4 -  -  	.dl FrogTongue, FrogTongue_Slow
 1344 D1:D9A8 00 -  -  -  	.db %00000000
 1345 D1:D9A9 12 F3 D1 2F 
              17 D4 -  -  	.dl FrogTongue, FrogTongue_Slow_O
 1346 D1:D9AF 40 -  -  -  	.db %01000000
Listing for file "ascent.asm"
  613 D1:D9B0 -  -  -  -  #include "generated/Palette_Setup.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Palette_Setup.txt"
    1 D1:D9B0 -  -  -  -  setup_palette_1:
    2 D1:D9B0 21 00 02 E3 	ld hl,mpLcdPalette
    3 D1:D9B4 3E C2 -  -  	ld a,%11000010
    4 D1:D9B6 77 -  -  -  	ld (hl),a 
    5 D1:D9B7 23 -  -  -  	inc hl
    6 D1:D9B8 3E 20 -  -  	ld a,%00100000
    7 D1:D9BA 77 -  -  -  	ld (hl),a 
    8 D1:D9BB 23 -  -  -  	inc hl
    9 D1:D9BC 3E 24 -  -  	ld a,%00100100
   10 D1:D9BE 77 -  -  -  	ld (hl),a 
   11 D1:D9BF 23 -  -  -  	inc hl
   12 D1:D9C0 3E 39 -  -  	ld a,%00111001
   13 D1:D9C2 77 -  -  -  	ld (hl),a 
   14 D1:D9C3 23 -  -  -  	inc hl
   15 D1:D9C4 3E 85 -  -  	ld a,%10000101
   16 D1:D9C6 77 -  -  -  	ld (hl),a 
   17 D1:D9C7 23 -  -  -  	inc hl
   18 D1:D9C8 3E 4D -  -  	ld a,%01001101
   19 D1:D9CA 77 -  -  -  	ld (hl),a 
   20 D1:D9CB 23 -  -  -  	inc hl
   21 D1:D9CC 3E E6 -  -  	ld a,%11100110
   22 D1:D9CE 77 -  -  -  	ld (hl),a 
   23 D1:D9CF 23 -  -  -  	inc hl
   24 D1:D9D0 3E E1 -  -  	ld a,%11100001
   25 D1:D9D2 77 -  -  -  	ld (hl),a 
   26 D1:D9D3 23 -  -  -  	inc hl
   27 D1:D9D4 3E 2A -  -  	ld a,%00101010
   28 D1:D9D6 77 -  -  -  	ld (hl),a 
   29 D1:D9D7 23 -  -  -  	inc hl
   30 D1:D9D8 3E 2E -  -  	ld a,%00101110
   31 D1:D9DA 77 -  -  -  	ld (hl),a 
   32 D1:D9DB 23 -  -  -  	inc hl
   33 D1:D9DC 3E 65 -  -  	ld a,%01100101
   34 D1:D9DE 77 -  -  -  	ld (hl),a 
   35 D1:D9DF 23 -  -  -  	inc hl
   36 D1:D9E0 3E 95 -  -  	ld a,%10010101
   37 D1:D9E2 77 -  -  -  	ld (hl),a 
   38 D1:D9E3 23 -  -  -  	inc hl
   39 D1:D9E4 3E FE -  -  	ld a,%11111110
   40 D1:D9E6 77 -  -  -  	ld (hl),a 
   41 D1:D9E7 23 -  -  -  	inc hl
   42 D1:D9E8 3E 73 -  -  	ld a,%01110011
   43 D1:D9EA 77 -  -  -  	ld (hl),a 
   44 D1:D9EB 23 -  -  -  	inc hl
   45 D1:D9EC 3E BC -  -  	ld a,%10111100
   46 D1:D9EE 77 -  -  -  	ld (hl),a 
   47 D1:D9EF 23 -  -  -  	inc hl
   48 D1:D9F0 3E 5B -  -  	ld a,%01011011
   49 D1:D9F2 77 -  -  -  	ld (hl),a 
   50 D1:D9F3 23 -  -  -  	inc hl
   51 D1:D9F4 3E 8E -  -  	ld a,%10001110
   52 D1:D9F6 77 -  -  -  	ld (hl),a 
   53 D1:D9F7 23 -  -  -  	inc hl
   54 D1:D9F8 3E 4F -  -  	ld a,%01001111
   55 D1:D9FA 77 -  -  -  	ld (hl),a 
   56 D1:D9FB 23 -  -  -  	inc hl
   57 D1:D9FC 3E 20 -  -  	ld a,%00100000
   58 D1:D9FE 77 -  -  -  	ld (hl),a 
   59 D1:D9FF 23 -  -  -  	inc hl
   60 D1:DA00 3E 80 -  -  	ld a,%10000000
   61 D1:DA02 77 -  -  -  	ld (hl),a 
   62 D1:DA03 23 -  -  -  	inc hl
   63 D1:DA04 3E 08 -  -  	ld a,%00001000
   64 D1:DA06 77 -  -  -  	ld (hl),a 
   65 D1:DA07 23 -  -  -  	inc hl
   66 D1:DA08 3E 5D -  -  	ld a,%01011101
   67 D1:DA0A 77 -  -  -  	ld (hl),a 
   68 D1:DA0B 23 -  -  -  	inc hl
   69 D1:DA0C 3E DD -  -  	ld a,%11011101
   70 D1:DA0E 77 -  -  -  	ld (hl),a 
   71 D1:DA0F 23 -  -  -  	inc hl
   72 D1:DA10 3E 75 -  -  	ld a,%01110101
   73 D1:DA12 77 -  -  -  	ld (hl),a 
   74 D1:DA13 23 -  -  -  	inc hl
   75 D1:DA14 3E 59 -  -  	ld a,%01011001
   76 D1:DA16 77 -  -  -  	ld (hl),a 
   77 D1:DA17 23 -  -  -  	inc hl
   78 D1:DA18 3E 65 -  -  	ld a,%01100101
   79 D1:DA1A 77 -  -  -  	ld (hl),a 
   80 D1:DA1B 23 -  -  -  	inc hl
   81 D1:DA1C 3E 1F -  -  	ld a,%00011111
   82 D1:DA1E 77 -  -  -  	ld (hl),a 
   83 D1:DA1F 23 -  -  -  	inc hl
   84 D1:DA20 3E 81 -  -  	ld a,%10000001
   85 D1:DA22 77 -  -  -  	ld (hl),a 
   86 D1:DA23 23 -  -  -  	inc hl
   87 D1:DA24 3E C6 -  -  	ld a,%11000110
   88 D1:DA26 77 -  -  -  	ld (hl),a 
   89 D1:DA27 23 -  -  -  	inc hl
   90 D1:DA28 3E 98 -  -  	ld a,%10011000
   91 D1:DA2A 77 -  -  -  	ld (hl),a 
   92 D1:DA2B 23 -  -  -  	inc hl
   93 D1:DA2C 3E 95 -  -  	ld a,%10010101
   94 D1:DA2E 77 -  -  -  	ld (hl),a 
   95 D1:DA2F 23 -  -  -  	inc hl
   96 D1:DA30 3E 99 -  -  	ld a,%10011001
   97 D1:DA32 77 -  -  -  	ld (hl),a 
   98 D1:DA33 23 -  -  -  	inc hl
   99 D1:DA34 C9 -  -  -  	ret 
Listing for file "ascent.asm"
  614 D1:DA35 -  -  -  -  #include "generated/Sprite_Tables.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Tables.txt"
    1 D1:DA35 -  -  -  -  Sprite_Table_Table:
    2 D1:DA35 3B DA D1 -  	.dl Sprite_Table_0
    3 D1:DA38 B8 DB D1 -  	.dl Sprite_Table_1
    4 D1:DA3B -  -  -  -  
    5 D1:DA3B -  -  -  -  
    6 D1:DA3B -  -  -  -  Sprite_Table_0:
    7 D1:DA3B C7 43 D4 -  	.dl BigGrassBase_Slow_O
    8 D1:DA3E 6A 41 D4 -  	.dl BigGrassBase_Fast
    9 D1:DA41 7E 45 D4 -  	.dl BigGrassBase_Fast_F
   10 D1:DA44 D2 42 D4 -  	.dl BigGrassTop_Fast
   11 D1:DA47 E6 46 D4 -  	.dl BigGrassTop_Fast_F
   12 D1:DA4A DB 47 D4 -  	.dl BigGrassTop_Slow_O
   13 D1:DA4D 15 49 D4 -  	.dl DualLeaf4_Slow
   14 D1:DA50 C5 49 D4 -  	.dl DualLeaf4_Slow_F
   15 D1:DA53 76 4A D4 -  	.dl DualLeaf3_Fast
   16 D1:DA56 66 4B D4 -  	.dl Branches_9_Fast
   17 D1:DA59 56 4C D4 -  	.dl Branches_13_Fast
   18 D1:DA5C EE 4A D4 -  	.dl Branches_10_Fast
   19 D1:DA5F E9 4B D4 -  	.dl Branches_16_Slow
   20 D1:DA62 88 4C D4 -  	.dl Leaves1_Fast
   21 D1:DA65 A0 4D D4 -  	.dl DualLeaf1_Fast
   22 D1:DA68 10 4E D4 -  	.dl DualLeaf2_Fast
   23 D1:DA6B 81 4E D4 -  	.dl DualLeaf2_Slow_O
   24 D1:DA6E 2B 4F D4 -  	.dl DualLeaf1_Slow_O
   25 D1:DA71 04 57 D4 -  	.dl LeavesLight_Fast
   26 D1:DA74 FC 52 D4 -  	.dl LeavesDark_Fast
   27 D1:DA77 7F 59 D4 -  	.dl Branches_14_Slow
   28 D1:DA7A 8B 52 D4 -  	.dl Branches_15_Slow_O_F
   29 D1:DA7D 1C 58 D4 -  	.dl Branches_8_Fast
   30 D1:DA80 61 51 D4 -  	.dl Branches_15_Slow
   31 D1:DA83 7A 58 D4 -  	.dl Branches_11_Fast_F
   32 D1:DA86 4E 59 D4 -  	.dl Branches_13_Fast_F
   33 D1:DA89 70 50 D4 -  	.dl Branches_10_Fast_F
   34 D1:DA8C 18 56 D4 -  	.dl Leaves2_Fast_F
   35 D1:DA8F 2C 55 D4 -  	.dl Leaves2_Fast
   36 D1:DA92 14 54 D4 -  	.dl LeavesDark_Fast_F
   37 D1:DA95 30 52 D4 -  	.dl Branches_12_Fast
   38 D1:DA98 D3 4F D4 -  	.dl Branches_6_Slow
   39 D1:DA9B E8 50 D4 -  	.dl Branches_7_Fast
   40 D1:DA9E D2 51 D4 -  	.dl Branches_8_Fast_F
   41 D1:DAA1 E1 58 D4 -  	.dl Branches_16_Slow_O_F
   42 D1:DAA4 EC 59 D4 -  	.dl Branches_4_Fast_F
   43 D1:DAA7 8A 5A D4 -  	.dl Branches_7_Fast_F
   44 D1:DAAA 04 5B D4 -  	.dl Branches_12_Fast_F
   45 D1:DAAD 60 5B D4 -  	.dl Leaves1_Fast_F
   46 D1:DAB0 78 17 D4 -  	.dl Branches_5_Fast
   47 D1:DAB3 0C 43 D4 -  	.dl Branches_4_Fast
   48 D1:DAB6 18 18 D4 -  	.dl Branches_3_Fast
   49 D1:DAB9 C0 18 D4 -  	.dl Branches_2_Fast
   50 D1:DABC 78 5C D4 -  	.dl GroundDirtFull_Fast_F
   51 D1:DABF 2A 5D D4 -  	.dl GroundDirtFull_Fast
   52 D1:DAC2 DC 5D D4 -  	.dl GroundDirtMound_Fast
   53 D1:DAC5 5C 5E D4 -  	.dl GroundDirtMound_Fast_F
   54 D1:DAC8 DB 5E D4 -  	.dl Branches_8_Slow_O_F
   55 D1:DACB 63 5F D4 -  	.dl Branches_9_Slow_O
   56 D1:DACE 12 60 D4 -  	.dl Tree_2_Fast
   57 D1:DAD1 0E 61 D4 -  	.dl Tree_4_Fast
   58 D1:DAD4 10 62 D4 -  	.dl Tree_7_Fast
   59 D1:DAD7 12 63 D4 -  	.dl Tree_9_Fast
   60 D1:DADA 14 64 D4 -  	.dl Tree_6_Fast_F
   61 D1:DADD 16 65 D4 -  	.dl Tree_3_Fast_F
   62 D1:DAE0 18 66 D4 -  	.dl Tree_0_Fast_F
   63 D1:DAE3 14 67 D4 -  	.dl Tree_3_Fast
   64 D1:DAE6 16 68 D4 -  	.dl Tree_8_Fast
   65 D1:DAE9 18 69 D4 -  	.dl Tree_9_Fast_F
   66 D1:DAEC 1A 6A D4 -  	.dl Tree_8_Fast_F
   67 D1:DAEF 1C 6B D4 -  	.dl Tree_4_Fast_F
   68 D1:DAF2 1E 6C D4 -  	.dl Tree_0_Fast
   69 D1:DAF5 1A 6D D4 -  	.dl Tree_6_Fast
   70 D1:DAF8 1C 6E D4 -  	.dl Tree_10_Fast
   71 D1:DAFB 1E 6F D4 -  	.dl Tree_7_Fast_F
   72 D1:DAFE 20 70 D4 -  	.dl Tree_1_Fast_F
   73 D1:DB01 1E 71 D4 -  	.dl Tree_1_Fast
   74 D1:DB04 1C 72 D4 -  	.dl Tree_5_Fast
   75 D1:DB07 6A 19 D4 -  	.dl Tree_11_Fast
   76 D1:DB0A 6C 1A D4 -  	.dl Tree_5_Fast_F
   77 D1:DB0D 6E 1B D4 -  	.dl Tree_2_Fast_F
   78 D1:DB10 6A 1C D4 -  	.dl Tree_11_Fast_F
   79 D1:DB13 6C 1D D4 -  	.dl Branches_1_Fast
   80 D1:DB16 05 1E D4 -  	.dl Vine2_Slow
   81 D1:DB19 A5 1E D4 -  	.dl VineVertical_Slow_O
   82 D1:DB1C 51 1F D4 -  	.dl VineVertical_Slow
   83 D1:DB1F FF 1F D4 -  	.dl Vine4_Slow_F
   84 D1:DB22 BF 20 D4 -  	.dl Vine4_Slow_O_F
   85 D1:DB25 7F 21 D4 -  	.dl Vine5_Slow_O_F
   86 D1:DB28 3F 22 D4 -  	.dl Vine6_Slow_O
   87 D1:DB2B E5 22 D4 -  	.dl Vine7_Slow
   88 D1:DB2E 6B 23 D4 -  	.dl Vine5_Slow
   89 D1:DB31 29 24 D4 -  	.dl Vine6_Slow
   90 D1:DB34 CD 24 D4 -  	.dl Vine4_Slow
   91 D1:DB37 8D 25 D4 -  	.dl Vine7_Slow_O
   92 D1:DB3A 0D 26 D4 -  	.dl Vine5_Slow_O
   93 D1:DB3D CB 26 D4 -  	.dl Vine4_Slow_O
   94 D1:DB40 8A 27 D4 -  	.dl Branches_1_Fast_F
   95 D1:DB43 22 28 D4 -  	.dl Branches_2_Fast_F
   96 D1:DB46 CC 28 D4 -  	.dl Branches_5_Fast_F
   97 D1:DB49 1D 73 D4 -  	.dl Branches_1_Slow_O
   98 D1:DB4C E3 73 D4 -  	.dl Branches_2_Slow_O
   99 D1:DB4F C3 74 D4 -  	.dl Branches_4_Slow_O
  100 D1:DB52 8F 75 D4 -  	.dl Branches_7_Slow_O
  101 D1:DB55 6A 41 D4 -  	.dl Branches_0_Fast_F
  102 D1:DB58 01 42 D4 -  	.dl Branches_8_Slow_O
  103 D1:DB5B 8A 42 D4 -  	.dl Branches_9_Fast_F
  104 D1:DB5E 6C 29 D4 -  	.dl Platforms_0_Fast
  105 D1:DB61 E2 29 D4 -  	.dl Platforms_1_Fast
  106 D1:DB64 58 2A D4 -  	.dl Platforms_0_Fast_F
  107 D1:DB67 CF 2A D4 -  	.dl Platforms_2_Slow_O_F
  108 D1:DB6A 4B 2B D4 -  	.dl Platforms_2_Slow_O
  109 D1:DB6D 47 2C D4 -  	.dl TongueRing1_Slow
  110 D1:DB70 CB 2C D4 -  	.dl TongueRing2_Slow
  111 D1:DB73 4F 2D D4 -  	.dl TongueRing1_Slow_F
  112 D1:DB76 D3 2D D4 -  	.dl TongueRing2_Slow_F
  113 D1:DB79 C6 2B D4 -  	.dl Spikes_0_Fast
  114 D1:DB7C 56 2E D4 -  	.dl GroundDirtDark_Fast
  115 D1:DB7F DC 2E D4 -  	.dl GroundDirtDark_Fast_F
  116 D1:DB82 62 2F D4 -  	.dl GroundHumpDark_Fast
  117 D1:DB85 E8 2F D4 -  	.dl GroundHumpDark_Fast_F
  118 D1:DB88 6E 30 D4 -  	.dl Tree_16_Fast
  119 D1:DB8B C3 30 D4 -  	.dl Tree_17_Slow
  120 D1:DB8E 29 31 D4 -  	.dl Tree_17_Slow_O_F
  121 D1:DB91 8F 31 D4 -  	.dl Tree_18_Slow
  122 D1:DB94 F3 31 D4 -  	.dl Tree_18_Slow_O_F
  123 D1:DB97 58 32 D4 -  	.dl Tree_16_Fast_F
  124 D1:DB9A AE 32 D4 -  	.dl Clouds_0_Fast
  125 D1:DB9D 14 33 D4 -  	.dl Clouds_1_Fast
  126 D1:DBA0 78 33 D4 -  	.dl Clouds_3_Fast
  127 D1:DBA3 E4 33 D4 -  	.dl Clouds_4_Fast
  128 D1:DBA6 24 34 D4 -  	.dl Clouds_2_Fast
  129 D1:DBA9 D6 34 D4 -  	.dl Clouds_0_Fast_F
  130 D1:DBAC 3C 35 D4 -  	.dl Clouds_1_Fast_F
  131 D1:DBAF A0 35 D4 -  	.dl Clouds_4_Fast_F
  132 D1:DBB2 E0 35 D4 -  	.dl Clouds_3_Fast_F
  133 D1:DBB5 4C 36 D4 -  	.dl Clouds_2_Fast_F
  134 D1:DBB8 -  -  -  -  
  135 D1:DBB8 -  -  -  -  Sprite_Table_1:
  136 D1:DBB8 -  -  -  -  
Listing for file "ascent.asm"
  615 D1:DBB8 -  -  -  -  #include "generated/Sprite_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Data.txt"
    1 D1:DBB8 -  -  -  -  BigGrassBase:
    2 D1:DBB8 10 -  -  -  	.db %00010000
    3 D1:DBB9 18 1A -  -  	.db 24, 26
    4 D1:DBBB 3F FF FC 3F 
              FF FC 3F FF 	.db %00111111, %11111111, %11111100, %00111111, %11111111, %11111100, %00111111, %11111111
    5 D1:DBC3 FC 3F FF FC 
              3F FF FC 3F 	.db %11111100, %00111111, %11111111, %11111100, %00111111, %11111111, %11111100, %00111111
    6 D1:DBCB FF FC 3F FF 
              FC 3F FF FC 	.db %11111111, %11111100, %00111111, %11111111, %11111100, %00111111, %11111111, %11111100
    7 D1:DBD3 3F FF FC 3F 
              FF FC 3F FF 	.db %00111111, %11111111, %11111100, %00111111, %11111111, %11111100, %00111111, %11111111
    8 D1:DBDB FC 3F FF FC 
              3F FF FC FF 	.db %11111100, %00111111, %11111111, %11111100, %00111111, %11111111, %11111100, %11111111
    9 D1:DBE3 FF FC FF FF 
              FC FF FF FC 	.db %11111111, %11111100, %11111111, %11111111, %11111100, %11111111, %11111111, %11111100
   10 D1:DBEB FF FF FC FF 
              FF FC FF FF 	.db %11111111, %11111111, %11111100, %11111111, %11111111, %11111100, %11111111, %11111111
   11 D1:DBF3 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   12 D1:DBFB FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   13 D1:DC03 FF FF FF FF 
              FF FF -  -  	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   14 D1:DC09 -  -  -  -  
   15 D1:DC09 54 -  -  -  	.db %01010100
   16 D1:DC0A -  -  -  -  
   17 D1:DC0A 1F C7 42 F8 
              F8 1F 57 42 	.db %00011111, %11000111, %01000010, %11111000, %11111000, %00011111, %01010111, %01000010
   18 D1:DC12 F8 F8 1F 57 
              42 F8 F8 1F 	.db %11111000, %11111000, %00011111, %01010111, %01000010, %11111000, %11111000, %00011111
   19 D1:DC1A 1F 42 E8 F8 
              1F 1F 42 EB 	.db %00011111, %01000010, %11101000, %11111000, %00011111, %00011111, %01000010, %11101011
   20 D1:DC22 F8 1F 1F 42 
              F3 F8 5F 9F 	.db %11111000, %00011111, %00011111, %01000010, %11110011, %11111000, %01011111, %10011111
   21 D1:DC2A 40 FE FE 05 
              F1 F4 2F EF 	.db %01000000, %11111110, %11111110, %00000101, %11110001, %11110100, %00101111, %11101111
   22 D1:DC32 E0 5F BF 42 
              FD FE 17 FB 	.db %11100000, %01011111, %10111111, %01000010, %11111101, %11111110, %00010111, %11111011
   23 D1:DC3A F4 0B FF F8 
              17 FF F4 0F 	.db %11110100, %00001011, %11111111, %11111000, %00010111, %11111111, %11110100, %00001111
   24 D1:DC42 FF FA 17 FF 
              FD 0B FF FE 	.db %11111111, %11111010, %00010111, %11111111, %11111101, %00001011, %11111111, %11111110
   25 D1:DC4A 17 FF FD 0B 
              FF FE 00 -  	.db %00010111, %11111111, %11111101, %00001011, %11111111, %11111110, %00000000
   26 D1:DC51 -  -  -  -  
   27 D1:DC51 -  -  -  -  
   28 D1:DC51 -  -  -  -  BigGrassTop:
   29 D1:DC51 10 -  -  -  	.db %00010000
   30 D1:DC52 1A 17 -  -  	.db 26, 23
   31 D1:DC54 00 00 FC 00 
              00 FF 00 00 	.db %00000000, %00000000, %11111100, %00000000, %00000000, %11111111, %00000000, %00000000
   32 D1:DC5C FF F0 00 FF 
              FF 00 3F FF 	.db %11111111, %11110000, %00000000, %11111111, %11111111, %00000000, %00111111, %11111111
   33 D1:DC64 C0 3F FF C0 
              0F FF F0 0F 	.db %11000000, %00111111, %11111111, %11000000, %00001111, %11111111, %11110000, %00001111
   34 D1:DC6C FF F0 03 FF 
              FC 00 FF FF 	.db %11111111, %11110000, %00000011, %11111111, %11111100, %00000000, %11111111, %11111111
   35 D1:DC74 00 FF FF 00 
              3F FF C0 0F 	.db %00000000, %11111111, %11111111, %00000000, %00111111, %11111111, %11000000, %00001111
   36 D1:DC7C FF F0 0F FF 
              FC 03 FF FC 	.db %11111111, %11110000, %00001111, %11111111, %11111100, %00000011, %11111111, %11111100
   37 D1:DC84 00 FF FF 00 
              3F FF C0 3F 	.db %00000000, %11111111, %11111111, %00000000, %00111111, %11111111, %11000000, %00111111
   38 D1:DC8C FF F0 0F FF 
              F0 03 FF FC 	.db %11111111, %11110000, %00001111, %11111111, %11110000, %00000011, %11111111, %11111100
   39 D1:DC94 00 FF FF 00 
              3F FF C0 0F 	.db %00000000, %11111111, %11111111, %00000000, %00111111, %11111111, %11000000, %00001111
   40 D1:DC9C FF F0 00 -  	.db %11111111, %11110000, %00000000
   41 D1:DC9F -  -  -  -  
   42 D1:DC9F 45 -  -  -  	.db %01000101
   43 D1:DCA0 -  -  -  -  
   44 D1:DCA0 56 A9 43 6A 
              12 94 30 E8 	.db %01010110, %10101001, %01000011, %01101010, %00010010, %10010100, %00110000, %11101000
   45 D1:DCA8 30 50 60 E8 
              10 50 30 A0 	.db %00110000, %01010000, %01100000, %11101000, %00010000, %01010000, %00110000, %10100000
   46 D1:DCB0 61 78 30 B0 
              69 60 52 F4 	.db %01100001, %01111000, %00110000, %10110000, %01101001, %01100000, %01010010, %11110100
   47 D1:DCB8 30 FC 0A 5C 
              18 38 34 5E 	.db %00110000, %11111100, %00001010, %01011100, %00011000, %00111000, %00110100, %01011110
   48 D1:DCC0 06 2F 03 57 
              03 8E 07 16 	.db %00000110, %00101111, %00000011, %01010111, %00000011, %10001110, %00000111, %00010110
   49 D1:DCC8 8A AF 07 1C 	.db %10001010, %10101111, %00000111, %00011100
   50 D1:DCCC -  -  -  -  
   51 D1:DCCC -  -  -  -  
   52 D1:DCCC -  -  -  -  DualLeaf4:
   53 D1:DCCC 10 -  -  -  	.db %00010000
   54 D1:DCCD 0E 13 -  -  	.db 14, 19
   55 D1:DCCF 00 3C 03 F0 
              3F C0 FF 03 	.db %00000000, %00111100, %00000011, %11110000, %00111111, %11000000, %11111111, %00000011
   56 D1:DCD7 FC 3F F0 FF 
              CF FC 3F C3 	.db %11111100, %00111111, %11110000, %11111111, %11001111, %11111100, %00111111, %11000011
   57 D1:DCDF FF 0F F0 3F 
              00 FF 03 FF 	.db %11111111, %00001111, %11110000, %00111111, %00000000, %11111111, %00000011, %11111111
   58 D1:DCE7 07 FF 0F FC 
              3F F0 3F C0 	.db %00000111, %11111111, %00001111, %11111100, %00111111, %11110000, %00111111, %11000000
   59 D1:DCEF 3F 00 -  -  	.db %00111111, %00000000
   60 D1:DCF1 -  -  -  -  
   61 D1:DCF1 45 -  -  -  	.db %01000101
   62 D1:DCF2 -  -  -  -  
   63 D1:DCF2 10 81 42 C5 
              C3 F1 7C 2F 	.db %00010000, %10000001, %01000010, %11000101, %11000011, %11110001, %01111100, %00101111
   64 D1:DCFA 37 13 E9 F4 
              E8 E0 3C 06 	.db %00110111, %00010011, %11101001, %11110100, %11101000, %11100000, %00111100, %00000110
   65 D1:DD02 A1 D4 7E 7E 	.db %10100001, %11010100, %01111110, %01111110
   66 D1:DD06 -  -  -  -  
   67 D1:DD06 -  -  -  -  
   68 D1:DD06 -  -  -  -  DualLeaf3:
   69 D1:DD06 10 -  -  -  	.db %00010000
   70 D1:DD07 16 0B -  -  	.db 22, 11
   71 D1:DD09 F0 00 FF F0 
              0F FF F0 3F 	.db %11110000, %00000000, %11111111, %11110000, %00001111, %11111111, %11110000, %00111111
   72 D1:DD11 CF F3 FF 3F 
              CF F0 FF FF 	.db %11001111, %11110011, %11111111, %00111111, %11001111, %11110000, %11111111, %11111111
   73 D1:DD19 C0 FF FF 03 
              FF F0 0F FF 	.db %11000000, %11111111, %11111111, %00000011, %11111111, %11110000, %00001111, %11111111
   74 D1:DD21 00 0F FC 00 
              0F F0 00 -  	.db %00000000, %00001111, %11111100, %00000000, %00001111, %11110000, %00000000
   75 D1:DD28 -  -  -  -  
   76 D1:DD28 45 -  -  -  	.db %01000101
   77 D1:DD29 -  -  -  -  
   78 D1:DD29 00 10 00 F0 
              06 E0 05 F6 	.db %00000000, %00010000, %00000000, %11110000, %00000110, %11100000, %00000101, %11110110
   79 D1:DD31 02 F9 01 7E 
              82 FF 55 FE 	.db %00000010, %11111001, %00000001, %01111110, %10000010, %11111111, %01010101, %11111110
   80 D1:DD39 FF FF FF -  	.db %11111111, %11111111, %11111111
   81 D1:DD3C -  -  -  -  
   82 D1:DD3C -  -  -  -  
   83 D1:DD3C -  -  -  -  Branches_10:
   84 D1:DD3C 20 -  -  -  	.db %00100000
   85 D1:DD3D 12 0E -  -  	.db 18, 14
   86 D1:DD3F 00 0F C0 0F 
              F0 0F FC 03 	.db %00000000, %00001111, %11000000, %00001111, %11110000, %00001111, %11111100, %00000011
   87 D1:DD47 FF 03 FF C3 
              FF F3 FF FF 	.db %11111111, %00000011, %11111111, %11000011, %11111111, %11110011, %11111111, %11111111
   88 D1:DD4F FF FC FF FC 
              3F FC 0F FC 	.db %11111111, %11111100, %11111111, %11111100, %00111111, %11111100, %00001111, %11111100
   89 D1:DD57 03 FC 00 FF 
              00 33 00 00 	.db %00000011, %11111100, %00000000, %11111111, %00000000, %00110011, %00000000, %00000000
   90 D1:DD5F -  -  -  -  
   91 D1:DD5F 01 23 -  -  	.db %00000001, %00100011
   92 D1:DD61 -  -  -  -  
   93 D1:DD61 04 60 46 F0 
              15 BE 14 2D 	.db %00000100, %01100000, %01000110, %11110000, %00010101, %10111110, %00010100, %00101101
   94 D1:DD69 50 15 E5 00 
              55 39 55 04 	.db %01010000, %00010101, %11100101, %00000000, %01010101, %00111001, %01010101, %00000100
   95 D1:DD71 4A A9 10 01 
              5A D8 40 55 	.db %01001010, %10101001, %00010000, %00000001, %01011010, %11011000, %01000000, %01010101
   96 D1:DD79 2F 85 01 4E 
              25 0B E8 50 	.db %00101111, %10000101, %00000001, %01001110, %00100101, %00001011, %11101000, %01010000
   97 D1:DD81 A9 10 50 40 
              00 -  -  -  	.db %10101001, %00010000, %01010000, %01000000, %00000000
   98 D1:DD86 -  -  -  -  
   99 D1:DD86 -  -  -  -  
  100 D1:DD86 -  -  -  -  Branches_9:
  101 D1:DD86 20 -  -  -  	.db %00100000
  102 D1:DD87 12 0E -  -  	.db 18, 14
  103 D1:DD89 00 30 C0 3F 
              F0 0F FC 0F 	.db %00000000, %00110000, %11000000, %00111111, %11110000, %00001111, %11111100, %00001111
  104 D1:DD91 FF 0F FF FF 
              FF FF FF FF 	.db %11111111, %00001111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  105 D1:DD99 FF FF FF FF 
              FF FF CF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11001111, %11111111
  106 D1:DDA1 03 FF 00 FF 
              00 0C 00 00 	.db %00000011, %11111111, %00000000, %11111111, %00000000, %00001100, %00000000, %00000000
  107 D1:DDA9 -  -  -  -  
  108 D1:DDA9 01 23 -  -  	.db %00000001, %00100011
  109 D1:DDAB -  -  -  -  
  110 D1:DDAB 00 00 00 51 
              51 40 06 50 	.db %00000000, %00000000, %00000000, %01010001, %01010001, %01000000, %00000110, %01010000
  111 D1:DDB3 55 04 58 AA 
              A0 01 51 FB 	.db %01010101, %00000100, %01011000, %10101010, %10100000, %00000001, %01010001, %11111011
  112 D1:DDBB BF 05 45 B9 
              65 05 05 BA 	.db %10111111, %00000101, %01000101, %10111001, %01100101, %00000101, %00000101, %10111010
  113 D1:DDC3 50 11 BF BE 
              50 55 06 A9 	.db %01010000, %00010001, %10111111, %10111110, %01010000, %01010101, %00000110, %10101001
  114 D1:DDCB 44 40 00 14 
              15 05 15 40 	.db %01000100, %01000000, %00000000, %00010100, %00010101, %00000101, %00010101, %01000000
  115 D1:DDD3 04 00 00 -  	.db %00000100, %00000000, %00000000
  116 D1:DDD6 -  -  -  -  
  117 D1:DDD6 -  -  -  -  
  118 D1:DDD6 -  -  -  -  Branches_16:
  119 D1:DDD6 20 -  -  -  	.db %00100000
  120 D1:DDD7 0D 0D -  -  	.db 13, 13
  121 D1:DDD9 07 F8 3F 83 
              FC 1F C0 FC 	.db %00000111, %11111000, %00111111, %10000011, %11111100, %00011111, %11000000, %11111100
  122 D1:DDE1 0F C0 7C 07 
              C0 3C 03 C0 	.db %00001111, %11000000, %01111100, %00000111, %11000000, %00111100, %00000011, %11000000
  123 D1:DDE9 1E 01 E0 0C 
              00 00 -  -  	.db %00011110, %00000001, %11100000, %00001100, %00000000, %00000000
  124 D1:DDEF -  -  -  -  
  125 D1:DDEF 01 23 -  -  	.db %00000001, %00100011
  126 D1:DDF1 -  -  -  -  
  127 D1:DDF1 16 A4 12 D0 
              43 50 6C 00 	.db %00010110, %10100100, %00010010, %11010000, %01000011, %01010000, %01101100, %00000000
  128 D1:DDF9 94 0A 01 40 
              64 24 18 14 	.db %10010100, %00001010, %00000001, %01000000, %01100100, %00100100, %00011000, %00010100
  129 D1:DE01 10 00 -  -  	.db %00010000, %00000000
  130 D1:DE03 -  -  -  -  
  131 D1:DE03 -  -  -  -  
  132 D1:DE03 -  -  -  -  Branches_13:
  133 D1:DE03 20 -  -  -  	.db %00100000
  134 D1:DE04 0E 06 -  -  	.db 14, 6
  135 D1:DE06 00 0C 33 FF 
              FF FF FF 3F 	.db %00000000, %00001100, %00110011, %11111111, %11111111, %11111111, %11111111, %00111111
  136 D1:DE0E FC 03 F0 -  	.db %11111100, %00000011, %11110000
  137 D1:DE11 -  -  -  -  
  138 D1:DE11 01 20 -  -  	.db %00000001, %00100000
  139 D1:DE13 -  -  -  -  
  140 D1:DE13 00 00 10 00 
              01 59 08 45 	.db %00000000, %00000000, %00010000, %00000000, %00000001, %01011001, %00001000, %01000101
  141 D1:DE1B AA 50 00 15 
              60 00 -  -  	.db %10101010, %01010000, %00000000, %00010101, %01100000, %00000000
  142 D1:DE21 -  -  -  -  
  143 D1:DE21 -  -  -  -  
  144 D1:DE21 -  -  -  -  Leaves1:
  145 D1:DE21 20 -  -  -  	.db %00100000
  146 D1:DE22 1A 15 -  -  	.db 26, 21
  147 D1:DE24 00 0F 00 00 
              0F FC 00 3F 	.db %00000000, %00001111, %00000000, %00000000, %00001111, %11111100, %00000000, %00111111
  148 D1:DE2C FF C0 0F FF 
              FC 0F FF FF 	.db %11111111, %11000000, %00001111, %11111111, %11111100, %00001111, %11111111, %11111111
  149 D1:DE34 03 FF FF C3 
              FF FF F0 FF 	.db %00000011, %11111111, %11111111, %11000011, %11111111, %11111111, %11110000, %11111111
  150 D1:DE3C FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  151 D1:DE44 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  152 D1:DE4C FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  153 D1:DE54 FF FF FF FF 
              3F FF FF CF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111, %11001111
  154 D1:DE5C FF FF C0 3F 
              FF F0 0F FF 	.db %11111111, %11111111, %11000000, %00111111, %11111111, %11110000, %00001111, %11111111
  155 D1:DE64 F0 00 FF F0 
              00 -  -  -  	.db %11110000, %00000000, %11111111, %11110000, %00000000
  156 D1:DE69 -  -  -  -  
  157 D1:DE69 48 50 -  -  	.db %01001000, %01010000
  158 D1:DE6B -  -  -  -  
  159 D1:DE6B 10 04 40 01 
              11 11 00 04 	.db %00010000, %00000100, %01000000, %00000001, %00010001, %00010001, %00000000, %00000100
  160 D1:DE73 44 40 00 00 
              01 00 00 00 	.db %01000100, %01000000, %00000000, %00000000, %00000001, %00000000, %00000000, %00000000
  161 D1:DE7B 44 00 00 00 
              01 10 00 22 	.db %01000100, %00000000, %00000000, %00000000, %00000001, %00010000, %00000000, %00100010
  162 D1:DE83 00 00 00 00 
              20 88 80 00 	.db %00000000, %00000000, %00000000, %00000000, %00100000, %10001000, %10000000, %00000000
  163 D1:DE8B 00 00 8A A2 
              00 08 88 00 	.db %00000000, %00000000, %10001010, %10100010, %00000000, %00001000, %10001000, %00000000
  164 D1:DE93 08 A2 82 22 
              22 20 02 28 	.db %00001000, %10100010, %10000010, %00100010, %00100010, %00100000, %00000010, %00101000
  165 D1:DE9B AA 88 88 88 
              08 8A 2A 2A 	.db %10101010, %10001000, %10001000, %10001000, %00001000, %10001010, %00101010, %00101010
  166 D1:DEA3 AA AA 88 2A 
              8A AA AA AA 	.db %10101010, %10101010, %10001000, %00101010, %10001010, %10101010, %10101010, %10101010
  167 D1:DEAB AA 8A AA AA 
              AA AA AA A8 	.db %10101010, %10001010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101000
  168 D1:DEB3 AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  169 D1:DEBB AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  170 D1:DEC3 AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  171 D1:DECB AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  172 D1:DED3 AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010
  173 D1:DED7 -  -  -  -  
  174 D1:DED7 -  -  -  -  
  175 D1:DED7 -  -  -  -  DualLeaf1:
  176 D1:DED7 10 -  -  -  	.db %00010000
  177 D1:DED8 10 0C -  -  	.db 16, 12
  178 D1:DEDA 03 C0 0F F0 
              3F FC 3F FC 	.db %00000011, %11000000, %00001111, %11110000, %00111111, %11111100, %00111111, %11111100
  179 D1:DEE2 FF FF FF 3F 
              FC 3F FC 3F 	.db %11111111, %11111111, %11111111, %00111111, %11111100, %00111111, %11111100, %00111111
  180 D1:DEEA FC 0F F0 0F 
              F0 0F C0 0C 	.db %11111100, %00001111, %11110000, %00001111, %11110000, %00001111, %11000000, %00001100
  181 D1:DEF2 -  -  -  -  
  182 D1:DEF2 45 -  -  -  	.db %01000101
  183 D1:DEF3 -  -  -  -  
  184 D1:DEF3 01 40 A8 17 
              40 BF 00 FA 	.db %00000001, %01000000, %10101000, %00010111, %01000000, %10111111, %00000000, %11111010
  185 D1:DEFB 05 D0 BF 17 
              C7 E7 D7 -  	.db %00000101, %11010000, %10111111, %00010111, %11000111, %11100111, %11010111
  186 D1:DF02 -  -  -  -  
  187 D1:DF02 -  -  -  -  
  188 D1:DF02 -  -  -  -  DualLeaf2:
  189 D1:DF02 10 -  -  -  	.db %00010000
  190 D1:DF03 12 0C -  -  	.db 18, 12
  191 D1:DF05 03 C0 00 FC 
              00 FF 00 FF 	.db %00000011, %11000000, %00000000, %11111100, %00000000, %11111111, %00000000, %11111111
  192 D1:DF0D F0 3F FF 0F 
              CF CF F3 FF 	.db %11110000, %00111111, %11111111, %00001111, %11001111, %11001111, %11110011, %11111111
  193 D1:DF15 F0 3F FC 0F 
              FF 00 FF C0 	.db %11110000, %00111111, %11111100, %00001111, %11111111, %00000000, %11111111, %11000000
  194 D1:DF1D 3F C0 03 -  	.db %00111111, %11000000, %00000011
  195 D1:DF20 -  -  -  -  
  196 D1:DF20 45 -  -  -  	.db %01000101
  197 D1:DF21 -  -  -  -  
  198 D1:DF21 02 05 02 E0 
              5F 85 F4 2F 	.db %00000010, %00000101, %00000010, %11100000, %01011111, %10000101, %11110100, %00101111
  199 D1:DF29 E8 2F 45 FE 
              5E 8F D3 C0 	.db %11101000, %00101111, %01000101, %11111110, %01011110, %10001111, %11010011, %11000000
  200 D1:DF31 -  -  -  -  
  201 D1:DF31 -  -  -  -  
  202 D1:DF31 -  -  -  -  Branches_6:
  203 D1:DF31 20 -  -  -  	.db %00100000
  204 D1:DF32 12 0B -  -  	.db 18, 11
  205 D1:DF34 37 3F 3F FF 
              FF FF FF FF 	.db %00110111, %00111111, %00111111, %11111111, %11111111, %11111111, %11111111, %11111111
  206 D1:DF3C FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  207 D1:DF44 FF FF FF FF 
              FC FF F0 00 	.db %11111111, %11111111, %11111111, %11111111, %11111100, %11111111, %11110000, %00000000
  208 D1:DF4C 0C -  -  -  	.db %00001100
  209 D1:DF4D -  -  -  -  
  210 D1:DF4D 01 23 -  -  	.db %00000001, %00100011
  211 D1:DF4F -  -  -  -  
  212 D1:DF4F 00 00 00 14 
              00 15 40 10 	.db %00000000, %00000000, %00000000, %00010100, %00000000, %00010101, %01000000, %00010000
  213 D1:DF57 05 44 01 55 
              94 41 55 15 	.db %00000101, %01000100, %00000001, %01010101, %10010100, %01000001, %01010101, %00010101
  214 D1:DF5F 2D CA 86 99 
              AA E6 BF FF 	.db %00101101, %11001010, %10000110, %10011001, %10101010, %11100110, %10111111, %11111111
  215 D1:DF67 FF C8 59 15 
              A6 A8 16 15 	.db %11111111, %11001000, %01011001, %00010101, %10100110, %10101000, %00010110, %00010101
  216 D1:DF6F 01 54 15 41 
              55 00 14 00 	.db %00000001, %01010100, %00010101, %01000001, %01010101, %00000000, %00010100, %00000000
  217 D1:DF77 00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000
  218 D1:DF7B -  -  -  -  
  219 D1:DF7B -  -  -  -  
  220 D1:DF7B -  -  -  -  Branches_7:
  221 D1:DF7B 20 -  -  -  	.db %00100000
  222 D1:DF7C 12 0A -  -  	.db 18, 10
  223 D1:DF7E FF 3C FF FF 
              FF FF FF FF 	.db %11111111, %00111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  224 D1:DF86 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  225 D1:DF8E FF FF FF F3 
              C3 C0 F0 -  	.db %11111111, %11111111, %11111111, %11110011, %11000011, %11000000, %11110000
  226 D1:DF95 -  -  -  -  
  227 D1:DF95 01 23 -  -  	.db %00000001, %00100011
  228 D1:DF97 -  -  -  -  
  229 D1:DF97 00 00 00 00 
              55 40 01 00 	.db %00000000, %00000000, %00000000, %00000000, %01010101, %01000000, %00000001, %00000000
  230 D1:DF9F 90 01 55 45 
              51 15 55 05 	.db %10010000, %00000001, %01010101, %01000101, %01010001, %00010101, %01010101, %00000101
  231 D1:DFA7 00 AB FA 9D 
              FA AF AA FB 	.db %00000000, %10101011, %11111010, %10011101, %11111010, %10101111, %10101010, %11111011
  232 D1:DFAF AA BF 05 51 
              55 51 55 44 	.db %10101010, %10111111, %00000101, %01010001, %01010101, %01010001, %01010101, %01000100
  233 D1:DFB7 15 10 44 00 
              00 00 05 00 	.db %00010101, %00010000, %01000100, %00000000, %00000000, %00000000, %00000101, %00000000
  234 D1:DFBF 00 -  -  -  	.db %00000000
  235 D1:DFC0 -  -  -  -  
  236 D1:DFC0 -  -  -  -  
  237 D1:DFC0 -  -  -  -  Branches_15:
  238 D1:DFC0 20 -  -  -  	.db %00100000
  239 D1:DFC1 09 0E -  -  	.db 9, 14
  240 D1:DFC3 80 60 38 1E 
              07 C3 F1 FE 	.db %10000000, %01100000, %00111000, %00011110, %00000111, %11000011, %11110001, %11111110
  241 D1:DFCB 7F 1F 87 C1 
              E0 F0 18 0C 	.db %01111111, %00011111, %10000111, %11000001, %11100000, %11110000, %00011000, %00001100
  242 D1:DFD3 -  -  -  -  
  243 D1:DFD3 01 23 -  -  	.db %00000001, %00100011
  244 D1:DFD5 -  -  -  -  
  245 D1:DFD5 00 01 01 00 
              64 00 84 01 	.db %00000000, %00000001, %00000001, %00000000, %01100100, %00000000, %10000100, %00000001
  246 D1:DFDD A1 06 90 6C 
              68 10 40 -  	.db %10100001, %00000110, %10010000, %01101100, %01101000, %00010000, %01000000
  247 D1:DFE4 -  -  -  -  
  248 D1:DFE4 -  -  -  -  
  249 D1:DFE4 -  -  -  -  Branches_8:
  250 D1:DFE4 20 -  -  -  	.db %00100000
  251 D1:DFE5 0A 0E -  -  	.db 10, 14
  252 D1:DFE7 03 C3 F3 FC 
              FF 3F FF FF 	.db %00000011, %11000011, %11110011, %11111100, %11111111, %00111111, %11111111, %11111111
  253 D1:DFEF FF FF FF 3F 
              CF F3 F0 F0 	.db %11111111, %11111111, %11111111, %00111111, %11001111, %11110011, %11110000, %11110000
  254 D1:DFF7 3C 00 -  -  	.db %00111100, %00000000
  255 D1:DFF9 -  -  -  -  
  256 D1:DFF9 01 23 -  -  	.db %00000001, %00100011
  257 D1:DFFB -  -  -  -  
  258 D1:DFFB 06 00 60 12 
              90 5B 51 1A 	.db %00000110, %00000000, %01100000, %00010010, %10010000, %01011011, %01010001, %00011010
  259 D1:E003 50 51 94 11 
              F9 45 6E 50 	.db %01010000, %01010001, %10010100, %00010001, %11111001, %01000101, %01101110, %01010000
  260 D1:E00B 4B 84 5E 54 
              B8 50 A1 01 	.db %01001011, %10000100, %01011110, %01010100, %10111000, %01010000, %10100001, %00000001
  261 D1:E013 44 40 -  -  	.db %01000100, %01000000
  262 D1:E015 -  -  -  -  
  263 D1:E015 -  -  -  -  
  264 D1:E015 -  -  -  -  Branches_12:
  265 D1:E015 20 -  -  -  	.db %00100000
  266 D1:E016 12 0A -  -  	.db 18, 10
  267 D1:E018 00 00 C0 3F 
              F0 FF FF FF 	.db %00000000, %00000000, %11000000, %00111111, %11110000, %11111111, %11111111, %11111111
  268 D1:E020 FF FF FF FF 
              FF FF FF FC 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111100
  269 D1:E028 0F FF 00 0F 
              C0 00 F0 -  	.db %00001111, %11111111, %00000000, %00001111, %11000000, %00000000, %11110000
  270 D1:E02F -  -  -  -  
  271 D1:E02F 01 23 -  -  	.db %00000001, %00100011
  272 D1:E031 -  -  -  -  
  273 D1:E031 00 00 00 00 
              05 54 50 01 	.db %00000000, %00000000, %00000000, %00000000, %00000101, %01010100, %01010000, %00000001
  274 D1:E039 45 04 16 3A 
              5F 2A F8 F2 	.db %01000101, %00000100, %00010110, %00111010, %01011111, %00101010, %11111000, %11110010
  275 D1:E041 12 9A C5 6A 
              00 00 15 06 	.db %00010010, %10011010, %11000101, %01101010, %00000000, %00000000, %00010101, %00000110
  276 D1:E049 90 00 14 10 
              14 00 -  -  	.db %10010000, %00000000, %00010100, %00010000, %00010100, %00000000
  277 D1:E04F -  -  -  -  
  278 D1:E04F -  -  -  -  
  279 D1:E04F -  -  -  -  LeavesDark:
  280 D1:E04F 10 -  -  -  	.db %00010000
  281 D1:E050 1A 15 -  -  	.db 26, 21
  282 D1:E052 00 0F 00 00 
              0F FC 00 3F 	.db %00000000, %00001111, %00000000, %00000000, %00001111, %11111100, %00000000, %00111111
  283 D1:E05A FF C0 0F FF 
              FC 0F FF FF 	.db %11111111, %11000000, %00001111, %11111111, %11111100, %00001111, %11111111, %11111111
  284 D1:E062 03 FF FF C3 
              FF FF F0 FF 	.db %00000011, %11111111, %11111111, %11000011, %11111111, %11111111, %11110000, %11111111
  285 D1:E06A FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  286 D1:E072 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  287 D1:E07A FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  288 D1:E082 FF FF FF FF 
              3F FF FF CF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111, %11001111
  289 D1:E08A FF FF C0 3F 
              FF F0 0F FF 	.db %11111111, %11111111, %11000000, %00111111, %11111111, %11110000, %00001111, %11111111
  290 D1:E092 F0 00 FF F0 
              00 -  -  -  	.db %11110000, %00000000, %11111111, %11110000, %00000000
  291 D1:E097 -  -  -  -  
  292 D1:E097 54 -  -  -  	.db %01010100
  293 D1:E098 -  -  -  -  
  294 D1:E098 4A A1 54 02 
              A9 40 55 20 	.db %01001010, %10100001, %01010100, %00000010, %10101001, %01000000, %01010101, %00100000
  295 D1:E0A0 0A 24 80 02 
              20 02 20 10 	.db %00001010, %00100100, %10000000, %00000010, %00100000, %00000010, %00100000, %00010000
  296 D1:E0A8 00 84 40 00 
              00 00 00 00 	.db %00000000, %10000100, %01000000, %00000000, %00000000, %00000000, %00000000, %00000000
  297 D1:E0B0 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  298 D1:E0B8 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  299 D1:E0C0 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  300 D1:E0C8 00 00 00 00 
              00 00 -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  301 D1:E0CE -  -  -  -  
  302 D1:E0CE -  -  -  -  
  303 D1:E0CE -  -  -  -  Leaves2:
  304 D1:E0CE 20 -  -  -  	.db %00100000
  305 D1:E0CF 1A 12 -  -  	.db 26, 18
  306 D1:E0D1 0F 00 00 0F 
              F0 0F 03 FC 	.db %00001111, %00000000, %00000000, %00001111, %11110000, %00001111, %00000011, %11111100
  307 D1:E0D9 0F F3 FF FF 
              FC FF FF FF 	.db %00001111, %11110011, %11111111, %11111111, %11111100, %11111111, %11111111, %11111111
  308 D1:E0E1 3F FF FF FF 
              FF FF FF FF 	.db %00111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  309 D1:E0E9 FF FF FF FF 
              FF CF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11001111, %11111111, %11111111
  310 D1:E0F1 F3 FF FF F0 
              FF FF FC 3F 	.db %11110011, %11111111, %11111111, %11110000, %11111111, %11111111, %11111100, %00111111
  311 D1:E0F9 FF FF 0F FF 
              FF 00 FF FF 	.db %11111111, %11111111, %00001111, %11111111, %11111111, %00000000, %11111111, %11111111
  312 D1:E101 C0 3F FF F0 
              03 FF F0 00 	.db %11000000, %00111111, %11111111, %11110000, %00000011, %11111111, %11110000, %00000000
  313 D1:E109 0F F0 00 -  	.db %00001111, %11110000, %00000000
  314 D1:E10C -  -  -  -  
  315 D1:E10C 48 50 -  -  	.db %01001000, %01010000
  316 D1:E10E -  -  -  -  
  317 D1:E10E 00 01 00 00 
              04 40 01 00 	.db %00000000, %00000001, %00000000, %00000000, %00000100, %01000000, %00000001, %00000000
  318 D1:E116 01 11 00 00 
              14 40 00 40 	.db %00000001, %00010001, %00000000, %00000000, %00010100, %01000000, %00000000, %01000000
  319 D1:E11E 00 00 04 10 
              00 00 00 00 	.db %00000000, %00000000, %00000100, %00010000, %00000000, %00000000, %00000000, %00000000
  320 D1:E126 11 00 00 00 
              00 00 00 00 	.db %00010001, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  321 D1:E12E 00 A2 00 02 
              88 80 02 0A 	.db %00000000, %10100010, %00000000, %00000010, %10001000, %10000000, %00000010, %00001010
  322 D1:E136 88 0A 8A A2 
              20 88 A2 28 	.db %10001000, %00001010, %10001010, %10100010, %00100000, %10001000, %10100010, %00101000
  323 D1:E13E AA AA 88 8A 
              A8 A2 AA AA 	.db %10101010, %10101010, %10001000, %10001010, %10101000, %10100010, %10101010, %10101010
  324 D1:E146 A2 2A AA AA 
              AA AA AA AA 	.db %10100010, %00101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  325 D1:E14E AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  326 D1:E156 AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  327 D1:E15E AA AA AA AA 
              AA AA AA AA 	.db %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010, %10101010
  328 D1:E166 -  -  -  -  
  329 D1:E166 -  -  -  -  
  330 D1:E166 -  -  -  -  LeavesLight:
  331 D1:E166 10 -  -  -  	.db %00010000
  332 D1:E167 1A 15 -  -  	.db 26, 21
  333 D1:E169 00 0F 00 00 
              0F FC 00 3F 	.db %00000000, %00001111, %00000000, %00000000, %00001111, %11111100, %00000000, %00111111
  334 D1:E171 FF C0 0F FF 
              FC 0F FF FF 	.db %11111111, %11000000, %00001111, %11111111, %11111100, %00001111, %11111111, %11111111
  335 D1:E179 03 FF FF C3 
              FF FF F0 FF 	.db %00000011, %11111111, %11111111, %11000011, %11111111, %11111111, %11110000, %11111111
  336 D1:E181 FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  337 D1:E189 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  338 D1:E191 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  339 D1:E199 FF FF FF FF 
              3F FF FF CF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111, %11001111
  340 D1:E1A1 FF FF C0 3F 
              FF F0 0F FF 	.db %11111111, %11111111, %11000000, %00111111, %11111111, %11110000, %00001111, %11111111
  341 D1:E1A9 F0 00 FF F0 
              00 -  -  -  	.db %11110000, %00000000, %11111111, %11110000, %00000000
  342 D1:E1AE -  -  -  -  
  343 D1:E1AE 48 -  -  -  	.db %01001000
  344 D1:E1AF -  -  -  -  
  345 D1:E1AF 4A A1 54 02 
              A9 40 55 20 	.db %01001010, %10100001, %01010100, %00000010, %10101001, %01000000, %01010101, %00100000
  346 D1:E1B7 0A 24 80 02 
              20 02 20 10 	.db %00001010, %00100100, %10000000, %00000010, %00100000, %00000010, %00100000, %00010000
  347 D1:E1BF 00 84 40 00 
              00 00 00 00 	.db %00000000, %10000100, %01000000, %00000000, %00000000, %00000000, %00000000, %00000000
  348 D1:E1C7 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  349 D1:E1CF 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  350 D1:E1D7 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  351 D1:E1DF 00 00 00 00 
              00 00 -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  352 D1:E1E5 -  -  -  -  
  353 D1:E1E5 -  -  -  -  
  354 D1:E1E5 -  -  -  -  Branches_11:
  355 D1:E1E5 20 -  -  -  	.db %00100000
  356 D1:E1E6 12 0A -  -  	.db 18, 10
  357 D1:E1E8 00 03 C3 CF 
              FF FF FF FF 	.db %00000000, %00000011, %11000011, %11001111, %11111111, %11111111, %11111111, %11111111
  358 D1:E1F0 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  359 D1:E1F8 FF FF 03 F3 
              C0 00 30 -  	.db %11111111, %11111111, %00000011, %11110011, %11000000, %00000000, %00110000
  360 D1:E1FF -  -  -  -  
  361 D1:E1FF 01 32 -  -  	.db %00000001, %00110010
  362 D1:E201 -  -  -  -  
  363 D1:E201 00 00 00 15 
              00 00 05 44 	.db %00000000, %00000000, %00000000, %00010101, %00000000, %00000000, %00000101, %01000100
  364 D1:E209 15 65 55 04 
              10 FB FA 3F 	.db %00010101, %01100101, %01010101, %00000100, %00010000, %11111011, %11111010, %00111111
  365 D1:E211 FF B7 D3 FB 
              EA BE 15 54 	.db %11111111, %10110111, %11010011, %11111011, %11101010, %10111110, %00010101, %01010100
  366 D1:E219 14 15 E0 00 
              14 10 15 00 	.db %00010100, %00010101, %11100000, %00000000, %00010100, %00010000, %00010101, %00000000
  367 D1:E221 00 10 -  -  	.db %00000000, %00010000
  368 D1:E223 -  -  -  -  
  369 D1:E223 -  -  -  -  
  370 D1:E223 -  -  -  -  Branches_14:
  371 D1:E223 20 -  -  -  	.db %00100000
  372 D1:E224 06 0E -  -  	.db 6, 14
  373 D1:E226 30 C3 0C 39 
              E7 9E FF FF 	.db %00110000, %11000011, %00001100, %00111001, %11100111, %10011110, %11111111, %11111111
  374 D1:E22E FF FF F0 -  	.db %11111111, %11111111, %11110000
  375 D1:E231 -  -  -  -  
  376 D1:E231 01 23 -  -  	.db %00000001, %00100011
  377 D1:E233 -  -  -  -  
  378 D1:E233 00 00 10 20 
              20 20 1D 06 	.db %00000000, %00000000, %00010000, %00100000, %00100000, %00100000, %00011101, %00000110
  379 D1:E23B 90 65 06 10 
              59 07 90 -  	.db %10010000, %01100101, %00000110, %00010000, %01011001, %00000111, %10010000
  380 D1:E242 -  -  -  -  
  381 D1:E242 -  -  -  -  
  382 D1:E242 -  -  -  -  Branches_4:
  383 D1:E242 20 -  -  -  	.db %00100000
  384 D1:E243 12 0E -  -  	.db 18, 14
  385 D1:E245 00 03 CF FF 
              FF FF FF FF 	.db %00000000, %00000011, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111
  386 D1:E24D FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  387 D1:E255 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  388 D1:E25D FF FF FF 3F 
              FF C0 FF 30 	.db %11111111, %11111111, %11111111, %00111111, %11111111, %11000000, %11111111, %00110000
  389 D1:E265 -  -  -  -  
  390 D1:E265 01 23 -  -  	.db %00000001, %00100011
  391 D1:E267 -  -  -  -  
  392 D1:E267 00 00 00 00 
              00 00 50 45 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %01010000, %01000101
  393 D1:E26F 01 55 50 00 
              25 00 14 16 	.db %00000001, %01010101, %01010000, %00000000, %00100101, %00000000, %00010100, %00010110
  394 D1:E277 11 45 5A 19 
              2A AA 58 3F 	.db %00010001, %01000101, %01011010, %00011001, %00101010, %10101010, %01011000, %00111111
  395 D1:E27F AA AA AF FE 
              BD FF DF E2 	.db %10101010, %10101010, %10101111, %11111110, %10111101, %11111111, %11011111, %11100010
  396 D1:E287 55 64 02 AA 
              60 00 05 50 	.db %01010101, %01100100, %00000010, %10101010, %01100000, %00000000, %00000101, %01010000
  397 D1:E28F 54 15 54 00 
              00 00 00 05 	.db %01010100, %00010101, %01010100, %00000000, %00000000, %00000000, %00000000, %00000101
  398 D1:E297 10 55 00 00 
              00 00 00 00 	.db %00010000, %01010101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  399 D1:E29F 00 -  -  -  	.db %00000000
  400 D1:E2A0 -  -  -  -  
  401 D1:E2A0 -  -  -  -  
  402 D1:E2A0 -  -  -  -  Branches_5:
  403 D1:E2A0 20 -  -  -  	.db %00100000
  404 D1:E2A1 12 0E -  -  	.db 18, 14
  405 D1:E2A3 00 C0 CF FF 
              FF FF FF FF 	.db %00000000, %11000000, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111
  406 D1:E2AB FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  407 D1:E2B3 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  408 D1:E2BB FF FF FF 3F 
              FF C3 C3 F0 	.db %11111111, %11111111, %11111111, %00111111, %11111111, %11000011, %11000011, %11110000
  409 D1:E2C3 -  -  -  -  
  410 D1:E2C3 01 23 -  -  	.db %00000001, %00100011
  411 D1:E2C5 -  -  -  -  
  412 D1:E2C5 00 00 00 00 
              01 00 05 05 	.db %00000000, %00000000, %00000000, %00000000, %00000001, %00000000, %00000101, %00000101
  413 D1:E2CD 41 41 45 40 
              00 01 15 45 	.db %01000001, %01000001, %01000101, %01000000, %00000000, %00000001, %00010101, %01000101
  414 D1:E2D5 55 45 65 A5 
              AA 66 AA FA 	.db %01010101, %01000101, %01100101, %10100101, %10101010, %01100110, %10101010, %11111010
  415 D1:E2DD F9 FF BF FE 
              AA F6 BA 99 	.db %11111001, %11111111, %10111111, %11111110, %10101010, %11110110, %10111010, %10011001
  416 D1:E2E5 50 55 55 55 
              51 50 00 01 	.db %01010000, %01010101, %01010101, %01010101, %01010001, %01010000, %00000000, %00000001
  417 D1:E2ED 54 51 41 50 
              00 00 01 40 	.db %01010100, %01010001, %01000001, %01010000, %00000000, %00000000, %00000001, %01000000
  418 D1:E2F5 15 45 00 00 
              00 00 00 00 	.db %00010101, %01000101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  419 D1:E2FD 00 -  -  -  	.db %00000000
  420 D1:E2FE -  -  -  -  
  421 D1:E2FE -  -  -  -  
  422 D1:E2FE -  -  -  -  Branches_3:
  423 D1:E2FE 20 -  -  -  	.db %00100000
  424 D1:E2FF 12 0E -  -  	.db 18, 14
  425 D1:E301 0F CF FF FF 
              FF FF FF FF 	.db %00001111, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  426 D1:E309 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  427 D1:E311 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  428 D1:E319 FF FF FF FF 
              3F FF 00 F0 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %00000000, %11110000
  429 D1:E321 -  -  -  -  
  430 D1:E321 01 23 -  -  	.db %00000001, %00100011
  431 D1:E323 -  -  -  -  
  432 D1:E323 00 00 00 00 
              50 00 15 55 	.db %00000000, %00000000, %00000000, %00000000, %01010000, %00000000, %00010101, %01010101
  433 D1:E32B 50 15 00 00 
              00 00 00 65 	.db %01010000, %00010101, %00000000, %00000000, %00000000, %00000000, %00000000, %01100101
  434 D1:E333 05 98 A2 55 
              05 AA 32 AA 	.db %00000101, %10011000, %10100010, %01010101, %00000101, %10101010, %00110010, %10101010
  435 D1:E33B BD 4B FF FF 
              FF BF EA 95 	.db %10111101, %01001011, %11111111, %11111111, %11111111, %10111111, %11101010, %10010101
  436 D1:E343 5E AA E6 55 
              A9 55 6A 56 	.db %01011110, %10101010, %11100110, %01010101, %10101001, %01010101, %01101010, %01010110
  437 D1:E34B 40 12 50 00 
              00 50 01 54 	.db %01000000, %00010010, %01010000, %00000000, %00000000, %01010000, %00000001, %01010100
  438 D1:E353 15 54 00 15 
              40 00 00 00 	.db %00010101, %01010100, %00000000, %00010101, %01000000, %00000000, %00000000, %00000000
  439 D1:E35B 40 00 00 -  	.db %01000000, %00000000, %00000000
  440 D1:E35E -  -  -  -  
  441 D1:E35E -  -  -  -  
  442 D1:E35E -  -  -  -  Branches_2:
  443 D1:E35E 20 -  -  -  	.db %00100000
  444 D1:E35F 12 0E -  -  	.db 18, 14
  445 D1:E361 0F C3 FF FF 
              FF FF FF FF 	.db %00001111, %11000011, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  446 D1:E369 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  447 D1:E371 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  448 D1:E379 FF FF FF FF 
              FF F3 0F 30 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11110011, %00001111, %00110000
  449 D1:E381 -  -  -  -  
  450 D1:E381 01 32 -  -  	.db %00000001, %00110010
  451 D1:E383 -  -  -  -  
  452 D1:E383 00 00 00 00 
              50 00 00 05 	.db %00000000, %00000000, %00000000, %00000000, %01010000, %00000000, %00000000, %00000101
  453 D1:E38B 54 15 55 45 
              40 00 00 00 	.db %01010100, %00010101, %01010101, %01000101, %01000000, %00000000, %00000000, %00000000
  454 D1:E393 55 55 14 05 
              59 FF FD 55 	.db %01010101, %01010101, %00010100, %00000101, %01011001, %11111111, %11111101, %01010101
  455 D1:E39B 47 EA AA AE 
              FF EF FF F6 	.db %01000111, %11101010, %10101010, %10101110, %11111111, %11101111, %11111111, %11110110
  456 D1:E3A3 AA AA 5D 07 
              F4 FF F5 55 	.db %10101010, %10101010, %01011101, %00000111, %11110100, %11111111, %11110101, %01010101
  457 D1:E3AB 05 55 75 15 
              15 55 00 00 	.db %00000101, %01010101, %01110101, %00010101, %00010101, %01010101, %00000000, %00000000
  458 D1:E3B3 01 00 05 50 
              00 40 05 50 	.db %00000001, %00000000, %00000101, %01010000, %00000000, %01000000, %00000101, %01010000
  459 D1:E3BB 00 00 00 -  	.db %00000000, %00000000, %00000000
  460 D1:E3BE -  -  -  -  
  461 D1:E3BE -  -  -  -  
  462 D1:E3BE -  -  -  -  GroundDirtFull:
  463 D1:E3BE 24 -  -  -  	.db %00100100
  464 D1:E3BF 10 10 -  -  	.db 16, 16
  465 D1:E3C1 15 00 -  -  	.db %00010101, %00000000
  466 D1:E3C3 -  -  -  -  
  467 D1:E3C3 04 00 00 00 
              04 00 00 00 	.db %00000100, %00000000, %00000000, %00000000, %00000100, %00000000, %00000000, %00000000
  468 D1:E3CB AA AA 40 4A 
              21 12 10 24 	.db %10101010, %10101010, %01000000, %01001010, %00100001, %00010010, %00010000, %00100100
  469 D1:E3D3 01 01 00 04 
              44 2A A8 10 	.db %00000001, %00000001, %00000000, %00000100, %01000100, %00101010, %10101000, %00010000
  470 D1:E3DB 10 A5 0A 80 
              04 00 00 A1 	.db %00010000, %10100101, %00001010, %10000000, %00000100, %00000000, %00000000, %10100001
  471 D1:E3E3 84 40 00 61 
              10 10 00 10 	.db %10000100, %01000000, %00000000, %01100001, %00010000, %00010000, %00000000, %00010000
  472 D1:E3EB 0A AA 94 00 
              29 10 12 84 	.db %00001010, %10101010, %10010100, %00000000, %00101001, %00010000, %00010010, %10000100
  473 D1:E3F3 10 00 42 84 
              01 29 00 80 	.db %00010000, %00000000, %01000010, %10000100, %00000001, %00101001, %00000000, %10000000
  474 D1:E3FB 04 A1 40 8A 
              A0 00 00 00 	.db %00000100, %10100001, %01000000, %10001010, %10100000, %00000000, %00000000, %00000000
  475 D1:E403 -  -  -  -  
  476 D1:E403 -  -  -  -  
  477 D1:E403 -  -  -  -  GroundDirtMound:
  478 D1:E403 20 -  -  -  	.db %00100000
  479 D1:E404 10 0C -  -  	.db 16, 12
  480 D1:E406 0F F0 3F FC 
              FF FF FF FF 	.db %00001111, %11110000, %00111111, %11111100, %11111111, %11111111, %11111111, %11111111
  481 D1:E40E FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  482 D1:E416 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  483 D1:E41E -  -  -  -  
  484 D1:E41E 01 50 -  -  	.db %00000001, %01010000
  485 D1:E420 -  -  -  -  
  486 D1:E420 00 00 05 55 
              50 05 56 59 	.db %00000000, %00000000, %00000101, %01010101, %01010000, %00000101, %01010110, %01011001
  487 D1:E428 50 55 96 5A 
              55 55 9A 56 	.db %01010000, %01010101, %10010110, %01011010, %01010101, %01010101, %10011010, %01010110
  488 D1:E430 56 A5 54 00 
              01 59 55 65 	.db %01010110, %10100101, %01010100, %00000000, %00000001, %01011001, %01010101, %01100101
  489 D1:E438 50 00 15 69 
              55 15 59 59 	.db %01010000, %00000000, %00010101, %01101001, %01010101, %00010101, %01011001, %01011001
  490 D1:E440 65 56 50 05 
              66 55 41 41 	.db %01100101, %01010110, %01010000, %00000101, %01100110, %01010101, %01000001, %01000001
  491 D1:E448 A6 65 95 55 
              95 -  -  -  	.db %10100110, %01100101, %10010101, %01010101, %10010101
  492 D1:E44D -  -  -  -  
  493 D1:E44D -  -  -  -  
  494 D1:E44D -  -  -  -  Tree_2:
  495 D1:E44D 10 -  -  -  	.db %00010000
  496 D1:E44E 1A 10 -  -  	.db 26, 16
  497 D1:E450 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  498 D1:E458 FF FF FF FF 
              FF 3F FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  499 D1:E460 CF FF FF F3 
              FF FF FC FF 	.db %11001111, %11111111, %11111111, %11110011, %11111111, %11111111, %11111100, %11111111
  500 D1:E468 FF FF 3F FF 
              FF CF FF FF 	.db %11111111, %11111111, %00111111, %11111111, %11111111, %11001111, %11111111, %11111111
  501 D1:E470 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  502 D1:E478 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  503 D1:E480 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  504 D1:E484 -  -  -  -  
  505 D1:E484 01 -  -  -  	.db %00000001
  506 D1:E485 -  -  -  -  
  507 D1:E485 01 12 40 80 
              4C DD 30 33 	.db %00000001, %00010010, %01000000, %10000000, %01001100, %11011101, %00110000, %00110011
  508 D1:E48D 27 CC 02 51 
              E4 02 59 D9 	.db %00100111, %11001100, %00000010, %01010001, %11100100, %00000010, %01011001, %11011001
  509 D1:E495 08 69 D9 01 
              69 9B 07 69 	.db %00001000, %01101001, %11011001, %00000001, %01101001, %10011011, %00000111, %01101001
  510 D1:E49D 1E 03 70 3E 
              03 D2 3E 00 	.db %00011110, %00000011, %01110000, %00111110, %00000011, %11010010, %00111110, %00000000
  511 D1:E4A5 A5 5C 80 F9 
              75 60 1C 6D 	.db %10100101, %01011100, %10000000, %11111001, %01110101, %01100000, %00011100, %01101101
  512 D1:E4AD 18 01 1B 86 
              02 46 69 41 	.db %00011000, %00000001, %00011011, %10000110, %00000010, %01000110, %01101001, %01000001
  513 D1:E4B5 91 82 40 -  	.db %10010001, %10000010, %01000000
  514 D1:E4B8 -  -  -  -  
  515 D1:E4B8 -  -  -  -  
  516 D1:E4B8 -  -  -  -  Tree_4:
  517 D1:E4B8 24 -  -  -  	.db %00100100
  518 D1:E4B9 1A 10 -  -  	.db 26, 16
  519 D1:E4BB 01 20 -  -  	.db %00000001, %00100000
  520 D1:E4BD -  -  -  -  
  521 D1:E4BD 14 45 40 15 
              54 25 61 44 	.db %00010100, %01000101, %01000000, %00010101, %01010100, %00100101, %01100001, %01000100
  522 D1:E4C5 14 05 55 00 
              41 11 01 45 	.db %00010100, %00000101, %01010101, %00000000, %01000001, %00010001, %00000001, %01000101
  523 D1:E4CD 50 54 24 21 
              10 00 95 05 	.db %01010000, %01010100, %00100100, %00100001, %00010000, %00000000, %10010101, %00000101
  524 D1:E4D5 41 41 11 00 
              09 10 94 15 	.db %01000001, %01000001, %00010001, %00000000, %00001001, %00010000, %10010100, %00010101
  525 D1:E4DD 11 11 00 95 
              09 49 45 10 	.db %00010001, %00010001, %00000000, %10010101, %00001001, %01001001, %01000101, %00010000
  526 D1:E4E5 01 09 50 94 
              95 51 00 50 	.db %00000001, %00001001, %01010000, %10010100, %10010101, %01010001, %00000000, %01010000
  527 D1:E4ED 95 09 49 45 
              40 45 09 40 	.db %10010101, %00001001, %01001001, %01000101, %01000000, %01000101, %00001001, %01000000
  528 D1:E4F5 90 95 54 01 
              50 A4 05 05 	.db %10010000, %10010101, %01010100, %00000001, %01010000, %10100100, %00000101, %00000101
  529 D1:E4FD 54 44 45 0A 
              42 50 55 00 	.db %01010100, %01000100, %01000101, %00001010, %01000010, %01010000, %01010101, %00000000
  530 D1:E505 10 54 14 95 
              41 02 04 11 	.db %00010000, %01010100, %00010100, %10010101, %01000001, %00000010, %00000100, %00010001
  531 D1:E50D 52 49 51 00 
              20 51 11 10 	.db %01010010, %01001001, %01010001, %00000000, %00100000, %01010001, %00010001, %00010000
  532 D1:E515 91 50 A5 05 
              11 12 15 54 	.db %10010001, %01010000, %10100101, %00000101, %00010001, %00010010, %00010101, %01010100
  533 D1:E51D 09 54 04 51 
              01 54 40 25 	.db %00001001, %01010100, %00000100, %01010001, %00000001, %01010100, %01000000, %00100101
  534 D1:E525 -  -  -  -  
  535 D1:E525 -  -  -  -  
  536 D1:E525 -  -  -  -  Tree_7:
  537 D1:E525 24 -  -  -  	.db %00100100
  538 D1:E526 1A 10 -  -  	.db 26, 16
  539 D1:E528 10 23 -  -  	.db %00010000, %00100011
  540 D1:E52A -  -  -  -  
  541 D1:E52A 10 05 08 28 
              85 28 81 62 	.db %00010000, %00000101, %00001000, %00101000, %10000101, %00101000, %10000001, %01100010
  542 D1:E532 5A 08 88 5C 
              BA 05 81 60 	.db %01011010, %00001000, %10001000, %01011100, %10111010, %00000101, %10000001, %01100000
  543 D1:E53A 88 95 CA B1 
              58 06 A0 49 	.db %10001000, %10010101, %11001010, %10110001, %01011000, %00000110, %10100000, %01001001
  544 D1:E542 62 89 51 68 
              48 60 16 2A 	.db %01100010, %10001001, %01010001, %01101000, %01001000, %01100000, %00010110, %00101010
  545 D1:E54A 54 15 80 87 
              85 EA 96 00 	.db %01010100, %00010101, %10000000, %10000111, %10000101, %11101010, %10010110, %00000000
  546 D1:E552 58 82 29 72 
              A1 C0 05 68 	.db %01011000, %10000010, %00101001, %01110010, %10100001, %11000000, %00000101, %01101000
  547 D1:E55A 2A 9E 22 1E 
              18 56 22 A5 	.db %00101010, %10011110, %00100010, %00011110, %00011000, %01010110, %00100010, %10100101
  548 D1:E562 67 25 80 01 
              62 A9 55 72 	.db %01100111, %00100101, %10000000, %00000001, %01100010, %10101001, %01010101, %01110010
  549 D1:E56A 5A 06 15 8A 
              56 95 97 81 	.db %01011010, %00000110, %00010101, %10001010, %01010110, %10010101, %10010111, %10000001
  550 D1:E572 00 51 25 A0 
              59 E5 00 15 	.db %00000000, %01010001, %00100101, %10100000, %01011001, %11100101, %00000000, %00010101
  551 D1:E57A D2 02 A1 58 
              50 41 60 89 	.db %11010010, %00000010, %10100001, %01011000, %01010000, %01000001, %01100000, %10001001
  552 D1:E582 28 97 96 10 
              16 08 A2 89 	.db %00101000, %10010111, %10010110, %00010000, %00010110, %00001000, %10100010, %10001001
  553 D1:E58A 7B 81 81 62 
              08 22 94 20 	.db %01111011, %10000001, %10000001, %01100010, %00001000, %00100010, %10010100, %00100000
  554 D1:E592 -  -  -  -  
  555 D1:E592 -  -  -  -  
  556 D1:E592 -  -  -  -  Tree_9:
  557 D1:E592 24 -  -  -  	.db %00100100
  558 D1:E593 1A 10 -  -  	.db 26, 16
  559 D1:E595 20 31 -  -  	.db %00100000, %00110001
  560 D1:E597 -  -  -  -  
  561 D1:E597 14 95 0A A8 
              A8 35 B3 49 	.db %00010100, %10010101, %00001010, %10101000, %10101000, %00110101, %10110011, %01001001
  562 D1:E59F D2 28 A8 8C 
              58 A0 56 EA 	.db %11010010, %00101000, %10101000, %10001100, %01011000, %10100000, %01010110, %11101010
  563 D1:E5A7 AA C8 CD 82 
              17 B8 AA AC 	.db %10101010, %11001000, %11001101, %10000010, %00010111, %10111000, %10101010, %10101100
  564 D1:E5AF 83 5B 25 6E 
              CA A8 23 35 	.db %10000011, %01011011, %00100101, %01101110, %11001010, %10101000, %00100011, %00110101
  565 D1:E5B7 88 68 2C 8A 
              A3 8D 60 C6 	.db %10001000, %01101000, %00101100, %10001010, %10100011, %10001101, %01100000, %11000110
  566 D1:E5BF C2 7A AB 0B 
              5A 0B 34 25 	.db %11000010, %01111010, %10101011, %00001011, %01011010, %00001011, %00110100, %00100101
  567 D1:E5C7 AA B0 85 0A 
              23 79 52 AA 	.db %10101010, %10110000, %10000101, %00001010, %00100011, %01111001, %01010010, %10101010
  568 D1:E5CF 21 63 BE 1E 
              21 68 AA 14 	.db %00100001, %01100011, %10111110, %00011110, %00100001, %01101000, %10101010, %00010100
  569 D1:E5D7 00 71 20 A5 
              EA B5 08 55 	.db %00000000, %01110001, %00100000, %10100101, %11101010, %10110101, %00001000, %01010101
  570 D1:E5DF 80 88 16 2B 
              68 34 5E 20 	.db %10000000, %10001000, %00010110, %00101011, %01101000, %00110100, %01011110, %00100000
  571 D1:E5E7 AB 48 AA 8D 
              CD A4 22 A2 	.db %10101011, %01001000, %10101010, %10001101, %11001101, %10100100, %00100010, %10100010
  572 D1:E5EF 8A 0F 5E D7 
              96 2A 28 88 	.db %10001010, %00001111, %01011110, %11010111, %10010110, %00101010, %00101000, %10001000
  573 D1:E5F7 D7 81 79 42 
              AA A8 8D 63 	.db %11010111, %10000001, %01111001, %01000010, %10101010, %10101000, %10001101, %01100011
  574 D1:E5FF -  -  -  -  
  575 D1:E5FF -  -  -  -  
  576 D1:E5FF -  -  -  -  Tree_6:
  577 D1:E5FF 24 -  -  -  	.db %00100100
  578 D1:E600 1A 10 -  -  	.db 26, 16
  579 D1:E602 01 23 -  -  	.db %00000001, %00100011
  580 D1:E604 -  -  -  -  
  581 D1:E604 06 50 5A A5 
              80 A9 98 15 	.db %00000110, %01010000, %01011010, %10100101, %10000000, %10101001, %10011000, %00010101
  582 D1:E60C 0A 9A 49 29 
              9B 49 50 99 	.db %00001010, %10011010, %01001001, %00101001, %10011011, %01001001, %01010000, %10011001
  583 D1:E614 61 83 50 85 
              59 43 66 48 	.db %01100001, %10000011, %01010000, %10000101, %01011001, %01000011, %01100110, %01001000
  584 D1:E61C A4 02 15 54 
              2A 69 96 83 	.db %10100100, %00000010, %00010101, %01010100, %00101010, %01101001, %10010110, %10000011
  585 D1:E624 80 45 00 9A 
              A9 A4 39 41 	.db %10000000, %01000101, %00000000, %10011010, %10101001, %10100100, %00111001, %01000001
  586 D1:E62C 41 0B 69 99 
              42 A4 94 90 	.db %01000001, %00001011, %01101001, %10011001, %01000010, %10100100, %10010100, %10010000
  587 D1:E634 06 9A 58 19 
              55 05 04 A6 	.db %00000110, %10011010, %01011000, %00011001, %01010101, %00000101, %00000100, %10100110
  588 D1:E63C 66 43 54 42 
              A5 4D A6 55 	.db %01100110, %01000011, %01010100, %01000010, %10100101, %01001101, %10100110, %01010101
  589 D1:E644 37 50 95 65 
              69 89 92 75 	.db %00110111, %01010000, %10010101, %01100101, %01101001, %10001001, %10010010, %01110101
  590 D1:E64C 29 69 96 54 
              DA 04 55 54 	.db %00101001, %01101001, %10010110, %01010100, %11011010, %00000100, %01010101, %01010100
  591 D1:E654 98 66 4D 10 
              05 59 05 96 	.db %10011000, %01100110, %01001101, %00010000, %00000101, %01011001, %00000101, %10010110
  592 D1:E65C 68 29 0A 41 
              42 69 96 50 	.db %01101000, %00101001, %00001010, %01000001, %01000010, %01101001, %10010110, %01010000
  593 D1:E664 D6 64 94 25 
              56 65 42 EA 	.db %11010110, %01100100, %10010100, %00100101, %01010110, %01100101, %01000010, %11101010
  594 D1:E66C -  -  -  -  
  595 D1:E66C -  -  -  -  
  596 D1:E66C -  -  -  -  Tree_3:
  597 D1:E66C 24 -  -  -  	.db %00100100
  598 D1:E66D 1A 10 -  -  	.db 26, 16
  599 D1:E66F 10 20 -  -  	.db %00010000, %00100000
  600 D1:E671 -  -  -  -  
  601 D1:E671 05 11 05 00 
              05 80 01 45 	.db %00000101, %00010001, %00000101, %00000000, %00000101, %10000000, %00000001, %01000101
  602 D1:E679 11 48 45 51 
              40 11 45 10 	.db %00010001, %01001000, %01000101, %01010001, %01000000, %00010001, %01000101, %00010000
  603 D1:E681 84 58 16 01 
              54 40 54 01 	.db %10000100, %01011000, %00010110, %00000001, %01010100, %01000000, %01010100, %00000001
  604 D1:E689 85 64 55 14 
              01 40 18 56 	.db %10000101, %01100100, %01010101, %00010100, %00000001, %01000000, %00011000, %01010110
  605 D1:E691 04 55 50 56 
              41 85 60 51 	.db %00000100, %01010101, %01010000, %01010110, %01000001, %10000101, %01100000, %01010001
  606 D1:E699 51 05 60 14 
              56 05 55 10 	.db %01010001, %00000101, %01100000, %00010100, %01010110, %00000101, %01010101, %00010000
  607 D1:E6A1 56 01 41 60 
              54 51 04 58 	.db %01010110, %00000001, %01000001, %01100000, %01010100, %01010001, %00000100, %01011000
  608 D1:E6A9 54 16 85 41 
              14 05 85 40 	.db %01010100, %00010110, %10000101, %01000001, %00010100, %00000101, %10000101, %01000000
  609 D1:E6B1 58 45 10 50 
              58 50 01 64 	.db %01011000, %01000101, %00010000, %01010000, %01011000, %01010000, %00000001, %01100100
  610 D1:E6B9 41 10 05 95 
              05 05 44 10 	.db %01000001, %00010000, %00000101, %10010101, %00000101, %00000101, %01000100, %00010000
  611 D1:E6C1 14 55 51 50 
              65 51 01 61 	.db %00010100, %01010101, %01010001, %01010000, %01100101, %01010001, %00000001, %01100001
  612 D1:E6C9 54 15 00 11 
              10 16 04 05 	.db %01010100, %00010101, %00000000, %00010001, %00010000, %00010110, %00000100, %00000101
  613 D1:E6D1 61 01 15 41 
              60 00 56 00 	.db %01100001, %00000001, %00010101, %01000001, %01100000, %00000000, %01010110, %00000000
  614 D1:E6D9 -  -  -  -  
  615 D1:E6D9 -  -  -  -  
  616 D1:E6D9 -  -  -  -  Tree_0:
  617 D1:E6D9 10 -  -  -  	.db %00010000
  618 D1:E6DA 1A 10 -  -  	.db 26, 16
  619 D1:E6DC FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  620 D1:E6E4 FF FF FF FF 
              FF 3F FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  621 D1:E6EC CF FF FF F3 
              FF FF FC FF 	.db %11001111, %11111111, %11111111, %11110011, %11111111, %11111111, %11111100, %11111111
  622 D1:E6F4 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  623 D1:E6FC FF FF FF FC 
              FF FF FF 3F 	.db %11111111, %11111111, %11111111, %11111100, %11111111, %11111111, %11111111, %00111111
  624 D1:E704 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  625 D1:E70C FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  626 D1:E710 -  -  -  -  
  627 D1:E710 01 -  -  -  	.db %00000001
  628 D1:E711 -  -  -  -  
  629 D1:E711 00 9A 4A 80 
              26 02 90 1A 	.db %00000000, %10011010, %01001010, %10000000, %00100110, %00000010, %10010000, %00011010
  630 D1:E719 40 A4 05 9A 
              71 08 AB 73 	.db %01000000, %10100100, %00000101, %10011010, %01110001, %00001000, %10101011, %01110011
  631 D1:E721 08 AB 74 09 
              5B 77 02 9A 	.db %00001000, %10101011, %01110100, %00001001, %01011011, %01110111, %00000010, %10011010
  632 D1:E729 75 00 B2 1D 
              00 BF 57 40 	.db %01110101, %00000000, %10110010, %00011101, %00000000, %10111111, %01010111, %01000000
  633 D1:E731 2B 56 10 2B 
              5F 18 01 9F 	.db %00101011, %01010110, %00010000, %00101011, %01011111, %00011000, %00000001, %10011111
  634 D1:E739 0C 00 23 83 
              01 22 E2 40 	.db %00001100, %00000000, %00100011, %10000011, %00000001, %00100010, %11100010, %01000000
  635 D1:E741 66 2A A0 -  	.db %01100110, %00101010, %10100000
  636 D1:E744 -  -  -  -  
  637 D1:E744 -  -  -  -  
  638 D1:E744 -  -  -  -  Tree_8:
  639 D1:E744 24 -  -  -  	.db %00100100
  640 D1:E745 1A 10 -  -  	.db 26, 16
  641 D1:E747 10 23 -  -  	.db %00010000, %00100011
  642 D1:E749 -  -  -  -  
  643 D1:E749 10 05 62 22 
              85 20 80 40 	.db %00010000, %00000101, %01100010, %00100010, %10000101, %00100000, %10000000, %01000000
  644 D1:E751 56 82 A0 52 
              2A 06 01 52 	.db %01010110, %10000010, %10100000, %01010010, %00101010, %00000110, %00000001, %01010010
  645 D1:E759 28 25 E0 B8 
              60 21 18 8A 	.db %00101000, %00100101, %11100000, %10111000, %01100000, %00100001, %00011000, %10001010
  646 D1:E761 5E 22 08 12 
              15 8A A1 62 	.db %01011110, %00100010, %00001000, %00010010, %00010101, %10001010, %10100001, %01100010
  647 D1:E769 80 04 21 57 
              0A 85 43 00 	.db %10000000, %00000100, %00100001, %01010111, %00001010, %10000101, %01000011, %00000000
  648 D1:E771 00 11 78 A9 
              17 80 60 02 	.db %00000000, %00010001, %01111000, %10101001, %00010111, %10000000, %01100000, %00000010
  649 D1:E779 15 A0 89 7A 
              05 A0 08 57 	.db %00010101, %10100000, %10001001, %01111010, %00000101, %10100000, %00001000, %01010111
  650 D1:E781 A2 00 80 15 
              05 84 57 0A 	.db %10100010, %00000000, %10000000, %00010101, %00000101, %10000100, %01010111, %00001010
  651 D1:E789 A6 00 19 5A 
              95 5C 82 55 	.db %10100110, %00000000, %00011001, %01011010, %10010101, %01011100, %10000010, %01010101
  652 D1:E791 01 57 08 85 
              7A A5 14 15 	.db %00000001, %01010111, %00001000, %10000101, %01111010, %10100101, %00010100, %00010101
  653 D1:E799 A2 AA 16 A0 
              61 41 68 22 	.db %10100010, %10101010, %00010110, %10100000, %01100001, %01000001, %01101000, %00100010
  654 D1:E7A1 A1 56 96 08 
              16 06 22 21 	.db %10100001, %01010110, %10010110, %00001000, %00010110, %00000110, %00100010, %00100001
  655 D1:E7A9 71 61 01 60 
              22 0A 56 1E 	.db %01110001, %01100001, %00000001, %01100000, %00100010, %00001010, %01010110, %00011110
  656 D1:E7B1 -  -  -  -  
  657 D1:E7B1 -  -  -  -  
  658 D1:E7B1 -  -  -  -  Tree_10:
  659 D1:E7B1 24 -  -  -  	.db %00100100
  660 D1:E7B2 1A 10 -  -  	.db 26, 16
  661 D1:E7B4 12 03 -  -  	.db %00010010, %00000011
  662 D1:E7B6 -  -  -  -  
  663 D1:E7B6 19 2A 77 FD 
              DD FA D7 9E 	.db %00011001, %00101010, %01110111, %11111101, %11011101, %11111010, %11010111, %10011110
  664 D1:E7BE 25 FF F7 DC 
              AC 65 2B 7F 	.db %00100101, %11111111, %11110111, %11011100, %10101100, %01100101, %00101011, %01111111
  665 D1:E7C6 F7 5D D8 C2 
              94 BF 7F FC 	.db %11110111, %01011101, %11011000, %11000010, %10010100, %10111111, %01111111, %11111100
  666 D1:E7CE 5F 21 79 77 
              DF FF 2D D6 	.db %01011111, %00100001, %01111001, %01110111, %11011111, %11111111, %00101101, %11010110
  667 D1:E7D6 31 A5 7D FF 
              DF DD 55 38 	.db %00110001, %10100101, %01111101, %11111111, %11011111, %11011101, %01010101, %00111000
  668 D1:E7DE D7 C7 7D F5 
              73 54 AD 77 	.db %11010111, %11000111, %01111101, %11110101, %01110011, %01010100, %10101101, %01110111
  669 D1:E7E6 FF FF 75 5D 
              59 D7 73 F7 	.db %11111111, %11111111, %01110101, %01011101, %01011001, %11010111, %01110011, %11110111
  670 D1:E7EE 61 47 A6 B4 
              77 7F F6 1D 	.db %01100001, %01000111, %10100110, %10110100, %01110111, %01111111, %11110110, %00011101
  671 D1:E7F6 F9 60 05 D7 
              FF E8 7A 0A 	.db %11111001, %01100000, %00000101, %11010111, %11111111, %11101000, %01111010, %00001010
  672 D1:E7FE 35 2D 7F FD 
              A8 AA 95 18 	.db %00110101, %00101101, %01111111, %11111101, %10101000, %10101010, %10010101, %00011000
  673 D1:E806 1F FF CE A8 
              A1 96 95 FD 	.db %00011111, %11111111, %11001110, %10101000, %10100001, %10010110, %10010101, %11111101
  674 D1:E80E FD F2 12 6D 
              6B 5F FF DF 	.db %11111101, %11110010, %00010010, %01101101, %01101011, %01011111, %11111111, %11011111
  675 D1:E816 E1 52 8E B7 
              F7 DD 5E B1 	.db %11100001, %01010010, %10001110, %10110111, %11110111, %11011101, %01011110, %10110001
  676 D1:E81E -  -  -  -  
  677 D1:E81E -  -  -  -  
  678 D1:E81E -  -  -  -  Tree_1:
  679 D1:E81E 10 -  -  -  	.db %00010000
  680 D1:E81F 1A 10 -  -  	.db 26, 16
  681 D1:E821 FF FF FF FF 
              FF FF F3 FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11110011, %11111111
  682 D1:E829 FF FC FF FF 
              FF 3F FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  683 D1:E831 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  684 D1:E839 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  685 D1:E841 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  686 D1:E849 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  687 D1:E851 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  688 D1:E855 -  -  -  -  
  689 D1:E855 01 -  -  -  	.db %00000001
  690 D1:E856 -  -  -  -  
  691 D1:E856 01 00 48 80 
              69 35 30 4A 	.db %00000001, %00000000, %01001000, %10000000, %01101001, %00110101, %00110000, %01001010
  692 D1:E85E 27 20 48 C6 
              61 D5 C6 60 	.db %00100111, %00100000, %01001000, %11000110, %01100001, %11010101, %11000110, %01100000
  693 D1:E866 E7 73 AC 29 
              DC E9 0B 55 	.db %11100111, %01110011, %10101100, %00101001, %11011100, %11101001, %00001011, %01010101
  694 D1:E86E 5A 44 FE 58 
              80 2B 92 28 	.db %01011010, %01000100, %11111110, %01011000, %10000000, %00101011, %10010010, %00101000
  695 D1:E876 0E C2 82 03 
              B0 74 C1 2D 	.db %00001110, %11000010, %10000010, %00000011, %10110000, %01110100, %11000001, %00101101
  696 D1:E87E 5F 10 09 73 
              E4 0A 5C F2 	.db %01011111, %00010000, %00001001, %01110011, %11100100, %00001010, %01011100, %11110010
  697 D1:E886 04 92 3C 80 	.db %00000100, %10010010, %00111100, %10000000
  698 D1:E88A -  -  -  -  
  699 D1:E88A -  -  -  -  
  700 D1:E88A -  -  -  -  Tree_5:
  701 D1:E88A 24 -  -  -  	.db %00100100
  702 D1:E88B 1A 10 -  -  	.db 26, 16
  703 D1:E88D 10 20 -  -  	.db %00010000, %00100000
  704 D1:E88F -  -  -  -  
  705 D1:E88F 11 10 15 00 
              05 40 01 15 	.db %00010001, %00010000, %00010101, %00000000, %00000101, %01000000, %00000001, %00010101
  706 D1:E897 05 50 04 56 
              00 15 44 41 	.db %00000101, %01010000, %00000100, %01010110, %00000000, %00010101, %01000100, %01000001
  707 D1:E89F 60 05 60 61 
              04 55 16 04 	.db %01100000, %00000101, %01100000, %01100001, %00000100, %01010101, %00010110, %00000100
  708 D1:E8A7 50 06 11 41 
              60 60 05 81 	.db %01010000, %00000110, %00010001, %01000001, %01100000, %01100000, %00000101, %10000001
  709 D1:E8AF 45 44 56 08 
              00 50 10 54 	.db %01000101, %01000100, %01010110, %00001000, %00000000, %01010000, %00010000, %01010100
  710 D1:E8B7 45 60 00 16 
              05 80 44 44 	.db %01000101, %01100000, %00000000, %00010110, %00000101, %10000000, %01000100, %01000100
  711 D1:E8BF 10 15 80 58 
              15 44 41 04 	.db %00010000, %00010101, %10000000, %01011000, %00010101, %01000100, %01000001, %00000100
  712 D1:E8C7 58 05 01 55 
              46 01 54 00 	.db %01011000, %00000101, %00000001, %01010101, %01000110, %00000001, %01010100, %00000000
  713 D1:E8CF 10 15 54 58 
              45 81 01 45 	.db %00010000, %00010101, %01010100, %01011000, %01000101, %10000001, %00000001, %01000101
  714 D1:E8D7 45 45 05 60 
              00 04 50 44 	.db %01000101, %01000101, %00000101, %01100000, %00000000, %00000100, %01010000, %01000100
  715 D1:E8DF 19 5A 04 40 
              45 40 51 95 	.db %00011001, %01011010, %00000100, %01000000, %01000101, %01000000, %01010001, %10010101
  716 D1:E8E7 A0 16 10 45 
              11 01 58 04 	.db %10100000, %00010110, %00010000, %01000101, %00010001, %00000001, %01011000, %00000100
  717 D1:E8EF 68 14 51 10 
              14 00 15 80 	.db %01101000, %00010100, %01010001, %00010000, %00010100, %00000000, %00010101, %10000000
  718 D1:E8F7 -  -  -  -  
  719 D1:E8F7 -  -  -  -  
  720 D1:E8F7 -  -  -  -  Tree_11:
  721 D1:E8F7 24 -  -  -  	.db %00100100
  722 D1:E8F8 1A 10 -  -  	.db 26, 16
  723 D1:E8FA 20 13 -  -  	.db %00100000, %00010011
  724 D1:E8FC -  -  -  -  
  725 D1:E8FC 10 95 33 CF 
              30 C5 C3 42 	.db %00010000, %10010101, %00110011, %11001111, %00110000, %11000101, %11000011, %01000010
  726 D1:E904 43 F3 F3 FF 
              58 37 97 FC 	.db %01000011, %11110011, %11110011, %11111111, %01011000, %00110111, %10010111, %11111100
  727 D1:E90C F3 6F 35 B3 
              E5 7F FC C6 	.db %11110011, %01101111, %00110101, %10110011, %11100101, %01111111, %11111100, %11000110
  728 D1:E914 3F 6E 3F 55 
              FF F9 4C D5 	.db %00111111, %01101110, %00111111, %01010101, %11111111, %11111001, %01001100, %11010101
  729 D1:E91C 30 B7 97 FE 
              50 CD 6F C9 	.db %00110000, %10110111, %10010111, %11111110, %01010000, %11001101, %01101111, %11001001
  730 D1:E924 48 F3 96 C3 
              58 C8 54 CF 	.db %01001000, %11110011, %10010110, %11000011, %01011000, %11001000, %01010100, %11001111
  731 D1:E92C C5 6C CE 3C 
              15 CC F1 5B 	.db %11000101, %01101100, %11001110, %00111100, %00010101, %11001100, %11110001, %01011011
  732 D1:E934 FC C3 05 50 
              CC 56 CE FC 	.db %11111100, %11000011, %00000101, %01010000, %11001100, %01010110, %11001110, %11111100
  733 D1:E93C DB 59 43 DA 
              FF E8 CE 5C 	.db %11011011, %01011001, %01000011, %11011010, %11111111, %11101000, %11001110, %01011100
  734 D1:E944 94 31 FF FF 
              94 F5 C1 43 	.db %10010100, %00110001, %11111111, %11111111, %10010100, %11110101, %11000001, %01000011
  735 D1:E94C 3F FF F9 73 
              11 25 33 CF 	.db %00111111, %11111111, %11111001, %01110011, %00010001, %00100101, %00110011, %11001111
  736 D1:E954 FC A5 3C 10 
              50 FF CC CE 	.db %11111100, %10100101, %00111100, %00010000, %01010000, %11111111, %11001100, %11001110
  737 D1:E95C 5C C9 69 7F 
              33 F0 CD 4F 	.db %01011100, %11001001, %01101001, %01111111, %00110011, %11110000, %11001101, %01001111
  738 D1:E964 -  -  -  -  
  739 D1:E964 -  -  -  -  
  740 D1:E964 -  -  -  -  Branches_1:
  741 D1:E964 20 -  -  -  	.db %00100000
  742 D1:E965 12 0E -  -  	.db 18, 14
  743 D1:E967 3F 00 3F FC 
              0F FF F3 FF 	.db %00111111, %00000000, %00111111, %11111100, %00001111, %11111111, %11110011, %11111111
  744 D1:E96F FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  745 D1:E977 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  746 D1:E97F F3 FF FC FF 
              FC 3C FC 00 	.db %11110011, %11111111, %11111100, %11111111, %11111100, %00111100, %11111100, %00000000
  747 D1:E987 -  -  -  -  
  748 D1:E987 01 23 -  -  	.db %00000001, %00100011
  749 D1:E989 -  -  -  -  
  750 D1:E989 00 00 05 00 
              05 55 55 00 	.db %00000000, %00000000, %00000101, %00000000, %00000101, %01010101, %01010101, %00000000
  751 D1:E991 00 50 15 44 
              05 45 52 94 	.db %00000000, %01010000, %00010101, %01000100, %00000101, %01000101, %01010010, %10010100
  752 D1:E999 40 4A AA 95 
              84 0A AE AB 	.db %01000000, %01001010, %10101010, %10010101, %10000100, %00001010, %10101110, %10101011
  753 D1:E9A1 F5 50 FF FF 
              EA A0 02 AA 	.db %11110101, %01010000, %11111111, %11111111, %11101010, %10100000, %00000010, %10101010
  754 D1:E9A9 A6 54 00 A1 
              15 40 14 00 	.db %10100110, %01010100, %00000000, %10100001, %00010101, %01000000, %00010100, %00000000
  755 D1:E9B1 05 45 44 01 
              45 50 00 00 	.db %00000101, %01000101, %01000100, %00000001, %01000101, %01010000, %00000000, %00000000
  756 D1:E9B9 00 00 00 00 
              00 00 -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  757 D1:E9BF -  -  -  -  
  758 D1:E9BF -  -  -  -  
  759 D1:E9BF -  -  -  -  Vine2:
  760 D1:E9BF 10 -  -  -  	.db %00010000
  761 D1:E9C0 0B 10 -  -  	.db 11, 16
  762 D1:E9C2 00 60 1C 07 
              89 C3 F8 2E 	.db %00000000, %01100000, %00011100, %00000111, %10001001, %11000011, %11111000, %00101110
  763 D1:E9CA 01 C0 7E CE 
              DF 80 70 0E 	.db %00000001, %11000000, %01111110, %11001110, %11011111, %10000000, %01110000, %00001110
  764 D1:E9D2 81 F8 3B 3F 
              06 E0 -  -  	.db %10000001, %11111000, %00111011, %00111111, %00000110, %11100000
  765 D1:E9D8 -  -  -  -  
  766 D1:E9D8 45 -  -  -  	.db %01000101
  767 D1:E9D9 -  -  -  -  
  768 D1:E9D9 01 88 33 27 
              8F 01 B9 EF 	.db %00000001, %10001000, %00110011, %00100111, %10001111, %00000001, %10111001, %11101111
  769 D1:E9E1 04 60 -  -  	.db %00000100, %01100000
  770 D1:E9E3 -  -  -  -  
  771 D1:E9E3 -  -  -  -  
  772 D1:E9E3 -  -  -  -  VineVertical:
  773 D1:E9E3 10 -  -  -  	.db %00010000
  774 D1:E9E4 0A 12 -  -  	.db 10, 18
  775 D1:E9E6 0E 03 80 E0 
              3B 0F DB F7 	.db %00001110, %00000011, %10000000, %11100000, %00111011, %00001111, %11011011, %11110111
  776 D1:E9EE E9 F0 1C 07 
              0F D3 7E 1D 	.db %11101001, %11110000, %00011100, %00000111, %00001111, %11010011, %01111110, %00011101
  777 D1:E9F6 07 05 C3 F0 
              5C 07 00 -  	.db %00000111, %00000101, %11000011, %11110000, %01011100, %00000111, %00000000
  778 D1:E9FD -  -  -  -  
  779 D1:E9FD 45 -  -  -  	.db %01000101
  780 D1:E9FE -  -  -  -  
  781 D1:E9FE 2D 9D F0 F0 
              E3 2C 18 F9 	.db %00101101, %10011101, %11110000, %11110000, %11100011, %00101100, %00011000, %11111001
  782 D1:EA06 B1 0C C8 -  	.db %10110001, %00001100, %11001000
  783 D1:EA09 -  -  -  -  
  784 D1:EA09 -  -  -  -  
  785 D1:EA09 -  -  -  -  Vine4:
  786 D1:EA09 10 -  -  -  	.db %00010000
  787 D1:EA0A 13 12 -  -  	.db 19, 18
  788 D1:EA0C 00 18 E0 03 
              FC 00 0F 80 	.db %00000000, %00011000, %11100000, %00000011, %11111100, %00000000, %00001111, %10000000
  789 D1:EA14 03 C0 20 F0 
              06 3F 80 FF 	.db %00000011, %11000000, %00100000, %11110000, %00000110, %00111111, %10000000, %11111111
  790 D1:EA1C 70 07 C0 01 
              F0 00 7C 00 	.db %01110000, %00000111, %11000000, %00000001, %11110000, %00000000, %01111100, %00000000
  791 D1:EA24 6F 80 0F 98 
              00 E7 00 1C 	.db %01101111, %10000000, %00001111, %10011000, %00000000, %11100111, %00000000, %00011100
  792 D1:EA2C 60 07 80 01 
              E0 00 78 00 	.db %01100000, %00000111, %10000000, %00000001, %11100000, %00000000, %01111000, %00000000
  793 D1:EA34 1E 00 00 -  	.db %00011110, %00000000, %00000000
  794 D1:EA37 -  -  -  -  
  795 D1:EA37 45 -  -  -  	.db %01000101
  796 D1:EA38 -  -  -  -  
  797 D1:EA38 08 3A D4 61 
              F0 3E 52 94 	.db %00001000, %00111010, %11010100, %01100001, %11110000, %00111110, %01010010, %10010100
  798 D1:EA40 78 F3 DE E6 
              66 -  -  -  	.db %01111000, %11110011, %11011110, %11100110, %01100110
  799 D1:EA45 -  -  -  -  
  800 D1:EA45 -  -  -  -  
  801 D1:EA45 -  -  -  -  Vine5:
  802 D1:EA45 10 -  -  -  	.db %00010000
  803 D1:EA46 13 10 -  -  	.db 19, 16
  804 D1:EA48 00 00 40 00 
              0C 00 C3 80 	.db %00000000, %00000000, %01000000, %00000000, %00001100, %00000000, %11000011, %10000000
  805 D1:EA50 1D F0 00 FC 
              00 3F 0C 1F 	.db %00011101, %11110000, %00000000, %11111100, %00000000, %00111111, %00001100, %00011111
  806 D1:EA58 C1 CF F0 1B 
              FF 01 FC 73 	.db %11000001, %11001111, %11110000, %00011011, %11111111, %00000001, %11111100, %01110011
  807 D1:EA60 FE 0C 7F E0 
              0F E6 00 80 	.db %11111110, %00001100, %01111111, %11100000, %00001111, %11100110, %00000000, %10000000
  808 D1:EA68 C0 30 00 06 
              00 00 -  -  	.db %11000000, %00110000, %00000000, %00000110, %00000000, %00000000
  809 D1:EA6E -  -  -  -  
  810 D1:EA6E 54 -  -  -  	.db %01010100
  811 D1:EA6F -  -  -  -  
  812 D1:EA6F 1C F8 E3 8F 
              47 E0 F0 0E 	.db %00011100, %11111000, %11100011, %10001111, %01000111, %11100000, %11110000, %00001110
  813 D1:EA77 83 E8 6A 00 
              00 00 -  -  	.db %10000011, %11101000, %01101010, %00000000, %00000000, %00000000
  814 D1:EA7D -  -  -  -  
  815 D1:EA7D -  -  -  -  
  816 D1:EA7D -  -  -  -  Vine6:
  817 D1:EA7D 10 -  -  -  	.db %00010000
  818 D1:EA7E 15 0A -  -  	.db 21, 10
  819 D1:EA80 30 08 01 80 
              E0 08 06 01 	.db %00110000, %00001000, %00000001, %10000000, %11100000, %00001000, %00000110, %00000001
  820 D1:EA88 C1 E1 FF FF 
              FF FF FF FF 	.db %11000001, %11100001, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  821 D1:EA90 FF FF C4 08 
              06 60 E0 62 	.db %11111111, %11111111, %11000100, %00001000, %00000110, %01100000, %11100000, %01100010
  822 D1:EA98 03 03 00 -  	.db %00000011, %00000011, %00000000
  823 D1:EA9B -  -  -  -  
  824 D1:EA9B 45 -  -  -  	.db %01000101
  825 D1:EA9C -  -  -  -  
  826 D1:EA9C 00 00 00 00 
              00 0E 5B AB 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001110, %01011011, %10101011
  827 D1:EAA4 FF FF FF FF 
              F8 -  -  -  	.db %11111111, %11111111, %11111111, %11111111, %11111000
  828 D1:EAA9 -  -  -  -  
  829 D1:EAA9 -  -  -  -  
  830 D1:EAA9 -  -  -  -  Vine7:
  831 D1:EAA9 10 -  -  -  	.db %00010000
  832 D1:EAAA 0F 0A -  -  	.db 15, 10
  833 D1:EAAC 06 01 9C 03 
              B0 1F C0 F7 	.db %00000110, %00000001, %10011100, %00000011, %10110000, %00011111, %11000000, %11110111
  834 D1:EAB4 E3 E7 FF 8F 
              FE 39 F4 60 	.db %11100011, %11100111, %11111111, %10001111, %11111110, %00111001, %11110100, %01100000
  835 D1:EABC 0E 00 1C -  	.db %00001110, %00000000, %00011100
  836 D1:EABF -  -  -  -  
  837 D1:EABF 45 -  -  -  	.db %01000101
  838 D1:EAC0 -  -  -  -  
  839 D1:EAC0 01 83 03 E0 
              FC 1F FF FF 	.db %00000001, %10000011, %00000011, %11100000, %11111100, %00011111, %11111111, %11111111
  840 D1:EAC8 FF C0 -  -  	.db %11111111, %11000000
  841 D1:EACA -  -  -  -  
  842 D1:EACA -  -  -  -  
  843 D1:EACA -  -  -  -  Branches_0:
  844 D1:EACA 20 -  -  -  	.db %00100000
  845 D1:EACB 12 0E -  -  	.db 18, 14
  846 D1:EACD CC 00 3F CF 
              0F FF F3 FF 	.db %11001100, %00000000, %00111111, %11001111, %00001111, %11111111, %11110011, %11111111
  847 D1:EAD5 FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  848 D1:EADD FF FF FF FF 
              3F FF CF FF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11001111, %11111111
  849 D1:EAE5 F3 FF F0 FF 
              FC 3F 30 00 	.db %11110011, %11111111, %11110000, %11111111, %11111100, %00111111, %00110000, %00000000
  850 D1:EAED -  -  -  -  
  851 D1:EAED 01 23 -  -  	.db %00000001, %00100011
  852 D1:EAEF -  -  -  -  
  853 D1:EAEF 00 00 00 00 
              15 40 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00010101, %01000000, %00000000, %00000000
  854 D1:EAF7 40 51 45 40 
              04 00 00 10 	.db %01000000, %01010001, %01000101, %01000000, %00000100, %00000000, %00000000, %00010000
  855 D1:EAFF 05 45 5A 01 
              10 BA AA F5 	.db %00000101, %01000101, %01011010, %00000001, %00010000, %10111010, %10101010, %11110101
  856 D1:EB07 41 0F FF FA 
              95 10 AA AA 	.db %01000001, %00001111, %11111111, %11111010, %10010101, %00010000, %10101010, %10101010
  857 D1:EB0F 55 04 55 51 
              44 00 00 05 	.db %01010101, %00000100, %01010101, %01010001, %01000100, %00000000, %00000000, %00000101
  858 D1:EB17 40 40 00 50 
              14 05 40 00 	.db %01000000, %01000000, %00000000, %01010000, %00010100, %00000101, %01000000, %00000000
  859 D1:EB1F 00 00 00 -  	.db %00000000, %00000000, %00000000
  860 D1:EB22 -  -  -  -  
  861 D1:EB22 -  -  -  -  
  862 D1:EB22 -  -  -  -  Platforms_0:
  863 D1:EB22 24 -  -  -  	.db %00100100
  864 D1:EB23 14 09 -  -  	.db 20, 9
  865 D1:EB25 9A 12 -  -  	.db %10011010, %00010010
  866 D1:EB27 -  -  -  -  
  867 D1:EB27 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  868 D1:EB2F 00 00 05 55 
              55 55 55 05 	.db %00000000, %00000000, %00000101, %01010101, %01010101, %01010101, %01010101, %00000101
  869 D1:EB37 55 55 55 55 
              0A 55 5A A5 	.db %01010101, %01010101, %01010101, %01010101, %00001010, %01010101, %01011010, %10100101
  870 D1:EB3F 55 0B A5 AB 
              BA 5A 0E EA 	.db %01010101, %00001011, %10100101, %10101011, %10111010, %01011010, %00001110, %11101010
  871 D1:EB47 EE EE AE 0B 
              BB BB BB BB 	.db %11101110, %11101110, %10101110, %00001011, %10111011, %10111011, %10111011, %10111011
  872 D1:EB4F 00 00 00 00 
              00 -  -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000
  873 D1:EB54 -  -  -  -  
  874 D1:EB54 -  -  -  -  
  875 D1:EB54 -  -  -  -  Platforms_1:
  876 D1:EB54 24 -  -  -  	.db %00100100
  877 D1:EB55 14 09 -  -  	.db 20, 9
  878 D1:EB57 9A 12 -  -  	.db %10011010, %00010010
  879 D1:EB59 -  -  -  -  
  880 D1:EB59 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  881 D1:EB61 00 00 55 55 
              55 55 55 55 	.db %00000000, %00000000, %01010101, %01010101, %01010101, %01010101, %01010101, %01010101
  882 D1:EB69 55 55 55 55 
              A5 55 AA 55 	.db %01010101, %01010101, %01010101, %01010101, %10100101, %01010101, %10101010, %01010101
  883 D1:EB71 5A BA 5A BB 
              A5 AA EE AE 	.db %01011010, %10111010, %01011010, %10111011, %10100101, %10101010, %11101110, %10101110
  884 D1:EB79 EE EA EE BB 
              BB BB BB BB 	.db %11101110, %11101010, %11101110, %10111011, %10111011, %10111011, %10111011, %10111011
  885 D1:EB81 00 00 00 00 
              00 -  -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000
  886 D1:EB86 -  -  -  -  
  887 D1:EB86 -  -  -  -  
  888 D1:EB86 -  -  -  -  Platforms_2:
  889 D1:EB86 20 -  -  -  	.db %00100000
  890 D1:EB87 0E 0E -  -  	.db 14, 14
  891 D1:EB89 FF 01 FE 03 
              FC 07 F8 0F 	.db %11111111, %00000001, %11111110, %00000011, %11111100, %00000111, %11111000, %00001111
  892 D1:EB91 F0 1F E0 3F 
              C0 7F 00 FC 	.db %11110000, %00011111, %11100000, %00111111, %11000000, %01111111, %00000000, %11111100
  893 D1:EB99 01 F0 03 C0 
              07 00 0C 00 	.db %00000001, %11110000, %00000011, %11000000, %00000111, %00000000, %00001100, %00000000
  894 D1:EBA1 10 -  -  -  	.db %00010000
  895 D1:EBA2 -  -  -  -  
  896 D1:EBA2 90 21 -  -  	.db %10010000, %00100001
  897 D1:EBA4 -  -  -  -  
  898 D1:EBA4 1A EC 1A EC 
              1A EC 1A EC 	.db %00011010, %11101100, %00011010, %11101100, %00011010, %11101100, %00011010, %11101100
  899 D1:EBAC 1A EC 1A EC 
              1A EC 1A EC 	.db %00011010, %11101100, %00011010, %11101100, %00011010, %11101100, %00011010, %11101100
  900 D1:EBB4 6B 86 B1 A1 
              84 -  -  -  	.db %01101011, %10000110, %10110001, %10100001, %10000100
  901 D1:EBB9 -  -  -  -  
  902 D1:EBB9 -  -  -  -  
  903 D1:EBB9 -  -  -  -  Spikes_0:
  904 D1:EBB9 20 -  -  -  	.db %00100000
  905 D1:EBBA 18 09 -  -  	.db 24, 9
  906 D1:EBBC 3C 3C 3C 3C 
              3C 3C 3C 3C 	.db %00111100, %00111100, %00111100, %00111100, %00111100, %00111100, %00111100, %00111100
  907 D1:EBC4 3C 3C 3C 3C 
              FF FF FF FF 	.db %00111100, %00111100, %00111100, %00111100, %11111111, %11111111, %11111111, %11111111
  908 D1:EBCC FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  909 D1:EBD4 FF FF FF -  	.db %11111111, %11111111, %11111111
  910 D1:EBD7 -  -  -  -  
  911 D1:EBD7 96 70 -  -  	.db %10010110, %01110000
  912 D1:EBD9 -  -  -  -  
  913 D1:EBD9 00 00 00 18 
              18 18 18 18 	.db %00000000, %00000000, %00000000, %00011000, %00011000, %00011000, %00011000, %00011000
  914 D1:EBE1 18 18 18 18 
              05 A0 05 A0 	.db %00011000, %00011000, %00011000, %00011000, %00000101, %10100000, %00000101, %10100000
  915 D1:EBE9 05 A0 05 A0 
              05 A0 05 A0 	.db %00000101, %10100000, %00000101, %10100000, %00000101, %10100000, %00000101, %10100000
  916 D1:EBF1 15 A8 15 A8 
              15 A8 15 A8 	.db %00010101, %10101000, %00010101, %10101000, %00010101, %10101000, %00010101, %10101000
  917 D1:EBF9 15 A8 15 A8 
              15 A8 15 A8 	.db %00010101, %10101000, %00010101, %10101000, %00010101, %10101000, %00010101, %10101000
  918 D1:EC01 15 A8 -  -  	.db %00010101, %10101000
  919 D1:EC03 -  -  -  -  
  920 D1:EC03 -  -  -  -  
  921 D1:EC03 -  -  -  -  TongueRing1:
  922 D1:EC03 10 -  -  -  	.db %00010000
  923 D1:EC04 08 10 -  -  	.db 8, 16
  924 D1:EC06 E0 F8 FC FE 
              FE 3F 1F 1F 	.db %11100000, %11111000, %11111100, %11111110, %11111110, %00111111, %00011111, %00011111
  925 D1:EC0E 1F 1F 3F FE 
              FE FC F8 E0 	.db %00011111, %00011111, %00111111, %11111110, %11111110, %11111100, %11111000, %11100000
  926 D1:EC16 -  -  -  -  
  927 D1:EC16 BC -  -  -  	.db %10111100
  928 D1:EC17 -  -  -  -  
  929 D1:EC17 18 03 E0 03 
              00 E0 38 01 	.db %00011000, %00000011, %11100000, %00000011, %00000000, %11100000, %00111000, %00000001
  930 D1:EC1F C0 3C 00 -  	.db %11000000, %00111100, %00000000
  931 D1:EC22 -  -  -  -  
  932 D1:EC22 -  -  -  -  
  933 D1:EC22 -  -  -  -  TongueRing2:
  934 D1:EC22 10 -  -  -  	.db %00010000
  935 D1:EC23 08 10 -  -  	.db 8, 16
  936 D1:EC25 E0 F8 FC FE 
              FE 3F 1F 1F 	.db %11100000, %11111000, %11111100, %11111110, %11111110, %00111111, %00011111, %00011111
  937 D1:EC2D 1F 1F 3F FE 
              FE FC F8 E0 	.db %00011111, %00011111, %00111111, %11111110, %11111110, %11111100, %11111000, %11100000
  938 D1:EC35 -  -  -  -  
  939 D1:EC35 BC -  -  -  	.db %10111100
  940 D1:EC36 -  -  -  -  
  941 D1:EC36 00 F0 00 E0 
              1C 07 00 C0 	.db %00000000, %11110000, %00000000, %11100000, %00011100, %00000111, %00000000, %11000000
  942 D1:EC3E 1F 00 C0 -  	.db %00011111, %00000000, %11000000
  943 D1:EC41 -  -  -  -  
  944 D1:EC41 -  -  -  -  
  945 D1:EC41 -  -  -  -  GroundDirtDark:
  946 D1:EC41 24 -  -  -  	.db %00100100
  947 D1:EC42 10 0C -  -  	.db 16, 12
  948 D1:EC44 01 50 -  -  	.db %00000001, %01010000
  949 D1:EC46 -  -  -  -  
  950 D1:EC46 00 00 00 00 
              00 00 00 04 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000100
  951 D1:EC4E 58 08 00 01 
              08 08 25 40 	.db %01011000, %00001000, %00000000, %00000001, %00001000, %00001000, %00100101, %01000000
  952 D1:EC56 00 00 20 54 
              01 50 00 08 	.db %00000000, %00000000, %00100000, %01010100, %00000001, %01010000, %00000000, %00001000
  953 D1:EC5E 00 14 00 08 
              20 00 00 00 	.db %00000000, %00010100, %00000000, %00001000, %00100000, %00000000, %00000000, %00000000
  954 D1:EC66 20 00 50 00 
              52 12 05 05 	.db %00100000, %00000000, %01010000, %00000000, %01010010, %00010010, %00000101, %00000101
  955 D1:EC6E 02 44 80 40 
              00 00 00 00 	.db %00000010, %01000100, %10000000, %01000000, %00000000, %00000000, %00000000, %00000000
  956 D1:EC76 -  -  -  -  
  957 D1:EC76 -  -  -  -  
  958 D1:EC76 -  -  -  -  GroundHumpDark:
  959 D1:EC76 20 -  -  -  	.db %00100000
  960 D1:EC77 10 0D -  -  	.db 16, 13
  961 D1:EC79 03 F0 0F FC 
              3F FC FF FF 	.db %00000011, %11110000, %00001111, %11111100, %00111111, %11111100, %11111111, %11111111
  962 D1:EC81 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  963 D1:EC89 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  964 D1:EC91 FF FF -  -  	.db %11111111, %11111111
  965 D1:EC93 -  -  -  -  
  966 D1:EC93 10 50 -  -  	.db %00010000, %01010000
  967 D1:EC95 -  -  -  -  
  968 D1:EC95 00 00 55 40 
              01 55 54 05 	.db %00000000, %00000000, %01010101, %01000000, %00000001, %01010101, %01010100, %00000101
  969 D1:EC9D 55 56 50 95 
              59 56 55 95 	.db %01010101, %01010110, %01010000, %10010101, %01011001, %01010110, %01010101, %10010101
  970 D1:ECA5 59 05 59 51 
              59 50 09 44 	.db %01011001, %00000101, %01011001, %01010001, %01011001, %01010000, %00001001, %01000100
  971 D1:ECAD 05 55 55 56 
              55 56 55 56 	.db %00000101, %01010101, %01010101, %01010110, %01010101, %01010110, %01010101, %01010110
  972 D1:ECB5 95 49 55 45 
              94 18 15 11 	.db %10010101, %01001001, %01010101, %01000101, %10010100, %00011000, %00010101, %00010001
  973 D1:ECBD 56 55 54 55 
              59 55 55 -  	.db %01010110, %01010101, %01010100, %01010101, %01011001, %01010101, %01010101
  974 D1:ECC4 -  -  -  -  
  975 D1:ECC4 -  -  -  -  
  976 D1:ECC4 -  -  -  -  Tree_16:
  977 D1:ECC4 08 -  -  -  	.db %00001000
  978 D1:ECC5 0A 10 -  -  	.db 10, 16
  979 D1:ECC7 3C 0F 03 C0 
              F0 3C 0F 0F 	.db %00111100, %00001111, %00000011, %11000000, %11110000, %00111100, %00001111, %00001111
  980 D1:ECCF C0 F0 3C 0F 
              03 FC FC 3C 	.db %11000000, %11110000, %00111100, %00001111, %00000011, %11111100, %11111100, %00111100
  981 D1:ECD7 0F 03 C0 F0 	.db %00001111, %00000011, %11000000, %11110000
  982 D1:ECDB -  -  -  -  
  983 D1:ECDB 00 -  -  -  	.db %00000000
  984 D1:ECDC -  -  -  -  
  985 D1:ECDC -  -  -  -  
  986 D1:ECDC -  -  -  -  
  987 D1:ECDC -  -  -  -  Tree_17:
  988 D1:ECDC 08 -  -  -  	.db %00001000
  989 D1:ECDD 07 0E -  -  	.db 7, 14
  990 D1:ECDF 0C 18 77 E1 
              C3 0F 9E 70 	.db %00001100, %00011000, %01110111, %11100001, %11000011, %00001111, %10011110, %01110000
  991 D1:ECE7 E3 C7 0C 18 
              00 -  -  -  	.db %11100011, %11000111, %00001100, %00011000, %00000000
  992 D1:ECEC -  -  -  -  
  993 D1:ECEC 00 -  -  -  	.db %00000000
  994 D1:ECED -  -  -  -  
  995 D1:ECED -  -  -  -  
  996 D1:ECED -  -  -  -  
  997 D1:ECED -  -  -  -  Tree_18:
  998 D1:ECED 08 -  -  -  	.db %00001000
  999 D1:ECEE 07 0E -  -  	.db 7, 14
 1000 D1:ECF0 18 30 C7 83 
              06 0C 1C 1E 	.db %00011000, %00110000, %11000111, %10000011, %00000110, %00001100, %00011100, %00011110
 1001 D1:ECF8 30 60 C1 83 
              00 -  -  -  	.db %00110000, %01100000, %11000001, %10000011, %00000000
 1002 D1:ECFD -  -  -  -  
 1003 D1:ECFD 00 -  -  -  	.db %00000000
 1004 D1:ECFE -  -  -  -  
 1005 D1:ECFE -  -  -  -  
 1006 D1:ECFE -  -  -  -  
 1007 D1:ECFE -  -  -  -  Clouds_0:
 1008 D1:ECFE 10 -  -  -  	.db %00010000
 1009 D1:ECFF 10 0A -  -  	.db 16, 10
 1010 D1:ED01 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1011 D1:ED09 FF FF FF FF 
              FF FF 3F FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111
 1012 D1:ED11 0F CC 03 00 	.db %00001111, %11001100, %00000011, %00000000
 1013 D1:ED15 -  -  -  -  
 1014 D1:ED15 67 -  -  -  	.db %01100111
 1015 D1:ED16 -  -  -  -  
 1016 D1:ED16 00 40 31 84 
              13 1C 0E 20 	.db %00000000, %01000000, %00110001, %10000100, %00010011, %00011100, %00001110, %00100000
 1017 D1:ED1E 00 00 E0 00 
              F0 77 F3 FF 	.db %00000000, %00000000, %11100000, %00000000, %11110000, %01110111, %11110011, %11111111
 1018 D1:ED26 FF -  -  -  	.db %11111111
 1019 D1:ED27 -  -  -  -  
 1020 D1:ED27 -  -  -  -  
 1021 D1:ED27 -  -  -  -  Clouds_1:
 1022 D1:ED27 10 -  -  -  	.db %00010000
 1023 D1:ED28 0C 0E -  -  	.db 12, 14
 1024 D1:ED2A 03 F0 FF 3F 
              F3 FF FF FF 	.db %00000011, %11110000, %11111111, %00111111, %11110011, %11111111, %11111111, %11111111
 1025 D1:ED32 FF 3F F0 FF 
              0F F0 FF 0F 	.db %11111111, %00111111, %11110000, %11111111, %00001111, %11110000, %11111111, %00001111
 1026 D1:ED3A F0 3F 00 F0 
              03 -  -  -  	.db %11110000, %00111111, %00000000, %11110000, %00000011
 1027 D1:ED3F -  -  -  -  
 1028 D1:ED3F 76 -  -  -  	.db %01110110
 1029 D1:ED40 -  -  -  -  
 1030 D1:ED40 3C 7C 3B 3E 
              47 F0 37 C5 	.db %00111100, %01111100, %00111011, %00111110, %01000111, %11110000, %00110111, %11000101
 1031 D1:ED48 F6 73 B1 F0 
              70 40 -  -  	.db %11110110, %01110011, %10110001, %11110000, %01110000, %01000000
 1032 D1:ED4E -  -  -  -  
 1033 D1:ED4E -  -  -  -  
 1034 D1:ED4E -  -  -  -  Clouds_3:
 1035 D1:ED4E 10 -  -  -  	.db %00010000
 1036 D1:ED4F 10 0B -  -  	.db 16, 11
 1037 D1:ED51 03 00 0F C0 
              3F C0 FF F3 	.db %00000011, %00000000, %00001111, %11000000, %00111111, %11000000, %11111111, %11110011
 1038 D1:ED59 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1039 D1:ED61 FF FF FF FF 
              FF FF -  -  	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
 1040 D1:ED67 -  -  -  -  
 1041 D1:ED67 76 -  -  -  	.db %01110110
 1042 D1:ED68 -  -  -  -  
 1043 D1:ED68 00 0C 07 80 
              FF 03 FF C6 	.db %00000000, %00001100, %00000111, %10000000, %11111111, %00000011, %11111111, %11000110
 1044 D1:ED70 7F FF 3C FB 
              83 E7 FF FF 	.db %01111111, %11111111, %00111100, %11111011, %10000011, %11100111, %11111111, %11111111
 1045 D1:ED78 FF FC -  -  	.db %11111111, %11111100
 1046 D1:ED7A -  -  -  -  
 1047 D1:ED7A -  -  -  -  
 1048 D1:ED7A -  -  -  -  Clouds_4:
 1049 D1:ED7A 10 -  -  -  	.db %00010000
 1050 D1:ED7B 08 0A -  -  	.db 8, 10
 1051 D1:ED7D 03 0F 3F 3F 
              FF FF FF FF 	.db %00000011, %00001111, %00111111, %00111111, %11111111, %11111111, %11111111, %11111111
 1052 D1:ED85 FF FF -  -  	.db %11111111, %11111111
 1053 D1:ED87 -  -  -  -  
 1054 D1:ED87 76 -  -  -  	.db %01110110
 1055 D1:ED88 -  -  -  -  
 1056 D1:ED88 00 11 C3 C7 
              C5 CE 4F CF 	.db %00000000, %00010001, %11000011, %11000111, %11000101, %11001110, %01001111, %11001111
 1057 D1:ED90 C0 -  -  -  	.db %11000000
 1058 D1:ED91 -  -  -  -  
 1059 D1:ED91 -  -  -  -  
 1060 D1:ED91 -  -  -  -  Clouds_2:
 1061 D1:ED91 14 -  -  -  	.db %00010100
 1062 D1:ED92 10 10 -  -  	.db 16, 16
 1063 D1:ED94 67 -  -  -  	.db %01100111
 1064 D1:ED95 -  -  -  -  
 1065 D1:ED95 00 00 00 00 
              00 08 40 0E 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001000, %01000000, %00001110
 1066 D1:ED9D B0 C3 1F 80 
              00 00 00 00 	.db %10110000, %11000011, %00011111, %10000000, %00000000, %00000000, %00000000, %00000000
 1067 D1:EDA5 60 02 80 01 
              01 F0 20 1E 	.db %01100000, %00000010, %10000000, %00000001, %00000001, %11110000, %00100000, %00011110
 1068 D1:EDAD 30 00 1F 08 
              01 F8 00 00 	.db %00110000, %00000000, %00011111, %00001000, %00000001, %11111000, %00000000, %00000000
 1069 D1:EDB5 -  -  -  -  
 1070 D1:EDB5 -  -  -  -  
 1071 D1:EDB5 -  -  -  -  FrogDefault:
 1072 D1:EDB5 40 -  -  -  	.db %01000000
 1073 D1:EDB6 19 13 -  -  	.db 25, 19
 1074 D1:EDB8 00 0F FE 00 
              1F FF 80 3F 	.db %00000000, %00001111, %11111110, %00000000, %00011111, %11111111, %10000000, %00111111
 1075 D1:EDC0 FF E0 3F FF 
              F0 3F FF F8 	.db %11111111, %11100000, %00111111, %11111111, %11110000, %00111111, %11111111, %11111000
 1076 D1:EDC8 7F FF FC 7F 
              FF FE FF FF 	.db %01111111, %11111111, %11111100, %01111111, %11111111, %11111110, %11111111, %11111111
 1077 D1:EDD0 FF 7F FF FF 
              FF FF FF BF 	.db %11111111, %01111111, %11111111, %11111111, %11111111, %11111111, %11111111, %10111111
 1078 D1:EDD8 FF FF DF FF 
              FF 8F FF FF 	.db %11111111, %11111111, %11011111, %11111111, %11111111, %10001111, %11111111, %11111111
 1079 D1:EDE0 87 FF FF C3 
              FF FF F1 FF 	.db %10000111, %11111111, %11111111, %11000011, %11111111, %11111111, %11110001, %11111111
 1080 D1:EDE8 FF FC FF FF 
              FE 7F FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111110, %01111111, %11111111, %11111111
 1081 D1:EDF0 1F FF FF 80 	.db %00011111, %11111111, %11111111, %10000000
 1082 D1:EDF4 -  -  -  -  
 1083 D1:EDF4 95 46 80 00 	.db %10010101, %01000110, %10000000, %00000000
 1084 D1:EDF8 -  -  -  -  
 1085 D1:EDF8 00 00 00 00 
              00 09 24 92 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001001, %00100100, %10010010
 1086 D1:EE00 48 00 02 4A 
              49 24 89 00 	.db %01001000, %00000000, %00000010, %01001010, %01001001, %00100100, %10001001, %00000000
 1087 D1:EE08 02 4A 49 26 
              4A 44 80 09 	.db %00000010, %01001010, %01001001, %00100110, %01001010, %01000100, %10000000, %00001001
 1088 D1:EE10 49 14 93 25 
              24 40 00 94 	.db %01001001, %00010100, %10010011, %00100101, %00100100, %01000000, %00000000, %10010100
 1089 D1:EE18 91 45 26 DA 
              48 80 09 29 	.db %10010001, %01000101, %00100110, %11011010, %01001000, %10000000, %00001001, %00101001
 1090 D1:EE20 14 92 49 24 
              89 20 00 4A 	.db %00010100, %10010010, %01001001, %00100100, %10001001, %00100000, %00000000, %01001010
 1091 D1:EE28 48 A4 92 48 
              92 64 20 12 	.db %01001000, %10100100, %10010010, %01001000, %10010010, %01100100, %00100000, %00010010
 1092 D1:EE30 52 29 24 92 
              92 49 21 00 	.db %01010010, %00101001, %00100100, %10010010, %10010010, %01001001, %00100001, %00000000
 1093 D1:EE38 02 52 49 24 
              A4 92 49 21 	.db %00000010, %01010010, %01001001, %00100100, %10100100, %10010010, %01001001, %00100001
 1094 D1:EE40 20 12 92 48 
              C9 24 92 23 	.db %00100000, %00010010, %10010010, %01001000, %11001001, %00100100, %10010010, %00100011
 1095 D1:EE48 08 00 12 92 
              49 19 24 91 	.db %00001000, %00000000, %00010010, %10010010, %01001001, %00011001, %00100100, %10010001
 1096 D1:EE50 24 40 04 A4 
              92 46 49 21 	.db %00100100, %01000000, %00000100, %10100100, %10010010, %01000110, %01001001, %00100001
 1097 D1:EE58 49 10 0A 29 
              24 8C 92 14 	.db %01001001, %00010000, %00001010, %00101001, %00100100, %10001100, %10010010, %00010100
 1098 D1:EE60 92 20 12 8A 
              44 99 21 49 	.db %10010010, %00100000, %00010010, %10001010, %01000100, %10011001, %00100001, %01001001
 1099 D1:EE68 22 40 04 94 
              92 48 C2 52 	.db %00100010, %01000000, %00000100, %10010100, %10010010, %01001000, %11000010, %01010010
 1100 D1:EE70 25 22 00 25 
              14 92 48 82 	.db %00100101, %00100010, %00000000, %00100101, %00010100, %10010010, %01001000, %10000010
 1101 D1:EE78 52 49 22 00 
              24 92 49 20 	.db %01010010, %01001001, %00100010, %00000000, %00100100, %10010010, %01001001, %00100000
 1102 D1:EE80 02 49 24 90 
              00 00 00 00 	.db %00000010, %01001001, %00100100, %10010000, %00000000, %00000000, %00000000, %00000000
 1103 D1:EE88 00 00 00 00 
              00 -  -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000
 1104 D1:EE8D -  -  -  -  
 1105 D1:EE8D -  -  -  -  
 1106 D1:EE8D -  -  -  -  FrogChargeLit:
 1107 D1:EE8D 20 -  -  -  	.db %00100000
 1108 D1:EE8E 19 12 -  -  	.db 25, 18
 1109 D1:EE90 00 0F FE 00 
              1F FF 80 3F 	.db %00000000, %00001111, %11111110, %00000000, %00011111, %11111111, %10000000, %00111111
 1110 D1:EE98 FF E0 3F FF 
              F0 3F FF F8 	.db %11111111, %11100000, %00111111, %11111111, %11110000, %00111111, %11111111, %11111000
 1111 D1:EEA0 7F FF FC 7F 
              FF FE FF FF 	.db %01111111, %11111111, %11111100, %01111111, %11111111, %11111110, %11111111, %11111111
 1112 D1:EEA8 FF FF FF FF 
              FF FF FF BF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %10111111
 1113 D1:EEB0 FF FF DF FF 
              FF CF FF FF 	.db %11111111, %11111111, %11011111, %11111111, %11111111, %11001111, %11111111, %11111111
 1114 D1:EEB8 C7 FF FF E3 
              FF FF FD FF 	.db %11000111, %11111111, %11111111, %11100011, %11111111, %11111111, %11111101, %11111111
 1115 D1:EEC0 FF FE FF FF 
              FF 3F FF FF 	.db %11111111, %11111110, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
 1116 D1:EEC8 80 -  -  -  	.db %10000000
 1117 D1:EEC9 -  -  -  -  
 1118 D1:EEC9 98 46 -  -  	.db %10011000, %01000110
 1119 D1:EECB -  -  -  -  
 1120 D1:EECB 00 00 00 05 
              55 54 00 56 	.db %00000000, %00000000, %00000000, %00000101, %01010101, %01010100, %00000000, %01010110
 1121 D1:EED3 AA A5 00 56 
              AA D6 94 05 	.db %10101010, %10100101, %00000000, %01010110, %10101010, %11010110, %10010100, %00000101
 1122 D1:EEDB A9 AB 5A 90 
              05 A9 9A FE 	.db %10101001, %10101011, %01011010, %10010000, %00000101, %10101001, %10011010, %11111110
 1123 D1:EEE3 A4 05 69 AA 
              AA A5 40 16 	.db %10100100, %00000101, %01101001, %10101010, %10101010, %10100101, %01000000, %00010110
 1124 D1:EEEB A6 AA A5 55 
              40 56 9A AA 	.db %10100110, %10101010, %10100101, %01010101, %01000000, %01010110, %10011010, %10101010
 1125 D1:EEF3 95 55 40 56 
              AA A9 55 55 	.db %10010101, %01010101, %01000000, %01010110, %10101010, %10101001, %01010101, %01010101
 1126 D1:EEFB 50 56 A9 55 
              55 65 40 5A 	.db %01010000, %01010110, %10101001, %01010101, %01010101, %01100101, %01000000, %01011010
 1127 D1:EF03 AA 55 55 A9 
              01 9A AA 55 	.db %10101010, %01010101, %01010101, %10101001, %00000001, %10011010, %10101010, %01010101
 1128 D1:EF0B 56 A4 16 6A 
              A5 55 AA 41 	.db %01010110, %10100100, %00010110, %01101010, %10100101, %01010101, %10101010, %01000001
 1129 D1:EF13 59 A5 55 6A 
              58 01 66 AA 	.db %01011001, %10100101, %01010101, %01101010, %01011000, %00000001, %01100110, %10101010
 1130 D1:EF1B A4 5A AA 40 
              55 55 50 15 	.db %10100100, %01011010, %10101010, %01000000, %01010101, %01010101, %01010000, %00010101
 1131 D1:EF23 55 40 00 00 
              00 00 00 00 	.db %01010101, %01000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
 1132 D1:EF2B -  -  -  -  
 1133 D1:EF2B -  -  -  -  
 1134 D1:EF2B -  -  -  -  FrogCharge:
 1135 D1:EF2B 40 -  -  -  	.db %01000000
 1136 D1:EF2C 19 12 -  -  	.db 25, 18
 1137 D1:EF2E 00 0F FE 00 
              1F FF 80 3F 	.db %00000000, %00001111, %11111110, %00000000, %00011111, %11111111, %10000000, %00111111
 1138 D1:EF36 FF E0 3F FF 
              F0 3F FF F8 	.db %11111111, %11100000, %00111111, %11111111, %11110000, %00111111, %11111111, %11111000
 1139 D1:EF3E 7F FF FC 7F 
              FF FE FF FF 	.db %01111111, %11111111, %11111100, %01111111, %11111111, %11111110, %11111111, %11111111
 1140 D1:EF46 FF FF FF FF 
              FF FF FF BF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %10111111
 1141 D1:EF4E FF FF DF FF 
              FF CF FF FF 	.db %11111111, %11111111, %11011111, %11111111, %11111111, %11001111, %11111111, %11111111
 1142 D1:EF56 C7 FF FF E3 
              FF FF FD FF 	.db %11000111, %11111111, %11111111, %11100011, %11111111, %11111111, %11111101, %11111111
 1143 D1:EF5E FF FE FF FF 
              FF 3F FF FF 	.db %11111111, %11111110, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
 1144 D1:EF66 80 -  -  -  	.db %10000000
 1145 D1:EF67 -  -  -  -  
 1146 D1:EF67 95 46 80 00 	.db %10010101, %01000110, %10000000, %00000000
 1147 D1:EF6B -  -  -  -  
 1148 D1:EF6B 00 00 00 00 
              00 09 24 92 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001001, %00100100, %10010010
 1149 D1:EF73 48 00 02 4A 
              49 24 89 00 	.db %01001000, %00000000, %00000010, %01001010, %01001001, %00100100, %10001001, %00000000
 1150 D1:EF7B 02 4A 49 26 
              4A 44 80 09 	.db %00000010, %01001010, %01001001, %00100110, %01001010, %01000100, %10000000, %00001001
 1151 D1:EF83 49 14 93 25 
              24 40 00 94 	.db %01001001, %00010100, %10010011, %00100101, %00100100, %01000000, %00000000, %10010100
 1152 D1:EF8B 91 45 26 DA 
              48 80 09 29 	.db %10010001, %01000101, %00100110, %11011010, %01001000, %10000000, %00001001, %00101001
 1153 D1:EF93 14 92 49 24 
              89 20 00 4A 	.db %00010100, %10010010, %01001001, %00100100, %10001001, %00100000, %00000000, %01001010
 1154 D1:EF9B 48 A4 92 48 
              92 64 20 02 	.db %01001000, %10100100, %10010010, %01001000, %10010010, %01100100, %00100000, %00000010
 1155 D1:EFA3 4A 45 24 92 
              52 49 24 20 	.db %01001010, %01000101, %00100100, %10010010, %01010010, %01001001, %00100100, %00100000
 1156 D1:EFAB 02 4A 49 24 
              94 92 49 24 	.db %00000010, %01001010, %01001001, %00100100, %10010100, %10010010, %01001001, %00100100
 1157 D1:EFB3 24 02 4A 49 
              19 24 92 48 	.db %00100100, %00000010, %01001010, %01001001, %00011001, %00100100, %10010010, %01001000
 1158 D1:EFBB 8C 20 02 52 
              49 23 24 92 	.db %10001100, %00100000, %00000010, %01010010, %01001001, %00100011, %00100100, %10010010
 1159 D1:EFC3 44 91 00 14 
              52 49 23 24 	.db %01000100, %10010001, %00000000, %00010100, %01010010, %01001001, %00100011, %00100100
 1160 D1:EFCB 90 A4 88 04 
              A2 92 48 C9 	.db %10010000, %10100100, %10001000, %00000100, %10100010, %10010010, %01001000, %11001001
 1161 D1:EFD3 21 49 22 01 
              25 14 89 26 	.db %00100001, %01001001, %00100010, %00000001, %00100101, %00010100, %10001001, %00100110
 1162 D1:EFDB 42 92 25 00 
              01 28 A4 92 	.db %01000010, %10010010, %00100101, %00000000, %00000001, %00101000, %10100100, %10010010
 1163 D1:EFE3 48 82 52 49 
              22 00 24 92 	.db %01001000, %10000010, %01010010, %01001001, %00100010, %00000000, %00100100, %10010010
 1164 D1:EFEB 49 24 00 49 
              24 92 00 00 	.db %01001001, %00100100, %00000000, %01001001, %00100100, %10010010, %00000000, %00000000
 1165 D1:EFF3 00 00 00 00 
              00 00 00 -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
 1166 D1:EFFA -  -  -  -  
 1167 D1:EFFA -  -  -  -  
 1168 D1:EFFA -  -  -  -  FrogJump:
 1169 D1:EFFA 40 -  -  -  	.db %01000000
 1170 D1:EFFB 1E 1D -  -  	.db 30, 29
 1171 D1:EFFD 00 00 1F C0 
              00 01 FF 80 	.db %00000000, %00000000, %00011111, %11000000, %00000000, %00000001, %11111111, %10000000
 1172 D1:F005 00 0F FF 00 
              00 7F FC 00 	.db %00000000, %00001111, %11111111, %00000000, %00000000, %01111111, %11111100, %00000000
 1173 D1:F00D 03 FF F0 00 
              1F FF C0 01 	.db %00000011, %11111111, %11110000, %00000000, %00011111, %11111111, %11000000, %00000001
 1174 D1:F015 FF FF 00 0F 
              FF FC 00 FF 	.db %11111111, %11111111, %00000000, %00001111, %11111111, %11111100, %00000000, %11111111
 1175 D1:F01D FF F0 07 FF 
              FF E0 1F FF 	.db %11111111, %11110000, %00000111, %11111111, %11111111, %11100000, %00011111, %11111111
 1176 D1:F025 FF C0 FF FF 
              FF 07 FF FF 	.db %11111111, %11000000, %11111111, %11111111, %11111111, %00000111, %11111111, %11111111
 1177 D1:F02D FC 1F FF FF 
              F0 7F FF FF 	.db %11111100, %00011111, %11111111, %11111111, %11110000, %01111111, %11111111, %11111111
 1178 D1:F035 83 FF FF FC 
              1F FF FF C0 	.db %10000011, %11111111, %11111111, %11111100, %00011111, %11111111, %11111111, %11000000
 1179 D1:F03D 7F FF 80 03 
              FF FC 00 1F 	.db %01111111, %11111111, %10000000, %00000011, %11111111, %11111100, %00000000, %00011111
 1180 D1:F045 FF C0 00 FF 
              F0 00 03 FF 	.db %11111111, %11000000, %00000000, %11111111, %11110000, %00000000, %00000011, %11111111
 1181 D1:F04D 80 00 0F FC 
              00 00 3F C0 	.db %10000000, %00000000, %00001111, %11111100, %00000000, %00000000, %00111111, %11000000
 1182 D1:F055 00 00 FF 00 
              00 03 FC 00 	.db %00000000, %00000000, %11111111, %00000000, %00000000, %00000011, %11111100, %00000000
 1183 D1:F05D 00 0F F0 00 
              00 3F 80 00 	.db %00000000, %00001111, %11110000, %00000000, %00000000, %00111111, %10000000, %00000000
 1184 D1:F065 00 7C 00 00 
              00 -  -  -  	.db %00000000, %01111100, %00000000, %00000000, %00000000
 1185 D1:F06A -  -  -  -  
 1186 D1:F06A 95 46 80 00 	.db %10010101, %01000110, %10000000, %00000000
 1187 D1:F06E -  -  -  -  
 1188 D1:F06E 00 00 00 00 
              92 48 00 12 	.db %00000000, %00000000, %00000000, %00000000, %10010010, %01001000, %00000000, %00010010
 1189 D1:F076 92 48 80 01 
              49 24 92 20 	.db %10010010, %01001000, %10000000, %00000001, %01001001, %00100100, %10010010, %00100000
 1190 D1:F07E 02 92 4C 94 
              88 00 A4 92 	.db %00000010, %10010010, %01001100, %10010100, %10001000, %00000000, %10100100, %10010010
 1191 D1:F086 64 A4 40 00 
              A4 52 4D B4 	.db %01100100, %10100100, %01000000, %00000000, %10100100, %01010010, %01001101, %10110100
 1192 D1:F08E 88 00 94 8A 
              29 24 91 20 	.db %10001000, %00000000, %10010100, %10001010, %00101001, %00100100, %10010001, %00100000
 1193 D1:F096 00 52 49 24 
              92 48 C2 00 	.db %00000000, %01010010, %01001001, %00100100, %10010010, %01001000, %11000010, %00000000
 1194 D1:F09E 25 24 52 49 
              22 4C 80 00 	.db %00100101, %00100100, %01010010, %01001001, %00100010, %01001100, %10000000, %00000000
 1195 D1:F0A6 52 48 A4 92 
              92 49 01 20 	.db %01010010, %01001000, %10100100, %10010010, %10010010, %01001001, %00000001, %00100000
 1196 D1:F0AE 00 52 49 24 
              94 92 40 0A 	.db %00000000, %01010010, %01001001, %00100100, %10010100, %10010010, %01000000, %00001010
 1197 D1:F0B6 44 00 52 45 
              25 24 90 92 	.db %01000100, %00000000, %01010010, %01000101, %00100101, %00100100, %10010000, %10010010
 1198 D1:F0BE 52 48 80 52 
              49 29 24 91 	.db %01010010, %01001000, %10000000, %01010010, %01001001, %00101001, %00100100, %10010001
 1199 D1:F0C6 24 92 48 80 
              0A 49 25 24 	.db %00100100, %10010010, %01001000, %10000000, %00001010, %01001001, %00100101, %00100100
 1200 D1:F0CE 91 24 92 44 
              80 01 49 25 	.db %10010001, %00100100, %10010010, %01000100, %10000000, %00000001, %01001001, %00100101
 1201 D1:F0D6 24 92 12 49 
              24 00 01 49 	.db %00100100, %10010010, %00010010, %01001001, %00100100, %00000000, %00000001, %01001001
 1202 D1:F0DE 15 24 92 10 
              00 00 00 52 	.db %00010101, %00100100, %10010010, %00010000, %00000000, %00000000, %00000000, %01010010
 1203 D1:F0E6 45 29 24 24 
              00 0A 48 A2 	.db %01000101, %00101001, %00100100, %00100100, %00000000, %00001010, %01001000, %10100010
 1204 D1:F0EE 49 20 00 0A 
              48 A4 40 00 	.db %01001001, %00100000, %00000000, %00001010, %01001000, %10100100, %01000000, %00000000
 1205 D1:F0F6 00 52 45 22 
              00 29 22 89 	.db %00000000, %01010010, %01000101, %00100010, %00000000, %00101001, %00100010, %10001001
 1206 D1:F0FE 00 14 8A 20 
              00 52 28 80 	.db %00000000, %00010100, %10001010, %00100000, %00000000, %01010010, %00101000, %10000000
 1207 D1:F106 4A 28 80 51 
              48 80 51 44 	.db %01001010, %00101000, %10000000, %01010001, %01001000, %10000000, %01010001, %01000100
 1208 D1:F10E 00 09 20 00 
              00 -  -  -  	.db %00000000, %00001001, %00100000, %00000000, %00000000
 1209 D1:F113 -  -  -  -  
 1210 D1:F113 -  -  -  -  
 1211 D1:F113 -  -  -  -  FrogJumpMouth:
 1212 D1:F113 40 -  -  -  	.db %01000000
 1213 D1:F114 1E 1D -  -  	.db 30, 29
 1214 D1:F116 00 00 1F C0 
              00 01 FF 80 	.db %00000000, %00000000, %00011111, %11000000, %00000000, %00000001, %11111111, %10000000
 1215 D1:F11E 00 0F FF 00 
              00 7F FC 00 	.db %00000000, %00001111, %11111111, %00000000, %00000000, %01111111, %11111100, %00000000
 1216 D1:F126 03 FF F0 00 
              1F FF C0 01 	.db %00000011, %11111111, %11110000, %00000000, %00011111, %11111111, %11000000, %00000001
 1217 D1:F12E FF FF 00 0F 
              FF FC 00 FF 	.db %11111111, %11111111, %00000000, %00001111, %11111111, %11111100, %00000000, %11111111
 1218 D1:F136 FF F0 07 FF 
              FF E0 1F FF 	.db %11111111, %11110000, %00000111, %11111111, %11111111, %11100000, %00011111, %11111111
 1219 D1:F13E FF C0 FF FF 
              FF 07 FF FF 	.db %11111111, %11000000, %11111111, %11111111, %11111111, %00000111, %11111111, %11111111
 1220 D1:F146 FC 1F FF FF 
              F0 7F FF FF 	.db %11111100, %00011111, %11111111, %11111111, %11110000, %01111111, %11111111, %11111111
 1221 D1:F14E 83 FF FF FC 
              1F FF FF C0 	.db %10000011, %11111111, %11111111, %11111100, %00011111, %11111111, %11111111, %11000000
 1222 D1:F156 7F FF 80 03 
              FF FC 00 1F 	.db %01111111, %11111111, %10000000, %00000011, %11111111, %11111100, %00000000, %00011111
 1223 D1:F15E FF C0 00 FF 
              F0 00 03 FF 	.db %11111111, %11000000, %00000000, %11111111, %11110000, %00000000, %00000011, %11111111
 1224 D1:F166 80 00 0F FC 
              00 00 3F C0 	.db %10000000, %00000000, %00001111, %11111100, %00000000, %00000000, %00111111, %11000000
 1225 D1:F16E 00 00 FF 00 
              00 03 FC 00 	.db %00000000, %00000000, %11111111, %00000000, %00000000, %00000011, %11111100, %00000000
 1226 D1:F176 00 0F F0 00 
              00 3F 80 00 	.db %00000000, %00001111, %11110000, %00000000, %00000000, %00111111, %10000000, %00000000
 1227 D1:F17E 00 7C 00 00 
              00 -  -  -  	.db %00000000, %01111100, %00000000, %00000000, %00000000
 1228 D1:F183 -  -  -  -  
 1229 D1:F183 95 46 80 00 	.db %10010101, %01000110, %10000000, %00000000
 1230 D1:F187 -  -  -  -  
 1231 D1:F187 00 00 00 00 
              92 48 00 12 	.db %00000000, %00000000, %00000000, %00000000, %10010010, %01001000, %00000000, %00010010
 1232 D1:F18F 92 48 80 01 
              49 24 92 20 	.db %10010010, %01001000, %10000000, %00000001, %01001001, %00100100, %10010010, %00100000
 1233 D1:F197 02 92 4C 94 
              88 00 A4 92 	.db %00000010, %10010010, %01001100, %10010100, %10001000, %00000000, %10100100, %10010010
 1234 D1:F19F 64 A4 40 00 
              A4 52 4D B4 	.db %01100100, %10100100, %01000000, %00000000, %10100100, %01010010, %01001101, %10110100
 1235 D1:F1A7 48 00 94 8A 
              29 24 89 20 	.db %01001000, %00000000, %10010100, %10001010, %00101001, %00100100, %10001001, %00100000
 1236 D1:F1AF 00 52 49 24 
              92 44 92 00 	.db %00000000, %01010010, %01001001, %00100100, %10010010, %01000100, %10010010, %00000000
 1237 D1:F1B7 25 24 52 49 
              22 49 80 00 	.db %00100101, %00100100, %01010010, %01001001, %00100010, %01001001, %10000000, %00000000
 1238 D1:F1BF 52 48 A4 92 
              92 49 01 20 	.db %01010010, %01001000, %10100100, %10010010, %10010010, %01001001, %00000001, %00100000
 1239 D1:F1C7 00 52 49 24 
              94 92 40 0A 	.db %00000000, %01010010, %01001001, %00100100, %10010100, %10010010, %01000000, %00001010
 1240 D1:F1CF 44 00 52 45 
              25 24 90 92 	.db %01000100, %00000000, %01010010, %01000101, %00100101, %00100100, %10010000, %10010010
 1241 D1:F1D7 52 48 80 52 
              49 29 24 91 	.db %01010010, %01001000, %10000000, %01010010, %01001001, %00101001, %00100100, %10010001
 1242 D1:F1DF 24 92 48 80 
              0A 49 25 24 	.db %00100100, %10010010, %01001000, %10000000, %00001010, %01001001, %00100101, %00100100
 1243 D1:F1E7 91 24 92 44 
              80 01 49 25 	.db %10010001, %00100100, %10010010, %01000100, %10000000, %00000001, %01001001, %00100101
 1244 D1:F1EF 24 92 12 49 
              24 00 01 49 	.db %00100100, %10010010, %00010010, %01001001, %00100100, %00000000, %00000001, %01001001
 1245 D1:F1F7 15 24 92 10 
              00 00 00 52 	.db %00010101, %00100100, %10010010, %00010000, %00000000, %00000000, %00000000, %01010010
 1246 D1:F1FF 45 29 24 24 
              00 0A 48 A2 	.db %01000101, %00101001, %00100100, %00100100, %00000000, %00001010, %01001000, %10100010
 1247 D1:F207 49 20 00 0A 
              48 A4 40 00 	.db %01001001, %00100000, %00000000, %00001010, %01001000, %10100100, %01000000, %00000000
 1248 D1:F20F 00 52 45 22 
              00 29 22 89 	.db %00000000, %01010010, %01000101, %00100010, %00000000, %00101001, %00100010, %10001001
 1249 D1:F217 00 14 8A 20 
              00 52 28 80 	.db %00000000, %00010100, %10001010, %00100000, %00000000, %01010010, %00101000, %10000000
 1250 D1:F21F 4A 28 80 51 
              48 80 51 44 	.db %01001010, %00101000, %10000000, %01010001, %01001000, %10000000, %01010001, %01000100
 1251 D1:F227 00 09 20 00 
              00 -  -  -  	.db %00000000, %00001001, %00100000, %00000000, %00000000
 1252 D1:F22C -  -  -  -  
 1253 D1:F22C -  -  -  -  
 1254 D1:F22C -  -  -  -  FrogFall:
 1255 D1:F22C 40 -  -  -  	.db %01000000
 1256 D1:F22D 16 1A -  -  	.db 22, 26
 1257 D1:F22F 3C 00 00 F8 
              00 03 E0 00 	.db %00111100, %00000000, %00000000, %11111000, %00000000, %00000011, %11100000, %00000000
 1258 D1:F237 0F 80 00 3F 
              03 F0 FC 0F 	.db %00001111, %10000000, %00000000, %00111111, %00000011, %11110000, %11111100, %00001111
 1259 D1:F23F E3 F0 7F 9F 
              C1 FE 7F 8F 	.db %11100011, %11110000, %01111111, %10011111, %11000001, %11111110, %01111111, %10001111
 1260 D1:F247 F3 FF 3F 8F 
              FF FC 3F FF 	.db %11110011, %11111111, %00111111, %10001111, %11111111, %11111100, %00111111, %11111111
 1261 D1:F24F F0 FF FF C3 
              FF FF 0F FF 	.db %11110000, %11111111, %11111111, %11000011, %11111111, %11111111, %00001111, %11111111
 1262 D1:F257 FE 3F FF FE 
              FF FF FB FF 	.db %11111110, %00111111, %11111111, %11111110, %11111111, %11111111, %11111011, %11111111
 1263 D1:F25F FF F7 FF FF 
              DF FF FF 3F 	.db %11111111, %11110111, %11111111, %11111111, %11011111, %11111111, %11111111, %00111111
 1264 D1:F267 FF FC 7F FF 
              F0 FF FF C1 	.db %11111111, %11111100, %01111111, %11111111, %11110000, %11111111, %11111111, %11000001
 1265 D1:F26F FF FF 01 FF 
              F8 01 FF C0 	.db %11111111, %11111111, %00000001, %11111111, %11111000, %00000001, %11111111, %11000000
 1266 D1:F277 -  -  -  -  
 1267 D1:F277 95 48 60 00 	.db %10010101, %01001000, %01100000, %00000000
 1268 D1:F27B -  -  -  -  
 1269 D1:F27B 00 00 48 00 
              A2 01 44 02 	.db %00000000, %00000000, %01001000, %00000000, %10100010, %00000001, %01000100, %00000010
 1270 D1:F283 88 00 00 00 
              29 10 09 24 	.db %10001000, %00000000, %00000000, %00000000, %00101001, %00010000, %00001001, %00100100
 1271 D1:F28B 00 4A 20 02 
              92 20 02 91 	.db %00000000, %01001010, %00100000, %00000010, %10010010, %00100000, %00000010, %10010001
 1272 D1:F293 00 94 88 00 
              A4 88 00 14 	.db %00000000, %10010100, %10001000, %00000000, %10100100, %10001000, %00000000, %00010100
 1273 D1:F29B 88 00 14 91 
              20 02 91 00 	.db %10001000, %00000000, %00010100, %10010001, %00100000, %00000010, %10010001, %00000000
 1274 D1:F2A3 14 91 64 80 
              01 48 80 52 	.db %00010100, %10010001, %01100100, %10000000, %00000001, %01001000, %10000000, %01010010
 1275 D1:F2AB 44 B6 48 05 
              22 01 49 22 	.db %01000100, %10110110, %01001000, %00000101, %00100010, %00000001, %01001001, %00100010
 1276 D1:F2B3 DB 64 A4 88 
              05 24 8B 6D 	.db %11011011, %01100100, %10100100, %10001000, %00000101, %00100100, %10001011, %01101101
 1277 D1:F2BB B2 92 20 14 
              92 2D B6 DA 	.db %10110010, %10010010, %00100000, %00010100, %10010010, %00101101, %10110110, %11011010
 1278 D1:F2C3 48 80 0A 48 
              B6 DB 6D 26 	.db %01001000, %10000000, %00001010, %01001000, %10110110, %11011011, %01101101, %00100110
 1279 D1:F2CB C8 00 14 92 
              49 36 DB 6D 	.db %11001000, %00000000, %00010100, %10010010, %01001001, %00110110, %11011011, %01101101
 1280 D1:F2D3 B2 40 05 14 
              92 49 36 49 	.db %10110010, %01000000, %00000101, %00010100, %10010010, %01001001, %00110110, %01001001
 1281 D1:F2DB 24 80 0A 48 
              A4 92 48 92 	.db %00100100, %10000000, %00001010, %01001000, %10100100, %10010010, %01001000, %10010010
 1282 D1:F2E3 52 20 02 52 
              29 24 92 49 	.db %01010010, %00100000, %00000010, %01010010, %00101001, %00100100, %10010010, %01001001
 1283 D1:F2EB 24 40 04 A4 
              8A 29 42 52 	.db %00100100, %01000000, %00000100, %10100100, %10001010, %00101001, %01000010, %01010010
 1284 D1:F2F3 44 00 4A 48 
              A4 A1 29 22 	.db %01000100, %00000000, %01001010, %01001000, %10100100, %10100001, %00101001, %00100010
 1285 D1:F2FB 00 24 A4 92 
              92 24 48 00 	.db %00000000, %00100100, %10100100, %10010010, %10010010, %00100100, %01001000, %00000000
 1286 D1:F303 12 52 49 24 
              48 00 02 49 	.db %00010010, %01010010, %01001001, %00100100, %01001000, %00000000, %00000010, %01001001
 1287 D1:F30B 24 92 00 00 
              00 00 00 -  	.db %00100100, %10010010, %00000000, %00000000, %00000000, %00000000, %00000000
 1288 D1:F312 -  -  -  -  
 1289 D1:F312 -  -  -  -  
 1290 D1:F312 -  -  -  -  FrogTongue:
 1291 D1:F312 10 -  -  -  	.db %00010000
 1292 D1:F313 08 08 -  -  	.db 8, 8
 1293 D1:F315 3C 7E FF FF 
              FF FF 7E 3C 	.db %00111100, %01111110, %11111111, %11111111, %11111111, %11111111, %01111110, %00111100
 1294 D1:F31D -  -  -  -  
 1295 D1:F31D CB -  -  -  	.db %11001011
 1296 D1:F31E -  -  -  -  
 1297 D1:F31E 07 9F 9F 9F 
              9F 9E 00 -  	.db %00000111, %10011111, %10011111, %10011111, %10011111, %10011110, %00000000
 1298 D1:F325 -  -  -  -  
 1299 D1:F325 -  -  -  -  
Listing for file "ascent.asm"
  616 D1:F325 -  -  -  -  #include "generated/SpriteEquates.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\SpriteEquates.txt"
    1 D1:F325 -  -  -  -  FrogCharge_Slow_O .equ 13894081 ; vRam + 1 - 294
    2 D1:F325 -  -  -  -  FrogCharge_Slow_F .equ 13894375 ; vRam + 295 - 588
    3 D1:F325 -  -  -  -  FrogCharge_Slow_O_F .equ 13894669 ; vRam + 589 - 877
    4 D1:F325 -  -  -  -  FrogJump_Slow .equ 13894957 ; vRam + 877 - 1253
    5 D1:F325 -  -  -  -  FrogJump_Slow_O .equ 13895333 ; vRam + 1253 - 1638
    6 D1:F325 -  -  -  -  FrogJump_Slow_F .equ 13895719 ; vRam + 1639 - 2015
    7 D1:F325 -  -  -  -  FrogJump_Slow_O_F .equ 13896095 ; vRam + 2015 - 2400
    8 D1:F325 -  -  -  -  FrogJumpMouth_Slow .equ 13896481 ; vRam + 2401 - 2777
    9 D1:F325 -  -  -  -  FrogJumpMouth_Slow_O .equ 13896857 ; vRam + 2777 - 3162
   10 D1:F325 -  -  -  -  FrogJumpMouth_Slow_F .equ 13897243 ; vRam + 3163 - 3539
   11 D1:F325 -  -  -  -  FrogJumpMouth_Slow_O_F .equ 13897619 ; vRam + 3539 - 3924
   12 D1:F325 -  -  -  -  FrogFall_Slow .equ 13898005 ; vRam + 3925 - 4292
   13 D1:F325 -  -  -  -  FrogFall_Slow_O .equ 13898373 ; vRam + 4293 - 4670
   14 D1:F325 -  -  -  -  FrogFall_Slow_F .equ 13898751 ; vRam + 4671 - 5038
   15 D1:F325 -  -  -  -  FrogFall_Slow_O_F .equ 13899119 ; vRam + 5039 - 5416
   16 D1:F325 -  -  -  -  FrogTongue_Slow .equ 13899497 ; vRam + 5417 - 5486
   17 D1:F325 -  -  -  -  FrogTongue_Slow_O .equ 13899567 ; vRam + 5487 - 5560
   18 D1:F325 -  -  -  -  Branches_5_Fast .equ 13899640 ; vRam + 5560 - 5720
   19 D1:F325 -  -  -  -  Branches_3_Fast .equ 13899800 ; vRam + 5720 - 5887
   20 D1:F325 -  -  -  -  Branches_2_Fast .equ 13899968 ; vRam + 5888 - 6057
   21 D1:F325 -  -  -  -  Tree_11_Fast .equ 13900138 ; vRam + 6058 - 6315
   22 D1:F325 -  -  -  -  Tree_5_Fast_F .equ 13900396 ; vRam + 6316 - 6573
   23 D1:F325 -  -  -  -  Tree_2_Fast_F .equ 13900654 ; vRam + 6574 - 6825
   24 D1:F325 -  -  -  -  Tree_11_Fast_F .equ 13900906 ; vRam + 6826 - 7083
   25 D1:F325 -  -  -  -  Branches_1_Fast .equ 13901164 ; vRam + 7084 - 7236
   26 D1:F325 -  -  -  -  Vine2_Slow .equ 13901317 ; vRam + 7237 - 7396
   27 D1:F325 -  -  -  -  VineVertical_Slow_O .equ 13901477 ; vRam + 7397 - 7568
   28 D1:F325 -  -  -  -  VineVertical_Slow .equ 13901649 ; vRam + 7569 - 7742
   29 D1:F325 -  -  -  -  Vine4_Slow_F .equ 13901823 ; vRam + 7743 - 7934
   30 D1:F325 -  -  -  -  Vine4_Slow_O_F .equ 13902015 ; vRam + 7935 - 8127
   31 D1:F325 -  -  -  -  Vine5_Slow_O_F .equ 13902207 ; vRam + 8127 - 8318
   32 D1:F325 -  -  -  -  Vine6_Slow_O .equ 13902399 ; vRam + 8319 - 8485
   33 D1:F325 -  -  -  -  Vine7_Slow .equ 13902565 ; vRam + 8485 - 8618
   34 D1:F325 -  -  -  -  Vine5_Slow .equ 13902699 ; vRam + 8619 - 8808
   35 D1:F325 -  -  -  -  Vine6_Slow .equ 13902889 ; vRam + 8809 - 8973
   36 D1:F325 -  -  -  -  Vine4_Slow .equ 13903053 ; vRam + 8973 - 9165
   37 D1:F325 -  -  -  -  Vine7_Slow_O .equ 13903245 ; vRam + 9165 - 9293
   38 D1:F325 -  -  -  -  Vine5_Slow_O .equ 13903373 ; vRam + 9293 - 9482
   39 D1:F325 -  -  -  -  Vine4_Slow_O .equ 13903563 ; vRam + 9483 - 9673
   40 D1:F325 -  -  -  -  Branches_1_Fast_F .equ 13903754 ; vRam + 9674 - 9826
   41 D1:F325 -  -  -  -  Branches_2_Fast_F .equ 13903906 ; vRam + 9826 - 9995
   42 D1:F325 -  -  -  -  Branches_5_Fast_F .equ 13904076 ; vRam + 9996 - 10156
   43 D1:F325 -  -  -  -  Platforms_0_Fast .equ 13904236 ; vRam + 10156 - 10274
   44 D1:F325 -  -  -  -  Platforms_1_Fast .equ 13904354 ; vRam + 10274 - 10392
   45 D1:F325 -  -  -  -  Platforms_0_Fast_F .equ 13904472 ; vRam + 10392 - 10510
   46 D1:F325 -  -  -  -  Platforms_2_Slow_O_F .equ 13904591 ; vRam + 10511 - 10634
   47 D1:F325 -  -  -  -  Platforms_2_Slow_O .equ 13904715 ; vRam + 10635 - 10758
   48 D1:F325 -  -  -  -  Spikes_0_Fast .equ 13904838 ; vRam + 10758 - 10886
   49 D1:F325 -  -  -  -  TongueRing1_Slow .equ 13904967 ; vRam + 10887 - 11018
   50 D1:F325 -  -  -  -  TongueRing2_Slow .equ 13905099 ; vRam + 11019 - 11150
   51 D1:F325 -  -  -  -  TongueRing1_Slow_F .equ 13905231 ; vRam + 11151 - 11282
   52 D1:F325 -  -  -  -  TongueRing2_Slow_F .equ 13905363 ; vRam + 11283 - 11414
   53 D1:F325 -  -  -  -  GroundDirtDark_Fast .equ 13905494 ; vRam + 11414 - 11547
   54 D1:F325 -  -  -  -  GroundDirtDark_Fast_F .equ 13905628 ; vRam + 11548 - 11681
   55 D1:F325 -  -  -  -  GroundHumpDark_Fast .equ 13905762 ; vRam + 11682 - 11816
   56 D1:F325 -  -  -  -  GroundHumpDark_Fast_F .equ 13905896 ; vRam + 11816 - 11950
   57 D1:F325 -  -  -  -  Tree_16_Fast .equ 13906030 ; vRam + 11950 - 12035
   58 D1:F325 -  -  -  -  Tree_17_Slow .equ 13906115 ; vRam + 12035 - 12136
   59 D1:F325 -  -  -  -  Tree_17_Slow_O_F .equ 13906217 ; vRam + 12137 - 12238
   60 D1:F325 -  -  -  -  Tree_18_Slow .equ 13906319 ; vRam + 12239 - 12339
   61 D1:F325 -  -  -  -  Tree_18_Slow_O_F .equ 13906419 ; vRam + 12339 - 12439
   62 D1:F325 -  -  -  -  Tree_16_Fast_F .equ 13906520 ; vRam + 12440 - 12525
   63 D1:F325 -  -  -  -  Clouds_0_Fast .equ 13906606 ; vRam + 12526 - 12627
   64 D1:F325 -  -  -  -  Clouds_1_Fast .equ 13906708 ; vRam + 12628 - 12727
   65 D1:F325 -  -  -  -  Clouds_3_Fast .equ 13906808 ; vRam + 12728 - 12835
   66 D1:F325 -  -  -  -  Clouds_4_Fast .equ 13906916 ; vRam + 12836 - 12900
   67 D1:F325 -  -  -  -  Clouds_2_Fast .equ 13906980 ; vRam + 12900 - 13077
   68 D1:F325 -  -  -  -  Clouds_0_Fast_F .equ 13907158 ; vRam + 13078 - 13179
   69 D1:F325 -  -  -  -  Clouds_1_Fast_F .equ 13907260 ; vRam + 13180 - 13279
   70 D1:F325 -  -  -  -  Clouds_4_Fast_F .equ 13907360 ; vRam + 13280 - 13344
   71 D1:F325 -  -  -  -  Clouds_3_Fast_F .equ 13907424 ; vRam + 13344 - 13451
   72 D1:F325 -  -  -  -  Clouds_2_Fast_F .equ 13907532 ; vRam + 13452 - 13629
   73 D1:F325 -  -  -  -  FrogDefault_Slow .equ 13907709 ; vRam + 13629 - 13932
   74 D1:F325 -  -  -  -  FrogDefault_Slow_O .equ 13908013 ; vRam + 13933 - 14236
   75 D1:F325 -  -  -  -  FrogDefault_Slow_F .equ 13908317 ; vRam + 14237 - 14540
   76 D1:F325 -  -  -  -  FrogDefault_Slow_O_F .equ 13908621 ; vRam + 14541 - 14844
   77 D1:F325 -  -  -  -  FrogChargeLit_Slow .equ 13908925 ; vRam + 14845 - 15133
   78 D1:F325 -  -  -  -  FrogChargeLit_Slow_O .equ 13909213 ; vRam + 15133 - 15426
   79 D1:F325 -  -  -  -  FrogChargeLit_Slow_F .equ 13909507 ; vRam + 15427 - 15720
   80 D1:F325 -  -  -  -  FrogChargeLit_Slow_O_F .equ 13909801 ; vRam + 15721 - 16009
   81 D1:F325 -  -  -  -  FrogCharge_Slow .equ 13910089 ; vRam + 16009 - 16297
   82 D1:F325 -  -  -  -  BigGrassBase_Fast .equ 13910378 ; vRam + 16298 - 16658
   83 D1:F325 -  -  -  -  BigGrassTop_Fast .equ 13910738 ; vRam + 16658 - 16903
   84 D1:F325 -  -  -  -  BigGrassBase_Slow_O .equ 13910983 ; vRam + 16903 - 17341
   85 D1:F325 -  -  -  -  BigGrassBase_Fast_F .equ 13911422 ; vRam + 17342 - 17702
   86 D1:F325 -  -  -  -  BigGrassTop_Fast_F .equ 13911782 ; vRam + 17702 - 17947
   87 D1:F325 -  -  -  -  BigGrassTop_Slow_O .equ 13912027 ; vRam + 17947 - 18261
   88 D1:F325 -  -  -  -  DualLeaf4_Slow .equ 13912341 ; vRam + 18261 - 18437
   89 D1:F325 -  -  -  -  DualLeaf4_Slow_F .equ 13912517 ; vRam + 18437 - 18613
   90 D1:F325 -  -  -  -  DualLeaf3_Fast .equ 13912694 ; vRam + 18614 - 18734
   91 D1:F325 -  -  -  -  Branches_10_Fast .equ 13912814 ; vRam + 18734 - 18853
   92 D1:F325 -  -  -  -  Branches_9_Fast .equ 13912934 ; vRam + 18854 - 18984
   93 D1:F325 -  -  -  -  Branches_16_Slow .equ 13913065 ; vRam + 18985 - 19093
   94 D1:F325 -  -  -  -  Branches_13_Fast .equ 13913174 ; vRam + 19094 - 19143
   95 D1:F325 -  -  -  -  Leaves1_Fast .equ 13913224 ; vRam + 19144 - 19424
   96 D1:F325 -  -  -  -  DualLeaf1_Fast .equ 13913504 ; vRam + 19424 - 19535
   97 D1:F325 -  -  -  -  DualLeaf2_Fast .equ 13913616 ; vRam + 19536 - 19648
   98 D1:F325 -  -  -  -  DualLeaf2_Slow_O .equ 13913729 ; vRam + 19649 - 19818
   99 D1:F325 -  -  -  -  DualLeaf1_Slow_O .equ 13913899 ; vRam + 19819 - 19987
  100 D1:F325 -  -  -  -  Branches_6_Slow .equ 13914067 ; vRam + 19987 - 20144
  101 D1:F325 -  -  -  -  Branches_10_Fast_F .equ 13914224 ; vRam + 20144 - 20263
  102 D1:F325 -  -  -  -  Branches_7_Fast .equ 13914344 ; vRam + 20264 - 20385
  103 D1:F325 -  -  -  -  Branches_15_Slow .equ 13914465 ; vRam + 20385 - 20497
  104 D1:F325 -  -  -  -  Branches_8_Fast_F .equ 13914578 ; vRam + 20498 - 20592
  105 D1:F325 -  -  -  -  Branches_12_Fast .equ 13914672 ; vRam + 20592 - 20683
  106 D1:F325 -  -  -  -  Branches_15_Slow_O_F .equ 13914763 ; vRam + 20683 - 20795
  107 D1:F325 -  -  -  -  LeavesDark_Fast .equ 13914876 ; vRam + 20796 - 21076
  108 D1:F325 -  -  -  -  LeavesDark_Fast_F .equ 13915156 ; vRam + 21076 - 21356
  109 D1:F325 -  -  -  -  Leaves2_Fast .equ 13915436 ; vRam + 21356 - 21591
  110 D1:F325 -  -  -  -  Leaves2_Fast_F .equ 13915672 ; vRam + 21592 - 21827
  111 D1:F325 -  -  -  -  LeavesLight_Fast .equ 13915908 ; vRam + 21828 - 22108
  112 D1:F325 -  -  -  -  Branches_8_Fast .equ 13916188 ; vRam + 22108 - 22202
  113 D1:F325 -  -  -  -  Branches_11_Fast_F .equ 13916282 ; vRam + 22202 - 22305
  114 D1:F325 -  -  -  -  Branches_16_Slow_O_F .equ 13916385 ; vRam + 22305 - 22413
  115 D1:F325 -  -  -  -  Branches_13_Fast_F .equ 13916494 ; vRam + 22414 - 22463
  116 D1:F325 -  -  -  -  Branches_14_Slow .equ 13916543 ; vRam + 22463 - 22571
  117 D1:F325 -  -  -  -  Branches_4_Fast_F .equ 13916652 ; vRam + 22572 - 22730
  118 D1:F325 -  -  -  -  Branches_7_Fast_F .equ 13916810 ; vRam + 22730 - 22851
  119 D1:F325 -  -  -  -  Branches_12_Fast_F .equ 13916932 ; vRam + 22852 - 22943
  120 D1:F325 -  -  -  -  Leaves1_Fast_F .equ 13917024 ; vRam + 22944 - 23224
  121 D1:F325 -  -  -  -  GroundDirtFull_Fast_F .equ 13917304 ; vRam + 23224 - 23401
  122 D1:F325 -  -  -  -  GroundDirtFull_Fast .equ 13917482 ; vRam + 23402 - 23579
  123 D1:F325 -  -  -  -  GroundDirtMound_Fast .equ 13917660 ; vRam + 23580 - 23707
  124 D1:F325 -  -  -  -  GroundDirtMound_Fast_F .equ 13917788 ; vRam + 23708 - 23835
  125 D1:F325 -  -  -  -  Branches_8_Slow_O_F .equ 13917915 ; vRam + 23835 - 23971
  126 D1:F325 -  -  -  -  Branches_9_Slow_O .equ 13918051 ; vRam + 23971 - 24146
  127 D1:F325 -  -  -  -  Tree_2_Fast .equ 13918226 ; vRam + 24146 - 24397
  128 D1:F325 -  -  -  -  Tree_4_Fast .equ 13918478 ; vRam + 24398 - 24655
  129 D1:F325 -  -  -  -  Tree_7_Fast .equ 13918736 ; vRam + 24656 - 24913
  130 D1:F325 -  -  -  -  Tree_9_Fast .equ 13918994 ; vRam + 24914 - 25171
  131 D1:F325 -  -  -  -  Tree_6_Fast_F .equ 13919252 ; vRam + 25172 - 25429
  132 D1:F325 -  -  -  -  Tree_3_Fast_F .equ 13919510 ; vRam + 25430 - 25687
  133 D1:F325 -  -  -  -  Tree_0_Fast_F .equ 13919768 ; vRam + 25688 - 25939
  134 D1:F325 -  -  -  -  Tree_3_Fast .equ 13920020 ; vRam + 25940 - 26197
  135 D1:F325 -  -  -  -  Tree_8_Fast .equ 13920278 ; vRam + 26198 - 26455
  136 D1:F325 -  -  -  -  Tree_9_Fast_F .equ 13920536 ; vRam + 26456 - 26713
  137 D1:F325 -  -  -  -  Tree_8_Fast_F .equ 13920794 ; vRam + 26714 - 26971
  138 D1:F325 -  -  -  -  Tree_4_Fast_F .equ 13921052 ; vRam + 26972 - 27229
  139 D1:F325 -  -  -  -  Tree_0_Fast .equ 13921310 ; vRam + 27230 - 27481
  140 D1:F325 -  -  -  -  Tree_6_Fast .equ 13921562 ; vRam + 27482 - 27739
  141 D1:F325 -  -  -  -  Tree_10_Fast .equ 13921820 ; vRam + 27740 - 27997
  142 D1:F325 -  -  -  -  Tree_7_Fast_F .equ 13922078 ; vRam + 27998 - 28255
  143 D1:F325 -  -  -  -  Tree_1_Fast_F .equ 13922336 ; vRam + 28256 - 28510
  144 D1:F325 -  -  -  -  Tree_1_Fast .equ 13922590 ; vRam + 28510 - 28764
  145 D1:F325 -  -  -  -  Tree_5_Fast .equ 13922844 ; vRam + 28764 - 29021
  146 D1:F325 -  -  -  -  Branches_1_Slow_O .equ 13923101 ; vRam + 29021 - 29218
  147 D1:F325 -  -  -  -  Branches_2_Slow_O .equ 13923299 ; vRam + 29219 - 29442
  148 D1:F325 -  -  -  -  Branches_4_Slow_O .equ 13923523 ; vRam + 29443 - 29646
  149 D1:F325 -  -  -  -  Branches_7_Slow_O .equ 13923727 ; vRam + 29647 - 29810
  150 D1:F325 -  -  -  -  Branches_0_Fast_F .equ 13910378 ; vRam + 16298 - 16449
  151 D1:F325 -  -  -  -  Branches_8_Slow_O .equ 13910529 ; vRam + 16449 - 16585
  152 D1:F325 -  -  -  -  Branches_9_Fast_F .equ 13910666 ; vRam + 16586 - 16716
  153 D1:F325 -  -  -  -  Branches_4_Fast .equ 13910796 ; vRam + 16716 - 16874
Listing for file "ascent.asm"
  617 D1:F325 -  -  -  -  #include "generated/Sprite_Groups.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Groups.txt"
    1 D1:F325 -  -  -  -  Sprite_Groups:
    2 D1:F325 85 F3 D1 -  	.dl SG_GroundGrass
    3 D1:F328 C7 F3 D1 -  	.dl SG_Branch3
    4 D1:F32B E5 F3 D1 -  	.dl SG_Branch7
    5 D1:F32E 37 F4 D1 -  	.dl SG_Branch4
    6 D1:F331 8D F4 D1 -  	.dl SG_Branch5
    7 D1:F334 DB F4 D1 -  	.dl SG_Branch6
    8 D1:F337 11 F5 D1 -  	.dl SG_Branch2
    9 D1:F33A 5F F5 D1 -  	.dl SG_GroundChunk2
   10 D1:F33D 79 F5 D1 -  	.dl SG_GroundChunk1
   11 D1:F340 97 F5 D1 -  	.dl SG_Root1
   12 D1:F343 A5 F5 D1 -  	.dl SG_TreeRow3
   13 D1:F346 C3 F5 D1 -  	.dl SG_TreeRow5
   14 D1:F349 E1 F5 D1 -  	.dl SG_TreeRow1
   15 D1:F34C FF F5 D1 -  	.dl SG_TreeRow2
   16 D1:F34F 1D F6 D1 -  	.dl SG_TreeRow4
   17 D1:F352 3B F6 D1 -  	.dl SG_Branch1
   18 D1:F355 79 F6 D1 -  	.dl SG_Vines2
   19 D1:F358 8B F6 D1 -  	.dl SG_Vines6
   20 D1:F35B A1 F6 D1 -  	.dl SG_Vines7
   21 D1:F35E B7 F6 D1 -  	.dl SG_Vines5
   22 D1:F361 DD F6 D1 -  	.dl SG_BranchBase3
   23 D1:F364 EF F6 D1 -  	.dl SG_BranchBase2
   24 D1:F367 09 F7 D1 -  	.dl SG_BranchBase4
   25 D1:F36A 1B F7 D1 -  	.dl SG_Platform3
   26 D1:F36D 35 F7 D1 -  	.dl SG_Platform4
   27 D1:F370 4F F7 D1 -  	.dl SG_Platform1
   28 D1:F373 61 F7 D1 -  	.dl SG_Platform2
   29 D1:F376 73 F7 D1 -  	.dl SG_TongueRing
   30 D1:F379 7D F7 D1 -  	.dl SG_DarkGroundChunk
   31 D1:F37C 9B F7 D1 -  	.dl SG_BGTree1
   32 D1:F37F BD F7 D1 -  	.dl SG_BGTree2
   33 D1:F382 DF F7 D1 -  	.dl SG_Cloud1
   34 D1:F385 -  -  -  -  
   35 D1:F385 -  -  -  -  
   36 D1:F385 -  -  -  -  
   37 D1:F385 -  -  -  -  SG_GroundGrass:
   38 D1:F385 00 -  -  -  	.db 0
   39 D1:F386 10 -  -  -  	.db 16
   40 D1:F387 1A 1A 09 00 	.db 26, 26, 9, 0  ;BigGrassBase_Slow_O
   41 D1:F38B 1A 1A 20 01 	.db 26, 26, 32, 1  ;BigGrassBase_Fast
   42 D1:F38F 1A 1A 2C 02 	.db 26, 26, 44, 2  ;BigGrassBase_Fast_F
   43 D1:F393 1A 1A 00 01 	.db 26, 26, 0, 1  ;BigGrassBase_Fast
   44 D1:F397 03 17 02 03 	.db 3, 23, 2, 3  ;BigGrassTop_Fast
   45 D1:F39B 1A 1A 13 01 	.db 26, 26, 19, 1  ;BigGrassBase_Fast
   46 D1:F39F 03 17 15 03 	.db 3, 23, 21, 3  ;BigGrassTop_Fast
   47 D1:F3A3 03 17 07 04 	.db 3, 23, 7, 4  ;BigGrassTop_Fast_F
   48 D1:F3A7 04 17 1D 04 	.db 4, 23, 29, 4  ;BigGrassTop_Fast_F
   49 D1:F3AB 03 17 28 04 	.db 3, 23, 40, 4  ;BigGrassTop_Fast_F
   50 D1:F3AF 1D 17 19 04 	.db 29, 23, 25, 4  ;BigGrassTop_Fast_F
   51 D1:F3B3 1D 17 08 05 	.db 29, 23, 8, 5  ;BigGrassTop_Slow_O
   52 D1:F3B7 1D 17 34 03 	.db 29, 23, 52, 3  ;BigGrassTop_Fast
   53 D1:F3BB 0A 13 34 06 	.db 10, 19, 52, 6  ;DualLeaf4_Slow
   54 D1:F3BF 00 13 13 07 	.db 0, 19, 19, 7  ;DualLeaf4_Slow_F
   55 D1:F3C3 21 0B 26 08 	.db 33, 11, 38, 8  ;DualLeaf3_Fast
   56 D1:F3C7 -  -  -  -  
   57 D1:F3C7 -  -  -  -  SG_Branch3:
   58 D1:F3C7 00 -  -  -  	.db 0
   59 D1:F3C8 07 -  -  -  	.db 7
   60 D1:F3C9 00 0E 17 09 	.db 0, 14, 23, 9  ;Branches_9_Fast
   61 D1:F3CD 0E 06 08 0A 	.db 14, 6, 8, 10  ;Branches_13_Fast
   62 D1:F3D1 07 0E 0F 0B 	.db 7, 14, 15, 11  ;Branches_10_Fast
   63 D1:F3D5 12 0D 0D 0C 	.db 18, 13, 13, 12  ;Branches_16_Slow
   64 D1:F3D9 05 15 00 0D 	.db 5, 21, 0, 13  ;Leaves1_Fast
   65 D1:F3DD 1D 0C 0A 11 	.db 29, 12, 10, 17  ;DualLeaf1_Fast
   66 D1:F3E1 01 0B 0F 08 	.db 1, 11, 15, 8  ;DualLeaf3_Fast
   67 D1:F3E5 -  -  -  -  
   68 D1:F3E5 -  -  -  -  SG_Branch7:
   69 D1:F3E5 00 -  -  -  	.db 0
   70 D1:F3E6 14 -  -  -  	.db 20
   71 D1:F3E7 00 15 0A 12 	.db 0, 21, 10, 18  ;LeavesLight_Fast
   72 D1:F3EB 05 15 15 12 	.db 5, 21, 21, 18  ;LeavesLight_Fast
   73 D1:F3EF 21 15 18 13 	.db 33, 21, 24, 19  ;LeavesDark_Fast
   74 D1:F3F3 12 15 00 13 	.db 18, 21, 0, 19  ;LeavesDark_Fast
   75 D1:F3F7 28 15 08 13 	.db 40, 21, 8, 19  ;LeavesDark_Fast
   76 D1:F3FB 19 0E 1A 14 	.db 25, 14, 26, 20  ;Branches_14_Slow
   77 D1:F3FF 14 0E 0D 15 	.db 20, 14, 13, 21  ;Branches_15_Slow_O_F
   78 D1:F403 36 0E 03 16 	.db 54, 14, 3, 22  ;Branches_8_Fast
   79 D1:F407 15 0E 07 17 	.db 21, 14, 7, 23  ;Branches_15_Slow
   80 D1:F40B 23 0A 13 18 	.db 35, 10, 19, 24  ;Branches_11_Fast_F
   81 D1:F40F 25 06 1C 19 	.db 37, 6, 28, 25  ;Branches_13_Fast_F
   82 D1:F413 26 0E 0B 0B 	.db 38, 14, 11, 11  ;Branches_10_Fast
   83 D1:F417 2E 0E 08 16 	.db 46, 14, 8, 22  ;Branches_8_Fast
   84 D1:F41B 1D 0E 0B 1A 	.db 29, 14, 11, 26  ;Branches_10_Fast_F
   85 D1:F41F 27 12 11 1B 	.db 39, 18, 17, 27  ;Leaves2_Fast_F
   86 D1:F423 22 12 02 1C 	.db 34, 18, 2, 28  ;Leaves2_Fast
   87 D1:F427 10 15 0E 0D 	.db 16, 21, 14, 13  ;Leaves1_Fast
   88 D1:F42B 10 15 1C 0D 	.db 16, 21, 28, 13  ;Leaves1_Fast
   89 D1:F42F 08 15 05 0D 	.db 8, 21, 5, 13  ;Leaves1_Fast
   90 D1:F433 39 0C 05 0E 	.db 57, 12, 5, 14  ;DualLeaf1_Fast
   91 D1:F437 -  -  -  -  
   92 D1:F437 -  -  -  -  SG_Branch4:
   93 D1:F437 00 -  -  -  	.db 0
   94 D1:F438 15 -  -  -  	.db 21
   95 D1:F439 3F 15 0C 0D 	.db 63, 21, 12, 13  ;Leaves1_Fast
   96 D1:F43D 00 15 0F 12 	.db 0, 21, 15, 18  ;LeavesLight_Fast
   97 D1:F441 05 15 1B 12 	.db 5, 21, 27, 18  ;LeavesLight_Fast
   98 D1:F445 0E 12 12 1C 	.db 14, 18, 18, 28  ;Leaves2_Fast
   99 D1:F449 0D 15 06 0D 	.db 13, 21, 6, 13  ;Leaves1_Fast
  100 D1:F44D 1C 15 00 1D 	.db 28, 21, 0, 29  ;LeavesDark_Fast_F
  101 D1:F451 1A 15 18 1D 	.db 26, 21, 24, 29  ;LeavesDark_Fast_F
  102 D1:F455 2C 0A 11 1E 	.db 44, 10, 17, 30  ;Branches_12_Fast
  103 D1:F459 25 0E 19 15 	.db 37, 14, 25, 21  ;Branches_15_Slow_O_F
  104 D1:F45D 20 15 08 13 	.db 32, 21, 8, 19  ;LeavesDark_Fast
  105 D1:F461 18 15 0F 13 	.db 24, 21, 15, 19  ;LeavesDark_Fast
  106 D1:F465 41 0E 11 17 	.db 65, 14, 17, 23  ;Branches_15_Slow
  107 D1:F469 40 0E 15 0B 	.db 64, 14, 21, 11  ;Branches_10_Fast
  108 D1:F46D 11 12 1E 1B 	.db 17, 18, 30, 27  ;Leaves2_Fast_F
  109 D1:F471 36 0E 1D 1A 	.db 54, 14, 29, 26  ;Branches_10_Fast_F
  110 D1:F475 3D 0B 25 1F 	.db 61, 11, 37, 31  ;Branches_6_Slow
  111 D1:F479 4C 0D 11 0C 	.db 76, 13, 17, 12  ;Branches_16_Slow
  112 D1:F47D 3E 0A 1C 20 	.db 62, 10, 28, 32  ;Branches_7_Fast
  113 D1:F481 2F 0E 1A 21 	.db 47, 14, 26, 33  ;Branches_8_Fast_F
  114 D1:F485 37 12 06 1C 	.db 55, 18, 6, 28  ;Leaves2_Fast
  115 D1:F489 4E 15 07 0D 	.db 78, 21, 7, 13  ;Leaves1_Fast
  116 D1:F48D -  -  -  -  
  117 D1:F48D -  -  -  -  SG_Branch5:
  118 D1:F48D 00 -  -  -  	.db 0
  119 D1:F48E 13 -  -  -  	.db 19
  120 D1:F48F 1E 15 08 13 	.db 30, 21, 8, 19  ;LeavesDark_Fast
  121 D1:F493 00 15 09 12 	.db 0, 21, 9, 18  ;LeavesLight_Fast
  122 D1:F497 43 15 0C 13 	.db 67, 21, 12, 19  ;LeavesDark_Fast
  123 D1:F49B 09 12 00 1C 	.db 9, 18, 0, 28  ;Leaves2_Fast
  124 D1:F49F 0A 12 10 1C 	.db 10, 18, 16, 28  ;Leaves2_Fast
  125 D1:F4A3 33 0A 00 20 	.db 51, 10, 0, 32  ;Branches_7_Fast
  126 D1:F4A7 2C 0E 09 16 	.db 44, 14, 9, 22  ;Branches_8_Fast
  127 D1:F4AB 34 0A 0B 18 	.db 52, 10, 11, 24  ;Branches_11_Fast_F
  128 D1:F4AF 11 0E 1A 15 	.db 17, 14, 26, 21  ;Branches_15_Slow_O_F
  129 D1:F4B3 35 06 14 19 	.db 53, 6, 20, 25  ;Branches_13_Fast_F
  130 D1:F4B7 1E 0E 0D 14 	.db 30, 14, 13, 20  ;Branches_14_Slow
  131 D1:F4BB 24 0E 0D 15 	.db 36, 14, 13, 21  ;Branches_15_Slow_O_F
  132 D1:F4BF 16 15 10 13 	.db 22, 21, 16, 19  ;LeavesDark_Fast
  133 D1:F4C3 12 15 04 13 	.db 18, 21, 4, 19  ;LeavesDark_Fast
  134 D1:F4C7 41 0D 0D 22 	.db 65, 13, 13, 34  ;Branches_16_Slow_O_F
  135 D1:F4CB 38 0E 08 1A 	.db 56, 14, 8, 26  ;Branches_10_Fast_F
  136 D1:F4CF 37 0C 15 0F 	.db 55, 12, 21, 15  ;DualLeaf2_Fast
  137 D1:F4D3 2B 13 19 06 	.db 43, 19, 25, 6  ;DualLeaf4_Slow
  138 D1:F4D7 45 15 12 0D 	.db 69, 21, 18, 13  ;Leaves1_Fast
  139 D1:F4DB -  -  -  -  
  140 D1:F4DB -  -  -  -  SG_Branch6:
  141 D1:F4DB 00 -  -  -  	.db 0
  142 D1:F4DC 0D -  -  -  	.db 13
  143 D1:F4DD 2F 15 15 13 	.db 47, 21, 21, 19  ;LeavesDark_Fast
  144 D1:F4E1 00 15 09 12 	.db 0, 21, 9, 18  ;LeavesLight_Fast
  145 D1:F4E5 26 15 11 0D 	.db 38, 21, 17, 13  ;Leaves1_Fast
  146 D1:F4E9 25 0E 00 23 	.db 37, 14, 0, 35  ;Branches_4_Fast_F
  147 D1:F4ED 26 0A 09 24 	.db 38, 10, 9, 36  ;Branches_7_Fast_F
  148 D1:F4F1 21 0E 12 09 	.db 33, 14, 18, 9  ;Branches_9_Fast
  149 D1:F4F5 20 0A 1B 25 	.db 32, 10, 27, 37  ;Branches_12_Fast_F
  150 D1:F4F9 0B 15 05 0D 	.db 11, 21, 5, 13  ;Leaves1_Fast
  151 D1:F4FD 18 13 22 06 	.db 24, 19, 34, 6  ;DualLeaf4_Slow
  152 D1:F501 19 0E 0E 14 	.db 25, 14, 14, 20  ;Branches_14_Slow
  153 D1:F505 29 0D 16 22 	.db 41, 13, 22, 34  ;Branches_16_Slow_O_F
  154 D1:F509 0C 15 0F 26 	.db 12, 21, 15, 38  ;Leaves1_Fast_F
  155 D1:F50D 2E 12 1C 1C 	.db 46, 18, 28, 28  ;Leaves2_Fast
  156 D1:F511 -  -  -  -  
  157 D1:F511 -  -  -  -  SG_Branch2:
  158 D1:F511 00 -  -  -  	.db 0
  159 D1:F512 13 -  -  -  	.db 19
  160 D1:F513 00 15 09 12 	.db 0, 21, 9, 18  ;LeavesLight_Fast
  161 D1:F517 01 15 15 12 	.db 1, 21, 21, 18  ;LeavesLight_Fast
  162 D1:F51B 0A 15 1C 26 	.db 10, 21, 28, 38  ;Leaves1_Fast_F
  163 D1:F51F 0D 15 06 26 	.db 13, 21, 6, 38  ;Leaves1_Fast_F
  164 D1:F523 0B 15 10 0D 	.db 11, 21, 16, 13  ;Leaves1_Fast
  165 D1:F527 3C 0E 1D 21 	.db 60, 14, 29, 33  ;Branches_8_Fast_F
  166 D1:F52B 35 0E 19 21 	.db 53, 14, 25, 33  ;Branches_8_Fast_F
  167 D1:F52F 2D 0E 12 1A 	.db 45, 14, 18, 26  ;Branches_10_Fast_F
  168 D1:F533 30 0E 1C 0B 	.db 48, 14, 28, 11  ;Branches_10_Fast
  169 D1:F537 29 0E 1E 17 	.db 41, 14, 30, 23  ;Branches_15_Slow
  170 D1:F53B 2F 06 25 19 	.db 47, 6, 37, 25  ;Branches_13_Fast_F
  171 D1:F53F 27 13 2A 06 	.db 39, 19, 42, 6  ;DualLeaf4_Slow
  172 D1:F543 19 15 16 13 	.db 25, 21, 22, 19  ;LeavesDark_Fast
  173 D1:F547 17 15 00 13 	.db 23, 21, 0, 19  ;LeavesDark_Fast
  174 D1:F54B 1D 15 0C 13 	.db 29, 21, 12, 19  ;LeavesDark_Fast
  175 D1:F54F 34 0D 11 0C 	.db 52, 13, 17, 12  ;Branches_16_Slow
  176 D1:F553 28 0E 23 15 	.db 40, 14, 35, 21  ;Branches_15_Slow_O_F
  177 D1:F557 3A 12 0C 1C 	.db 58, 18, 12, 28  ;Leaves2_Fast
  178 D1:F55B 1C 12 22 1C 	.db 28, 18, 34, 28  ;Leaves2_Fast
  179 D1:F55F -  -  -  -  
  180 D1:F55F -  -  -  -  SG_GroundChunk2:
  181 D1:F55F 00 -  -  -  	.db 0
  182 D1:F560 06 -  -  -  	.db 6
  183 D1:F561 0E 10 00 2B 	.db 14, 16, 0, 43  ;GroundDirtFull_Fast_F
  184 D1:F565 0F 10 08 2C 	.db 15, 16, 8, 44  ;GroundDirtFull_Fast
  185 D1:F569 0E 10 10 2B 	.db 14, 16, 16, 43  ;GroundDirtFull_Fast_F
  186 D1:F56D 02 0C 00 2D 	.db 2, 12, 0, 45  ;GroundDirtMound_Fast
  187 D1:F571 03 0C 08 2D 	.db 3, 12, 8, 45  ;GroundDirtMound_Fast
  188 D1:F575 02 0C 10 2D 	.db 2, 12, 16, 45  ;GroundDirtMound_Fast
  189 D1:F579 -  -  -  -  
  190 D1:F579 -  -  -  -  SG_GroundChunk1:
  191 D1:F579 00 -  -  -  	.db 0
  192 D1:F57A 07 -  -  -  	.db 7
  193 D1:F57B 10 10 00 2C 	.db 16, 16, 0, 44  ;GroundDirtFull_Fast
  194 D1:F57F 0F 10 08 2C 	.db 15, 16, 8, 44  ;GroundDirtFull_Fast
  195 D1:F583 0E 10 10 2B 	.db 14, 16, 16, 43  ;GroundDirtFull_Fast_F
  196 D1:F587 02 0C 10 2D 	.db 2, 12, 16, 45  ;GroundDirtMound_Fast
  197 D1:F58B 03 0C 08 2D 	.db 3, 12, 8, 45  ;GroundDirtMound_Fast
  198 D1:F58F 04 0C 00 2E 	.db 4, 12, 0, 46  ;GroundDirtMound_Fast_F
  199 D1:F593 00 0C 0C 2D 	.db 0, 12, 12, 45  ;GroundDirtMound_Fast
  200 D1:F597 -  -  -  -  
  201 D1:F597 -  -  -  -  SG_Root1:
  202 D1:F597 00 -  -  -  	.db 0
  203 D1:F598 03 -  -  -  	.db 3
  204 D1:F599 06 0E 00 16 	.db 6, 14, 0, 22  ;Branches_8_Fast
  205 D1:F59D 03 0E 0D 2F 	.db 3, 14, 13, 47  ;Branches_8_Slow_O_F
  206 D1:F5A1 00 0E 04 30 	.db 0, 14, 4, 48  ;Branches_9_Slow_O
  207 D1:F5A5 -  -  -  -  
  208 D1:F5A5 -  -  -  -  SG_TreeRow3:
  209 D1:F5A5 00 -  -  -  	.db 0
  210 D1:F5A6 07 -  -  -  	.db 7
  211 D1:F5A7 00 10 00 31 	.db 0, 16, 0, 49  ;Tree_2_Fast
  212 D1:F5AB 00 10 0D 32 	.db 0, 16, 13, 50  ;Tree_4_Fast
  213 D1:F5AF 00 10 1A 33 	.db 0, 16, 26, 51  ;Tree_7_Fast
  214 D1:F5B3 00 10 27 34 	.db 0, 16, 39, 52  ;Tree_9_Fast
  215 D1:F5B7 00 10 34 35 	.db 0, 16, 52, 53  ;Tree_6_Fast_F
  216 D1:F5BB 00 10 41 36 	.db 0, 16, 65, 54  ;Tree_3_Fast_F
  217 D1:F5BF 00 10 4E 37 	.db 0, 16, 78, 55  ;Tree_0_Fast_F
  218 D1:F5C3 -  -  -  -  
  219 D1:F5C3 -  -  -  -  SG_TreeRow5:
  220 D1:F5C3 00 -  -  -  	.db 0
  221 D1:F5C4 07 -  -  -  	.db 7
  222 D1:F5C5 00 10 00 31 	.db 0, 16, 0, 49  ;Tree_2_Fast
  223 D1:F5C9 00 10 0D 38 	.db 0, 16, 13, 56  ;Tree_3_Fast
  224 D1:F5CD 00 10 1A 39 	.db 0, 16, 26, 57  ;Tree_8_Fast
  225 D1:F5D1 00 10 27 3A 	.db 0, 16, 39, 58  ;Tree_9_Fast_F
  226 D1:F5D5 00 10 34 3B 	.db 0, 16, 52, 59  ;Tree_8_Fast_F
  227 D1:F5D9 00 10 41 3C 	.db 0, 16, 65, 60  ;Tree_4_Fast_F
  228 D1:F5DD 00 10 4E 37 	.db 0, 16, 78, 55  ;Tree_0_Fast_F
  229 D1:F5E1 -  -  -  -  
  230 D1:F5E1 -  -  -  -  SG_TreeRow1:
  231 D1:F5E1 00 -  -  -  	.db 0
  232 D1:F5E2 07 -  -  -  	.db 7
  233 D1:F5E3 00 10 00 3D 	.db 0, 16, 0, 61  ;Tree_0_Fast
  234 D1:F5E7 00 10 0D 38 	.db 0, 16, 13, 56  ;Tree_3_Fast
  235 D1:F5EB 00 10 1A 3E 	.db 0, 16, 26, 62  ;Tree_6_Fast
  236 D1:F5EF 00 10 27 3F 	.db 0, 16, 39, 63  ;Tree_10_Fast
  237 D1:F5F3 00 10 34 40 	.db 0, 16, 52, 64  ;Tree_7_Fast_F
  238 D1:F5F7 00 10 41 3C 	.db 0, 16, 65, 60  ;Tree_4_Fast_F
  239 D1:F5FB 00 10 4E 41 	.db 0, 16, 78, 65  ;Tree_1_Fast_F
  240 D1:F5FF -  -  -  -  
  241 D1:F5FF -  -  -  -  SG_TreeRow2:
  242 D1:F5FF 00 -  -  -  	.db 0
  243 D1:F600 07 -  -  -  	.db 7
  244 D1:F601 00 10 00 42 	.db 0, 16, 0, 66  ;Tree_1_Fast
  245 D1:F605 00 10 0D 43 	.db 0, 16, 13, 67  ;Tree_5_Fast
  246 D1:F609 00 10 1A 39 	.db 0, 16, 26, 57  ;Tree_8_Fast
  247 D1:F60D 00 10 27 44 	.db 0, 16, 39, 68  ;Tree_11_Fast
  248 D1:F611 00 10 34 3B 	.db 0, 16, 52, 59  ;Tree_8_Fast_F
  249 D1:F615 00 10 41 45 	.db 0, 16, 65, 69  ;Tree_5_Fast_F
  250 D1:F619 00 10 4E 46 	.db 0, 16, 78, 70  ;Tree_2_Fast_F
  251 D1:F61D -  -  -  -  
  252 D1:F61D -  -  -  -  SG_TreeRow4:
  253 D1:F61D 00 -  -  -  	.db 0
  254 D1:F61E 07 -  -  -  	.db 7
  255 D1:F61F 00 10 00 3D 	.db 0, 16, 0, 61  ;Tree_0_Fast
  256 D1:F623 00 10 0D 43 	.db 0, 16, 13, 67  ;Tree_5_Fast
  257 D1:F627 00 10 1A 3E 	.db 0, 16, 26, 62  ;Tree_6_Fast
  258 D1:F62B 00 10 27 47 	.db 0, 16, 39, 71  ;Tree_11_Fast_F
  259 D1:F62F 00 10 34 35 	.db 0, 16, 52, 53  ;Tree_6_Fast_F
  260 D1:F633 00 10 41 36 	.db 0, 16, 65, 54  ;Tree_3_Fast_F
  261 D1:F637 00 10 4E 41 	.db 0, 16, 78, 65  ;Tree_1_Fast_F
  262 D1:F63B -  -  -  -  
  263 D1:F63B -  -  -  -  SG_Branch1:
  264 D1:F63B 00 -  -  -  	.db 0
  265 D1:F63C 0F -  -  -  	.db 15
  266 D1:F63D 19 0E 34 48 	.db 25, 14, 52, 72  ;Branches_1_Fast
  267 D1:F641 19 0E 2C 2A 	.db 25, 14, 44, 42  ;Branches_2_Fast
  268 D1:F645 1A 0E 23 29 	.db 26, 14, 35, 41  ;Branches_3_Fast
  269 D1:F649 1B 0E 1A 27 	.db 27, 14, 26, 39  ;Branches_5_Fast
  270 D1:F64D 1D 0A 11 20 	.db 29, 10, 17, 32  ;Branches_7_Fast
  271 D1:F651 07 15 11 0D 	.db 7, 21, 17, 13  ;Leaves1_Fast
  272 D1:F655 00 12 0A 1C 	.db 0, 18, 10, 28  ;Leaves2_Fast
  273 D1:F659 1C 15 07 13 	.db 28, 21, 7, 19  ;LeavesDark_Fast
  274 D1:F65D 1F 0E 22 16 	.db 31, 14, 34, 22  ;Branches_8_Fast
  275 D1:F661 14 0E 17 17 	.db 20, 14, 23, 23  ;Branches_15_Slow
  276 D1:F665 05 15 02 12 	.db 5, 21, 2, 18  ;LeavesLight_Fast
  277 D1:F669 29 0D 1F 0C 	.db 41, 13, 31, 12  ;Branches_16_Slow
  278 D1:F66D 13 15 00 0D 	.db 19, 21, 0, 13  ;Leaves1_Fast
  279 D1:F671 32 0C 1C 0F 	.db 50, 12, 28, 15  ;DualLeaf2_Fast
  280 D1:F675 0D 15 09 0D 	.db 13, 21, 9, 13  ;Leaves1_Fast
  281 D1:F679 -  -  -  -  
  282 D1:F679 -  -  -  -  SG_Vines2:
  283 D1:F679 00 -  -  -  	.db 0
  284 D1:F67A 04 -  -  -  	.db 4
  285 D1:F67B 00 10 03 49 	.db 0, 16, 3, 73  ;Vine2_Slow
  286 D1:F67F 10 12 02 4A 	.db 16, 18, 2, 74  ;VineVertical_Slow_O
  287 D1:F683 22 12 02 4B 	.db 34, 18, 2, 75  ;VineVertical_Slow
  288 D1:F687 33 0C 00 11 	.db 51, 12, 0, 17  ;DualLeaf2_Fast
  289 D1:F68B -  -  -  -  
  290 D1:F68B -  -  -  -  SG_Vines6:
  291 D1:F68B 00 -  -  -  	.db 0
  292 D1:F68C 05 -  -  -  	.db 5
  293 D1:F68D 00 12 00 4C 	.db 0, 18, 0, 76  ;Vine4_Slow_F
  294 D1:F691 0F 12 07 4D 	.db 15, 18, 7, 77  ;Vine4_Slow_O_F
  295 D1:F695 1F 10 0F 4E 	.db 31, 16, 15, 78  ;Vine5_Slow_O_F
  296 D1:F699 26 0A 18 4F 	.db 38, 10, 24, 79  ;Vine6_Slow_O
  297 D1:F69D 28 0A 23 50 	.db 40, 10, 35, 80  ;Vine7_Slow
  298 D1:F6A1 -  -  -  -  
  299 D1:F6A1 -  -  -  -  SG_Vines7:
  300 D1:F6A1 00 -  -  -  	.db 0
  301 D1:F6A2 05 -  -  -  	.db 5
  302 D1:F6A3 21 10 00 51 	.db 33, 16, 0, 81  ;Vine5_Slow
  303 D1:F6A7 1F 0A 08 52 	.db 31, 10, 8, 82  ;Vine6_Slow
  304 D1:F6AB 18 10 12 51 	.db 24, 16, 18, 81  ;Vine5_Slow
  305 D1:F6AF 0F 10 1A 51 	.db 15, 16, 26, 81  ;Vine5_Slow
  306 D1:F6B3 00 12 22 53 	.db 0, 18, 34, 83  ;Vine4_Slow
  307 D1:F6B7 -  -  -  -  
  308 D1:F6B7 -  -  -  -  SG_Vines5:
  309 D1:F6B7 00 -  -  -  	.db 0
  310 D1:F6B8 09 -  -  -  	.db 9
  311 D1:F6B9 00 12 00 4C 	.db 0, 18, 0, 76  ;Vine4_Slow_F
  312 D1:F6BD 11 12 07 4D 	.db 17, 18, 7, 77  ;Vine4_Slow_O_F
  313 D1:F6C1 21 10 0F 4E 	.db 33, 16, 15, 78  ;Vine5_Slow_O_F
  314 D1:F6C5 28 0A 19 52 	.db 40, 10, 25, 82  ;Vine6_Slow
  315 D1:F6C9 2A 0A 23 54 	.db 42, 10, 35, 84  ;Vine7_Slow_O
  316 D1:F6CD 22 10 2A 55 	.db 34, 16, 42, 85  ;Vine5_Slow_O
  317 D1:F6D1 21 0A 32 4F 	.db 33, 10, 50, 79  ;Vine6_Slow_O
  318 D1:F6D5 1A 10 3D 51 	.db 26, 16, 61, 81  ;Vine5_Slow
  319 D1:F6D9 0C 12 44 56 	.db 12, 18, 68, 86  ;Vine4_Slow_O
  320 D1:F6DD -  -  -  -  
  321 D1:F6DD -  -  -  -  SG_BranchBase3:
  322 D1:F6DD 00 -  -  -  	.db 0
  323 D1:F6DE 04 -  -  -  	.db 4
  324 D1:F6DF 0B 0E 00 57 	.db 11, 14, 0, 87  ;Branches_1_Fast_F
  325 D1:F6E3 0A 0E 09 58 	.db 10, 14, 9, 88  ;Branches_2_Fast_F
  326 D1:F6E7 09 0E 12 59 	.db 9, 14, 18, 89  ;Branches_5_Fast_F
  327 D1:F6EB 00 0E 0E 14 	.db 0, 14, 14, 20  ;Branches_14_Slow
  328 D1:F6EF -  -  -  -  
  329 D1:F6EF -  -  -  -  SG_BranchBase2:
  330 D1:F6EF 00 -  -  -  	.db 0
  331 D1:F6F0 06 -  -  -  	.db 6
  332 D1:F6F1 00 0E 2A 5A 	.db 0, 14, 42, 90  ;Branches_1_Slow_O
  333 D1:F6F5 01 0E 21 5B 	.db 1, 14, 33, 91  ;Branches_2_Slow_O
  334 D1:F6F9 02 0E 18 5C 	.db 2, 14, 24, 92  ;Branches_4_Slow_O
  335 D1:F6FD 04 0E 06 30 	.db 4, 14, 6, 48  ;Branches_9_Slow_O
  336 D1:F701 04 0A 0F 5D 	.db 4, 10, 15, 93  ;Branches_7_Slow_O
  337 D1:F705 0B 0E 00 0B 	.db 11, 14, 0, 11  ;Branches_10_Fast
  338 D1:F709 -  -  -  -  
  339 D1:F709 -  -  -  -  SG_BranchBase4:
  340 D1:F709 00 -  -  -  	.db 0
  341 D1:F70A 04 -  -  -  	.db 4
  342 D1:F70B 0D 0E 00 5E 	.db 13, 14, 0, 94  ;Branches_0_Fast_F
  343 D1:F70F 07 0E 08 5F 	.db 7, 14, 8, 95  ;Branches_8_Slow_O
  344 D1:F713 12 0E 09 60 	.db 18, 14, 9, 96  ;Branches_9_Fast_F
  345 D1:F717 00 0E 0C 30 	.db 0, 14, 12, 48  ;Branches_9_Slow_O
  346 D1:F71B -  -  -  -  
  347 D1:F71B -  -  -  -  SG_Platform3:
  348 D1:F71B 00 -  -  -  	.db 0
  349 D1:F71C 06 -  -  -  	.db 6
  350 D1:F71D 00 09 00 61 	.db 0, 9, 0, 97  ;Platforms_0_Fast
  351 D1:F721 00 09 0A 62 	.db 0, 9, 10, 98  ;Platforms_1_Fast
  352 D1:F725 00 09 28 63 	.db 0, 9, 40, 99  ;Platforms_0_Fast_F
  353 D1:F729 08 0E 00 64 	.db 8, 14, 0, 100  ;Platforms_2_Slow_O_F
  354 D1:F72D 00 09 14 62 	.db 0, 9, 20, 98  ;Platforms_1_Fast
  355 D1:F731 00 09 1E 62 	.db 0, 9, 30, 98  ;Platforms_1_Fast
  356 D1:F735 -  -  -  -  
  357 D1:F735 -  -  -  -  SG_Platform4:
  358 D1:F735 00 -  -  -  	.db 0
  359 D1:F736 06 -  -  -  	.db 6
  360 D1:F737 00 09 00 61 	.db 0, 9, 0, 97  ;Platforms_0_Fast
  361 D1:F73B 00 09 0A 62 	.db 0, 9, 10, 98  ;Platforms_1_Fast
  362 D1:F73F 00 09 28 63 	.db 0, 9, 40, 99  ;Platforms_0_Fast_F
  363 D1:F743 08 0E 2A 65 	.db 8, 14, 42, 101  ;Platforms_2_Slow_O
  364 D1:F747 00 09 14 62 	.db 0, 9, 20, 98  ;Platforms_1_Fast
  365 D1:F74B 00 09 1E 62 	.db 0, 9, 30, 98  ;Platforms_1_Fast
  366 D1:F74F -  -  -  -  
  367 D1:F74F -  -  -  -  SG_Platform1:
  368 D1:F74F 00 -  -  -  	.db 0
  369 D1:F750 04 -  -  -  	.db 4
  370 D1:F751 00 09 00 61 	.db 0, 9, 0, 97  ;Platforms_0_Fast
  371 D1:F755 00 09 0A 62 	.db 0, 9, 10, 98  ;Platforms_1_Fast
  372 D1:F759 00 09 14 63 	.db 0, 9, 20, 99  ;Platforms_0_Fast_F
  373 D1:F75D 08 0E 16 65 	.db 8, 14, 22, 101  ;Platforms_2_Slow_O
  374 D1:F761 -  -  -  -  
  375 D1:F761 -  -  -  -  SG_Platform2:
  376 D1:F761 00 -  -  -  	.db 0
  377 D1:F762 04 -  -  -  	.db 4
  378 D1:F763 00 09 00 61 	.db 0, 9, 0, 97  ;Platforms_0_Fast
  379 D1:F767 00 09 0A 62 	.db 0, 9, 10, 98  ;Platforms_1_Fast
  380 D1:F76B 00 09 14 63 	.db 0, 9, 20, 99  ;Platforms_0_Fast_F
  381 D1:F76F 08 0E 00 64 	.db 8, 14, 0, 100  ;Platforms_2_Slow_O_F
  382 D1:F773 -  -  -  -  
  383 D1:F773 -  -  -  -  SG_TongueRing:
  384 D1:F773 00 -  -  -  	.db 0
  385 D1:F774 02 -  -  -  	.db 2
  386 D1:F775 00 10 04 67 	.db 0, 16, 4, 103  ;TongueRing1_Slow
  387 D1:F779 00 10 00 69 	.db 0, 16, 0, 105  ;TongueRing1_Slow_F
  388 D1:F77D -  -  -  -  
  389 D1:F77D -  -  -  -  SG_DarkGroundChunk:
  390 D1:F77D 00 -  -  -  	.db 0
  391 D1:F77E 07 -  -  -  	.db 7
  392 D1:F77F 11 0C 00 6B 	.db 17, 12, 0, 107  ;GroundDirtDark_Fast
  393 D1:F783 11 0C 08 6B 	.db 17, 12, 8, 107  ;GroundDirtDark_Fast
  394 D1:F787 10 0C 10 6C 	.db 16, 12, 16, 108  ;GroundDirtDark_Fast_F
  395 D1:F78B 05 0D 00 6D 	.db 5, 13, 0, 109  ;GroundHumpDark_Fast
  396 D1:F78F 05 0D 08 6D 	.db 5, 13, 8, 109  ;GroundHumpDark_Fast
  397 D1:F793 04 0D 10 6E 	.db 4, 13, 16, 110  ;GroundHumpDark_Fast_F
  398 D1:F797 00 0D 0C 6E 	.db 0, 13, 12, 110  ;GroundHumpDark_Fast_F
  399 D1:F79B -  -  -  -  
  400 D1:F79B -  -  -  -  SG_BGTree1:
  401 D1:F79B 00 -  -  -  	.db 0
  402 D1:F79C 08 -  -  -  	.db 8
  403 D1:F79D 03 15 00 13 	.db 3, 21, 0, 19  ;LeavesDark_Fast
  404 D1:F7A1 1B 10 0B 6F 	.db 27, 16, 11, 111  ;Tree_16_Fast
  405 D1:F7A5 0F 0E 0E 70 	.db 15, 14, 14, 112  ;Tree_17_Slow
  406 D1:F7A9 11 0E 09 71 	.db 17, 14, 9, 113  ;Tree_17_Slow_O_F
  407 D1:F7AD 2B 10 0B 6F 	.db 43, 16, 11, 111  ;Tree_16_Fast
  408 D1:F7B1 25 0E 08 71 	.db 37, 14, 8, 113  ;Tree_17_Slow_O_F
  409 D1:F7B5 00 15 0C 13 	.db 0, 21, 12, 19  ;LeavesDark_Fast
  410 D1:F7B9 1F 0B 03 08 	.db 31, 11, 3, 8  ;DualLeaf3_Fast
  411 D1:F7BD -  -  -  -  
  412 D1:F7BD -  -  -  -  SG_BGTree2:
  413 D1:F7BD 00 -  -  -  	.db 0
  414 D1:F7BE 08 -  -  -  	.db 8
  415 D1:F7BF 37 0E 0B 72 	.db 55, 14, 11, 114  ;Tree_18_Slow
  416 D1:F7C3 37 0E 05 70 	.db 55, 14, 5, 112  ;Tree_17_Slow
  417 D1:F7C7 37 0E 06 73 	.db 55, 14, 6, 115  ;Tree_18_Slow_O_F
  418 D1:F7CB 2A 10 05 74 	.db 42, 16, 5, 116  ;Tree_16_Fast_F
  419 D1:F7CF 1A 10 06 6F 	.db 26, 16, 6, 111  ;Tree_16_Fast
  420 D1:F7D3 11 0E 06 72 	.db 17, 14, 6, 114  ;Tree_18_Slow
  421 D1:F7D7 00 15 00 13 	.db 0, 21, 0, 19  ;LeavesDark_Fast
  422 D1:F7DB 33 0C 09 0F 	.db 51, 12, 9, 15  ;DualLeaf2_Fast
  423 D1:F7DF -  -  -  -  
  424 D1:F7DF -  -  -  -  SG_Cloud1:
  425 D1:F7DF 00 -  -  -  	.db 0
  426 D1:F7E0 0D -  -  -  	.db 13
  427 D1:F7E1 14 0A 06 75 	.db 20, 10, 6, 117  ;Clouds_0_Fast
  428 D1:F7E5 0D 0E 00 76 	.db 13, 14, 0, 118  ;Clouds_1_Fast
  429 D1:F7E9 00 0B 07 77 	.db 0, 11, 7, 119  ;Clouds_3_Fast
  430 D1:F7ED 03 0A 03 78 	.db 3, 10, 3, 120  ;Clouds_4_Fast
  431 D1:F7F1 08 10 06 79 	.db 8, 16, 6, 121  ;Clouds_2_Fast
  432 D1:F7F5 14 0A 0E 75 	.db 20, 10, 14, 117  ;Clouds_0_Fast
  433 D1:F7F9 13 0A 14 7A 	.db 19, 10, 20, 122  ;Clouds_0_Fast_F
  434 D1:F7FD 0B 0E 1C 7B 	.db 11, 14, 28, 123  ;Clouds_1_Fast_F
  435 D1:F801 03 0A 1B 7C 	.db 3, 10, 27, 124  ;Clouds_4_Fast_F
  436 D1:F805 01 0B 0F 7D 	.db 1, 11, 15, 125  ;Clouds_3_Fast_F
  437 D1:F809 01 0B 15 77 	.db 1, 11, 21, 119  ;Clouds_3_Fast
  438 D1:F80D 06 10 14 79 	.db 6, 16, 20, 121  ;Clouds_2_Fast
  439 D1:F811 06 10 0C 7E 	.db 6, 16, 12, 126  ;Clouds_2_Fast_F
  440 D1:F815 -  -  -  -  
  441 D1:F815 -  -  -  -  
  442 D1:F815 -  -  -  -  
Listing for file "ascent.asm"
  618 D1:F815 -  -  -  -  #include "generated/Collision_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Collision_Data.txt"
    1 D1:F815 -  -  -  -  Collision_Data_Frame_Table: 
    2 D1:F815 46 F8 D1 -  	.dl collision_data_0
    3 D1:F818 2C F8 D1 -  	.dl collision_data_1
    4 D1:F81B 2B F8 D1 -  	.dl collision_data_2
    5 D1:F81E 2A F8 D1 -  	.dl collision_data_3
    6 D1:F821 24 F8 D1 -  	.dl collision_data_4
    7 D1:F824 -  -  -  -  
    8 D1:F824 -  -  -  -  
    9 D1:F824 -  -  -  -  collision_data_4:
   10 D1:F824 01 -  -  -  	.db 1
   11 D1:F825 14 07 67 36 
              80 -  -  -  	.db 20,7,103,54,%10000000
   12 D1:F82A -  -  -  -  
   13 D1:F82A -  -  -  -  
   14 D1:F82A -  -  -  -  collision_data_3:
   15 D1:F82A 00 -  -  -  	.db 0
   16 D1:F82B -  -  -  -  
   17 D1:F82B -  -  -  -  
   18 D1:F82B -  -  -  -  collision_data_2:
   19 D1:F82B 00 -  -  -  	.db 0
   20 D1:F82C -  -  -  -  
   21 D1:F82C -  -  -  -  
   22 D1:F82C -  -  -  -  collision_data_1:
   23 D1:F82C 05 -  -  -  	.db 5
   24 D1:F82D 0D 07 6E 51 
              80 -  -  -  	.db 13,7,110,81,%10000000
   25 D1:F832 2E 07 2C 0F 
              80 -  -  -  	.db 46,7,44,15,%10000000
   26 D1:F837 72 07 59 28 
              80 -  -  -  	.db 114,7,89,40,%10000000
   27 D1:F83C 7C 06 45 3B 
              C0 -  -  -  	.db 124,6,69,59,%11000000
   28 D1:F841 B6 07 8B 6E 
              80 -  -  -  	.db 182,7,139,110,%10000000
   29 D1:F846 -  -  -  -  
   30 D1:F846 -  -  -  -  
   31 D1:F846 -  -  -  -  collision_data_0:
   32 D1:F846 05 -  -  -  	.db 5
   33 D1:F847 02 17 9F 00 
              00 -  -  -  	.db 2,23,159,0,%00000000
   34 D1:F84C 5C 07 9A 69 
              80 -  -  -  	.db 92,7,154,105,%10000000
   35 D1:F851 5C 07 36 05 
              80 -  -  -  	.db 92,7,54,5,%10000000
   36 D1:F856 98 07 5E 41 
              80 -  -  -  	.db 152,7,94,65,%10000000
   37 D1:F85B C7 07 91 74 
              80 -  -  -  	.db 199,7,145,116,%10000000
   38 D1:F860 -  -  -  -  
   39 D1:F860 00 -  -  -  	.db 0 ;Terminate Data
Listing for file "ascent.asm"
  619 D1:F861 -  -  -  -  #include "generated/Animation_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Animation_Data.txt"
    1 D1:F861 -  -  -  -  position_animation_data:
    2 D1:F861 29 -  -  -  	.db 41
    3 D1:F862 99 F3 D1 -  	.dl SG_GroundGrass + 20
    4 D1:F865 C5 C6 D1 -  	.dl sine_2_1_3
    5 D1:F868 02 -  -  -  	.db 2
    6 D1:F869 A7 F3 D1 -  	.dl SG_GroundGrass + 34
    7 D1:F86C C0 C6 D1 -  	.dl sine_2_1_2
    8 D1:F86F 04 -  -  -  	.db 4
    9 D1:F870 B1 F3 D1 -  	.dl SG_GroundGrass + 44
   10 D1:F873 D9 C6 D1 -  	.dl sine_4_1_3
   11 D1:F876 19 -  -  -  	.db 25
   12 D1:F877 BB F3 D1 -  	.dl SG_GroundGrass + 54
   13 D1:F87A E8 C6 D1 -  	.dl sine_8_1_2
   14 D1:F87D 0A -  -  -  	.db 10
   15 D1:F87E D9 F3 D1 -  	.dl SG_Branch3 + 18
   16 D1:F881 BB C6 D1 -  	.dl sine_2_1_1
   17 D1:F884 05 -  -  -  	.db 5
   18 D1:F885 21 F4 D1 -  	.dl SG_Branch7 + 60
   19 D1:F888 CA C6 D1 -  	.dl sine_2_1_4
   20 D1:F88B 11 -  -  -  	.db 17
   21 D1:F88C 27 F4 D1 -  	.dl SG_Branch7 + 66
   22 D1:F88F D4 C6 D1 -  	.dl sine_4_1_2
   23 D1:F892 10 -  -  -  	.db 16
   24 D1:F893 2B F4 D1 -  	.dl SG_Branch7 + 70
   25 D1:F896 B1 C6 D1 -  	.dl sine_1_1_3
   26 D1:F899 10 -  -  -  	.db 16
   27 D1:F89A 2F F4 D1 -  	.dl SG_Branch7 + 74
   28 D1:F89D CF C6 D1 -  	.dl sine_4_1_1
   29 D1:F8A0 08 -  -  -  	.db 8
   30 D1:F8A1 39 F4 D1 -  	.dl SG_Branch4 + 2
   31 D1:F8A4 C4 C6 D1 -  	.dl sine_2_3_3
   32 D1:F8A7 3F -  -  -  	.db 63
   33 D1:F8A8 3F F4 D1 -  	.dl SG_Branch4 + 8
   34 D1:F8AB CF C6 D1 -  	.dl sine_4_1_1
   35 D1:F8AE 0F -  -  -  	.db 15
   36 D1:F8AF 4B F4 D1 -  	.dl SG_Branch4 + 20
   37 D1:F8B2 CF C6 D1 -  	.dl sine_4_1_1
   38 D1:F8B5 06 -  -  -  	.db 6
   39 D1:F8B6 9B F4 D1 -  	.dl SG_Branch5 + 14
   40 D1:F8B9 BB C6 D1 -  	.dl sine_2_1_1
   41 D1:F8BC 09 -  -  -  	.db 9
   42 D1:F8BD C5 F4 D1 -  	.dl SG_Branch5 + 56
   43 D1:F8C0 C5 C6 D1 -  	.dl sine_2_1_3
   44 D1:F8C3 04 -  -  -  	.db 4
   45 D1:F8C4 E1 F4 D1 -  	.dl SG_Branch6 + 6
   46 D1:F8C7 C5 C6 D1 -  	.dl sine_2_1_3
   47 D1:F8CA 00 -  -  -  	.db 0
   48 D1:F8CB F9 F4 D1 -  	.dl SG_Branch6 + 30
   49 D1:F8CE CF C6 D1 -  	.dl sine_4_1_1
   50 D1:F8D1 0B -  -  -  	.db 11
   51 D1:F8D2 09 F5 D1 -  	.dl SG_Branch6 + 46
   52 D1:F8D5 D4 C6 D1 -  	.dl sine_4_1_2
   53 D1:F8D8 0C -  -  -  	.db 12
   54 D1:F8D9 0F F5 D1 -  	.dl SG_Branch6 + 52
   55 D1:F8DC BB C6 D1 -  	.dl sine_2_1_1
   56 D1:F8DF 1C -  -  -  	.db 28
   57 D1:F8E0 13 F5 D1 -  	.dl SG_Branch2 + 2
   58 D1:F8E3 CF C6 D1 -  	.dl sine_4_1_1
   59 D1:F8E6 00 -  -  -  	.db 0
   60 D1:F8E7 17 F5 D1 -  	.dl SG_Branch2 + 6
   61 D1:F8EA C0 C6 D1 -  	.dl sine_2_1_2
   62 D1:F8ED 01 -  -  -  	.db 1
   63 D1:F8EE 59 F5 D1 -  	.dl SG_Branch2 + 72
   64 D1:F8F1 C5 C6 D1 -  	.dl sine_2_1_3
   65 D1:F8F4 0C -  -  -  	.db 12
   66 D1:F8F5 55 F6 D1 -  	.dl SG_Branch1 + 26
   67 D1:F8F8 D9 C6 D1 -  	.dl sine_4_1_3
   68 D1:F8FB 00 -  -  -  	.db 0
   69 D1:F8FC 6D F6 D1 -  	.dl SG_Branch1 + 50
   70 D1:F8FF D4 C6 D1 -  	.dl sine_4_1_2
   71 D1:F902 13 -  -  -  	.db 19
   72 D1:F903 77 F6 D1 -  	.dl SG_Branch1 + 60
   73 D1:F906 A7 C6 D1 -  	.dl sine_1_1_1
   74 D1:F909 09 -  -  -  	.db 9
   75 D1:F90A 91 F6 D1 -  	.dl SG_Vines6 + 6
   76 D1:F90D BF C6 D1 -  	.dl sine_2_3_2
   77 D1:F910 0F -  -  -  	.db 15
   78 D1:F911 95 F6 D1 -  	.dl SG_Vines6 + 10
   79 D1:F914 BF C6 D1 -  	.dl sine_2_3_2
   80 D1:F917 1F -  -  -  	.db 31
   81 D1:F918 99 F6 D1 -  	.dl SG_Vines6 + 14
   82 D1:F91B BF C6 D1 -  	.dl sine_2_3_2
   83 D1:F91E 26 -  -  -  	.db 38
   84 D1:F91F 9D F6 D1 -  	.dl SG_Vines6 + 18
   85 D1:F922 BF C6 D1 -  	.dl sine_2_3_2
   86 D1:F925 28 -  -  -  	.db 40
   87 D1:F926 A3 F6 D1 -  	.dl SG_Vines7 + 2
   88 D1:F929 BF C6 D1 -  	.dl sine_2_3_2
   89 D1:F92C 21 -  -  -  	.db 33
   90 D1:F92D A7 F6 D1 -  	.dl SG_Vines7 + 6
   91 D1:F930 BF C6 D1 -  	.dl sine_2_3_2
   92 D1:F933 1F -  -  -  	.db 31
   93 D1:F934 AB F6 D1 -  	.dl SG_Vines7 + 10
   94 D1:F937 BF C6 D1 -  	.dl sine_2_3_2
   95 D1:F93A 18 -  -  -  	.db 24
   96 D1:F93B AF F6 D1 -  	.dl SG_Vines7 + 14
   97 D1:F93E C0 C6 D1 -  	.dl sine_2_1_2
   98 D1:F941 0F -  -  -  	.db 15
   99 D1:F942 B9 F6 D1 -  	.dl SG_Vines5 + 2
  100 D1:F945 E3 C6 D1 -  	.dl sine_8_1_1
  101 D1:F948 00 -  -  -  	.db 0
  102 D1:F949 BD F6 D1 -  	.dl SG_Vines5 + 6
  103 D1:F94C E8 C6 D1 -  	.dl sine_8_1_2
  104 D1:F94F 11 -  -  -  	.db 17
  105 D1:F950 C1 F6 D1 -  	.dl SG_Vines5 + 10
  106 D1:F953 ED C6 D1 -  	.dl sine_8_1_3
  107 D1:F956 21 -  -  -  	.db 33
  108 D1:F957 C5 F6 D1 -  	.dl SG_Vines5 + 14
  109 D1:F95A F2 C6 D1 -  	.dl sine_8_1_4
  110 D1:F95D 28 -  -  -  	.db 40
  111 D1:F95E C9 F6 D1 -  	.dl SG_Vines5 + 18
  112 D1:F961 E3 C6 D1 -  	.dl sine_8_1_1
  113 D1:F964 2A -  -  -  	.db 42
  114 D1:F965 CD F6 D1 -  	.dl SG_Vines5 + 22
  115 D1:F968 E8 C6 D1 -  	.dl sine_8_1_2
  116 D1:F96B 22 -  -  -  	.db 34
  117 D1:F96C D1 F6 D1 -  	.dl SG_Vines5 + 26
  118 D1:F96F ED C6 D1 -  	.dl sine_8_1_3
  119 D1:F972 21 -  -  -  	.db 33
  120 D1:F973 D5 F6 D1 -  	.dl SG_Vines5 + 30
  121 D1:F976 F2 C6 D1 -  	.dl sine_8_1_4
  122 D1:F979 1A -  -  -  	.db 26
  123 D1:F97A D9 F6 D1 -  	.dl SG_Vines5 + 34
  124 D1:F97D E3 C6 D1 -  	.dl sine_8_1_1
  125 D1:F980 0C -  -  -  	.db 12
  126 D1:F981 -  -  -  -  
  127 D1:F981 -  -  -  -  
  128 D1:F981 -  -  -  -  
  129 D1:F981 -  -  -  -  sprite_animation_data:
  130 D1:F981 05 -  -  -  	.db 5
  131 D1:F982 40 C7 D1 -  	.dl lin_4_7_4
  132 D1:F985 0E -  -  -  	.db 14
  133 D1:F986 0F -  -  -  	.db 15
  134 D1:F987 10 -  -  -  	.db 16
  135 D1:F988 11 -  -  -  	.db 17
  136 D1:F989 0E -  -  -  	.db 14
  137 D1:F98A 0F -  -  -  	.db 15
  138 D1:F98B 0E -  -  -  	.db 14
  139 D1:F98C 11 -  -  -  	.db 17
  140 D1:F98D E0 F3 D1 -  	.dl SG_Branch3 + 25
  141 D1:F990 36 C7 D1 -  	.dl lin_4_7_2
  142 D1:F993 4B -  -  -  	.db 75
  143 D1:F994 4A -  -  -  	.db 74
  144 D1:F995 4A -  -  -  	.db 74
  145 D1:F996 4B -  -  -  	.db 75
  146 D1:F997 4B -  -  -  	.db 75
  147 D1:F998 4B -  -  -  	.db 75
  148 D1:F999 4A -  -  -  	.db 74
  149 D1:F99A 4B -  -  -  	.db 75
  150 D1:F99B 86 F6 D1 -  	.dl SG_Vines2 + 13
  151 D1:F99E 36 C7 D1 -  	.dl lin_4_7_2
  152 D1:F9A1 0F -  -  -  	.db 15
  153 D1:F9A2 0F -  -  -  	.db 15
  154 D1:F9A3 0E -  -  -  	.db 14
  155 D1:F9A4 11 -  -  -  	.db 17
  156 D1:F9A5 10 -  -  -  	.db 16
  157 D1:F9A6 0E -  -  -  	.db 14
  158 D1:F9A7 0F -  -  -  	.db 15
  159 D1:F9A8 11 -  -  -  	.db 17
  160 D1:F9A9 8A F6 D1 -  	.dl SG_Vines2 + 17
  161 D1:F9AC A9 C7 D1 -  	.dl linrep_8_7_1
  162 D1:F9AF 66 -  -  -  	.db 102
  163 D1:F9B0 67 -  -  -  	.db 103
  164 D1:F9B1 66 -  -  -  	.db 102
  165 D1:F9B2 67 -  -  -  	.db 103
  166 D1:F9B3 66 -  -  -  	.db 102
  167 D1:F9B4 67 -  -  -  	.db 103
  168 D1:F9B5 66 -  -  -  	.db 102
  169 D1:F9B6 67 -  -  -  	.db 103
  170 D1:F9B7 78 F7 D1 -  	.dl SG_TongueRing + 5
  171 D1:F9BA A9 C7 D1 -  	.dl linrep_8_7_1
  172 D1:F9BD 68 -  -  -  	.db 104
  173 D1:F9BE 69 -  -  -  	.db 105
  174 D1:F9BF 68 -  -  -  	.db 104
  175 D1:F9C0 69 -  -  -  	.db 105
  176 D1:F9C1 68 -  -  -  	.db 104
  177 D1:F9C2 69 -  -  -  	.db 105
  178 D1:F9C3 68 -  -  -  	.db 104
  179 D1:F9C4 69 -  -  -  	.db 105
  180 D1:F9C5 7C F7 D1 -  	.dl SG_TongueRing + 9
Listing for file "ascent.asm"
  620 D1:F9C8 -  -  -  -  #include "generated/Tongue_Rings.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Tongue_Rings.txt"
    1 D1:F9C8 -  -  -  -  Tongue_Rings:
    2 D1:F9C8 0D -  -  -  	.db 13
    3 D1:F9C9 00 C5 24 -  	.db 0, 197, 36
    4 D1:F9CC 01 66 7B -  	.db 1, 102, 123
    5 D1:F9CF 01 F8 27 -  	.db 1, 248, 39
    6 D1:F9D2 02 1E 6F -  	.db 2, 30, 111
    7 D1:F9D5 02 4D 43 -  	.db 2, 77, 67
    8 D1:F9D8 02 7A 65 -  	.db 2, 122, 101
    9 D1:F9DB 02 A4 1B -  	.db 2, 164, 27
   10 D1:F9DE 02 CE 7F -  	.db 2, 206, 127
   11 D1:F9E1 02 D8 3E -  	.db 2, 216, 62
   12 D1:F9E4 03 1A 62 -  	.db 3, 26, 98
   13 D1:F9E7 03 77 4F -  	.db 3, 119, 79
   14 D1:F9EA 03 A6 79 -  	.db 3, 166, 121
   15 D1:F9ED 03 B5 22 -  	.db 3, 181, 34
Listing for file "ascent.asm"
  621 D1:F9F0 -  -  -  -  
  622 D1:F9F0 -  -  -  -  ;#include "testing/SpriteGroups.txt"
  623 D1:F9F0 -  -  -  -  ;#include "TestingSpriteData.txt"
  624 D1:F9F0 -  -  -  -  ;#include "TestGeneratedSpriteData.txt"
  625 D1:F9F0 -  -  -  -  ;#include "Sprite_Data.txt"
  626 D1:F9F0 -  -  -  -  ;#include "FG_Data.txt"
  627 D1:F9F0 -  -  -  -  ;#include "MG_Data.txt"
  628 D1:F9F0 -  -  -  -  ;#include "BG_Data.txt"
  629 D1:F9F0 -  -  -  -  ;#include "Palette_Setup.txt"
  630 D1:F9F0 -  -  -  -  ;#include "Equates.txt"
  631 D1:F9F0 -  -  -  -  ;#include "Decompress_Calls.txt"
  632 D1:F9F0 -  -  -  -  ;#include "Sprite_Tables.txt"
  633 D1:F9F0 -  -  -  -  ;#include "TestingBGData.txt"
  634 D1:F9F0 -  -  -  -  ;#include "TestingFGData.txt"
  635 D1:F9F0 -  -  -  -  
  636 D1:F9F0 -  -  -  -  
