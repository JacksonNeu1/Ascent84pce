    1 00:0000 -  -  -  -  
    2 00:0000 -  -  -  -  #include "includes\ti84pce.inc"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\includes\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "ascent.asm"
    3 00:0000 -  -  -  -  
    4 00:0000 -  -  -  -   .assume ADL=1
    5 00:0000 -  -  -  -   .org userMem-2
    6 D1:A87F EF 7B -  -   .db tExtTok,tAsm84CeCmp
    7 D1:A881 -  -  -  -  
    8 D1:A881 -  -  -  -  
    9 D1:A881 -  -  -  -  
   10 D1:A881 -  -  -  -  ;0E30000h + 0200h
   11 D1:A881 -  -  -  -  
   12 D1:A881 CD 28 08 02 	call _homeup
   13 D1:A885 CD 10 08 02 	call _ClrScrnFull
   14 D1:A889 -  -  -  -  
   15 D1:A889 CD 48 08 02 	call _RunIndicOff		; turn off run indicator
   16 D1:A88D F3 -  -  -  	di			
   17 D1:A88E -  -  -  -  	
   18 D1:A88E -  -  -  -  	
   19 D1:A88E CD D3 CC D1 	call setup_palette_1
   20 D1:A892 -  -  -  -  
   21 D1:A892 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255
   22 D1:A896 3E 25 -  -  	ld	a,lcdBpp4
   23 D1:A898 32 18 00 E3 	ld (mpLcdCtrl),a	
   24 D1:A89C -  -  -  -  
   25 D1:A89C -  -  -  -  
   26 D1:A89C -  -  -  -  
   27 D1:A89C -  -  -  -  
   28 D1:A89C -  -  -  -  	;call sdcomp_set_fast
   29 D1:A89C -  -  -  -  	;call sdcomp_set_flip
   30 D1:A89C -  -  -  -  	;call sdcomp_reset_offset
   31 D1:A89C -  -  -  -  	;ld hl, Tree_5 
   32 D1:A89C -  -  -  -  	;ld de, Tree_5_Fast_F_0
   33 D1:A89C -  -  -  -  	;call sdcomp_set_2bpc
   34 D1:A89C -  -  -  -  	;call sprite_decompress
   35 D1:A89C -  -  -  -  	
   36 D1:A89C -  -  -  -  	;call sdcomp_set_fast
   37 D1:A89C -  -  -  -  	;call sdcomp_reset_flip
   38 D1:A89C -  -  -  -  	;call sdcomp_reset_offset
   39 D1:A89C -  -  -  -  	;ld hl, Moss_0 
   40 D1:A89C -  -  -  -  	;ld de, Moss_0_Fast_0
   41 D1:A89C -  -  -  -  	;call sprite_decompress
   42 D1:A89C -  -  -  -  	
   43 D1:A89C -  -  -  -  	;call prgmpause
   44 D1:A89C -  -  -  -  	;call prgmpause
   45 D1:A89C -  -  -  -  
   46 D1:A89C 21 00 00 00 	ld hl,0
   47 D1:A8A0 22 CE AB D1 	ld (cam_pos),hl
   48 D1:A8A4 22 D1 AB D1 	ld (bg_cam_pos),hl
   49 D1:A8A8 -  -  -  -  	
   50 D1:A8A8 -  -  -  -  	
   51 D1:A8A8 3E 02 -  -  	ld a,%00000010;disable, 32768hz
   52 D1:A8AA 32 30 00 F2 	ld ($F20030),a	
   53 D1:A8AE -  -  -  -  	
   54 D1:A8AE CD B8 B8 D1 	call setup_decompress_queue
   55 D1:A8B2 -  -  -  -  	
   56 D1:A8B2 -  -  -  -  	;Decompress sprites in preframes for setup
   57 D1:A8B2 21 05 C4 D1 	ld hl,decompress_frame_up_pre2 
   58 D1:A8B6 CD BE B9 D1 	call cfdc_direct_add_decompress_frame
   59 D1:A8BA CD 05 B9 D1 	call continue_decompressions ;Run decompression (Will finish as timer has not started)
   60 D1:A8BE 21 37 C4 D1 	ld hl,decompress_frame_up_pre1
   61 D1:A8C2 CD BE B9 D1 	call cfdc_direct_add_decompress_frame
   62 D1:A8C6 CD 05 B9 D1 	call continue_decompressions ;Run decompression (Will finish as timer has not started)
   63 D1:A8CA -  -  -  -  	
   64 D1:A8CA -  -  -  -  	;call draw_fg
   65 D1:A8CA -  -  -  -  	
   66 D1:A8CA 3E 00 -  -  	ld a,0
   67 D1:A8CC CD B0 B9 D1 	call cfdc_cam_move_up ;need to skip here for frame 0
   68 D1:A8D0 -  -  -  -  	
   69 D1:A8D0 -  -  -  -  	;call prgmpause
   70 D1:A8D0 -  -  -  -  
   71 D1:A8D0 CD 05 B9 D1 	call continue_decompressions
   72 D1:A8D4 -  -  -  -  	
   73 D1:A8D4 -  -  -  -  	;call prgmpause
   74 D1:A8D4 00 -  -  -  	nop ;This needs to be here for some reason
   75 D1:A8D5 -  -  -  -  ;	call decompress_calls
   76 D1:A8D5 -  -  -  -  	
   77 D1:A8D5 -  -  -  -  
   78 D1:A8D5 -  -  -  -  	
   79 D1:A8D5 -  -  -  -  	;gen purp timers
   80 D1:A8D5 -  -  -  -  		; 76543210	
   81 D1:A8D5 3E 03 -  -  	ld a,%00000011;enable, 32768hz
   82 D1:A8D7 32 30 00 F2 	ld ($F20030),a
   83 D1:A8DB -  -  -  -  	;	  fedcba98
   84 D1:A8DB 3E 02 -  -  	ld a,%00000010;count up
   85 D1:A8DD 32 31 00 F2 	ld ($F20031),a
   86 D1:A8E1 -  -  -  -  	
   87 D1:A8E1 21 00 2C D5 	ld hl,vRam + (160*240*2)
   88 D1:A8E5 22 D4 AB D1 	ld (draw_buffer),hl
   89 D1:A8E9 21 00 C2 D5 	ld hl,vRam + (160*240*3)
   90 D1:A8ED 22 10 00 E3 	ld (mpLcdBase),hl
   91 D1:A8F1 -  -  -  -  	
   92 D1:A8F1 -  -  -  -  	
   93 D1:A8F1 21 00 06 00 	ld hl,$000600
   94 D1:A8F5 22 22 BC D1 	ld (player_x_pos),hl 
   95 D1:A8F9 21 00 1E 00 	ld hl,$001E00
   96 D1:A8FD 22 25 BC D1 	ld (player_y_pos),hl 
   97 D1:A901 -  -  -  -  	
   98 D1:A901 CD 5C BB D1 	call player_draw 
   99 D1:A905 -  -  -  -  	
  100 D1:A905 -  -  -  -  	
  101 D1:A905 -  -  -  -  	
  102 D1:A905 -  -  -  -  
  103 D1:A905 -  -  -  -  	;ld hl,BG_buffer+(160*5)
  104 D1:A905 -  -  -  -  	;ld (dbgl_vram_line_start),hl
  105 D1:A905 -  -  -  -  
  106 D1:A905 -  -  -  -  	;ld hl,BG_Data_1
  107 D1:A905 -  -  -  -  	;ld a,10
  108 D1:A905 -  -  -  -  	;call draw_bg_line
  109 D1:A905 -  -  -  -  	
  110 D1:A905 -  -  -  -  	
  111 D1:A905 -  -  -  -  	;call prgmpause
  112 D1:A905 -  -  -  -  
  113 D1:A905 -  -  -  -  	;call draw_mg
  114 D1:A905 -  -  -  -  
  115 D1:A905 CD 27 AD D1 	call setup_bg ;after initial decompressions and cam setup
  116 D1:A909 -  -  -  -  	;call prgmpause
  117 D1:A909 -  -  -  -  	;call prgmpause
  118 D1:A909 -  -  -  -  main_loop:
  119 D1:A909 -  -  -  -  
  120 D1:A909 -  -  -  -  	
  121 D1:A909 -  -  -  -  
  122 D1:A909 -  -  -  -  	;clear timer
  123 D1:A909 3E 00 -  -  	ld a,0
  124 D1:A90B 32 00 00 F2 	ld ($F20000),a;32768hz
  125 D1:A90F 32 01 00 F2 	ld ($F20001),a;128hz
  126 D1:A913 32 02 00 F2 	ld ($F20002),a;0.5hz
  127 D1:A917 32 03 00 F2 	ld ($F20003),a
  128 D1:A91B -  -  -  -  	
  129 D1:A91B -  -  -  -  	;Instructions here 
  130 D1:A91B -  -  -  -  	
  131 D1:A91B -  -  -  -  	
  132 D1:A91B -  -  -  -  	;call input_cam_up
  133 D1:A91B C3 DE B9 D1 	jp get_inputs
  134 D1:A91F -  -  -  -  get_inputs_return:
  135 D1:A91F -  -  -  -  
  136 D1:A91F -  -  -  -  	;call move_bg Draw BG calls MoveBg
  137 D1:A91F -  -  -  -  	
  138 D1:A91F -  -  -  -  	
  139 D1:A91F CD 37 AC D1 	call draw_bg
  140 D1:A923 -  -  -  -  
  141 D1:A923 -  -  -  -  	
  142 D1:A923 -  -  -  -  	
  143 D1:A923 -  -  -  -  	;TEsting
  144 D1:A923 21 00 00 00 	ld hl,0
  145 D1:A927 3A 00 00 F2 	ld a,($F20000);32768hz
  146 D1:A92B 6F -  -  -  	ld l,a
  147 D1:A92C 3A 01 00 F2 	ld a,($F20001);128hz 
  148 D1:A930 67 -  -  -  	ld h,a
  149 D1:A931 CB 3C -  -  	srl h ;div by 8
  150 D1:A933 CB 1D -  -  	rr l 
  151 D1:A935 CB 3C -  -  	srl h
  152 D1:A937 CB 1D -  -  	rr l 
  153 D1:A939 CB 3C -  -  	srl h
  154 D1:A93B CB 1D -  -  	rr l 
  155 D1:A93D 7D -  -  -  	ld a,l
  156 D1:A93E 32 DB AB D1 	ld (draw_bg_time),a
  157 D1:A942 -  -  -  -  	
  158 D1:A942 -  -  -  -  	;TEST CLEAR BUFFER
  159 D1:A942 -  -  -  -  	;ld hl,BG_buffer
  160 D1:A942 -  -  -  -  	;ld de,(draw_buffer)
  161 D1:A942 -  -  -  -  	;ld bc, 160*240
  162 D1:A942 -  -  -  -  	;ldir
  163 D1:A942 -  -  -  -  	
  164 D1:A942 CD EE B4 D1 	call draw_mg
  165 D1:A946 -  -  -  -  	
  166 D1:A946 -  -  -  -  	
  167 D1:A946 21 00 07 01 	ld hl,$010700
  168 D1:A94A 22 22 BC D1 	ld (player_x_pos),hl 
  169 D1:A94E 21 00 DE 02 	ld hl,$02dE00
  170 D1:A952 22 25 BC D1 	ld (player_y_pos),hl 
  171 D1:A956 -  -  -  -  	
  172 D1:A956 CD 5C BB D1 	call player_draw 
  173 D1:A95A -  -  -  -  	
  174 D1:A95A -  -  -  -  	;TEsting
  175 D1:A95A 21 00 00 00 	ld hl,0
  176 D1:A95E 3A 00 00 F2 	ld a,($F20000);32768hz
  177 D1:A962 6F -  -  -  	ld l,a
  178 D1:A963 3A 01 00 F2 	ld a,($F20001);128hz 
  179 D1:A967 67 -  -  -  	ld h,a
  180 D1:A968 CB 3C -  -  	srl h ;div by 8
  181 D1:A96A CB 1D -  -  	rr l 
  182 D1:A96C CB 3C -  -  	srl h
  183 D1:A96E CB 1D -  -  	rr l 
  184 D1:A970 CB 3C -  -  	srl h
  185 D1:A972 CB 1D -  -  	rr l 
  186 D1:A974 7D -  -  -  	ld a,l
  187 D1:A975 32 DC AB D1 	ld (draw_mg_time),a
  188 D1:A979 -  -  -  -  	
  189 D1:A979 CD 59 B5 D1 	call draw_fg
  190 D1:A97D -  -  -  -  	;Leaves_4_Slow_1 has issue
  191 D1:A97D -  -  -  -  	;Need to fix indexing of decompress segments
  192 D1:A97D -  -  -  -  	
  193 D1:A97D -  -  -  -  	;Sprite groups must all use the same load index of a given sprite, as they pull from same data
  194 D1:A97D -  -  -  -  	
  195 D1:A97D -  -  -  -  	
  196 D1:A97D -  -  -  -  	
  197 D1:A97D -  -  -  -  	;TEsting
  198 D1:A97D 21 00 00 00 	ld hl,0
  199 D1:A981 3A 00 00 F2 	ld a,($F20000);32768hz
  200 D1:A985 6F -  -  -  	ld l,a
  201 D1:A986 3A 01 00 F2 	ld a,($F20001);128hz 
  202 D1:A98A 67 -  -  -  	ld h,a
  203 D1:A98B CB 3C -  -  	srl h ;div by 8
  204 D1:A98D CB 1D -  -  	rr l 
  205 D1:A98F CB 3C -  -  	srl h
  206 D1:A991 CB 1D -  -  	rr l 
  207 D1:A993 CB 3C -  -  	srl h
  208 D1:A995 CB 1D -  -  	rr l 
  209 D1:A997 7D -  -  -  	ld a,l
  210 D1:A998 32 DD AB D1 	ld (draw_fg_time),a
  211 D1:A99C -  -  -  -  	
  212 D1:A99C 21 00 00 00 	ld hl,0
  213 D1:A9A0 -  -  -  -  	
  214 D1:A9A0 -  -  -  -  	; for debug longest frame draw time
  215 D1:A9A0 3A 00 00 F2 	ld a,($F20000)
  216 D1:A9A4 6F -  -  -  	ld l,a
  217 D1:A9A5 3A 01 00 F2 	ld a,($F20001);128hz 
  218 D1:A9A9 67 -  -  -  	ld h,a
  219 D1:A9AA E5 -  -  -  	push hl
  220 D1:A9AB ED 4B DF AB 
              D1 -  -  -  	ld bc,(longestFrame)
  221 D1:A9B0 ED 42 -  -  	sbc hl,bc 
  222 D1:A9B2 DA C4 A9 D1 	jp c,longest_frame_skip
  223 D1:A9B6 -  -  -  -  	
  224 D1:A9B6 E1 -  -  -  	pop hl 
  225 D1:A9B7 E5 -  -  -  	push hl 
  226 D1:A9B8 22 DF AB D1 	ld (longestFrame),hl 
  227 D1:A9BC 2A CE AB D1 	ld hl,(cam_pos)
  228 D1:A9C0 22 E2 AB D1 	ld (longestFramePos),hl
  229 D1:A9C4 -  -  -  -  longest_frame_skip:
  230 D1:A9C4 E1 -  -  -  	pop hl 
  231 D1:A9C5 -  -  -  -  	
  232 D1:A9C5 -  -  -  -  		
  233 D1:A9C5 2A E8 AB D1 	ld hl,(frameCount)
  234 D1:A9C9 23 -  -  -  	inc hl
  235 D1:A9CA 22 E8 AB D1 	ld (frameCount),hl
  236 D1:A9CE -  -  -  -  	
  237 D1:A9CE -  -  -  -  
  238 D1:A9CE -  -  -  -  	
  239 D1:A9CE -  -  -  -  	;check if lcd has drawn first frame
  240 D1:A9CE -  -  -  -  
  241 D1:A9CE CD 95 B9 D1 	call check_for_decompress_calls
  242 D1:A9D2 -  -  -  -  	;Sprite decompression will occur here
  243 D1:A9D2 CD 05 B9 D1 	call continue_decompressions
  244 D1:A9D6 -  -  -  -  	
  245 D1:A9D6 -  -  -  -  	;TEsting
  246 D1:A9D6 21 00 00 00 	ld hl,0
  247 D1:A9DA 3A 00 00 F2 	ld a,($F20000);32768hz
  248 D1:A9DE 6F -  -  -  	ld l,a
  249 D1:A9DF 3A 01 00 F2 	ld a,($F20001);128hz 
  250 D1:A9E3 67 -  -  -  	ld h,a
  251 D1:A9E4 CB 3C -  -  	srl h ;div by 4
  252 D1:A9E6 CB 1D -  -  	rr l 
  253 D1:A9E8 CB 3C -  -  	srl h
  254 D1:A9EA CB 1D -  -  	rr l 
  255 D1:A9EC CB 3C -  -  	srl h
  256 D1:A9EE CB 1D -  -  	rr l 
  257 D1:A9F0 7D -  -  -  	ld a,l
  258 D1:A9F1 32 DE AB D1 	ld (decompress_time),a
  259 D1:A9F5 -  -  -  -  
  260 D1:A9F5 -  -  -  -  
  261 D1:A9F5 -  -  -  -  	
  262 D1:A9F5 -  -  -  -  
  263 D1:A9F5 -  -  -  -  	;Draw time bar at top of screen 
  264 D1:A9F5 2A D4 AB D1 	ld hl, (draw_buffer)
  265 D1:A9F9 01 00 00 00 	ld bc,0 
  266 D1:A9FD 3A DE AB D1 	ld a,(decompress_time)
  267 D1:AA01 4F -  -  -  	ld c,a 
  268 D1:AA02 3E 55 -  -  	ld a, $55
  269 D1:AA04 CD E0 10 02 	call _MemSet
  270 D1:AA08 -  -  -  -  	
  271 D1:AA08 2A D4 AB D1 	ld hl, (draw_buffer)
  272 D1:AA0C 01 00 00 00 	ld bc,0 
  273 D1:AA10 3A DD AB D1 	ld a,(draw_fg_time)
  274 D1:AA14 4F -  -  -  	ld c,a 
  275 D1:AA15 3E 44 -  -  	ld a, $44
  276 D1:AA17 CD E0 10 02 	call _MemSet
  277 D1:AA1B -  -  -  -  	
  278 D1:AA1B 2A D4 AB D1 	ld hl, (draw_buffer)
  279 D1:AA1F 01 00 00 00 	ld bc,0 
  280 D1:AA23 3A DC AB D1 	ld a,(draw_mg_time)
  281 D1:AA27 4F -  -  -  	ld c,a 
  282 D1:AA28 3E 33 -  -  	ld a, $33
  283 D1:AA2A CD E0 10 02 	call _MemSet
  284 D1:AA2E -  -  -  -  
  285 D1:AA2E 2A D4 AB D1 	ld hl, (draw_buffer)
  286 D1:AA32 01 00 00 00 	ld bc,0 
  287 D1:AA36 3A DB AB D1 	ld a,(draw_bg_time)
  288 D1:AA3A 4F -  -  -  	ld c,a 
  289 D1:AA3B 3E 22 -  -  	ld a, $22
  290 D1:AA3D CD E0 10 02 	call _MemSet
  291 D1:AA41 -  -  -  -  	
  292 D1:AA41 -  -  -  -  	
  293 D1:AA41 -  -  -  -  	
  294 D1:AA41 2A D4 AB D1 	ld hl, (draw_buffer)
  295 D1:AA45 01 88 00 00 	ld bc, 136  ; =1000/4 /2 for 2pix/bit 
  296 D1:AA49 09 -  -  -  	add hl,bc 
  297 D1:AA4A 3E 55 -  -  	ld a,$55
  298 D1:AA4C 77 -  -  -  	ld (hl),a 
  299 D1:AA4D -  -  -  -  	
  300 D1:AA4D -  -  -  -  	
  301 D1:AA4D -  -  -  -  	;Again for thick line
  302 D1:AA4D -  -  -  -  	
  303 D1:AA4D 2A D4 AB D1 	ld hl, (draw_buffer)
  304 D1:AA51 01 A0 00 00 	ld bc,160
  305 D1:AA55 09 -  -  -  	add hl,bc 
  306 D1:AA56 3A DE AB D1 	ld a,(decompress_time)
  307 D1:AA5A 4F -  -  -  	ld c,a 
  308 D1:AA5B 3E 55 -  -  	ld a, $55
  309 D1:AA5D CD E0 10 02 	call _MemSet
  310 D1:AA61 -  -  -  -  	
  311 D1:AA61 2A D4 AB D1 	ld hl, (draw_buffer)
  312 D1:AA65 01 A0 00 00 	ld bc,160
  313 D1:AA69 09 -  -  -  	add hl,bc 
  314 D1:AA6A 3A DD AB D1 	ld a,(draw_fg_time)
  315 D1:AA6E 4F -  -  -  	ld c,a 
  316 D1:AA6F 3E 44 -  -  	ld a, $44
  317 D1:AA71 CD E0 10 02 	call _MemSet
  318 D1:AA75 -  -  -  -  	
  319 D1:AA75 2A D4 AB D1 	ld hl, (draw_buffer)
  320 D1:AA79 01 A0 00 00 	ld bc,160
  321 D1:AA7D 09 -  -  -  	add hl,bc
  322 D1:AA7E 3A DC AB D1 	ld a,(draw_mg_time)
  323 D1:AA82 4F -  -  -  	ld c,a 
  324 D1:AA83 3E 33 -  -  	ld a, $33
  325 D1:AA85 CD E0 10 02 	call _MemSet
  326 D1:AA89 -  -  -  -  
  327 D1:AA89 2A D4 AB D1 	ld hl, (draw_buffer)
  328 D1:AA8D 01 A0 00 00 	ld bc,160
  329 D1:AA91 09 -  -  -  	add hl,bc
  330 D1:AA92 3A DB AB D1 	ld a,(draw_bg_time)
  331 D1:AA96 4F -  -  -  	ld c,a 
  332 D1:AA97 3E 22 -  -  	ld a, $22
  333 D1:AA99 CD E0 10 02 	call _MemSet
  334 D1:AA9D -  -  -  -  	
  335 D1:AA9D 2A D4 AB D1 	ld hl, (draw_buffer)
  336 D1:AAA1 01 28 01 00 	ld bc,296
  337 D1:AAA5 09 -  -  -  	add hl,bc 
  338 D1:AAA6 3E 55 -  -  	ld a,$55
  339 D1:AAA8 77 -  -  -  	ld (hl),a 
  340 D1:AAA9 -  -  -  -  	
  341 D1:AAA9 -  -  -  -  	
  342 D1:AAA9 -  -  -  -  
  343 D1:AAA9 -  -  -  -  
  344 D1:AAA9 -  -  -  -  	
  345 D1:AAA9 -  -  -  -  
  346 D1:AAA9 -  -  -  -  	;swap draw buffers
  347 D1:AAA9 2A 10 00 E3 	ld hl,(mpLcdBase)
  348 D1:AAAD ED 5B D4 AB 
              D1 -  -  -  	ld de,(draw_buffer)
  349 D1:AAB2 ED 53 10 00 
              E3 -  -  -  	ld (mpLcdBase),de
  350 D1:AAB7 22 D4 AB D1 	ld (draw_buffer),hl
  351 D1:AABB -  -  -  -  
  352 D1:AABB -  -  -  -  
  353 D1:AABB -  -  -  -  	;wait until finished drawing second frame
  354 D1:AABB -  -  -  -  	;Need to check clock here, there wont always be decompression to wait for
  355 D1:AABB -  -  -  -  main_clock_check_loop:
  356 D1:AABB 3A 01 00 F2 	ld a,($F20001);128hz clock
  357 D1:AABF FE 03 -  -  	cp %00000011 ;check if reached 3 
  358 D1:AAC1 DA BB AA D1 	jp c,main_clock_check_loop ;msb <= 2, can continue  
  359 D1:AAC5 3A 00 00 F2 	ld a,($F20000);32768hz clock
  360 D1:AAC9 FE E8 -  -  	cp %11101000;check if reached value 
  361 D1:AACB DA BB AA D1 	jp c,main_clock_check_loop ;msb = 3 and lsb < value, can continue
  362 D1:AACF -  -  -  -  	
  363 D1:AACF -  -  -  -  
  364 D1:AACF -  -  -  -  
  365 D1:AACF -  -  -  -  clear_int:      
  366 D1:AACF 21 28 00 E3     ld hl, mpLcdIcr
  367 D1:AAD3 CB D6 -  -      set 2, (hl)            ; clear interrupt
  368 D1:AAD5 21 20 00 E3     ld hl, mpLcdRis
  369 D1:AAD9 -  -  -  -  wait_int:
  370 D1:AAD9 CB 56 -  -      bit 2, (hl)
  371 D1:AADB 28 FC -  -      jr z, wait_int  
  372 D1:AADD -  -  -  -  
  373 D1:AADD -  -  -  -  
  374 D1:AADD 21 00 00 00 	ld hl,0
  375 D1:AAE1 -  -  -  -  	
  376 D1:AAE1 3A 02 00 F2 	ld a,($F20002)
  377 D1:AAE5 67 -  -  -  	ld h,a
  378 D1:AAE6 3A 01 00 F2 	ld a,($F20001)
  379 D1:AAEA 6F -  -  -  	ld l,a
  380 D1:AAEB ED 4B E5 AB 
              D1 -  -  -  	ld bc,(totalTime)
  381 D1:AAF0 09 -  -  -  	add hl,bc 
  382 D1:AAF1 22 E5 AB D1 	ld (totalTime),hl 
  383 D1:AAF5 -  -  -  -  	
  384 D1:AAF5 -  -  -  -  	
  385 D1:AAF5 -  -  -  -  	
  386 D1:AAF5 -  -  -  -  	
  387 D1:AAF5 -  -  -  -  
  388 D1:AAF5 -  -  -  -  	
  389 D1:AAF5 -  -  -  -  
  390 D1:AAF5 C2 09 A9 D1 	jp nz,main_loop
  391 D1:AAF9 -  -  -  -  		
  392 D1:AAF9 -  -  -  -  	;print debug times 
  393 D1:AAF9 21 00 00 D4 	ld hl,vRam
  394 D1:AAFD 22 10 00 E3 	ld (mpLcdBase),hl
  395 D1:AB01 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  396 D1:AB05 3E 2D -  -  	ld	a,lcdBpp16
  397 D1:AB07 32 18 00 E3 	ld (mpLcdCtrl),a
  398 D1:AB0B -  -  -  -  	
  399 D1:AB0B 3E 00 -  -  	ld a,0
  400 D1:AB0D 32 95 05 D0 	ld (curRow),a
  401 D1:AB11 32 96 05 D0 	ld (curCol),a
  402 D1:AB15 2A DF AB D1 	ld hl,(longestFrame)
  403 D1:AB19 CD E0 1E 02 	call _DispHL
  404 D1:AB1D 3E 01 -  -  	ld a,1
  405 D1:AB1F 32 95 05 D0 	ld (curRow),a
  406 D1:AB23 3E 00 -  -  	ld a,0
  407 D1:AB25 32 96 05 D0 	ld (curCol),a
  408 D1:AB29 2A E2 AB D1 	ld hl,(longestFramePos)
  409 D1:AB2D CD E0 1E 02 	call _DispHL
  410 D1:AB31 3E 02 -  -  	ld a,2
  411 D1:AB33 32 95 05 D0 	ld (curRow),a
  412 D1:AB37 3E 00 -  -  	ld a,0
  413 D1:AB39 32 96 05 D0 	ld (curCol),a
  414 D1:AB3D 2A E5 AB D1 	ld hl,(totalTime)
  415 D1:AB41 CD E0 1E 02 	call _DispHL
  416 D1:AB45 3E 03 -  -  	ld a,3
  417 D1:AB47 32 95 05 D0 	ld (curRow),a
  418 D1:AB4B 3E 00 -  -  	ld a,0
  419 D1:AB4D 32 96 05 D0 	ld (curCol),a
  420 D1:AB51 2A E8 AB D1 	ld hl,(frameCount)
  421 D1:AB55 CD E0 1E 02 	call _DispHL
  422 D1:AB59 -  -  -  -  	
  423 D1:AB59 CD BD AB D1 	call prgmpause
  424 D1:AB5D CD BD AB D1 	call prgmpause
  425 D1:AB61 -  -  -  -  	
  426 D1:AB61 -  -  -  -  	
  427 D1:AB61 -  -  -  -  exit_prgm:
  428 D1:AB61 21 00 00 D4 	ld hl,vRam
  429 D1:AB65 22 10 00 E3 	ld (mpLcdBase),hl
  430 D1:AB69 CD 10 08 02 	call _ClrScrnFull
  431 D1:AB6D 3E 2D -  -  	ld	a,lcdBpp16
  432 D1:AB6F 32 18 00 E3 	ld	(mpLcdCtrl),a
  433 D1:AB73 CD 3C 1A 02 	call _DrawStatusBar
  434 D1:AB77 -  -  -  -  	
  435 D1:AB77 FB -  -  -  	ei				; reset screen back to normal
  436 D1:AB78 C9 -  -  -  	ret			; return to os
  437 D1:AB79 -  -  -  -  
  438 D1:AB79 -  -  -  -  
  439 D1:AB79 -  -  -  -  printHL:;=================REMOVE
  440 D1:AB79 E5 -  -  -  	push hl
  441 D1:AB7A 21 00 00 D4 	ld hl,vRam
  442 D1:AB7E 22 10 00 E3 	ld (mpLcdBase),hl
  443 D1:AB82 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  444 D1:AB86 3E 2D -  -  	ld	a,lcdBpp16
  445 D1:AB88 32 18 00 E3 	ld (mpLcdCtrl),a
  446 D1:AB8C E1 -  -  -  	pop hl
  447 D1:AB8D CD E0 1E 02 	call _DispHL
  448 D1:AB91 FB -  -  -  	ei
  449 D1:AB92 CD 8C 0D 02 	call _GetKey
  450 D1:AB96 F3 -  -  -  	di
  451 D1:AB97 C3 61 AB D1 	jp exit_prgm
  452 D1:AB9B -  -  -  -  
  453 D1:AB9B -  -  -  -  
  454 D1:AB9B -  -  -  -  write_a_to_ram:
  455 D1:AB9B F5 -  -  -  	push af 
  456 D1:AB9C E5 -  -  -  	push hl 
  457 D1:AB9D -  -  -  -  write_a_to_ram_addr .equ $ + 1 
  458 D1:AB9D 21 00 60 D4 	ld hl, $d46000
  459 D1:ABA1 77 -  -  -  	ld (hl),a 
  460 D1:ABA2 23 -  -  -  	inc hl 
  461 D1:ABA3 22 9E AB D1 	ld (write_a_to_ram_addr),hl 
  462 D1:ABA7 E1 -  -  -  	pop hl 
  463 D1:ABA8 F1 -  -  -  	pop af 
  464 D1:ABA9 C9 -  -  -  	ret 
  465 D1:ABAA -  -  -  -  	
  466 D1:ABAA -  -  -  -  write_hl_to_ram:
  467 D1:ABAA E5 -  -  -  	push hl 
  468 D1:ABAB D5 -  -  -  	push de 
  469 D1:ABAC EB -  -  -  	ex de,hl
  470 D1:ABAD 2A 9E AB D1 	ld hl,(write_a_to_ram_addr)
  471 D1:ABB1 ED 1F -  -  	ld (hl),de 
  472 D1:ABB3 23 -  -  -  	inc hl
  473 D1:ABB4 23 -  -  -  	inc hl
  474 D1:ABB5 23 -  -  -  	inc hl
  475 D1:ABB6 22 9E AB D1 	ld (write_a_to_ram_addr),hl
  476 D1:ABBA D1 -  -  -  	pop de 
  477 D1:ABBB E1 -  -  -  	pop hl
  478 D1:ABBC C9 -  -  -  	ret 
  479 D1:ABBD -  -  -  -  
  480 D1:ABBD -  -  -  -  prgmpause: ;for testing, interrupts code until key pressed. will destroy af register
  481 D1:ABBD F5 -  -  -  	push af
  482 D1:ABBE D5 -  -  -  	push de 
  483 D1:ABBF E5 -  -  -  	push hl 
  484 D1:ABC0 08 -  -  -  	ex af,af';'
  485 D1:ABC1 F5 -  -  -  	push af 
  486 D1:ABC2 FB -  -  -  	ei
  487 D1:ABC3 CD 8C 0D 02 	call _GetKey
  488 D1:ABC7 F3 -  -  -  	di
  489 D1:ABC8 F1 -  -  -  	pop af 
  490 D1:ABC9 08 -  -  -  	ex af,af';'
  491 D1:ABCA E1 -  -  -  	pop hl 
  492 D1:ABCB D1 -  -  -  	pop de 
  493 D1:ABCC F1 -  -  -  	pop af
  494 D1:ABCD C9 -  -  -  	ret
  495 D1:ABCE -  -  -  -  
  496 D1:ABCE -  -  -  -  cam_pos:;y position of lowest visible line in fg layer
  497 D1:ABCE 00 00 00 -  	.dl 0
  498 D1:ABD1 -  -  -  -  bg_cam_pos: ;y position of lowest visible line in bg layer (= cam pos / 8)
  499 D1:ABD1 00 00 00 -  	.dl 0
  500 D1:ABD4 -  -  -  -  
  501 D1:ABD4 -  -  -  -  
  502 D1:ABD4 -  -  -  -  draw_buffer:;where new frame is drawn before lcd pointer is swapped 
  503 D1:ABD4 00 2C D5 -  	.dl $d52c00
  504 D1:ABD7 -  -  -  -  	
  505 D1:ABD7 -  -  -  -  BG_draw_buffer: ;Address of the uppermost line of the background buffer. This is where new lines of bg are drawn to 
  506 D1:ABD7 00 00 00 -  	.dl 0
  507 D1:ABDA -  -  -  -  BG_buffer .equ vram + (160*240) ;Start of BG buffer 
  508 D1:ABDA -  -  -  -  
  509 D1:ABDA -  -  -  -  
  510 D1:ABDA -  -  -  -  ;d40000 = Decompressed sprite data
  511 D1:ABDA -  -  -  -  ;d49600 = BG buffer
  512 D1:ABDA -  -  -  -  ;d52c00 = Frame draw buffer 1 
  513 D1:ABDA -  -  -  -  ;d5c200 = frame draw buffer 2
  514 D1:ABDA -  -  -  -  
  515 D1:ABDA -  -  -  -  ;pixelShadow .equ $D031F6 
  516 D1:ABDA -  -  -  -  
  517 D1:ABDA -  -  -  -  move_bg_time:
  518 D1:ABDA 00 -  -  -  	.db 0
  519 D1:ABDB -  -  -  -  draw_bg_time:
  520 D1:ABDB 00 -  -  -  	.db 0
  521 D1:ABDC -  -  -  -  draw_mg_time:
  522 D1:ABDC 00 -  -  -  	.db 0
  523 D1:ABDD -  -  -  -  draw_fg_time:
  524 D1:ABDD 00 -  -  -  	.db 0
  525 D1:ABDE -  -  -  -  decompress_time:
  526 D1:ABDE 00 -  -  -  	.db 0
  527 D1:ABDF -  -  -  -  
  528 D1:ABDF -  -  -  -  
  529 D1:ABDF -  -  -  -  longestFrame:
  530 D1:ABDF 00 00 00 -  	.dl 0
  531 D1:ABE2 -  -  -  -  longestFramePos:
  532 D1:ABE2 00 00 00 -  	.dl 0
  533 D1:ABE5 -  -  -  -  totalTime:
  534 D1:ABE5 00 00 00 -  	.dl 0
  535 D1:ABE8 -  -  -  -  frameCount:
  536 D1:ABE8 00 00 00 -  	.dl 0
  537 D1:ABEB -  -  -  -  hasLagged:
  538 D1:ABEB 00 00 00 -  	.dl 0
  539 D1:ABEE -  -  -  -  
  540 D1:ABEE -  -  -  -  sd_test_a:
  541 D1:ABEE 00 00 00 -  	.dl 0 
  542 D1:ABF1 -  -  -  -  
  543 D1:ABF1 -  -  -  -  
  544 D1:ABF1 -  -  -  -  
  545 D1:ABF1 -  -  -  -  #include "timeTesting.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\timeTesting.txt"
    1 D1:ABF1 -  -  -  -  
    2 D1:ABF1 -  -  -  -  
    3 D1:ABF1 -  -  -  -  
    4 D1:ABF1 -  -  -  -  time_test_start:
    5 D1:ABF1 -  -  -  -  
    6 D1:ABF1 -  -  -  -  		; 76543210	
    7 D1:ABF1 3E 03 -  -  	ld a,%00000011;enable, 32768hz
    8 D1:ABF3 32 30 00 F2 	ld ($F20030),a
    9 D1:ABF7 -  -  -  -  	;	  fedcba98
   10 D1:ABF7 3E 02 -  -  	ld a,%00000010;count up
   11 D1:ABF9 32 31 00 F2 	ld ($F20031),a
   12 D1:ABFD 3E 00 -  -  	ld a,0
   13 D1:ABFF 32 00 00 F2 	ld ($F20000),a
   14 D1:AC03 32 01 00 F2 	ld ($F20001),a
   15 D1:AC07 32 02 00 F2 	ld ($F20002),a
   16 D1:AC0B 32 03 00 F2 	ld ($F20003),a
   17 D1:AC0F -  -  -  -  	
   18 D1:AC0F 21 2C 01 00 	ld hl,300
   19 D1:AC13 -  -  -  -  	
   20 D1:AC13 -  -  -  -  time_testing_loop:
   21 D1:AC13 E5 -  -  -  	push hl
   22 D1:AC14 01 E8 03 00 	ld bc,1000
   23 D1:AC18 -  -  -  -  time_testing_loop_2:
   24 D1:AC18 C5 -  -  -  	push bc
   25 D1:AC19 -  -  -  -  	;instruction here
   26 D1:AC19 -  -  -  -  	
   27 D1:AC19 -  -  -  -  	
   28 D1:AC19 -  -  -  -  	;Instruction end
   29 D1:AC19 C1 -  -  -  	pop bc
   30 D1:AC1A 0B -  -  -  	dec bc
   31 D1:AC1B 79 -  -  -  	ld a,c
   32 D1:AC1C B0 -  -  -  	or b
   33 D1:AC1D C2 18 AC D1 	jp nz,time_testing_loop_2
   34 D1:AC21 E1 -  -  -  	pop hl
   35 D1:AC22 2B -  -  -  	dec hl
   36 D1:AC23 7D -  -  -  	ld a,l
   37 D1:AC24 B4 -  -  -  	or h
   38 D1:AC25 C2 13 AC D1 	jp nz,time_testing_loop
   39 D1:AC29 -  -  -  -  	
   40 D1:AC29 3A 01 00 F2 	ld a,($F20001);128hz
   41 D1:AC2D 6F -  -  -  	ld l,a
   42 D1:AC2E 3A 02 00 F2 	ld a,($F20002);0.5hz
   43 D1:AC32 67 -  -  -  	ld h,a
   44 D1:AC33 C3 79 AB D1 	jp printHL;div by 128 for time
   45 D1:AC37 -  -  -  -  	
   46 D1:AC37 -  -  -  -  
   47 D1:AC37 -  -  -  -  ;60fps = .0166sec/f	
   48 D1:AC37 -  -  -  -  
   49 D1:AC37 -  -  -  -  ;1000 ldir in vram of 160*240 bytes
   50 D1:AC37 -  -  -  -  ;6.8sec, .0068 sec/instruction   0.4 of a frame
   51 D1:AC37 -  -  -  -  
   52 D1:AC37 -  -  -  -  
   53 D1:AC37 -  -  -  -  ;10,000 draw 1 bg line very complex 
   54 D1:AC37 -  -  -  -  ;9 sec  .07 of frame/instruction
   55 D1:AC37 -  -  -  -  
   56 D1:AC37 -  -  -  -  ;300k draw slow sprite 12*5 px complex
   57 D1:AC37 -  -  -  -  ;16.4RT, 14.8CLK
   58 D1:AC37 -  -  -  -  ;.00328 frames/sprite, 4.19 frames / screen
   59 D1:AC37 -  -  -  -  ;.24 screens/frame
   60 D1:AC37 -  -  -  -  
   61 D1:AC37 -  -  -  -  
   62 D1:AC37 -  -  -  -  ;300k slow sprite best case 12*5px
   63 D1:AC37 -  -  -  -  ;8.75RT 7.6clk
   64 D1:AC37 -  -  -  -  ;.00175 frames/spr 2.24 frames/screen
   65 D1:AC37 -  -  -  -  ;.446 screens/frame
   66 D1:AC37 -  -  -  -  
   67 D1:AC37 -  -  -  -  
   68 D1:AC37 -  -  -  -  
   69 D1:AC37 -  -  -  -  ;1,000,000 fast fg sprite 20*4 px
   70 D1:AC37 -  -  -  -  ;22.15RT,20.35clk
   71 D1:AC37 -  -  -  -  ;.00133 frames/spr 1.275 frames/screen
   72 D1:AC37 -  -  -  -  ;.78 screens/frame
   73 D1:AC37 -  -  -  -  
   74 D1:AC37 -  -  -  -  
   75 D1:AC37 -  -  -  -  ;for 60% of screen with fg sprites in 1 frame
   76 D1:AC37 -  -  -  -  ;.6 = .78*fast + .44*(1-fast)
   77 D1:AC37 -  -  -  -  ;.47 = FAST
   78 D1:AC37 -  -  -  -  
   79 D1:AC37 -  -  -  -  ;50% fast sprites, 50% slow sprites
   80 D1:AC37 -  -  -  -  
   81 D1:AC37 -  -  -  -  
   82 D1:AC37 -  -  -  -  
   83 D1:AC37 -  -  -  -  
   84 D1:AC37 -  -  -  -  
   85 D1:AC37 -  -  -  -  
   86 D1:AC37 -  -  -  -  
   87 D1:AC37 -  -  -  -  
   88 D1:AC37 -  -  -  -  
Listing for file "ascent.asm"
  546 D1:AC37 -  -  -  -  #include "drawBGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawBGSprite.txt"
    1 D1:AC37 -  -  -  -  
    2 D1:AC37 -  -  -  -  
    3 D1:AC37 -  -  -  -  BGMaxSpriteHeight .equ 120
    4 D1:AC37 -  -  -  -  
    5 D1:AC37 -  -  -  -  
    6 D1:AC37 -  -  -  -  draw_bg:; function for drawing background buffer to the draw buffer, clearing the frame for fg sprites to be drawn over 
    7 D1:AC37 CD 6B AC D1 	call move_bg
    8 D1:AC3B 21 00 2C D5 	ld hl,$d52c00;BG_buffer_end
    9 D1:AC3F ED 4B D7 AB 
              D1 -  -  -  	ld bc,(BG_draw_buffer)
   10 D1:AC44 37 -  -  -  	scf 
   11 D1:AC45 3F -  -  -  	ccf 
   12 D1:AC46 ED 42 -  -  	sbc hl,bc ;get number of bytes from the loop point in the buffer to end of the buffer 
   13 D1:AC48 E5 -  -  -  	push hl 
   14 D1:AC49 C1 -  -  -  	pop bc	;put into bc for ldir 
   15 D1:AC4A 2A D7 AB D1 	ld hl,(BG_draw_buffer)
   16 D1:AC4E ED 5B D4 AB 
              D1 -  -  -  	ld de,(draw_buffer)
   17 D1:AC53 ED B0 -  -  	ldir
   18 D1:AC55 2A D7 AB D1 	ld hl,(BG_draw_buffer) ;loop point in buffer
   19 D1:AC59 01 00 96 D4 	ld bc,BG_buffer ;start of buffer
   20 D1:AC5D 37 -  -  -  	scf 
   21 D1:AC5E 3F -  -  -  	ccf 
   22 D1:AC5F ED 42 -  -  	sbc hl,bc ;number of bytes from start to loop point 
   23 D1:AC61 C8 -  -  -  	ret z ;if bg buffer line is at top of buffer, no second ldir
   24 D1:AC62 E5 -  -  -  	push hl 
   25 D1:AC63 C1 -  -  -  	pop bc
   26 D1:AC64 21 00 96 D4 	ld hl,BG_buffer 
   27 D1:AC68 ED B0 -  -  	ldir 
   28 D1:AC6A C9 -  -  -  	ret 
   29 D1:AC6B -  -  -  -  	
   30 D1:AC6B -  -  -  -  	
   31 D1:AC6B -  -  -  -  ;function for moving the backgrond buffer. checks if camera has moved since the buffer was last updated.
   32 D1:AC6B -  -  -  -  ;if so will draw new lines of the bg buffer to move it up or down until it is in the correct position
   33 D1:AC6B -  -  -  -  move_bg:
   34 D1:AC6B 2A CE AB D1 	ld hl,(cam_pos);load cam pos 
   35 D1:AC6F -  -  -  -  	;call write_hl_to_ram
   36 D1:AC6F CB 3C -  -  	srl h
   37 D1:AC71 CB 1D -  -  	rr l
   38 D1:AC73 CB 3C -  -  	srl h
   39 D1:AC75 CB 1D -  -  	rr l
   40 D1:AC77 CB 3C -  -  	srl h
   41 D1:AC79 CB 1D -  -  	rr l	;div by 8 to get location of BG layer
   42 D1:AC7B -  -  -  -  	;hl holds bg cam pos, lowest visible line of bg layer 
   43 D1:AC7B ED 4B D1 AB 
              D1 -  -  -  	ld bc,(bg_cam_pos);previous BG cam location 
   44 D1:AC80 37 -  -  -  	scf
   45 D1:AC81 3F -  -  -  	ccf
   46 D1:AC82 ED 42 -  -  	sbc hl,bc ;compare to the updated location
   47 D1:AC84 C8 -  -  -  	ret z ;if 0, the bg buffer does not need to be moved 
   48 D1:AC85 DA 91 AC D1 	jp c,move_bg_down ;if previous cam pos id above current pos, screen has moved down, go to move bg down 1 line
   49 D1:AC89 CD E0 AC D1 	call inc_bg ;otherwise, screen has moved up, need to move bg up 1 line
   50 D1:AC8D C3 6B AC D1 	jp move_bg ;repeat until bg is in correct pos
   51 D1:AC91 -  -  -  -  move_bg_down:
   52 D1:AC91 CD 99 AC D1 	call dec_bg
   53 D1:AC95 C3 6B AC D1 	jp move_bg ;repeat until bg is in correct pos
   54 D1:AC99 -  -  -  -  
   55 D1:AC99 -  -  -  -  
   56 D1:AC99 -  -  -  -  dec_bg:;move bg cam down 1px 
   57 D1:AC99 -  -  -  -  
   58 D1:AC99 -  -  -  -  	
   59 D1:AC99 -  -  -  -  	;Testibng
   60 D1:AC99 -  -  -  -  	;ld a,$AD
   61 D1:AC99 -  -  -  -  	;call write_a_to_ram
   62 D1:AC99 -  -  -  -  	
   63 D1:AC99 -  -  -  -  
   64 D1:AC99 -  -  -  -  	;write on draw buffer line 
   65 D1:AC99 2A D7 AB D1 	ld hl,(BG_draw_buffer) ;topmost line of bg buffer will be overwritten with new bottom line 
   66 D1:AC9D 22 EC AD D1 	ld (dbgl_vram_line_start),hl 
   67 D1:ACA1 -  -  -  -  	
   68 D1:ACA1 2A D1 AB D1 	ld hl,(bg_cam_pos)
   69 D1:ACA5 2B -  -  -  	dec hl ;dec bg cam pos by 1 
   70 D1:ACA6 22 D1 AB D1 	ld (bg_cam_pos),hl 
   71 D1:ACAA -  -  -  -  	
   72 D1:ACAA 01 00 00 00 	ld bc,0 ;clear bc reg
   73 D1:ACAE 4C -  -  -  	ld c,h;bottom y value msb 
   74 D1:ACAF 7D -  -  -  	ld a,l ;bottom y value lsb 
   75 D1:ACB0 21 2F BC D1 	ld hl,BG_Data_frame_table
   76 D1:ACB4 0C -  -  -  	inc c 
   77 D1:ACB5 09 -  -  -  	add hl,bc 
   78 D1:ACB6 09 -  -  -  	add hl,bc 
   79 D1:ACB7 09 -  -  -  	add hl,bc ;add 3*frame number to get to correct frame pointer
   80 D1:ACB8 ED 27 -  -  	ld hl,(hl) ;hl now points to bg frame data 
   81 D1:ACBA CD 7E AD D1 	call draw_bg_line
   82 D1:ACBE -  -  -  -  	
   83 D1:ACBE -  -  -  -  
   84 D1:ACBE -  -  -  -  	;move buffer pos
   85 D1:ACBE 2A D7 AB D1 	ld hl,(BG_draw_buffer)
   86 D1:ACC2 01 60 2B D5 	ld bc,$d52b60;BG_buffer_end, start of last line of vram buffer 
   87 D1:ACC6 37 -  -  -  	scf 
   88 D1:ACC7 3F -  -  -  	ccf 
   89 D1:ACC8 ED 42 -  -  	sbc hl,bc ;compare to current line 
   90 D1:ACCA 2A D7 AB D1 	ld hl,(BG_draw_buffer)
   91 D1:ACCE C2 D6 AC D1 	jp nz,dec_bg_bottom_skip
   92 D1:ACD2 21 60 95 D4 	ld hl,$d49560;1 row above top of bg buffer 
   93 D1:ACD6 -  -  -  -  dec_bg_bottom_skip:
   94 D1:ACD6 01 A0 00 00 	ld bc,160 
   95 D1:ACDA 09 -  -  -  	add hl,bc
   96 D1:ACDB 22 D7 AB D1 	ld (BG_draw_buffer),hl 
   97 D1:ACDF C9 -  -  -  	ret
   98 D1:ACE0 -  -  -  -  
   99 D1:ACE0 -  -  -  -  
  100 D1:ACE0 -  -  -  -  inc_bg:;move cam up 
  101 D1:ACE0 -  -  -  -  
  102 D1:ACE0 -  -  -  -  	
  103 D1:ACE0 -  -  -  -  	;Testibng
  104 D1:ACE0 -  -  -  -  	;ld a,$00
  105 D1:ACE0 -  -  -  -  	;call write_a_to_ram
  106 D1:ACE0 -  -  -  -  	;call prgmpause
  107 D1:ACE0 -  -  -  -  
  108 D1:ACE0 2A D7 AB D1 	ld hl,(BG_draw_buffer)
  109 D1:ACE4 01 00 96 D4 	ld bc,BG_buffer
  110 D1:ACE8 37 -  -  -  	scf 
  111 D1:ACE9 3F -  -  -  	ccf 
  112 D1:ACEA ED 42 -  -  	sbc hl,bc ;compare current drawing line to top of bg buffer 
  113 D1:ACEC 2A D7 AB D1 	ld hl,(BG_draw_buffer)
  114 D1:ACF0 C2 F8 AC D1 	jp nz,inc_bg_top_skip ;if they are not equal, continue
  115 D1:ACF4 21 00 2C D5 	ld hl,$d52c00;otherwise need to wrap back to bottom of buffer, set hl to 1 below bottom of bg buffer 
  116 D1:ACF8 -  -  -  -  inc_bg_top_skip:
  117 D1:ACF8 01 A0 00 00 	ld bc,160 
  118 D1:ACFC 37 -  -  -  	scf
  119 D1:ACFD 3F -  -  -  	ccf 
  120 D1:ACFE ED 42 -  -  	sbc hl,bc ;move up line, hl now points to line drawing location in vram 
  121 D1:AD00 22 D7 AB D1 	ld (BG_draw_buffer),hl 
  122 D1:AD04 22 EC AD D1 	ld (dbgl_vram_line_start),hl 
  123 D1:AD08 2A D1 AB D1 	ld hl,(bg_cam_pos)
  124 D1:AD0C 23 -  -  -  	inc hl 
  125 D1:AD0D 22 D1 AB D1 	ld (bg_cam_pos),hl ;incremnet cam pos 
  126 D1:AD11 -  -  -  -  	;call write_hl_to_ram
  127 D1:AD11 01 EF 00 00 	ld bc,239
  128 D1:AD15 09 -  -  -  	add hl,bc ;gets uppermost visible line y value in bg layer
  129 D1:AD16 4C -  -  -  	ld c,h;cam pos msb 
  130 D1:AD17 7D -  -  -  	ld a,l ;a holds line number in target frame 
  131 D1:AD18 21 2F BC D1 	ld hl,BG_Data_frame_table
  132 D1:AD1C 0C -  -  -  	inc c ;inc to get to upper frame 
  133 D1:AD1D 09 -  -  -  	add hl,bc 
  134 D1:AD1E 09 -  -  -  	add hl,bc 
  135 D1:AD1F 09 -  -  -  	add hl,bc 
  136 D1:AD20 ED 27 -  -  	ld hl,(hl)
  137 D1:AD22 CD 7E AD D1 	call draw_bg_line
  138 D1:AD26 C9 -  -  -  	ret
  139 D1:AD27 -  -  -  -  	
  140 D1:AD27 -  -  -  -  
  141 D1:AD27 -  -  -  -  
  142 D1:AD27 -  -  -  -  
  143 D1:AD27 -  -  -  -  
  144 D1:AD27 -  -  -  -  setup_bg: ;Draws entire BG buffer when loading game 
  145 D1:AD27 2A CE AB D1 	ld hl,(cam_pos)
  146 D1:AD2B CB 3C -  -  	srl h
  147 D1:AD2D CB 1D -  -  	rr l
  148 D1:AD2F CB 3C -  -  	srl h
  149 D1:AD31 CB 1D -  -  	rr l ;div by 4
  150 D1:AD33 -  -  -  -  	;hl holds bg cam pos 
  151 D1:AD33 22 D1 AB D1 	ld (bg_cam_pos),hl
  152 D1:AD37 -  -  -  -  	
  153 D1:AD37 01 EF 00 00 	ld bc,239
  154 D1:AD3B 09 -  -  -  	add hl,bc;hl holds y position of uppermost visible line in bg layer 
  155 D1:AD3C -  -  -  -  	
  156 D1:AD3C 23 -  -  -  	inc hl;to be dec in loop
  157 D1:AD3D E5 -  -  -  	push hl ;save uppermost line y val
  158 D1:AD3E 21 00 96 D4 	ld hl,BG_buffer ;start of bg drawing buffer 
  159 D1:AD42 22 D7 AB D1 	ld (BG_draw_buffer),hl ;set current bg line drawing location 
  160 D1:AD46 E5 -  -  -  	push hl 
  161 D1:AD47 -  -  -  -  	
  162 D1:AD47 3E F0 -  -  	ld a,240 ;num loops
  163 D1:AD49 32 71 AD D1 	ld (setup_bg_loop_count),a
  164 D1:AD4D -  -  -  -  setup_bg_loop:
  165 D1:AD4D -  -  -  -  
  166 D1:AD4D E1 -  -  -  	pop hl;vram draw pos, next line of bg drawn here 
  167 D1:AD4E 22 EC AD D1 	ld (dbgl_vram_line_start),hl ;set drawing pos 
  168 D1:AD52 01 A0 00 00 	ld bc,160
  169 D1:AD56 09 -  -  -  	add hl,bc 
  170 D1:AD57 EB -  -  -  	ex de,hl ;put next vram pos in de 
  171 D1:AD58 E1 -  -  -  	pop hl;uppermost line y val
  172 D1:AD59 2B -  -  -  	dec hl ;dec line y value (move to next lowest line)
  173 D1:AD5A E5 -  -  -  	push hl;push uppermost line y val
  174 D1:AD5B D5 -  -  -  	push de ;push vram pos 
  175 D1:AD5C 01 00 00 00 	ld bc,0
  176 D1:AD60 4C -  -  -  	ld c,h;cam pos msb 
  177 D1:AD61 7D -  -  -  	ld a,l ;a holds line number in current frame 
  178 D1:AD62 21 2F BC D1 	ld hl,BG_Data_frame_table
  179 D1:AD66 0C -  -  -  	inc c ;add 1 to get to upper frame
  180 D1:AD67 09 -  -  -  	add hl,bc 
  181 D1:AD68 09 -  -  -  	add hl,bc 
  182 D1:AD69 09 -  -  -  	add hl,bc 
  183 D1:AD6A ED 27 -  -  	ld hl,(hl) ;hl now points to upper frame data 
  184 D1:AD6C CD 7E AD D1 	call draw_bg_line ;hl pts to upper frame data, a = line num in target frame
  185 D1:AD70 -  -  -  -  	
  186 D1:AD70 -  -  -  -  setup_bg_loop_count .equ $ + 1
  187 D1:AD70 3E 00 -  -  	ld a,0
  188 D1:AD72 3D -  -  -  	dec a ;dec loop counter
  189 D1:AD73 32 71 AD D1 	ld (setup_bg_loop_count),a
  190 D1:AD77 C2 4D AD D1 	jp nz,setup_bg_loop 
  191 D1:AD7B E1 -  -  -  	pop hl ;pop vram pos 
  192 D1:AD7C E1 -  -  -  	pop hl ;pop current line number 
  193 D1:AD7D C9 -  -  -  	ret 
  194 D1:AD7E -  -  -  -  
  195 D1:AD7E -  -  -  -  
  196 D1:AD7E -  -  -  -  
  197 D1:AD7E -  -  -  -  
  198 D1:AD7E -  -  -  -  
  199 D1:AD7E -  -  -  -  
  200 D1:AD7E -  -  -  -  ;hl = upper data frame, a = line number in target frame
  201 D1:AD7E -  -  -  -  ;for drawing BG, only 1 line is drawn at a time.
  202 D1:AD7E -  -  -  -  ;therefore only check sprites in the above frame that may extend downwards, 
  203 D1:AD7E -  -  -  -  ;and the sprites in the target frame which contains the y position of the line being drawn
  204 D1:AD7E -  -  -  -  ;set dbgl_vram_line_start before calling 
  205 D1:AD7E -  -  -  -  draw_bg_line:
  206 D1:AD7E -  -  -  -  	
  207 D1:AD7E -  -  -  -  	
  208 D1:AD7E 32 CA AD D1 	ld (dbgl_line_num),a ;write line num to required positions 
  209 D1:AD82 32 D9 B5 D1 	ld (dfgs_cam_height_1), a ;Used to check if upper frame should be considered
  210 D1:AD86 ED 44 -  -  	neg 
  211 D1:AD88 32 B6 AD D1 	ld (dbgl_lines_to_top_of_target_frame),a 
  212 D1:AD8C -  -  -  -  	
  213 D1:AD8C E5 -  -  -  	push hl ;upper frame sprite table pointer 
  214 D1:AD8D 3E FF -  -  	ld a,$FF ;Set all of line to FF to clear it with color 16
  215 D1:AD8F 01 A0 00 00 	ld bc,160
  216 D1:AD93 2A EC AD D1 	ld hl,(dbgl_vram_line_start) ;Drawing address of line 
  217 D1:AD97 CD E0 10 02 	call _MemSet ;Clear all of line 
  218 D1:AD9B E1 -  -  -  	pop hl ;return upper frame ptr 
  219 D1:AD9C -  -  -  -  
  220 D1:AD9C -  -  -  -  	
  221 D1:AD9C 3E DA -  -  	ld a,%11011010;jp c
  222 D1:AD9E 32 0B B6 D1 	ld (dfgs_bg_mode_1),a 
  223 D1:ADA2 32 6F B6 D1 	ld (dfgs_bg_mode_2),a 
  224 D1:ADA6 -  -  -  -  	
  225 D1:ADA6 3E FF -  -  	ld a,255;
  226 D1:ADA8 32 08 B7 D1 	ld (dfgs_cam_height_3),a ;Will skip drawing of lower frame
  227 D1:ADAC 32 22 B7 D1 	ld (dfgs_cam_height_4),a
  228 D1:ADB0 -  -  -  -  	
  229 D1:ADB0 -  -  -  -  
  230 D1:ADB0 -  -  -  -  	
  231 D1:ADB0 CD C0 B5 D1 	call draw_fg_sprites
  232 D1:ADB4 -  -  -  -  	
  233 D1:ADB4 C9 -  -  -  	ret
  234 D1:ADB5 -  -  -  -  	
  235 D1:ADB5 -  -  -  -  
  236 D1:ADB5 -  -  -  -  
  237 D1:ADB5 -  -  -  -  	;a = y value of sprite in upper frame, hl pts to height
  238 D1:ADB5 -  -  -  -  dbgl_draw_upper_sprite:	
  239 D1:ADB5 -  -  -  -  
  240 D1:ADB5 -  -  -  -  	;push af 
  241 D1:ADB5 -  -  -  -  	;call write_a_to_ram
  242 D1:ADB5 -  -  -  -  	;ld a,(hl)
  243 D1:ADB5 -  -  -  -  	;call write_a_to_ram
  244 D1:ADB5 -  -  -  -  	;ld a,$BC
  245 D1:ADB5 -  -  -  -  	;call write_a_to_ram
  246 D1:ADB5 -  -  -  -  	;pop af
  247 D1:ADB5 -  -  -  -  	
  248 D1:ADB5 -  -  -  -  	;call write_hl_to_ram
  249 D1:ADB5 -  -  -  -  	
  250 D1:ADB5 -  -  -  -  	;call prgmpause
  251 D1:ADB5 -  -  -  -  
  252 D1:ADB5 -  -  -  -  dbgl_lines_to_top_of_target_frame .equ $ + 1
  253 D1:ADB5 C6 00 -  -  	add a,0 ;a holds line number in sprite to draw (0 indexed)
  254 D1:ADB7 -  -  -  -  	;call write_a_to_ram
  255 D1:ADB7 DA C5 AD D1 	jp c,dbgl_upper_skip_sprite ; if line to draw >255, skip (happens if sprite has large y val)
  256 D1:ADBB BE -  -  -  	cp (hl) ;compare to sprite height 
  257 D1:ADBC D2 C5 AD D1 	jp nc, dbgl_upper_skip_sprite; Skip drawing, sprite does not extend to target line 
  258 D1:ADC0 -  -  -  -  	;Sprite is to be drawn, a holds line number 
  259 D1:ADC0 CD DD AD D1 	call dbgl_setup_and_draw ;draw sprite line 
  260 D1:ADC4 -  -  -  -  	;hl pts to next sprite y
  261 D1:ADC4 C9 -  -  -  	ret
  262 D1:ADC5 -  -  -  -  	
  263 D1:ADC5 -  -  -  -  dbgl_upper_skip_sprite:
  264 D1:ADC5 23 -  -  -  	inc hl ;to x 
  265 D1:ADC6 23 -  -  -  	inc hl ;to index 
  266 D1:ADC7 23 -  -  -  	inc hl ;to next y
  267 D1:ADC8 C9 -  -  -  	ret
  268 D1:ADC9 -  -  -  -  	
  269 D1:ADC9 -  -  -  -  
  270 D1:ADC9 -  -  -  -  	;a holds y in frame, (hl) = height
  271 D1:ADC9 -  -  -  -  dbgl_draw_lower_sprite:
  272 D1:ADC9 -  -  -  -  	
  273 D1:ADC9 -  -  -  -  	;call write_a_to_ram
  274 D1:ADC9 -  -  -  -  	;call prgmpause
  275 D1:ADC9 -  -  -  -  	;call write_hl_to_ram
  276 D1:ADC9 -  -  -  -  	
  277 D1:ADC9 -  -  -  -  	;call prgmpause
  278 D1:ADC9 -  -  -  -  	
  279 D1:ADC9 -  -  -  -  dbgl_line_num .equ $ + 1
  280 D1:ADC9 D6 00 -  -  	sub 0;subtract line num 
  281 D1:ADCB DA D9 AD D1 	jp c, dbgl_lower_skip_sprite ;if carry, line number was above sprite y pos 
  282 D1:ADCF -  -  -  -  	;if a is 0, we draw first line of sprite, if a is 1, draw second... a holds line num of sprite to draw (0 indexed) 
  283 D1:ADCF BE -  -  -  	cp (hl) ;compare to sprite height
  284 D1:ADD0 D2 D9 AD D1 	jp nc, dbgl_lower_skip_sprite; Skip drawing, sprite does not extend to target line 
  285 D1:ADD4 -  -  -  -  	
  286 D1:ADD4 -  -  -  -  	;Sprite is to be drawn, a holds line number 
  287 D1:ADD4 CD DD AD D1 	call dbgl_setup_and_draw ;draw sprite line 
  288 D1:ADD8 -  -  -  -  	;hl pts to next y
  289 D1:ADD8 C9 -  -  -  	ret
  290 D1:ADD9 -  -  -  -  	
  291 D1:ADD9 -  -  -  -  dbgl_lower_skip_sprite:
  292 D1:ADD9 -  -  -  -  
  293 D1:ADD9 -  -  -  -  	;ld a,$AA 
  294 D1:ADD9 -  -  -  -  	;call write_a_to_ram
  295 D1:ADD9 -  -  -  -  	;call prgmpause
  296 D1:ADD9 -  -  -  -  	
  297 D1:ADD9 23 -  -  -  	inc hl ;to x 
  298 D1:ADDA 23 -  -  -  	inc hl ;to index 
  299 D1:ADDB 23 -  -  -  	inc hl ;to y
  300 D1:ADDC C9 -  -  -  	ret
  301 D1:ADDD -  -  -  -  
  302 D1:ADDD -  -  -  -  
  303 D1:ADDD -  -  -  -  
  304 D1:ADDD -  -  -  -  
  305 D1:ADDD -  -  -  -  ;a holds 0 indexed line num of sprite, (hl) = height ,bc,de = 0
  306 D1:ADDD -  -  -  -  ;returns hl holds next y val
  307 D1:ADDD -  -  -  -  dbgl_setup_and_draw:
  308 D1:ADDD -  -  -  -  
  309 D1:ADDD -  -  -  -  	;push af 
  310 D1:ADDD -  -  -  -  	;ld a,$AB 
  311 D1:ADDD -  -  -  -  	;call write_a_to_ram
  312 D1:ADDD -  -  -  -  	;call write_hl_to_ram
  313 D1:ADDD -  -  -  -  	;pop af 
  314 D1:ADDD -  -  -  -  	;call write_a_to_ram
  315 D1:ADDD -  -  -  -  	
  316 D1:ADDD -  -  -  -  	;call prgmpause
  317 D1:ADDD -  -  -  -  
  318 D1:ADDD 01 00 00 00 	ld bc,0
  319 D1:ADE1 11 00 00 00 	ld de,0
  320 D1:ADE5 -  -  -  -  	
  321 D1:ADE5 23 -  -  -  	inc hl;to x pos
  322 D1:ADE6 5E -  -  -  	ld e,(hl);e holds x pos 
  323 D1:ADE7 23 -  -  -  	inc hl 
  324 D1:ADE8 4E -  -  -  	ld c,(hl);sprite index 
  325 D1:ADE9 23 -  -  -  	inc hl ;next y
  326 D1:ADEA E5 -  -  -  	push hl ;save location in data 
  327 D1:ADEB -  -  -  -  dbgl_vram_line_start .equ $ + 1	
  328 D1:ADEB 21 00 00 00 	ld hl,0
  329 D1:ADEF 19 -  -  -  	add hl,de;add x pos
  330 D1:ADF0 -  -  -  -  dbgl_sg_x_origin .equ $ + 1
  331 D1:ADF0 1E 00 -  -  	ld e,0 
  332 D1:ADF2 19 -  -  -  	add hl,de;add x pos
  333 D1:ADF3 -  -  -  -  	
  334 D1:ADF3 EB -  -  -  	ex de,hl;put vram pos into de 
  335 D1:ADF4 -  -  -  -  	
  336 D1:ADF4 26 A0 -  -  	ld h,160
  337 D1:ADF6 6F -  -  -  	ld l,a ;number of lines to subtract 
  338 D1:ADF7 ED 6C -  -  	mlt hl;bytes to subtract from vram
  339 D1:ADF9 37 -  -  -  	scf 
  340 D1:ADFA 3F -  -  -  	ccf
  341 D1:ADFB EB -  -  -  	ex de,hl;hl holds initial vram pos, de is lines to subtract  
  342 D1:ADFC ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  343 D1:ADFE EB -  -  -  	ex de,hl;put in de
  344 D1:ADFF -  -  -  -  	
  345 D1:ADFF -  -  -  -  dbgl_sprite_pointers .equ $ + 1
  346 D1:ADFF 21 00 00 00 	ld hl,0
  347 D1:AE03 09 -  -  -  	add hl,bc
  348 D1:AE04 09 -  -  -  	add hl,bc 
  349 D1:AE05 09 -  -  -  	add hl,bc ;hl points to sprite data pointer 
  350 D1:AE06 ED 27 -  -  	ld hl,(hl);hl holds sprite data
  351 D1:AE08 -  -  -  -  
  352 D1:AE08 -  -  -  -  
  353 D1:AE08 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  354 D1:AE0A CA 16 AE D1 	jp z,dbgl_fast_sprite ;if even address, fast sprite 
  355 D1:AE0E CD E8 AE D1 	call draw_slow_sprite_single_line
  356 D1:AE12 C3 1A AE D1 	jp dbgl_slow_sprite
  357 D1:AE16 -  -  -  -  dbgl_fast_sprite:
  358 D1:AE16 CD 6A AE D1 	call draw_fast_sprite_single_line
  359 D1:AE1A -  -  -  -  dbgl_slow_sprite:
  360 D1:AE1A -  -  -  -  	
  361 D1:AE1A 11 00 00 00 	ld de,0;clear de 
  362 D1:AE1E 01 00 00 00 	ld bc,0
  363 D1:AE22 E1 -  -  -  	pop hl;back to data
  364 D1:AE23 C9 -  -  -  	ret
  365 D1:AE24 -  -  -  -  	
  366 D1:AE24 -  -  -  -  
  367 D1:AE24 -  -  -  -  
  368 D1:AE24 -  -  -  -  
  369 D1:AE24 -  -  -  -  
  370 D1:AE24 -  -  -  -  
  371 D1:AE24 -  -  -  -  
  372 D1:AE24 -  -  -  -  
  373 D1:AE24 -  -  -  -  
  374 D1:AE24 -  -  -  -  
  375 D1:AE24 -  -  -  -  
  376 D1:AE24 -  -  -  -  
  377 D1:AE24 -  -  -  -  
  378 D1:AE24 -  -  -  -  
  379 D1:AE24 -  -  -  -  
  380 D1:AE24 -  -  -  -  
  381 D1:AE24 -  -  -  -  
  382 D1:AE24 -  -  -  -  
  383 D1:AE24 -  -  -  -  
Listing for file "ascent.asm"
  547 D1:AE24 -  -  -  -  #include "drawFGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFGSprite.txt"
    1 D1:AE24 -  -  -  -  
    2 D1:AE24 -  -  -  -  ;hl = data, a = lines to draw. returns a = num loops to draw, hl = 1 before first gap length
    3 D1:AE24 -  -  -  -  setup_sprite_bottom_cut:
    4 D1:AE24 1B -  -  -  	dec de
    5 D1:AE25 01 00 00 00 	ld bc,0 ;clear bc
    6 D1:AE29 4F -  -  -  	ld c,a;c = lines to draw
    7 D1:AE2A E5 -  -  -  	push hl ;save data 
    8 D1:AE2B 09 -  -  -  	add hl,bc
    9 D1:AE2C 7E -  -  -  	ld a,(hl);num loops to draw
   10 D1:AE2D E1 -  -  -  	pop hl ;return to start of data
   11 D1:AE2E 4E -  -  -  	ld c,(hl) ;height
   12 D1:AE2F 09 -  -  -  	add hl,bc ;hl now points to 1 before first gap length
   13 D1:AE30 C9 -  -  -  	ret 
   14 D1:AE31 -  -  -  -  
   15 D1:AE31 -  -  -  -  setup_sprite_top_cut:
   16 D1:AE31 1B -  -  -  	dec de ;move to correct vram pos 
   17 D1:AE32 01 00 00 00 	ld bc,0
   18 D1:AE36 4F -  -  -  	ld c,a ;lines to skip (1 indexed)
   19 D1:AE37 D5 -  -  -  	push de
   20 D1:AE38 11 00 00 00 	ld de,0
   21 D1:AE3C E5 -  -  -  	push hl
   22 D1:AE3D 5E -  -  -  	ld e,(hl);height
   23 D1:AE3E 09 -  -  -  	add hl,bc;hl points to num skip loops 
   24 D1:AE3F 4E -  -  -  	ld c,(hl);c holds num skip loops
   25 D1:AE40 E1 -  -  -  	pop hl;start of data
   26 D1:AE41 19 -  -  -  	add hl,de
   27 D1:AE42 46 -  -  -  	ld b,(hl);total number of loops
   28 D1:AE43 23 -  -  -  	inc hl;hl is pixel data
   29 D1:AE44 D1 -  -  -  	pop de;back to vram
   30 D1:AE45 79 -  -  -  	ld a,c;loops to skip
   31 D1:AE46 C9 -  -  -  	ret 
   32 D1:AE47 -  -  -  -  
   33 D1:AE47 -  -  -  -  ;hl = data, a = line number to draw. returns a = c = number of loops to skip, b = loops to skip + loops to draw. HL = gap length  
   34 D1:AE47 -  -  -  -  setup_sprite_single_line: ;sets up for single line drawing mode 
   35 D1:AE47 1B -  -  -  	dec de
   36 D1:AE48 01 00 00 00 	ld bc,0
   37 D1:AE4C 4F -  -  -  	ld c,a ;line to draw
   38 D1:AE4D D5 -  -  -  	push de ;save vram 
   39 D1:AE4E 11 00 00 00 	ld de,0
   40 D1:AE52 E5 -  -  -  	push hl
   41 D1:AE53 5E -  -  -  	ld e,(hl);height
   42 D1:AE54 09 -  -  -  	add hl,bc;hl points to num skip loops 
   43 D1:AE55 4E -  -  -  	ld c,(hl);c holds num skip loops
   44 D1:AE56 23 -  -  -  	inc hl 
   45 D1:AE57 46 -  -  -  	ld b,(hl);b holds num loops after drawn line 
   46 D1:AE58 E1 -  -  -  	pop hl;start of data
   47 D1:AE59 19 -  -  -  	add hl,de
   48 D1:AE5A 23 -  -  -  	inc hl;hl is pixel data points to gap length 
   49 D1:AE5B D1 -  -  -  	pop de;back to vram
   50 D1:AE5C 79 -  -  -  	ld a,c;loops to skip
   51 D1:AE5D C9 -  -  -  	ret 
   52 D1:AE5E -  -  -  -  
   53 D1:AE5E -  -  -  -  
   54 D1:AE5E -  -  -  -  
   55 D1:AE5E -  -  -  -  draw_fast_sprite_bottom_cut_from_line:
   56 D1:AE5E 3C -  -  -  	inc a 
   57 D1:AE5F -  -  -  -  ;de = vram , hl = data, a = number lines to draw
   58 D1:AE5F -  -  -  -  draw_fast_sprite_bottom_cut:
   59 D1:AE5F CD 24 AE D1 	call setup_sprite_bottom_cut
   60 D1:AE63 23 -  -  -  	inc hl ;hl points to gap length 
   61 D1:AE64 4E -  -  -  	ld c,(hl);load alpha length
   62 D1:AE65 EB -  -  -  	ex de,hl;hl is vram, de is data
   63 D1:AE66 C3 AD AE D1 	jp dfgs_loop
   64 D1:AE6A -  -  -  -  
   65 D1:AE6A -  -  -  -  
   66 D1:AE6A -  -  -  -  ;de = vram , hl = data, a = line to draw (starting from 0)
   67 D1:AE6A -  -  -  -  draw_fast_sprite_single_line:
   68 D1:AE6A B7 -  -  -  	or a 
   69 D1:AE6B CA 5E AE D1 	jp z,draw_fast_sprite_bottom_cut_from_line ; if a is 0, same as drawing bottom cut
   70 D1:AE6F -  -  -  -  	;we know a is not 0 here 
   71 D1:AE6F CD 47 AE D1 	call setup_sprite_single_line
   72 D1:AE73 -  -  -  -  	
   73 D1:AE73 C5 -  -  -  	push bc;save total and skipped loops
   74 D1:AE74 01 00 00 00 	ld bc,0
   75 D1:AE78 -  -  -  -  	
   76 D1:AE78 C3 85 AE D1 	jp draw_fast_sprite_top_loop 
   77 D1:AE7C -  -  -  -  
   78 D1:AE7C -  -  -  -  
   79 D1:AE7C -  -  -  -  
   80 D1:AE7C -  -  -  -  ;de = vram , hl = data, a = top lines to skip (1 indexed)
   81 D1:AE7C -  -  -  -  draw_fast_sprite_top_cut:
   82 D1:AE7C CD 31 AE D1 	call setup_sprite_top_cut
   83 D1:AE80 C5 -  -  -  	push bc ;save total and skipped loops 
   84 D1:AE81 01 00 00 00 	ld bc,0 
   85 D1:AE85 -  -  -  -  	
   86 D1:AE85 -  -  -  -  draw_fast_sprite_top_loop:; need to follow through gap and drawn lengths to find start of drawing
   87 D1:AE85 4E -  -  -  	ld c,(hl);load with first gap length	
   88 D1:AE86 EB -  -  -  	ex de,hl;hl is vram
   89 D1:AE87 09 -  -  -  	add hl,bc
   90 D1:AE88 EB -  -  -  	ex de,hl;hl is data
   91 D1:AE89 23 -  -  -  	inc hl
   92 D1:AE8A 4E -  -  -  	ld c,(hl);ldir length
   93 D1:AE8B 09 -  -  -  	add hl,bc;add ldir length
   94 D1:AE8C EB -  -  -  	ex de,hl;hl is vram
   95 D1:AE8D 09 -  -  -  	add hl,bc;add ldir length
   96 D1:AE8E 13 -  -  -  	inc de
   97 D1:AE8F EB -  -  -  	ex de,hl;hl is data
   98 D1:AE90 3D -  -  -  	dec a
   99 D1:AE91 C2 85 AE D1 	jp nz,draw_fast_sprite_top_loop
  100 D1:AE95 -  -  -  -  	
  101 D1:AE95 -  -  -  -  	
  102 D1:AE95 C1 -  -  -  	pop bc ;b is total loops, c is skipped loops 
  103 D1:AE96 78 -  -  -  	ld a,b
  104 D1:AE97 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
  105 D1:AE98 -  -  -  -  		
  106 D1:AE98 01 00 00 00 	ld bc,0
  107 D1:AE9C 4E -  -  -  	ld c,(hl);load c with gap length
  108 D1:AE9D EB -  -  -  	ex de,hl ;setup for loop 
  109 D1:AE9E C3 AD AE D1 	jp dfgs_loop
  110 D1:AEA2 -  -  -  -  
  111 D1:AEA2 -  -  -  -  
  112 D1:AEA2 -  -  -  -  ;de = vram , hl = data
  113 D1:AEA2 -  -  -  -  draw_fast_sprite_full:
  114 D1:AEA2 1B -  -  -  	dec de
  115 D1:AEA3 01 00 00 00 	ld bc,0
  116 D1:AEA7 4E -  -  -  	ld c,(hl);height
  117 D1:AEA8 09 -  -  -  	add hl,bc
  118 D1:AEA9 7E -  -  -  	ld a,(hl);total loops
  119 D1:AEAA 23 -  -  -  	inc hl
  120 D1:AEAB 4E -  -  -  	ld c,(hl);first gap length
  121 D1:AEAC EB -  -  -  	ex de,hl
  122 D1:AEAD -  -  -  -  ;a = num loops, c = alphaLength,hl = vram
  123 D1:AEAD -  -  -  -  dfgs_loop:;gap, colors
  124 D1:AEAD 09 -  -  -  	add hl,bc;add alpha length
  125 D1:AEAE EB -  -  -  	ex de,hl;swap, hl is data, de is vram
  126 D1:AEAF 23 -  -  -  	inc hl
  127 D1:AEB0 4E -  -  -  	ld c,(hl);get ldir length
  128 D1:AEB1 23 -  -  -  	inc hl
  129 D1:AEB2 ED B0 -  -  	ldir
  130 D1:AEB4 4E -  -  -  	ld c,(hl);load c with next alpha length
  131 D1:AEB5 EB -  -  -  	ex de,hl;swap, hl is vram
  132 D1:AEB6 3D -  -  -  	dec a
  133 D1:AEB7 C2 AD AE D1 	jp nz,dfgs_loop
  134 D1:AEBB C9 -  -  -  	ret
  135 D1:AEBC -  -  -  -  	
  136 D1:AEBC -  -  -  -  	
  137 D1:AEBC -  -  -  -  	
  138 D1:AEBC -  -  -  -  	
  139 D1:AEBC -  -  -  -  
  140 D1:AEBC -  -  -  -  
  141 D1:AEBC -  -  -  -  ;hl = data, de = vram
  142 D1:AEBC -  -  -  -  draw_slow_sprite_full:
  143 D1:AEBC 01 00 00 00 	ld bc,0
  144 D1:AEC0 4E -  -  -  	ld c,(hl);height
  145 D1:AEC1 09 -  -  -  	add hl,bc
  146 D1:AEC2 7E -  -  -  	ld a,(hl);num loops
  147 D1:AEC3 1B -  -  -  	dec de ;correct vram pos 
  148 D1:AEC4 D9 -  -  -  	exx;into shadow 
  149 D1:AEC5 47 -  -  -  	ld b,a ;number of loops
  150 D1:AEC6 -  -  -  -  	;hl = (gap length) -1 de = vram-1 b' = loops
  151 D1:AEC6 -  -  -  -  dsfgs_line_loop:
  152 D1:AEC6 D9 -  -  -  	exx;out of shadow
  153 D1:AEC7 23 -  -  -  	inc hl;gap length
  154 D1:AEC8 4E -  -  -  	ld c,(hl);gap length
  155 D1:AEC9 EB -  -  -  	ex de,hl;hl is vram
  156 D1:AECA 09 -  -  -  	add hl,bc;add aplha gap
  157 D1:AECB EB -  -  -  	ex de,hl;hl is data
  158 D1:AECC 23 -  -  -  	inc hl;hl points to single pix mask
  159 D1:AECD 1A -  -  -  	ld a,(de);vram data
  160 D1:AECE A6 -  -  -  	and (hl)
  161 D1:AECF 23 -  -  -  	inc hl;pixel data
  162 D1:AED0 B6 -  -  -  	or (hl)
  163 D1:AED1 12 -  -  -  	ld (de),a
  164 D1:AED2 23 -  -  -  	inc hl;ldir length
  165 D1:AED3 -  -  -  -  	
  166 D1:AED3 13 -  -  -  	inc de;move to next pixel
  167 D1:AED4 -  -  -  -  	
  168 D1:AED4 7E -  -  -  	ld a,(hl);ldir length
  169 D1:AED5 23 -  -  -  	inc hl;data
  170 D1:AED6 4F -  -  -  	ld c,a
  171 D1:AED7 B7 -  -  -  	or a
  172 D1:AED8 CA DE AE D1 	jp z,dsfgs_ldir_skip
  173 D1:AEDC ED B0 -  -  	ldir
  174 D1:AEDE -  -  -  -  dsfgs_ldir_skip:
  175 D1:AEDE 1A -  -  -  	ld a,(de);vram data
  176 D1:AEDF A6 -  -  -  	and (hl)
  177 D1:AEE0 23 -  -  -  	inc hl;pixel data
  178 D1:AEE1 B6 -  -  -  	or (hl)
  179 D1:AEE2 12 -  -  -  	ld (de),a
  180 D1:AEE3 -  -  -  -  	
  181 D1:AEE3 D9 -  -  -  	exx ;into shadow
  182 D1:AEE4 10 E0 -  -  	djnz dsfgs_line_loop
  183 D1:AEE6 D9 -  -  -  	exx ;out 
  184 D1:AEE7 C9 -  -  -  	ret
  185 D1:AEE8 -  -  -  -  
  186 D1:AEE8 -  -  -  -  
  187 D1:AEE8 -  -  -  -  
  188 D1:AEE8 -  -  -  -  ;de = vram , hl = data, a = line to draw (from 0)
  189 D1:AEE8 -  -  -  -  draw_slow_sprite_single_line:
  190 D1:AEE8 -  -  -  -  
  191 D1:AEE8 B7 -  -  -  	or a 
  192 D1:AEE9 CA 26 AF D1 	jp z,draw_slow_sprite_bottom_cut_from_line ; if a is 0, same as drawing bottom cut
  193 D1:AEED -  -  -  -  	;we know a is not 0 here
  194 D1:AEED CD 47 AE D1 	call setup_sprite_single_line
  195 D1:AEF1 C5 -  -  -  	push bc;save total and skipped loops
  196 D1:AEF2 01 00 00 00 	ld bc,0
  197 D1:AEF6 -  -  -  -  	
  198 D1:AEF6 C3 03 AF D1 	jp slow_sprite_data_traverse 
  199 D1:AEFA -  -  -  -  	
  200 D1:AEFA -  -  -  -  
  201 D1:AEFA -  -  -  -  ;de = vram , hl = data, a = top lines to skip (from 1)
  202 D1:AEFA -  -  -  -  draw_slow_sprite_top_cut:
  203 D1:AEFA CD 31 AE D1 	call setup_sprite_top_cut
  204 D1:AEFE C5 -  -  -  	push bc;save total and skipped loops
  205 D1:AEFF 01 00 00 00 	ld bc,0
  206 D1:AF03 -  -  -  -  ;hl = data start, a = num loops to skip, bc = 0
  207 D1:AF03 -  -  -  -  slow_sprite_data_traverse:
  208 D1:AF03 4E -  -  -  	ld c,(hl);gap length
  209 D1:AF04 EB -  -  -  	ex de,hl;hl is vram
  210 D1:AF05 09 -  -  -  	add hl,bc
  211 D1:AF06 EB -  -  -  	ex de,hl
  212 D1:AF07 -  -  -  -  	
  213 D1:AF07 23 -  -  -  	inc hl ;inc past leading pixels
  214 D1:AF08 23 -  -  -  	inc hl
  215 D1:AF09 23 -  -  -  	inc hl;ldir length
  216 D1:AF0A 4E -  -  -  	ld c,(hl)
  217 D1:AF0B 09 -  -  -  	add hl,bc
  218 D1:AF0C EB -  -  -  	ex de,hl
  219 D1:AF0D 09 -  -  -  	add hl,bc
  220 D1:AF0E EB -  -  -  	ex de,hl
  221 D1:AF0F 13 -  -  -  	inc de;inc for leading pix 
  222 D1:AF10 23 -  -  -  	inc hl;inc past ending pixels
  223 D1:AF11 23 -  -  -  	inc hl
  224 D1:AF12 23 -  -  -  	inc hl;gap length
  225 D1:AF13 -  -  -  -  	
  226 D1:AF13 3D -  -  -  	dec a 
  227 D1:AF14 C2 03 AF D1 	jp nz,slow_sprite_data_traverse
  228 D1:AF18 -  -  -  -  
  229 D1:AF18 -  -  -  -  
  230 D1:AF18 C1 -  -  -  	pop bc ;b is total loops, c is skipped loops 
  231 D1:AF19 78 -  -  -  	ld a,b
  232 D1:AF1A 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
  233 D1:AF1B 01 00 00 00 	ld bc,0;clear bc 
  234 D1:AF1F 2B -  -  -  	dec hl	;hl points to 1 before gaplength
  235 D1:AF20 D9 -  -  -  	exx ;toshadow
  236 D1:AF21 47 -  -  -  	ld b,a 
  237 D1:AF22 C3 C6 AE D1 	jp dsfgs_line_loop
  238 D1:AF26 -  -  -  -  	
  239 D1:AF26 -  -  -  -  	
  240 D1:AF26 -  -  -  -  	
  241 D1:AF26 -  -  -  -  draw_slow_sprite_bottom_cut_from_line:
  242 D1:AF26 3C -  -  -  	inc a 
  243 D1:AF27 -  -  -  -  ;de = vram , hl = data, a = number lines to draw
  244 D1:AF27 -  -  -  -  draw_slow_sprite_bottom_cut:
  245 D1:AF27 -  -  -  -  
  246 D1:AF27 CD 24 AE D1 	call setup_sprite_bottom_cut
  247 D1:AF2B -  -  -  -  	;a = loops to draw, hl = 1 before gap length 
  248 D1:AF2B D9 -  -  -  	exx ;toshadow
  249 D1:AF2C 47 -  -  -  	ld b,a
  250 D1:AF2D C3 C6 AE D1 	jp dsfgs_line_loop
  251 D1:AF31 -  -  -  -  
  252 D1:AF31 -  -  -  -  
  253 D1:AF31 -  -  -  -  
  254 D1:AF31 -  -  -  -  
  255 D1:AF31 -  -  -  -  
  256 D1:AF31 -  -  -  -  
  257 D1:AF31 -  -  -  -  
  258 D1:AF31 -  -  -  -  
  259 D1:AF31 -  -  -  -  
  260 D1:AF31 -  -  -  -  
  261 D1:AF31 -  -  -  -  
  262 D1:AF31 -  -  -  -  
  263 D1:AF31 -  -  -  -  
  264 D1:AF31 -  -  -  -  
  265 D1:AF31 -  -  -  -  
  266 D1:AF31 -  -  -  -  
  267 D1:AF31 -  -  -  -  
  268 D1:AF31 -  -  -  -  
  269 D1:AF31 -  -  -  -  
  270 D1:AF31 -  -  -  -  
  271 D1:AF31 -  -  -  -  
  272 D1:AF31 -  -  -  -  
  273 D1:AF31 -  -  -  -  
  274 D1:AF31 -  -  -  -  
  275 D1:AF31 -  -  -  -  
  276 D1:AF31 -  -  -  -  
  277 D1:AF31 -  -  -  -  
  278 D1:AF31 -  -  -  -  
  279 D1:AF31 -  -  -  -  
  280 D1:AF31 -  -  -  -  
  281 D1:AF31 -  -  -  -  
  282 D1:AF31 -  -  -  -  
  283 D1:AF31 -  -  -  -  
  284 D1:AF31 -  -  -  -  
  285 D1:AF31 -  -  -  -  
  286 D1:AF31 -  -  -  -  
  287 D1:AF31 -  -  -  -   
  288 D1:AF31 -  -  -  -  
  289 D1:AF31 -  -  -  -  
  290 D1:AF31 -  -  -  -  
  291 D1:AF31 -  -  -  -  
  292 D1:AF31 -  -  -  -  
  293 D1:AF31 -  -  -  -  
  294 D1:AF31 -  -  -  -  
  295 D1:AF31 -  -  -  -  
  296 D1:AF31 -  -  -  -  
  297 D1:AF31 -  -  -  -  
  298 D1:AF31 -  -  -  -  
  299 D1:AF31 -  -  -  -  
  300 D1:AF31 -  -  -  -  
  301 D1:AF31 -  -  -  -  
  302 D1:AF31 -  -  -  -  
  303 D1:AF31 -  -  -  -  
  304 D1:AF31 -  -  -  -  
  305 D1:AF31 -  -  -  -  
  306 D1:AF31 -  -  -  -  
  307 D1:AF31 -  -  -  -  
  308 D1:AF31 -  -  -  -  
  309 D1:AF31 -  -  -  -  
  310 D1:AF31 -  -  -  -  
  311 D1:AF31 -  -  -  -  
  312 D1:AF31 -  -  -  -  
  313 D1:AF31 -  -  -  -  
  314 D1:AF31 -  -  -  -  
  315 D1:AF31 -  -  -  -  
  316 D1:AF31 -  -  -  -  
  317 D1:AF31 -  -  -  -  
  318 D1:AF31 -  -  -  -  
  319 D1:AF31 -  -  -  -  
  320 D1:AF31 -  -  -  -  
  321 D1:AF31 -  -  -  -  
  322 D1:AF31 -  -  -  -  
  323 D1:AF31 -  -  -  -  
  324 D1:AF31 -  -  -  -  
  325 D1:AF31 -  -  -  -  
  326 D1:AF31 -  -  -  -  
  327 D1:AF31 -  -  -  -  
  328 D1:AF31 -  -  -  -  
  329 D1:AF31 -  -  -  -  
  330 D1:AF31 -  -  -  -  
  331 D1:AF31 -  -  -  -  
  332 D1:AF31 -  -  -  -  
  333 D1:AF31 -  -  -  -  
  334 D1:AF31 -  -  -  -  
  335 D1:AF31 -  -  -  -  
  336 D1:AF31 -  -  -  -  
  337 D1:AF31 -  -  -  -  
  338 D1:AF31 -  -  -  -  
  339 D1:AF31 -  -  -  -  
  340 D1:AF31 -  -  -  -  
  341 D1:AF31 -  -  -  -  
  342 D1:AF31 -  -  -  -  
  343 D1:AF31 -  -  -  -  	
  344 D1:AF31 -  -  -  -  	
Listing for file "ascent.asm"
  548 D1:AF31 -  -  -  -  #include "BetterSpriteDecompress.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\BetterSpriteDecompress.txt"
    1 D1:AF31 -  -  -  -  
    2 D1:AF31 -  -  -  -  
    3 D1:AF31 -  -  -  -  
    4 D1:AF31 -  -  -  -  
    5 D1:AF31 -  -  -  -  
    6 D1:AF31 -  -  -  -  
    7 D1:AF31 -  -  -  -  
    8 D1:AF31 -  -  -  -  
    9 D1:AF31 -  -  -  -  ;REGISTER USEAGE
   10 D1:AF31 -  -  -  -  ;HL = sprite color data byte
   11 D1:AF31 -  -  -  -  ;C = bit selector for color data 
   12 D1:AF31 -  -  -  -  ;HL' = alpha data byte
   13 D1:AF31 -  -  -  -  ;C' = bit selector for alpha data
   14 D1:AF31 -  -  -  -  ;DE = output sprite data location
   15 D1:AF31 -  -  -  -  ;DE' = loops/line write location 
   16 D1:AF31 -  -  -  -  ;A' = alpha bits remaining to read in row
   17 D1:AF31 -  -  -  -  
   18 D1:AF31 -  -  -  -  ;SETUP ----------------
   19 D1:AF31 -  -  -  -  ;SET UP BPC MODE AND ALPHA/NOALPHA
   20 D1:AF31 -  -  -  -  ;write height or width(BG) data to decompressed sprite 
   21 D1:AF31 -  -  -  -  ;GET PER SPRITE PALETTE DATA
   22 D1:AF31 -  -  -  -  ;set registers to point to correct locations for decompression
   23 D1:AF31 -  -  -  -  ;------------
   24 D1:AF31 -  -  -  -  
   25 D1:AF31 -  -  -  -  ;GO TO EITHER FAST, SLOW, or BG SPRITE ALGORITHMS
   26 D1:AF31 -  -  -  -  
   27 D1:AF31 -  -  -  -  
   28 D1:AF31 -  -  -  -  ;FAST / SLOW ROUTINE ---------------------------
   29 D1:AF31 -  -  -  -  ;Parse through alpha data, count number of 00 pairs (gap length)
   30 D1:AF31 -  -  -  -  ;IF FAST, GOTO LDIR ROUTINE
   31 D1:AF31 -  -  -  -  ;leading pixel(s), either 11, 01, 10 in alpha data. 
   32 D1:AF31 -  -  -  -  ;write pixel mask and color data
   33 D1:AF31 -  -  -  -  
   34 D1:AF31 -  -  -  -  ;LDIR ROUTINE
   35 D1:AF31 -  -  -  -  ;Count number of 11 pairs in alpha data (LDIR length)
   36 D1:AF31 -  -  -  -  ;if slow and alpha data ends with 00, the last 11 pair becomes trailing pixels
   37 D1:AF31 -  -  -  -  ;Write LDIR length to sprite data 
   38 D1:AF31 -  -  -  -  ;Write LDIR pixel data (if nonzero)
   39 D1:AF31 -  -  -  -  ;IF FAST, GOTO END
   40 D1:AF31 -  -  -  -  
   41 D1:AF31 -  -  -  -  ;trailing pixels
   42 D1:AF31 -  -  -  -  ;11,10,01 in alpha data 
   43 D1:AF31 -  -  -  -  
   44 D1:AF31 -  -  -  -  ;END AND RESTART
   45 D1:AF31 -  -  -  -  ;Increment loops/line counter
   46 D1:AF31 -  -  -  -  ;check if end of line and write loops/line
   47 D1:AF31 -  -  -  -  
   48 D1:AF31 -  -  -  -  ;store registers and check if interrupt is required
   49 D1:AF31 -  -  -  -  ;if interruption required, return to main loop to draw next frame
   50 D1:AF31 -  -  -  -  ;otherwise return to start of loop
   51 D1:AF31 -  -  -  -  
   52 D1:AF31 -  -  -  -  ;
   53 D1:AF31 -  -  -  -  
   54 D1:AF31 -  -  -  -  
   55 D1:AF31 -  -  -  -  
   56 D1:AF31 -  -  -  -  
   57 D1:AF31 -  -  -  -  
   58 D1:AF31 -  -  -  -  
   59 D1:AF31 -  -  -  -  ;rotates c and incs hl if needed to point to next bit. can be flipped to dec bit 
   60 D1:AF31 -  -  -  -  sdcomp_next_in_bitstream:
   61 D1:AF31 -  -  -  -  sdcomp_flip_bitstream .equ $ + 1
   62 D1:AF31 CB 09 -  -  	rrc c;rlc flip
   63 D1:AF33 D0 -  -  -  	ret nc
   64 D1:AF34 -  -  -  -  sdcomp_flip_bitstream_2 .equ $
   65 D1:AF34 23 -  -  -  	inc hl;dec hl flip
   66 D1:AF35 C9 -  -  -  	ret
   67 D1:AF36 -  -  -  -  
   68 D1:AF36 -  -  -  -  ;ALPHA HELPER FUNCS ================================================================================================	
   69 D1:AF36 -  -  -  -  
   70 D1:AF36 -  -  -  -  ;IN SHADOW
   71 D1:AF36 -  -  -  -  ;HL POINTS TO PIXEL ALPHA DATA
   72 D1:AF36 -  -  -  -  ;C IS BITMASK
   73 D1:AF36 -  -  -  -  ;RETURNS 0 OR nonzero IN A 
   74 D1:AF36 -  -  -  -  ;If final alpha bit in line is read, writes loop/line data, ...
   75 D1:AF36 -  -  -  -  ; sets some flags, decrements remaining lines, traverses sprite data if flip, returns the read data 
   76 D1:AF36 -  -  -  -  ; next call returns first bit in next row  
   77 D1:AF36 -  -  -  -  sdcomp_get_next_alpha:
   78 D1:AF36 -  -  -  -  	;ld a,$A2;test 
   79 D1:AF36 -  -  -  -  	;call write_a_to_ram
   80 D1:AF36 79 -  -  -  	ld a,c 
   81 D1:AF37 -  -  -  -  	;call write_a_to_ram 
   82 D1:AF37 7E -  -  -  	ld a,(hl)
   83 D1:AF38 -  -  -  -  	;call write_a_to_ram
   84 D1:AF38 -  -  -  -  	
   85 D1:AF38 37 -  -  -  	scf 
   86 D1:AF39 -  -  -  -  sdcomp_end_of_line_alp .equ $
   87 D1:AF39 DA 46 AF D1 	jp c, sdcomp_end_of_line_alp_skip
   88 D1:AF3D -  -  -  -  
   89 D1:AF3D -  -  -  -  	;ld a,$A3
   90 D1:AF3D -  -  -  -  	;call write_a_to_ram 
   91 D1:AF3D -  -  -  -  	
   92 D1:AF3D 3E D2 -  -  	ld a, %11010010 ;jp nc 
   93 D1:AF3F 32 A9 AF D1 	ld (sdcomp_end_vitrual_zero_read),a 
   94 D1:AF43 -  -  -  -  	
   95 D1:AF43 3E 00 -  -  	ld a,0
   96 D1:AF45 C9 -  -  -  	ret ;returns virtual 0, outside of data range 
   97 D1:AF46 -  -  -  -  
   98 D1:AF46 -  -  -  -  sdcomp_end_of_line_alp_skip:
   99 D1:AF46 -  -  -  -  	
  100 D1:AF46 -  -  -  -  	
  101 D1:AF46 -  -  -  -  	
  102 D1:AF46 -  -  -  -  ;MUST BE RESET EVERY ROW
  103 D1:AF46 37 -  -  -  	scf
  104 D1:AF47 -  -  -  -  sdcomp_bit_offset .equ $ ;jp nc for offset
  105 D1:AF47 DA 54 AF D1 	jp c,sdcomp_bit_offset_skip
  106 D1:AF4B 3E DA -  -  	ld a,%11011010;jp c 
  107 D1:AF4D 32 47 AF D1 	ld (sdcomp_bit_offset),a
  108 D1:AF51 -  -  -  -  	;ld a,$A9
  109 D1:AF51 -  -  -  -  	;call write_a_to_ram
  110 D1:AF51 3E 00 -  -  	ld a,0
  111 D1:AF53 C9 -  -  -  	ret ;return 0 first bit
  112 D1:AF54 -  -  -  -  sdcomp_bit_offset_skip:;skip bit offset
  113 D1:AF54 -  -  -  -  		
  114 D1:AF54 -  -  -  -  	;ld a,$EF
  115 D1:AF54 -  -  -  -  	;call write_a_to_ram
  116 D1:AF54 7E -  -  -  	ld a,(hl)
  117 D1:AF55 -  -  -  -  	;push af 
  118 D1:AF55 -  -  -  -  	;call write_a_to_ram
  119 D1:AF55 -  -  -  -  	;ld a,c
  120 D1:AF55 -  -  -  -  	;call write_a_to_ram
  121 D1:AF55 -  -  -  -  	;pop af 
  122 D1:AF55 -  -  -  -  	
  123 D1:AF55 -  -  -  -  	
  124 D1:AF55 A1 -  -  -  	and c 
  125 D1:AF56 CD 31 AF D1 	call sdcomp_next_in_bitstream;incs bitstream
  126 D1:AF5A -  -  -  -  	;a holds data to return
  127 D1:AF5A -  -  -  -  	;call write_a_to_ram
  128 D1:AF5A 37 -  -  -  	scf 
  129 D1:AF5B -  -  -  -  sdcomp_no_alpha_1 .equ $;Load a with 1 if no alpha
  130 D1:AF5B DA 61 AF D1 	jp c,sdcomp_no_alpha_1_skip
  131 D1:AF5F 3E 01 -  -  	ld a,1
  132 D1:AF61 -  -  -  -  sdcomp_no_alpha_1_skip:
  133 D1:AF61 -  -  -  -  	
  134 D1:AF61 -  -  -  -  	
  135 D1:AF61 08 -  -  -  	ex af,af' ;';into shadow
  136 D1:AF62 3D -  -  -  	dec a 
  137 D1:AF63 -  -  -  -  	;call write_a_to_ram
  138 D1:AF63 C2 8F AF D1 	jp nz, sdcomp_end_of_line_skip
  139 D1:AF67 -  -  -  -  	
  140 D1:AF67 -  -  -  -  	;HAve read last bit in line  
  141 D1:AF67 -  -  -  -  	
  142 D1:AF67 -  -  -  -  	;ld a,$AC;Test
  143 D1:AF67 -  -  -  -  	;call write_a_to_ram;Test
  144 D1:AF67 -  -  -  -  	;Decrement lines remaining in sprite
  145 D1:AF67 -  -  -  -  sdcomp_lines_remaining .equ $ + 1
  146 D1:AF67 3E 00 -  -  	ld a,0
  147 D1:AF69 3D -  -  -  	dec a 
  148 D1:AF6A 32 68 AF D1 	ld (sdcomp_lines_remaining),a
  149 D1:AF6E -  -  -  -  	;call write_a_to_ram
  150 D1:AF6E C2 78 AF D1 	jp nz,sdcomp_set_end_flag_skip
  151 D1:AF72 -  -  -  -  	;end of last line reached 
  152 D1:AF72 3E DA -  -  	ld a,%11011010;jp c
  153 D1:AF74 32 EE B1 D1 	ld (sdcomp_end_reached_flag) , a ;set end reached flag to indicate sprite is done decompressing TODO 
  154 D1:AF78 -  -  -  -  	;ld a,$E9
  155 D1:AF78 -  -  -  -  	;call write_a_to_ram;TEST 
  156 D1:AF78 -  -  -  -  sdcomp_set_end_flag_skip:
  157 D1:AF78 -  -  -  -  	
  158 D1:AF78 -  -  -  -  
  159 D1:AF78 -  -  -  -  	
  160 D1:AF78 3E D2 -  -  	ld a, %11010010 ;jp nc 
  161 D1:AF7A 32 C9 B1 D1 	ld (sdcomp_end_of_line_gaplength),a
  162 D1:AF7E 32 39 AF D1 	ld (sdcomp_end_of_line_alp),a
  163 D1:AF82 -  -  -  -  	;ld (sdcomp_write_loops_per_line_flag),a 
  164 D1:AF82 37 -  -  -  	scf ;Set offset bit for next line
  165 D1:AF83 -  -  -  -  sdcomp_offset_1 .equ $
  166 D1:AF83 DA 8D AF D1 	jp c,sdcomp_offset_1_skip
  167 D1:AF87 3E D2 -  -  	ld a, %11010010 ;jp nc 
  168 D1:AF89 32 47 AF D1 	ld (sdcomp_bit_offset),a
  169 D1:AF8D -  -  -  -  sdcomp_offset_1_skip:
  170 D1:AF8D -  -  -  -  	
  171 D1:AF8D -  -  -  -  sdcomp_sprite_width_2 .equ $+1
  172 D1:AF8D 3E 00 -  -  	ld a,0 ;Return sprite width to a'
  173 D1:AF8F -  -  -  -  	
  174 D1:AF8F -  -  -  -  	;call write_a_to_ram
  175 D1:AF8F -  -  -  -  	
  176 D1:AF8F -  -  -  -  sdcomp_end_of_line_skip:
  177 D1:AF8F 08 -  -  -  	ex af,af' ;' ;out
  178 D1:AF90 -  -  -  -  	
  179 D1:AF90 -  -  -  -  	;push af ;testing
  180 D1:AF90 -  -  -  -  	;ld a,$A0
  181 D1:AF90 -  -  -  -  	;call write_a_to_ram
  182 D1:AF90 -  -  -  -  	;pop af 
  183 D1:AF90 -  -  -  -  	;call write_a_to_ram
  184 D1:AF90 -  -  -  -  	
  185 D1:AF90 C9 -  -  -  	ret 
  186 D1:AF91 -  -  -  -  	
  187 D1:AF91 -  -  -  -  
  188 D1:AF91 -  -  -  -  
  189 D1:AF91 -  -  -  -  ;in shadow,returns a $FF,$0F,$F0,$00
  190 D1:AF91 -  -  -  -  sdcomp_get_next_alpha_pair:
  191 D1:AF91 -  -  -  -  	;ld a,$A1
  192 D1:AF91 -  -  -  -  	;call write_a_to_ram
  193 D1:AF91 -  -  -  -  	
  194 D1:AF91 -  -  -  -  	;ld a,c ;test
  195 D1:AF91 -  -  -  -  	;call write_a_to_ram 
  196 D1:AF91 -  -  -  -  	;ld a,(hl) ;test
  197 D1:AF91 -  -  -  -  	;call write_a_to_ram
  198 D1:AF91 -  -  -  -  	
  199 D1:AF91 3E DA -  -  	ld a,%11011010;jp c 
  200 D1:AF93 32 A9 AF D1 	ld(sdcomp_end_vitrual_zero_read),a ;reset vitrual zero read flag
  201 D1:AF97 -  -  -  -  	
  202 D1:AF97 CD 36 AF D1 	call sdcomp_get_next_alpha
  203 D1:AF9B B7 -  -  -  	or a 
  204 D1:AF9C CA A6 AF D1 	jp z,sdcomp_get_next_alpha_pair0
  205 D1:AFA0 3E F0 -  -  	ld a,$F0;FIRST BIT WAS 1
  206 D1:AFA2 -  -  -  -  	;call write_a_to_ram
  207 D1:AFA2 C3 B5 AF D1 	jp sdcomp_get_next_alpha_pair1
  208 D1:AFA6 -  -  -  -  sdcomp_get_next_alpha_pair0:
  209 D1:AFA6 3E 00 -  -  	ld a,0
  210 D1:AFA8 -  -  -  -  	
  211 D1:AFA8 37 -  -  -  	scf 
  212 D1:AFA9 -  -  -  -  sdcomp_end_vitrual_zero_read .equ $
  213 D1:AFA9 DA B5 AF D1 	jp c,sdcomp_get_next_alpha_pair1
  214 D1:AFAD F5 -  -  -  	push af 
  215 D1:AFAE -  -  -  -  	;This gets triggered when we have read a vitrual 0 (outside of line) as the first bit in an alpha pair 
  216 D1:AFAE -  -  -  -  	
  217 D1:AFAE 3E 3D -  -  	ld a,%00111101 ;dec a 
  218 D1:AFB0 32 D0 B1 D1 	ld (sdcomp_dec_gap_btwn_rows),a 
  219 D1:AFB4 -  -  -  -  	;We should subtract 1 from the next interline gap length whenever a virtual 00 is read.
  220 D1:AFB4 -  -  -  -  	;ld a,$A4
  221 D1:AFB4 -  -  -  -  	;call write_a_to_ram
  222 D1:AFB4 F1 -  -  -  	pop af 
  223 D1:AFB5 -  -  -  -  	
  224 D1:AFB5 -  -  -  -  sdcomp_get_next_alpha_pair1:
  225 D1:AFB5 -  -  -  -  
  226 D1:AFB5 -  -  -  -  	
  227 D1:AFB5 32 CB AF D1 	ld (sdcomp_get_next_alpha_pair_or),a 
  228 D1:AFB9 -  -  -  -  	
  229 D1:AFB9 CD 36 AF D1 	call sdcomp_get_next_alpha
  230 D1:AFBD B7 -  -  -  	or a 
  231 D1:AFBE CA C8 AF D1 	jp z,sdcomp_get_next_alpha_pair2
  232 D1:AFC2 3E 0F -  -  	ld a,$0F;SECOND BIT WAS 1
  233 D1:AFC4 C3 CA AF D1 	jp sdcomp_get_next_alpha_pair3
  234 D1:AFC8 -  -  -  -  sdcomp_get_next_alpha_pair2:
  235 D1:AFC8 3E 00 -  -  	ld a,0;SECOND BIT WAS 0
  236 D1:AFCA -  -  -  -  sdcomp_get_next_alpha_pair3:	
  237 D1:AFCA -  -  -  -  sdcomp_get_next_alpha_pair_or .equ $ + 1
  238 D1:AFCA F6 00 -  -  	or 0;OR WITH FIRST BIT 
  239 D1:AFCC -  -  -  -  	
  240 D1:AFCC C9 -  -  -  	ret 
  241 D1:AFCD -  -  -  -  	
  242 D1:AFCD -  -  -  -  ;COLOR HELPER FUNCS =================================================================================================
  243 D1:AFCD -  -  -  -  
  244 D1:AFCD -  -  -  -  ;not in shadow, returns a = color0000
  245 D1:AFCD -  -  -  -  sdcomp_get_next_color_leading_nibble:
  246 D1:AFCD CD D6 AF D1 	call sdcomp_get_next_color
  247 D1:AFD1 0F -  -  -  	rrca 
  248 D1:AFD2 0F -  -  -  	rrca 
  249 D1:AFD3 0F -  -  -  	rrca 
  250 D1:AFD4 0F -  -  -  	rrca
  251 D1:AFD5 C9 -  -  -  	ret 
  252 D1:AFD6 -  -  -  -  
  253 D1:AFD6 -  -  -  -  
  254 D1:AFD6 -  -  -  -  
  255 D1:AFD6 -  -  -  -  ;bit orders
  256 D1:AFD6 -  -  -  -  ;	noflip   flip 
  257 D1:AFD6 -  -  -  -  ;4bpp 3210 	 0123
  258 D1:AFD6 -  -  -  -  ;3bpp 210	 012
  259 D1:AFD6 -  -  -  -  ;2bpp 10	 01
  260 D1:AFD6 -  -  -  -  ;1bpp 0		 0
  261 D1:AFD6 -  -  -  -  
  262 D1:AFD6 -  -  -  -  ;not in shadow, returns a = 0000color
  263 D1:AFD6 -  -  -  -  sdcomp_get_next_color:
  264 D1:AFD6 D5 -  -  -  	push de ;save data write location
  265 D1:AFD7 1E 00 -  -  	ld e,0;E will store the final color data
  266 D1:AFD9 -  -  -  -  	
  267 D1:AFD9 37 -  -  -  	scf
  268 D1:AFDA -  -  -  -  sdcomp_0bpc .equ $ ;if sprite is 0bpc, skip reading bitstream, set to jp c 
  269 D1:AFDA D2 24 B0 D1 	jp nc,sdcomp_get_color_from_index
  270 D1:AFDE -  -  -  -  	
  271 D1:AFDE -  -  -  -  	;ld a,$C1
  272 D1:AFDE -  -  -  -  	;call write_a_to_ram
  273 D1:AFDE -  -  -  -  	
  274 D1:AFDE 7E -  -  -  	ld a,(hl) ;read next bit 
  275 D1:AFDF -  -  -  -  	;call write_a_to_ram ;TEST
  276 D1:AFDF A1 -  -  -  	and c
  277 D1:AFE0 -  -  -  -  	;call write_a_to_ram ;TEST
  278 D1:AFE0 CD 31 AF D1 	call sdcomp_next_in_bitstream  ;inc bitstream 
  279 D1:AFE4 B7 -  -  -  	or a
  280 D1:AFE5 CA EB AF D1 	jp z,sdcomp_get_color_data_set_skip_1
  281 D1:AFE9 -  -  -  -  sdcomp_color_bit_0 .equ $ + 1 
  282 D1:AFE9 CB CB -  -  	set 1,e  ;set bit of e reg to color, 0 for flip, else depends on bpc 
  283 D1:AFEB -  -  -  -  sdcomp_get_color_data_set_skip_1:
  284 D1:AFEB -  -  -  -  	
  285 D1:AFEB 37 -  -  -  	scf
  286 D1:AFEC -  -  -  -  sdcomp_1bpc .equ $
  287 D1:AFEC D2 24 B0 D1 	jp nc,sdcomp_get_color_from_index ;if 1bpc jump to end 
  288 D1:AFF0 -  -  -  -  
  289 D1:AFF0 -  -  -  -  	;ld a,$C2
  290 D1:AFF0 -  -  -  -  	;call write_a_to_ram
  291 D1:AFF0 -  -  -  -  	
  292 D1:AFF0 7E -  -  -  	ld a,(hl)
  293 D1:AFF1 -  -  -  -  	;call write_a_to_ram ;TEST
  294 D1:AFF1 A1 -  -  -  	and c 
  295 D1:AFF2 -  -  -  -  	;call write_a_to_ram ;TEST
  296 D1:AFF2 CD 31 AF D1 	call sdcomp_next_in_bitstream
  297 D1:AFF6 B7 -  -  -  	or a
  298 D1:AFF7 CA FD AF D1 	jp z,sdcomp_get_color_data_set_skip_2
  299 D1:AFFB -  -  -  -  sdcomp_color_bit_1 .equ $ + 1 	
  300 D1:AFFB CB C3 -  -  	set 0,e ;store next bit of color data in e  
  301 D1:AFFD -  -  -  -  sdcomp_get_color_data_set_skip_2:
  302 D1:AFFD -  -  -  -  	
  303 D1:AFFD 37 -  -  -  	scf
  304 D1:AFFE -  -  -  -  sdcomp_2bpc .equ $ ;if 2bpc jump to end
  305 D1:AFFE D2 24 B0 D1 	jp nc,sdcomp_get_color_from_index
  306 D1:B002 -  -  -  -  	
  307 D1:B002 7E -  -  -  	ld a,(hl)
  308 D1:B003 A1 -  -  -  	and c 
  309 D1:B004 CD 31 AF D1 	call sdcomp_next_in_bitstream
  310 D1:B008 B7 -  -  -  	or a
  311 D1:B009 CA 0F B0 D1 	jp z,sdcomp_get_color_data_set_skip_3
  312 D1:B00D -  -  -  -  sdcomp_color_bit_2 .equ $ + 1 
  313 D1:B00D CB D3 -  -  	set 2,e 
  314 D1:B00F -  -  -  -  sdcomp_get_color_data_set_skip_3:
  315 D1:B00F -  -  -  -  	
  316 D1:B00F 37 -  -  -  	scf
  317 D1:B010 -  -  -  -  sdcomp_3bpc .equ $
  318 D1:B010 D2 24 B0 D1 	jp nc,sdcomp_get_color_from_index	
  319 D1:B014 -  -  -  -  
  320 D1:B014 -  -  -  -  ;4bpp, interpret as color data, not indexed	
  321 D1:B014 7E -  -  -  	ld a,(hl)
  322 D1:B015 A1 -  -  -  	and c 
  323 D1:B016 CD 31 AF D1 	call sdcomp_next_in_bitstream
  324 D1:B01A B7 -  -  -  	or a
  325 D1:B01B CA 21 B0 D1 	jp z,sdcomp_get_color_data_set_skip_4
  326 D1:B01F -  -  -  -  sdcomp_color_bit_3 .equ $ + 1 
  327 D1:B01F CB DB -  -  	set 3,e 
  328 D1:B021 -  -  -  -  sdcomp_get_color_data_set_skip_4:
  329 D1:B021 -  -  -  -  ;4bpp, interpret as color data, not indexed
  330 D1:B021 7B -  -  -  	ld a,e 
  331 D1:B022 D1 -  -  -  	pop de 
  332 D1:B023 C9 -  -  -  	ret 
  333 D1:B024 -  -  -  -  
  334 D1:B024 -  -  -  -  sdcomp_get_color_from_index: ; e holds index of color data, 1-8
  335 D1:B024 -  -  -  -  	
  336 D1:B024 -  -  -  -  	;ld a,$DD
  337 D1:B024 -  -  -  -  	;call write_a_to_ram
  338 D1:B024 -  -  -  -  	;ld a,e 
  339 D1:B024 -  -  -  -  	;call write_a_to_ram
  340 D1:B024 -  -  -  -  	
  341 D1:B024 -  -  -  -  	
  342 D1:B024 CB 53 -  -  	bit 2,e 
  343 D1:B026 CA 48 B0 D1 	jp z, sdcomp_get_color_from_index_2l
  344 D1:B02A -  -  -  -  	
  345 D1:B02A -  -  -  -  	;Bit 2 = 1 
  346 D1:B02A CB 4B -  -  	bit 1,e 
  347 D1:B02C CA 3C B0 D1 	jp z,sdcomp_get_color_from_index_2h1l
  348 D1:B030 -  -  -  -  
  349 D1:B030 -  -  -  -  	;bit 2 = 1 1 = 1
  350 D1:B030 -  -  -  -  sdcomp_indexed_color_data_4 .equ $ + 1	
  351 D1:B030 3E 00 -  -  	ld a,0
  352 D1:B032 CB 43 -  -  	bit 0,e 
  353 D1:B034 CA 6A B0 D1 	jp z,sdcomp_get_color_from_index_msn
  354 D1:B038 C3 66 B0 D1 	jp sdcomp_get_color_from_index_lsn
  355 D1:B03C -  -  -  -  
  356 D1:B03C -  -  -  -  sdcomp_get_color_from_index_2h1l:
  357 D1:B03C -  -  -  -  	;2 = 1 1 = 0 
  358 D1:B03C -  -  -  -  sdcomp_indexed_color_data_3 .equ $ + 1	
  359 D1:B03C 3E 00 -  -  	ld a,0
  360 D1:B03E CB 43 -  -  	bit 0,e 
  361 D1:B040 CA 6A B0 D1 	jp z,sdcomp_get_color_from_index_msn
  362 D1:B044 C3 66 B0 D1 	jp sdcomp_get_color_from_index_lsn
  363 D1:B048 -  -  -  -  	
  364 D1:B048 -  -  -  -  sdcomp_get_color_from_index_2l:
  365 D1:B048 -  -  -  -  	;bit 2 was 0 
  366 D1:B048 CB 4B -  -  	bit 1,e 
  367 D1:B04A CA 5A B0 D1 	jp z,sdcomp_get_color_from_index_2l1l
  368 D1:B04E -  -  -  -  	
  369 D1:B04E -  -  -  -  	;bit 2 = 0 1 = 1
  370 D1:B04E -  -  -  -  sdcomp_indexed_color_data_2 .equ $ + 1	
  371 D1:B04E 3E 00 -  -  	ld a,0
  372 D1:B050 CB 43 -  -  	bit 0,e 
  373 D1:B052 CA 6A B0 D1 	jp z,sdcomp_get_color_from_index_msn
  374 D1:B056 C3 66 B0 D1 	jp sdcomp_get_color_from_index_lsn
  375 D1:B05A -  -  -  -  	
  376 D1:B05A -  -  -  -  sdcomp_get_color_from_index_2l1l:
  377 D1:B05A -  -  -  -  	;bit 2 =0  1 = 0
  378 D1:B05A -  -  -  -  sdcomp_indexed_color_data_1 .equ $ + 1	
  379 D1:B05A 3E 00 -  -  	ld a,0
  380 D1:B05C -  -  -  -  	
  381 D1:B05C CB 43 -  -  	bit 0,e 
  382 D1:B05E CA 6A B0 D1 	jp z,sdcomp_get_color_from_index_msn
  383 D1:B062 C3 66 B0 D1 	jp sdcomp_get_color_from_index_lsn
  384 D1:B066 -  -  -  -  sdcomp_get_color_from_index_lsn:
  385 D1:B066 E6 0F -  -  	and %00001111;and with least significant nibble 
  386 D1:B068 D1 -  -  -  	pop de 
  387 D1:B069 -  -  -  -  	
  388 D1:B069 -  -  -  -  	;push af 
  389 D1:B069 -  -  -  -  	;ld a,$C0
  390 D1:B069 -  -  -  -  	;call write_a_to_ram
  391 D1:B069 -  -  -  -  	;pop af 
  392 D1:B069 -  -  -  -  	;call write_a_to_ram
  393 D1:B069 -  -  -  -  	
  394 D1:B069 C9 -  -  -  	ret 
  395 D1:B06A -  -  -  -  	
  396 D1:B06A -  -  -  -  sdcomp_get_color_from_index_msn:
  397 D1:B06A E6 F0 -  -  	and %11110000;and with most significant nibble 
  398 D1:B06C 0F -  -  -  	rrca 
  399 D1:B06D 0F -  -  -  	rrca 
  400 D1:B06E 0F -  -  -  	rrca 
  401 D1:B06F 0F -  -  -  	rrca 
  402 D1:B070 D1 -  -  -  	pop de 
  403 D1:B071 -  -  -  -  	
  404 D1:B071 -  -  -  -  	;push af 
  405 D1:B071 -  -  -  -  	;ld a,$C0
  406 D1:B071 -  -  -  -  	;call write_a_to_ram
  407 D1:B071 -  -  -  -  	;pop af 
  408 D1:B071 -  -  -  -  	;call write_a_to_ram
  409 D1:B071 -  -  -  -  	
  410 D1:B071 C9 -  -  -  	ret 
  411 D1:B072 -  -  -  -  
  412 D1:B072 -  -  -  -  
  413 D1:B072 -  -  -  -  
  414 D1:B072 -  -  -  -  ;function for traversing sprite data for reversed sprites.
  415 D1:B072 -  -  -  -  ;Reads forward through alpha and color data to end of line, so that it can then be read backwards 
  416 D1:B072 -  -  -  -  ;in shadow ,destroys a
  417 D1:B072 -  -  -  -  sdcomp_traverse_line_data:
  418 D1:B072 D9 -  -  -  	exx ;OUT 
  419 D1:B073 -  -  -  -  sdcomp_color_data_line_end_byte .equ $ + 1
  420 D1:B073 21 00 00 00 	ld hl,0 ;load end of previous color data line 
  421 D1:B077 -  -  -  -  sdcomp_color_data_line_end_mask .equ $ + 1
  422 D1:B077 0E 00 -  -  	ld c,0 ;load end of previous color data line
  423 D1:B079 D9 -  -  -  	exx;toshadow 
  424 D1:B07A -  -  -  -  	
  425 D1:B07A -  -  -  -  	;load end of previous alpha data line 
  426 D1:B07A -  -  -  -  sdcomp_alpha_data_line_end_byte .equ $ + 1
  427 D1:B07A 21 00 00 00 	ld hl,0
  428 D1:B07E -  -  -  -  sdcomp_alpha_data_line_end_mask .equ $ + 1
  429 D1:B07E 0E 00 -  -  	ld c,0
  430 D1:B080 -  -  -  -  sdcomp_traverse_initial:
  431 D1:B080 D5 -  -  -  	push de
  432 D1:B081 -  -  -  -  sdcomp_sprite_width .equ $ + 1
  433 D1:B081 1E 00 -  -  	ld e, 0
  434 D1:B083 -  -  -  -  	;e holds sprite width 
  435 D1:B083 -  -  -  -  	
  436 D1:B083 -  -  -  -  	;Read forward through alpha data and inc color pointer if alpha is 1 
  437 D1:B083 -  -  -  -  sdcomp_traverse_line_data_loop:
  438 D1:B083 CB 09 -  -  	rrc c 
  439 D1:B085 D2 8A B0 D1 	jp nc,sdcomp_traverse_line_data_alpha_inc_skip ;if not reached end of byte, skip
  440 D1:B089 23 -  -  -  	inc hl ;have reached end of alpha byte, inc hl 
  441 D1:B08A -  -  -  -  sdcomp_traverse_line_data_alpha_inc_skip:
  442 D1:B08A 7E -  -  -  	ld a,(hl)
  443 D1:B08B A1 -  -  -  	and c ;read alpha data 
  444 D1:B08C -  -  -  -  sdcomp_no_alpha_3 .equ $ ;jp c for no alpha sprites to always inc color 
  445 D1:B08C CA A2 B0 D1 	jp z,sdcomp_traverse_line_data_color_skip;if no alpha skip incrementing color. 
  446 D1:B090 D9 -  -  -  	exx;out of shadow 
  447 D1:B091 -  -  -  -  
  448 D1:B091 CB 09 -  -  	rrc c ;rotate mask
  449 D1:B093 -  -  -  -  sdcomp_traverse_2bpp .equ $ + 1
  450 D1:B093 CB 0F -  -  	rrc a ;replace with rrc c for 2bpc (not nop because rrc c is 2 byte operation)
  451 D1:B095 -  -  -  -  sdcomp_traverse_3bpp .equ $ + 1
  452 D1:B095 CB 0F -  -  	rrc a;rrc c for 3bpc
  453 D1:B097 -  -  -  -  sdcomp_traverse_4bpp .equ $ + 1
  454 D1:B097 CB 0F -  -  	rrc a;rrc c for 4 bpc 
  455 D1:B099 -  -  -  -  	
  456 D1:B099 -  -  -  -  	;check if end of byte was reached during rotations
  457 D1:B099 79 -  -  -  	ld a,c
  458 D1:B09A -  -  -  -  sdcomp_traverse_bit_check .equ $ + 1
  459 D1:B09A E6 F0 -  -  	and %11110000 ; 4bpc = 11110000 3bpc = 11100000, 2bpc 11000000 1bpc 10000000 TODO 
  460 D1:B09C CA A1 B0 D1 	jp z,sdcomp_traverse_line_data_color_inc_skip
  461 D1:B0A0 23 -  -  -  	inc hl ;inc hl if end of byte was reached 
  462 D1:B0A1 -  -  -  -  sdcomp_traverse_line_data_color_inc_skip:
  463 D1:B0A1 D9 -  -  -  	exx ;toshadow
  464 D1:B0A2 -  -  -  -  sdcomp_traverse_line_data_color_skip:
  465 D1:B0A2 1D -  -  -  	dec e ;e holds sprite width 
  466 D1:B0A3 C2 83 B0 D1 	jp nz,sdcomp_traverse_line_data_loop ;loop until end of line reached 
  467 D1:B0A7 D1 -  -  -  	pop de  ;back to write location 
  468 D1:B0A8 -  -  -  -  	;set new end of line pointers 
  469 D1:B0A8 -  -  -  -  	
  470 D1:B0A8 -  -  -  -  	;ld a,$BB 
  471 D1:B0A8 -  -  -  -  	;call write_a_to_ram 
  472 D1:B0A8 -  -  -  -  	;ld a,(hl) 
  473 D1:B0A8 -  -  -  -  	;call write_a_to_ram 
  474 D1:B0A8 -  -  -  -  	;ld a,c 
  475 D1:B0A8 -  -  -  -  	;call write_a_to_ram 
  476 D1:B0A8 -  -  -  -  	
  477 D1:B0A8 -  -  -  -  	
  478 D1:B0A8 22 7B B0 D1 	ld (sdcomp_alpha_data_line_end_byte),hl
  479 D1:B0AC 79 -  -  -  	ld a,c
  480 D1:B0AD 32 7F B0 D1 	ld (sdcomp_alpha_data_line_end_mask),a
  481 D1:B0B1 D9 -  -  -  	exx ;out
  482 D1:B0B2 22 74 B0 D1 	ld (sdcomp_color_data_line_end_byte),hl
  483 D1:B0B6 79 -  -  -  	ld a,c 
  484 D1:B0B7 32 78 B0 D1 	ld (sdcomp_color_data_line_end_mask),a
  485 D1:B0BB -  -  -  -  	
  486 D1:B0BB -  -  -  -  	;ld a,(hl) 
  487 D1:B0BB -  -  -  -  	;call write_a_to_ram 
  488 D1:B0BB -  -  -  -  	;ld a,c 
  489 D1:B0BB -  -  -  -  	;call write_a_to_ram 
  490 D1:B0BB -  -  -  -  	
  491 D1:B0BB D9 -  -  -  	exx;to shadow 
  492 D1:B0BC C9 -  -  -  	ret
  493 D1:B0BD -  -  -  -  
  494 D1:B0BD -  -  -  -  
  495 D1:B0BD -  -  -  -  
  496 D1:B0BD -  -  -  -  
  497 D1:B0BD -  -  -  -  
  498 D1:B0BD -  -  -  -  ;hl/c is color data, de is ldir write pos, b' is ldir length, not in shadow 
  499 D1:B0BD -  -  -  -  sdcomp_write_ldir_data_loop:
  500 D1:B0BD CD D6 AF D1 	call sdcomp_get_next_color
  501 D1:B0C1 47 -  -  -  	ld b,a;first pixel
  502 D1:B0C2 CD CD AF D1 	call sdcomp_get_next_color_leading_nibble
  503 D1:B0C6 B0 -  -  -  	or b
  504 D1:B0C7 -  -  -  -  	
  505 D1:B0C7 -  -  -  -  	
  506 D1:B0C7 12 -  -  -  	ld (de),a;write color data
  507 D1:B0C8 13 -  -  -  	inc de
  508 D1:B0C9 D9 -  -  -  	exx;to shadow
  509 D1:B0CA 05 -  -  -  	dec b;ldir length counter
  510 D1:B0CB D9 -  -  -  	exx
  511 D1:B0CC C2 BD B0 D1 	jp nz,sdcomp_write_ldir_data_loop
  512 D1:B0D0 C9 -  -  -  	ret
  513 D1:B0D1 -  -  -  -  	
  514 D1:B0D1 -  -  -  -  
  515 D1:B0D1 -  -  -  -  ;Not in shadow, a holds alpha data pair, writes color and mask data to output 
  516 D1:B0D1 -  -  -  -  sdcomp_write_leading_or_end_pixels:
  517 D1:B0D1 D5 -  -  -  	push de ;output location	
  518 D1:B0D2 47 -  -  -  	ld b,a;save for later
  519 D1:B0D3 CB 67 -  -  	bit 4,a ;check if first pixel has color 
  520 D1:B0D5 3E 00 -  -  	ld a,0
  521 D1:B0D7 16 FF -  -  	ld d,%11111111;pixel data mask assuming no colors 
  522 D1:B0D9 CA E3 B0 D1 	jp z,sdcomp_leading_pixel_first_skip
  523 D1:B0DD -  -  -  -  	;has first color
  524 D1:B0DD 16 F0 -  -  	ld d,%11110000;save second pixel of bg 
  525 D1:B0DF CD D6 AF D1 	call sdcomp_get_next_color
  526 D1:B0E3 -  -  -  -  sdcomp_leading_pixel_first_skip:
  527 D1:B0E3 -  -  -  -  	;a is either $00 or $0color1
  528 D1:B0E3 -  -  -  -  	
  529 D1:B0E3 1E FF -  -  	ld e,%11111111;assuming no colors
  530 D1:B0E5 -  -  -  -  	
  531 D1:B0E5 CB 40 -  -  	bit 0,b;check second pixel alpha
  532 D1:B0E7 47 -  -  -  	ld b,a;save for later 
  533 D1:B0E8 3E 00 -  -  	ld a,0
  534 D1:B0EA CA F4 B0 D1 	jp z,sdcomp_leading_pixel_second_skip;
  535 D1:B0EE -  -  -  -  	;has second color 
  536 D1:B0EE CD CD AF D1 	call sdcomp_get_next_color_leading_nibble
  537 D1:B0F2 -  -  -  -  	;a = color2 0 
  538 D1:B0F2 1E 0F -  -  	ld e,%00001111;save first pixel of bg
  539 D1:B0F4 -  -  -  -  	
  540 D1:B0F4 -  -  -  -  sdcomp_leading_pixel_second_skip:
  541 D1:B0F4 -  -  -  -  	;a is either 00 or c2 0 
  542 D1:B0F4 -  -  -  -  	;b is either 00 or 0 c1 
  543 D1:B0F4 B0 -  -  -  	or b 
  544 D1:B0F5 47 -  -  -  	ld b,a;final color data
  545 D1:B0F6 7A -  -  -  	ld a,d 
  546 D1:B0F7 A3 -  -  -  	and e ;final mask data 
  547 D1:B0F8 -  -  -  -  	
  548 D1:B0F8 D1 -  -  -  	pop de;return to pointer 
  549 D1:B0F9 -  -  -  -  	
  550 D1:B0F9 12 -  -  -  	ld (de),a;write mask data 
  551 D1:B0FA 13 -  -  -  	inc de 
  552 D1:B0FB 78 -  -  -  	ld a,b;color data 
  553 D1:B0FC 12 -  -  -  	ld (de),a;write color data 
  554 D1:B0FD -  -  -  -  	
  555 D1:B0FD -  -  -  -  	
  556 D1:B0FD -  -  -  -  	
  557 D1:B0FD -  -  -  -  	;call write_a_to_ram
  558 D1:B0FD -  -  -  -  	
  559 D1:B0FD 13 -  -  -  	inc de 
  560 D1:B0FE C9 -  -  -  	ret 
  561 D1:B0FF -  -  -  -  
  562 D1:B0FF -  -  -  -  
  563 D1:B0FF -  -  -  -  
  564 D1:B0FF -  -  -  -  ;ENTRY POINT 
  565 D1:B0FF -  -  -  -  
  566 D1:B0FF -  -  -  -  
  567 D1:B0FF -  -  -  -  ;hl = sprite data start, de = main data decompress location
  568 D1:B0FF -  -  -  -  sprite_decompress:
  569 D1:B0FF -  -  -  -  
  570 D1:B0FF -  -  -  -  
  571 D1:B0FF -  -  -  -  	;SETUP ===========================================================================================================
  572 D1:B0FF -  -  -  -  
  573 D1:B0FF -  -  -  -  	;SET UP BPC MODE AND ALPHA/NOALPHA
  574 D1:B0FF -  -  -  -  
  575 D1:B0FF -  -  -  -  	;HL pointing to flags registers
  576 D1:B0FF -  -  -  -  	;TODO set up bpc and alpha modes, Sprite type and offset. Write conditional jumps where needed
  577 D1:B0FF -  -  -  -  	;set bpc mode 
  578 D1:B0FF CB 7E -  -  	bit 7,(hl)
  579 D1:B101 C4 D5 B3 D1 	call nz,sdcomp_set_4bpc
  580 D1:B105 CB 76 -  -  	bit 6,(hl)
  581 D1:B107 C4 72 B3 D1 	call nz,sdcomp_set_3bpc 
  582 D1:B10B CB 6E -  -  	bit 5,(hl)
  583 D1:B10D C4 1F B3 D1 	call nz,sdcomp_set_2bpc 
  584 D1:B111 CB 66 -  -  	bit 4,(hl)
  585 D1:B113 C4 EA B2 D1 	call nz,sdcomp_set_1bpc 
  586 D1:B117 CB 5E -  -  	bit 3,(hl)
  587 D1:B119 C4 CF B2 D1 	call nz,sdcomp_set_0bpc 
  588 D1:B11D CB 56 -  -  	bit 2,(hl)
  589 D1:B11F C4 3C B4 D1 	call nz,sdcomp_set_noalpha
  590 D1:B123 CB 56 -  -  	bit 2,(hl)
  591 D1:B125 CC 4D B4 D1 	call z,sdcomp_reset_noalpha
  592 D1:B129 -  -  -  -  	
  593 D1:B129 -  -  -  -  	
  594 D1:B129 3E 00 -  -  	ld a,0
  595 D1:B12B 32 57 B2 D1 	ld (sdcomp_loops_per_line_counter),a ;reset loops counter
  596 D1:B12F 3E DA -  -  	ld a,%11011010;jp c 
  597 D1:B131 32 A9 AF D1 	ld(sdcomp_end_vitrual_zero_read),a ;reset vitrual zero read flag
  598 D1:B135 -  -  -  -  	;write height or width(BG) data to decompressed sprite 
  599 D1:B135 -  -  -  -  	
  600 D1:B135 23 -  -  -  	inc hl ;hl points to width in px 
  601 D1:B136 -  -  -  -  	
  602 D1:B136 -  -  -  -  	
  603 D1:B136 7E -  -  -  	ld a,(hl) 
  604 D1:B137 32 82 B0 D1 	ld (sdcomp_sprite_width),a ;TODO set width in required locations
  605 D1:B13B 32 8E AF D1 	ld (sdcomp_sprite_width_2),a
  606 D1:B13F 47 -  -  -  	ld b,a;width
  607 D1:B140 08 -  -  -  	ex af,af' ;'
  608 D1:B141 78 -  -  -  	ld a,b;Number of alpha bits remaining in row
  609 D1:B142 08 -  -  -  	ex af,af' ;' 
  610 D1:B143 -  -  -  -  
  611 D1:B143 -  -  -  -  
  612 D1:B143 -  -  -  -  sdcomp_offset_2 .equ $ 
  613 D1:B143 00 -  -  -  	nop ;replace with inc b for offset 
  614 D1:B144 -  -  -  -  
  615 D1:B144 -  -  -  -  	;Calculate number of bytes to skip between rows for gap length  
  616 D1:B144 04 -  -  -  	inc b ;round up on odd sprites
  617 D1:B145 CB 38 -  -  	srl b;divide by 2
  618 D1:B147 -  -  -  -  	
  619 D1:B147 -  -  -  -  	
  620 D1:B147 3E A0 -  -  	ld a,160
  621 D1:B149 90 -  -  -  	sub b ;a holds 160 - (width in pairs)
  622 D1:B14A 32 CE B1 D1 	ld (sdcomp_gap_btwn_rows),a 
  623 D1:B14E -  -  -  -  	
  624 D1:B14E -  -  -  -  	;call write_a_to_ram
  625 D1:B14E -  -  -  -  	;ld a,$BE
  626 D1:B14E -  -  -  -  	;call write_a_to_ram
  627 D1:B14E -  -  -  -  	;ld a,b 
  628 D1:B14E -  -  -  -  	;call write_a_to_ram
  629 D1:B14E -  -  -  -  	
  630 D1:B14E -  -  -  -  	
  631 D1:B14E 7E -  -  -  	ld a,(hl);load width again
  632 D1:B14F -  -  -  -  	
  633 D1:B14F 47 -  -  -  	ld b,a 
  634 D1:B150 -  -  -  -  	
  635 D1:B150 -  -  -  -  
  636 D1:B150 23 -  -  -  	inc hl ;hl points to height 
  637 D1:B151 7E -  -  -  	ld a,(hl);height
  638 D1:B152 32 68 AF D1 	ld (sdcomp_lines_remaining),a ;write height to lines remaining counter
  639 D1:B156 -  -  -  -  	
  640 D1:B156 -  -  -  -  	
  641 D1:B156 -  -  -  -  
  642 D1:B156 12 -  -  -  	ld (de), a ;write height to first byte of sprite data 
  643 D1:B157 13 -  -  -  	inc de 
  644 D1:B158 -  -  -  -  	
  645 D1:B158 23 -  -  -  	inc hl ;HL points to start of alpha data 
  646 D1:B159 -  -  -  -  
  647 D1:B159 E5 -  -  -  	push hl ;Save alpha data 
  648 D1:B15A -  -  -  -  	
  649 D1:B15A -  -  -  -  	
  650 D1:B15A -  -  -  -  	;Need to find start of color data
  651 D1:B15A -  -  -  -  	;at this point a = height, b = width 
  652 D1:B15A -  -  -  -  	
  653 D1:B15A 37 -  -  -  	scf
  654 D1:B15B -  -  -  -  	
  655 D1:B15B -  -  -  -  sdcomp_no_alpha_2 .equ $
  656 D1:B15B D2 74 B1 D1 	jp nc,sdcomp_no_alpha_2_skip ; if no alpha skip this part
  657 D1:B15F -  -  -  -  	
  658 D1:B15F -  -  -  -  	;need to find number of pixels, div by 8 and skip that many bytes
  659 D1:B15F -  -  -  -  	
  660 D1:B15F E5 -  -  -  	push hl
  661 D1:B160 67 -  -  -  	ld h,a;height
  662 D1:B161 68 -  -  -  	ld l,b;width
  663 D1:B162 ED 6C -  -  	mlt hl;number of pixels
  664 D1:B164 -  -  -  -  	;rounds up to nearest multiple of 8
  665 D1:B164 2B -  -  -  	dec hl
  666 D1:B165 CB 3C -  -  	srl h
  667 D1:B167 CB 1D -  -  	rr l
  668 D1:B169 CB 3C -  -  	srl h
  669 D1:B16B CB 1D -  -  	rr l 
  670 D1:B16D CB 3C -  -  	srl h 
  671 D1:B16F CB 1D -  -  	rr l 
  672 D1:B171 23 -  -  -  	inc hl 
  673 D1:B172 C1 -  -  -  	pop bc ;initial hl location
  674 D1:B173 -  -  -  -  	;add number of bytes to skip 
  675 D1:B173 09 -  -  -  	add hl,bc ;HL points to start of color data 
  676 D1:B174 -  -  -  -  	
  677 D1:B174 -  -  -  -  	
  678 D1:B174 -  -  -  -  	
  679 D1:B174 -  -  -  -  sdcomp_no_alpha_2_skip:
  680 D1:B174 -  -  -  -  
  681 D1:B174 -  -  -  -  	
  682 D1:B174 -  -  -  -  	;HL POINTING TO COLOR PALETTE DATA
  683 D1:B174 -  -  -  -  
  684 D1:B174 -  -  -  -  	
  685 D1:B174 47 -  -  -  	ld b,a ;save for after
  686 D1:B175 -  -  -  -  	;GET LOCAL PALETTE DATA
  687 D1:B175 -  -  -  -  	
  688 D1:B175 37 -  -  -  	scf 
  689 D1:B176 -  -  -  -  sdcomp_1bpc_1 .equ $ 
  690 D1:B176 D2 80 B1 D1 	jp nc,sdcomp_1bpc_1_skip ;skip if not 1bpc or 2bpc or 3bpc
  691 D1:B17A -  -  -  -  	
  692 D1:B17A 7E -  -  -  	ld a,(hl);color data 	
  693 D1:B17B 32 5B B0 D1 	ld (sdcomp_indexed_color_data_1),a 
  694 D1:B17F 23 -  -  -  	inc hl 
  695 D1:B180 -  -  -  -  	
  696 D1:B180 -  -  -  -  sdcomp_1bpc_1_skip:	
  697 D1:B180 -  -  -  -  
  698 D1:B180 -  -  -  -  
  699 D1:B180 37 -  -  -  	scf 
  700 D1:B181 -  -  -  -  sdcomp_2bpc_1 .equ $ 
  701 D1:B181 D2 8B B1 D1 	jp nc,sdcomp_2bpc_1_skip ;skip if not 2bpc or 3bpc
  702 D1:B185 -  -  -  -  	
  703 D1:B185 7E -  -  -  	ld a,(hl);color data 
  704 D1:B186 32 4F B0 D1 	ld (sdcomp_indexed_color_data_2),a 
  705 D1:B18A 23 -  -  -  	inc hl 
  706 D1:B18B -  -  -  -  	
  707 D1:B18B -  -  -  -  sdcomp_2bpc_1_skip:	
  708 D1:B18B -  -  -  -  
  709 D1:B18B -  -  -  -  
  710 D1:B18B 37 -  -  -  	scf 
  711 D1:B18C -  -  -  -  sdcomp_3bpc_1 .equ $ 
  712 D1:B18C DA 9C B1 D1 	jp c,sdcomp_3bpc_1_skip ;skip if not 3bpc
  713 D1:B190 -  -  -  -  	
  714 D1:B190 7E -  -  -  	ld a,(hl);color data 
  715 D1:B191 32 3D B0 D1 	ld (sdcomp_indexed_color_data_3),a 
  716 D1:B195 23 -  -  -  	inc hl 
  717 D1:B196 7E -  -  -  	ld a,(hl);color data 
  718 D1:B197 32 31 B0 D1 	ld (sdcomp_indexed_color_data_4),a 
  719 D1:B19B 23 -  -  -  	inc hl 
  720 D1:B19C -  -  -  -  	
  721 D1:B19C -  -  -  -  sdcomp_3bpc_1_skip:	
  722 D1:B19C -  -  -  -  
  723 D1:B19C -  -  -  -  	
  724 D1:B19C D5 -  -  -  	push de ;loops/line data location
  725 D1:B19D EB -  -  -  	ex de,hl
  726 D1:B19E 78 -  -  -  	ld a,b
  727 D1:B19F 01 00 00 00 	ld bc,0
  728 D1:B1A3 4F -  -  -  	ld c,a;height 
  729 D1:B1A4 09 -  -  -  	add hl,bc
  730 D1:B1A5 EB -  -  -  	ex de,hl;de points to data write location
  731 D1:B1A6 -  -  -  -  	
  732 D1:B1A6 -  -  -  -  	
  733 D1:B1A6 D9 -  -  -  	exx;in to shadow
  734 D1:B1A7 D1 -  -  -  	pop de 
  735 D1:B1A8 E1 -  -  -  	pop hl ;alpha data stored from earlier
  736 D1:B1A9 0E 80 -  -  	ld c,%10000000;alpha mask
  737 D1:B1AB D9 -  -  -  	exx;out 
  738 D1:B1AC 0E 80 -  -  	ld c,%10000000;color mask
  739 D1:B1AE -  -  -  -  	
  740 D1:B1AE -  -  -  -  	;HL now points to pixel color data 
  741 D1:B1AE -  -  -  -  	;HL' points to pixel alpha data 
  742 D1:B1AE -  -  -  -  	;C holds color mask
  743 D1:B1AE -  -  -  -  	;C' holds alpha mask
  744 D1:B1AE -  -  -  -  	;DE' holds loops/line output data location
  745 D1:B1AE -  -  -  -  	;DE holds main data output location
  746 D1:B1AE -  -  -  -  	;A holds height
  747 D1:B1AE -  -  -  -  	;A' holds bits remaining in row
  748 D1:B1AE -  -  -  -  
  749 D1:B1AE -  -  -  -  
  750 D1:B1AE 37 -  -  -  	scf 
  751 D1:B1AF -  -  -  -  sdcomp_flip_setup .equ $
  752 D1:B1AF DA BF B1 D1 	jp c,sdcomp_find_gap_length;continue if no flip
  753 D1:B1B3 -  -  -  -  
  754 D1:B1B3 -  -  -  -  	
  755 D1:B1B3 2B -  -  -  	dec hl;dec color pointer
  756 D1:B1B4 0E 01 -  -  	ld c, %00000001
  757 D1:B1B6 D9 -  -  -  	exx;to shadow 
  758 D1:B1B7 2B -  -  -  	dec hl;dec alpha pointer
  759 D1:B1B8 0E 01 -  -  	ld c, %00000001;alpha mask
  760 D1:B1BA CD 80 B0 D1 	call sdcomp_traverse_initial
  761 D1:B1BE D9 -  -  -  	exx ;out of shadow 
  762 D1:B1BF -  -  -  -  	
  763 D1:B1BF -  -  -  -  	
  764 D1:B1BF -  -  -  -  
  765 D1:B1BF -  -  -  -  	;TODO jump to BG routine here
  766 D1:B1BF -  -  -  -  	;END SETUP ======================================================================================================
  767 D1:B1BF -  -  -  -  	
  768 D1:B1BF -  -  -  -  	
  769 D1:B1BF -  -  -  -  sdcomp_find_gap_length:
  770 D1:B1BF -  -  -  -  	
  771 D1:B1BF -  -  -  -  	
  772 D1:B1BF -  -  -  -  	
  773 D1:B1BF -  -  -  -  ;If virtual 0 was read as the start of an alpha pair, remove 1 from next gap length 
  774 D1:B1BF -  -  -  -  ;this will occur if:
  775 D1:B1BF -  -  -  -  ;Starting pixels are at the end of line, eg :00000001. ldir length = 0 as virtual 0s are read. interline length should be reduced by 1 
  776 D1:B1BF -  -  -  -  ;
  777 D1:B1BF -  -  -  -  ;if during ldir search, line data ends in 11, followed by virtual 00. In this case the 11 is the ending pixels if slow sprite, so gap length should not be reduced
  778 D1:B1BF -  -  -  -  ; This is done from the addition of 1 gap length whenever the 11->00 case occurs, canceling the interline reduction due to reading vitrual 00. 
  779 D1:B1BF -  -  -  -  	
  780 D1:B1BF D9 -  -  -  	exx ;to shadow
  781 D1:B1C0 -  -  -  -  	
  782 D1:B1C0 -  -  -  -  sdcomp_add_1_gap_length .equ $ + 1
  783 D1:B1C0 06 00 -  -  	ld b,0;00 pairs found 
  784 D1:B1C2 3E 00 -  -  	ld a,0 ;reset
  785 D1:B1C4 32 C1 B1 D1 	ld (sdcomp_add_1_gap_length),a 
  786 D1:B1C8 -  -  -  -  
  787 D1:B1C8 -  -  -  -  sdcomp_find_gap_length_loop:
  788 D1:B1C8 -  -  -  -  
  789 D1:B1C8 37 -  -  -  	scf 
  790 D1:B1C9 -  -  -  -  sdcomp_end_of_line_gaplength .equ $ 
  791 D1:B1C9 DA F2 B1 D1 	jp c, sdcomp_end_of_line_gaplength_skip
  792 D1:B1CD -  -  -  -  	
  793 D1:B1CD -  -  -  -  	;We have reached the end of the alpha data, add between line gap length 
  794 D1:B1CD -  -  -  -  sdcomp_gap_btwn_rows .equ $ + 1
  795 D1:B1CD 3E 00 -  -  	ld a,0
  796 D1:B1CF 80 -  -  -  	add a,b 
  797 D1:B1D0 -  -  -  -  sdcomp_dec_gap_btwn_rows .equ $ 	
  798 D1:B1D0 00 -  -  -  	nop ;replace with dec a to decrease gap length 
  799 D1:B1D1 47 -  -  -  	ld b,a 
  800 D1:B1D2 3E 00 -  -  	ld a,%00000000 ;nop 
  801 D1:B1D4 32 D0 B1 D1 	ld (sdcomp_dec_gap_btwn_rows),a ;reset dec gap
  802 D1:B1D8 3E DA -  -  	ld a,%11011010;jp c
  803 D1:B1DA 32 39 AF D1 	ld (sdcomp_end_of_line_alp),a ;Reset virtual zero flag, reading alpha data will now be the next line 
  804 D1:B1DE 32 C9 B1 D1 	ld (sdcomp_end_of_line_gaplength),a ;Reset flag for adding interline gaplength 
  805 D1:B1E2 -  -  -  -  	
  806 D1:B1E2 37 -  -  -  	scf
  807 D1:B1E3 -  -  -  -  sdcomp_flip_traverse .equ $
  808 D1:B1E3 D4 72 B0 D1 	call nc,sdcomp_traverse_line_data ;call line data traverse if flip
  809 D1:B1E7 -  -  -  -  		
  810 D1:B1E7 -  -  -  -  	;Write loops/line data as we have reached a gap btwn lines 
  811 D1:B1E7 3A 57 B2 D1 	ld a,(sdcomp_loops_per_line_counter)
  812 D1:B1EB 12 -  -  -  	ld (de),a ;write loops/line data 
  813 D1:B1EC 13 -  -  -  	inc de
  814 D1:B1ED -  -  -  -  	
  815 D1:B1ED -  -  -  -  	
  816 D1:B1ED 37 -  -  -  	scf 
  817 D1:B1EE -  -  -  -  sdcomp_end_reached_flag .equ $;check if end of sprite reached
  818 D1:B1EE D2 C6 B2 D1 	jp nc,sdcomp_end
  819 D1:B1F2 -  -  -  -  
  820 D1:B1F2 -  -  -  -  	
  821 D1:B1F2 -  -  -  -  sdcomp_end_of_line_gaplength_skip:
  822 D1:B1F2 CD 91 AF D1 	call sdcomp_get_next_alpha_pair
  823 D1:B1F6 -  -  -  -  	;call write_a_to_ram
  824 D1:B1F6 04 -  -  -  	inc b 
  825 D1:B1F7 -  -  -  -  
  826 D1:B1F7 -  -  -  -  	;push af ;TEST
  827 D1:B1F7 -  -  -  -  	;ld a,$AB;TEST
  828 D1:B1F7 -  -  -  -  	;call write_a_to_ram
  829 D1:B1F7 -  -  -  -  	
  830 D1:B1F7 -  -  -  -  	;call write_a_to_ram
  831 D1:B1F7 -  -  -  -  	;pop af ;TEST
  832 D1:B1F7 -  -  -  -  	
  833 D1:B1F7 B7 -  -  -  	or a
  834 D1:B1F8 CA C8 B1 D1 	jp z,sdcomp_find_gap_length_loop
  835 D1:B1FC -  -  -  -  	
  836 D1:B1FC -  -  -  -  ;END OF GAP LENGTH LOOP =====================	
  837 D1:B1FC -  -  -  -  	
  838 D1:B1FC F5 -  -  -  	push af; save leading pixel alpha data 
  839 D1:B1FD -  -  -  -  	;B holds number of 00 pairs + 1
  840 D1:B1FD -  -  -  -  	
  841 D1:B1FD -  -  -  -  	;ld a,$AA ;test
  842 D1:B1FD -  -  -  -  	;call write_a_to_ram
  843 D1:B1FD -  -  -  -  	;ld a,b ;test
  844 D1:B1FD -  -  -  -  	;call write_a_to_ram
  845 D1:B1FD -  -  -  -  	
  846 D1:B1FD -  -  -  -  	
  847 D1:B1FD -  -  -  -  	
  848 D1:B1FD -  -  -  -  	;Write gap length data to output
  849 D1:B1FD 78 -  -  -  	ld a,b 
  850 D1:B1FE D9 -  -  -  	exx;out of shadow 
  851 D1:B1FF 12 -  -  -  	ld (de),a;GAP LENGTH 
  852 D1:B200 13 -  -  -  	inc de 
  853 D1:B201 D9 -  -  -  	exx;into shadow 	
  854 D1:B202 -  -  -  -  	
  855 D1:B202 -  -  -  -  	
  856 D1:B202 -  -  -  -  ;LEADING PIXELS ===================================================================================================
  857 D1:B202 F1 -  -  -  	pop af ;a holds leading pixel pair alpha data (FF,0F,F0)
  858 D1:B203 -  -  -  -  	
  859 D1:B203 37 -  -  -  	scf 
  860 D1:B204 -  -  -  -  sdcomp_fast_1 .equ $ 
  861 D1:B204 D2 0E B2 D1 	jp nc, sdcomp_ldir_start 
  862 D1:B208 -  -  -  -  	
  863 D1:B208 D9 -  -  -  	exx;out of shadow
  864 D1:B209 CD D1 B0 D1 	call sdcomp_write_leading_or_end_pixels
  865 D1:B20D D9 -  -  -  	exx;into shadow 
  866 D1:B20E -  -  -  -  	
  867 D1:B20E -  -  -  -  
  868 D1:B20E -  -  -  -  	
  869 D1:B20E -  -  -  -  ;LDIR ==============================================================================================================	
  870 D1:B20E -  -  -  -  	;Count number of 11 pairs for LDIR section
  871 D1:B20E -  -  -  -  	;If end of line reached we know last pixels must be the ending pair
  872 D1:B20E -  -  -  -  	;
  873 D1:B20E -  -  -  -  	
  874 D1:B20E -  -  -  -  	;If ending is 11 -> 00 
  875 D1:B20E -  -  -  -  	;11 pair will need to become ending pixels if slow sprite
  876 D1:B20E -  -  -  -  	;Will need to reduce b by 1 
  877 D1:B20E -  -  -  -  	
  878 D1:B20E -  -  -  -  	;If ending is 11 ->01/10
  879 D1:B20E -  -  -  -  	;last pair wil become ending pixels, dont reduce b 
  880 D1:B20E -  -  -  -  	
  881 D1:B20E -  -  -  -  sdcomp_ldir_start:
  882 D1:B20E -  -  -  -  
  883 D1:B20E -  -  -  -  ;	ld a, %11010010 ;jp nc 
  884 D1:B20E -  -  -  -  ;	ld (sdcomp_end_of_line_2) , a ;reset end of line flag 
  885 D1:B20E -  -  -  -  
  886 D1:B20E 06 00 -  -  	ld b,0; will hold number of 11 pairs found
  887 D1:B210 -  -  -  -  sdcomp_ldir_loop:
  888 D1:B210 CD 91 AF D1 	call sdcomp_get_next_alpha_pair ;get alpha data
  889 D1:B214 04 -  -  -  	inc b 
  890 D1:B215 -  -  -  -  	
  891 D1:B215 -  -  -  -  	;push af 
  892 D1:B215 -  -  -  -  	;ld a,$DE 
  893 D1:B215 -  -  -  -  	;call write_a_to_ram
  894 D1:B215 -  -  -  -  	;pop af
  895 D1:B215 -  -  -  -  	;call write_a_to_ram
  896 D1:B215 -  -  -  -  	
  897 D1:B215 -  -  -  -  ;	scf 
  898 D1:B215 -  -  -  -  ;sdcomp_end_of_line_2 .equ $ ;set when end of line reached 
  899 D1:B215 -  -  -  -  ;	jp nc, sdcomp_ldir_loop_end;If read last in line
  900 D1:B215 -  -  -  -  	
  901 D1:B215 EE FF -  -  	xor %11111111 ;flip all bits  (CPL does not set flags :(  )
  902 D1:B217 CA 10 B2 D1 	jp z, sdcomp_ldir_loop; if a is 0 means a was $FF 
  903 D1:B21B 2F -  -  -  	cpl ; flip back 
  904 D1:B21C -  -  -  -  sdcomp_ldir_loop_end:
  905 D1:B21C -  -  -  -  
  906 D1:B21C -  -  -  -  	
  907 D1:B21C -  -  -  -  	;at this point b holds # 11 pairs +1 
  908 D1:B21C 37 -  -  -  	scf 
  909 D1:B21D -  -  -  -  sdcomp_fast_2 .equ $ 
  910 D1:B21D D2 38 B2 D1 	jp nc,sdcomp_ldir_write ;jump before dec b because we have read first 11 pair in searching for gaplength 
  911 D1:B221 -  -  -  -  
  912 D1:B221 -  -  -  -  	
  913 D1:B221 -  -  -  -  	
  914 D1:B221 05 -  -  -  	dec b ;b holds # 11 pairs 
  915 D1:B222 CA 4B B2 D1 	jp z,sdcomp_no_ldir;no pairs found,no ldir length
  916 D1:B226 B7 -  -  -  	or a
  917 D1:B227 C2 38 B2 D1 	jp nz,sdcomp_ldir_write;ends not in 00, has single ending pixel
  918 D1:B22B -  -  -  -  	
  919 D1:B22B -  -  -  -  	;ends in 11 -> 00,ending pixels will be 11 if slow sprite. If fast, jump to ldir write here 
  920 D1:B22B -  -  -  -  	
  921 D1:B22B -  -  -  -  	;ld a,$DF
  922 D1:B22B -  -  -  -  	;call write_a_to_ram
  923 D1:B22B -  -  -  -  	
  924 D1:B22B -  -  -  -  	;must add 1 to next gap length, have already read first 00
  925 D1:B22B -  -  -  -  	;for the case with virtual 00, this cancels the decrease in gap length 
  926 D1:B22B 3E 01 -  -  	ld a,1;start w 1 gap len
  927 D1:B22D 32 C1 B1 D1 	ld (sdcomp_add_1_gap_length),a 
  928 D1:B231 3E FF -  -  	ld a,$ff;ending pixels 11
  929 D1:B233 -  -  -  -  	
  930 D1:B233 05 -  -  -  	dec b;reduce length by 1, final pair is end pixels
  931 D1:B234 CA 4B B2 D1 	jp z,sdcomp_no_ldir;no ldir length,ending pixels is 11 
  932 D1:B238 -  -  -  -  	;b holds ldir length 
  933 D1:B238 -  -  -  -  	
  934 D1:B238 -  -  -  -  
  935 D1:B238 -  -  -  -  ;b holds ldir length, a holds ending pixels
  936 D1:B238 -  -  -  -  sdcomp_ldir_write:
  937 D1:B238 -  -  -  -  
  938 D1:B238 -  -  -  -  	;b holds 11 pairs found 
  939 D1:B238 -  -  -  -  	
  940 D1:B238 -  -  -  -  	;push af;TEST
  941 D1:B238 -  -  -  -  	;ld a,$DA 
  942 D1:B238 -  -  -  -  	;call write_a_to_ram
  943 D1:B238 -  -  -  -  	;ld a,b 
  944 D1:B238 -  -  -  -  	;call write_a_to_ram
  945 D1:B238 -  -  -  -  	;pop af ;TEST
  946 D1:B238 -  -  -  -  
  947 D1:B238 F5 -  -  -  	push af;save ending pixels
  948 D1:B239 78 -  -  -  	ld a,b
  949 D1:B23A D9 -  -  -  	exx ;out 
  950 D1:B23B 12 -  -  -  	ld (de),a;write ldir length
  951 D1:B23C 13 -  -  -  	inc de 
  952 D1:B23D CD BD B0 D1 	call sdcomp_write_ldir_data_loop
  953 D1:B241 -  -  -  -  
  954 D1:B241 F1 -  -  -  	pop af;return ending pixels
  955 D1:B242 -  -  -  -  	
  956 D1:B242 37 -  -  -  	scf
  957 D1:B243 -  -  -  -  sdcomp_fast_3 .equ $ 
  958 D1:B243 D2 56 B2 D1 	jp nc,sdcomp_inc_loops_per_line ;skip ending pixels
  959 D1:B247 -  -  -  -  	
  960 D1:B247 C3 52 B2 D1 	jp sdcomp_write_end_pixels
  961 D1:B24B -  -  -  -  sdcomp_no_ldir:;no ldir length, a holds ending pixels,00,10,01,11
  962 D1:B24B -  -  -  -  
  963 D1:B24B -  -  -  -  
  964 D1:B24B -  -  -  -  	;push af ;TEST
  965 D1:B24B -  -  -  -  	;ld a,$DB
  966 D1:B24B -  -  -  -  	;call write_a_to_ram
  967 D1:B24B -  -  -  -  	;pop af ;TEST
  968 D1:B24B -  -  -  -  	;call write_a_to_ram
  969 D1:B24B -  -  -  -  
  970 D1:B24B F5 -  -  -  	push af;save end pixels
  971 D1:B24C -  -  -  -  	
  972 D1:B24C D9 -  -  -  	exx;out of shadow
  973 D1:B24D 3E 00 -  -  	ld a,0
  974 D1:B24F 12 -  -  -  	ld (de),a ;write 0 as ldir length
  975 D1:B250 13 -  -  -  	inc de 
  976 D1:B251 F1 -  -  -  	pop af;return ending pixels
  977 D1:B252 -  -  -  -  
  978 D1:B252 -  -  -  -  ;WRITE ENDING PIXELS ======================================================================================
  979 D1:B252 -  -  -  -  
  980 D1:B252 -  -  -  -  sdcomp_write_end_pixels:
  981 D1:B252 -  -  -  -  ;not in shadow
  982 D1:B252 -  -  -  -  	
  983 D1:B252 -  -  -  -  	;test
  984 D1:B252 -  -  -  -  	;push af 
  985 D1:B252 -  -  -  -  	;ld a,$E0
  986 D1:B252 -  -  -  -  	;call write_a_to_ram
  987 D1:B252 -  -  -  -  	;pop af 
  988 D1:B252 -  -  -  -  	
  989 D1:B252 -  -  -  -  
  990 D1:B252 CD D1 B0 D1 	call sdcomp_write_leading_or_end_pixels
  991 D1:B256 -  -  -  -  	
  992 D1:B256 -  -  -  -  	
  993 D1:B256 -  -  -  -  ;sdcomp_test_lines_stop .equ $ + 1 
  994 D1:B256 -  -  -  -  	;ld a,2
  995 D1:B256 -  -  -  -  	;dec a 
  996 D1:B256 -  -  -  -  	;jp z,sdcomp_end
  997 D1:B256 -  -  -  -  	;ld (sdcomp_test_lines_stop),a 
  998 D1:B256 -  -  -  -  
  999 D1:B256 -  -  -  -  sdcomp_inc_loops_per_line:	
 1000 D1:B256 -  -  -  -  	;INC LOOP/LINE count
 1001 D1:B256 -  -  -  -  sdcomp_loops_per_line_counter .equ $ + 1
 1002 D1:B256 3E 00 -  -  	ld a,0;inc number of loops
 1003 D1:B258 3C -  -  -  	inc a 
 1004 D1:B259 32 57 B2 D1 	ld (sdcomp_loops_per_line_counter),a
 1005 D1:B25D -  -  -  -  
 1006 D1:B25D -  -  -  -  
 1007 D1:B25D -  -  -  -  	;jp sdcomp_find_gap_length ;TESTING REMOVE
 1008 D1:B25D -  -  -  -  	
 1009 D1:B25D -  -  -  -  	;Check the timer to see if we need to begin rendering next frame 
 1010 D1:B25D -  -  -  -  	;1090 cycles @ 32768hz ~= 1 frame (1/30s)
 1011 D1:B25D -  -  -  -  	;Should stop decompressions at 1000 cycles?
 1012 D1:B25D -  -  -  -  	; = %00000011, 11101000
 1013 D1:B25D -  -  -  -  sdcomp_clock_check_loop:
 1014 D1:B25D 3A 01 00 F2 	ld a,($F20001);128hz clock
 1015 D1:B261 FE 03 -  -  	cp %00000011 ;check if reached 3 
 1016 D1:B263 DA BF B1 D1 	jp c,sdcomp_find_gap_length ;msb <= 2, can continue  
 1017 D1:B267 3A 00 00 F2 	ld a,($F20000);32768hz clock
 1018 D1:B26B FE E8 -  -  	cp %11101000;check if reached value 
 1019 D1:B26D DA BF B1 D1 	jp c,sdcomp_find_gap_length ;msb = 3 and lsb < value, can continue
 1020 D1:B271 -  -  -  -  	
 1021 D1:B271 -  -  -  -  	;Past clock threshold, need to stop decompressions
 1022 D1:B271 -  -  -  -  
 1023 D1:B271 -  -  -  -  
 1024 D1:B271 -  -  -  -  	;TODO can prob not need to save (a) register
 1025 D1:B271 -  -  -  -  sdcomp_interrupt:
 1026 D1:B271 -  -  -  -  
 1027 D1:B271 -  -  -  -  
 1028 D1:B271 -  -  -  -  	;not in shadow 
 1029 D1:B271 22 A3 B2 D1 	ld (sdcomp_cont_hl),hl 
 1030 D1:B275 EB -  -  -  	ex de,hl
 1031 D1:B276 22 A7 B2 D1 	ld (sdcomp_cont_de),hl 
 1032 D1:B27A C5 -  -  -  	push bc
 1033 D1:B27B E1 -  -  -  	pop hl
 1034 D1:B27C 22 AB B2 D1 	ld (sdcomp_cont_bc),hl
 1035 D1:B280 32 AF B2 D1 	ld (sdcomp_cont_a),a 
 1036 D1:B284 D9 -  -  -  	exx 
 1037 D1:B285 08 -  -  -  	ex af,af' ;'
 1038 D1:B286 22 B3 B2 D1 	ld (sdcomp_cont_hlP),hl 
 1039 D1:B28A EB -  -  -  	ex de,hl
 1040 D1:B28B 22 B7 B2 D1 	ld (sdcomp_cont_deP),hl 
 1041 D1:B28F C5 -  -  -  	push bc 
 1042 D1:B290 E1 -  -  -  	pop hl
 1043 D1:B291 22 BB B2 D1 	ld (sdcomp_cont_bcP),hl
 1044 D1:B295 32 BF B2 D1 	ld (sdcomp_cont_aP),a 
 1045 D1:B299 -  -  -  -  	
 1046 D1:B299 -  -  -  -  	
 1047 D1:B299 3E AA -  -  	ld a, $AA
 1048 D1:B29B CD 9B AB D1 	call write_a_to_ram
 1049 D1:B29F -  -  -  -  	
 1050 D1:B29F 3E 01 -  -  	ld a,1 ;Return 1 if interrupted
 1051 D1:B2A1 C9 -  -  -  	ret 
 1052 D1:B2A2 -  -  -  -  	
 1053 D1:B2A2 -  -  -  -  sdcomp_continue:
 1054 D1:B2A2 -  -  -  -  	;not in shadow 
 1055 D1:B2A2 -  -  -  -  sdcomp_cont_hl .equ $ + 1
 1056 D1:B2A2 21 00 00 00 	ld hl,0
 1057 D1:B2A6 -  -  -  -  sdcomp_cont_de .equ $ + 1
 1058 D1:B2A6 11 00 00 00 	ld de,0
 1059 D1:B2AA -  -  -  -  sdcomp_cont_bc .equ $ + 1
 1060 D1:B2AA 01 00 00 00 	ld bc,0
 1061 D1:B2AE -  -  -  -  sdcomp_cont_a .equ $ + 1
 1062 D1:B2AE 3E 00 -  -  	ld a,0
 1063 D1:B2B0 D9 -  -  -  	exx 
 1064 D1:B2B1 08 -  -  -  	ex af,af' ;'
 1065 D1:B2B2 -  -  -  -  sdcomp_cont_hlP .equ $ + 1
 1066 D1:B2B2 21 00 00 00 	ld hl,0
 1067 D1:B2B6 -  -  -  -  sdcomp_cont_deP .equ $ + 1
 1068 D1:B2B6 11 00 00 00 	ld de,0
 1069 D1:B2BA -  -  -  -  sdcomp_cont_bcP .equ $ + 1
 1070 D1:B2BA 01 00 00 00 	ld bc,0
 1071 D1:B2BE -  -  -  -  sdcomp_cont_aP .equ $ + 1
 1072 D1:B2BE 3E 00 -  -  	ld a,0	
 1073 D1:B2C0 -  -  -  -  	
 1074 D1:B2C0 D9 -  -  -  	exx ;out of shadow 
 1075 D1:B2C1 08 -  -  -  	ex af,af' ;'
 1076 D1:B2C2 -  -  -  -  
 1077 D1:B2C2 C3 BF B1 D1 	jp sdcomp_find_gap_length
 1078 D1:B2C6 -  -  -  -  
 1079 D1:B2C6 -  -  -  -  	
 1080 D1:B2C6 -  -  -  -  
 1081 D1:B2C6 -  -  -  -  sdcomp_end:
 1082 D1:B2C6 -  -  -  -  	
 1083 D1:B2C6 -  -  -  -  	;ld a,$69
 1084 D1:B2C6 -  -  -  -  	;call write_a_to_ram
 1085 D1:B2C6 -  -  -  -  	
 1086 D1:B2C6 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1087 D1:B2C8 32 EE B1 D1 	ld (sdcomp_end_reached_flag),a 
 1088 D1:B2CC -  -  -  -  	
 1089 D1:B2CC 3E 00 -  -  	ld a,0 ;return 0 if finished decompressing 
 1090 D1:B2CE C9 -  -  -  	ret 
 1091 D1:B2CF -  -  -  -  
 1092 D1:B2CF -  -  -  -  
 1093 D1:B2CF -  -  -  -  ;bit orders
 1094 D1:B2CF -  -  -  -  ;	noflip   flip 
 1095 D1:B2CF -  -  -  -  ;4bpp 3210 	 0123
 1096 D1:B2CF -  -  -  -  ;3bpp 210	 012
 1097 D1:B2CF -  -  -  -  ;2bpp 10	 01
 1098 D1:B2CF -  -  -  -  ;1bpp 0		 0
 1099 D1:B2CF -  -  -  -  
 1100 D1:B2CF -  -  -  -  
 1101 D1:B2CF -  -  -  -  sdcomp_set_0bpc:
 1102 D1:B2CF 3E DA -  -  	ld a,%11011010;jp c
 1103 D1:B2D1 32 DA AF D1 	ld (sdcomp_0bpc),a
 1104 D1:B2D5 -  -  -  -  	
 1105 D1:B2D5 32 81 B1 D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
 1106 D1:B2D9 32 8C B1 D1 	ld (sdcomp_3bpc_1),a 
 1107 D1:B2DD -  -  -  -  	
 1108 D1:B2DD 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1109 D1:B2DF 32 76 B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1110 D1:B2E3 3E 00 -  -  	ld a,%00000000
 1111 D1:B2E5 32 9B B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1112 D1:B2E9 C9 -  -  -  	ret 
 1113 D1:B2EA -  -  -  -  	
 1114 D1:B2EA -  -  -  -  sdcomp_set_1bpc:
 1115 D1:B2EA 3E D2 -  -  	ld a,%11010010;jp nc
 1116 D1:B2EC 32 DA AF D1 	ld (sdcomp_0bpc),a
 1117 D1:B2F0 3E DA -  -  	ld a,%11011010;jp c
 1118 D1:B2F2 32 EC AF D1 	ld (sdcomp_1bpc),a
 1119 D1:B2F6 -  -  -  -  	
 1120 D1:B2F6 32 81 B1 D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
 1121 D1:B2FA 32 8C B1 D1 	ld (sdcomp_3bpc_1),a 
 1122 D1:B2FE -  -  -  -  	
 1123 D1:B2FE 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1124 D1:B300 32 76 B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1125 D1:B304 -  -  -  -  	
 1126 D1:B304 -  -  -  -  	
 1127 D1:B304 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1128 D1:B306 32 EA AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1129 D1:B30A -  -  -  -  	
 1130 D1:B30A 3E 80 -  -  	ld a,%10000000
 1131 D1:B30C 32 9B B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1132 D1:B310 -  -  -  -  	
 1133 D1:B310 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1134 D1:B312 32 94 B0 D1 	ld (sdcomp_traverse_2bpp),a
 1135 D1:B316 32 96 B0 D1 	ld (sdcomp_traverse_3bpp),a
 1136 D1:B31A 32 98 B0 D1 	ld (sdcomp_traverse_4bpp),a
 1137 D1:B31E C9 -  -  -  	ret 
 1138 D1:B31F -  -  -  -  
 1139 D1:B31F -  -  -  -  sdcomp_set_2bpc:
 1140 D1:B31F 3E D2 -  -  	ld a,%11010010;jp nc
 1141 D1:B321 32 DA AF D1 	ld (sdcomp_0bpc),a
 1142 D1:B325 32 EC AF D1 	ld (sdcomp_1bpc),a
 1143 D1:B329 -  -  -  -  	
 1144 D1:B329 3E DA -  -  	ld a,%11011010;jp c
 1145 D1:B32B 32 FE AF D1 	ld (sdcomp_2bpc),a
 1146 D1:B32F -  -  -  -  	
 1147 D1:B32F 32 8C B1 D1 	ld (sdcomp_3bpc_1),a ;for setting local pallete data
 1148 D1:B333 -  -  -  -  	
 1149 D1:B333 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1150 D1:B335 32 76 B1 D1 	ld (sdcomp_1bpc_1),a;for setting local pallete data
 1151 D1:B339 32 81 B1 D1 	ld (sdcomp_2bpc_1),a 
 1152 D1:B33D -  -  -  -  	
 1153 D1:B33D 37 -  -  -  	scf 
 1154 D1:B33E -  -  -  -  sdcomp_flip_2bpc .equ $ 
 1155 D1:B33E D2 4F B3 D1 	jp nc, sdcomp_2bpc_flip
 1156 D1:B342 -  -  -  -  	
 1157 D1:B342 3E CB -  -  	ld a,%11001011 ;set 1,e
 1158 D1:B344 32 EA AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1159 D1:B348 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1160 D1:B34A 32 FC AF D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1161 D1:B34E -  -  -  -  	
 1162 D1:B34E C9 -  -  -  	ret 
 1163 D1:B34F -  -  -  -  	
 1164 D1:B34F -  -  -  -  sdcomp_2bpc_flip:
 1165 D1:B34F 3E CB -  -  	ld a,%11001011 ;set 1,e
 1166 D1:B351 32 FC AF D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1167 D1:B355 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1168 D1:B357 32 EA AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1169 D1:B35B 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1170 D1:B35D 32 94 B0 D1 	ld (sdcomp_traverse_2bpp),a
 1171 D1:B361 -  -  -  -  
 1172 D1:B361 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1173 D1:B363 32 96 B0 D1 	ld (sdcomp_traverse_3bpp),a
 1174 D1:B367 32 98 B0 D1 	ld (sdcomp_traverse_4bpp),a
 1175 D1:B36B -  -  -  -  	
 1176 D1:B36B 3E C0 -  -  	ld a,%11000000
 1177 D1:B36D 32 9B B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1178 D1:B371 C9 -  -  -  	ret 
 1179 D1:B372 -  -  -  -  
 1180 D1:B372 -  -  -  -  
 1181 D1:B372 -  -  -  -  sdcomp_set_3bpc:
 1182 D1:B372 -  -  -  -  	
 1183 D1:B372 3E D2 -  -  	ld a,%11010010;jp nc
 1184 D1:B374 32 DA AF D1 	ld (sdcomp_0bpc),a
 1185 D1:B378 32 EC AF D1 	ld (sdcomp_1bpc),a
 1186 D1:B37C 32 FE AF D1 	ld (sdcomp_2bpc),a
 1187 D1:B380 -  -  -  -  	
 1188 D1:B380 3E DA -  -  	ld a,%11011010;jp c
 1189 D1:B382 32 10 B0 D1 	ld (sdcomp_3bpc),a
 1190 D1:B386 -  -  -  -  	
 1191 D1:B386 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1192 D1:B388 32 76 B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1193 D1:B38C 32 81 B1 D1 	ld (sdcomp_2bpc_1),a 
 1194 D1:B390 32 8C B1 D1 	ld (sdcomp_3bpc_1),a 
 1195 D1:B394 -  -  -  -  	
 1196 D1:B394 37 -  -  -  	scf 
 1197 D1:B395 -  -  -  -  sdcomp_flip_3bpc .equ $ 
 1198 D1:B395 D2 AC B3 D1 	jp nc, sdcomp_3bpc_flip	
 1199 D1:B399 -  -  -  -  	
 1200 D1:B399 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1201 D1:B39B 32 EA AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1202 D1:B39F 3E CB -  -  	ld a,%11001011 ;set 1,e
 1203 D1:B3A1 32 FC AF D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1204 D1:B3A5 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1205 D1:B3A7 32 0E B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1206 D1:B3AB -  -  -  -  	
 1207 D1:B3AB C9 -  -  -  	ret 
 1208 D1:B3AC -  -  -  -  	
 1209 D1:B3AC -  -  -  -  sdcomp_3bpc_flip:
 1210 D1:B3AC 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1211 D1:B3AE 32 0E B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1212 D1:B3B2 3E CB -  -  	ld a,%11001011 ;set 1,e
 1213 D1:B3B4 32 FC AF D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1214 D1:B3B8 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1215 D1:B3BA 32 EA AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1216 D1:B3BE -  -  -  -  	
 1217 D1:B3BE 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1218 D1:B3C0 32 94 B0 D1 	ld (sdcomp_traverse_2bpp),a 
 1219 D1:B3C4 32 96 B0 D1 	ld (sdcomp_traverse_3bpp),a 
 1220 D1:B3C8 -  -  -  -  	
 1221 D1:B3C8 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1222 D1:B3CA 32 98 B0 D1 	ld (sdcomp_traverse_4bpp),a
 1223 D1:B3CE -  -  -  -  	
 1224 D1:B3CE 3E E0 -  -  	ld a,%11100000
 1225 D1:B3D0 32 9B B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1226 D1:B3D4 -  -  -  -  	
 1227 D1:B3D4 C9 -  -  -  	ret 
 1228 D1:B3D5 -  -  -  -  
 1229 D1:B3D5 -  -  -  -  sdcomp_set_4bpc:
 1230 D1:B3D5 -  -  -  -  
 1231 D1:B3D5 3E D2 -  -  	ld a,%11010010;jp nc
 1232 D1:B3D7 32 DA AF D1 	ld (sdcomp_0bpc),a
 1233 D1:B3DB 32 EC AF D1 	ld (sdcomp_1bpc),a
 1234 D1:B3DF 32 FE AF D1 	ld (sdcomp_2bpc),a
 1235 D1:B3E3 -  -  -  -  
 1236 D1:B3E3 3E DA -  -  	ld a,%11011010;jp c
 1237 D1:B3E5 -  -  -  -  
 1238 D1:B3E5 32 76 B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1239 D1:B3E9 32 81 B1 D1 	ld (sdcomp_2bpc_1),a 
 1240 D1:B3ED 32 8C B1 D1 	ld (sdcomp_3bpc_1),a 
 1241 D1:B3F1 -  -  -  -  	
 1242 D1:B3F1 37 -  -  -  	scf 
 1243 D1:B3F2 -  -  -  -  sdcomp_flip_4bpc .equ $ 
 1244 D1:B3F2 D2 0F B4 D1 	jp nc, sdcomp_4bpc_flip	
 1245 D1:B3F6 3E DB -  -  	ld a,%11011011 ;set 3,e
 1246 D1:B3F8 32 EA AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1247 D1:B3FC 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1248 D1:B3FE 32 FC AF D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1249 D1:B402 3E CB -  -  	ld a,%11001011 ;set 1,e
 1250 D1:B404 32 0E B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1251 D1:B408 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1252 D1:B40A 32 20 B0 D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
 1253 D1:B40E C9 -  -  -  	ret 
 1254 D1:B40F -  -  -  -  sdcomp_4bpc_flip:
 1255 D1:B40F 3E DB -  -  	ld a,%11011011 ;set 3,e
 1256 D1:B411 32 20 B0 D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
 1257 D1:B415 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1258 D1:B417 32 0E B0 D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1259 D1:B41B 3E CB -  -  	ld a,%11001011 ;set 1,e
 1260 D1:B41D 32 FC AF D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1261 D1:B421 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1262 D1:B423 32 EA AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1263 D1:B427 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1264 D1:B429 32 94 B0 D1 	ld (sdcomp_traverse_2bpp),a 
 1265 D1:B42D 32 96 B0 D1 	ld (sdcomp_traverse_3bpp),a 
 1266 D1:B431 32 98 B0 D1 	ld (sdcomp_traverse_4bpp),a 
 1267 D1:B435 -  -  -  -  	
 1268 D1:B435 3E F0 -  -  	ld a,%11110000
 1269 D1:B437 32 9B B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1270 D1:B43B -  -  -  -  	
 1271 D1:B43B C9 -  -  -  	ret 
 1272 D1:B43C -  -  -  -  	
 1273 D1:B43C -  -  -  -  	
 1274 D1:B43C -  -  -  -  sdcomp_set_noalpha:
 1275 D1:B43C 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1276 D1:B43E 32 5B AF D1 	ld (sdcomp_no_alpha_1),a 
 1277 D1:B442 3E DA -  -  	ld a,%11011010;jp c
 1278 D1:B444 32 5B B1 D1 	ld (sdcomp_no_alpha_2),a 
 1279 D1:B448 32 8C B0 D1 	ld (sdcomp_no_alpha_3),a 
 1280 D1:B44C C9 -  -  -  	ret
 1281 D1:B44D -  -  -  -  	
 1282 D1:B44D -  -  -  -  sdcomp_reset_noalpha:
 1283 D1:B44D -  -  -  -  
 1284 D1:B44D 3E DA -  -  	ld a,%11011010;jp c
 1285 D1:B44F 32 5B AF D1 	ld (sdcomp_no_alpha_1),a 
 1286 D1:B453 3E D2 -  -  	ld a, %11010010 ;jp nc
 1287 D1:B455 32 5B B1 D1 	ld (sdcomp_no_alpha_2),a 
 1288 D1:B459 3E CA -  -  	ld a, %11001010 ;jp z
 1289 D1:B45B 32 8C B0 D1 	ld (sdcomp_no_alpha_3),a 
 1290 D1:B45F C9 -  -  -  	ret
 1291 D1:B460 -  -  -  -  
 1292 D1:B460 -  -  -  -  
 1293 D1:B460 -  -  -  -  sdcomp_set_offset:
 1294 D1:B460 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1295 D1:B462 32 83 AF D1 	ld (sdcomp_offset_1),a 
 1296 D1:B466 32 47 AF D1 	ld (sdcomp_bit_offset),a 
 1297 D1:B46A 3E 04 -  -  	ld a,%00000100 ;inc b 
 1298 D1:B46C 32 43 B1 D1 	ld (sdcomp_offset_2),a 
 1299 D1:B470 -  -  -  -  	
 1300 D1:B470 C9 -  -  -  	ret 
 1301 D1:B471 -  -  -  -  
 1302 D1:B471 -  -  -  -  sdcomp_reset_offset:
 1303 D1:B471 3E DA -  -  	ld a,%11011010;jp c
 1304 D1:B473 32 83 AF D1 	ld (sdcomp_offset_1),a 
 1305 D1:B477 32 47 AF D1 	ld (sdcomp_bit_offset),a 
 1306 D1:B47B 3E 00 -  -  	ld a,%00000000 ;nop
 1307 D1:B47D 32 43 B1 D1 	ld (sdcomp_offset_2),a 
 1308 D1:B481 C9 -  -  -  	ret 
 1309 D1:B482 -  -  -  -  	
 1310 D1:B482 -  -  -  -  sdcomp_set_flip:
 1311 D1:B482 3E 01 -  -  	ld a, %00000001 ;rlc c 
 1312 D1:B484 32 32 AF D1 	ld (sdcomp_flip_bitstream),a
 1313 D1:B488 3E 2B -  -  	ld a, %00101011 ;dec hl 
 1314 D1:B48A 32 34 AF D1 	ld (sdcomp_flip_bitstream_2),a 
 1315 D1:B48E 3E DC -  -  	ld a, %11011100 ;call c 
 1316 D1:B490 32 E3 B1 D1 	ld (sdcomp_flip_traverse),a 
 1317 D1:B494 -  -  -  -  	
 1318 D1:B494 3E DA -  -  	ld a,%11011010;jp c
 1319 D1:B496 32 3E B3 D1 	ld (sdcomp_flip_2bpc),a
 1320 D1:B49A 32 95 B3 D1 	ld (sdcomp_flip_3bpc),a
 1321 D1:B49E 32 F2 B3 D1 	ld (sdcomp_flip_4bpc),a
 1322 D1:B4A2 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1323 D1:B4A4 32 AF B1 D1 	ld (sdcomp_flip_setup),a 
 1324 D1:B4A8 -  -  -  -  	
 1325 D1:B4A8 C9 -  -  -  	ret 
 1326 D1:B4A9 -  -  -  -  
 1327 D1:B4A9 -  -  -  -  sdcomp_reset_flip:
 1328 D1:B4A9 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1329 D1:B4AB 32 32 AF D1 	ld (sdcomp_flip_bitstream),a
 1330 D1:B4AF 3E 23 -  -  	ld a, %00100011 ;inc hl 
 1331 D1:B4B1 32 34 AF D1 	ld (sdcomp_flip_bitstream_2),a 
 1332 D1:B4B5 3E D4 -  -  	ld a, %11010100 ;call nc 
 1333 D1:B4B7 32 E3 B1 D1 	ld (sdcomp_flip_traverse),a 
 1334 D1:B4BB -  -  -  -  	
 1335 D1:B4BB 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1336 D1:B4BD 32 3E B3 D1 	ld (sdcomp_flip_2bpc),a
 1337 D1:B4C1 32 95 B3 D1 	ld (sdcomp_flip_3bpc),a
 1338 D1:B4C5 32 F2 B3 D1 	ld (sdcomp_flip_4bpc),a
 1339 D1:B4C9 3E DA -  -  	ld a,%11011010;jp c
 1340 D1:B4CB 32 AF B1 D1 	ld (sdcomp_flip_setup),a 
 1341 D1:B4CF C9 -  -  -  	ret 
 1342 D1:B4D0 -  -  -  -  
 1343 D1:B4D0 -  -  -  -  
 1344 D1:B4D0 -  -  -  -  sdcomp_set_fast:
 1345 D1:B4D0 3E DA -  -  	ld a,%11011010;jp c
 1346 D1:B4D2 32 04 B2 D1 	ld(sdcomp_fast_1),a 
 1347 D1:B4D6 32 1D B2 D1 	ld(sdcomp_fast_2),a 
 1348 D1:B4DA 32 43 B2 D1 	ld(sdcomp_fast_3),a 
 1349 D1:B4DE -  -  -  -  	
 1350 D1:B4DE C9 -  -  -  	ret 
 1351 D1:B4DF -  -  -  -  
 1352 D1:B4DF -  -  -  -  sdcomp_reset_fast:
 1353 D1:B4DF 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1354 D1:B4E1 32 04 B2 D1 	ld(sdcomp_fast_1),a 
 1355 D1:B4E5 32 1D B2 D1 	ld(sdcomp_fast_2),a 
 1356 D1:B4E9 32 43 B2 D1 	ld(sdcomp_fast_3),a 
 1357 D1:B4ED -  -  -  -  	
 1358 D1:B4ED C9 -  -  -  	ret 
 1359 D1:B4EE -  -  -  -  
 1360 D1:B4EE -  -  -  -  
 1361 D1:B4EE -  -  -  -  
 1362 D1:B4EE -  -  -  -  
 1363 D1:B4EE -  -  -  -  
 1364 D1:B4EE -  -  -  -  
Listing for file "ascent.asm"
  549 D1:B4EE -  -  -  -  #include "drawFG.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFG.txt"
    1 D1:B4EE -  -  -  -  
    2 D1:B4EE -  -  -  -  FGMaxSpriteHeight .equ 120
    3 D1:B4EE -  -  -  -  
    4 D1:B4EE -  -  -  -  draw_mg:
    5 D1:B4EE -  -  -  -  
    6 D1:B4EE 3E D2 -  -  	ld a, %11010010 ;jp nc
    7 D1:B4F0 32 0B B6 D1 	ld (dfgs_bg_mode_1),a 
    8 D1:B4F4 32 6F B6 D1 	ld (dfgs_bg_mode_2),a 
    9 D1:B4F8 -  -  -  -  
   10 D1:B4F8 2A D4 AB D1 	ld hl,(draw_buffer)
   11 D1:B4FC 22 1B B6 D1 	ld (dfgs_vram_top_1),hl
   12 D1:B500 22 D0 B6 D1 	ld (dfgs_vram_top_2),hl
   13 D1:B504 01 00 96 00 	ld bc,160*240
   14 D1:B508 09 -  -  -  	add hl,bc
   15 D1:B509 22 8B B6 D1 	ld (dfgs_vram_bottom_1),hl 
   16 D1:B50D 22 AB B6 D1 	ld (dfgs_vram_bottom_2),hl 
   17 D1:B511 22 37 B7 D1 	ld (dfgs_vram_bottom_3),hl 
   18 D1:B515 22 57 B7 D1 	ld (dfgs_vram_bottom_4),hl 
   19 D1:B519 -  -  -  -  	
   20 D1:B519 2A CE AB D1 	ld hl,(cam_pos)
   21 D1:B51D CB 3C -  -  	srl h ;div by 2
   22 D1:B51F CB 1D -  -  	rr l 
   23 D1:B521 -  -  -  -  	
   24 D1:B521 01 EF 00 00 	ld bc,239
   25 D1:B525 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of fg layer
   26 D1:B526 7D -  -  -  	ld a,l ;lsb cam pos, = line number in middle frame
   27 D1:B527 32 D9 B5 D1 	ld (dfgs_cam_height_1),a
   28 D1:B52B 32 74 B6 D1 	ld (dfgs_cam_height_2),a ;y value in dataframe of uppermost line of viewport
   29 D1:B52F 32 08 B7 D1 	ld (dfgs_cam_height_3),a
   30 D1:B533 32 22 B7 D1 	ld (dfgs_cam_height_4),a	
   31 D1:B537 ED 44 -  -  	neg 
   32 D1:B539 32 10 B6 D1 	ld (dfgs_viewport_to_upper_frame),a ;1 = top line of VP is top line of middle frame
   33 D1:B53D ED 44 -  -  	neg 
   34 D1:B53F D6 EF -  -  	sub 239
   35 D1:B541 32 2B B7 D1 	ld (dfgs_viewport_bottom_y),a
   36 D1:B545 -  -  -  -  	
   37 D1:B545 01 00 00 00 	ld bc,0
   38 D1:B549 4C -  -  -  	ld c,h;msb ccam pos 
   39 D1:B54A 0C -  -  -  	inc c 
   40 D1:B54B 21 5D BD D1 	ld hl,MG_Data_frame_table
   41 D1:B54F 09 -  -  -  	add hl,bc
   42 D1:B550 09 -  -  -  	add hl,bc 
   43 D1:B551 09 -  -  -  	add hl,bc 	
   44 D1:B552 ED 27 -  -  	ld hl,(hl);upper frame 
   45 D1:B554 -  -  -  -  	
   46 D1:B554 -  -  -  -  	
   47 D1:B554 CD C0 B5 D1 	call draw_fg_sprites
   48 D1:B558 C9 -  -  -  	ret
   49 D1:B559 -  -  -  -  
   50 D1:B559 -  -  -  -  
   51 D1:B559 -  -  -  -  
   52 D1:B559 -  -  -  -  draw_fg:
   53 D1:B559 -  -  -  -  
   54 D1:B559 3E D2 -  -  	ld a, %11010010 ;jp nc
   55 D1:B55B 32 0B B6 D1 	ld (dfgs_bg_mode_1),a 
   56 D1:B55F 32 6F B6 D1 	ld (dfgs_bg_mode_2),a 
   57 D1:B563 -  -  -  -  
   58 D1:B563 -  -  -  -  	
   59 D1:B563 2A D4 AB D1 	ld hl,(draw_buffer)
   60 D1:B567 22 1B B6 D1 	ld (dfgs_vram_top_1),hl
   61 D1:B56B 22 D0 B6 D1 	ld (dfgs_vram_top_2),hl
   62 D1:B56F 01 00 96 00 	ld bc,160*240
   63 D1:B573 09 -  -  -  	add hl,bc
   64 D1:B574 22 8B B6 D1 	ld (dfgs_vram_bottom_1),hl 
   65 D1:B578 22 AB B6 D1 	ld (dfgs_vram_bottom_2),hl 
   66 D1:B57C 22 37 B7 D1 	ld (dfgs_vram_bottom_3),hl 
   67 D1:B580 22 57 B7 D1 	ld (dfgs_vram_bottom_4),hl 
   68 D1:B584 -  -  -  -  	
   69 D1:B584 2A CE AB D1 	ld hl,(cam_pos)
   70 D1:B588 01 EF 00 00 	ld bc,239
   71 D1:B58C 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of fg layer
   72 D1:B58D 7D -  -  -  	ld a,l ;lsb cam pos, = line number in middle frame
   73 D1:B58E 32 D9 B5 D1 	ld (dfgs_cam_height_1),a ;SET with line# for bg
   74 D1:B592 32 74 B6 D1 	ld (dfgs_cam_height_2),a ;y value in dataframe of uppermost line of viewport
   75 D1:B596 32 08 B7 D1 	ld (dfgs_cam_height_3),a ;Set to 255 for BG (Skips drawing lower frame)
   76 D1:B59A 32 22 B7 D1 	ld (dfgs_cam_height_4),a
   77 D1:B59E ED 44 -  -  	neg 
   78 D1:B5A0 32 10 B6 D1 	ld (dfgs_viewport_to_upper_frame),a ; 1 = vp bound is on frame separator
   79 D1:B5A4 ED 44 -  -  	neg 
   80 D1:B5A6 D6 EF -  -  	sub 239
   81 D1:B5A8 32 2B B7 D1 	ld (dfgs_viewport_bottom_y),a
   82 D1:B5AC -  -  -  -  	
   83 D1:B5AC 01 00 00 00 	ld bc,0
   84 D1:B5B0 4C -  -  -  	ld c,h;msb ccam pos 
   85 D1:B5B1 0C -  -  -  	inc c 
   86 D1:B5B2 21 8F C0 D1 	ld hl,FG_Data_frame_table
   87 D1:B5B6 09 -  -  -  	add hl,bc
   88 D1:B5B7 09 -  -  -  	add hl,bc 
   89 D1:B5B8 09 -  -  -  	add hl,bc 	
   90 D1:B5B9 -  -  -  -  
   91 D1:B5B9 ED 27 -  -  	ld hl,(hl);upper frame 
   92 D1:B5BB -  -  -  -  
   93 D1:B5BB CD C0 B5 D1 	call draw_fg_sprites
   94 D1:B5BF C9 -  -  -  	ret
   95 D1:B5C0 -  -  -  -  
   96 D1:B5C0 -  -  -  -  
   97 D1:B5C0 -  -  -  -  ; Upper Frame =======================================================================================================
   98 D1:B5C0 -  -  -  -  ; Upper Frame =======================================================================================================
   99 D1:B5C0 -  -  -  -  ;hl = upper frame data
  100 D1:B5C0 -  -  -  -   
  101 D1:B5C0 -  -  -  -  ;load cam height 123,vram top 12 vram bottom 1234
  102 D1:B5C0 -  -  -  -  draw_fg_sprites:
  103 D1:B5C0 -  -  -  -  	;UPPER FRAME, bottom of upper frame is not on screen, bottom of mid frame is on screen bottom of lower is not on screen
  104 D1:B5C0 CD A1 B8 D1 	call sprite_table_from_index
  105 D1:B5C4 ED 53 98 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de ;write sprite table ptr to required locations 
  106 D1:B5C9 ED 53 DA B7 
              D1 -  -  -  	ld (dfgs_sprite_pointers_2),de 
  107 D1:B5CE ED 53 00 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  108 D1:B5D3 -  -  -  -  	
  109 D1:B5D3 11 00 00 00 	ld de,0
  110 D1:B5D7 23 -  -  -  	inc hl;past data table 
  111 D1:B5D8 -  -  -  -  	;hl is number of elements
  112 D1:B5D8 -  -  -  -  	
  113 D1:B5D8 -  -  -  -  	
  114 D1:B5D8 -  -  -  -  	;if cam is far below upper frame, can skip upper frame 
  115 D1:B5D8 -  -  -  -  dfgs_cam_height_1 .equ $ + 1
  116 D1:B5D8 3E 00 -  -  	ld a,0 
  117 D1:B5DA FE 78 -  -  	cp FGMaxSpriteHeight
  118 D1:B5DC D2 EE B5 D1 	jp nc, dfgs_do_upper_loop
  119 D1:B5E0 -  -  -  -  	;cam too low for upper frame sprites to be drawn
  120 D1:B5E0 01 00 00 00 	ld bc,0
  121 D1:B5E4 4E -  -  -  	ld c,(hl) ;bc holds number of elements
  122 D1:B5E5 09 -  -  -  	add hl,bc 
  123 D1:B5E6 09 -  -  -  	add hl,bc 
  124 D1:B5E7 09 -  -  -  	add hl,bc 
  125 D1:B5E8 09 -  -  -  	add hl,bc;hl points to end of current frame data 
  126 D1:B5E9 23 -  -  -  	inc hl;start of next frame
  127 D1:B5EA C3 3A B6 D1 	jp dfgs_mid_start ;skip upper loop
  128 D1:B5EE -  -  -  -  	
  129 D1:B5EE -  -  -  -  	
  130 D1:B5EE -  -  -  -  dfgs_do_upper_loop:	
  131 D1:B5EE 08 -  -  -  	ex af,af' ;'
  132 D1:B5EF -  -  -  -  	
  133 D1:B5EF 7E -  -  -  	ld a,(hl);number of elements
  134 D1:B5F0 -  -  -  -  	;TESTING
  135 D1:B5F0 -  -  -  -  	;call write_a_to_ram
  136 D1:B5F0 -  -  -  -  	;call prgmpause
  137 D1:B5F0 -  -  -  -  	;TESTING
  138 D1:B5F0 -  -  -  -  	
  139 D1:B5F0 3C -  -  -  	inc a ;to be decd later
  140 D1:B5F1 08 -  -  -  	ex af,af' ;'
  141 D1:B5F2 23 -  -  -  	inc hl;hl points to first sprite in upper frame  
  142 D1:B5F3 -  -  -  -  
  143 D1:B5F3 -  -  -  -  dfgs_upper_loop:;Want to check for sprites in upper frame that extend to lower frame 
  144 D1:B5F3 -  -  -  -  
  145 D1:B5F3 08 -  -  -  	ex af,af';'
  146 D1:B5F4 3D -  -  -  	dec a ;dec number of elements
  147 D1:B5F5 -  -  -  -  	;call write_a_to_ram
  148 D1:B5F5 CA 3A B6 D1 	jp z,dfgs_mid_start 
  149 D1:B5F9 08 -  -  -  	ex af,af';'
  150 D1:B5FA -  -  -  -  
  151 D1:B5FA 7E -  -  -  	ld a,(hl);sprite y value 
  152 D1:B5FB 23 -  -  -  	inc hl ;to height
  153 D1:B5FC -  -  -  -  	
  154 D1:B5FC -  -  -  -  	;call write_a_to_ram
  155 D1:B5FC -  -  -  -  	;call prgmpause
  156 D1:B5FC CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  157 D1:B5FE C2 A1 B7 D1 	jp nz, dfgs_sg_upper ;goto group loop 
  158 D1:B602 -  -  -  -  	
  159 D1:B602 -  -  -  -  	;otherwise single sprite, call draw routine 
  160 D1:B602 CD 0A B6 D1 	call dfgs_draw_upper_sprite
  161 D1:B606 -  -  -  -  	
  162 D1:B606 C3 F3 B5 D1 	jp dfgs_upper_loop
  163 D1:B60A -  -  -  -  	
  164 D1:B60A -  -  -  -  
  165 D1:B60A -  -  -  -  ;Can be used for normal sprites and in sprite groups 
  166 D1:B60A -  -  -  -  ;a holds y pos in upper frame, hl pts to sprite height 
  167 D1:B60A -  -  -  -  dfgs_draw_upper_sprite:
  168 D1:B60A -  -  -  -  
  169 D1:B60A 37 -  -  -  	scf 
  170 D1:B60B -  -  -  -  dfgs_bg_mode_1 .equ $ 
  171 D1:B60B D2 B5 AD D1 	jp nc, dbgl_draw_upper_sprite ;if bg mode go to bg draw routine
  172 D1:B60F -  -  -  -  
  173 D1:B60F -  -  -  -  
  174 D1:B60F -  -  -  -  dfgs_viewport_to_upper_frame .equ $ + 1
  175 D1:B60F C6 00 -  -  	add a,0 ;a now holds number of lines to skip in current sprite (1 indexed)
  176 D1:B611 -  -  -  -  	;call write_a_to_ram
  177 D1:B611 DA 36 B6 D1 	jp c, dfgs_upper_skip ;if sprite has large y pos, can carry over
  178 D1:B615 BE -  -  -  	cp (hl) ;compare to sprite height 
  179 D1:B616 D2 36 B6 D1 	jp nc, dfgs_upper_skip ;skips drawing too many lines, sprite is not on screen
  180 D1:B61A -  -  -  -  	;a holds number of lines to skip drawing
  181 D1:B61A -  -  -  -  
  182 D1:B61A -  -  -  -  dfgs_vram_top_1 .equ $ + 1 
  183 D1:B61A 11 00 00 00 	ld de,0;load top of vram 
  184 D1:B61E E5 -  -  -  	push hl ;save height ptr
  185 D1:B61F CD 7E B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  186 D1:B623 -  -  -  -  	
  187 D1:B623 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  188 D1:B625 CA 31 B6 D1 	jp z,dfgs_upper_fast
  189 D1:B629 CD FA AE D1 	call draw_slow_sprite_top_cut
  190 D1:B62D C3 35 B6 D1 	jp dfgs_upper_skip_2
  191 D1:B631 -  -  -  -  dfgs_upper_fast:
  192 D1:B631 CD 7C AE D1 	call draw_fast_sprite_top_cut
  193 D1:B635 -  -  -  -  dfgs_upper_skip_2:
  194 D1:B635 E1 -  -  -  	pop hl ;hl holds (height)
  195 D1:B636 -  -  -  -  	
  196 D1:B636 -  -  -  -  
  197 D1:B636 -  -  -  -  dfgs_upper_skip:
  198 D1:B636 -  -  -  -  
  199 D1:B636 23 -  -  -  	inc hl ;to x
  200 D1:B637 23 -  -  -  	inc hl ;to index 
  201 D1:B638 23 -  -  -  	inc hl;to y 
  202 D1:B639 -  -  -  -  	
  203 D1:B639 C9 -  -  -  	ret ;end of dfgs_draw_upper_sprite
  204 D1:B63A -  -  -  -  	
  205 D1:B63A -  -  -  -  	;ld a,$AA
  206 D1:B63A -  -  -  -  	;call write_a_to_ram
  207 D1:B63A -  -  -  -  	;call prgmpause
  208 D1:B63A -  -  -  -  	
  209 D1:B63A -  -  -  -  
  210 D1:B63A -  -  -  -  ;MIDDLE FRAME ====================================================================================================
  211 D1:B63A -  -  -  -  	
  212 D1:B63A -  -  -  -  dfgs_mid_start:;MIDDLE FRAME, can be top cut, no cut, or bottom cut ===============================================
  213 D1:B63A -  -  -  -  	
  214 D1:B63A -  -  -  -  	;call prgmpause
  215 D1:B63A -  -  -  -  	
  216 D1:B63A CD A1 B8 D1 	call sprite_table_from_index
  217 D1:B63E ED 53 98 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  218 D1:B643 ED 53 24 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_3),de 
  219 D1:B648 ED 53 00 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  220 D1:B64D 11 00 00 00 	ld de,0
  221 D1:B651 23 -  -  -  	inc hl;past sprite table ptr
  222 D1:B652 08 -  -  -  	ex af,af' ;'
  223 D1:B653 7E -  -  -  	ld a,(hl);number of elements
  224 D1:B654 3C -  -  -  	inc a 
  225 D1:B655 08 -  -  -  	ex af,af' ;'
  226 D1:B656 -  -  -  -  	
  227 D1:B656 23 -  -  -  	inc hl ;to first y val 
  228 D1:B657 -  -  -  -  dfgs_mid_loop:
  229 D1:B657 -  -  -  -  	
  230 D1:B657 08 -  -  -  	ex af,af';'
  231 D1:B658 3D -  -  -  	dec a 
  232 D1:B659 CA EF B6 D1 	jp z,dfgs_lower_start ;check for end of data
  233 D1:B65D -  -  -  -  	
  234 D1:B65D 08 -  -  -  	ex af,af';'
  235 D1:B65E -  -  -  -  
  236 D1:B65E -  -  -  -  	;ld a, $AB
  237 D1:B65E -  -  -  -  	;call write_a_to_ram
  238 D1:B65E -  -  -  -  
  239 D1:B65E 7E -  -  -  	ld a,(hl);y val of sprite in dataframe
  240 D1:B65F -  -  -  -  	;call write_a_to_ram
  241 D1:B65F 23 -  -  -  	inc hl ;to height
  242 D1:B660 -  -  -  -  	
  243 D1:B660 CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  244 D1:B662 C2 EB B7 D1 	jp nz, dfgs_sg_mid ;goto group loop 
  245 D1:B666 -  -  -  -  	
  246 D1:B666 -  -  -  -  	;otherwise, draw single sprite 
  247 D1:B666 CD 6E B6 D1 	call dfgs_draw_mid_sprite
  248 D1:B66A -  -  -  -  
  249 D1:B66A -  -  -  -  	
  250 D1:B66A C3 57 B6 D1 	jp dfgs_mid_loop
  251 D1:B66E -  -  -  -  	
  252 D1:B66E -  -  -  -  	
  253 D1:B66E -  -  -  -  	
  254 D1:B66E -  -  -  -  	;a = ypos in mid frame, hl pts to height
  255 D1:B66E -  -  -  -  dfgs_draw_mid_sprite:	
  256 D1:B66E -  -  -  -  	
  257 D1:B66E 37 -  -  -  	scf 
  258 D1:B66F -  -  -  -  dfgs_bg_mode_2 .equ $ 
  259 D1:B66F D2 C9 AD D1 	jp nc, dbgl_draw_lower_sprite ;if bg mode go to bg draw routine
  260 D1:B673 -  -  -  -  
  261 D1:B673 -  -  -  -  	;call write_a_to_ram
  262 D1:B673 -  -  -  -  	
  263 D1:B673 -  -  -  -  dfgs_cam_height_2 .equ $ + 1 ;y value in dataframe of uppermost line of viewport
  264 D1:B673 D6 00 -  -  	sub 0;subtract cam pos
  265 D1:B675 -  -  -  -  	;call write_a_to_ram
  266 D1:B675 -  -  -  -  
  267 D1:B675 CA 7D B6 D1 	jp z, dfgs_mid_sprite_topline ;check case where sprite is on top line of viewport
  268 D1:B679 D2 CA B6 D1 	jp nc, dfgs_mid_sprite_above ; carried, sprite is above viewport boundary, a holds num lines to skip
  269 D1:B67D -  -  -  -  dfgs_mid_sprite_topline:
  270 D1:B67D -  -  -  -  
  271 D1:B67D -  -  -  -  	;Sprite is below viewport bound, either full or bottom cut 
  272 D1:B67D -  -  -  -  	
  273 D1:B67D -  -  -  -  	;a = sprite y - cam pos 
  274 D1:B67D 3D -  -  -  	dec a ;for case where sprite pos = cam pos
  275 D1:B67E C6 F0 -  -  	add a,240 
  276 D1:B680 -  -  -  -  
  277 D1:B680 D2 A6 B6 D1 	jp nc, dfgs_mid_skip
  278 D1:B684 -  -  -  -  	;a holds y pos above bottom of vp (0 indexed )
  279 D1:B684 3C -  -  -  	inc a 
  280 D1:B685 -  -  -  -  	
  281 D1:B685 -  -  -  -  	
  282 D1:B685 -  -  -  -  	
  283 D1:B685 BE -  -  -  	cp (hl) ;compare to sprite height 
  284 D1:B686 DA AA B6 D1 	jp c, dfgs_mid_bottom_cut ;height > lines to draw, bottom is cut off 
  285 D1:B68A -  -  -  -  	;otherwise, draw full sprite 
  286 D1:B68A -  -  -  -  	
  287 D1:B68A -  -  -  -  dfgs_vram_bottom_1 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  288 D1:B68A 11 00 00 00 	ld de,0;load bottom of vram 
  289 D1:B68E E5 -  -  -  	push hl ;save height ptr
  290 D1:B68F CD 7E B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  291 D1:B693 -  -  -  -  	
  292 D1:B693 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  293 D1:B695 CA A1 B6 D1 	jp z,dfgs_mid_full_fast
  294 D1:B699 CD BC AE D1 	call draw_slow_sprite_full
  295 D1:B69D C3 A5 B6 D1 	jp dfgs_mid_skip_1
  296 D1:B6A1 -  -  -  -  dfgs_mid_full_fast:
  297 D1:B6A1 CD A2 AE D1 	call draw_fast_sprite_full
  298 D1:B6A5 -  -  -  -  dfgs_mid_skip_1:
  299 D1:B6A5 E1 -  -  -  	pop hl ;hl holds (height)
  300 D1:B6A6 -  -  -  -  	
  301 D1:B6A6 -  -  -  -  	
  302 D1:B6A6 -  -  -  -  dfgs_mid_skip:;sprite is entirely above or below cam pos 
  303 D1:B6A6 23 -  -  -  	inc hl ;x
  304 D1:B6A7 23 -  -  -  	inc hl ;index 
  305 D1:B6A8 23 -  -  -  	inc hl;to y 
  306 D1:B6A9 -  -  -  -  	
  307 D1:B6A9 -  -  -  -  	
  308 D1:B6A9 -  -  -  -  	
  309 D1:B6A9 C9 -  -  -  	ret
  310 D1:B6AA -  -  -  -  	
  311 D1:B6AA -  -  -  -  
  312 D1:B6AA -  -  -  -  dfgs_mid_bottom_cut:
  313 D1:B6AA -  -  -  -  dfgs_vram_bottom_2 .equ $ + 1  ;Bottom Cut SPRITE, a = lines above bottom of viewport
  314 D1:B6AA 11 00 00 00 	ld de,0;load bottom of vram 
  315 D1:B6AE E5 -  -  -  	push hl ;save height ptr
  316 D1:B6AF CD 7E B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  317 D1:B6B3 -  -  -  -  	
  318 D1:B6B3 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  319 D1:B6B5 CA C1 B6 D1 	jp z,dfgs_mid_bcut_fast
  320 D1:B6B9 CD 27 AF D1 	call draw_slow_sprite_bottom_cut
  321 D1:B6BD C3 C5 B6 D1 	jp dfgs_mid_skip_2
  322 D1:B6C1 -  -  -  -  dfgs_mid_bcut_fast:
  323 D1:B6C1 CD 5F AE D1 	call draw_fast_sprite_bottom_cut
  324 D1:B6C5 -  -  -  -  dfgs_mid_skip_2:
  325 D1:B6C5 E1 -  -  -  	pop hl ;hl holds (height)
  326 D1:B6C6 C3 A6 B6 D1 	jp dfgs_mid_skip
  327 D1:B6CA -  -  -  -  
  328 D1:B6CA -  -  -  -  dfgs_mid_sprite_above:
  329 D1:B6CA -  -  -  -  	
  330 D1:B6CA -  -  -  -  	;a holds lines to skip 
  331 D1:B6CA BE -  -  -  	cp (hl) ;compare to height
  332 D1:B6CB D2 A6 B6 D1 	jp nc, dfgs_mid_skip ;skip sprite, entirely above viewport
  333 D1:B6CF -  -  -  -  
  334 D1:B6CF -  -  -  -  dfgs_vram_top_2 .equ $ + 1
  335 D1:B6CF 11 00 00 00 	ld de,0;top of vram 
  336 D1:B6D3 E5 -  -  -  	push hl ;save height ptr
  337 D1:B6D4 CD 7E B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  338 D1:B6D8 -  -  -  -  	
  339 D1:B6D8 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  340 D1:B6DA CA E6 B6 D1 	jp z,dfgs_mid_tcut_fast
  341 D1:B6DE CD FA AE D1 	call draw_slow_sprite_top_cut
  342 D1:B6E2 C3 EA B6 D1 	jp dfgs_mid_skip_3
  343 D1:B6E6 -  -  -  -  dfgs_mid_tcut_fast:
  344 D1:B6E6 CD 7C AE D1 	call draw_fast_sprite_top_cut
  345 D1:B6EA -  -  -  -  dfgs_mid_skip_3:
  346 D1:B6EA E1 -  -  -  	pop hl ;hl holds (height)
  347 D1:B6EB C3 A6 B6 D1 	jp dfgs_mid_skip
  348 D1:B6EF -  -  -  -  	
  349 D1:B6EF -  -  -  -  	
  350 D1:B6EF -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================		
  351 D1:B6EF -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================	
  352 D1:B6EF -  -  -  -  dfgs_lower_start:
  353 D1:B6EF -  -  -  -  	
  354 D1:B6EF CD A1 B8 D1 	call sprite_table_from_index
  355 D1:B6F3 ED 53 98 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  356 D1:B6F8 ED 53 6D B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_4),de
  357 D1:B6FD 11 00 00 00 	ld de,0
  358 D1:B701 23 -  -  -  	inc hl;past data table 
  359 D1:B702 -  -  -  -  	
  360 D1:B702 08 -  -  -  	ex af,af' ;'
  361 D1:B703 7E -  -  -  	ld a,(hl);number of elements
  362 D1:B704 3C -  -  -  	inc a 
  363 D1:B705 08 -  -  -  	ex af,af' ;'
  364 D1:B706 23 -  -  -  	inc hl
  365 D1:B707 -  -  -  -  	
  366 D1:B707 -  -  -  -  
  367 D1:B707 -  -  -  -  dfgs_cam_height_3 .equ $ + 1 
  368 D1:B707 3E 00 -  -  	ld a, 0
  369 D1:B709 D6 EF -  -  	sub 239
  370 D1:B70B D0 -  -  -  	ret nc;if bottom frame is offscreen 
  371 D1:B70C -  -  -  -  
  372 D1:B70C -  -  -  -  	;a holds y value of viewport bottom line in lower frame 
  373 D1:B70C -  -  -  -  	
  374 D1:B70C -  -  -  -  
  375 D1:B70C -  -  -  -  dfgs_lower_loop:
  376 D1:B70C -  -  -  -  
  377 D1:B70C 08 -  -  -  	ex af,af';'
  378 D1:B70D 3D -  -  -  	dec a 
  379 D1:B70E C8 -  -  -  	ret z
  380 D1:B70F 08 -  -  -  	ex af,af';'
  381 D1:B710 -  -  -  -  	
  382 D1:B710 7E -  -  -  	ld a,(hl);y
  383 D1:B711 -  -  -  -  	;call write_a_to_ram
  384 D1:B711 23 -  -  -  	inc hl ;inc to height
  385 D1:B712 -  -  -  -  	
  386 D1:B712 CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  387 D1:B714 C2 35 B8 D1 	jp nz, dfgs_sg_lower ;goto group loop 
  388 D1:B718 -  -  -  -  	
  389 D1:B718 -  -  -  -  	;otherwise, draw single sprite 
  390 D1:B718 CD 20 B7 D1 	call dfgs_draw_lower_sprite
  391 D1:B71C -  -  -  -  	
  392 D1:B71C C3 0C B7 D1 	jp dfgs_lower_loop
  393 D1:B720 -  -  -  -  
  394 D1:B720 -  -  -  -  	
  395 D1:B720 -  -  -  -  dfgs_draw_lower_sprite: ;a = ypos, hl pts to height
  396 D1:B720 -  -  -  -  	
  397 D1:B720 -  -  -  -  
  398 D1:B720 -  -  -  -  	;call write_a_to_ram
  399 D1:B720 47 -  -  -  	ld b,a ;save
  400 D1:B721 -  -  -  -  dfgs_cam_height_4 .equ $ + 1 
  401 D1:B721 3E 00 -  -  	ld a, 0 ;check if bottom frame is in VP at all
  402 D1:B723 D6 EF -  -  	sub 239
  403 D1:B725 D2 52 B7 D1 	jp nc,dfgs_lower_skip
  404 D1:B729 78 -  -  -  	ld a,b
  405 D1:B72A -  -  -  -  dfgs_viewport_bottom_y .equ $ + 1
  406 D1:B72A D6 00 -  -  	sub 0;subtract y val of viewport bottom
  407 D1:B72C -  -  -  -  
  408 D1:B72C DA 52 B7 D1 	jp c,dfgs_lower_skip;sprite below screen
  409 D1:B730 -  -  -  -  	
  410 D1:B730 -  -  -  -  	;push af 
  411 D1:B730 -  -  -  -  	;ld a,$A0
  412 D1:B730 -  -  -  -  	;call write_a_to_ram
  413 D1:B730 -  -  -  -  	;pop af
  414 D1:B730 -  -  -  -  	
  415 D1:B730 -  -  -  -  	
  416 D1:B730 3C -  -  -  	inc a
  417 D1:B731 -  -  -  -  	;a holds number of lines to draw 
  418 D1:B731 BE -  -  -  	cp (hl) ;compare to sprite height 
  419 D1:B732 DA 56 B7 D1 	jp c, dfgs_lower_bottom_cut ;bottom is below viewport 
  420 D1:B736 -  -  -  -  	
  421 D1:B736 -  -  -  -  	;draw full sprite 
  422 D1:B736 -  -  -  -  dfgs_vram_bottom_3 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  423 D1:B736 11 00 00 00 	ld de,0;load bottom of vram 
  424 D1:B73A E5 -  -  -  	push hl ;save height ptr
  425 D1:B73B CD 7E B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  426 D1:B73F -  -  -  -  	
  427 D1:B73F CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  428 D1:B741 CA 4D B7 D1 	jp z,dfgs_lower_full_fast
  429 D1:B745 CD BC AE D1 	call draw_slow_sprite_full
  430 D1:B749 C3 51 B7 D1 	jp dfgs_lower_skip_1
  431 D1:B74D -  -  -  -  dfgs_lower_full_fast:
  432 D1:B74D CD A2 AE D1 	call draw_fast_sprite_full
  433 D1:B751 -  -  -  -  dfgs_lower_skip_1:
  434 D1:B751 E1 -  -  -  	pop hl ;hl holds (height)
  435 D1:B752 -  -  -  -  
  436 D1:B752 -  -  -  -  	
  437 D1:B752 -  -  -  -  dfgs_lower_skip:;sprite offscreen
  438 D1:B752 23 -  -  -  	inc hl ;x 
  439 D1:B753 23 -  -  -  	inc hl ;index 
  440 D1:B754 23 -  -  -  	inc hl;to y 
  441 D1:B755 -  -  -  -  	;call write_a_to_ram
  442 D1:B755 -  -  -  -  	;ld a,$AD
  443 D1:B755 -  -  -  -  	;call write_a_to_ram
  444 D1:B755 C9 -  -  -  	ret
  445 D1:B756 -  -  -  -  	
  446 D1:B756 -  -  -  -  dfgs_lower_bottom_cut: 
  447 D1:B756 -  -  -  -  dfgs_vram_bottom_4 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  448 D1:B756 11 00 00 00 	ld de,0;load bottom of vram 
  449 D1:B75A E5 -  -  -  	push hl ;save height ptr
  450 D1:B75B CD 7E B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  451 D1:B75F -  -  -  -  	
  452 D1:B75F CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  453 D1:B761 CA 6D B7 D1 	jp z,dfgs_lower_bcut_fast ;even= fast
  454 D1:B765 CD 27 AF D1 	call draw_slow_sprite_bottom_cut
  455 D1:B769 C3 71 B7 D1 	jp dfgs_lower_skip_2
  456 D1:B76D -  -  -  -  dfgs_lower_bcut_fast:
  457 D1:B76D CD 5F AE D1 	call draw_fast_sprite_bottom_cut
  458 D1:B771 -  -  -  -  dfgs_lower_skip_2:
  459 D1:B771 E1 -  -  -  	pop hl ;hl holds (height)
  460 D1:B772 C3 52 B7 D1 	jp dfgs_lower_skip
  461 D1:B776 -  -  -  -  	
  462 D1:B776 -  -  -  -  
  463 D1:B776 -  -  -  -  ;===================================================================================================================
  464 D1:B776 -  -  -  -  ;SPRITE GROUPS =====================================================================================================
  465 D1:B776 -  -  -  -  
  466 D1:B776 -  -  -  -  dfgs_sg_setup:
  467 D1:B776 23 -  -  -  	inc hl ;hl points to xPos of sprite group 
  468 D1:B777 7E -  -  -  	ld a,(hl)
  469 D1:B778 32 92 B8 D1 	ld (dfgs_sg_x_origin),a 
  470 D1:B77C 32 F1 AD D1 	ld (dbgl_sg_x_origin),a
  471 D1:B780 -  -  -  -  	;call write_a_to_ram
  472 D1:B780 01 00 00 00 	ld bc,0
  473 D1:B784 23 -  -  -  	inc hl ; index 
  474 D1:B785 4E -  -  -  	ld c,(hl) ;sprite group index 
  475 D1:B786 -  -  -  -  
  476 D1:B786 21 63 DF D1 	ld hl, Sprite_Groups
  477 D1:B78A -  -  -  -  	;ld c,0 ;TESTING
  478 D1:B78A -  -  -  -  
  479 D1:B78A 09 -  -  -  	add hl,bc 
  480 D1:B78B 09 -  -  -  	add hl,bc 
  481 D1:B78C 09 -  -  -  	add hl,bc 
  482 D1:B78D -  -  -  -  	
  483 D1:B78D -  -  -  -  	;hl now points to correct sprite group ptr 
  484 D1:B78D ED 27 -  -  	ld hl, (hl)	
  485 D1:B78F -  -  -  -  	;hl pts to sprite table for this group 
  486 D1:B78F -  -  -  -  
  487 D1:B78F CD A1 B8 D1 	call sprite_table_from_index
  488 D1:B793 ED 53 98 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1), de ;NEed to undo after loop is done 
  489 D1:B798 ED 53 00 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  490 D1:B79D 23 -  -  -  	inc hl ;to num sprites 
  491 D1:B79E -  -  -  -  
  492 D1:B79E 7E -  -  -  	ld a,(hl) ;num sprites in group
  493 D1:B79F 23 -  -  -  	inc hl;first sprite y 
  494 D1:B7A0 C9 -  -  -  	ret
  495 D1:B7A1 -  -  -  -  	
  496 D1:B7A1 -  -  -  -  	;Sprite group in upper frame. a holds y pos of sprite group. HL points to height (unused)
  497 D1:B7A1 -  -  -  -  dfgs_sg_upper:	
  498 D1:B7A1 32 AF B7 D1 	ld (dfgs_sg_upper_y_origin),a
  499 D1:B7A5 E5 -  -  -  	push hl ;save frame data location (height ptr)
  500 D1:B7A6 CD 76 B7 D1 	call dfgs_sg_setup ;returns with a = num sprites
  501 D1:B7AA -  -  -  -   
  502 D1:B7AA 32 C3 B7 D1 	ld (dfgs_sg_upper_count),a 
  503 D1:B7AE -  -  -  -  	
  504 D1:B7AE -  -  -  -  dfgs_sg_upper_loop:
  505 D1:B7AE -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  506 D1:B7AE -  -  -  -  	;if no carry, sprite is still in upper frame, a holds pos in upper frame 
  507 D1:B7AE -  -  -  -  	;if carry sprite is entirely in mid frame, a holds y pos in mid frame 
  508 D1:B7AE -  -  -  -  dfgs_sg_upper_y_origin .equ $ + 1 
  509 D1:B7AE 3E 00 -  -  	ld a, 0
  510 D1:B7B0 96 -  -  -  	sub a,(hl)
  511 D1:B7B1 -  -  -  -  	;call write_a_to_ram
  512 D1:B7B1 23 -  -  -  	inc hl ;to height
  513 D1:B7B2 D2 BE B7 D1 	jp nc, dfgs_sg_upper_draw_upper
  514 D1:B7B6 -  -  -  -  	
  515 D1:B7B6 CD 6E B6 D1 	call dfgs_draw_mid_sprite
  516 D1:B7BA C3 C2 B7 D1 	jp dfgs_sg_upper_continue
  517 D1:B7BE -  -  -  -  	;otherwise, sprite is entirely in mid frame, a holds y pos in mid frame
  518 D1:B7BE -  -  -  -  	
  519 D1:B7BE -  -  -  -  	
  520 D1:B7BE -  -  -  -  dfgs_sg_upper_draw_upper:
  521 D1:B7BE CD 0A B6 D1 	call dfgs_draw_upper_sprite
  522 D1:B7C2 -  -  -  -  dfgs_sg_upper_continue:
  523 D1:B7C2 -  -  -  -  dfgs_sg_upper_count .equ $ + 1
  524 D1:B7C2 3E 00 -  -  	ld a, 0
  525 D1:B7C4 3D -  -  -  	dec a 
  526 D1:B7C5 32 C3 B7 D1 	ld (dfgs_sg_upper_count),a 
  527 D1:B7C9 C2 AE B7 D1 	jp nz, dfgs_sg_upper_loop 
  528 D1:B7CD -  -  -  -  	;otherwise, end of sprite group 
  529 D1:B7CD 32 92 B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  530 D1:B7D1 32 F1 AD D1 	ld (dbgl_sg_x_origin),a
  531 D1:B7D5 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  532 D1:B7D6 23 -  -  -  	inc hl
  533 D1:B7D7 23 -  -  -  	inc hl
  534 D1:B7D8 23 -  -  -  	inc hl ;to y pos of next sprite
  535 D1:B7D9 -  -  -  -  dfgs_sprite_pointers_2 .equ $ + 1
  536 D1:B7D9 11 00 00 00 	ld de, 0
  537 D1:B7DD ED 53 98 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  538 D1:B7E2 ED 53 00 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  539 D1:B7E7 C3 F3 B5 D1 	jp dfgs_upper_loop
  540 D1:B7EB -  -  -  -  	
  541 D1:B7EB -  -  -  -  
  542 D1:B7EB -  -  -  -  
  543 D1:B7EB -  -  -  -  ;SG MID =========================================================================================================
  544 D1:B7EB -  -  -  -  	;Sprite group in middle frame. a holds y pos of sprite group. HL points to height (unused)
  545 D1:B7EB -  -  -  -  dfgs_sg_mid:	
  546 D1:B7EB E5 -  -  -  	push hl
  547 D1:B7EC 32 F9 B7 D1 	ld (dfgs_sg_mid_y_origin),a
  548 D1:B7F0 CD 76 B7 D1 	call dfgs_sg_setup 
  549 D1:B7F4 -  -  -  -  	
  550 D1:B7F4 32 0D B8 D1 	ld (dfgs_sg_mid_count),a
  551 D1:B7F8 -  -  -  -  	
  552 D1:B7F8 -  -  -  -  dfgs_sg_mid_loop:
  553 D1:B7F8 -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  554 D1:B7F8 -  -  -  -  	;if no carry, sprite is still in mid frame, a holds pos in mid frame 
  555 D1:B7F8 -  -  -  -  	;if carry sprite is entirely in lower frame, a holds y pos in lower frame 
  556 D1:B7F8 -  -  -  -  dfgs_sg_mid_y_origin .equ $ + 1 
  557 D1:B7F8 3E 00 -  -  	ld a, 0
  558 D1:B7FA 96 -  -  -  	sub a,(hl)
  559 D1:B7FB 23 -  -  -  	inc hl ;to height
  560 D1:B7FC D2 08 B8 D1 	jp nc, dfgs_sg_mid_draw_mid
  561 D1:B800 -  -  -  -  	
  562 D1:B800 CD 20 B7 D1 	call dfgs_draw_lower_sprite
  563 D1:B804 C3 0C B8 D1 	jp dfgs_sg_mid_continue
  564 D1:B808 -  -  -  -  
  565 D1:B808 -  -  -  -  		
  566 D1:B808 -  -  -  -  dfgs_sg_mid_draw_mid:
  567 D1:B808 CD 6E B6 D1 	call dfgs_draw_mid_sprite
  568 D1:B80C -  -  -  -  dfgs_sg_mid_continue:
  569 D1:B80C -  -  -  -  dfgs_sg_mid_count .equ $ + 1
  570 D1:B80C 3E 00 -  -  	ld a, 0
  571 D1:B80E 3D -  -  -  	dec a 
  572 D1:B80F 32 0D B8 D1 	ld (dfgs_sg_mid_count),a 
  573 D1:B813 C2 F8 B7 D1 	jp nz, dfgs_sg_mid_loop 
  574 D1:B817 -  -  -  -  	;otherwise, end of sprite group 
  575 D1:B817 32 92 B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  576 D1:B81B 32 F1 AD D1 	ld (dbgl_sg_x_origin),a 
  577 D1:B81F E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  578 D1:B820 23 -  -  -  	inc hl
  579 D1:B821 23 -  -  -  	inc hl
  580 D1:B822 23 -  -  -  	inc hl ;to y pos of next sprite
  581 D1:B823 -  -  -  -  dfgs_sprite_pointers_3 .equ $ + 1
  582 D1:B823 11 00 00 00 	ld de, 0
  583 D1:B827 ED 53 98 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  584 D1:B82C ED 53 00 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  585 D1:B831 C3 57 B6 D1 	jp dfgs_mid_loop
  586 D1:B835 -  -  -  -  	
  587 D1:B835 -  -  -  -  	
  588 D1:B835 -  -  -  -  ;SG Lower =========================================================================================================
  589 D1:B835 -  -  -  -  	;Sprite group in lower frame. a holds y pos of sprite group. HL points to height (unused)
  590 D1:B835 -  -  -  -  dfgs_sg_lower:	
  591 D1:B835 32 43 B8 D1 	ld (dfgs_sg_lower_y_origin),a
  592 D1:B839 E5 -  -  -  	push hl
  593 D1:B83A CD 76 B7 D1 	call dfgs_sg_setup 
  594 D1:B83E 32 56 B8 D1 	ld (dfgs_sg_lower_count),a
  595 D1:B842 -  -  -  -  	;call write_a_to_ram
  596 D1:B842 -  -  -  -  dfgs_sg_lower_loop:
  597 D1:B842 -  -  -  -  
  598 D1:B842 -  -  -  -  	;call prgmpause
  599 D1:B842 -  -  -  -  
  600 D1:B842 -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  601 D1:B842 -  -  -  -  	;if no carry, sprite is still in lower frame, a holds pos in lower frame 
  602 D1:B842 -  -  -  -  	;if carry sprite is offscreen
  603 D1:B842 -  -  -  -  dfgs_sg_lower_y_origin .equ $ + 1 
  604 D1:B842 3E 00 -  -  	ld a, 0
  605 D1:B844 96 -  -  -  	sub a,(hl)
  606 D1:B845 -  -  -  -  	;call write_a_to_ram
  607 D1:B845 23 -  -  -  	inc hl ;to height
  608 D1:B846 D2 51 B8 D1 	jp nc, dfgs_sg_lower_draw_lower
  609 D1:B84A -  -  -  -  	
  610 D1:B84A 23 -  -  -  	inc hl 
  611 D1:B84B 23 -  -  -  	inc hl
  612 D1:B84C 23 -  -  -  	inc hl 
  613 D1:B84D C3 55 B8 D1 	jp dfgs_sg_lower_continue
  614 D1:B851 -  -  -  -  	;otherwise, sprite is entirely below lower frame, skip
  615 D1:B851 -  -  -  -  	
  616 D1:B851 -  -  -  -  	
  617 D1:B851 -  -  -  -  dfgs_sg_lower_draw_lower:
  618 D1:B851 CD 20 B7 D1 	call dfgs_draw_lower_sprite
  619 D1:B855 -  -  -  -  dfgs_sg_lower_continue:
  620 D1:B855 -  -  -  -  dfgs_sg_lower_count .equ $ + 1
  621 D1:B855 3E 00 -  -  	ld a, 0
  622 D1:B857 -  -  -  -  	;call write_a_to_ram
  623 D1:B857 3D -  -  -  	dec a 
  624 D1:B858 32 56 B8 D1 	ld (dfgs_sg_lower_count),a 
  625 D1:B85C C2 42 B8 D1 	jp nz, dfgs_sg_lower_loop 
  626 D1:B860 -  -  -  -  	;otherwise, end of sprite group 
  627 D1:B860 32 92 B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  628 D1:B864 32 F1 AD D1 	ld (dbgl_sg_x_origin),a 
  629 D1:B868 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  630 D1:B869 23 -  -  -  	inc hl
  631 D1:B86A 23 -  -  -  	inc hl
  632 D1:B86B 23 -  -  -  	inc hl ;to y pos of next sprite
  633 D1:B86C -  -  -  -  dfgs_sprite_pointers_4 .equ $ + 1
  634 D1:B86C 11 00 00 00 	ld de, 0
  635 D1:B870 ED 53 98 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  636 D1:B875 ED 53 00 AE 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  637 D1:B87A C3 0C B7 D1 	jp dfgs_lower_loop
  638 D1:B87E -  -  -  -  	
  639 D1:B87E -  -  -  -  	
  640 D1:B87E -  -  -  -  	
  641 D1:B87E -  -  -  -  	
  642 D1:B87E -  -  -  -  ;a holds distance from bottom of screen, starting from 0, or for top cut dist above screen = num lines to skip 
  643 D1:B87E -  -  -  -  ;(hl) = height 	
  644 D1:B87E -  -  -  -  ;de = initial vram, top for top cut, otherwise bottom
  645 D1:B87E -  -  -  -  
  646 D1:B87E -  -  -  -  ;Subtracts a lines from de (initial vram pos),
  647 D1:B87E -  -  -  -  ;returns hl = sprite data, de = new vram position
  648 D1:B87E -  -  -  -  dfgs_setup_draw:
  649 D1:B87E 23 -  -  -  	inc hl ;x pos 
  650 D1:B87F 01 00 00 00 	ld bc,0
  651 D1:B883 4E -  -  -  	ld c,(hl); x pos
  652 D1:B884 23 -  -  -  	inc hl;to index
  653 D1:B885 E5 -  -  -  	push hl;save sprite index 
  654 D1:B886 26 A0 -  -  	ld h,160
  655 D1:B888 6F -  -  -  	ld l,a ;number of lines to subtract 
  656 D1:B889 ED 6C -  -  	mlt hl;subtract from vram
  657 D1:B88B 37 -  -  -  	scf 
  658 D1:B88C 3F -  -  -  	ccf
  659 D1:B88D EB -  -  -  	ex de,hl;hl holds initial vram pos, de is lines to subtract  
  660 D1:B88E ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  661 D1:B890 09 -  -  -  	add hl,bc;add x pos ;hl now holds sprite draw start pos 
  662 D1:B891 -  -  -  -  dfgs_sg_x_origin .equ $ + 1 ;
  663 D1:B891 0E 00 -  -  	ld c, 0
  664 D1:B893 09 -  -  -  	add hl,bc;add sprite group x pos offset (if applicable)
  665 D1:B894 EB -  -  -  	ex de,hl;put in de
  666 D1:B895 E1 -  -  -  	pop hl;back to frame data 
  667 D1:B896 4E -  -  -  	ld c,(hl);sprite index
  668 D1:B897 -  -  -  -  dfgs_sprite_pointers_1 .equ $ + 1	
  669 D1:B897 21 00 00 00 	ld hl,0 ;load sprite table 
  670 D1:B89B 09 -  -  -  	add hl,bc
  671 D1:B89C 09 -  -  -  	add hl,bc 
  672 D1:B89D 09 -  -  -  	add hl,bc;move to sprite ptr
  673 D1:B89E -  -  -  -  	;call prgmpause
  674 D1:B89E ED 27 -  -  	ld hl,(hl);hl holds sprite data, if even = fast sprite 
  675 D1:B8A0 -  -  -  -  
  676 D1:B8A0 C9 -  -  -  	ret
  677 D1:B8A1 -  -  -  -  
  678 D1:B8A1 -  -  -  -  	;hl pts to sprite table index, returns de = sprite table ptr
  679 D1:B8A1 -  -  -  -  	
  680 D1:B8A1 -  -  -  -  sprite_table_from_index:
  681 D1:B8A1 E5 -  -  -  	push hl ;save 
  682 D1:B8A2 11 00 00 00 	ld de,0
  683 D1:B8A6 5E -  -  -  	ld e,(hl) ;e holds table index
  684 D1:B8A7 21 58 CD D1 	ld hl,Sprite_Table_Table
  685 D1:B8AB 19 -  -  -  	add hl,de 
  686 D1:B8AC 19 -  -  -  	add hl,de 
  687 D1:B8AD 19 -  -  -  	add hl,de ;inc to correct table
  688 D1:B8AE ED 17 -  -  	ld de,(hl)
  689 D1:B8B0 -  -  -  -  	
  690 D1:B8B0 -  -  -  -  
  691 D1:B8B0 -  -  -  -  	
  692 D1:B8B0 -  -  -  -  	;call prgmpause Seems to work
  693 D1:B8B0 -  -  -  -  	
  694 D1:B8B0 E1 -  -  -  	pop hl 
  695 D1:B8B1 C9 -  -  -  	ret 
  696 D1:B8B2 -  -  -  -  	
  697 D1:B8B2 -  -  -  -  
  698 D1:B8B2 -  -  -  -  
  699 D1:B8B2 -  -  -  -  	
  700 D1:B8B2 -  -  -  -  	
  701 D1:B8B2 -  -  -  -  	
  702 D1:B8B2 -  -  -  -  	
  703 D1:B8B2 -  -  -  -  	
  704 D1:B8B2 -  -  -  -  	
  705 D1:B8B2 -  -  -  -  	
  706 D1:B8B2 -  -  -  -  	
  707 D1:B8B2 -  -  -  -  	
  708 D1:B8B2 -  -  -  -  	
Listing for file "ascent.asm"
  550 D1:B8B2 -  -  -  -  #include "SpriteDecompressManager.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\SpriteDecompressManager.txt"
    1 D1:B8B2 -  -  -  -  
    2 D1:B8B2 -  -  -  -  
    3 D1:B8B2 -  -  -  -  decompress_queue_start .equ vram
    4 D1:B8B2 -  -  -  -  
    5 D1:B8B2 -  -  -  -  decompress_queue_end .equ vram + (7*64) ;Max queue length of 64
    6 D1:B8B2 -  -  -  -  
    7 D1:B8B2 -  -  -  -  decompress_tail_ptr:
    8 D1:B8B2 06 00 D4 -  	.dl decompress_queue_start + 6  ;points to sprite being currently decompressed (parameters byte)
    9 D1:B8B5 -  -  -  -  
   10 D1:B8B5 -  -  -  -  decompress_head_ptr: ;points to where next element will be added to queue
   11 D1:B8B5 00 00 D4 -  	.dl decompress_queue_start
   12 D1:B8B8 -  -  -  -  
   13 D1:B8B8 -  -  -  -  ;Decompress queue format
   14 D1:B8B8 -  -  -  -  ; .dl Sprite data ptr, decompress location, parameters (7 = fast, 6 = offset, 5 = flip, 4 =started decompressing 3 = finished decompressing )
   15 D1:B8B8 -  -  -  -  
   16 D1:B8B8 -  -  -  -  setup_decompress_queue: ;clears memory in queue
   17 D1:B8B8 3E FF -  -  	ld a,$FF
   18 D1:B8BA 01 C0 01 00 	ld bc, 7*64
   19 D1:B8BE 21 00 00 D4 	ld hl, decompress_queue_start
   20 D1:B8C2 22 B5 B8 D1 	ld (decompress_head_ptr),hl 
   21 D1:B8C6 CD E0 10 02 	call _MemSet
   22 D1:B8CA 21 06 00 D4 	ld hl, decompress_queue_start + 6
   23 D1:B8CE 22 B2 B8 D1 	ld (decompress_tail_ptr),hl 
   24 D1:B8D2 3E 00 -  -  	ld a,0 
   25 D1:B8D4 32 DD B9 D1 	ld (last_decompressed_cam_pos),a
   26 D1:B8D8 C9 -  -  -  	ret 
   27 D1:B8D9 -  -  -  -  
   28 D1:B8D9 -  -  -  -  ;bc = sprite data ptr, de = decompress location, a = params
   29 D1:B8D9 -  -  -  -  ;adds sprite to queue
   30 D1:B8D9 -  -  -  -  add_to_decompress_queue:
   31 D1:B8D9 2A B5 B8 D1 	ld hl, (decompress_head_ptr)
   32 D1:B8DD ED 0F -  -  	ld (hl), bc 
   33 D1:B8DF 23 -  -  -  	inc hl
   34 D1:B8E0 23 -  -  -  	inc hl 
   35 D1:B8E1 23 -  -  -  	inc hl 
   36 D1:B8E2 -  -  -  -  
   37 D1:B8E2 ED 1F -  -  	ld (hl),de
   38 D1:B8E4 -  -  -  -  	
   39 D1:B8E4 23 -  -  -  	inc hl 
   40 D1:B8E5 23 -  -  -  	inc hl 
   41 D1:B8E6 23 -  -  -  	inc hl 
   42 D1:B8E7 -  -  -  -  	
   43 D1:B8E7 77 -  -  -  	ld (hl), a 
   44 D1:B8E8 23 -  -  -  	inc hl ;start of next element 
   45 D1:B8E9 -  -  -  -  	
   46 D1:B8E9 E5 -  -  -  	push hl 
   47 D1:B8EA 11 C0 01 D4 	ld de, decompress_queue_end
   48 D1:B8EE 37 -  -  -  	scf
   49 D1:B8EF 3F -  -  -  	ccf
   50 D1:B8F0 ED 52 -  -  	sbc hl,de ;check if we have reached end of queue to wrap around
   51 D1:B8F2 E1 -  -  -  	pop hl
   52 D1:B8F3 CA FC B8 D1 	jp z, a2dq_back_to_start
   53 D1:B8F7 -  -  -  -  	
   54 D1:B8F7 22 B5 B8 D1 	ld (decompress_head_ptr),hl
   55 D1:B8FB -  -  -  -  	;ld a,$AB ;testing
   56 D1:B8FB -  -  -  -  	;call write_a_to_ram
   57 D1:B8FB C9 -  -  -  	ret
   58 D1:B8FC -  -  -  -  	
   59 D1:B8FC -  -  -  -  a2dq_back_to_start:
   60 D1:B8FC -  -  -  -  	;ld a,$AA ;testing
   61 D1:B8FC -  -  -  -  	;call write_a_to_ram
   62 D1:B8FC -  -  -  -  
   63 D1:B8FC 21 00 00 D4 	ld hl,decompress_queue_start
   64 D1:B900 22 B5 B8 D1 	ld (decompress_head_ptr),hl
   65 D1:B904 C9 -  -  -  	ret
   66 D1:B905 -  -  -  -  	
   67 D1:B905 -  -  -  -  	
   68 D1:B905 -  -  -  -  
   69 D1:B905 -  -  -  -  
   70 D1:B905 -  -  -  -  ;Runs after frame has been rendered. Checks through decompress queue and continues sprite decompressions
   71 D1:B905 -  -  -  -  	;if has ended, return. at end of queue
   72 D1:B905 -  -  -  -  	;if not started, begin decompression and set start flag
   73 D1:B905 -  -  -  -  	;if has started, but not ended, continue decompression 
   74 D1:B905 -  -  -  -  	;if started and ended, move to next element 
   75 D1:B905 -  -  -  -  continue_decompressions:
   76 D1:B905 2A B2 B8 D1 	ld hl, (decompress_tail_ptr)
   77 D1:B909 7E -  -  -  	ld a,(hl) ;decompress params 
   78 D1:B90A CB 5F -  -  	bit 3,a 
   79 D1:B90C C0 -  -  -  	ret nz ;sprite is done decompressing, at end of queue 
   80 D1:B90D -  -  -  -  	
   81 D1:B90D -  -  -  -  	;testing
   82 D1:B90D -  -  -  -  	;push af
   83 D1:B90D -  -  -  -  	;ld a,$55
   84 D1:B90D -  -  -  -  	;call write_a_to_ram
   85 D1:B90D -  -  -  -  	;pop af
   86 D1:B90D -  -  -  -  	
   87 D1:B90D -  -  -  -  	
   88 D1:B90D -  -  -  -  	
   89 D1:B90D -  -  -  -  	
   90 D1:B90D CB 67 -  -  	bit 4,a
   91 D1:B90F CA 4B B9 D1 	jp z, cd_begin_decompression
   92 D1:B913 -  -  -  -  	
   93 D1:B913 -  -  -  -  	;has started,not ended 
   94 D1:B913 CD A2 B2 D1 	call sdcomp_continue 
   95 D1:B917 B7 -  -  -  	or a 
   96 D1:B918 C0 -  -  -  	ret nz ;sprite not yet done decompressing 
   97 D1:B919 -  -  -  -  
   98 D1:B919 -  -  -  -  cd_done_decompressing:
   99 D1:B919 -  -  -  -  	;sprite finished decompressing
  100 D1:B919 2A B2 B8 D1 	ld hl, (decompress_tail_ptr)	
  101 D1:B91D CB DE -  -  	set 3,(hl) ;set finished flag
  102 D1:B91F 11 07 00 00 	ld de,7 
  103 D1:B923 19 -  -  -  	add hl,de ;points to next element in queue
  104 D1:B924 -  -  -  -  	
  105 D1:B924 E5 -  -  -  	push hl 
  106 D1:B925 11 C0 01 D4 	ld de, decompress_queue_end
  107 D1:B929 37 -  -  -  	scf
  108 D1:B92A 3F -  -  -  	ccf
  109 D1:B92B ED 52 -  -  	sbc hl,de ;check if need to wrap to start of queue
  110 D1:B92D E1 -  -  -  	pop hl
  111 D1:B92E D2 3A B9 D1 	jp nc, cd_back_to_start
  112 D1:B932 22 B2 B8 D1 	ld (decompress_tail_ptr),hl
  113 D1:B936 C3 05 B9 D1 	jp continue_decompressions ;Move on to next sprite 
  114 D1:B93A -  -  -  -  	
  115 D1:B93A -  -  -  -  cd_back_to_start:
  116 D1:B93A 21 00 00 D4 	ld hl,decompress_queue_start
  117 D1:B93E 11 06 00 00 	ld de,6 ;tail points to the parameters byte
  118 D1:B942 19 -  -  -  	add hl,de
  119 D1:B943 22 B2 B8 D1 	ld (decompress_tail_ptr),hl
  120 D1:B947 C3 05 B9 D1 	jp continue_decompressions ;Move on to next sprite 
  121 D1:B94B -  -  -  -  
  122 D1:B94B -  -  -  -  cd_begin_decompression:
  123 D1:B94B -  -  -  -  
  124 D1:B94B -  -  -  -  	;testing
  125 D1:B94B -  -  -  -  	;push af 
  126 D1:B94B -  -  -  -  	;ld a,$AA
  127 D1:B94B -  -  -  -  	;call write_a_to_ram
  128 D1:B94B -  -  -  -  	;pop af
  129 D1:B94B -  -  -  -  	
  130 D1:B94B -  -  -  -  	;setup and begin decompressing
  131 D1:B94B CB E6 -  -  	set 4,(hl) ;set start flag
  132 D1:B94D F5 -  -  -  	push af 
  133 D1:B94E CB 7F -  -  	bit 7,a 
  134 D1:B950 C4 D0 B4 D1 	call nz, sdcomp_set_fast
  135 D1:B954 F1 -  -  -  	pop af 
  136 D1:B955 -  -  -  -  	
  137 D1:B955 F5 -  -  -  	push af 
  138 D1:B956 CB 7F -  -  	bit 7,a 
  139 D1:B958 CC DF B4 D1 	call z, sdcomp_reset_fast
  140 D1:B95C F1 -  -  -  	pop af 
  141 D1:B95D -  -  -  -  	
  142 D1:B95D F5 -  -  -  	push af 
  143 D1:B95E CB 77 -  -  	bit 6,a 
  144 D1:B960 C4 60 B4 D1 	call nz, sdcomp_set_offset
  145 D1:B964 F1 -  -  -  	pop af 
  146 D1:B965 -  -  -  -  	
  147 D1:B965 F5 -  -  -  	push af 
  148 D1:B966 CB 77 -  -  	bit 6,a 
  149 D1:B968 CC 71 B4 D1 	call z, sdcomp_reset_offset
  150 D1:B96C F1 -  -  -  	pop af 
  151 D1:B96D -  -  -  -  	
  152 D1:B96D F5 -  -  -  	push af 
  153 D1:B96E CB 6F -  -  	bit 5,a 
  154 D1:B970 C4 82 B4 D1 	call nz, sdcomp_set_flip
  155 D1:B974 F1 -  -  -  	pop af 
  156 D1:B975 -  -  -  -  	
  157 D1:B975 F5 -  -  -  	push af 
  158 D1:B976 CB 6F -  -  	bit 5,a 
  159 D1:B978 CC A9 B4 D1 	call z, sdcomp_reset_flip
  160 D1:B97C F1 -  -  -  	pop af 
  161 D1:B97D -  -  -  -  	
  162 D1:B97D 2A B2 B8 D1 	ld hl, (decompress_tail_ptr) ;may be unnessecary
  163 D1:B981 -  -  -  -  	
  164 D1:B981 2B -  -  -  	dec hl 
  165 D1:B982 2B -  -  -  	dec hl 
  166 D1:B983 2B -  -  -  	dec hl 
  167 D1:B984 ED 17 -  -  	ld de,(hl) ;load decompress location
  168 D1:B986 -  -  -  -  
  169 D1:B986 2B -  -  -  	dec hl 
  170 D1:B987 2B -  -  -  	dec hl 
  171 D1:B988 2B -  -  -  	dec hl 
  172 D1:B989 ED 27 -  -  	ld hl,(hl) ;load sprite data ptr
  173 D1:B98B -  -  -  -  
  174 D1:B98B CD FF B0 D1 	call sprite_decompress
  175 D1:B98F B7 -  -  -  	or a 
  176 D1:B990 C0 -  -  -  	ret nz ;sprite not yet done decompressing 
  177 D1:B991 C3 19 B9 D1 	jp cd_done_decompressing
  178 D1:B995 -  -  -  -  
  179 D1:B995 -  -  -  -  
  180 D1:B995 -  -  -  -  ;Checks to see if cam has moved to a new frame and decompressions need to be added to queue
  181 D1:B995 -  -  -  -  check_for_decompress_calls:
  182 D1:B995 3A DD B9 D1 	ld a, (last_decompressed_cam_pos)
  183 D1:B999 47 -  -  -  	ld b,a ;put last decompressed pos in b
  184 D1:B99A 3A CF AB D1 	ld a, (cam_pos + 1) ;Current frame cam is in
  185 D1:B99E 32 DD B9 D1 	ld (last_decompressed_cam_pos),a ;store this frame as the last decompressed frame 
  186 D1:B9A2 -  -  -  -  	;need to check if cam has moved up or down since last time
  187 D1:B9A2 B8 -  -  -  	cp a,b 
  188 D1:B9A3 -  -  -  -  	
  189 D1:B9A3 -  -  -  -  	
  190 D1:B9A3 C8 -  -  -  	ret z ;if same, no new things to add to queue 
  191 D1:B9A4 D2 B0 B9 D1 	jp nc, cfdc_cam_move_up ;camera has moved up since last time 
  192 D1:B9A8 -  -  -  -  	
  193 D1:B9A8 -  -  -  -  	;cam has moved down since last time 
  194 D1:B9A8 21 F7 C2 D1 	ld hl, decompress_calls_table_down
  195 D1:B9AC C3 B4 B9 D1 	jp cfdc_add_calls_to_queue
  196 D1:B9B0 -  -  -  -  	
  197 D1:B9B0 -  -  -  -  	
  198 D1:B9B0 -  -  -  -  cfdc_cam_move_up:
  199 D1:B9B0 21 E9 C1 D1 	ld hl, decompress_calls_table_up
  200 D1:B9B4 -  -  -  -  
  201 D1:B9B4 -  -  -  -  	;a = cam frame, hl = decompress call table (up or down)
  202 D1:B9B4 -  -  -  -  cfdc_add_calls_to_queue:
  203 D1:B9B4 -  -  -  -  
  204 D1:B9B4 -  -  -  -  	;call write_a_to_ram
  205 D1:B9B4 -  -  -  -  
  206 D1:B9B4 01 00 00 00 	ld bc,0
  207 D1:B9B8 4F -  -  -  	ld c,a
  208 D1:B9B9 09 -  -  -  	add hl,bc 
  209 D1:B9BA 09 -  -  -  	add hl,bc 
  210 D1:B9BB 09 -  -  -  	add hl,bc 
  211 D1:B9BC ED 27 -  -  	ld hl,(hl) ;hl now points to correct decompress frame 
  212 D1:B9BE -  -  -  -  cfdc_direct_add_decompress_frame:
  213 D1:B9BE -  -  -  -  
  214 D1:B9BE 08 -  -  -  	ex af,af' ;'
  215 D1:B9BF 7E -  -  -  	ld a,(hl) ;a' holds num elements 
  216 D1:B9C0 -  -  -  -  	
  217 D1:B9C0 -  -  -  -  	;call write_a_to_ram
  218 D1:B9C0 -  -  -  -  	
  219 D1:B9C0 -  -  -  -  	;call prgmpause
  220 D1:B9C0 -  -  -  -  	
  221 D1:B9C0 3C -  -  -  	inc a ;to be decd later
  222 D1:B9C1 08 -  -  -  	ex af,af' ;'
  223 D1:B9C2 -  -  -  -  	
  224 D1:B9C2 23 -  -  -  	inc hl ;points to first sprite data 
  225 D1:B9C3 -  -  -  -  cfdc_add_to_queue_loop:
  226 D1:B9C3 08 -  -  -  	ex af,af' ;'
  227 D1:B9C4 -  -  -  -  	;call write_a_to_ram
  228 D1:B9C4 3D -  -  -  	dec a ;account for cases where frame has 0 elements 
  229 D1:B9C5 C8 -  -  -  	ret z
  230 D1:B9C6 08 -  -  -  	ex af,af' ;'
  231 D1:B9C7 ED 07 -  -  	ld bc ,(hl) ;load sprite data 
  232 D1:B9C9 23 -  -  -  	inc hl 
  233 D1:B9CA 23 -  -  -  	inc hl
  234 D1:B9CB 23 -  -  -  	inc hl 
  235 D1:B9CC ED 17 -  -  	ld de,(hl) ;load decomp location 
  236 D1:B9CE 23 -  -  -  	inc hl 
  237 D1:B9CF 23 -  -  -  	inc hl
  238 D1:B9D0 23 -  -  -  	inc hl 
  239 D1:B9D1 7E -  -  -  	ld a,(hl) ;ld params
  240 D1:B9D2 23 -  -  -  	inc hl 
  241 D1:B9D3 E5 -  -  -  	push hl
  242 D1:B9D4 CD D9 B8 D1 	call add_to_decompress_queue
  243 D1:B9D8 E1 -  -  -  	pop hl
  244 D1:B9D9 C3 C3 B9 D1 	jp cfdc_add_to_queue_loop
  245 D1:B9DD -  -  -  -  	
  246 D1:B9DD -  -  -  -  	
  247 D1:B9DD -  -  -  -  
  248 D1:B9DD -  -  -  -  
  249 D1:B9DD -  -  -  -  last_decompressed_cam_pos:
  250 D1:B9DD 00 -  -  -  	.db 0 ;camera frame last time checking for decomp was called 
  251 D1:B9DE -  -  -  -  	
  252 D1:B9DE -  -  -  -  	
  253 D1:B9DE -  -  -  -  
  254 D1:B9DE -  -  -  -  
  255 D1:B9DE -  -  -  -  
  256 D1:B9DE -  -  -  -  
  257 D1:B9DE -  -  -  -  
  258 D1:B9DE -  -  -  -  
  259 D1:B9DE -  -  -  -  
  260 D1:B9DE -  -  -  -  
  261 D1:B9DE -  -  -  -  
  262 D1:B9DE -  -  -  -  
  263 D1:B9DE -  -  -  -  
  264 D1:B9DE -  -  -  -  
  265 D1:B9DE -  -  -  -  
  266 D1:B9DE -  -  -  -  
  267 D1:B9DE -  -  -  -  
  268 D1:B9DE -  -  -  -  
  269 D1:B9DE -  -  -  -  
  270 D1:B9DE -  -  -  -  
  271 D1:B9DE -  -  -  -  
  272 D1:B9DE -  -  -  -  
  273 D1:B9DE -  -  -  -  
  274 D1:B9DE -  -  -  -  
  275 D1:B9DE -  -  -  -  
  276 D1:B9DE -  -  -  -  
  277 D1:B9DE -  -  -  -  
Listing for file "ascent.asm"
  551 D1:B9DE -  -  -  -  #include "getInputs.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\getInputs.txt"
    1 D1:B9DE -  -  -  -  
    2 D1:B9DE -  -  -  -  
    3 D1:B9DE -  -  -  -  
    4 D1:B9DE -  -  -  -  get_inputs:
    5 D1:B9DE 21 00 00 F5 	ld	hl,DI_Mode		; register for keypad mode
    6 D1:B9E2 36 02 -  -  	ld	(hl),2			; set single scan mode
    7 D1:B9E4 -  -  -  -  
    8 D1:B9E4 AF -  -  -  	xor	a,a
    9 D1:B9E5 -  -  -  -  scan_wait:
   10 D1:B9E5 BE -  -  -  	cp	a,(hl)			; wait for keypad idle mode
   11 D1:B9E6 20 FD -  -  	jr	nz,scan_wait
   12 D1:B9E8 -  -  -  -  	
   13 D1:B9E8 -  -  -  -  	; https://wikiti.brandonw.net/index.php?title=84PCE:Ports:A000
   14 D1:B9E8 -  -  -  -  	
   15 D1:B9E8 3A 1E 00 F5 	ld	a,(kbdG7) ; $F5001E
   16 D1:B9EC CB 5F -  -   	bit	kbitUp,a
   17 D1:B9EE F5 -  -  -  	push af 
   18 D1:B9EF C2 08 BA D1 	jp nz, input_cam_up
   19 D1:B9F3 F1 -  -  -  	pop af 
   20 D1:B9F4 -  -  -  -  	
   21 D1:B9F4 CB 47 -  -  	bit	kbitDown,a
   22 D1:B9F6 C2 28 BA D1 	jp nz, input_cam_down
   23 D1:B9FA -  -  -  -  
   24 D1:B9FA -  -  -  -  
   25 D1:B9FA 3A 1C 00 F5 	ld a,(kbdG6)
   26 D1:B9FE CB 77 -  -  	bit kbitClear,a
   27 D1:BA00 C2 61 AB D1 	jp nz,exit_prgm
   28 D1:BA04 -  -  -  -  	
   29 D1:BA04 -  -  -  -  
   30 D1:BA04 C3 1F A9 D1 	jp get_inputs_return
   31 D1:BA08 -  -  -  -  	
   32 D1:BA08 -  -  -  -  	
   33 D1:BA08 -  -  -  -  input_cam_up:
   34 D1:BA08 -  -  -  -  	;Move cam
   35 D1:BA08 2A CE AB D1 	ld hl,(cam_pos)
   36 D1:BA0C -  -  -  -  	
   37 D1:BA0C E5 -  -  -  	push hl 
   38 D1:BA0D 01 C4 09 00 	ld bc,2500
   39 D1:BA11 ED 42 -  -  	sbc hl,bc 
   40 D1:BA13 E1 -  -  -  	pop hl 
   41 D1:BA14 D2 1F A9 D1 	jp nc, get_inputs_return
   42 D1:BA18 -  -  -  -  	
   43 D1:BA18 23 -  -  -  	inc hl
   44 D1:BA19 23 -  -  -  	inc hl
   45 D1:BA1A 23 -  -  -  	inc hl
   46 D1:BA1B 23 -  -  -  	inc hl
   47 D1:BA1C 23 -  -  -  	inc hl
   48 D1:BA1D 23 -  -  -  	inc hl
   49 D1:BA1E 23 -  -  -  	inc hl
   50 D1:BA1F 23 -  -  -  	inc hl
   51 D1:BA20 -  -  -  -  	
   52 D1:BA20 22 CE AB D1 	ld (cam_pos),hl
   53 D1:BA24 C3 1F A9 D1 	jp get_inputs_return
   54 D1:BA28 -  -  -  -  
   55 D1:BA28 -  -  -  -  
   56 D1:BA28 -  -  -  -  input_cam_down:
   57 D1:BA28 -  -  -  -  	;Move cam
   58 D1:BA28 2A CE AB D1 	ld hl,(cam_pos)
   59 D1:BA2C -  -  -  -  	
   60 D1:BA2C -  -  -  -  	
   61 D1:BA2C E5 -  -  -  	push hl 
   62 D1:BA2D 01 0A 00 00 	ld bc,10 
   63 D1:BA31 ED 42 -  -  	sbc hl,bc 
   64 D1:BA33 E1 -  -  -  	pop hl 
   65 D1:BA34 DA 1F A9 D1 	jp c, get_inputs_return
   66 D1:BA38 -  -  -  -  	
   67 D1:BA38 2B -  -  -  	dec hl
   68 D1:BA39 2B -  -  -  	dec hl
   69 D1:BA3A 2B -  -  -  	dec hl
   70 D1:BA3B 2B -  -  -  	dec hl
   71 D1:BA3C 2B -  -  -  	dec hl
   72 D1:BA3D 2B -  -  -  	dec hl
   73 D1:BA3E 2B -  -  -  	dec hl
   74 D1:BA3F 2B -  -  -  	dec hl
   75 D1:BA40 -  -  -  -  	
   76 D1:BA40 -  -  -  -  	
   77 D1:BA40 -  -  -  -  	
   78 D1:BA40 -  -  -  -  	
   79 D1:BA40 -  -  -  -  	
   80 D1:BA40 22 CE AB D1 	ld (cam_pos),hl
   81 D1:BA44 C3 1F A9 D1 	jp get_inputs_return
   82 D1:BA48 -  -  -  -  	
   83 D1:BA48 -  -  -  -  	
   84 D1:BA48 -  -  -  -  	
Listing for file "ascent.asm"
  552 D1:BA48 -  -  -  -  #include "PlayerController.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\PlayerController.txt"
    1 D1:BA48 -  -  -  -  
    2 D1:BA48 -  -  -  -  
    3 D1:BA48 -  -  -  -  
    4 D1:BA48 -  -  -  -  charge_jump_left:
    5 D1:BA48 -  -  -  -  	;Decrease jump right strength if it > -127 
    6 D1:BA48 -  -  -  -  	;Increase jump up strength 
    7 D1:BA48 -  -  -  -  	;Do nothing if jump left timer is above max value 
    8 D1:BA48 3A 2E BC D1 	ld a,(player_flags)
    9 D1:BA4C CB FF -  -  	set 7, a 
   10 D1:BA4E 32 2E BC D1 	ld (player_flags),a 
   11 D1:BA52 -  -  -  -  	
   12 D1:BA52 3A 20 BC D1 	ld a,(jump_left_charge_timer)
   13 D1:BA56 FE 1E -  -  	cp timer_max_val
   14 D1:BA58 D2 6E BA D1 	jp nc, cjl_skip
   15 D1:BA5C 3C -  -  -  	inc a 
   16 D1:BA5D 32 20 BC D1 	ld (jump_left_charge_timer),a
   17 D1:BA61 3A 1F BC D1 	ld a,(jump_strength_right)
   18 D1:BA65 3D -  -  -  	dec a 
   19 D1:BA66 F2 6E BA D1 	jp p,cjl_skip ;Checks if we went from negative to positive
   20 D1:BA6A 32 1F BC D1 	ld (jump_strength_right),a 
   21 D1:BA6E -  -  -  -  cjl_skip:
   22 D1:BA6E C9 -  -  -  	ret 
   23 D1:BA6F -  -  -  -  
   24 D1:BA6F -  -  -  -  
   25 D1:BA6F -  -  -  -  charge_jump_right:
   26 D1:BA6F -  -  -  -  	;Increase jump right strength if it < 127 
   27 D1:BA6F -  -  -  -  	;Increase jump up strength 
   28 D1:BA6F -  -  -  -  	;Do nothing if jump  timer is above max value 
   29 D1:BA6F -  -  -  -  	
   30 D1:BA6F 3A 2E BC D1 	ld a,(player_flags)
   31 D1:BA73 CB FF -  -  	set 7, a 
   32 D1:BA75 32 2E BC D1 	ld (player_flags),a 
   33 D1:BA79 -  -  -  -  	
   34 D1:BA79 3A 21 BC D1 	ld a,(jump_right_charge_timer)
   35 D1:BA7D FE 1E -  -  	cp timer_max_val
   36 D1:BA7F D2 95 BA D1 	jp nc, cjr_skip
   37 D1:BA83 3C -  -  -  	inc a 
   38 D1:BA84 32 21 BC D1 	ld (jump_right_charge_timer),a
   39 D1:BA88 3A 1F BC D1 	ld a,(jump_strength_right)
   40 D1:BA8C 3C -  -  -  	inc a
   41 D1:BA8D F2 95 BA D1 	jp p,cjr_skip ;Checks if we went from negative to positive
   42 D1:BA91 32 1F BC D1 	ld (jump_strength_right),a 
   43 D1:BA95 -  -  -  -  cjr_skip:
   44 D1:BA95 C9 -  -  -  	ret 
   45 D1:BA96 -  -  -  -  
   46 D1:BA96 -  -  -  -  
   47 D1:BA96 -  -  -  -  player_update: ;Should be called after inputs
   48 D1:BA96 -  -  -  -  
   49 D1:BA96 3A 2E BC D1 	ld a,(player_flags)
   50 D1:BA9A CB 7F -  -  	bit 7,a 
   51 D1:BA9C CA A6 BA D1 	jp z, pu_try_jump
   52 D1:BAA0 -  -  -  -  	
   53 D1:BAA0 -  -  -  -  	;Jump key is held, charge jump
   54 D1:BAA0 -  -  -  -  	;Jumps can be charged in air, for immediate jump
   55 D1:BAA0 CB BF -  -  	res 7,a ;Reset jump hold check 
   56 D1:BAA2 32 2E BC D1 	ld (player_flags),a 
   57 D1:BAA6 -  -  -  -  
   58 D1:BAA6 -  -  -  -  	
   59 D1:BAA6 -  -  -  -  	
   60 D1:BAA6 -  -  -  -  pu_try_jump:
   61 D1:BAA6 -  -  -  -  	;no jump keys held this frame. If jump timer > 0 and on ground, then jump 
   62 D1:BAA6 -  -  -  -  	
   63 D1:BAA6 CB 77 -  -  	bit 6,a ;ground check 
   64 D1:BAA8 C2 09 BB D1 	jp nz, pu_no_jump
   65 D1:BAAC 3A 20 BC D1 	ld a,(jump_left_charge_timer)
   66 D1:BAB0 47 -  -  -  	ld b,a 
   67 D1:BAB1 3A 21 BC D1 	ld a,(jump_right_charge_timer)
   68 D1:BAB5 B0 -  -  -  	or b
   69 D1:BAB6 CA 09 BB D1 	jp z,pu_no_jump
   70 D1:BABA -  -  -  -  	
   71 D1:BABA -  -  -  -  	;Player is on ground and should execute a jump 
   72 D1:BABA -  -  -  -  	
   73 D1:BABA 21 00 00 00 	ld hl,0 
   74 D1:BABE 3A 1E BC D1 	ld a,(jump_strength_up)
   75 D1:BAC2 6F -  -  -  	ld l,a
   76 D1:BAC3 -  -  -  -  	
   77 D1:BAC3 CB 25 -  -  	sla l ;mult by 2 
   78 D1:BAC5 CB 14 -  -  	rl h 
   79 D1:BAC7 CB 25 -  -  	sla l ;mult by 2 
   80 D1:BAC9 CB 14 -  -  	rl h 
   81 D1:BACB CB 25 -  -  	sla l ;mult by 2 
   82 D1:BACD CB 14 -  -  	rl h 
   83 D1:BACF CB 25 -  -  	sla l ;mult by 2 
   84 D1:BAD1 CB 14 -  -  	rl h 
   85 D1:BAD3 -  -  -  -  
   86 D1:BAD3 22 2B BC D1 	ld (player_y_vel),hl 
   87 D1:BAD7 -  -  -  -  	
   88 D1:BAD7 3A 1F BC D1 	ld a,(jump_strength_right)
   89 D1:BADB CB 7F -  -  	bit 7, a 
   90 D1:BADD C2 E6 BA D1 	jp nz, pu_left_jump 
   91 D1:BAE1 -  -  -  -  		
   92 D1:BAE1 -  -  -  -  	;right jump 
   93 D1:BAE1 6F -  -  -  	ld l,a 
   94 D1:BAE2 C3 EB BA D1 	jp pu_jump_cont
   95 D1:BAE6 -  -  -  -  pu_left_jump:
   96 D1:BAE6 -  -  -  -  	
   97 D1:BAE6 21 FF FF FF 	ld hl, $ffffff
   98 D1:BAEA 6F -  -  -  	ld l,a 
   99 D1:BAEB -  -  -  -  pu_jump_cont:
  100 D1:BAEB -  -  -  -  	
  101 D1:BAEB CB 25 -  -  	sla l ;mult by 2 
  102 D1:BAED CB 14 -  -  	rl h 
  103 D1:BAEF CB 25 -  -  	sla l ;mult by 2 
  104 D1:BAF1 CB 14 -  -  	rl h 
  105 D1:BAF3 CB 25 -  -  	sla l ;mult by 2 
  106 D1:BAF5 CB 14 -  -  	rl h 
  107 D1:BAF7 CB 25 -  -  	sla l ;mult by 2 
  108 D1:BAF9 CB 14 -  -  	rl h 
  109 D1:BAFB -  -  -  -  	
  110 D1:BAFB 22 28 BC D1 	ld (player_x_vel),hl 
  111 D1:BAFF -  -  -  -  	
  112 D1:BAFF -  -  -  -  	;Clear ground flag 
  113 D1:BAFF 3A 2E BC D1 	ld a,(player_flags)
  114 D1:BB03 CB B7 -  -  	res 6, a 
  115 D1:BB05 32 2E BC D1 	ld (player_flags),a 
  116 D1:BB09 -  -  -  -  	
  117 D1:BB09 -  -  -  -  pu_no_jump:	
  118 D1:BB09 -  -  -  -  	;reset jump timers 
  119 D1:BB09 3E 00 -  -  	ld a,0 
  120 D1:BB0B 32 20 BC D1 	ld (jump_left_charge_timer),a 
  121 D1:BB0F 32 21 BC D1 	ld (jump_right_charge_timer),a 
  122 D1:BB13 -  -  -  -  	
  123 D1:BB13 -  -  -  -  	
  124 D1:BB13 -  -  -  -  
  125 D1:BB13 -  -  -  -  pu_physics:
  126 D1:BB13 -  -  -  -  
  127 D1:BB13 -  -  -  -  	;Execute player physics update and check for collisions 
  128 D1:BB13 -  -  -  -  	;Run multiple times, 4 steps per frame? 
  129 D1:BB13 -  -  -  -  	;Move up first, then check collision, then move side and check again 
  130 D1:BB13 -  -  -  -  	
  131 D1:BB13 08 -  -  -  	ex af, af' ;' 
  132 D1:BB14 3E 05 -  -  	ld a,5 ;num physics loops 
  133 D1:BB16 08 -  -  -  	ex af, af' ;' 
  134 D1:BB17 -  -  -  -  	
  135 D1:BB17 -  -  -  -  pu_physics_loop:
  136 D1:BB17 08 -  -  -  	ex af, af' ;' 
  137 D1:BB18 3D -  -  -  	dec a 
  138 D1:BB19 CA 5C BB D1 	jp z, player_draw 
  139 D1:BB1D 08 -  -  -  	ex af, af' ;' 
  140 D1:BB1E -  -  -  -  	
  141 D1:BB1E 3A 2E BC D1 	ld a,(player_flags)
  142 D1:BB22 CB 77 -  -  	bit 6,a 
  143 D1:BB24 C2 17 BB D1 	jp nz,pu_physics_loop ;If on ground, no need to do physics 
  144 D1:BB28 -  -  -  -  	
  145 D1:BB28 -  -  -  -  	
  146 D1:BB28 2A 2B BC D1 	ld hl, (player_y_vel) 
  147 D1:BB2C EB -  -  -  	ex de,hl 
  148 D1:BB2D 2A 25 BC D1 	ld hl, (player_y_pos) 
  149 D1:BB31 -  -  -  -  	
  150 D1:BB31 19 -  -  -  	add hl,de ;add y vel to y pos 
  151 D1:BB32 -  -  -  -  	
  152 D1:BB32 -  -  -  -  	;TODO check for collisions here 
  153 D1:BB32 -  -  -  -  	
  154 D1:BB32 -  -  -  -  	;Temp 
  155 D1:BB32 11 26 00 00 	ld de, 38
  156 D1:BB36 ED 52 -  -  	sbc hl,de 
  157 D1:BB38 D2 4A BB D1 	jp nc, pu_update_y_pos 
  158 D1:BB3C -  -  -  -  
  159 D1:BB3C -  -  -  -  pu_ground_hit:
  160 D1:BB3C 21 26 00 00 	ld hl,38 ;TEMP 
  161 D1:BB40 3A 2E BC D1 	ld a,(player_flags)
  162 D1:BB44 CB F7 -  -  	set 6,a 
  163 D1:BB46 32 2E BC D1 	ld (player_flags),a 
  164 D1:BB4A -  -  -  -  
  165 D1:BB4A -  -  -  -  pu_update_y_pos:
  166 D1:BB4A 22 25 BC D1 	ld (player_y_pos),hl 
  167 D1:BB4E -  -  -  -  	
  168 D1:BB4E -  -  -  -  	;Apply gravity 
  169 D1:BB4E 2A 2B BC D1 	ld hl,(player_y_vel)
  170 D1:BB52 11 50 00 00 	ld de,80
  171 D1:BB56 ED 52 -  -  	sbc hl,de 
  172 D1:BB58 22 2B BC D1 	ld (player_y_vel),hl 
  173 D1:BB5C -  -  -  -  	
  174 D1:BB5C -  -  -  -  
  175 D1:BB5C -  -  -  -  
  176 D1:BB5C -  -  -  -  player_draw:
  177 D1:BB5C -  -  -  -  ;Draw sprite and reset any flags 
  178 D1:BB5C -  -  -  -  
  179 D1:BB5C -  -  -  -  	;Todo Logic for choosing sprite index 
  180 D1:BB5C 3E 00 -  -  	ld a,0 
  181 D1:BB5E 32 13 BC D1 	ld (player_sprite_index),a 
  182 D1:BB62 3E 13 -  -  	ld a, 19
  183 D1:BB64 32 CD BB D1 	ld (pd_sprite_height_1),a 
  184 D1:BB68 32 EC BB D1 	ld (pd_sprite_height_2),a 
  185 D1:BB6C -  -  -  -  	
  186 D1:BB6C -  -  -  -  	
  187 D1:BB6C -  -  -  -  	;ld x pos
  188 D1:BB6C 3A 23 BC D1 	ld a, (player_x_pos + 1) ;fullpixel byte
  189 D1:BB70 -  -  -  -  
  190 D1:BB70 CB 47 -  -  	bit 0, a ;least fullpixel bit 
  191 D1:BB72 CA 7F BB D1 	jp z, pd_even_px 
  192 D1:BB76 ED 5B 1B BC 
              D1 -  -  -  	ld de, (player_sprite_table_offset)
  193 D1:BB7B C3 84 BB D1 	jp pd_set_sprite_table
  194 D1:BB7F -  -  -  -  pd_even_px:
  195 D1:BB7F ED 5B 18 BC 
              D1 -  -  -  	ld de, (player_sprite_table)
  196 D1:BB84 -  -  -  -  pd_set_sprite_table:
  197 D1:BB84 ED 53 0F BC 
              D1 -  -  -  	ld (pd_sprite_table), de 
  198 D1:BB89 -  -  -  -  	
  199 D1:BB89 CB 3F -  -  	srl a ;div by 2
  200 D1:BB8B 47 -  -  -  	ld b,a 
  201 D1:BB8C 3A 24 BC D1 	ld a,(player_x_pos+2);MSB fullpixel 
  202 D1:BB90 0F -  -  -  	rrca ;Move bit 0 to bit 7
  203 D1:BB91 B0 -  -  -  	or b 
  204 D1:BB92 -  -  -  -  
  205 D1:BB92 -  -  -  -  	
  206 D1:BB92 32 0B BC D1 	ld (pd_xpos_full),a 
  207 D1:BB96 -  -  -  -  	
  208 D1:BB96 -  -  -  -  	;call write_a_to_ram
  209 D1:BB96 -  -  -  -  	
  210 D1:BB96 21 00 00 00 	ld hl,0 
  211 D1:BB9A 3A 27 BC D1 	ld a,(player_y_pos + 2) ;MSB
  212 D1:BB9E 67 -  -  -  	ld h,a 
  213 D1:BB9F 3A 26 BC D1 	ld a, (player_y_pos + 1) ;middle bit (fullpixel LSB)
  214 D1:BBA3 6F -  -  -  	ld l,a 
  215 D1:BBA4 -  -  -  -  
  216 D1:BBA4 EB -  -  -  	ex de,hl 
  217 D1:BBA5 2A CE AB D1 	ld hl,(cam_pos)
  218 D1:BBA9 CB 3C -  -  	srl h ;div by 2
  219 D1:BBAB CB 1D -  -  	rr l 
  220 D1:BBAD 01 EF 00 00 	ld bc,239
  221 D1:BBB1 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of fg layer
  222 D1:BBB2 -  -  -  -  	
  223 D1:BBB2 -  -  -  -  	;Uppermost vp line - player y  = lines below top to draw player 
  224 D1:BBB2 ED 52 -  -  	sbc hl,de 
  225 D1:BBB4 -  -  -  -  	;call write_hl_to_ram
  226 D1:BBB4 DA E4 BB D1 	jp c, pd_top_cut
  227 D1:BBB8 -  -  -  -  	
  228 D1:BBB8 7C -  -  -  	ld a,h 
  229 D1:BBB9 -  -  -  -  	
  230 D1:BBB9 B7 -  -  -  	or a 
  231 D1:BBBA C0 -  -  -  	ret nz ;player is > 256 px below cam 
  232 D1:BBBB -  -  -  -  	
  233 D1:BBBB 7D -  -  -  	ld a,l 
  234 D1:BBBC -  -  -  -  
  235 D1:BBBC -  -  -  -  	;a holds lines below vp top to draw player
  236 D1:BBBC -  -  -  -  
  237 D1:BBBC 47 -  -  -  	ld b,a 
  238 D1:BBBD 3E EF -  -  	ld a,239
  239 D1:BBBF 90 -  -  -  	sub a,b ;lines above bottom of VP 
  240 D1:BBC0 D8 -  -  -  	ret c 
  241 D1:BBC1 -  -  -  -  
  242 D1:BBC1 -  -  -  -  	
  243 D1:BBC1 ED 5B D4 AB 
              D1 -  -  -  	ld de, (draw_buffer)
  244 D1:BBC6 21 00 96 00 	ld hl, 240*160
  245 D1:BBCA 19 -  -  -  	add hl,de 
  246 D1:BBCB EB -  -  -  	ex de,hl ;DE hlds VP bottom 
  247 D1:BBCC -  -  -  -  	
  248 D1:BBCC -  -  -  -  pd_sprite_height_1 .equ $ + 1
  249 D1:BBCC FE 00 -  -  	cp 0 
  250 D1:BBCE DA DB BB D1 	jp c, pd_bottom_cut 
  251 D1:BBD2 -  -  -  -  	
  252 D1:BBD2 -  -  -  -  
  253 D1:BBD2 -  -  -  -  	
  254 D1:BBD2 -  -  -  -  	;Otherwise, no top or bottm cut
  255 D1:BBD2 -  -  -  -  	;a holds lines above bottom VP 
  256 D1:BBD2 CD FC BB D1 	call pd_setup_draw
  257 D1:BBD6 -  -  -  -  	
  258 D1:BBD6 -  -  -  -  
  259 D1:BBD6 -  -  -  -  	;call prgmpause
  260 D1:BBD6 -  -  -  -  	
  261 D1:BBD6 CD BC AE D1 	call draw_slow_sprite_full
  262 D1:BBDA -  -  -  -  	
  263 D1:BBDA -  -  -  -  	
  264 D1:BBDA C9 -  -  -  	ret
  265 D1:BBDB -  -  -  -  
  266 D1:BBDB -  -  -  -  pd_bottom_cut:
  267 D1:BBDB -  -  -  -  	;a holds lines to draw
  268 D1:BBDB -  -  -  -  	;DE holds vram bottom 
  269 D1:BBDB CD FC BB D1 	call pd_setup_draw
  270 D1:BBDF CD 27 AF D1 	call draw_slow_sprite_bottom_cut
  271 D1:BBE3 -  -  -  -  	
  272 D1:BBE3 -  -  -  -  	;push af 
  273 D1:BBE3 -  -  -  -  	;ld a,$33
  274 D1:BBE3 -  -  -  -  	;call write_a_to_ram 
  275 D1:BBE3 -  -  -  -  	;pop af 
  276 D1:BBE3 -  -  -  -  	
  277 D1:BBE3 C9 -  -  -  	ret 
  278 D1:BBE4 -  -  -  -  	
  279 D1:BBE4 -  -  -  -  
  280 D1:BBE4 -  -  -  -  pd_top_cut:
  281 D1:BBE4 -  -  -  -  	;call write_hl_to_ram
  282 D1:BBE4 -  -  -  -  	;push af 
  283 D1:BBE4 -  -  -  -  	;ld a,$44
  284 D1:BBE4 -  -  -  -  	;call write_a_to_ram 
  285 D1:BBE4 -  -  -  -  	;pop af 
  286 D1:BBE4 -  -  -  -  
  287 D1:BBE4 7C -  -  -  	ld a,h ;Upper byte after subtraction, check for chase where player > 256 px above cam to prevent overflow errors
  288 D1:BBE5 EE FF -  -  	xor %11111111 ;flip all bits 
  289 D1:BBE7 C0 -  -  -  	ret nz ;player is > 256 px above cam 
  290 D1:BBE8 -  -  -  -  	
  291 D1:BBE8 -  -  -  -   
  292 D1:BBE8 -  -  -  -  	
  293 D1:BBE8 7D -  -  -  	ld a,l ;lines below VP
  294 D1:BBE9 ED 44 -  -  	neg 
  295 D1:BBEB -  -  -  -  
  296 D1:BBEB -  -  -  -  	;a holds lines above vp top = lines to cut 
  297 D1:BBEB -  -  -  -  pd_sprite_height_2 .equ $ + 1 
  298 D1:BBEB FE 00 -  -  	cp 0 ; compare to height 
  299 D1:BBED D0 -  -  -  	ret nc 
  300 D1:BBEE -  -  -  -  
  301 D1:BBEE ED 5B D4 AB 
              D1 -  -  -  	ld de,(draw_buffer)
  302 D1:BBF3 CD FC BB D1 	call pd_setup_draw ;Setup draw pos 
  303 D1:BBF7 -  -  -  -  	
  304 D1:BBF7 -  -  -  -  	;bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  305 D1:BBF7 -  -  -  -  	;jp z,pd_top_cut_fast
  306 D1:BBF7 CD FA AE D1 	call draw_slow_sprite_top_cut ;for now assume all sprites are slow
  307 D1:BBFB -  -  -  -  	
  308 D1:BBFB -  -  -  -  	;jp pd_top_cut_slow
  309 D1:BBFB -  -  -  -  ;pd_top_cut_fast:
  310 D1:BBFB -  -  -  -  	;call draw_fast_sprite_top_cut
  311 D1:BBFB -  -  -  -  ;pd_top_cut_slow:
  312 D1:BBFB -  -  -  -  	
  313 D1:BBFB C9 -  -  -  	ret 
  314 D1:BBFC -  -  -  -  	
  315 D1:BBFC -  -  -  -  
  316 D1:BBFC -  -  -  -  
  317 D1:BBFC -  -  -  -  
  318 D1:BBFC -  -  -  -  pd_setup_draw:
  319 D1:BBFC -  -  -  -  	;A holds lines above bottom (or top) line of VP 
  320 D1:BBFC -  -  -  -  	;DE holds VP top or bottom
  321 D1:BBFC 26 A0 -  -  	ld h,160
  322 D1:BBFE 6F -  -  -  	ld l,a ;Num lines to subtract
  323 D1:BBFF ED 6C -  -  	mlt hl 
  324 D1:BC01 37 -  -  -  	scf 
  325 D1:BC02 3F -  -  -  	ccf 
  326 D1:BC03 EB -  -  -  	ex de,hl ;De holds lines to subtract, hl holds vram pos 
  327 D1:BC04 ED 52 -  -  	sbc hl,de 
  328 D1:BC06 01 00 00 00 	ld bc,0 
  329 D1:BC0A -  -  -  -  pd_xpos_full .equ $ + 1 
  330 D1:BC0A 0E 00 -  -  	ld c, 0 ;ld x pos 
  331 D1:BC0C 09 -  -  -  	add hl,bc 
  332 D1:BC0D EB -  -  -  	ex de,hl 
  333 D1:BC0E -  -  -  -  pd_sprite_table .equ $ + 1 
  334 D1:BC0E 21 00 00 00 	ld hl,0 ;Load sprite table (offset or even)
  335 D1:BC12 -  -  -  -  
  336 D1:BC12 -  -  -  -  player_sprite_index .equ $ + 1 
  337 D1:BC12 0E 00 -  -  	ld c,0 ;load sprite index 
  338 D1:BC14 09 -  -  -  	add hl,bc 
  339 D1:BC15 09 -  -  -  	add hl,bc 
  340 D1:BC16 09 -  -  -  	add hl,bc 
  341 D1:BC17 -  -  -  -  	;HL holds sprite data, de holds draw pos 
  342 D1:BC17 C9 -  -  -  	ret 
  343 D1:BC18 -  -  -  -  
  344 D1:BC18 -  -  -  -  
  345 D1:BC18 -  -  -  -  
  346 D1:BC18 -  -  -  -  
  347 D1:BC18 -  -  -  -  
  348 D1:BC18 -  -  -  -  
  349 D1:BC18 -  -  -  -  player_sprite_table:
  350 D1:BC18 E7 03 D4 -  	.dl Frog_0_Slow
  351 D1:BC1B -  -  -  -  
  352 D1:BC1B -  -  -  -  player_sprite_table_offset:
  353 D1:BC1B 17 05 D4 -  	.dl Frog_0_Slow_O
  354 D1:BC1E -  -  -  -  
  355 D1:BC1E -  -  -  -  
  356 D1:BC1E -  -  -  -  
  357 D1:BC1E -  -  -  -  
  358 D1:BC1E -  -  -  -  
  359 D1:BC1E -  -  -  -  
  360 D1:BC1E -  -  -  -  jump_strength_up:
  361 D1:BC1E 00 -  -  -  	.db 0 
  362 D1:BC1F -  -  -  -  jump_strength_right:
  363 D1:BC1F 00 -  -  -  	.db 0 
  364 D1:BC20 -  -  -  -  jump_left_charge_timer:
  365 D1:BC20 00 -  -  -  	.db 0 
  366 D1:BC21 -  -  -  -  jump_right_charge_timer:
  367 D1:BC21 00 -  -  -  	.db 0 
  368 D1:BC22 -  -  -  -  	
  369 D1:BC22 -  -  -  -  timer_max_val .equ 30
  370 D1:BC22 -  -  -  -  
  371 D1:BC22 -  -  -  -  player_x_pos:
  372 D1:BC22 00 00 00 -  	.dl 0 ; (MSB fullpixel, Fullpixels, subpixels)
  373 D1:BC25 -  -  -  -  	
  374 D1:BC25 -  -  -  -  player_y_pos:
  375 D1:BC25 00 00 00 -  	.dl 0 ; (Frame #, Fullpixels, subpixels)
  376 D1:BC28 -  -  -  -  
  377 D1:BC28 -  -  -  -  player_x_vel:
  378 D1:BC28 00 00 00 -  	.dl 0 ; (Unused, Fullpixels, subpixels)
  379 D1:BC2B -  -  -  -  	
  380 D1:BC2B -  -  -  -  player_y_vel:
  381 D1:BC2B 00 00 00 -  	.dl 0 ; (Unused, Fullpixels, subpixels)
  382 D1:BC2E -  -  -  -  
  383 D1:BC2E -  -  -  -  
  384 D1:BC2E -  -  -  -  
  385 D1:BC2E -  -  -  -  player_flags:
  386 D1:BC2E 00 -  -  -  	.db %00000000 ; (7 = Any jump button held, 6 = on ground, )
  387 D1:BC2F -  -  -  -  	
Listing for file "ascent.asm"
  553 D1:BC2F -  -  -  -  ;#include "levelData.txt"
  554 D1:BC2F -  -  -  -  ;#include "FGLevelData.txt"
  555 D1:BC2F -  -  -  -  
  556 D1:BC2F -  -  -  -  #include "generated/BG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\BG_Data.txt"
    1 D1:BC2F -  -  -  -  BG_Data_frame_table:
    2 D1:BC2F CF BC D1 -  	.dl BG_Data_0
    3 D1:BC32 C1 BC D1 -  	.dl BG_Data_1
    4 D1:BC35 BF BC D1 -  	.dl BG_Data_2
    5 D1:BC38 BD BC D1 -  	.dl BG_Data_3
    6 D1:BC3B BB BC D1 -  	.dl BG_Data_4
    7 D1:BC3E B9 BC D1 -  	.dl BG_Data_5
    8 D1:BC41 B7 BC D1 -  	.dl BG_Data_6
    9 D1:BC44 B5 BC D1 -  	.dl BG_Data_7
   10 D1:BC47 B3 BC D1 -  	.dl BG_Data_8
   11 D1:BC4A B1 BC D1 -  	.dl BG_Data_9
   12 D1:BC4D AF BC D1 -  	.dl BG_Data_10
   13 D1:BC50 AD BC D1 -  	.dl BG_Data_11
   14 D1:BC53 AB BC D1 -  	.dl BG_Data_12
   15 D1:BC56 A9 BC D1 -  	.dl BG_Data_13
   16 D1:BC59 A7 BC D1 -  	.dl BG_Data_14
   17 D1:BC5C A5 BC D1 -  	.dl BG_Data_15
   18 D1:BC5F A3 BC D1 -  	.dl BG_Data_16
   19 D1:BC62 A1 BC D1 -  	.dl BG_Data_17
   20 D1:BC65 9F BC D1 -  	.dl BG_Data_18
   21 D1:BC68 9D BC D1 -  	.dl BG_Data_19
   22 D1:BC6B 9B BC D1 -  	.dl BG_Data_20
   23 D1:BC6E 99 BC D1 -  	.dl BG_Data_21
   24 D1:BC71 97 BC D1 -  	.dl BG_Data_22
   25 D1:BC74 95 BC D1 -  	.dl BG_Data_23
   26 D1:BC77 93 BC D1 -  	.dl BG_Data_24
   27 D1:BC7A 91 BC D1 -  	.dl BG_Data_25
   28 D1:BC7D 8F BC D1 -  	.dl BG_Data_26
   29 D1:BC80 8D BC D1 -  	.dl BG_Data_27
   30 D1:BC83 8B BC D1 -  	.dl BG_Data_28
   31 D1:BC86 89 BC D1 -  	.dl BG_Data_29
   32 D1:BC89 -  -  -  -  
   33 D1:BC89 -  -  -  -  
   34 D1:BC89 -  -  -  -  
   35 D1:BC89 -  -  -  -  BG_Data_29:
   36 D1:BC89 00 -  -  -  	.db 0
   37 D1:BC8A 00 -  -  -  	.db 0
   38 D1:BC8B -  -  -  -  
   39 D1:BC8B -  -  -  -  BG_Data_28:
   40 D1:BC8B 00 -  -  -  	.db 0
   41 D1:BC8C 00 -  -  -  	.db 0
   42 D1:BC8D -  -  -  -  
   43 D1:BC8D -  -  -  -  BG_Data_27:
   44 D1:BC8D 00 -  -  -  	.db 0
   45 D1:BC8E 00 -  -  -  	.db 0
   46 D1:BC8F -  -  -  -  
   47 D1:BC8F -  -  -  -  BG_Data_26:
   48 D1:BC8F 00 -  -  -  	.db 0
   49 D1:BC90 00 -  -  -  	.db 0
   50 D1:BC91 -  -  -  -  
   51 D1:BC91 -  -  -  -  BG_Data_25:
   52 D1:BC91 00 -  -  -  	.db 0
   53 D1:BC92 00 -  -  -  	.db 0
   54 D1:BC93 -  -  -  -  
   55 D1:BC93 -  -  -  -  BG_Data_24:
   56 D1:BC93 00 -  -  -  	.db 0
   57 D1:BC94 00 -  -  -  	.db 0
   58 D1:BC95 -  -  -  -  
   59 D1:BC95 -  -  -  -  BG_Data_23:
   60 D1:BC95 00 -  -  -  	.db 0
   61 D1:BC96 00 -  -  -  	.db 0
   62 D1:BC97 -  -  -  -  
   63 D1:BC97 -  -  -  -  BG_Data_22:
   64 D1:BC97 00 -  -  -  	.db 0
   65 D1:BC98 00 -  -  -  	.db 0
   66 D1:BC99 -  -  -  -  
   67 D1:BC99 -  -  -  -  BG_Data_21:
   68 D1:BC99 00 -  -  -  	.db 0
   69 D1:BC9A 00 -  -  -  	.db 0
   70 D1:BC9B -  -  -  -  
   71 D1:BC9B -  -  -  -  BG_Data_20:
   72 D1:BC9B 00 -  -  -  	.db 0
   73 D1:BC9C 00 -  -  -  	.db 0
   74 D1:BC9D -  -  -  -  
   75 D1:BC9D -  -  -  -  BG_Data_19:
   76 D1:BC9D 00 -  -  -  	.db 0
   77 D1:BC9E 00 -  -  -  	.db 0
   78 D1:BC9F -  -  -  -  
   79 D1:BC9F -  -  -  -  BG_Data_18:
   80 D1:BC9F 00 -  -  -  	.db 0
   81 D1:BCA0 00 -  -  -  	.db 0
   82 D1:BCA1 -  -  -  -  
   83 D1:BCA1 -  -  -  -  BG_Data_17:
   84 D1:BCA1 00 -  -  -  	.db 0
   85 D1:BCA2 00 -  -  -  	.db 0
   86 D1:BCA3 -  -  -  -  
   87 D1:BCA3 -  -  -  -  BG_Data_16:
   88 D1:BCA3 00 -  -  -  	.db 0
   89 D1:BCA4 00 -  -  -  	.db 0
   90 D1:BCA5 -  -  -  -  
   91 D1:BCA5 -  -  -  -  BG_Data_15:
   92 D1:BCA5 00 -  -  -  	.db 0
   93 D1:BCA6 00 -  -  -  	.db 0
   94 D1:BCA7 -  -  -  -  
   95 D1:BCA7 -  -  -  -  BG_Data_14:
   96 D1:BCA7 00 -  -  -  	.db 0
   97 D1:BCA8 00 -  -  -  	.db 0
   98 D1:BCA9 -  -  -  -  
   99 D1:BCA9 -  -  -  -  BG_Data_13:
  100 D1:BCA9 00 -  -  -  	.db 0
  101 D1:BCAA 00 -  -  -  	.db 0
  102 D1:BCAB -  -  -  -  
  103 D1:BCAB -  -  -  -  BG_Data_12:
  104 D1:BCAB 00 -  -  -  	.db 0
  105 D1:BCAC 00 -  -  -  	.db 0
  106 D1:BCAD -  -  -  -  
  107 D1:BCAD -  -  -  -  BG_Data_11:
  108 D1:BCAD 00 -  -  -  	.db 0
  109 D1:BCAE 00 -  -  -  	.db 0
  110 D1:BCAF -  -  -  -  
  111 D1:BCAF -  -  -  -  BG_Data_10:
  112 D1:BCAF 00 -  -  -  	.db 0
  113 D1:BCB0 00 -  -  -  	.db 0
  114 D1:BCB1 -  -  -  -  
  115 D1:BCB1 -  -  -  -  BG_Data_9:
  116 D1:BCB1 00 -  -  -  	.db 0
  117 D1:BCB2 00 -  -  -  	.db 0
  118 D1:BCB3 -  -  -  -  
  119 D1:BCB3 -  -  -  -  BG_Data_8:
  120 D1:BCB3 00 -  -  -  	.db 0
  121 D1:BCB4 00 -  -  -  	.db 0
  122 D1:BCB5 -  -  -  -  
  123 D1:BCB5 -  -  -  -  BG_Data_7:
  124 D1:BCB5 00 -  -  -  	.db 0
  125 D1:BCB6 00 -  -  -  	.db 0
  126 D1:BCB7 -  -  -  -  
  127 D1:BCB7 -  -  -  -  BG_Data_6:
  128 D1:BCB7 00 -  -  -  	.db 0
  129 D1:BCB8 00 -  -  -  	.db 0
  130 D1:BCB9 -  -  -  -  
  131 D1:BCB9 -  -  -  -  BG_Data_5:
  132 D1:BCB9 00 -  -  -  	.db 0
  133 D1:BCBA 00 -  -  -  	.db 0
  134 D1:BCBB -  -  -  -  
  135 D1:BCBB -  -  -  -  BG_Data_4:
  136 D1:BCBB 00 -  -  -  	.db 0
  137 D1:BCBC 00 -  -  -  	.db 0
  138 D1:BCBD -  -  -  -  
  139 D1:BCBD -  -  -  -  BG_Data_3:
  140 D1:BCBD 00 -  -  -  	.db 0
  141 D1:BCBE 00 -  -  -  	.db 0
  142 D1:BCBF -  -  -  -  
  143 D1:BCBF -  -  -  -  BG_Data_2:
  144 D1:BCBF 00 -  -  -  	.db 0
  145 D1:BCC0 00 -  -  -  	.db 0
  146 D1:BCC1 -  -  -  -  
  147 D1:BCC1 -  -  -  -  BG_Data_1:
  148 D1:BCC1 00 -  -  -  	.db 0
  149 D1:BCC2 03 -  -  -  	.db 3
  150 D1:BCC3 22 FF 7D 1F 	.db 34, 255, 125, 31  ;SG_Cloud1
  151 D1:BCC7 70 FF 76 1F 	.db 112, 255, 118, 31  ;SG_Cloud1
  152 D1:BCCB A3 FF 15 1F 	.db 163, 255, 21, 31  ;SG_Cloud1
  153 D1:BCCF -  -  -  -  
  154 D1:BCCF -  -  -  -  BG_Data_0:
  155 D1:BCCF 00 -  -  -  	.db 0
  156 D1:BCD0 23 -  -  -  	.db 35
  157 D1:BCD1 55 FF 00 1C 	.db 85, 255, 0, 28  ;SG_DarkGroundChunk
  158 D1:BCD5 4F FF 88 1C 	.db 79, 255, 136, 28  ;SG_DarkGroundChunk
  159 D1:BCD9 55 FF 18 1C 	.db 85, 255, 24, 28  ;SG_DarkGroundChunk
  160 D1:BCDD 50 FF 70 1C 	.db 80, 255, 112, 28  ;SG_DarkGroundChunk
  161 D1:BCE1 81 FF 72 1E 	.db 129, 255, 114, 30  ;SG_BGTree2
  162 D1:BCE5 81 FF 89 1E 	.db 129, 255, 137, 30  ;SG_BGTree2
  163 D1:BCE9 88 FF 16 1E 	.db 136, 255, 22, 30  ;SG_BGTree2
  164 D1:BCED 8D FF 0B 1E 	.db 141, 255, 11, 30  ;SG_BGTree2
  165 D1:BCF1 82 FF 91 1D 	.db 130, 255, 145, 29  ;SG_BGTree1
  166 D1:BCF5 80 FF 80 1D 	.db 128, 255, 128, 29  ;SG_BGTree1
  167 D1:BCF9 7F FF 77 1D 	.db 127, 255, 119, 29  ;SG_BGTree1
  168 D1:BCFD 81 FF 1F 1D 	.db 129, 255, 31, 29  ;SG_BGTree1
  169 D1:BD01 84 FF 01 1D 	.db 132, 255, 1, 29  ;SG_BGTree1
  170 D1:BD05 84 FF 7F 1E 	.db 132, 255, 127, 30  ;SG_BGTree2
  171 D1:BD09 F2 FF 02 1F 	.db 242, 255, 2, 31  ;SG_Cloud1
  172 D1:BD0D 43 FF 00 0D 	.db 67, 255, 0, 13  ;SG_GroundChunk1
  173 D1:BD11 3D FF 70 0D 	.db 61, 255, 112, 13  ;SG_GroundChunk1
  174 D1:BD15 3C FF 88 0C 	.db 60, 255, 136, 12  ;SG_GroundChunk2
  175 D1:BD19 41 FF 18 0C 	.db 65, 255, 24, 12  ;SG_GroundChunk2
  176 D1:BD1D 2D FF 18 0D 	.db 45, 255, 24, 13  ;SG_GroundChunk1
  177 D1:BD21 2A FF 00 0C 	.db 42, 255, 0, 12  ;SG_GroundChunk2
  178 D1:BD25 26 FF 88 0D 	.db 38, 255, 136, 13  ;SG_GroundChunk1
  179 D1:BD29 26 FF 70 0C 	.db 38, 255, 112, 12  ;SG_GroundChunk2
  180 D1:BD2D 34 0F 74 90 	.db 52, 15, 116, 144  ;GroundGrassSmall_Fast
  181 D1:BD31 38 0F 96 90 	.db 56, 15, 150, 144  ;GroundGrassSmall_Fast
  182 D1:BD35 42 0F 0C 90 	.db 66, 15, 12, 144  ;GroundGrassSmall_Fast
  183 D1:BD39 3A 0F 20 91 	.db 58, 15, 32, 145  ;GroundGrassSmall_Fast_F
  184 D1:BD3D 35 0F 11 91 	.db 53, 15, 17, 145  ;GroundGrassSmall_Fast_F
  185 D1:BD41 49 0F 0A 91 	.db 73, 15, 10, 145  ;GroundGrassSmall_Fast_F
  186 D1:BD45 46 0F 1A 91 	.db 70, 15, 26, 145  ;GroundGrassSmall_Fast_F
  187 D1:BD49 45 0F 27 91 	.db 69, 15, 39, 145  ;GroundGrassSmall_Fast_F
  188 D1:BD4D 40 0F 8D 90 	.db 64, 15, 141, 144  ;GroundGrassSmall_Fast
  189 D1:BD51 31 0F 84 90 	.db 49, 15, 132, 144  ;GroundGrassSmall_Fast
  190 D1:BD55 41 0F 82 90 	.db 65, 15, 130, 144  ;GroundGrassSmall_Fast
  191 D1:BD59 2F 0F 8E 91 	.db 47, 15, 142, 145  ;GroundGrassSmall_Fast_F
  192 D1:BD5D -  -  -  -  
  193 D1:BD5D -  -  -  -  
  194 D1:BD5D -  -  -  -  
Listing for file "ascent.asm"
  557 D1:BD5D -  -  -  -  #include "generated/MG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\MG_Data.txt"
    1 D1:BD5D -  -  -  -  MG_Data_frame_table:
    2 D1:BD5D CD BF D1 -  	.dl MG_Data_0
    3 D1:BD60 5B BF D1 -  	.dl MG_Data_1
    4 D1:BD63 F1 BE D1 -  	.dl MG_Data_2
    5 D1:BD66 83 BE D1 -  	.dl MG_Data_3
    6 D1:BD69 29 BE D1 -  	.dl MG_Data_4
    7 D1:BD6C E7 BD D1 -  	.dl MG_Data_5
    8 D1:BD6F E5 BD D1 -  	.dl MG_Data_6
    9 D1:BD72 E3 BD D1 -  	.dl MG_Data_7
   10 D1:BD75 E1 BD D1 -  	.dl MG_Data_8
   11 D1:BD78 DF BD D1 -  	.dl MG_Data_9
   12 D1:BD7B DD BD D1 -  	.dl MG_Data_10
   13 D1:BD7E DB BD D1 -  	.dl MG_Data_11
   14 D1:BD81 D9 BD D1 -  	.dl MG_Data_12
   15 D1:BD84 D7 BD D1 -  	.dl MG_Data_13
   16 D1:BD87 D5 BD D1 -  	.dl MG_Data_14
   17 D1:BD8A D3 BD D1 -  	.dl MG_Data_15
   18 D1:BD8D D1 BD D1 -  	.dl MG_Data_16
   19 D1:BD90 CF BD D1 -  	.dl MG_Data_17
   20 D1:BD93 CD BD D1 -  	.dl MG_Data_18
   21 D1:BD96 CB BD D1 -  	.dl MG_Data_19
   22 D1:BD99 C9 BD D1 -  	.dl MG_Data_20
   23 D1:BD9C C7 BD D1 -  	.dl MG_Data_21
   24 D1:BD9F C5 BD D1 -  	.dl MG_Data_22
   25 D1:BDA2 C3 BD D1 -  	.dl MG_Data_23
   26 D1:BDA5 C1 BD D1 -  	.dl MG_Data_24
   27 D1:BDA8 BF BD D1 -  	.dl MG_Data_25
   28 D1:BDAB BD BD D1 -  	.dl MG_Data_26
   29 D1:BDAE BB BD D1 -  	.dl MG_Data_27
   30 D1:BDB1 B9 BD D1 -  	.dl MG_Data_28
   31 D1:BDB4 B7 BD D1 -  	.dl MG_Data_29
   32 D1:BDB7 -  -  -  -  
   33 D1:BDB7 -  -  -  -  
   34 D1:BDB7 -  -  -  -  
   35 D1:BDB7 -  -  -  -  MG_Data_29:
   36 D1:BDB7 00 -  -  -  	.db 0
   37 D1:BDB8 00 -  -  -  	.db 0
   38 D1:BDB9 -  -  -  -  
   39 D1:BDB9 -  -  -  -  MG_Data_28:
   40 D1:BDB9 00 -  -  -  	.db 0
   41 D1:BDBA 00 -  -  -  	.db 0
   42 D1:BDBB -  -  -  -  
   43 D1:BDBB -  -  -  -  MG_Data_27:
   44 D1:BDBB 00 -  -  -  	.db 0
   45 D1:BDBC 00 -  -  -  	.db 0
   46 D1:BDBD -  -  -  -  
   47 D1:BDBD -  -  -  -  MG_Data_26:
   48 D1:BDBD 00 -  -  -  	.db 0
   49 D1:BDBE 00 -  -  -  	.db 0
   50 D1:BDBF -  -  -  -  
   51 D1:BDBF -  -  -  -  MG_Data_25:
   52 D1:BDBF 00 -  -  -  	.db 0
   53 D1:BDC0 00 -  -  -  	.db 0
   54 D1:BDC1 -  -  -  -  
   55 D1:BDC1 -  -  -  -  MG_Data_24:
   56 D1:BDC1 00 -  -  -  	.db 0
   57 D1:BDC2 00 -  -  -  	.db 0
   58 D1:BDC3 -  -  -  -  
   59 D1:BDC3 -  -  -  -  MG_Data_23:
   60 D1:BDC3 00 -  -  -  	.db 0
   61 D1:BDC4 00 -  -  -  	.db 0
   62 D1:BDC5 -  -  -  -  
   63 D1:BDC5 -  -  -  -  MG_Data_22:
   64 D1:BDC5 00 -  -  -  	.db 0
   65 D1:BDC6 00 -  -  -  	.db 0
   66 D1:BDC7 -  -  -  -  
   67 D1:BDC7 -  -  -  -  MG_Data_21:
   68 D1:BDC7 00 -  -  -  	.db 0
   69 D1:BDC8 00 -  -  -  	.db 0
   70 D1:BDC9 -  -  -  -  
   71 D1:BDC9 -  -  -  -  MG_Data_20:
   72 D1:BDC9 00 -  -  -  	.db 0
   73 D1:BDCA 00 -  -  -  	.db 0
   74 D1:BDCB -  -  -  -  
   75 D1:BDCB -  -  -  -  MG_Data_19:
   76 D1:BDCB 00 -  -  -  	.db 0
   77 D1:BDCC 00 -  -  -  	.db 0
   78 D1:BDCD -  -  -  -  
   79 D1:BDCD -  -  -  -  MG_Data_18:
   80 D1:BDCD 00 -  -  -  	.db 0
   81 D1:BDCE 00 -  -  -  	.db 0
   82 D1:BDCF -  -  -  -  
   83 D1:BDCF -  -  -  -  MG_Data_17:
   84 D1:BDCF 00 -  -  -  	.db 0
   85 D1:BDD0 00 -  -  -  	.db 0
   86 D1:BDD1 -  -  -  -  
   87 D1:BDD1 -  -  -  -  MG_Data_16:
   88 D1:BDD1 00 -  -  -  	.db 0
   89 D1:BDD2 00 -  -  -  	.db 0
   90 D1:BDD3 -  -  -  -  
   91 D1:BDD3 -  -  -  -  MG_Data_15:
   92 D1:BDD3 00 -  -  -  	.db 0
   93 D1:BDD4 00 -  -  -  	.db 0
   94 D1:BDD5 -  -  -  -  
   95 D1:BDD5 -  -  -  -  MG_Data_14:
   96 D1:BDD5 00 -  -  -  	.db 0
   97 D1:BDD6 00 -  -  -  	.db 0
   98 D1:BDD7 -  -  -  -  
   99 D1:BDD7 -  -  -  -  MG_Data_13:
  100 D1:BDD7 00 -  -  -  	.db 0
  101 D1:BDD8 00 -  -  -  	.db 0
  102 D1:BDD9 -  -  -  -  
  103 D1:BDD9 -  -  -  -  MG_Data_12:
  104 D1:BDD9 00 -  -  -  	.db 0
  105 D1:BDDA 00 -  -  -  	.db 0
  106 D1:BDDB -  -  -  -  
  107 D1:BDDB -  -  -  -  MG_Data_11:
  108 D1:BDDB 00 -  -  -  	.db 0
  109 D1:BDDC 00 -  -  -  	.db 0
  110 D1:BDDD -  -  -  -  
  111 D1:BDDD -  -  -  -  MG_Data_10:
  112 D1:BDDD 00 -  -  -  	.db 0
  113 D1:BDDE 00 -  -  -  	.db 0
  114 D1:BDDF -  -  -  -  
  115 D1:BDDF -  -  -  -  MG_Data_9:
  116 D1:BDDF 00 -  -  -  	.db 0
  117 D1:BDE0 00 -  -  -  	.db 0
  118 D1:BDE1 -  -  -  -  
  119 D1:BDE1 -  -  -  -  MG_Data_8:
  120 D1:BDE1 00 -  -  -  	.db 0
  121 D1:BDE2 00 -  -  -  	.db 0
  122 D1:BDE3 -  -  -  -  
  123 D1:BDE3 -  -  -  -  MG_Data_7:
  124 D1:BDE3 00 -  -  -  	.db 0
  125 D1:BDE4 00 -  -  -  	.db 0
  126 D1:BDE5 -  -  -  -  
  127 D1:BDE5 -  -  -  -  MG_Data_6:
  128 D1:BDE5 00 -  -  -  	.db 0
  129 D1:BDE6 00 -  -  -  	.db 0
  130 D1:BDE7 -  -  -  -  
  131 D1:BDE7 -  -  -  -  MG_Data_5:
  132 D1:BDE7 00 -  -  -  	.db 0
  133 D1:BDE8 10 -  -  -  	.db 16
  134 D1:BDE9 0F FF 1C 11 	.db 15, 255, 28, 17  ;SG_TreeRow1
  135 D1:BDED FF FF 13 11 	.db 255, 255, 19, 17  ;SG_TreeRow1
  136 D1:BDF1 9F FF 16 11 	.db 159, 255, 22, 17  ;SG_TreeRow1
  137 D1:BDF5 1F FF 1B 10 	.db 31, 255, 27, 16  ;SG_TreeRow5
  138 D1:BDF9 BF FF 14 12 	.db 191, 255, 20, 18  ;SG_TreeRow2
  139 D1:BDFD EF FF 14 10 	.db 239, 255, 20, 16  ;SG_TreeRow5
  140 D1:BE01 7F FF 18 12 	.db 127, 255, 24, 18  ;SG_TreeRow2
  141 D1:BE05 DF FF 13 13 	.db 223, 255, 19, 19  ;SG_TreeRow4
  142 D1:BE09 CF FF 13 13 	.db 207, 255, 19, 19  ;SG_TreeRow4
  143 D1:BE0D AF FF 15 0F 	.db 175, 255, 21, 15  ;SG_TreeRow3
  144 D1:BE11 6F FF 19 12 	.db 111, 255, 25, 18  ;SG_TreeRow2
  145 D1:BE15 3F FF 19 12 	.db 63, 255, 25, 18  ;SG_TreeRow2
  146 D1:BE19 5F FF 18 0F 	.db 95, 255, 24, 15  ;SG_TreeRow3
  147 D1:BE1D 2F FF 1A 13 	.db 47, 255, 26, 19  ;SG_TreeRow4
  148 D1:BE21 8F FF 17 10 	.db 143, 255, 23, 16  ;SG_TreeRow5
  149 D1:BE25 4F FF 19 10 	.db 79, 255, 25, 16  ;SG_TreeRow5
  150 D1:BE29 -  -  -  -  
  151 D1:BE29 -  -  -  -  MG_Data_4:
  152 D1:BE29 00 -  -  -  	.db 0
  153 D1:BE2A 16 -  -  -  	.db 22
  154 D1:BE2B F6 FF 74 09 	.db 246, 255, 116, 9  ;SG_Vine2
  155 D1:BE2F 72 FF 00 07 	.db 114, 255, 0, 7  ;SG_Vine6
  156 D1:BE33 4F FF 26 10 	.db 79, 255, 38, 16  ;SG_TreeRow5
  157 D1:BE37 8F FF 22 10 	.db 143, 255, 34, 16  ;SG_TreeRow5
  158 D1:BE3B 3F FF 27 13 	.db 63, 255, 39, 19  ;SG_TreeRow4
  159 D1:BE3F 2F FF 27 13 	.db 47, 255, 39, 19  ;SG_TreeRow4
  160 D1:BE43 6F FF 24 12 	.db 111, 255, 36, 18  ;SG_TreeRow2
  161 D1:BE47 BF FF 1F 13 	.db 191, 255, 31, 19  ;SG_TreeRow4
  162 D1:BE4B 9F FF 21 13 	.db 159, 255, 33, 19  ;SG_TreeRow4
  163 D1:BE4F DF FF 1F 12 	.db 223, 255, 31, 18  ;SG_TreeRow2
  164 D1:BE53 FF FF 1D 0F 	.db 255, 255, 29, 15  ;SG_TreeRow3
  165 D1:BE57 1F FF 28 0F 	.db 31, 255, 40, 15  ;SG_TreeRow3
  166 D1:BE5B 5F FF 25 11 	.db 95, 255, 37, 17  ;SG_TreeRow1
  167 D1:BE5F 7F FF 23 11 	.db 127, 255, 35, 17  ;SG_TreeRow1
  168 D1:BE63 AF FF 20 11 	.db 175, 255, 32, 17  ;SG_TreeRow1
  169 D1:BE67 EF FF 1E 11 	.db 239, 255, 30, 17  ;SG_TreeRow1
  170 D1:BE6B CF FF 1E 10 	.db 207, 255, 30, 16  ;SG_TreeRow5
  171 D1:BE6F 0F FF 29 11 	.db 15, 255, 41, 17  ;SG_TreeRow1
  172 D1:BE73 2E FF 00 14 	.db 46, 255, 0, 20  ;SG_Branch1
  173 D1:BE77 C3 FF 54 1B 	.db 195, 255, 84, 27  ;SG_BranchBase4
  174 D1:BE7B CF FF 65 05 	.db 207, 255, 101, 5  ;SG_Branch5
  175 D1:BE7F E4 FF 69 05 	.db 228, 255, 105, 5  ;SG_Branch5
  176 D1:BE83 -  -  -  -  
  177 D1:BE83 -  -  -  -  MG_Data_3:
  178 D1:BE83 00 -  -  -  	.db 0
  179 D1:BE84 1B -  -  -  	.db 27
  180 D1:BE85 0F FF 28 10 	.db 15, 255, 40, 16  ;SG_TreeRow5
  181 D1:BE89 5F FF 26 13 	.db 95, 255, 38, 19  ;SG_TreeRow4
  182 D1:BE8D 6F FF 25 10 	.db 111, 255, 37, 16  ;SG_TreeRow5
  183 D1:BE91 4F FF 27 0F 	.db 79, 255, 39, 15  ;SG_TreeRow3
  184 D1:BE95 7F FF 26 0F 	.db 127, 255, 38, 15  ;SG_TreeRow3
  185 D1:BE99 8F FF 27 12 	.db 143, 255, 39, 18  ;SG_TreeRow2
  186 D1:BE9D 9F FF 27 0F 	.db 159, 255, 39, 15  ;SG_TreeRow3
  187 D1:BEA1 BF FF 29 12 	.db 191, 255, 41, 18  ;SG_TreeRow2
  188 D1:BEA5 2F FF 28 12 	.db 47, 255, 40, 18  ;SG_TreeRow2
  189 D1:BEA9 EF FF 2A 13 	.db 239, 255, 42, 19  ;SG_TreeRow4
  190 D1:BEAD FF FF 2A 0F 	.db 255, 255, 42, 15  ;SG_TreeRow3
  191 D1:BEB1 1F FF 28 0F 	.db 31, 255, 40, 15  ;SG_TreeRow3
  192 D1:BEB5 3F FF 28 11 	.db 63, 255, 40, 17  ;SG_TreeRow1
  193 D1:BEB9 AF FF 28 11 	.db 175, 255, 40, 17  ;SG_TreeRow1
  194 D1:BEBD CF FF 29 11 	.db 207, 255, 41, 17  ;SG_TreeRow1
  195 D1:BEC1 DF FF 2A 10 	.db 223, 255, 42, 16  ;SG_TreeRow5
  196 D1:BEC5 8E FF 21 16 	.db 142, 255, 33, 22  ;SG_Vine5
  197 D1:BEC9 5D FF 6C 08 	.db 93, 255, 108, 8  ;SG_Branch6
  198 D1:BECD 95 0C 35 73 	.db 149, 12, 53, 115  ;Leaves_3_Slow_O_F
  199 D1:BED1 87 FF 02 02 	.db 135, 255, 2, 2  ;SG_Branch3
  200 D1:BED5 95 FF 1E 1A 	.db 149, 255, 30, 26  ;SG_BranchBase2
  201 D1:BED9 F6 FF 2A 15 	.db 246, 255, 42, 21  ;SG_Vine4
  202 D1:BEDD 98 0B 3E 30 	.db 152, 11, 62, 48  ;Vines_9_Slow
  203 D1:BEE1 96 18 49 74 	.db 150, 24, 73, 116  ;Vines_7_Slow_O
  204 D1:BEE5 7E 18 4A 2A 	.db 126, 24, 74, 42  ;Vines_8_Slow
  205 D1:BEE9 67 0B 47 36 	.db 103, 11, 71, 54  ;Leaves_4_Slow_O
  206 D1:BEED 9D 18 7D 74 	.db 157, 24, 125, 116  ;Vines_7_Slow_O
  207 D1:BEF1 -  -  -  -  
  208 D1:BEF1 -  -  -  -  MG_Data_2:
  209 D1:BEF1 00 -  -  -  	.db 0
  210 D1:BEF2 1A -  -  -  	.db 26
  211 D1:BEF3 83 FF 83 16 	.db 131, 255, 131, 22  ;SG_Vine5
  212 D1:BEF7 AC FF 0C 0B 	.db 172, 255, 12, 11  ;SG_Branch2
  213 D1:BEFB 0F FF 22 0F 	.db 15, 255, 34, 15  ;SG_TreeRow3
  214 D1:BEFF 4F FF 26 13 	.db 79, 255, 38, 19  ;SG_TreeRow4
  215 D1:BF03 3F FF 25 10 	.db 63, 255, 37, 16  ;SG_TreeRow5
  216 D1:BF07 6F FF 28 0F 	.db 111, 255, 40, 15  ;SG_TreeRow3
  217 D1:BF0B 9F FF 2B 13 	.db 159, 255, 43, 19  ;SG_TreeRow4
  218 D1:BF0F AF FF 2A 10 	.db 175, 255, 42, 16  ;SG_TreeRow5
  219 D1:BF13 1F FF 23 11 	.db 31, 255, 35, 17  ;SG_TreeRow1
  220 D1:BF17 8F FF 2A 10 	.db 143, 255, 42, 16  ;SG_TreeRow5
  221 D1:BF1B CF FF 2A 12 	.db 207, 255, 42, 18  ;SG_TreeRow2
  222 D1:BF1F DF FF 29 13 	.db 223, 255, 41, 19  ;SG_TreeRow4
  223 D1:BF23 FF FF 28 0F 	.db 255, 255, 40, 15  ;SG_TreeRow3
  224 D1:BF27 2F FF 24 11 	.db 47, 255, 36, 17  ;SG_TreeRow1
  225 D1:BF2B 7F FF 29 11 	.db 127, 255, 41, 17  ;SG_TreeRow1
  226 D1:BF2F BF FF 2A 11 	.db 191, 255, 42, 17  ;SG_TreeRow1
  227 D1:BF33 EF FF 28 11 	.db 239, 255, 40, 17  ;SG_TreeRow1
  228 D1:BF37 5F FF 27 12 	.db 95, 255, 39, 18  ;SG_TreeRow2
  229 D1:BF3B 96 FF 24 19 	.db 150, 255, 36, 25  ;SG_BranchBase1
  230 D1:BF3F 78 FF 60 17 	.db 120, 255, 96, 23  ;SG_BranchBase3
  231 D1:BF43 A8 FF 72 03 	.db 168, 255, 114, 3  ;SG_Branch7
  232 D1:BF47 83 FF 00 06 	.db 131, 255, 0, 6  ;SG_Vine3
  233 D1:BF4B 78 FF 1F 07 	.db 120, 255, 31, 7  ;SG_Vine6
  234 D1:BF4F 37 FF 0D 02 	.db 55, 255, 13, 2  ;SG_Branch3
  235 D1:BF53 93 FF 08 02 	.db 147, 255, 8, 2  ;SG_Branch3
  236 D1:BF57 8A FF 57 18 	.db 138, 255, 87, 24  ;SG_Vine1
  237 D1:BF5B -  -  -  -  
  238 D1:BF5B -  -  -  -  MG_Data_1:
  239 D1:BF5B 00 -  -  -  	.db 0
  240 D1:BF5C 1C -  -  -  	.db 28
  241 D1:BF5D 91 09 70 2F 	.db 145, 9, 112, 47  ;Vines_1_Slow_O
  242 D1:BF61 7F 0B 1E 30 	.db 127, 11, 30, 48  ;Vines_9_Slow
  243 D1:BF65 F1 FF 7C 06 	.db 241, 255, 124, 6  ;SG_Vine3
  244 D1:BF69 5F FF 1F 10 	.db 95, 255, 31, 16  ;SG_TreeRow5
  245 D1:BF6D AF FF 1F 10 	.db 175, 255, 31, 16  ;SG_TreeRow5
  246 D1:BF71 3F FF 1F 12 	.db 63, 255, 31, 18  ;SG_TreeRow2
  247 D1:BF75 6F FF 1F 12 	.db 111, 255, 31, 18  ;SG_TreeRow2
  248 D1:BF79 7F FF 1F 0F 	.db 127, 255, 31, 15  ;SG_TreeRow3
  249 D1:BF7D 9F FF 1F 13 	.db 159, 255, 31, 19  ;SG_TreeRow4
  250 D1:BF81 2F FF 20 13 	.db 47, 255, 32, 19  ;SG_TreeRow4
  251 D1:BF85 EF FF 21 0F 	.db 239, 255, 33, 15  ;SG_TreeRow3
  252 D1:BF89 CF FF 20 11 	.db 207, 255, 32, 17  ;SG_TreeRow1
  253 D1:BF8D DF FF 21 13 	.db 223, 255, 33, 19  ;SG_TreeRow4
  254 D1:BF91 BF FF 20 11 	.db 191, 255, 32, 17  ;SG_TreeRow1
  255 D1:BF95 0F FF 21 10 	.db 15, 255, 33, 16  ;SG_TreeRow5
  256 D1:BF99 4F FF 1F 11 	.db 79, 255, 31, 17  ;SG_TreeRow1
  257 D1:BF9D 1F FF 20 0F 	.db 31, 255, 32, 15  ;SG_TreeRow3
  258 D1:BFA1 FF FF 22 13 	.db 255, 255, 34, 19  ;SG_TreeRow4
  259 D1:BFA5 8F FF 1F 11 	.db 143, 255, 31, 17  ;SG_TreeRow1
  260 D1:BFA9 5E FF 48 18 	.db 94, 255, 72, 24  ;SG_Vine1
  261 D1:BFAD 77 FF 1E 09 	.db 119, 255, 30, 9  ;SG_Vine2
  262 D1:BFB1 42 FF 50 09 	.db 66, 255, 80, 9  ;SG_Vine2
  263 D1:BFB5 6B FF 5C 17 	.db 107, 255, 92, 23  ;SG_BranchBase3
  264 D1:BFB9 82 FF 77 05 	.db 130, 255, 119, 5  ;SG_Branch5
  265 D1:BFBD 68 FF 2C 02 	.db 104, 255, 44, 2  ;SG_Branch3
  266 D1:BFC1 CA FF 0C 0B 	.db 202, 255, 12, 11  ;SG_Branch2
  267 D1:BFC5 60 10 79 64 	.db 96, 16, 121, 100  ;Vines_3_Slow_O_F
  268 D1:BFC9 57 0E 83 6F 	.db 87, 14, 131, 111  ;Vines_10_Slow_O
  269 D1:BFCD -  -  -  -  
  270 D1:BFCD -  -  -  -  MG_Data_0:
  271 D1:BFCD 00 -  -  -  	.db 0
  272 D1:BFCE 30 -  -  -  	.db 48
  273 D1:BFCF 39 FF 88 0C 	.db 57, 255, 136, 12  ;SG_GroundChunk2
  274 D1:BFD3 3B FF 70 0D 	.db 59, 255, 112, 13  ;SG_GroundChunk1
  275 D1:BFD7 3F FF 16 0C 	.db 63, 255, 22, 12  ;SG_GroundChunk2
  276 D1:BFDB 42 FF 00 0D 	.db 66, 255, 0, 13  ;SG_GroundChunk1
  277 D1:BFDF A8 FF 67 07 	.db 168, 255, 103, 7  ;SG_Vine6
  278 D1:BFE3 B3 FF 07 16 	.db 179, 255, 7, 22  ;SG_Vine5
  279 D1:BFE7 45 FF 78 01 	.db 69, 255, 120, 1  ;SG_GroundGrass
  280 D1:BFEB 2F FF 22 0F 	.db 47, 255, 34, 15  ;SG_TreeRow3
  281 D1:BFEF 3F FF 22 10 	.db 63, 255, 34, 16  ;SG_TreeRow5
  282 D1:BFF3 4F FF 22 11 	.db 79, 255, 34, 17  ;SG_TreeRow1
  283 D1:BFF7 5F FF 22 12 	.db 95, 255, 34, 18  ;SG_TreeRow2
  284 D1:BFFB 6F FF 23 10 	.db 111, 255, 35, 16  ;SG_TreeRow5
  285 D1:BFFF 7F FF 23 0F 	.db 127, 255, 35, 15  ;SG_TreeRow3
  286 D1:C003 AF FF 22 13 	.db 175, 255, 34, 19  ;SG_TreeRow4
  287 D1:C007 9F FF 22 12 	.db 159, 255, 34, 18  ;SG_TreeRow2
  288 D1:C00B 35 FF 12 0E 	.db 53, 255, 18, 14  ;SG_Root1
  289 D1:C00F BF FF 22 11 	.db 191, 255, 34, 17  ;SG_TreeRow1
  290 D1:C013 CF FF 23 10 	.db 207, 255, 35, 16  ;SG_TreeRow5
  291 D1:C017 DF FF 22 11 	.db 223, 255, 34, 17  ;SG_TreeRow1
  292 D1:C01B EF FF 23 0F 	.db 239, 255, 35, 15  ;SG_TreeRow3
  293 D1:C01F FF FF 22 12 	.db 255, 255, 34, 18  ;SG_TreeRow2
  294 D1:C023 8F FF 23 11 	.db 143, 255, 35, 17  ;SG_TreeRow1
  295 D1:C027 33 FF 86 0E 	.db 51, 255, 134, 14  ;SG_Root1
  296 D1:C02B 3B FF 79 0E 	.db 59, 255, 121, 14  ;SG_Root1
  297 D1:C02F 4C FF 00 01 	.db 76, 255, 0, 1  ;SG_GroundGrass
  298 D1:C033 28 FF 88 0C 	.db 40, 255, 136, 12  ;SG_GroundChunk2
  299 D1:C037 AD 09 65 69 	.db 173, 9, 101, 105  ;Leaves_2_Slow
  300 D1:C03B A9 09 5F 24 	.db 169, 9, 95, 36  ;Leaves_2_Slow_O
  301 D1:C03F 2A FF 18 0D 	.db 42, 255, 24, 13  ;SG_GroundChunk1
  302 D1:C043 2B FF 30 0D 	.db 43, 255, 48, 13  ;SG_GroundChunk1
  303 D1:C047 A8 FF 29 15 	.db 168, 255, 41, 21  ;SG_Vine4
  304 D1:C04B BE FF 00 14 	.db 190, 255, 0, 20  ;SG_Branch1
  305 D1:C04F 28 FF 00 0C 	.db 40, 255, 0, 12  ;SG_GroundChunk2
  306 D1:C053 2A FF 48 0C 	.db 42, 255, 72, 12  ;SG_GroundChunk2
  307 D1:C057 2B FF 60 0D 	.db 43, 255, 96, 13  ;SG_GroundChunk1
  308 D1:C05B 2A FF 78 0C 	.db 42, 255, 120, 12  ;SG_GroundChunk2
  309 D1:C05F 9B 0B 5C 1F 	.db 155, 11, 92, 31  ;Leaves_4_Slow
  310 D1:C063 A2 09 61 24 	.db 162, 9, 97, 36  ;Leaves_2_Slow_O
  311 D1:C067 29 FF 1F 0E 	.db 41, 255, 31, 14  ;SG_Root1
  312 D1:C06B 35 10 06 08 	.db 53, 16, 6, 8  ;GroundGrassL1_Fast
  313 D1:C06F 30 10 3B 08 	.db 48, 16, 59, 8  ;GroundGrassL1_Fast
  314 D1:C073 2A 10 96 09 	.db 42, 16, 150, 9  ;GroundGrassL1_Fast_F
  315 D1:C077 27 FF 67 07 	.db 39, 255, 103, 7  ;SG_Vine6
  316 D1:C07B 38 13 5D 6A 	.db 56, 19, 93, 106  ;Vines_2_Slow_O_F
  317 D1:C07F 4A 18 5B 40 	.db 74, 24, 91, 64  ;Vines_8_Slow_F
  318 D1:C083 27 FF 0E 0E 	.db 39, 255, 14, 14  ;SG_Root1
  319 D1:C087 27 FF 6B 0E 	.db 39, 255, 107, 14  ;SG_Root1
  320 D1:C08B 21 FF 51 0E 	.db 33, 255, 81, 14  ;SG_Root1
  321 D1:C08F -  -  -  -  
  322 D1:C08F -  -  -  -  
  323 D1:C08F -  -  -  -  
Listing for file "ascent.asm"
  558 D1:C08F -  -  -  -  #include "generated/FG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\FG_Data.txt"
    1 D1:C08F -  -  -  -  FG_Data_frame_table:
    2 D1:C08F C3 C1 D1 -  	.dl FG_Data_0
    3 D1:C092 B5 C1 D1 -  	.dl FG_Data_1
    4 D1:C095 8F C1 D1 -  	.dl FG_Data_2
    5 D1:C098 89 C1 D1 -  	.dl FG_Data_3
    6 D1:C09B 7F C1 D1 -  	.dl FG_Data_4
    7 D1:C09E 6D C1 D1 -  	.dl FG_Data_5
    8 D1:C0A1 67 C1 D1 -  	.dl FG_Data_6
    9 D1:C0A4 59 C1 D1 -  	.dl FG_Data_7
   10 D1:C0A7 47 C1 D1 -  	.dl FG_Data_8
   11 D1:C0AA 15 C1 D1 -  	.dl FG_Data_9
   12 D1:C0AD 0F C1 D1 -  	.dl FG_Data_10
   13 D1:C0B0 0D C1 D1 -  	.dl FG_Data_11
   14 D1:C0B3 0B C1 D1 -  	.dl FG_Data_12
   15 D1:C0B6 09 C1 D1 -  	.dl FG_Data_13
   16 D1:C0B9 07 C1 D1 -  	.dl FG_Data_14
   17 D1:C0BC 05 C1 D1 -  	.dl FG_Data_15
   18 D1:C0BF 03 C1 D1 -  	.dl FG_Data_16
   19 D1:C0C2 01 C1 D1 -  	.dl FG_Data_17
   20 D1:C0C5 FF C0 D1 -  	.dl FG_Data_18
   21 D1:C0C8 FD C0 D1 -  	.dl FG_Data_19
   22 D1:C0CB FB C0 D1 -  	.dl FG_Data_20
   23 D1:C0CE F9 C0 D1 -  	.dl FG_Data_21
   24 D1:C0D1 F7 C0 D1 -  	.dl FG_Data_22
   25 D1:C0D4 F5 C0 D1 -  	.dl FG_Data_23
   26 D1:C0D7 F3 C0 D1 -  	.dl FG_Data_24
   27 D1:C0DA F1 C0 D1 -  	.dl FG_Data_25
   28 D1:C0DD EF C0 D1 -  	.dl FG_Data_26
   29 D1:C0E0 ED C0 D1 -  	.dl FG_Data_27
   30 D1:C0E3 EB C0 D1 -  	.dl FG_Data_28
   31 D1:C0E6 E9 C0 D1 -  	.dl FG_Data_29
   32 D1:C0E9 -  -  -  -  
   33 D1:C0E9 -  -  -  -  
   34 D1:C0E9 -  -  -  -  
   35 D1:C0E9 -  -  -  -  FG_Data_29:
   36 D1:C0E9 00 -  -  -  	.db 0
   37 D1:C0EA 00 -  -  -  	.db 0
   38 D1:C0EB -  -  -  -  
   39 D1:C0EB -  -  -  -  FG_Data_28:
   40 D1:C0EB 00 -  -  -  	.db 0
   41 D1:C0EC 00 -  -  -  	.db 0
   42 D1:C0ED -  -  -  -  
   43 D1:C0ED -  -  -  -  FG_Data_27:
   44 D1:C0ED 00 -  -  -  	.db 0
   45 D1:C0EE 00 -  -  -  	.db 0
   46 D1:C0EF -  -  -  -  
   47 D1:C0EF -  -  -  -  FG_Data_26:
   48 D1:C0EF 00 -  -  -  	.db 0
   49 D1:C0F0 00 -  -  -  	.db 0
   50 D1:C0F1 -  -  -  -  
   51 D1:C0F1 -  -  -  -  FG_Data_25:
   52 D1:C0F1 00 -  -  -  	.db 0
   53 D1:C0F2 00 -  -  -  	.db 0
   54 D1:C0F3 -  -  -  -  
   55 D1:C0F3 -  -  -  -  FG_Data_24:
   56 D1:C0F3 00 -  -  -  	.db 0
   57 D1:C0F4 00 -  -  -  	.db 0
   58 D1:C0F5 -  -  -  -  
   59 D1:C0F5 -  -  -  -  FG_Data_23:
   60 D1:C0F5 00 -  -  -  	.db 0
   61 D1:C0F6 00 -  -  -  	.db 0
   62 D1:C0F7 -  -  -  -  
   63 D1:C0F7 -  -  -  -  FG_Data_22:
   64 D1:C0F7 00 -  -  -  	.db 0
   65 D1:C0F8 00 -  -  -  	.db 0
   66 D1:C0F9 -  -  -  -  
   67 D1:C0F9 -  -  -  -  FG_Data_21:
   68 D1:C0F9 00 -  -  -  	.db 0
   69 D1:C0FA 00 -  -  -  	.db 0
   70 D1:C0FB -  -  -  -  
   71 D1:C0FB -  -  -  -  FG_Data_20:
   72 D1:C0FB 00 -  -  -  	.db 0
   73 D1:C0FC 00 -  -  -  	.db 0
   74 D1:C0FD -  -  -  -  
   75 D1:C0FD -  -  -  -  FG_Data_19:
   76 D1:C0FD 00 -  -  -  	.db 0
   77 D1:C0FE 00 -  -  -  	.db 0
   78 D1:C0FF -  -  -  -  
   79 D1:C0FF -  -  -  -  FG_Data_18:
   80 D1:C0FF 00 -  -  -  	.db 0
   81 D1:C100 00 -  -  -  	.db 0
   82 D1:C101 -  -  -  -  
   83 D1:C101 -  -  -  -  FG_Data_17:
   84 D1:C101 00 -  -  -  	.db 0
   85 D1:C102 00 -  -  -  	.db 0
   86 D1:C103 -  -  -  -  
   87 D1:C103 -  -  -  -  FG_Data_16:
   88 D1:C103 00 -  -  -  	.db 0
   89 D1:C104 00 -  -  -  	.db 0
   90 D1:C105 -  -  -  -  
   91 D1:C105 -  -  -  -  FG_Data_15:
   92 D1:C105 00 -  -  -  	.db 0
   93 D1:C106 00 -  -  -  	.db 0
   94 D1:C107 -  -  -  -  
   95 D1:C107 -  -  -  -  FG_Data_14:
   96 D1:C107 00 -  -  -  	.db 0
   97 D1:C108 00 -  -  -  	.db 0
   98 D1:C109 -  -  -  -  
   99 D1:C109 -  -  -  -  FG_Data_13:
  100 D1:C109 00 -  -  -  	.db 0
  101 D1:C10A 00 -  -  -  	.db 0
  102 D1:C10B -  -  -  -  
  103 D1:C10B -  -  -  -  FG_Data_12:
  104 D1:C10B 00 -  -  -  	.db 0
  105 D1:C10C 00 -  -  -  	.db 0
  106 D1:C10D -  -  -  -  
  107 D1:C10D -  -  -  -  FG_Data_11:
  108 D1:C10D 00 -  -  -  	.db 0
  109 D1:C10E 00 -  -  -  	.db 0
  110 D1:C10F -  -  -  -  
  111 D1:C10F -  -  -  -  FG_Data_10:
  112 D1:C10F 00 -  -  -  	.db 0
  113 D1:C110 01 -  -  -  	.db 1
  114 D1:C111 CA FF 82 02 	.db 202, 255, 130, 2  ;SG_Branch3
  115 D1:C115 -  -  -  -  
  116 D1:C115 -  -  -  -  FG_Data_9:
  117 D1:C115 00 -  -  -  	.db 0
  118 D1:C116 0C -  -  -  	.db 12
  119 D1:C117 BD FF 22 09 	.db 189, 255, 34, 9  ;SG_Vine2
  120 D1:C11B AB 18 9B 40 	.db 171, 24, 155, 64  ;Vines_8_Slow_F
  121 D1:C11F B8 0B 13 41 	.db 184, 11, 19, 65  ;Vines_9_Slow_O
  122 D1:C123 D5 FF 7D 04 	.db 213, 255, 125, 4  ;SG_Branch4
  123 D1:C127 B0 0E 00 42 	.db 176, 14, 0, 66  ;Branches_3_Fast
  124 D1:C12B B1 0E 09 43 	.db 177, 14, 9, 67  ;Branches_2_Fast
  125 D1:C12F B1 0E 12 33 	.db 177, 14, 18, 51  ;Branches_4_Fast_F
  126 D1:C133 EA FF 13 03 	.db 234, 255, 19, 3  ;SG_Branch7
  127 D1:C137 91 FF 4E 07 	.db 145, 255, 78, 7  ;SG_Vine6
  128 D1:C13B 9B 10 86 44 	.db 155, 16, 134, 68  ;Vines_3_Slow_O
  129 D1:C13F AC 13 91 2B 	.db 172, 19, 145, 43  ;Vines_2_Slow_O
  130 D1:C143 B0 FF 0E 0A 	.db 176, 255, 14, 10  ;SG_Vine7
  131 D1:C147 -  -  -  -  
  132 D1:C147 -  -  -  -  FG_Data_8:
  133 D1:C147 00 -  -  -  	.db 0
  134 D1:C148 04 -  -  -  	.db 4
  135 D1:C149 7C 0E 97 3E 	.db 124, 14, 151, 62  ;Branches_5_Fast
  136 D1:C14D 7C 0E 8E 3F 	.db 124, 14, 142, 63  ;Branches_4_Fast
  137 D1:C151 A4 FF 77 0B 	.db 164, 255, 119, 11  ;SG_Branch2
  138 D1:C155 7B FF 8C 0A 	.db 123, 255, 140, 10  ;SG_Vine7
  139 D1:C159 -  -  -  -  
  140 D1:C159 -  -  -  -  FG_Data_7:
  141 D1:C159 00 -  -  -  	.db 0
  142 D1:C15A 03 -  -  -  	.db 3
  143 D1:C15B 87 FF 00 05 	.db 135, 255, 0, 5  ;SG_Branch5
  144 D1:C15F ED FF 00 08 	.db 237, 255, 0, 8  ;SG_Branch6
  145 D1:C163 64 FF 08 0A 	.db 100, 255, 8, 10  ;SG_Vine7
  146 D1:C167 -  -  -  -  
  147 D1:C167 -  -  -  -  FG_Data_6:
  148 D1:C167 00 -  -  -  	.db 0
  149 D1:C168 01 -  -  -  	.db 1
  150 D1:C169 64 FF 00 08 	.db 100, 255, 0, 8  ;SG_Branch6
  151 D1:C16D -  -  -  -  
  152 D1:C16D -  -  -  -  FG_Data_5:
  153 D1:C16D 00 -  -  -  	.db 0
  154 D1:C16E 04 -  -  -  	.db 4
  155 D1:C16F 34 FF 10 09 	.db 52, 255, 16, 9  ;SG_Vine2
  156 D1:C173 D7 FF 82 02 	.db 215, 255, 130, 2  ;SG_Branch3
  157 D1:C177 5D FF 00 05 	.db 93, 255, 0, 5  ;SG_Branch5
  158 D1:C17B 08 FF 3B 09 	.db 8, 255, 59, 9  ;SG_Vine2
  159 D1:C17F -  -  -  -  
  160 D1:C17F -  -  -  -  FG_Data_4:
  161 D1:C17F 00 -  -  -  	.db 0
  162 D1:C180 02 -  -  -  	.db 2
  163 D1:C181 B5 FF 82 02 	.db 181, 255, 130, 2  ;SG_Branch3
  164 D1:C185 DB FF 67 07 	.db 219, 255, 103, 7  ;SG_Vine6
  165 D1:C189 -  -  -  -  
  166 D1:C189 -  -  -  -  FG_Data_3:
  167 D1:C189 00 -  -  -  	.db 0
  168 D1:C18A 01 -  -  -  	.db 1
  169 D1:C18B C1 FF 00 08 	.db 193, 255, 0, 8  ;SG_Branch6
  170 D1:C18F -  -  -  -  
  171 D1:C18F -  -  -  -  FG_Data_2:
  172 D1:C18F 00 -  -  -  	.db 0
  173 D1:C190 09 -  -  -  	.db 9
  174 D1:C191 FB FF 7D 04 	.db 251, 255, 125, 4  ;SG_Branch4
  175 D1:C195 93 FF 00 05 	.db 147, 255, 0, 5  ;SG_Branch5
  176 D1:C199 C9 FF 71 06 	.db 201, 255, 113, 6  ;SG_Vine3
  177 D1:C19D 69 FF 38 07 	.db 105, 255, 56, 7  ;SG_Vine6
  178 D1:C1A1 71 0B 2C 31 	.db 113, 11, 44, 49  ;Vines_9_Slow_O_F
  179 D1:C1A5 71 09 20 2F 	.db 113, 9, 32, 47  ;Vines_1_Slow_O
  180 D1:C1A9 6D 10 15 2C 	.db 109, 16, 21, 44  ;Vines_3_Slow
  181 D1:C1AD 6E 10 0E 32 	.db 110, 16, 14, 50  ;Vines_3_Slow_F
  182 D1:C1B1 D2 0B 94 30 	.db 210, 11, 148, 48  ;Vines_9_Slow
  183 D1:C1B5 -  -  -  -  
  184 D1:C1B5 -  -  -  -  FG_Data_1:
  185 D1:C1B5 00 -  -  -  	.db 0
  186 D1:C1B6 03 -  -  -  	.db 3
  187 D1:C1B7 C9 FF 82 02 	.db 201, 255, 130, 2  ;SG_Branch3
  188 D1:C1BB 87 FF 00 03 	.db 135, 255, 0, 3  ;SG_Branch7
  189 D1:C1BF 4B 0E 00 0B 	.db 75, 14, 0, 11  ;Branches_9_Fast
  190 D1:C1C3 -  -  -  -  
  191 D1:C1C3 -  -  -  -  FG_Data_0:
  192 D1:C1C3 00 -  -  -  	.db 0
  193 D1:C1C4 09 -  -  -  	.db 9
  194 D1:C1C5 1B FF 00 00 	.db 27, 255, 0, 0  ;SG_GroundChunk3
  195 D1:C1C9 1B FF 20 00 	.db 27, 255, 32, 0  ;SG_GroundChunk3
  196 D1:C1CD 1B FF 40 00 	.db 27, 255, 64, 0  ;SG_GroundChunk3
  197 D1:C1D1 1B FF 60 00 	.db 27, 255, 96, 0  ;SG_GroundChunk3
  198 D1:C1D5 1B FF 80 00 	.db 27, 255, 128, 0  ;SG_GroundChunk3
  199 D1:C1D9 27 FF 2A 01 	.db 39, 255, 42, 1  ;SG_GroundGrass
  200 D1:C1DD 2A FF 03 01 	.db 42, 255, 3, 1  ;SG_GroundGrass
  201 D1:C1E1 2A FF 4E 01 	.db 42, 255, 78, 1  ;SG_GroundGrass
  202 D1:C1E5 27 FF 75 01 	.db 39, 255, 117, 1  ;SG_GroundGrass
  203 D1:C1E9 -  -  -  -  
  204 D1:C1E9 -  -  -  -  
  205 D1:C1E9 -  -  -  -  
Listing for file "ascent.asm"
  559 D1:C1E9 -  -  -  -  #include "generated/DecompressCalls.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\DecompressCalls.txt"
    1 D1:C1E9 -  -  -  -  decompress_calls_table_up:
    2 D1:C1E9 F8 C5 D1 -  	.dl decompress_frame_up_0
    3 D1:C1EC B9 C7 D1 -  	.dl decompress_frame_up_1
    4 D1:C1EF BA C7 D1 -  	.dl decompress_frame_up_2
    5 D1:C1F2 D7 C7 D1 -  	.dl decompress_frame_up_3
    6 D1:C1F5 D8 C7 D1 -  	.dl decompress_frame_up_4
    7 D1:C1F8 FC C7 D1 -  	.dl decompress_frame_up_5
    8 D1:C1FB 0B C8 D1 -  	.dl decompress_frame_up_6
    9 D1:C1FE 1A C8 D1 -  	.dl decompress_frame_up_7
   10 D1:C201 1B C8 D1 -  	.dl decompress_frame_up_8
   11 D1:C204 1C C8 D1 -  	.dl decompress_frame_up_9
   12 D1:C207 1D C8 D1 -  	.dl decompress_frame_up_10
   13 D1:C20A 1E C8 D1 -  	.dl decompress_frame_up_11
   14 D1:C20D 1F C8 D1 -  	.dl decompress_frame_up_12
   15 D1:C210 20 C8 D1 -  	.dl decompress_frame_up_13
   16 D1:C213 21 C8 D1 -  	.dl decompress_frame_up_14
   17 D1:C216 22 C8 D1 -  	.dl decompress_frame_up_15
   18 D1:C219 23 C8 D1 -  	.dl decompress_frame_up_16
   19 D1:C21C 24 C8 D1 -  	.dl decompress_frame_up_17
   20 D1:C21F 25 C8 D1 -  	.dl decompress_frame_up_18
   21 D1:C222 26 C8 D1 -  	.dl decompress_frame_up_19
   22 D1:C225 27 C8 D1 -  	.dl decompress_frame_up_20
   23 D1:C228 28 C8 D1 -  	.dl decompress_frame_up_21
   24 D1:C22B 29 C8 D1 -  	.dl decompress_frame_up_22
   25 D1:C22E 2A C8 D1 -  	.dl decompress_frame_up_23
   26 D1:C231 2B C8 D1 -  	.dl decompress_frame_up_24
   27 D1:C234 2C C8 D1 -  	.dl decompress_frame_up_25
   28 D1:C237 2D C8 D1 -  	.dl decompress_frame_up_26
   29 D1:C23A 2E C8 D1 -  	.dl decompress_frame_up_27
   30 D1:C23D 2F C8 D1 -  	.dl decompress_frame_up_28
   31 D1:C240 30 C8 D1 -  	.dl decompress_frame_up_29
   32 D1:C243 31 C8 D1 -  	.dl decompress_frame_up_30
   33 D1:C246 32 C8 D1 -  	.dl decompress_frame_up_31
   34 D1:C249 33 C8 D1 -  	.dl decompress_frame_up_32
   35 D1:C24C 34 C8 D1 -  	.dl decompress_frame_up_33
   36 D1:C24F 35 C8 D1 -  	.dl decompress_frame_up_34
   37 D1:C252 36 C8 D1 -  	.dl decompress_frame_up_35
   38 D1:C255 37 C8 D1 -  	.dl decompress_frame_up_36
   39 D1:C258 38 C8 D1 -  	.dl decompress_frame_up_37
   40 D1:C25B 39 C8 D1 -  	.dl decompress_frame_up_38
   41 D1:C25E 3A C8 D1 -  	.dl decompress_frame_up_39
   42 D1:C261 3B C8 D1 -  	.dl decompress_frame_up_40
   43 D1:C264 3C C8 D1 -  	.dl decompress_frame_up_41
   44 D1:C267 3D C8 D1 -  	.dl decompress_frame_up_42
   45 D1:C26A 3E C8 D1 -  	.dl decompress_frame_up_43
   46 D1:C26D 3F C8 D1 -  	.dl decompress_frame_up_44
   47 D1:C270 40 C8 D1 -  	.dl decompress_frame_up_45
   48 D1:C273 41 C8 D1 -  	.dl decompress_frame_up_46
   49 D1:C276 42 C8 D1 -  	.dl decompress_frame_up_47
   50 D1:C279 43 C8 D1 -  	.dl decompress_frame_up_48
   51 D1:C27C 44 C8 D1 -  	.dl decompress_frame_up_49
   52 D1:C27F 45 C8 D1 -  	.dl decompress_frame_up_50
   53 D1:C282 46 C8 D1 -  	.dl decompress_frame_up_51
   54 D1:C285 47 C8 D1 -  	.dl decompress_frame_up_52
   55 D1:C288 48 C8 D1 -  	.dl decompress_frame_up_53
   56 D1:C28B 49 C8 D1 -  	.dl decompress_frame_up_54
   57 D1:C28E 4A C8 D1 -  	.dl decompress_frame_up_55
   58 D1:C291 4B C8 D1 -  	.dl decompress_frame_up_56
   59 D1:C294 4C C8 D1 -  	.dl decompress_frame_up_57
   60 D1:C297 4D C8 D1 -  	.dl decompress_frame_up_58
   61 D1:C29A 4E C8 D1 -  	.dl decompress_frame_up_59
   62 D1:C29D 4F C8 D1 -  	.dl decompress_frame_up_60
   63 D1:C2A0 50 C8 D1 -  	.dl decompress_frame_up_61
   64 D1:C2A3 51 C8 D1 -  	.dl decompress_frame_up_62
   65 D1:C2A6 52 C8 D1 -  	.dl decompress_frame_up_63
   66 D1:C2A9 53 C8 D1 -  	.dl decompress_frame_up_64
   67 D1:C2AC 54 C8 D1 -  	.dl decompress_frame_up_65
   68 D1:C2AF 55 C8 D1 -  	.dl decompress_frame_up_66
   69 D1:C2B2 56 C8 D1 -  	.dl decompress_frame_up_67
   70 D1:C2B5 57 C8 D1 -  	.dl decompress_frame_up_68
   71 D1:C2B8 58 C8 D1 -  	.dl decompress_frame_up_69
   72 D1:C2BB 59 C8 D1 -  	.dl decompress_frame_up_70
   73 D1:C2BE 5A C8 D1 -  	.dl decompress_frame_up_71
   74 D1:C2C1 5B C8 D1 -  	.dl decompress_frame_up_72
   75 D1:C2C4 5C C8 D1 -  	.dl decompress_frame_up_73
   76 D1:C2C7 5D C8 D1 -  	.dl decompress_frame_up_74
   77 D1:C2CA 5E C8 D1 -  	.dl decompress_frame_up_75
   78 D1:C2CD 5F C8 D1 -  	.dl decompress_frame_up_76
   79 D1:C2D0 60 C8 D1 -  	.dl decompress_frame_up_77
   80 D1:C2D3 61 C8 D1 -  	.dl decompress_frame_up_78
   81 D1:C2D6 62 C8 D1 -  	.dl decompress_frame_up_79
   82 D1:C2D9 63 C8 D1 -  	.dl decompress_frame_up_80
   83 D1:C2DC 64 C8 D1 -  	.dl decompress_frame_up_81
   84 D1:C2DF 65 C8 D1 -  	.dl decompress_frame_up_82
   85 D1:C2E2 66 C8 D1 -  	.dl decompress_frame_up_83
   86 D1:C2E5 67 C8 D1 -  	.dl decompress_frame_up_84
   87 D1:C2E8 68 C8 D1 -  	.dl decompress_frame_up_85
   88 D1:C2EB 69 C8 D1 -  	.dl decompress_frame_up_86
   89 D1:C2EE 6A C8 D1 -  	.dl decompress_frame_up_87
   90 D1:C2F1 6B C8 D1 -  	.dl decompress_frame_up_88
   91 D1:C2F4 6C C8 D1 -  	.dl decompress_frame_up_89
   92 D1:C2F7 -  -  -  -  
   93 D1:C2F7 -  -  -  -  
   94 D1:C2F7 -  -  -  -  decompress_calls_table_down:
   95 D1:C2F7 6D C8 D1 -  	.dl decompress_frame_down_0
   96 D1:C2FA 6E C8 D1 -  	.dl decompress_frame_down_1
   97 D1:C2FD 6F C8 D1 -  	.dl decompress_frame_down_2
   98 D1:C300 70 C8 D1 -  	.dl decompress_frame_down_3
   99 D1:C303 71 C8 D1 -  	.dl decompress_frame_down_4
  100 D1:C306 B1 C8 D1 -  	.dl decompress_frame_down_5
  101 D1:C309 B2 C8 D1 -  	.dl decompress_frame_down_6
  102 D1:C30C BA C8 D1 -  	.dl decompress_frame_down_7
  103 D1:C30F BB C8 D1 -  	.dl decompress_frame_down_8
  104 D1:C312 E6 C8 D1 -  	.dl decompress_frame_down_9
  105 D1:C315 E7 C8 D1 -  	.dl decompress_frame_down_10
  106 D1:C318 5F C9 D1 -  	.dl decompress_frame_down_11
  107 D1:C31B F3 C9 D1 -  	.dl decompress_frame_down_12
  108 D1:C31E F7 CA D1 -  	.dl decompress_frame_down_13
  109 D1:C321 F8 CA D1 -  	.dl decompress_frame_down_14
  110 D1:C324 9A CB D1 -  	.dl decompress_frame_down_15
  111 D1:C327 9B CB D1 -  	.dl decompress_frame_down_16
  112 D1:C32A 36 CC D1 -  	.dl decompress_frame_down_17
  113 D1:C32D 37 CC D1 -  	.dl decompress_frame_down_18
  114 D1:C330 38 CC D1 -  	.dl decompress_frame_down_19
  115 D1:C333 39 CC D1 -  	.dl decompress_frame_down_20
  116 D1:C336 3A CC D1 -  	.dl decompress_frame_down_21
  117 D1:C339 3B CC D1 -  	.dl decompress_frame_down_22
  118 D1:C33C 3C CC D1 -  	.dl decompress_frame_down_23
  119 D1:C33F 3D CC D1 -  	.dl decompress_frame_down_24
  120 D1:C342 84 CC D1 -  	.dl decompress_frame_down_25
  121 D1:C345 85 CC D1 -  	.dl decompress_frame_down_26
  122 D1:C348 86 CC D1 -  	.dl decompress_frame_down_27
  123 D1:C34B 87 CC D1 -  	.dl decompress_frame_down_28
  124 D1:C34E 88 CC D1 -  	.dl decompress_frame_down_29
  125 D1:C351 89 CC D1 -  	.dl decompress_frame_down_30
  126 D1:C354 8A CC D1 -  	.dl decompress_frame_down_31
  127 D1:C357 8B CC D1 -  	.dl decompress_frame_down_32
  128 D1:C35A 8C CC D1 -  	.dl decompress_frame_down_33
  129 D1:C35D 8D CC D1 -  	.dl decompress_frame_down_34
  130 D1:C360 8E CC D1 -  	.dl decompress_frame_down_35
  131 D1:C363 8F CC D1 -  	.dl decompress_frame_down_36
  132 D1:C366 90 CC D1 -  	.dl decompress_frame_down_37
  133 D1:C369 91 CC D1 -  	.dl decompress_frame_down_38
  134 D1:C36C 92 CC D1 -  	.dl decompress_frame_down_39
  135 D1:C36F 93 CC D1 -  	.dl decompress_frame_down_40
  136 D1:C372 94 CC D1 -  	.dl decompress_frame_down_41
  137 D1:C375 95 CC D1 -  	.dl decompress_frame_down_42
  138 D1:C378 96 CC D1 -  	.dl decompress_frame_down_43
  139 D1:C37B 97 CC D1 -  	.dl decompress_frame_down_44
  140 D1:C37E 98 CC D1 -  	.dl decompress_frame_down_45
  141 D1:C381 99 CC D1 -  	.dl decompress_frame_down_46
  142 D1:C384 9A CC D1 -  	.dl decompress_frame_down_47
  143 D1:C387 9B CC D1 -  	.dl decompress_frame_down_48
  144 D1:C38A 9C CC D1 -  	.dl decompress_frame_down_49
  145 D1:C38D 9D CC D1 -  	.dl decompress_frame_down_50
  146 D1:C390 9E CC D1 -  	.dl decompress_frame_down_51
  147 D1:C393 9F CC D1 -  	.dl decompress_frame_down_52
  148 D1:C396 A0 CC D1 -  	.dl decompress_frame_down_53
  149 D1:C399 A1 CC D1 -  	.dl decompress_frame_down_54
  150 D1:C39C A2 CC D1 -  	.dl decompress_frame_down_55
  151 D1:C39F A3 CC D1 -  	.dl decompress_frame_down_56
  152 D1:C3A2 A4 CC D1 -  	.dl decompress_frame_down_57
  153 D1:C3A5 A5 CC D1 -  	.dl decompress_frame_down_58
  154 D1:C3A8 A6 CC D1 -  	.dl decompress_frame_down_59
  155 D1:C3AB A7 CC D1 -  	.dl decompress_frame_down_60
  156 D1:C3AE A8 CC D1 -  	.dl decompress_frame_down_61
  157 D1:C3B1 A9 CC D1 -  	.dl decompress_frame_down_62
  158 D1:C3B4 AA CC D1 -  	.dl decompress_frame_down_63
  159 D1:C3B7 AB CC D1 -  	.dl decompress_frame_down_64
  160 D1:C3BA AC CC D1 -  	.dl decompress_frame_down_65
  161 D1:C3BD AD CC D1 -  	.dl decompress_frame_down_66
  162 D1:C3C0 AE CC D1 -  	.dl decompress_frame_down_67
  163 D1:C3C3 AF CC D1 -  	.dl decompress_frame_down_68
  164 D1:C3C6 B0 CC D1 -  	.dl decompress_frame_down_69
  165 D1:C3C9 B1 CC D1 -  	.dl decompress_frame_down_70
  166 D1:C3CC B2 CC D1 -  	.dl decompress_frame_down_71
  167 D1:C3CF B3 CC D1 -  	.dl decompress_frame_down_72
  168 D1:C3D2 B4 CC D1 -  	.dl decompress_frame_down_73
  169 D1:C3D5 B5 CC D1 -  	.dl decompress_frame_down_74
  170 D1:C3D8 B6 CC D1 -  	.dl decompress_frame_down_75
  171 D1:C3DB B7 CC D1 -  	.dl decompress_frame_down_76
  172 D1:C3DE B8 CC D1 -  	.dl decompress_frame_down_77
  173 D1:C3E1 B9 CC D1 -  	.dl decompress_frame_down_78
  174 D1:C3E4 BA CC D1 -  	.dl decompress_frame_down_79
  175 D1:C3E7 BB CC D1 -  	.dl decompress_frame_down_80
  176 D1:C3EA BC CC D1 -  	.dl decompress_frame_down_81
  177 D1:C3ED BD CC D1 -  	.dl decompress_frame_down_82
  178 D1:C3F0 BE CC D1 -  	.dl decompress_frame_down_83
  179 D1:C3F3 BF CC D1 -  	.dl decompress_frame_down_84
  180 D1:C3F6 C0 CC D1 -  	.dl decompress_frame_down_85
  181 D1:C3F9 C1 CC D1 -  	.dl decompress_frame_down_86
  182 D1:C3FC C2 CC D1 -  	.dl decompress_frame_down_87
  183 D1:C3FF C3 CC D1 -  	.dl decompress_frame_down_88
  184 D1:C402 C4 CC D1 -  	.dl decompress_frame_down_89
  185 D1:C405 -  -  -  -  
  186 D1:C405 -  -  -  -  
  187 D1:C405 -  -  -  -  
  188 D1:C405 -  -  -  -  decompress_frame_up_pre2:
  189 D1:C405 07 -  -  -  	.db 7
  190 D1:C406 D4 DD D1 C0 
              01 D4 -  -  	.dl Clouds_0, Clouds_0_Fast_F
  191 D1:C40C A0 -  -  -  	.db %10100000
  192 D1:C40D FD DD D1 26 
              02 D4 -  -  	.dl Clouds_1, Clouds_1_Fast_F
  193 D1:C413 A0 -  -  -  	.db %10100000
  194 D1:C414 50 DE D1 8A 
              02 D4 -  -  	.dl Clouds_4, Clouds_4_Fast_F
  195 D1:C41A A0 -  -  -  	.db %10100000
  196 D1:C41B 24 DE D1 CA 
              02 D4 -  -  	.dl Clouds_3, Clouds_3_Fast_F
  197 D1:C421 A0 -  -  -  	.db %10100000
  198 D1:C422 67 DE D1 36 
              03 D4 -  -  	.dl Clouds_2, Clouds_2_Fast_F
  199 D1:C428 A0 -  -  -  	.db %10100000
  200 D1:C429 8B DE D1 E7 
              03 D4 -  -  	.dl Frog_0, Frog_0_Slow
  201 D1:C42F 00 -  -  -  	.db %00000000
  202 D1:C430 8B DE D1 17 
              05 D4 -  -  	.dl Frog_0, Frog_0_Slow_O
  203 D1:C436 40 -  -  -  	.db %01000000
  204 D1:C437 -  -  -  -  
  205 D1:C437 -  -  -  -  decompress_frame_up_pre1:
  206 D1:C437 40 -  -  -  	.db 64
  207 D1:C438 26 D2 D1 46 
              06 D4 -  -  	.dl Branches_8, Branches_8_Fast_F
  208 D1:C43E A0 -  -  -  	.db %10100000
  209 D1:C43F 02 D2 D1 A5 
              06 D4 -  -  	.dl Branches_15, Branches_15_Slow
  210 D1:C445 00 -  -  -  	.db %00000000
  211 D1:C446 CB D5 D1 16 
              07 D4 -  -  	.dl Branches_3, Branches_3_Fast
  212 D1:C44C 80 -  -  -  	.db %10000000
  213 D1:C44D DC D3 D1 BD 
              07 D4 -  -  	.dl Vines_2, Vines_2_Slow_F
  214 D1:C453 20 -  -  -  	.db %00100000
  215 D1:C454 1A D5 D1 97 
              08 D4 -  -  	.dl Vines_1, Vines_1_Slow
  216 D1:C45A 00 -  -  -  	.db %00000000
  217 D1:C45B B0 D4 D1 27 
              09 D4 -  -  	.dl Vines_9, Vines_9_Slow_O
  218 D1:C461 40 -  -  -  	.db %01000000
  219 D1:C462 17 D9 D1 D8 
              09 D4 -  -  	.dl Tree_0, Tree_0_Fast_F
  220 D1:C468 A0 -  -  -  	.db %10100000
  221 D1:C469 AA D8 D1 D4 
              0A D4 -  -  	.dl Tree_3, Tree_3_Fast
  222 D1:C46F 80 -  -  -  	.db %10000000
  223 D1:C470 82 D9 D1 D6 
              0B D4 -  -  	.dl Tree_8, Tree_8_Fast
  224 D1:C476 80 -  -  -  	.db %10000000
  225 D1:C477 D0 D7 D1 D8 
              0C D4 -  -  	.dl Tree_9, Tree_9_Fast_F
  226 D1:C47D A0 -  -  -  	.db %10100000
  227 D1:C47E 82 D9 D1 DA 
              0D D4 -  -  	.dl Tree_8, Tree_8_Fast_F
  228 D1:C484 A0 -  -  -  	.db %10100000
  229 D1:C485 F6 D6 D1 DC 
              0E D4 -  -  	.dl Tree_4, Tree_4_Fast_F
  230 D1:C48B A0 -  -  -  	.db %10100000
  231 D1:C48C 17 D9 D1 DE 
              0F D4 -  -  	.dl Tree_0, Tree_0_Fast
  232 D1:C492 80 -  -  -  	.db %10000000
  233 D1:C493 3D D8 D1 DA 
              10 D4 -  -  	.dl Tree_6, Tree_6_Fast
  234 D1:C499 80 -  -  -  	.db %10000000
  235 D1:C49A EF D9 D1 DC 
              11 D4 -  -  	.dl Tree_10, Tree_10_Fast
  236 D1:C4A0 80 -  -  -  	.db %10000000
  237 D1:C4A1 63 D7 D1 DE 
              12 D4 -  -  	.dl Tree_7, Tree_7_Fast_F
  238 D1:C4A7 A0 -  -  -  	.db %10100000
  239 D1:C4A8 5C DA D1 E0 
              13 D4 -  -  	.dl Tree_1, Tree_1_Fast_F
  240 D1:C4AE A0 -  -  -  	.db %10100000
  241 D1:C4AF 5C DA D1 DE 
              14 D4 -  -  	.dl Tree_1, Tree_1_Fast
  242 D1:C4B5 80 -  -  -  	.db %10000000
  243 D1:C4B6 C8 DA D1 DC 
              15 D4 -  -  	.dl Tree_5, Tree_5_Fast
  244 D1:C4BC 80 -  -  -  	.db %10000000
  245 D1:C4BD 35 DB D1 DE 
              16 D4 -  -  	.dl Tree_11, Tree_11_Fast
  246 D1:C4C3 80 -  -  -  	.db %10000000
  247 D1:C4C4 C8 DA D1 E0 
              17 D4 -  -  	.dl Tree_5, Tree_5_Fast_F
  248 D1:C4CA A0 -  -  -  	.db %10100000
  249 D1:C4CB 8B D6 D1 E2 
              18 D4 -  -  	.dl Tree_2, Tree_2_Fast_F
  250 D1:C4D1 A0 -  -  -  	.db %10100000
  251 D1:C4D2 35 DB D1 DE 
              19 D4 -  -  	.dl Tree_11, Tree_11_Fast_F
  252 D1:C4D8 A0 -  -  -  	.db %10100000
  253 D1:C4D9 A2 DB D1 E0 
              1A D4 -  -  	.dl Branches_1, Branches_1_Fast
  254 D1:C4DF 80 -  -  -  	.db %10000000
  255 D1:C4E0 2B D6 D1 79 
              1B D4 -  -  	.dl Branches_2, Branches_2_Slow_O
  256 D1:C4E6 40 -  -  -  	.db %01000000
  257 D1:C4E7 CB D5 D1 59 
              1C D4 -  -  	.dl Branches_3, Branches_3_Slow_O
  258 D1:C4ED 40 -  -  -  	.db %01000000
  259 D1:C4EE 44 D5 D1 33 
              1D D4 -  -  	.dl Branches_5, Branches_5_Slow_O
  260 D1:C4F4 40 -  -  -  	.db %01000000
  261 D1:C4F5 1D D1 D1 03 
              1E D4 -  -  	.dl Leaves_3, Leaves_3_Slow_O
  262 D1:C4FB 40 -  -  -  	.db %01000000
  263 D1:C4FC FD DB D1 6F 
              1E D4 -  -  	.dl Vines_7, Vines_7_Slow
  264 D1:C502 00 -  -  -  	.db %00000000
  265 D1:C503 63 D4 D1 2F 
              1F D4 -  -  	.dl Vines_5, Vines_5_Slow_O_F
  266 D1:C509 60 -  -  -  	.db %01100000
  267 D1:C50A 23 D4 D1 1D 
              20 D4 -  -  	.dl Vines_3, Vines_3_Slow_O_F
  268 D1:C510 60 -  -  -  	.db %01100000
  269 D1:C511 E3 D4 D1 D3 
              20 D4 -  -  	.dl Vines_4, Vines_4_Slow_O
  270 D1:C517 40 -  -  -  	.db %01000000
  271 D1:C518 29 DC D1 85 
              21 D4 -  -  	.dl Vines_10, Vines_10_Slow
  272 D1:C51E 00 -  -  -  	.db %00000000
  273 D1:C51F FD DB D1 47 
              22 D4 -  -  	.dl Vines_7, Vines_7_Slow_F
  274 D1:C525 20 -  -  -  	.db %00100000
  275 D1:C526 DC D3 D1 07 
              23 D4 -  -  	.dl Vines_2, Vines_2_Slow
  276 D1:C52C 00 -  -  -  	.db %00000000
  277 D1:C52D 91 D2 D1 E3 
              23 D4 -  -  	.dl Leaves_2, Leaves_2_Slow
  278 D1:C533 00 -  -  -  	.db %00000000
  279 D1:C534 A2 DB D1 4C 
              24 D4 -  -  	.dl Branches_1, Branches_1_Fast_F
  280 D1:C53A A0 -  -  -  	.db %10100000
  281 D1:C53B 2B D6 D1 E4 
              24 D4 -  -  	.dl Branches_2, Branches_2_Fast_F
  282 D1:C541 A0 -  -  -  	.db %10100000
  283 D1:C542 44 D5 D1 8E 
              25 D4 -  -  	.dl Branches_5, Branches_5_Fast_F
  284 D1:C548 A0 -  -  -  	.db %10100000
  285 D1:C549 0D D3 D1 2F 
              26 D4 -  -  	.dl Branches_14, Branches_14_Slow
  286 D1:C54F 00 -  -  -  	.db %00000000
  287 D1:C550 29 DC D1 9B 
              26 D4 -  -  	.dl Vines_10, Vines_10_Slow_O
  288 D1:C556 40 -  -  -  	.db %01000000
  289 D1:C557 66 DC D1 5A 
              27 D4 -  -  	.dl Branches_0, Branches_0_Fast
  290 D1:C55D 80 -  -  -  	.db %10000000
  291 D1:C55E BE DC D1 F2 
              27 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast
  292 D1:C564 80 -  -  -  	.db %10000000
  293 D1:C565 BE DC D1 78 
              28 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast_F
  294 D1:C56B A0 -  -  -  	.db %10100000
  295 D1:C56C F3 DC D1 FE 
              28 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast
  296 D1:C572 80 -  -  -  	.db %10000000
  297 D1:C573 F3 DC D1 84 
              29 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast_F
  298 D1:C579 A0 -  -  -  	.db %10100000
  299 D1:C57A 41 DD D1 0A 
              2A D4 -  -  	.dl GroundGrassSmall, GroundGrassSmall_Fast
  300 D1:C580 80 -  -  -  	.db %10000000
  301 D1:C581 41 DD D1 B2 
              2A D4 -  -  	.dl GroundGrassSmall, GroundGrassSmall_Fast_F
  302 D1:C587 A0 -  -  -  	.db %10100000
  303 D1:C588 63 DD D1 5A 
              2B D4 -  -  	.dl Tree_16, Tree_16_Fast
  304 D1:C58E 80 -  -  -  	.db %10000000
  305 D1:C58F 7B DD D1 AF 
              2B D4 -  -  	.dl Tree_17, Tree_17_Slow_O
  306 D1:C595 40 -  -  -  	.db %01000000
  307 D1:C596 7B DD D1 17 
              2C D4 -  -  	.dl Tree_17, Tree_17_Slow_O_F
  308 D1:C59C 60 -  -  -  	.db %01100000
  309 D1:C59D 8C DD D1 7C 
              2C D4 -  -  	.dl Leaves_8, Leaves_8_Fast
  310 D1:C5A3 80 -  -  -  	.db %10000000
  311 D1:C5A4 63 DD D1 03 
              2D D4 -  -  	.dl Tree_16, Tree_16_Slow_O
  312 D1:C5AA 40 -  -  -  	.db %01000000
  313 D1:C5AB 7B DD D1 89 
              2D D4 -  -  	.dl Tree_17, Tree_17_Slow_F
  314 D1:C5B1 20 -  -  -  	.db %00100000
  315 D1:C5B2 C3 DD D1 F1 
              2D D4 -  -  	.dl Tree_18, Tree_18_Slow_O
  316 D1:C5B8 40 -  -  -  	.db %01000000
  317 D1:C5B9 7B DD D1 55 
              2E D4 -  -  	.dl Tree_17, Tree_17_Slow
  318 D1:C5BF 00 -  -  -  	.db %00000000
  319 D1:C5C0 C3 DD D1 BB 
              2E D4 -  -  	.dl Tree_18, Tree_18_Slow_F
  320 D1:C5C6 20 -  -  -  	.db %00100000
  321 D1:C5C7 63 DD D1 1F 
              2F D4 -  -  	.dl Tree_16, Tree_16_Slow_O_F
  322 D1:C5CD 60 -  -  -  	.db %01100000
  323 D1:C5CE 91 D2 D1 A5 
              2F D4 -  -  	.dl Leaves_2, Leaves_2_Slow_F
  324 D1:C5D4 20 -  -  -  	.db %00100000
  325 D1:C5D5 D4 DD D1 0C 
              30 D4 -  -  	.dl Clouds_0, Clouds_0_Fast
  326 D1:C5DB 80 -  -  -  	.db %10000000
  327 D1:C5DC FD DD D1 72 
              30 D4 -  -  	.dl Clouds_1, Clouds_1_Fast
  328 D1:C5E2 80 -  -  -  	.db %10000000
  329 D1:C5E3 24 DE D1 D6 
              30 D4 -  -  	.dl Clouds_3, Clouds_3_Fast
  330 D1:C5E9 80 -  -  -  	.db %10000000
  331 D1:C5EA 50 DE D1 42 
              31 D4 -  -  	.dl Clouds_4, Clouds_4_Fast
  332 D1:C5F0 80 -  -  -  	.db %10000000
  333 D1:C5F1 67 DE D1 82 
              31 D4 -  -  	.dl Clouds_2, Clouds_2_Fast
  334 D1:C5F7 80 -  -  -  	.db %10000000
  335 D1:C5F8 -  -  -  -  
  336 D1:C5F8 -  -  -  -  decompress_frame_up_0:
  337 D1:C5F8 40 -  -  -  	.db 64
  338 D1:C5F9 14 CF D1 34 
              32 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast
  339 D1:C5FF 80 -  -  -  	.db %10000000
  340 D1:C600 14 CF D1 E6 
              32 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast_F
  341 D1:C606 A0 -  -  -  	.db %10100000
  342 D1:C607 59 CF D1 98 
              33 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast
  343 D1:C60D 80 -  -  -  	.db %10000000
  344 D1:C60E 59 CF D1 18 
              34 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast_F
  345 D1:C614 A0 -  -  -  	.db %10100000
  346 D1:C615 A3 CF D1 98 
              34 D4 -  -  	.dl GroundGrassL4, GroundGrassL4_Fast
  347 D1:C61B 80 -  -  -  	.db %10000000
  348 D1:C61C C3 CF D1 22 
              35 D4 -  -  	.dl GroundGrassL2, GroundGrassL2_Fast
  349 D1:C622 80 -  -  -  	.db %10000000
  350 D1:C623 DB CF D1 7A 
              35 D4 -  -  	.dl GroundGrassL5, GroundGrassL5_Fast
  351 D1:C629 80 -  -  -  	.db %10000000
  352 D1:C62A FF CF D1 FC 
              35 D4 -  -  	.dl GroundGrassL3, GroundGrassL3_Fast
  353 D1:C630 80 -  -  -  	.db %10000000
  354 D1:C631 1C D0 D1 56 
              36 D4 -  -  	.dl GroundGrassL1, GroundGrassL1_Fast
  355 D1:C637 80 -  -  -  	.db %10000000
  356 D1:C638 1C D0 D1 C8 
              36 D4 -  -  	.dl GroundGrassL1, GroundGrassL1_Fast_F
  357 D1:C63E A0 -  -  -  	.db %10100000
  358 D1:C63F FF CF D1 3A 
              37 D4 -  -  	.dl GroundGrassL3, GroundGrassL3_Fast_F
  359 D1:C645 A0 -  -  -  	.db %10100000
  360 D1:C646 38 D0 D1 93 
              37 D4 -  -  	.dl Branches_10, Branches_10_Slow_O
  361 D1:C64C 40 -  -  -  	.db %01000000
  362 D1:C64D 82 D0 D1 38 
              38 D4 -  -  	.dl Branches_9, Branches_9_Fast
  363 D1:C653 80 -  -  -  	.db %10000000
  364 D1:C654 D2 D0 D1 BB 
              38 D4 -  -  	.dl Branches_16, Branches_16_Slow
  365 D1:C65A 00 -  -  -  	.db %00000000
  366 D1:C65B FF D0 D1 27 
              39 D4 -  -  	.dl Branches_13, Branches_13_Slow_O
  367 D1:C661 40 -  -  -  	.db %01000000
  368 D1:C662 1D D1 D1 6D 
              39 D4 -  -  	.dl Leaves_3, Leaves_3_Slow
  369 D1:C668 00 -  -  -  	.db %00000000
  370 D1:C669 3C D1 D1 DA 
              39 D4 -  -  	.dl Leaves_7, Leaves_7_Fast
  371 D1:C66F 80 -  -  -  	.db %10000000
  372 D1:C670 3C D1 D1 62 
              3A D4 -  -  	.dl Leaves_7, Leaves_7_Fast_F
  373 D1:C676 A0 -  -  -  	.db %10100000
  374 D1:C677 73 D1 D1 E9 
              3A D4 -  -  	.dl Branches_6, Branches_6_Slow
  375 D1:C67D 00 -  -  -  	.db %00000000
  376 D1:C67E 38 D0 D1 87 
              3B D4 -  -  	.dl Branches_10, Branches_10_Slow_O_F
  377 D1:C684 60 -  -  -  	.db %01100000
  378 D1:C685 BD D1 D1 2B 
              3C D4 -  -  	.dl Branches_7, Branches_7_Slow_O
  379 D1:C68B 40 -  -  -  	.db %01000000
  380 D1:C68C D2 D0 D1 CF 
              3C D4 -  -  	.dl Branches_16, Branches_16_Slow_O
  381 D1:C692 40 -  -  -  	.db %01000000
  382 D1:C693 02 D2 D1 3B 
              3D D4 -  -  	.dl Branches_15, Branches_15_Slow_O
  383 D1:C699 40 -  -  -  	.db %01000000
  384 D1:C69A 26 D2 D1 A7 
              3D D4 -  -  	.dl Branches_8, Branches_8_Slow_O_F
  385 D1:C6A0 60 -  -  -  	.db %01100000
  386 D1:C6A1 57 D2 D1 2F 
              3E D4 -  -  	.dl Branches_12, Branches_12_Slow_O
  387 D1:C6A7 40 -  -  -  	.db %01000000
  388 D1:C6A8 02 D2 D1 A9 
              3E D4 -  -  	.dl Branches_15, Branches_15_Slow_O_F
  389 D1:C6AE 60 -  -  -  	.db %01100000
  390 D1:C6AF 91 D2 D1 19 
              3F D4 -  -  	.dl Leaves_2, Leaves_2_Slow_O
  391 D1:C6B5 40 -  -  -  	.db %01000000
  392 D1:C6B6 AA D2 D1 83 
              3F D4 -  -  	.dl Leaves_4, Leaves_4_Slow
  393 D1:C6BC 00 -  -  -  	.db %00000000
  394 D1:C6BD AA D2 D1 0D 
              40 D4 -  -  	.dl Leaves_4, Leaves_4_Slow_F
  395 D1:C6C3 20 -  -  -  	.db %00100000
  396 D1:C6C4 BD D1 D1 98 
              40 D4 -  -  	.dl Branches_7, Branches_7_Fast
  397 D1:C6CA 80 -  -  -  	.db %10000000
  398 D1:C6CB 26 D2 D1 12 
              41 D4 -  -  	.dl Branches_8, Branches_8_Fast
  399 D1:C6D1 80 -  -  -  	.db %10000000
  400 D1:C6D2 38 D0 D1 70 
              41 D4 -  -  	.dl Branches_10, Branches_10_Fast_F
  401 D1:C6D8 A0 -  -  -  	.db %10100000
  402 D1:C6D9 CF D2 D1 E8 
              41 D4 -  -  	.dl Branches_11, Branches_11_Fast_F
  403 D1:C6DF A0 -  -  -  	.db %10100000
  404 D1:C6E0 D2 D0 D1 4F 
              42 D4 -  -  	.dl Branches_16, Branches_16_Slow_O_F
  405 D1:C6E6 60 -  -  -  	.db %01100000
  406 D1:C6E7 FF D0 D1 BC 
              42 D4 -  -  	.dl Branches_13, Branches_13_Fast_F
  407 D1:C6ED A0 -  -  -  	.db %10100000
  408 D1:C6EE 0D D3 D1 ED 
              42 D4 -  -  	.dl Branches_14, Branches_14_Slow_O
  409 D1:C6F4 40 -  -  -  	.db %01000000
  410 D1:C6F5 02 D2 D1 5D 
              43 D4 -  -  	.dl Branches_15, Branches_15_Slow_F
  411 D1:C6FB 20 -  -  -  	.db %00100000
  412 D1:C6FC 2C D3 D1 C9 
              43 D4 -  -  	.dl Leaves_6, Leaves_6_Slow
  413 D1:C702 00 -  -  -  	.db %00000000
  414 D1:C703 50 D3 D1 4C 
              44 D4 -  -  	.dl Branches_4, Branches_4_Fast_F
  415 D1:C709 A0 -  -  -  	.db %10100000
  416 D1:C70A BD D1 D1 EA 
              44 D4 -  -  	.dl Branches_7, Branches_7_Fast_F
  417 D1:C710 A0 -  -  -  	.db %10100000
  418 D1:C711 57 D2 D1 64 
              45 D4 -  -  	.dl Branches_12, Branches_12_Fast_F
  419 D1:C717 A0 -  -  -  	.db %10100000
  420 D1:C718 AA D2 D1 BF 
              45 D4 -  -  	.dl Leaves_4, Leaves_4_Slow_O
  421 D1:C71E 40 -  -  -  	.db %01000000
  422 D1:C71F 26 D2 D1 4D 
              46 D4 -  -  	.dl Branches_8, Branches_8_Slow_O
  423 D1:C725 40 -  -  -  	.db %01000000
  424 D1:C726 38 D0 D1 D6 
              46 D4 -  -  	.dl Branches_10, Branches_10_Fast
  425 D1:C72C 80 -  -  -  	.db %10000000
  426 D1:C72D 2C D3 D1 4D 
              47 D4 -  -  	.dl Leaves_6, Leaves_6_Slow_O
  427 D1:C733 40 -  -  -  	.db %01000000
  428 D1:C734 1D D1 D1 D1 
              47 D4 -  -  	.dl Leaves_3, Leaves_3_Slow_F
  429 D1:C73A 20 -  -  -  	.db %00100000
  430 D1:C73B AE D3 D1 3D 
              48 D4 -  -  	.dl Vines_8, Vines_8_Slow
  431 D1:C741 00 -  -  -  	.db %00000000
  432 D1:C742 DC D3 D1 07 
              49 D4 -  -  	.dl Vines_2, Vines_2_Slow_O
  433 D1:C748 40 -  -  -  	.db %01000000
  434 D1:C749 23 D4 D1 DF 
              49 D4 -  -  	.dl Vines_3, Vines_3_Slow
  435 D1:C74F 00 -  -  -  	.db %00000000
  436 D1:C750 63 D4 D1 8F 
              4A D4 -  -  	.dl Vines_5, Vines_5_Slow
  437 D1:C756 00 -  -  -  	.db %00000000
  438 D1:C757 B0 D4 D1 81 
              4B D4 -  -  	.dl Vines_9, Vines_9_Slow
  439 D1:C75D 00 -  -  -  	.db %00000000
  440 D1:C75E E3 D4 D1 33 
              4C D4 -  -  	.dl Vines_4, Vines_4_Slow_F
  441 D1:C764 20 -  -  -  	.db %00100000
  442 D1:C765 1A D5 D1 EB 
              4C D4 -  -  	.dl Vines_1, Vines_1_Slow_O
  443 D1:C76B 40 -  -  -  	.db %01000000
  444 D1:C76C B0 D4 D1 77 
              4D D4 -  -  	.dl Vines_9, Vines_9_Slow_O_F
  445 D1:C772 60 -  -  -  	.db %01100000
  446 D1:C773 23 D4 D1 29 
              4E D4 -  -  	.dl Vines_3, Vines_3_Slow_F
  447 D1:C779 20 -  -  -  	.db %00100000
  448 D1:C77A AE D3 D1 D9 
              4E D4 -  -  	.dl Vines_8, Vines_8_Slow_F
  449 D1:C780 20 -  -  -  	.db %00100000
  450 D1:C781 82 D0 D1 A3 
              4F D4 -  -  	.dl Branches_9, Branches_9_Slow_O
  451 D1:C787 40 -  -  -  	.db %01000000
  452 D1:C788 DC D3 D1 53 
              50 D4 -  -  	.dl Vines_2, Vines_2_Slow_O_F
  453 D1:C78E 60 -  -  -  	.db %01100000
  454 D1:C78F 8B D6 D1 2C 
              51 D4 -  -  	.dl Tree_2, Tree_2_Fast
  455 D1:C795 80 -  -  -  	.db %10000000
  456 D1:C796 F6 D6 D1 28 
              52 D4 -  -  	.dl Tree_4, Tree_4_Fast
  457 D1:C79C 80 -  -  -  	.db %10000000
  458 D1:C79D 63 D7 D1 2A 
              53 D4 -  -  	.dl Tree_7, Tree_7_Fast
  459 D1:C7A3 80 -  -  -  	.db %10000000
  460 D1:C7A4 D0 D7 D1 2C 
              54 D4 -  -  	.dl Tree_9, Tree_9_Fast
  461 D1:C7AA 80 -  -  -  	.db %10000000
  462 D1:C7AB 3D D8 D1 2E 
              55 D4 -  -  	.dl Tree_6, Tree_6_Fast_F
  463 D1:C7B1 A0 -  -  -  	.db %10100000
  464 D1:C7B2 AA D8 D1 30 
              56 D4 -  -  	.dl Tree_3, Tree_3_Fast_F
  465 D1:C7B8 A0 -  -  -  	.db %10100000
  466 D1:C7B9 -  -  -  -  
  467 D1:C7B9 -  -  -  -  decompress_frame_up_1:
  468 D1:C7B9 00 -  -  -  	.db 0
  469 D1:C7BA -  -  -  -  
  470 D1:C7BA -  -  -  -  decompress_frame_up_2:
  471 D1:C7BA 04 -  -  -  	.db 4
  472 D1:C7BB A2 DB D1 31 
              57 D4 -  -  	.dl Branches_1, Branches_1_Slow_O
  473 D1:C7C1 40 -  -  -  	.db %01000000
  474 D1:C7C2 50 D3 D1 F7 
              57 D4 -  -  	.dl Branches_4, Branches_4_Slow_O
  475 D1:C7C8 40 -  -  -  	.db %01000000
  476 D1:C7C9 1D D1 D1 C3 
              58 D4 -  -  	.dl Leaves_3, Leaves_3_Slow_O_F
  477 D1:C7CF 60 -  -  -  	.db %01100000
  478 D1:C7D0 FD DB D1 31 
              59 D4 -  -  	.dl Vines_7, Vines_7_Slow_O
  479 D1:C7D6 40 -  -  -  	.db %01000000
  480 D1:C7D7 -  -  -  -  
  481 D1:C7D7 -  -  -  -  decompress_frame_up_3:
  482 D1:C7D7 00 -  -  -  	.db 0
  483 D1:C7D8 -  -  -  -  
  484 D1:C7D8 -  -  -  -  decompress_frame_up_4:
  485 D1:C7D8 05 -  -  -  	.db 5
  486 D1:C7D9 AE D3 D1 F5 
              59 D4 -  -  	.dl Vines_8, Vines_8_Slow_O
  487 D1:C7DF 40 -  -  -  	.db %01000000
  488 D1:C7E0 AE D3 D1 BB 
              5A D4 -  -  	.dl Vines_8, Vines_8_Slow_O_F
  489 D1:C7E6 60 -  -  -  	.db %01100000
  490 D1:C7E7 A2 D5 D1 81 
              5B D4 -  -  	.dl Vines_6, Vines_6_Slow
  491 D1:C7ED 00 -  -  -  	.db %00000000
  492 D1:C7EE 66 DC D1 38 
              5C D4 -  -  	.dl Branches_0, Branches_0_Fast_F
  493 D1:C7F4 A0 -  -  -  	.db %10100000
  494 D1:C7F5 82 D0 D1 D0 
              5C D4 -  -  	.dl Branches_9, Branches_9_Fast_F
  495 D1:C7FB A0 -  -  -  	.db %10100000
  496 D1:C7FC -  -  -  -  
  497 D1:C7FC -  -  -  -  decompress_frame_up_5:
  498 D1:C7FC 02 -  -  -  	.db 2
  499 D1:C7FD 44 D5 D1 98 
              34 D4 -  -  	.dl Branches_5, Branches_5_Fast
  500 D1:C803 80 -  -  -  	.db %10000000
  501 D1:C804 50 D3 D1 38 
              35 D4 -  -  	.dl Branches_4, Branches_4_Fast
  502 D1:C80A 80 -  -  -  	.db %10000000
  503 D1:C80B -  -  -  -  
  504 D1:C80B -  -  -  -  decompress_frame_up_6:
  505 D1:C80B 02 -  -  -  	.db 2
  506 D1:C80C 2B D6 D1 D6 
              35 D4 -  -  	.dl Branches_2, Branches_2_Fast
  507 D1:C812 80 -  -  -  	.db %10000000
  508 D1:C813 23 D4 D1 7F 
              36 D4 -  -  	.dl Vines_3, Vines_3_Slow_O
  509 D1:C819 40 -  -  -  	.db %01000000
  510 D1:C81A -  -  -  -  
  511 D1:C81A -  -  -  -  decompress_frame_up_7:
  512 D1:C81A 00 -  -  -  	.db 0
  513 D1:C81B -  -  -  -  
  514 D1:C81B -  -  -  -  decompress_frame_up_8:
  515 D1:C81B 00 -  -  -  	.db 0
  516 D1:C81C -  -  -  -  
  517 D1:C81C -  -  -  -  decompress_frame_up_9:
  518 D1:C81C 00 -  -  -  	.db 0
  519 D1:C81D -  -  -  -  
  520 D1:C81D -  -  -  -  decompress_frame_up_10:
  521 D1:C81D 00 -  -  -  	.db 0
  522 D1:C81E -  -  -  -  
  523 D1:C81E -  -  -  -  decompress_frame_up_11:
  524 D1:C81E 00 -  -  -  	.db 0
  525 D1:C81F -  -  -  -  
  526 D1:C81F -  -  -  -  decompress_frame_up_12:
  527 D1:C81F 00 -  -  -  	.db 0
  528 D1:C820 -  -  -  -  
  529 D1:C820 -  -  -  -  decompress_frame_up_13:
  530 D1:C820 00 -  -  -  	.db 0
  531 D1:C821 -  -  -  -  
  532 D1:C821 -  -  -  -  decompress_frame_up_14:
  533 D1:C821 00 -  -  -  	.db 0
  534 D1:C822 -  -  -  -  
  535 D1:C822 -  -  -  -  decompress_frame_up_15:
  536 D1:C822 00 -  -  -  	.db 0
  537 D1:C823 -  -  -  -  
  538 D1:C823 -  -  -  -  decompress_frame_up_16:
  539 D1:C823 00 -  -  -  	.db 0
  540 D1:C824 -  -  -  -  
  541 D1:C824 -  -  -  -  decompress_frame_up_17:
  542 D1:C824 00 -  -  -  	.db 0
  543 D1:C825 -  -  -  -  
  544 D1:C825 -  -  -  -  decompress_frame_up_18:
  545 D1:C825 00 -  -  -  	.db 0
  546 D1:C826 -  -  -  -  
  547 D1:C826 -  -  -  -  decompress_frame_up_19:
  548 D1:C826 00 -  -  -  	.db 0
  549 D1:C827 -  -  -  -  
  550 D1:C827 -  -  -  -  decompress_frame_up_20:
  551 D1:C827 00 -  -  -  	.db 0
  552 D1:C828 -  -  -  -  
  553 D1:C828 -  -  -  -  decompress_frame_up_21:
  554 D1:C828 00 -  -  -  	.db 0
  555 D1:C829 -  -  -  -  
  556 D1:C829 -  -  -  -  decompress_frame_up_22:
  557 D1:C829 00 -  -  -  	.db 0
  558 D1:C82A -  -  -  -  
  559 D1:C82A -  -  -  -  decompress_frame_up_23:
  560 D1:C82A 00 -  -  -  	.db 0
  561 D1:C82B -  -  -  -  
  562 D1:C82B -  -  -  -  decompress_frame_up_24:
  563 D1:C82B 00 -  -  -  	.db 0
  564 D1:C82C -  -  -  -  
  565 D1:C82C -  -  -  -  decompress_frame_up_25:
  566 D1:C82C 00 -  -  -  	.db 0
  567 D1:C82D -  -  -  -  
  568 D1:C82D -  -  -  -  decompress_frame_up_26:
  569 D1:C82D 00 -  -  -  	.db 0
  570 D1:C82E -  -  -  -  
  571 D1:C82E -  -  -  -  decompress_frame_up_27:
  572 D1:C82E 00 -  -  -  	.db 0
  573 D1:C82F -  -  -  -  
  574 D1:C82F -  -  -  -  decompress_frame_up_28:
  575 D1:C82F 00 -  -  -  	.db 0
  576 D1:C830 -  -  -  -  
  577 D1:C830 -  -  -  -  decompress_frame_up_29:
  578 D1:C830 00 -  -  -  	.db 0
  579 D1:C831 -  -  -  -  
  580 D1:C831 -  -  -  -  decompress_frame_up_30:
  581 D1:C831 00 -  -  -  	.db 0
  582 D1:C832 -  -  -  -  
  583 D1:C832 -  -  -  -  decompress_frame_up_31:
  584 D1:C832 00 -  -  -  	.db 0
  585 D1:C833 -  -  -  -  
  586 D1:C833 -  -  -  -  decompress_frame_up_32:
  587 D1:C833 00 -  -  -  	.db 0
  588 D1:C834 -  -  -  -  
  589 D1:C834 -  -  -  -  decompress_frame_up_33:
  590 D1:C834 00 -  -  -  	.db 0
  591 D1:C835 -  -  -  -  
  592 D1:C835 -  -  -  -  decompress_frame_up_34:
  593 D1:C835 00 -  -  -  	.db 0
  594 D1:C836 -  -  -  -  
  595 D1:C836 -  -  -  -  decompress_frame_up_35:
  596 D1:C836 00 -  -  -  	.db 0
  597 D1:C837 -  -  -  -  
  598 D1:C837 -  -  -  -  decompress_frame_up_36:
  599 D1:C837 00 -  -  -  	.db 0
  600 D1:C838 -  -  -  -  
  601 D1:C838 -  -  -  -  decompress_frame_up_37:
  602 D1:C838 00 -  -  -  	.db 0
  603 D1:C839 -  -  -  -  
  604 D1:C839 -  -  -  -  decompress_frame_up_38:
  605 D1:C839 00 -  -  -  	.db 0
  606 D1:C83A -  -  -  -  
  607 D1:C83A -  -  -  -  decompress_frame_up_39:
  608 D1:C83A 00 -  -  -  	.db 0
  609 D1:C83B -  -  -  -  
  610 D1:C83B -  -  -  -  decompress_frame_up_40:
  611 D1:C83B 00 -  -  -  	.db 0
  612 D1:C83C -  -  -  -  
  613 D1:C83C -  -  -  -  decompress_frame_up_41:
  614 D1:C83C 00 -  -  -  	.db 0
  615 D1:C83D -  -  -  -  
  616 D1:C83D -  -  -  -  decompress_frame_up_42:
  617 D1:C83D 00 -  -  -  	.db 0
  618 D1:C83E -  -  -  -  
  619 D1:C83E -  -  -  -  decompress_frame_up_43:
  620 D1:C83E 00 -  -  -  	.db 0
  621 D1:C83F -  -  -  -  
  622 D1:C83F -  -  -  -  decompress_frame_up_44:
  623 D1:C83F 00 -  -  -  	.db 0
  624 D1:C840 -  -  -  -  
  625 D1:C840 -  -  -  -  decompress_frame_up_45:
  626 D1:C840 00 -  -  -  	.db 0
  627 D1:C841 -  -  -  -  
  628 D1:C841 -  -  -  -  decompress_frame_up_46:
  629 D1:C841 00 -  -  -  	.db 0
  630 D1:C842 -  -  -  -  
  631 D1:C842 -  -  -  -  decompress_frame_up_47:
  632 D1:C842 00 -  -  -  	.db 0
  633 D1:C843 -  -  -  -  
  634 D1:C843 -  -  -  -  decompress_frame_up_48:
  635 D1:C843 00 -  -  -  	.db 0
  636 D1:C844 -  -  -  -  
  637 D1:C844 -  -  -  -  decompress_frame_up_49:
  638 D1:C844 00 -  -  -  	.db 0
  639 D1:C845 -  -  -  -  
  640 D1:C845 -  -  -  -  decompress_frame_up_50:
  641 D1:C845 00 -  -  -  	.db 0
  642 D1:C846 -  -  -  -  
  643 D1:C846 -  -  -  -  decompress_frame_up_51:
  644 D1:C846 00 -  -  -  	.db 0
  645 D1:C847 -  -  -  -  
  646 D1:C847 -  -  -  -  decompress_frame_up_52:
  647 D1:C847 00 -  -  -  	.db 0
  648 D1:C848 -  -  -  -  
  649 D1:C848 -  -  -  -  decompress_frame_up_53:
  650 D1:C848 00 -  -  -  	.db 0
  651 D1:C849 -  -  -  -  
  652 D1:C849 -  -  -  -  decompress_frame_up_54:
  653 D1:C849 00 -  -  -  	.db 0
  654 D1:C84A -  -  -  -  
  655 D1:C84A -  -  -  -  decompress_frame_up_55:
  656 D1:C84A 00 -  -  -  	.db 0
  657 D1:C84B -  -  -  -  
  658 D1:C84B -  -  -  -  decompress_frame_up_56:
  659 D1:C84B 00 -  -  -  	.db 0
  660 D1:C84C -  -  -  -  
  661 D1:C84C -  -  -  -  decompress_frame_up_57:
  662 D1:C84C 00 -  -  -  	.db 0
  663 D1:C84D -  -  -  -  
  664 D1:C84D -  -  -  -  decompress_frame_up_58:
  665 D1:C84D 00 -  -  -  	.db 0
  666 D1:C84E -  -  -  -  
  667 D1:C84E -  -  -  -  decompress_frame_up_59:
  668 D1:C84E 00 -  -  -  	.db 0
  669 D1:C84F -  -  -  -  
  670 D1:C84F -  -  -  -  decompress_frame_up_60:
  671 D1:C84F 00 -  -  -  	.db 0
  672 D1:C850 -  -  -  -  
  673 D1:C850 -  -  -  -  decompress_frame_up_61:
  674 D1:C850 00 -  -  -  	.db 0
  675 D1:C851 -  -  -  -  
  676 D1:C851 -  -  -  -  decompress_frame_up_62:
  677 D1:C851 00 -  -  -  	.db 0
  678 D1:C852 -  -  -  -  
  679 D1:C852 -  -  -  -  decompress_frame_up_63:
  680 D1:C852 00 -  -  -  	.db 0
  681 D1:C853 -  -  -  -  
  682 D1:C853 -  -  -  -  decompress_frame_up_64:
  683 D1:C853 00 -  -  -  	.db 0
  684 D1:C854 -  -  -  -  
  685 D1:C854 -  -  -  -  decompress_frame_up_65:
  686 D1:C854 00 -  -  -  	.db 0
  687 D1:C855 -  -  -  -  
  688 D1:C855 -  -  -  -  decompress_frame_up_66:
  689 D1:C855 00 -  -  -  	.db 0
  690 D1:C856 -  -  -  -  
  691 D1:C856 -  -  -  -  decompress_frame_up_67:
  692 D1:C856 00 -  -  -  	.db 0
  693 D1:C857 -  -  -  -  
  694 D1:C857 -  -  -  -  decompress_frame_up_68:
  695 D1:C857 00 -  -  -  	.db 0
  696 D1:C858 -  -  -  -  
  697 D1:C858 -  -  -  -  decompress_frame_up_69:
  698 D1:C858 00 -  -  -  	.db 0
  699 D1:C859 -  -  -  -  
  700 D1:C859 -  -  -  -  decompress_frame_up_70:
  701 D1:C859 00 -  -  -  	.db 0
  702 D1:C85A -  -  -  -  
  703 D1:C85A -  -  -  -  decompress_frame_up_71:
  704 D1:C85A 00 -  -  -  	.db 0
  705 D1:C85B -  -  -  -  
  706 D1:C85B -  -  -  -  decompress_frame_up_72:
  707 D1:C85B 00 -  -  -  	.db 0
  708 D1:C85C -  -  -  -  
  709 D1:C85C -  -  -  -  decompress_frame_up_73:
  710 D1:C85C 00 -  -  -  	.db 0
  711 D1:C85D -  -  -  -  
  712 D1:C85D -  -  -  -  decompress_frame_up_74:
  713 D1:C85D 00 -  -  -  	.db 0
  714 D1:C85E -  -  -  -  
  715 D1:C85E -  -  -  -  decompress_frame_up_75:
  716 D1:C85E 00 -  -  -  	.db 0
  717 D1:C85F -  -  -  -  
  718 D1:C85F -  -  -  -  decompress_frame_up_76:
  719 D1:C85F 00 -  -  -  	.db 0
  720 D1:C860 -  -  -  -  
  721 D1:C860 -  -  -  -  decompress_frame_up_77:
  722 D1:C860 00 -  -  -  	.db 0
  723 D1:C861 -  -  -  -  
  724 D1:C861 -  -  -  -  decompress_frame_up_78:
  725 D1:C861 00 -  -  -  	.db 0
  726 D1:C862 -  -  -  -  
  727 D1:C862 -  -  -  -  decompress_frame_up_79:
  728 D1:C862 00 -  -  -  	.db 0
  729 D1:C863 -  -  -  -  
  730 D1:C863 -  -  -  -  decompress_frame_up_80:
  731 D1:C863 00 -  -  -  	.db 0
  732 D1:C864 -  -  -  -  
  733 D1:C864 -  -  -  -  decompress_frame_up_81:
  734 D1:C864 00 -  -  -  	.db 0
  735 D1:C865 -  -  -  -  
  736 D1:C865 -  -  -  -  decompress_frame_up_82:
  737 D1:C865 00 -  -  -  	.db 0
  738 D1:C866 -  -  -  -  
  739 D1:C866 -  -  -  -  decompress_frame_up_83:
  740 D1:C866 00 -  -  -  	.db 0
  741 D1:C867 -  -  -  -  
  742 D1:C867 -  -  -  -  decompress_frame_up_84:
  743 D1:C867 00 -  -  -  	.db 0
  744 D1:C868 -  -  -  -  
  745 D1:C868 -  -  -  -  decompress_frame_up_85:
  746 D1:C868 00 -  -  -  	.db 0
  747 D1:C869 -  -  -  -  
  748 D1:C869 -  -  -  -  decompress_frame_up_86:
  749 D1:C869 00 -  -  -  	.db 0
  750 D1:C86A -  -  -  -  
  751 D1:C86A -  -  -  -  decompress_frame_up_87:
  752 D1:C86A 00 -  -  -  	.db 0
  753 D1:C86B -  -  -  -  
  754 D1:C86B -  -  -  -  decompress_frame_up_88:
  755 D1:C86B 00 -  -  -  	.db 0
  756 D1:C86C -  -  -  -  
  757 D1:C86C -  -  -  -  decompress_frame_up_89:
  758 D1:C86C 00 -  -  -  	.db 0
  759 D1:C86D -  -  -  -  
  760 D1:C86D -  -  -  -  
  761 D1:C86D -  -  -  -  
  762 D1:C86D -  -  -  -  decompress_frame_down_0:
  763 D1:C86D 00 -  -  -  	.db 0
  764 D1:C86E -  -  -  -  
  765 D1:C86E -  -  -  -  decompress_frame_down_1:
  766 D1:C86E 00 -  -  -  	.db 0
  767 D1:C86F -  -  -  -  
  768 D1:C86F -  -  -  -  decompress_frame_down_2:
  769 D1:C86F 00 -  -  -  	.db 0
  770 D1:C870 -  -  -  -  
  771 D1:C870 -  -  -  -  decompress_frame_down_3:
  772 D1:C870 00 -  -  -  	.db 0
  773 D1:C871 -  -  -  -  
  774 D1:C871 -  -  -  -  decompress_frame_down_4:
  775 D1:C871 09 -  -  -  	.db 9
  776 D1:C872 A3 CF D1 98 
              34 D4 -  -  	.dl GroundGrassL4, GroundGrassL4_Fast
  777 D1:C878 80 -  -  -  	.db %10000000
  778 D1:C879 C3 CF D1 22 
              35 D4 -  -  	.dl GroundGrassL2, GroundGrassL2_Fast
  779 D1:C87F 80 -  -  -  	.db %10000000
  780 D1:C880 DB CF D1 7A 
              35 D4 -  -  	.dl GroundGrassL5, GroundGrassL5_Fast
  781 D1:C886 80 -  -  -  	.db %10000000
  782 D1:C887 FF CF D1 FC 
              35 D4 -  -  	.dl GroundGrassL3, GroundGrassL3_Fast
  783 D1:C88D 80 -  -  -  	.db %10000000
  784 D1:C88E 1C D0 D1 56 
              36 D4 -  -  	.dl GroundGrassL1, GroundGrassL1_Fast
  785 D1:C894 80 -  -  -  	.db %10000000
  786 D1:C895 1C D0 D1 C8 
              36 D4 -  -  	.dl GroundGrassL1, GroundGrassL1_Fast_F
  787 D1:C89B A0 -  -  -  	.db %10100000
  788 D1:C89C FF CF D1 3A 
              37 D4 -  -  	.dl GroundGrassL3, GroundGrassL3_Fast_F
  789 D1:C8A2 A0 -  -  -  	.db %10100000
  790 D1:C8A3 B0 D4 D1 77 
              4D D4 -  -  	.dl Vines_9, Vines_9_Slow_O_F
  791 D1:C8A9 60 -  -  -  	.db %01100000
  792 D1:C8AA DC D3 D1 53 
              50 D4 -  -  	.dl Vines_2, Vines_2_Slow_O_F
  793 D1:C8B0 60 -  -  -  	.db %01100000
  794 D1:C8B1 -  -  -  -  
  795 D1:C8B1 -  -  -  -  decompress_frame_down_5:
  796 D1:C8B1 00 -  -  -  	.db 0
  797 D1:C8B2 -  -  -  -  
  798 D1:C8B2 -  -  -  -  decompress_frame_down_6:
  799 D1:C8B2 01 -  -  -  	.db 1
  800 D1:C8B3 29 DC D1 9B 
              26 D4 -  -  	.dl Vines_10, Vines_10_Slow_O
  801 D1:C8B9 40 -  -  -  	.db %01000000
  802 D1:C8BA -  -  -  -  
  803 D1:C8BA -  -  -  -  decompress_frame_down_7:
  804 D1:C8BA 00 -  -  -  	.db 0
  805 D1:C8BB -  -  -  -  
  806 D1:C8BB -  -  -  -  decompress_frame_down_8:
  807 D1:C8BB 06 -  -  -  	.db 6
  808 D1:C8BC 63 D4 D1 8F 
              4A D4 -  -  	.dl Vines_5, Vines_5_Slow
  809 D1:C8C2 00 -  -  -  	.db %00000000
  810 D1:C8C3 A2 DB D1 4C 
              24 D4 -  -  	.dl Branches_1, Branches_1_Fast_F
  811 D1:C8C9 A0 -  -  -  	.db %10100000
  812 D1:C8CA 2B D6 D1 E4 
              24 D4 -  -  	.dl Branches_2, Branches_2_Fast_F
  813 D1:C8D0 A0 -  -  -  	.db %10100000
  814 D1:C8D1 44 D5 D1 8E 
              25 D4 -  -  	.dl Branches_5, Branches_5_Fast_F
  815 D1:C8D7 A0 -  -  -  	.db %10100000
  816 D1:C8D8 0D D3 D1 2F 
              26 D4 -  -  	.dl Branches_14, Branches_14_Slow
  817 D1:C8DE 00 -  -  -  	.db %00000000
  818 D1:C8DF 66 DC D1 5A 
              27 D4 -  -  	.dl Branches_0, Branches_0_Fast
  819 D1:C8E5 80 -  -  -  	.db %10000000
  820 D1:C8E6 -  -  -  -  
  821 D1:C8E6 -  -  -  -  decompress_frame_down_9:
  822 D1:C8E6 00 -  -  -  	.db 0
  823 D1:C8E7 -  -  -  -  
  824 D1:C8E7 -  -  -  -  decompress_frame_down_10:
  825 D1:C8E7 11 -  -  -  	.db 17
  826 D1:C8E8 BD D1 D1 EA 
              44 D4 -  -  	.dl Branches_7, Branches_7_Fast_F
  827 D1:C8EE A0 -  -  -  	.db %10100000
  828 D1:C8EF 57 D2 D1 64 
              45 D4 -  -  	.dl Branches_12, Branches_12_Fast_F
  829 D1:C8F5 A0 -  -  -  	.db %10100000
  830 D1:C8F6 AE D3 D1 3D 
              48 D4 -  -  	.dl Vines_8, Vines_8_Slow
  831 D1:C8FC 00 -  -  -  	.db %00000000
  832 D1:C8FD 44 D5 D1 98 
              34 D4 -  -  	.dl Branches_5, Branches_5_Fast
  833 D1:C903 80 -  -  -  	.db %10000000
  834 D1:C904 50 D3 D1 38 
              35 D4 -  -  	.dl Branches_4, Branches_4_Fast
  835 D1:C90A 80 -  -  -  	.db %10000000
  836 D1:C90B 26 D2 D1 46 
              06 D4 -  -  	.dl Branches_8, Branches_8_Fast_F
  837 D1:C911 A0 -  -  -  	.db %10100000
  838 D1:C912 FD DB D1 6F 
              1E D4 -  -  	.dl Vines_7, Vines_7_Slow
  839 D1:C918 00 -  -  -  	.db %00000000
  840 D1:C919 63 D4 D1 2F 
              1F D4 -  -  	.dl Vines_5, Vines_5_Slow_O_F
  841 D1:C91F 60 -  -  -  	.db %01100000
  842 D1:C920 23 D4 D1 1D 
              20 D4 -  -  	.dl Vines_3, Vines_3_Slow_O_F
  843 D1:C926 60 -  -  -  	.db %01100000
  844 D1:C927 E3 D4 D1 D3 
              20 D4 -  -  	.dl Vines_4, Vines_4_Slow_O
  845 D1:C92D 40 -  -  -  	.db %01000000
  846 D1:C92E 29 DC D1 85 
              21 D4 -  -  	.dl Vines_10, Vines_10_Slow
  847 D1:C934 00 -  -  -  	.db %00000000
  848 D1:C935 FD DB D1 47 
              22 D4 -  -  	.dl Vines_7, Vines_7_Slow_F
  849 D1:C93B 20 -  -  -  	.db %00100000
  850 D1:C93C DC D3 D1 07 
              23 D4 -  -  	.dl Vines_2, Vines_2_Slow
  851 D1:C942 00 -  -  -  	.db %00000000
  852 D1:C943 A2 DB D1 31 
              57 D4 -  -  	.dl Branches_1, Branches_1_Slow_O
  853 D1:C949 40 -  -  -  	.db %01000000
  854 D1:C94A 50 D3 D1 F7 
              57 D4 -  -  	.dl Branches_4, Branches_4_Slow_O
  855 D1:C950 40 -  -  -  	.db %01000000
  856 D1:C951 1D D1 D1 C3 
              58 D4 -  -  	.dl Leaves_3, Leaves_3_Slow_O_F
  857 D1:C957 60 -  -  -  	.db %01100000
  858 D1:C958 FD DB D1 31 
              59 D4 -  -  	.dl Vines_7, Vines_7_Slow_O
  859 D1:C95E 40 -  -  -  	.db %01000000
  860 D1:C95F -  -  -  -  
  861 D1:C95F -  -  -  -  decompress_frame_down_11:
  862 D1:C95F 15 -  -  -  	.db 21
  863 D1:C960 73 D1 D1 E9 
              3A D4 -  -  	.dl Branches_6, Branches_6_Slow
  864 D1:C966 00 -  -  -  	.db %00000000
  865 D1:C967 38 D0 D1 87 
              3B D4 -  -  	.dl Branches_10, Branches_10_Slow_O_F
  866 D1:C96D 60 -  -  -  	.db %01100000
  867 D1:C96E 02 D2 D1 3B 
              3D D4 -  -  	.dl Branches_15, Branches_15_Slow_O
  868 D1:C974 40 -  -  -  	.db %01000000
  869 D1:C975 26 D2 D1 A7 
              3D D4 -  -  	.dl Branches_8, Branches_8_Slow_O_F
  870 D1:C97B 60 -  -  -  	.db %01100000
  871 D1:C97C 02 D2 D1 A9 
              3E D4 -  -  	.dl Branches_15, Branches_15_Slow_O_F
  872 D1:C982 60 -  -  -  	.db %01100000
  873 D1:C983 91 D2 D1 19 
              3F D4 -  -  	.dl Leaves_2, Leaves_2_Slow_O
  874 D1:C989 40 -  -  -  	.db %01000000
  875 D1:C98A AA D2 D1 83 
              3F D4 -  -  	.dl Leaves_4, Leaves_4_Slow
  876 D1:C990 00 -  -  -  	.db %00000000
  877 D1:C991 AA D2 D1 0D 
              40 D4 -  -  	.dl Leaves_4, Leaves_4_Slow_F
  878 D1:C997 20 -  -  -  	.db %00100000
  879 D1:C998 50 D3 D1 4C 
              44 D4 -  -  	.dl Branches_4, Branches_4_Fast_F
  880 D1:C99E A0 -  -  -  	.db %10100000
  881 D1:C99F 38 D0 D1 D6 
              46 D4 -  -  	.dl Branches_10, Branches_10_Fast
  882 D1:C9A5 80 -  -  -  	.db %10000000
  883 D1:C9A6 2C D3 D1 4D 
              47 D4 -  -  	.dl Leaves_6, Leaves_6_Slow_O
  884 D1:C9AC 40 -  -  -  	.db %01000000
  885 D1:C9AD 1D D1 D1 D1 
              47 D4 -  -  	.dl Leaves_3, Leaves_3_Slow_F
  886 D1:C9B3 20 -  -  -  	.db %00100000
  887 D1:C9B4 DC D3 D1 07 
              49 D4 -  -  	.dl Vines_2, Vines_2_Slow_O
  888 D1:C9BA 40 -  -  -  	.db %01000000
  889 D1:C9BB AE D3 D1 F5 
              59 D4 -  -  	.dl Vines_8, Vines_8_Slow_O
  890 D1:C9C1 40 -  -  -  	.db %01000000
  891 D1:C9C2 AE D3 D1 BB 
              5A D4 -  -  	.dl Vines_8, Vines_8_Slow_O_F
  892 D1:C9C8 60 -  -  -  	.db %01100000
  893 D1:C9C9 A2 D5 D1 81 
              5B D4 -  -  	.dl Vines_6, Vines_6_Slow
  894 D1:C9CF 00 -  -  -  	.db %00000000
  895 D1:C9D0 CB D5 D1 16 
              07 D4 -  -  	.dl Branches_3, Branches_3_Fast
  896 D1:C9D6 80 -  -  -  	.db %10000000
  897 D1:C9D7 2B D6 D1 D6 
              35 D4 -  -  	.dl Branches_2, Branches_2_Fast
  898 D1:C9DD 80 -  -  -  	.db %10000000
  899 D1:C9DE 23 D4 D1 7F 
              36 D4 -  -  	.dl Vines_3, Vines_3_Slow_O
  900 D1:C9E4 40 -  -  -  	.db %01000000
  901 D1:C9E5 AE D3 D1 D9 
              4E D4 -  -  	.dl Vines_8, Vines_8_Slow_F
  902 D1:C9EB 20 -  -  -  	.db %00100000
  903 D1:C9EC B0 D4 D1 27 
              09 D4 -  -  	.dl Vines_9, Vines_9_Slow_O
  904 D1:C9F2 40 -  -  -  	.db %01000000
  905 D1:C9F3 -  -  -  -  
  906 D1:C9F3 -  -  -  -  decompress_frame_down_12:
  907 D1:C9F3 25 -  -  -  	.db 37
  908 D1:C9F4 38 D0 D1 93 
              37 D4 -  -  	.dl Branches_10, Branches_10_Slow_O
  909 D1:C9FA 40 -  -  -  	.db %01000000
  910 D1:C9FB 82 D0 D1 38 
              38 D4 -  -  	.dl Branches_9, Branches_9_Fast
  911 D1:CA01 80 -  -  -  	.db %10000000
  912 D1:CA02 D2 D0 D1 BB 
              38 D4 -  -  	.dl Branches_16, Branches_16_Slow
  913 D1:CA08 00 -  -  -  	.db %00000000
  914 D1:CA09 FF D0 D1 27 
              39 D4 -  -  	.dl Branches_13, Branches_13_Slow_O
  915 D1:CA0F 40 -  -  -  	.db %01000000
  916 D1:CA10 1D D1 D1 6D 
              39 D4 -  -  	.dl Leaves_3, Leaves_3_Slow
  917 D1:CA16 00 -  -  -  	.db %00000000
  918 D1:CA17 3C D1 D1 DA 
              39 D4 -  -  	.dl Leaves_7, Leaves_7_Fast
  919 D1:CA1D 80 -  -  -  	.db %10000000
  920 D1:CA1E 3C D1 D1 62 
              3A D4 -  -  	.dl Leaves_7, Leaves_7_Fast_F
  921 D1:CA24 A0 -  -  -  	.db %10100000
  922 D1:CA25 BD D1 D1 2B 
              3C D4 -  -  	.dl Branches_7, Branches_7_Slow_O
  923 D1:CA2B 40 -  -  -  	.db %01000000
  924 D1:CA2C D2 D0 D1 CF 
              3C D4 -  -  	.dl Branches_16, Branches_16_Slow_O
  925 D1:CA32 40 -  -  -  	.db %01000000
  926 D1:CA33 57 D2 D1 2F 
              3E D4 -  -  	.dl Branches_12, Branches_12_Slow_O
  927 D1:CA39 40 -  -  -  	.db %01000000
  928 D1:CA3A BD D1 D1 98 
              40 D4 -  -  	.dl Branches_7, Branches_7_Fast
  929 D1:CA40 80 -  -  -  	.db %10000000
  930 D1:CA41 26 D2 D1 12 
              41 D4 -  -  	.dl Branches_8, Branches_8_Fast
  931 D1:CA47 80 -  -  -  	.db %10000000
  932 D1:CA48 38 D0 D1 70 
              41 D4 -  -  	.dl Branches_10, Branches_10_Fast_F
  933 D1:CA4E A0 -  -  -  	.db %10100000
  934 D1:CA4F CF D2 D1 E8 
              41 D4 -  -  	.dl Branches_11, Branches_11_Fast_F
  935 D1:CA55 A0 -  -  -  	.db %10100000
  936 D1:CA56 D2 D0 D1 4F 
              42 D4 -  -  	.dl Branches_16, Branches_16_Slow_O_F
  937 D1:CA5C 60 -  -  -  	.db %01100000
  938 D1:CA5D FF D0 D1 BC 
              42 D4 -  -  	.dl Branches_13, Branches_13_Fast_F
  939 D1:CA63 A0 -  -  -  	.db %10100000
  940 D1:CA64 0D D3 D1 ED 
              42 D4 -  -  	.dl Branches_14, Branches_14_Slow_O
  941 D1:CA6A 40 -  -  -  	.db %01000000
  942 D1:CA6B 02 D2 D1 5D 
              43 D4 -  -  	.dl Branches_15, Branches_15_Slow_F
  943 D1:CA71 20 -  -  -  	.db %00100000
  944 D1:CA72 2C D3 D1 C9 
              43 D4 -  -  	.dl Leaves_6, Leaves_6_Slow
  945 D1:CA78 00 -  -  -  	.db %00000000
  946 D1:CA79 AA D2 D1 BF 
              45 D4 -  -  	.dl Leaves_4, Leaves_4_Slow_O
  947 D1:CA7F 40 -  -  -  	.db %01000000
  948 D1:CA80 26 D2 D1 4D 
              46 D4 -  -  	.dl Branches_8, Branches_8_Slow_O
  949 D1:CA86 40 -  -  -  	.db %01000000
  950 D1:CA87 23 D4 D1 DF 
              49 D4 -  -  	.dl Vines_3, Vines_3_Slow
  951 D1:CA8D 00 -  -  -  	.db %00000000
  952 D1:CA8E B0 D4 D1 81 
              4B D4 -  -  	.dl Vines_9, Vines_9_Slow
  953 D1:CA94 00 -  -  -  	.db %00000000
  954 D1:CA95 E3 D4 D1 33 
              4C D4 -  -  	.dl Vines_4, Vines_4_Slow_F
  955 D1:CA9B 20 -  -  -  	.db %00100000
  956 D1:CA9C 1A D5 D1 EB 
              4C D4 -  -  	.dl Vines_1, Vines_1_Slow_O
  957 D1:CAA2 40 -  -  -  	.db %01000000
  958 D1:CAA3 23 D4 D1 29 
              4E D4 -  -  	.dl Vines_3, Vines_3_Slow_F
  959 D1:CAA9 20 -  -  -  	.db %00100000
  960 D1:CAAA 02 D2 D1 A5 
              06 D4 -  -  	.dl Branches_15, Branches_15_Slow
  961 D1:CAB0 00 -  -  -  	.db %00000000
  962 D1:CAB1 DC D3 D1 BD 
              07 D4 -  -  	.dl Vines_2, Vines_2_Slow_F
  963 D1:CAB7 20 -  -  -  	.db %00100000
  964 D1:CAB8 1A D5 D1 97 
              08 D4 -  -  	.dl Vines_1, Vines_1_Slow
  965 D1:CABE 00 -  -  -  	.db %00000000
  966 D1:CABF 82 D0 D1 A3 
              4F D4 -  -  	.dl Branches_9, Branches_9_Slow_O
  967 D1:CAC5 40 -  -  -  	.db %01000000
  968 D1:CAC6 A2 DB D1 E0 
              1A D4 -  -  	.dl Branches_1, Branches_1_Fast
  969 D1:CACC 80 -  -  -  	.db %10000000
  970 D1:CACD 2B D6 D1 79 
              1B D4 -  -  	.dl Branches_2, Branches_2_Slow_O
  971 D1:CAD3 40 -  -  -  	.db %01000000
  972 D1:CAD4 CB D5 D1 59 
              1C D4 -  -  	.dl Branches_3, Branches_3_Slow_O
  973 D1:CADA 40 -  -  -  	.db %01000000
  974 D1:CADB 44 D5 D1 33 
              1D D4 -  -  	.dl Branches_5, Branches_5_Slow_O
  975 D1:CAE1 40 -  -  -  	.db %01000000
  976 D1:CAE2 1D D1 D1 03 
              1E D4 -  -  	.dl Leaves_3, Leaves_3_Slow_O
  977 D1:CAE8 40 -  -  -  	.db %01000000
  978 D1:CAE9 66 DC D1 38 
              5C D4 -  -  	.dl Branches_0, Branches_0_Fast_F
  979 D1:CAEF A0 -  -  -  	.db %10100000
  980 D1:CAF0 82 D0 D1 D0 
              5C D4 -  -  	.dl Branches_9, Branches_9_Fast_F
  981 D1:CAF6 A0 -  -  -  	.db %10100000
  982 D1:CAF7 -  -  -  -  
  983 D1:CAF7 -  -  -  -  decompress_frame_down_13:
  984 D1:CAF7 00 -  -  -  	.db 0
  985 D1:CAF8 -  -  -  -  
  986 D1:CAF8 -  -  -  -  decompress_frame_down_14:
  987 D1:CAF8 17 -  -  -  	.db 23
  988 D1:CAF9 8B D6 D1 2C 
              51 D4 -  -  	.dl Tree_2, Tree_2_Fast
  989 D1:CAFF 80 -  -  -  	.db %10000000
  990 D1:CB00 F6 D6 D1 28 
              52 D4 -  -  	.dl Tree_4, Tree_4_Fast
  991 D1:CB06 80 -  -  -  	.db %10000000
  992 D1:CB07 63 D7 D1 2A 
              53 D4 -  -  	.dl Tree_7, Tree_7_Fast
  993 D1:CB0D 80 -  -  -  	.db %10000000
  994 D1:CB0E D0 D7 D1 2C 
              54 D4 -  -  	.dl Tree_9, Tree_9_Fast
  995 D1:CB14 80 -  -  -  	.db %10000000
  996 D1:CB15 3D D8 D1 2E 
              55 D4 -  -  	.dl Tree_6, Tree_6_Fast_F
  997 D1:CB1B A0 -  -  -  	.db %10100000
  998 D1:CB1C AA D8 D1 30 
              56 D4 -  -  	.dl Tree_3, Tree_3_Fast_F
  999 D1:CB22 A0 -  -  -  	.db %10100000
 1000 D1:CB23 17 D9 D1 D8 
              09 D4 -  -  	.dl Tree_0, Tree_0_Fast_F
 1001 D1:CB29 A0 -  -  -  	.db %10100000
 1002 D1:CB2A AA D8 D1 D4 
              0A D4 -  -  	.dl Tree_3, Tree_3_Fast
 1003 D1:CB30 80 -  -  -  	.db %10000000
 1004 D1:CB31 82 D9 D1 D6 
              0B D4 -  -  	.dl Tree_8, Tree_8_Fast
 1005 D1:CB37 80 -  -  -  	.db %10000000
 1006 D1:CB38 D0 D7 D1 D8 
              0C D4 -  -  	.dl Tree_9, Tree_9_Fast_F
 1007 D1:CB3E A0 -  -  -  	.db %10100000
 1008 D1:CB3F 82 D9 D1 DA 
              0D D4 -  -  	.dl Tree_8, Tree_8_Fast_F
 1009 D1:CB45 A0 -  -  -  	.db %10100000
 1010 D1:CB46 F6 D6 D1 DC 
              0E D4 -  -  	.dl Tree_4, Tree_4_Fast_F
 1011 D1:CB4C A0 -  -  -  	.db %10100000
 1012 D1:CB4D 17 D9 D1 DE 
              0F D4 -  -  	.dl Tree_0, Tree_0_Fast
 1013 D1:CB53 80 -  -  -  	.db %10000000
 1014 D1:CB54 3D D8 D1 DA 
              10 D4 -  -  	.dl Tree_6, Tree_6_Fast
 1015 D1:CB5A 80 -  -  -  	.db %10000000
 1016 D1:CB5B EF D9 D1 DC 
              11 D4 -  -  	.dl Tree_10, Tree_10_Fast
 1017 D1:CB61 80 -  -  -  	.db %10000000
 1018 D1:CB62 63 D7 D1 DE 
              12 D4 -  -  	.dl Tree_7, Tree_7_Fast_F
 1019 D1:CB68 A0 -  -  -  	.db %10100000
 1020 D1:CB69 5C DA D1 E0 
              13 D4 -  -  	.dl Tree_1, Tree_1_Fast_F
 1021 D1:CB6F A0 -  -  -  	.db %10100000
 1022 D1:CB70 5C DA D1 DE 
              14 D4 -  -  	.dl Tree_1, Tree_1_Fast
 1023 D1:CB76 80 -  -  -  	.db %10000000
 1024 D1:CB77 C8 DA D1 DC 
              15 D4 -  -  	.dl Tree_5, Tree_5_Fast
 1025 D1:CB7D 80 -  -  -  	.db %10000000
 1026 D1:CB7E 35 DB D1 DE 
              16 D4 -  -  	.dl Tree_11, Tree_11_Fast
 1027 D1:CB84 80 -  -  -  	.db %10000000
 1028 D1:CB85 C8 DA D1 E0 
              17 D4 -  -  	.dl Tree_5, Tree_5_Fast_F
 1029 D1:CB8B A0 -  -  -  	.db %10100000
 1030 D1:CB8C 8B D6 D1 E2 
              18 D4 -  -  	.dl Tree_2, Tree_2_Fast_F
 1031 D1:CB92 A0 -  -  -  	.db %10100000
 1032 D1:CB93 35 DB D1 DE 
              19 D4 -  -  	.dl Tree_11, Tree_11_Fast_F
 1033 D1:CB99 A0 -  -  -  	.db %10100000
 1034 D1:CB9A -  -  -  -  
 1035 D1:CB9A -  -  -  -  decompress_frame_down_15:
 1036 D1:CB9A 00 -  -  -  	.db 0
 1037 D1:CB9B -  -  -  -  
 1038 D1:CB9B -  -  -  -  decompress_frame_down_16:
 1039 D1:CB9B 16 -  -  -  	.db 22
 1040 D1:CB9C 14 CF D1 34 
              32 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast
 1041 D1:CBA2 80 -  -  -  	.db %10000000
 1042 D1:CBA3 14 CF D1 E6 
              32 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast_F
 1043 D1:CBA9 A0 -  -  -  	.db %10100000
 1044 D1:CBAA 59 CF D1 98 
              33 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast
 1045 D1:CBB0 80 -  -  -  	.db %10000000
 1046 D1:CBB1 59 CF D1 18 
              34 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast_F
 1047 D1:CBB7 A0 -  -  -  	.db %10100000
 1048 D1:CBB8 91 D2 D1 E3 
              23 D4 -  -  	.dl Leaves_2, Leaves_2_Slow
 1049 D1:CBBE 00 -  -  -  	.db %00000000
 1050 D1:CBBF BE DC D1 F2 
              27 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast
 1051 D1:CBC5 80 -  -  -  	.db %10000000
 1052 D1:CBC6 BE DC D1 78 
              28 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast_F
 1053 D1:CBCC A0 -  -  -  	.db %10100000
 1054 D1:CBCD F3 DC D1 FE 
              28 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast
 1055 D1:CBD3 80 -  -  -  	.db %10000000
 1056 D1:CBD4 F3 DC D1 84 
              29 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast_F
 1057 D1:CBDA A0 -  -  -  	.db %10100000
 1058 D1:CBDB 41 DD D1 0A 
              2A D4 -  -  	.dl GroundGrassSmall, GroundGrassSmall_Fast
 1059 D1:CBE1 80 -  -  -  	.db %10000000
 1060 D1:CBE2 41 DD D1 B2 
              2A D4 -  -  	.dl GroundGrassSmall, GroundGrassSmall_Fast_F
 1061 D1:CBE8 A0 -  -  -  	.db %10100000
 1062 D1:CBE9 63 DD D1 5A 
              2B D4 -  -  	.dl Tree_16, Tree_16_Fast
 1063 D1:CBEF 80 -  -  -  	.db %10000000
 1064 D1:CBF0 7B DD D1 AF 
              2B D4 -  -  	.dl Tree_17, Tree_17_Slow_O
 1065 D1:CBF6 40 -  -  -  	.db %01000000
 1066 D1:CBF7 7B DD D1 17 
              2C D4 -  -  	.dl Tree_17, Tree_17_Slow_O_F
 1067 D1:CBFD 60 -  -  -  	.db %01100000
 1068 D1:CBFE 8C DD D1 7C 
              2C D4 -  -  	.dl Leaves_8, Leaves_8_Fast
 1069 D1:CC04 80 -  -  -  	.db %10000000
 1070 D1:CC05 63 DD D1 03 
              2D D4 -  -  	.dl Tree_16, Tree_16_Slow_O
 1071 D1:CC0B 40 -  -  -  	.db %01000000
 1072 D1:CC0C 7B DD D1 89 
              2D D4 -  -  	.dl Tree_17, Tree_17_Slow_F
 1073 D1:CC12 20 -  -  -  	.db %00100000
 1074 D1:CC13 C3 DD D1 F1 
              2D D4 -  -  	.dl Tree_18, Tree_18_Slow_O
 1075 D1:CC19 40 -  -  -  	.db %01000000
 1076 D1:CC1A 7B DD D1 55 
              2E D4 -  -  	.dl Tree_17, Tree_17_Slow
 1077 D1:CC20 00 -  -  -  	.db %00000000
 1078 D1:CC21 C3 DD D1 BB 
              2E D4 -  -  	.dl Tree_18, Tree_18_Slow_F
 1079 D1:CC27 20 -  -  -  	.db %00100000
 1080 D1:CC28 63 DD D1 1F 
              2F D4 -  -  	.dl Tree_16, Tree_16_Slow_O_F
 1081 D1:CC2E 60 -  -  -  	.db %01100000
 1082 D1:CC2F 91 D2 D1 A5 
              2F D4 -  -  	.dl Leaves_2, Leaves_2_Slow_F
 1083 D1:CC35 20 -  -  -  	.db %00100000
 1084 D1:CC36 -  -  -  -  
 1085 D1:CC36 -  -  -  -  decompress_frame_down_17:
 1086 D1:CC36 00 -  -  -  	.db 0
 1087 D1:CC37 -  -  -  -  
 1088 D1:CC37 -  -  -  -  decompress_frame_down_18:
 1089 D1:CC37 00 -  -  -  	.db 0
 1090 D1:CC38 -  -  -  -  
 1091 D1:CC38 -  -  -  -  decompress_frame_down_19:
 1092 D1:CC38 00 -  -  -  	.db 0
 1093 D1:CC39 -  -  -  -  
 1094 D1:CC39 -  -  -  -  decompress_frame_down_20:
 1095 D1:CC39 00 -  -  -  	.db 0
 1096 D1:CC3A -  -  -  -  
 1097 D1:CC3A -  -  -  -  decompress_frame_down_21:
 1098 D1:CC3A 00 -  -  -  	.db 0
 1099 D1:CC3B -  -  -  -  
 1100 D1:CC3B -  -  -  -  decompress_frame_down_22:
 1101 D1:CC3B 00 -  -  -  	.db 0
 1102 D1:CC3C -  -  -  -  
 1103 D1:CC3C -  -  -  -  decompress_frame_down_23:
 1104 D1:CC3C 00 -  -  -  	.db 0
 1105 D1:CC3D -  -  -  -  
 1106 D1:CC3D -  -  -  -  decompress_frame_down_24:
 1107 D1:CC3D 0A -  -  -  	.db 10
 1108 D1:CC3E D4 DD D1 0C 
              30 D4 -  -  	.dl Clouds_0, Clouds_0_Fast
 1109 D1:CC44 80 -  -  -  	.db %10000000
 1110 D1:CC45 FD DD D1 72 
              30 D4 -  -  	.dl Clouds_1, Clouds_1_Fast
 1111 D1:CC4B 80 -  -  -  	.db %10000000
 1112 D1:CC4C 24 DE D1 D6 
              30 D4 -  -  	.dl Clouds_3, Clouds_3_Fast
 1113 D1:CC52 80 -  -  -  	.db %10000000
 1114 D1:CC53 50 DE D1 42 
              31 D4 -  -  	.dl Clouds_4, Clouds_4_Fast
 1115 D1:CC59 80 -  -  -  	.db %10000000
 1116 D1:CC5A 67 DE D1 82 
              31 D4 -  -  	.dl Clouds_2, Clouds_2_Fast
 1117 D1:CC60 80 -  -  -  	.db %10000000
 1118 D1:CC61 D4 DD D1 C0 
              01 D4 -  -  	.dl Clouds_0, Clouds_0_Fast_F
 1119 D1:CC67 A0 -  -  -  	.db %10100000
 1120 D1:CC68 FD DD D1 26 
              02 D4 -  -  	.dl Clouds_1, Clouds_1_Fast_F
 1121 D1:CC6E A0 -  -  -  	.db %10100000
 1122 D1:CC6F 50 DE D1 8A 
              02 D4 -  -  	.dl Clouds_4, Clouds_4_Fast_F
 1123 D1:CC75 A0 -  -  -  	.db %10100000
 1124 D1:CC76 24 DE D1 CA 
              02 D4 -  -  	.dl Clouds_3, Clouds_3_Fast_F
 1125 D1:CC7C A0 -  -  -  	.db %10100000
 1126 D1:CC7D 67 DE D1 36 
              03 D4 -  -  	.dl Clouds_2, Clouds_2_Fast_F
 1127 D1:CC83 A0 -  -  -  	.db %10100000
 1128 D1:CC84 -  -  -  -  
 1129 D1:CC84 -  -  -  -  decompress_frame_down_25:
 1130 D1:CC84 00 -  -  -  	.db 0
 1131 D1:CC85 -  -  -  -  
 1132 D1:CC85 -  -  -  -  decompress_frame_down_26:
 1133 D1:CC85 00 -  -  -  	.db 0
 1134 D1:CC86 -  -  -  -  
 1135 D1:CC86 -  -  -  -  decompress_frame_down_27:
 1136 D1:CC86 00 -  -  -  	.db 0
 1137 D1:CC87 -  -  -  -  
 1138 D1:CC87 -  -  -  -  decompress_frame_down_28:
 1139 D1:CC87 00 -  -  -  	.db 0
 1140 D1:CC88 -  -  -  -  
 1141 D1:CC88 -  -  -  -  decompress_frame_down_29:
 1142 D1:CC88 00 -  -  -  	.db 0
 1143 D1:CC89 -  -  -  -  
 1144 D1:CC89 -  -  -  -  decompress_frame_down_30:
 1145 D1:CC89 00 -  -  -  	.db 0
 1146 D1:CC8A -  -  -  -  
 1147 D1:CC8A -  -  -  -  decompress_frame_down_31:
 1148 D1:CC8A 00 -  -  -  	.db 0
 1149 D1:CC8B -  -  -  -  
 1150 D1:CC8B -  -  -  -  decompress_frame_down_32:
 1151 D1:CC8B 00 -  -  -  	.db 0
 1152 D1:CC8C -  -  -  -  
 1153 D1:CC8C -  -  -  -  decompress_frame_down_33:
 1154 D1:CC8C 00 -  -  -  	.db 0
 1155 D1:CC8D -  -  -  -  
 1156 D1:CC8D -  -  -  -  decompress_frame_down_34:
 1157 D1:CC8D 00 -  -  -  	.db 0
 1158 D1:CC8E -  -  -  -  
 1159 D1:CC8E -  -  -  -  decompress_frame_down_35:
 1160 D1:CC8E 00 -  -  -  	.db 0
 1161 D1:CC8F -  -  -  -  
 1162 D1:CC8F -  -  -  -  decompress_frame_down_36:
 1163 D1:CC8F 00 -  -  -  	.db 0
 1164 D1:CC90 -  -  -  -  
 1165 D1:CC90 -  -  -  -  decompress_frame_down_37:
 1166 D1:CC90 00 -  -  -  	.db 0
 1167 D1:CC91 -  -  -  -  
 1168 D1:CC91 -  -  -  -  decompress_frame_down_38:
 1169 D1:CC91 00 -  -  -  	.db 0
 1170 D1:CC92 -  -  -  -  
 1171 D1:CC92 -  -  -  -  decompress_frame_down_39:
 1172 D1:CC92 00 -  -  -  	.db 0
 1173 D1:CC93 -  -  -  -  
 1174 D1:CC93 -  -  -  -  decompress_frame_down_40:
 1175 D1:CC93 00 -  -  -  	.db 0
 1176 D1:CC94 -  -  -  -  
 1177 D1:CC94 -  -  -  -  decompress_frame_down_41:
 1178 D1:CC94 00 -  -  -  	.db 0
 1179 D1:CC95 -  -  -  -  
 1180 D1:CC95 -  -  -  -  decompress_frame_down_42:
 1181 D1:CC95 00 -  -  -  	.db 0
 1182 D1:CC96 -  -  -  -  
 1183 D1:CC96 -  -  -  -  decompress_frame_down_43:
 1184 D1:CC96 00 -  -  -  	.db 0
 1185 D1:CC97 -  -  -  -  
 1186 D1:CC97 -  -  -  -  decompress_frame_down_44:
 1187 D1:CC97 00 -  -  -  	.db 0
 1188 D1:CC98 -  -  -  -  
 1189 D1:CC98 -  -  -  -  decompress_frame_down_45:
 1190 D1:CC98 00 -  -  -  	.db 0
 1191 D1:CC99 -  -  -  -  
 1192 D1:CC99 -  -  -  -  decompress_frame_down_46:
 1193 D1:CC99 00 -  -  -  	.db 0
 1194 D1:CC9A -  -  -  -  
 1195 D1:CC9A -  -  -  -  decompress_frame_down_47:
 1196 D1:CC9A 00 -  -  -  	.db 0
 1197 D1:CC9B -  -  -  -  
 1198 D1:CC9B -  -  -  -  decompress_frame_down_48:
 1199 D1:CC9B 00 -  -  -  	.db 0
 1200 D1:CC9C -  -  -  -  
 1201 D1:CC9C -  -  -  -  decompress_frame_down_49:
 1202 D1:CC9C 00 -  -  -  	.db 0
 1203 D1:CC9D -  -  -  -  
 1204 D1:CC9D -  -  -  -  decompress_frame_down_50:
 1205 D1:CC9D 00 -  -  -  	.db 0
 1206 D1:CC9E -  -  -  -  
 1207 D1:CC9E -  -  -  -  decompress_frame_down_51:
 1208 D1:CC9E 00 -  -  -  	.db 0
 1209 D1:CC9F -  -  -  -  
 1210 D1:CC9F -  -  -  -  decompress_frame_down_52:
 1211 D1:CC9F 00 -  -  -  	.db 0
 1212 D1:CCA0 -  -  -  -  
 1213 D1:CCA0 -  -  -  -  decompress_frame_down_53:
 1214 D1:CCA0 00 -  -  -  	.db 0
 1215 D1:CCA1 -  -  -  -  
 1216 D1:CCA1 -  -  -  -  decompress_frame_down_54:
 1217 D1:CCA1 00 -  -  -  	.db 0
 1218 D1:CCA2 -  -  -  -  
 1219 D1:CCA2 -  -  -  -  decompress_frame_down_55:
 1220 D1:CCA2 00 -  -  -  	.db 0
 1221 D1:CCA3 -  -  -  -  
 1222 D1:CCA3 -  -  -  -  decompress_frame_down_56:
 1223 D1:CCA3 00 -  -  -  	.db 0
 1224 D1:CCA4 -  -  -  -  
 1225 D1:CCA4 -  -  -  -  decompress_frame_down_57:
 1226 D1:CCA4 00 -  -  -  	.db 0
 1227 D1:CCA5 -  -  -  -  
 1228 D1:CCA5 -  -  -  -  decompress_frame_down_58:
 1229 D1:CCA5 00 -  -  -  	.db 0
 1230 D1:CCA6 -  -  -  -  
 1231 D1:CCA6 -  -  -  -  decompress_frame_down_59:
 1232 D1:CCA6 00 -  -  -  	.db 0
 1233 D1:CCA7 -  -  -  -  
 1234 D1:CCA7 -  -  -  -  decompress_frame_down_60:
 1235 D1:CCA7 00 -  -  -  	.db 0
 1236 D1:CCA8 -  -  -  -  
 1237 D1:CCA8 -  -  -  -  decompress_frame_down_61:
 1238 D1:CCA8 00 -  -  -  	.db 0
 1239 D1:CCA9 -  -  -  -  
 1240 D1:CCA9 -  -  -  -  decompress_frame_down_62:
 1241 D1:CCA9 00 -  -  -  	.db 0
 1242 D1:CCAA -  -  -  -  
 1243 D1:CCAA -  -  -  -  decompress_frame_down_63:
 1244 D1:CCAA 00 -  -  -  	.db 0
 1245 D1:CCAB -  -  -  -  
 1246 D1:CCAB -  -  -  -  decompress_frame_down_64:
 1247 D1:CCAB 00 -  -  -  	.db 0
 1248 D1:CCAC -  -  -  -  
 1249 D1:CCAC -  -  -  -  decompress_frame_down_65:
 1250 D1:CCAC 00 -  -  -  	.db 0
 1251 D1:CCAD -  -  -  -  
 1252 D1:CCAD -  -  -  -  decompress_frame_down_66:
 1253 D1:CCAD 00 -  -  -  	.db 0
 1254 D1:CCAE -  -  -  -  
 1255 D1:CCAE -  -  -  -  decompress_frame_down_67:
 1256 D1:CCAE 00 -  -  -  	.db 0
 1257 D1:CCAF -  -  -  -  
 1258 D1:CCAF -  -  -  -  decompress_frame_down_68:
 1259 D1:CCAF 00 -  -  -  	.db 0
 1260 D1:CCB0 -  -  -  -  
 1261 D1:CCB0 -  -  -  -  decompress_frame_down_69:
 1262 D1:CCB0 00 -  -  -  	.db 0
 1263 D1:CCB1 -  -  -  -  
 1264 D1:CCB1 -  -  -  -  decompress_frame_down_70:
 1265 D1:CCB1 00 -  -  -  	.db 0
 1266 D1:CCB2 -  -  -  -  
 1267 D1:CCB2 -  -  -  -  decompress_frame_down_71:
 1268 D1:CCB2 00 -  -  -  	.db 0
 1269 D1:CCB3 -  -  -  -  
 1270 D1:CCB3 -  -  -  -  decompress_frame_down_72:
 1271 D1:CCB3 00 -  -  -  	.db 0
 1272 D1:CCB4 -  -  -  -  
 1273 D1:CCB4 -  -  -  -  decompress_frame_down_73:
 1274 D1:CCB4 00 -  -  -  	.db 0
 1275 D1:CCB5 -  -  -  -  
 1276 D1:CCB5 -  -  -  -  decompress_frame_down_74:
 1277 D1:CCB5 00 -  -  -  	.db 0
 1278 D1:CCB6 -  -  -  -  
 1279 D1:CCB6 -  -  -  -  decompress_frame_down_75:
 1280 D1:CCB6 00 -  -  -  	.db 0
 1281 D1:CCB7 -  -  -  -  
 1282 D1:CCB7 -  -  -  -  decompress_frame_down_76:
 1283 D1:CCB7 00 -  -  -  	.db 0
 1284 D1:CCB8 -  -  -  -  
 1285 D1:CCB8 -  -  -  -  decompress_frame_down_77:
 1286 D1:CCB8 00 -  -  -  	.db 0
 1287 D1:CCB9 -  -  -  -  
 1288 D1:CCB9 -  -  -  -  decompress_frame_down_78:
 1289 D1:CCB9 00 -  -  -  	.db 0
 1290 D1:CCBA -  -  -  -  
 1291 D1:CCBA -  -  -  -  decompress_frame_down_79:
 1292 D1:CCBA 00 -  -  -  	.db 0
 1293 D1:CCBB -  -  -  -  
 1294 D1:CCBB -  -  -  -  decompress_frame_down_80:
 1295 D1:CCBB 00 -  -  -  	.db 0
 1296 D1:CCBC -  -  -  -  
 1297 D1:CCBC -  -  -  -  decompress_frame_down_81:
 1298 D1:CCBC 00 -  -  -  	.db 0
 1299 D1:CCBD -  -  -  -  
 1300 D1:CCBD -  -  -  -  decompress_frame_down_82:
 1301 D1:CCBD 00 -  -  -  	.db 0
 1302 D1:CCBE -  -  -  -  
 1303 D1:CCBE -  -  -  -  decompress_frame_down_83:
 1304 D1:CCBE 00 -  -  -  	.db 0
 1305 D1:CCBF -  -  -  -  
 1306 D1:CCBF -  -  -  -  decompress_frame_down_84:
 1307 D1:CCBF 00 -  -  -  	.db 0
 1308 D1:CCC0 -  -  -  -  
 1309 D1:CCC0 -  -  -  -  decompress_frame_down_85:
 1310 D1:CCC0 00 -  -  -  	.db 0
 1311 D1:CCC1 -  -  -  -  
 1312 D1:CCC1 -  -  -  -  decompress_frame_down_86:
 1313 D1:CCC1 00 -  -  -  	.db 0
 1314 D1:CCC2 -  -  -  -  
 1315 D1:CCC2 -  -  -  -  decompress_frame_down_87:
 1316 D1:CCC2 00 -  -  -  	.db 0
 1317 D1:CCC3 -  -  -  -  
 1318 D1:CCC3 -  -  -  -  decompress_frame_down_88:
 1319 D1:CCC3 00 -  -  -  	.db 0
 1320 D1:CCC4 -  -  -  -  
 1321 D1:CCC4 -  -  -  -  decompress_frame_down_89:
 1322 D1:CCC4 02 -  -  -  	.db 2
 1323 D1:CCC5 8B DE D1 E7 
              03 D4 -  -  	.dl Frog_0, Frog_0_Slow
 1324 D1:CCCB 00 -  -  -  	.db %00000000
 1325 D1:CCCC 8B DE D1 17 
              05 D4 -  -  	.dl Frog_0, Frog_0_Slow_O
 1326 D1:CCD2 40 -  -  -  	.db %01000000
Listing for file "ascent.asm"
  560 D1:CCD3 -  -  -  -  #include "generated/Palette_Setup.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Palette_Setup.txt"
    1 D1:CCD3 -  -  -  -  setup_palette_1:
    2 D1:CCD3 21 00 02 E3 	ld hl,mpLcdPalette
    3 D1:CCD7 3E C2 -  -  	ld a,%11000010
    4 D1:CCD9 77 -  -  -  	ld (hl),a 
    5 D1:CCDA 23 -  -  -  	inc hl
    6 D1:CCDB 3E 20 -  -  	ld a,%00100000
    7 D1:CCDD 77 -  -  -  	ld (hl),a 
    8 D1:CCDE 23 -  -  -  	inc hl
    9 D1:CCDF 3E 24 -  -  	ld a,%00100100
   10 D1:CCE1 77 -  -  -  	ld (hl),a 
   11 D1:CCE2 23 -  -  -  	inc hl
   12 D1:CCE3 3E 39 -  -  	ld a,%00111001
   13 D1:CCE5 77 -  -  -  	ld (hl),a 
   14 D1:CCE6 23 -  -  -  	inc hl
   15 D1:CCE7 3E 85 -  -  	ld a,%10000101
   16 D1:CCE9 77 -  -  -  	ld (hl),a 
   17 D1:CCEA 23 -  -  -  	inc hl
   18 D1:CCEB 3E 4D -  -  	ld a,%01001101
   19 D1:CCED 77 -  -  -  	ld (hl),a 
   20 D1:CCEE 23 -  -  -  	inc hl
   21 D1:CCEF 3E E6 -  -  	ld a,%11100110
   22 D1:CCF1 77 -  -  -  	ld (hl),a 
   23 D1:CCF2 23 -  -  -  	inc hl
   24 D1:CCF3 3E E1 -  -  	ld a,%11100001
   25 D1:CCF5 77 -  -  -  	ld (hl),a 
   26 D1:CCF6 23 -  -  -  	inc hl
   27 D1:CCF7 3E 2A -  -  	ld a,%00101010
   28 D1:CCF9 77 -  -  -  	ld (hl),a 
   29 D1:CCFA 23 -  -  -  	inc hl
   30 D1:CCFB 3E 2E -  -  	ld a,%00101110
   31 D1:CCFD 77 -  -  -  	ld (hl),a 
   32 D1:CCFE 23 -  -  -  	inc hl
   33 D1:CCFF 3E 65 -  -  	ld a,%01100101
   34 D1:CD01 77 -  -  -  	ld (hl),a 
   35 D1:CD02 23 -  -  -  	inc hl
   36 D1:CD03 3E 95 -  -  	ld a,%10010101
   37 D1:CD05 77 -  -  -  	ld (hl),a 
   38 D1:CD06 23 -  -  -  	inc hl
   39 D1:CD07 3E FE -  -  	ld a,%11111110
   40 D1:CD09 77 -  -  -  	ld (hl),a 
   41 D1:CD0A 23 -  -  -  	inc hl
   42 D1:CD0B 3E 73 -  -  	ld a,%01110011
   43 D1:CD0D 77 -  -  -  	ld (hl),a 
   44 D1:CD0E 23 -  -  -  	inc hl
   45 D1:CD0F 3E BC -  -  	ld a,%10111100
   46 D1:CD11 77 -  -  -  	ld (hl),a 
   47 D1:CD12 23 -  -  -  	inc hl
   48 D1:CD13 3E 5B -  -  	ld a,%01011011
   49 D1:CD15 77 -  -  -  	ld (hl),a 
   50 D1:CD16 23 -  -  -  	inc hl
   51 D1:CD17 3E 8E -  -  	ld a,%10001110
   52 D1:CD19 77 -  -  -  	ld (hl),a 
   53 D1:CD1A 23 -  -  -  	inc hl
   54 D1:CD1B 3E 4F -  -  	ld a,%01001111
   55 D1:CD1D 77 -  -  -  	ld (hl),a 
   56 D1:CD1E 23 -  -  -  	inc hl
   57 D1:CD1F 3E 20 -  -  	ld a,%00100000
   58 D1:CD21 77 -  -  -  	ld (hl),a 
   59 D1:CD22 23 -  -  -  	inc hl
   60 D1:CD23 3E 80 -  -  	ld a,%10000000
   61 D1:CD25 77 -  -  -  	ld (hl),a 
   62 D1:CD26 23 -  -  -  	inc hl
   63 D1:CD27 3E 1F -  -  	ld a,%00011111
   64 D1:CD29 77 -  -  -  	ld (hl),a 
   65 D1:CD2A 23 -  -  -  	inc hl
   66 D1:CD2B 3E 81 -  -  	ld a,%10000001
   67 D1:CD2D 77 -  -  -  	ld (hl),a 
   68 D1:CD2E 23 -  -  -  	inc hl
   69 D1:CD2F 3E 1F -  -  	ld a,%00011111
   70 D1:CD31 77 -  -  -  	ld (hl),a 
   71 D1:CD32 23 -  -  -  	inc hl
   72 D1:CD33 3E 81 -  -  	ld a,%10000001
   73 D1:CD35 77 -  -  -  	ld (hl),a 
   74 D1:CD36 23 -  -  -  	inc hl
   75 D1:CD37 3E 1F -  -  	ld a,%00011111
   76 D1:CD39 77 -  -  -  	ld (hl),a 
   77 D1:CD3A 23 -  -  -  	inc hl
   78 D1:CD3B 3E 81 -  -  	ld a,%10000001
   79 D1:CD3D 77 -  -  -  	ld (hl),a 
   80 D1:CD3E 23 -  -  -  	inc hl
   81 D1:CD3F 3E 1F -  -  	ld a,%00011111
   82 D1:CD41 77 -  -  -  	ld (hl),a 
   83 D1:CD42 23 -  -  -  	inc hl
   84 D1:CD43 3E 81 -  -  	ld a,%10000001
   85 D1:CD45 77 -  -  -  	ld (hl),a 
   86 D1:CD46 23 -  -  -  	inc hl
   87 D1:CD47 3E C6 -  -  	ld a,%11000110
   88 D1:CD49 77 -  -  -  	ld (hl),a 
   89 D1:CD4A 23 -  -  -  	inc hl
   90 D1:CD4B 3E 98 -  -  	ld a,%10011000
   91 D1:CD4D 77 -  -  -  	ld (hl),a 
   92 D1:CD4E 23 -  -  -  	inc hl
   93 D1:CD4F 3E 95 -  -  	ld a,%10010101
   94 D1:CD51 77 -  -  -  	ld (hl),a 
   95 D1:CD52 23 -  -  -  	inc hl
   96 D1:CD53 3E 99 -  -  	ld a,%10011001
   97 D1:CD55 77 -  -  -  	ld (hl),a 
   98 D1:CD56 23 -  -  -  	inc hl
   99 D1:CD57 C9 -  -  -  	ret 
Listing for file "ascent.asm"
  561 D1:CD58 -  -  -  -  #include "generated/Sprite_Tables.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Tables.txt"
    1 D1:CD58 -  -  -  -  Sprite_Table_Table:
    2 D1:CD58 5E CD D1 -  	.dl Sprite_Table_0
    3 D1:CD5B 14 CF D1 -  	.dl Sprite_Table_1
    4 D1:CD5E -  -  -  -  
    5 D1:CD5E -  -  -  -  
    6 D1:CD5E -  -  -  -  Sprite_Table_0:
    7 D1:CD5E 34 32 D4 -  	.dl GroundDirtFull_Fast
    8 D1:CD61 E6 32 D4 -  	.dl GroundDirtFull_Fast_F
    9 D1:CD64 98 33 D4 -  	.dl GroundDirtMound_Fast
   10 D1:CD67 18 34 D4 -  	.dl GroundDirtMound_Fast_F
   11 D1:CD6A 98 34 D4 -  	.dl GroundGrassL4_Fast
   12 D1:CD6D 22 35 D4 -  	.dl GroundGrassL2_Fast
   13 D1:CD70 7A 35 D4 -  	.dl GroundGrassL5_Fast
   14 D1:CD73 FC 35 D4 -  	.dl GroundGrassL3_Fast
   15 D1:CD76 56 36 D4 -  	.dl GroundGrassL1_Fast
   16 D1:CD79 C8 36 D4 -  	.dl GroundGrassL1_Fast_F
   17 D1:CD7C 3A 37 D4 -  	.dl GroundGrassL3_Fast_F
   18 D1:CD7F 38 38 D4 -  	.dl Branches_9_Fast
   19 D1:CD82 27 39 D4 -  	.dl Branches_13_Slow_O
   20 D1:CD85 93 37 D4 -  	.dl Branches_10_Slow_O
   21 D1:CD88 BB 38 D4 -  	.dl Branches_16_Slow
   22 D1:CD8B 6D 39 D4 -  	.dl Leaves_3_Slow
   23 D1:CD8E DA 39 D4 -  	.dl Leaves_7_Fast
   24 D1:CD91 62 3A D4 -  	.dl Leaves_7_Fast_F
   25 D1:CD94 4D 46 D4 -  	.dl Branches_8_Slow_O
   26 D1:CD97 D1 47 D4 -  	.dl Leaves_3_Slow_F
   27 D1:CD9A ED 42 D4 -  	.dl Branches_14_Slow_O
   28 D1:CD9D A9 3E D4 -  	.dl Branches_15_Slow_O_F
   29 D1:CDA0 3B 3D D4 -  	.dl Branches_15_Slow_O
   30 D1:CDA3 E8 41 D4 -  	.dl Branches_11_Fast_F
   31 D1:CDA6 BC 42 D4 -  	.dl Branches_13_Fast_F
   32 D1:CDA9 70 41 D4 -  	.dl Branches_10_Fast_F
   33 D1:CDAC D6 46 D4 -  	.dl Branches_10_Fast
   34 D1:CDAF 4D 47 D4 -  	.dl Leaves_6_Slow_O
   35 D1:CDB2 E9 3A D4 -  	.dl Branches_6_Slow
   36 D1:CDB5 87 3B D4 -  	.dl Branches_10_Slow_O_F
   37 D1:CDB8 2F 3E D4 -  	.dl Branches_12_Slow_O
   38 D1:CDBB 83 3F D4 -  	.dl Leaves_4_Slow
   39 D1:CDBE A7 3D D4 -  	.dl Branches_8_Slow_O_F
   40 D1:CDC1 CF 3C D4 -  	.dl Branches_16_Slow_O
   41 D1:CDC4 2B 3C D4 -  	.dl Branches_7_Slow_O
   42 D1:CDC7 0D 40 D4 -  	.dl Leaves_4_Slow_F
   43 D1:CDCA 19 3F D4 -  	.dl Leaves_2_Slow_O
   44 D1:CDCD 98 40 D4 -  	.dl Branches_7_Fast
   45 D1:CDD0 12 41 D4 -  	.dl Branches_8_Fast
   46 D1:CDD3 5D 43 D4 -  	.dl Branches_15_Slow_F
   47 D1:CDD6 C9 43 D4 -  	.dl Leaves_6_Slow
   48 D1:CDD9 4F 42 D4 -  	.dl Branches_16_Slow_O_F
   49 D1:CDDC 3D 48 D4 -  	.dl Vines_8_Slow
   50 D1:CDDF 07 49 D4 -  	.dl Vines_2_Slow_O
   51 D1:CDE2 DF 49 D4 -  	.dl Vines_3_Slow
   52 D1:CDE5 8F 4A D4 -  	.dl Vines_5_Slow
   53 D1:CDE8 33 4C D4 -  	.dl Vines_4_Slow_F
   54 D1:CDEB EB 4C D4 -  	.dl Vines_1_Slow_O
   55 D1:CDEE 81 4B D4 -  	.dl Vines_9_Slow
   56 D1:CDF1 77 4D D4 -  	.dl Vines_9_Slow_O_F
   57 D1:CDF4 29 4E D4 -  	.dl Vines_3_Slow_F
   58 D1:CDF7 4C 44 D4 -  	.dl Branches_4_Fast_F
   59 D1:CDFA EA 44 D4 -  	.dl Branches_7_Fast_F
   60 D1:CDFD 64 45 D4 -  	.dl Branches_12_Fast_F
   61 D1:CE00 BF 45 D4 -  	.dl Leaves_4_Slow_O
   62 D1:CE03 BD 07 D4 -  	.dl Vines_2_Slow_F
   63 D1:CE06 97 08 D4 -  	.dl Vines_1_Slow
   64 D1:CE09 F5 59 D4 -  	.dl Vines_8_Slow_O
   65 D1:CE0C BB 5A D4 -  	.dl Vines_8_Slow_O_F
   66 D1:CE0F 81 5B D4 -  	.dl Vines_6_Slow
   67 D1:CE12 46 06 D4 -  	.dl Branches_8_Fast_F
   68 D1:CE15 A5 06 D4 -  	.dl Branches_15_Slow
   69 D1:CE18 98 34 D4 -  	.dl Branches_5_Fast
   70 D1:CE1B 38 35 D4 -  	.dl Branches_4_Fast
   71 D1:CE1E D9 4E D4 -  	.dl Vines_8_Slow_F
   72 D1:CE21 27 09 D4 -  	.dl Vines_9_Slow_O
   73 D1:CE24 16 07 D4 -  	.dl Branches_3_Fast
   74 D1:CE27 D6 35 D4 -  	.dl Branches_2_Fast
   75 D1:CE2A 7F 36 D4 -  	.dl Vines_3_Slow_O
   76 D1:CE2D A3 4F D4 -  	.dl Branches_9_Slow_O
   77 D1:CE30 2C 51 D4 -  	.dl Tree_2_Fast
   78 D1:CE33 28 52 D4 -  	.dl Tree_4_Fast
   79 D1:CE36 2A 53 D4 -  	.dl Tree_7_Fast
   80 D1:CE39 2C 54 D4 -  	.dl Tree_9_Fast
   81 D1:CE3C 2E 55 D4 -  	.dl Tree_6_Fast_F
   82 D1:CE3F 30 56 D4 -  	.dl Tree_3_Fast_F
   83 D1:CE42 D8 09 D4 -  	.dl Tree_0_Fast_F
   84 D1:CE45 D4 0A D4 -  	.dl Tree_3_Fast
   85 D1:CE48 D6 0B D4 -  	.dl Tree_8_Fast
   86 D1:CE4B D8 0C D4 -  	.dl Tree_9_Fast_F
   87 D1:CE4E DA 0D D4 -  	.dl Tree_8_Fast_F
   88 D1:CE51 DC 0E D4 -  	.dl Tree_4_Fast_F
   89 D1:CE54 DE 0F D4 -  	.dl Tree_0_Fast
   90 D1:CE57 DA 10 D4 -  	.dl Tree_6_Fast
   91 D1:CE5A DC 11 D4 -  	.dl Tree_10_Fast
   92 D1:CE5D DE 12 D4 -  	.dl Tree_7_Fast_F
   93 D1:CE60 E0 13 D4 -  	.dl Tree_1_Fast_F
   94 D1:CE63 DE 14 D4 -  	.dl Tree_1_Fast
   95 D1:CE66 DC 15 D4 -  	.dl Tree_5_Fast
   96 D1:CE69 DE 16 D4 -  	.dl Tree_11_Fast
   97 D1:CE6C E0 17 D4 -  	.dl Tree_5_Fast_F
   98 D1:CE6F E2 18 D4 -  	.dl Tree_2_Fast_F
   99 D1:CE72 DE 19 D4 -  	.dl Tree_11_Fast_F
  100 D1:CE75 E0 1A D4 -  	.dl Branches_1_Fast
  101 D1:CE78 79 1B D4 -  	.dl Branches_2_Slow_O
  102 D1:CE7B 59 1C D4 -  	.dl Branches_3_Slow_O
  103 D1:CE7E 33 1D D4 -  	.dl Branches_5_Slow_O
  104 D1:CE81 03 1E D4 -  	.dl Leaves_3_Slow_O
  105 D1:CE84 6F 1E D4 -  	.dl Vines_7_Slow
  106 D1:CE87 2F 1F D4 -  	.dl Vines_5_Slow_O_F
  107 D1:CE8A 1D 20 D4 -  	.dl Vines_3_Slow_O_F
  108 D1:CE8D D3 20 D4 -  	.dl Vines_4_Slow_O
  109 D1:CE90 85 21 D4 -  	.dl Vines_10_Slow
  110 D1:CE93 47 22 D4 -  	.dl Vines_7_Slow_F
  111 D1:CE96 07 23 D4 -  	.dl Vines_2_Slow
  112 D1:CE99 E3 23 D4 -  	.dl Leaves_2_Slow
  113 D1:CE9C 53 50 D4 -  	.dl Vines_2_Slow_O_F
  114 D1:CE9F 4C 24 D4 -  	.dl Branches_1_Fast_F
  115 D1:CEA2 E4 24 D4 -  	.dl Branches_2_Fast_F
  116 D1:CEA5 8E 25 D4 -  	.dl Branches_5_Fast_F
  117 D1:CEA8 2F 26 D4 -  	.dl Branches_14_Slow
  118 D1:CEAB 9B 26 D4 -  	.dl Vines_10_Slow_O
  119 D1:CEAE 5A 27 D4 -  	.dl Branches_0_Fast
  120 D1:CEB1 31 57 D4 -  	.dl Branches_1_Slow_O
  121 D1:CEB4 F7 57 D4 -  	.dl Branches_4_Slow_O
  122 D1:CEB7 C3 58 D4 -  	.dl Leaves_3_Slow_O_F
  123 D1:CEBA 31 59 D4 -  	.dl Vines_7_Slow_O
  124 D1:CEBD 38 5C D4 -  	.dl Branches_0_Fast_F
  125 D1:CEC0 D0 5C D4 -  	.dl Branches_9_Fast_F
  126 D1:CEC3 F2 27 D4 -  	.dl GroundDirtDark_Fast
  127 D1:CEC6 78 28 D4 -  	.dl GroundDirtDark_Fast_F
  128 D1:CEC9 FE 28 D4 -  	.dl GroundHumpDark_Fast
  129 D1:CECC 84 29 D4 -  	.dl GroundHumpDark_Fast_F
  130 D1:CECF 5A 2B D4 -  	.dl Tree_16_Fast
  131 D1:CED2 AF 2B D4 -  	.dl Tree_17_Slow_O
  132 D1:CED5 17 2C D4 -  	.dl Tree_17_Slow_O_F
  133 D1:CED8 03 2D D4 -  	.dl Tree_16_Slow_O
  134 D1:CEDB 89 2D D4 -  	.dl Tree_17_Slow_F
  135 D1:CEDE 7C 2C D4 -  	.dl Leaves_8_Fast
  136 D1:CEE1 F1 2D D4 -  	.dl Tree_18_Slow_O
  137 D1:CEE4 55 2E D4 -  	.dl Tree_17_Slow
  138 D1:CEE7 BB 2E D4 -  	.dl Tree_18_Slow_F
  139 D1:CEEA 1F 2F D4 -  	.dl Tree_16_Slow_O_F
  140 D1:CEED A5 2F D4 -  	.dl Leaves_2_Slow_F
  141 D1:CEF0 0C 30 D4 -  	.dl Clouds_0_Fast
  142 D1:CEF3 72 30 D4 -  	.dl Clouds_1_Fast
  143 D1:CEF6 D6 30 D4 -  	.dl Clouds_3_Fast
  144 D1:CEF9 42 31 D4 -  	.dl Clouds_4_Fast
  145 D1:CEFC 82 31 D4 -  	.dl Clouds_2_Fast
  146 D1:CEFF C0 01 D4 -  	.dl Clouds_0_Fast_F
  147 D1:CF02 26 02 D4 -  	.dl Clouds_1_Fast_F
  148 D1:CF05 8A 02 D4 -  	.dl Clouds_4_Fast_F
  149 D1:CF08 CA 02 D4 -  	.dl Clouds_3_Fast_F
  150 D1:CF0B 36 03 D4 -  	.dl Clouds_2_Fast_F
  151 D1:CF0E 0A 2A D4 -  	.dl GroundGrassSmall_Fast
  152 D1:CF11 B2 2A D4 -  	.dl GroundGrassSmall_Fast_F
  153 D1:CF14 -  -  -  -  
  154 D1:CF14 -  -  -  -  Sprite_Table_1:
  155 D1:CF14 -  -  -  -  
Listing for file "ascent.asm"
  562 D1:CF14 -  -  -  -  #include "generated/Sprite_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Data.txt"
    1 D1:CF14 -  -  -  -  GroundDirtFull:
    2 D1:CF14 24 -  -  -  	.db %00100100
    3 D1:CF15 10 10 -  -  	.db 16, 16
    4 D1:CF17 15 00 -  -  	.db %00010101, %00000000
    5 D1:CF19 -  -  -  -  
    6 D1:CF19 04 00 00 00 
              04 00 00 00 	.db %00000100, %00000000, %00000000, %00000000, %00000100, %00000000, %00000000, %00000000
    7 D1:CF21 AA AA 40 4A 
              21 12 10 24 	.db %10101010, %10101010, %01000000, %01001010, %00100001, %00010010, %00010000, %00100100
    8 D1:CF29 01 01 00 04 
              44 2A A8 10 	.db %00000001, %00000001, %00000000, %00000100, %01000100, %00101010, %10101000, %00010000
    9 D1:CF31 10 A5 0A 80 
              04 00 00 A1 	.db %00010000, %10100101, %00001010, %10000000, %00000100, %00000000, %00000000, %10100001
   10 D1:CF39 84 40 00 61 
              10 10 00 10 	.db %10000100, %01000000, %00000000, %01100001, %00010000, %00010000, %00000000, %00010000
   11 D1:CF41 0A AA 94 00 
              29 10 12 84 	.db %00001010, %10101010, %10010100, %00000000, %00101001, %00010000, %00010010, %10000100
   12 D1:CF49 10 00 42 84 
              01 29 00 80 	.db %00010000, %00000000, %01000010, %10000100, %00000001, %00101001, %00000000, %10000000
   13 D1:CF51 04 A1 40 8A 
              A0 00 00 00 	.db %00000100, %10100001, %01000000, %10001010, %10100000, %00000000, %00000000, %00000000
   14 D1:CF59 -  -  -  -  
   15 D1:CF59 -  -  -  -  
   16 D1:CF59 -  -  -  -  GroundDirtMound:
   17 D1:CF59 20 -  -  -  	.db %00100000
   18 D1:CF5A 10 0C -  -  	.db 16, 12
   19 D1:CF5C 0F F0 3F FC 
              FF FF FF FF 	.db %00001111, %11110000, %00111111, %11111100, %11111111, %11111111, %11111111, %11111111
   20 D1:CF64 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   21 D1:CF6C FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   22 D1:CF74 -  -  -  -  
   23 D1:CF74 01 50 -  -  	.db %00000001, %01010000
   24 D1:CF76 -  -  -  -  
   25 D1:CF76 00 00 05 55 
              50 05 56 59 	.db %00000000, %00000000, %00000101, %01010101, %01010000, %00000101, %01010110, %01011001
   26 D1:CF7E 50 55 96 5A 
              55 55 9A 56 	.db %01010000, %01010101, %10010110, %01011010, %01010101, %01010101, %10011010, %01010110
   27 D1:CF86 56 A5 54 00 
              01 59 55 65 	.db %01010110, %10100101, %01010100, %00000000, %00000001, %01011001, %01010101, %01100101
   28 D1:CF8E 50 00 15 69 
              55 15 59 59 	.db %01010000, %00000000, %00010101, %01101001, %01010101, %00010101, %01011001, %01011001
   29 D1:CF96 65 56 50 05 
              66 55 41 41 	.db %01100101, %01010110, %01010000, %00000101, %01100110, %01010101, %01000001, %01000001
   30 D1:CF9E A6 65 95 55 
              95 -  -  -  	.db %10100110, %01100101, %10010101, %01010101, %10010101
   31 D1:CFA3 -  -  -  -  
   32 D1:CFA3 -  -  -  -  
   33 D1:CFA3 -  -  -  -  GroundGrassL4:
   34 D1:CFA3 08 -  -  -  	.db %00001000
   35 D1:CFA4 0E 10 -  -  	.db 14, 16
   36 D1:CFA6 0F C0 3F C0 
              FF 03 FC 3F 	.db %00001111, %11000000, %00111111, %11000000, %11111111, %00000011, %11111100, %00111111
   37 D1:CFAE F0 FF C3 FF 
              0F FC 3F F0 	.db %11110000, %11111111, %11000011, %11111111, %00001111, %11111100, %00111111, %11110000
   38 D1:CFB6 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   39 D1:CFBE FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
   40 D1:CFC2 -  -  -  -  
   41 D1:CFC2 50 -  -  -  	.db %01010000
   42 D1:CFC3 -  -  -  -  
   43 D1:CFC3 -  -  -  -  
   44 D1:CFC3 -  -  -  -  
   45 D1:CFC3 -  -  -  -  GroundGrassL2:
   46 D1:CFC3 08 -  -  -  	.db %00001000
   47 D1:CFC4 0A 10 -  -  	.db 10, 16
   48 D1:CFC6 03 00 C0 30 
              0C 03 03 C0 	.db %00000011, %00000000, %11000000, %00110000, %00001100, %00000011, %00000011, %11000000
   49 D1:CFCE FC 3F 0F C3 
              C3 F0 FC 3F 	.db %11111100, %00111111, %00001111, %11000011, %11000011, %11110000, %11111100, %00111111
   50 D1:CFD6 0F CF F3 FC 	.db %00001111, %11001111, %11110011, %11111100
   51 D1:CFDA -  -  -  -  
   52 D1:CFDA 50 -  -  -  	.db %01010000
   53 D1:CFDB -  -  -  -  
   54 D1:CFDB -  -  -  -  
   55 D1:CFDB -  -  -  -  
   56 D1:CFDB -  -  -  -  GroundGrassL5:
   57 D1:CFDB 08 -  -  -  	.db %00001000
   58 D1:CFDC 10 10 -  -  	.db 16, 16
   59 D1:CFDE 00 3F 00 3F 
              00 FF 00 FF 	.db %00000000, %00111111, %00000000, %00111111, %00000000, %11111111, %00000000, %11111111
   60 D1:CFE6 03 FF 03 FF 
              0F FC 0F FC 	.db %00000011, %11111111, %00000011, %11111111, %00001111, %11111100, %00001111, %11111100
   61 D1:CFEE 3F FC 3F FC 
              3F FC 3F F0 	.db %00111111, %11111100, %00111111, %11111100, %00111111, %11111100, %00111111, %11110000
   62 D1:CFF6 FF F0 FF F0 
              FF F0 FF F0 	.db %11111111, %11110000, %11111111, %11110000, %11111111, %11110000, %11111111, %11110000
   63 D1:CFFE -  -  -  -  
   64 D1:CFFE 50 -  -  -  	.db %01010000
   65 D1:CFFF -  -  -  -  
   66 D1:CFFF -  -  -  -  
   67 D1:CFFF -  -  -  -  
   68 D1:CFFF -  -  -  -  GroundGrassL3:
   69 D1:CFFF 08 -  -  -  	.db %00001000
   70 D1:D000 0E 0E -  -  	.db 14, 14
   71 D1:D002 C0 03 00 0C 
              00 3C 00 F0 	.db %11000000, %00000011, %00000000, %00001100, %00000000, %00111100, %00000000, %11110000
   72 D1:D00A 03 F0 03 C0 
              0F C0 3F 0C 	.db %00000011, %11110000, %00000011, %11000000, %00001111, %11000000, %00111111, %00001100
   73 D1:D012 3C 30 FC C3 
              F3 03 FC 0F 	.db %00111100, %00110000, %11111100, %11000011, %11110011, %00000011, %11111100, %00001111
   74 D1:D01A F0 -  -  -  	.db %11110000
   75 D1:D01B -  -  -  -  
   76 D1:D01B 50 -  -  -  	.db %01010000
   77 D1:D01C -  -  -  -  
   78 D1:D01C -  -  -  -  
   79 D1:D01C -  -  -  -  
   80 D1:D01C -  -  -  -  GroundGrassL1:
   81 D1:D01C 08 -  -  -  	.db %00001000
   82 D1:D01D 0C 10 -  -  	.db 12, 16
   83 D1:D01F 00 C0 0C C3 
              FC 3F F3 FF 	.db %00000000, %11000000, %00001100, %11000011, %11111100, %00111111, %11110011, %11111111
   84 D1:D027 FF FF FF FF 
              3F F3 FF 3F 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11110011, %11111111, %00111111
   85 D1:D02F C3 FC 0F 00 
              F0 0F 00 F0 	.db %11000011, %11111100, %00001111, %00000000, %11110000, %00001111, %00000000, %11110000
   86 D1:D037 -  -  -  -  
   87 D1:D037 50 -  -  -  	.db %01010000
   88 D1:D038 -  -  -  -  
   89 D1:D038 -  -  -  -  
   90 D1:D038 -  -  -  -  
   91 D1:D038 -  -  -  -  Branches_10:
   92 D1:D038 20 -  -  -  	.db %00100000
   93 D1:D039 12 0E -  -  	.db 18, 14
   94 D1:D03B 00 0F C0 0F 
              F0 0F FC 03 	.db %00000000, %00001111, %11000000, %00001111, %11110000, %00001111, %11111100, %00000011
   95 D1:D043 FF 03 FF C3 
              FF F3 FF FF 	.db %11111111, %00000011, %11111111, %11000011, %11111111, %11110011, %11111111, %11111111
   96 D1:D04B FF FC FF FC 
              3F FC 0F FC 	.db %11111111, %11111100, %11111111, %11111100, %00111111, %11111100, %00001111, %11111100
   97 D1:D053 03 FC 00 FF 
              00 33 00 00 	.db %00000011, %11111100, %00000000, %11111111, %00000000, %00110011, %00000000, %00000000
   98 D1:D05B -  -  -  -  
   99 D1:D05B 01 23 -  -  	.db %00000001, %00100011
  100 D1:D05D -  -  -  -  
  101 D1:D05D 04 60 46 F0 
              15 BE 14 2D 	.db %00000100, %01100000, %01000110, %11110000, %00010101, %10111110, %00010100, %00101101
  102 D1:D065 50 15 E5 00 
              55 39 55 04 	.db %01010000, %00010101, %11100101, %00000000, %01010101, %00111001, %01010101, %00000100
  103 D1:D06D 4A A9 10 01 
              5A D8 40 55 	.db %01001010, %10101001, %00010000, %00000001, %01011010, %11011000, %01000000, %01010101
  104 D1:D075 2F 85 01 4E 
              25 0B E8 50 	.db %00101111, %10000101, %00000001, %01001110, %00100101, %00001011, %11101000, %01010000
  105 D1:D07D A9 10 50 40 
              00 -  -  -  	.db %10101001, %00010000, %01010000, %01000000, %00000000
  106 D1:D082 -  -  -  -  
  107 D1:D082 -  -  -  -  
  108 D1:D082 -  -  -  -  Branches_9:
  109 D1:D082 20 -  -  -  	.db %00100000
  110 D1:D083 12 0E -  -  	.db 18, 14
  111 D1:D085 00 30 C0 3F 
              F0 0F FC 0F 	.db %00000000, %00110000, %11000000, %00111111, %11110000, %00001111, %11111100, %00001111
  112 D1:D08D FF 0F FF FF 
              FF FF FF FF 	.db %11111111, %00001111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  113 D1:D095 FF FF FF FF 
              FF FF CF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11001111, %11111111
  114 D1:D09D 03 FF 00 FF 
              00 0C 00 00 	.db %00000011, %11111111, %00000000, %11111111, %00000000, %00001100, %00000000, %00000000
  115 D1:D0A5 -  -  -  -  
  116 D1:D0A5 01 23 -  -  	.db %00000001, %00100011
  117 D1:D0A7 -  -  -  -  
  118 D1:D0A7 00 00 00 51 
              51 40 06 50 	.db %00000000, %00000000, %00000000, %01010001, %01010001, %01000000, %00000110, %01010000
  119 D1:D0AF 55 04 58 AA 
              A0 01 51 FB 	.db %01010101, %00000100, %01011000, %10101010, %10100000, %00000001, %01010001, %11111011
  120 D1:D0B7 BF 05 45 B9 
              65 05 05 BA 	.db %10111111, %00000101, %01000101, %10111001, %01100101, %00000101, %00000101, %10111010
  121 D1:D0BF 50 11 BF BE 
              50 55 06 A9 	.db %01010000, %00010001, %10111111, %10111110, %01010000, %01010101, %00000110, %10101001
  122 D1:D0C7 44 40 00 14 
              15 05 15 40 	.db %01000100, %01000000, %00000000, %00010100, %00010101, %00000101, %00010101, %01000000
  123 D1:D0CF 04 00 00 -  	.db %00000100, %00000000, %00000000
  124 D1:D0D2 -  -  -  -  
  125 D1:D0D2 -  -  -  -  
  126 D1:D0D2 -  -  -  -  Branches_16:
  127 D1:D0D2 20 -  -  -  	.db %00100000
  128 D1:D0D3 0D 0D -  -  	.db 13, 13
  129 D1:D0D5 07 F8 3F 83 
              FC 1F C0 FC 	.db %00000111, %11111000, %00111111, %10000011, %11111100, %00011111, %11000000, %11111100
  130 D1:D0DD 0F C0 7C 07 
              C0 3C 03 C0 	.db %00001111, %11000000, %01111100, %00000111, %11000000, %00111100, %00000011, %11000000
  131 D1:D0E5 1E 01 E0 0C 
              00 00 -  -  	.db %00011110, %00000001, %11100000, %00001100, %00000000, %00000000
  132 D1:D0EB -  -  -  -  
  133 D1:D0EB 01 23 -  -  	.db %00000001, %00100011
  134 D1:D0ED -  -  -  -  
  135 D1:D0ED 16 A4 12 D0 
              43 50 6C 00 	.db %00010110, %10100100, %00010010, %11010000, %01000011, %01010000, %01101100, %00000000
  136 D1:D0F5 94 0A 01 40 
              64 24 18 14 	.db %10010100, %00001010, %00000001, %01000000, %01100100, %00100100, %00011000, %00010100
  137 D1:D0FD 10 00 -  -  	.db %00010000, %00000000
  138 D1:D0FF -  -  -  -  
  139 D1:D0FF -  -  -  -  
  140 D1:D0FF -  -  -  -  Branches_13:
  141 D1:D0FF 20 -  -  -  	.db %00100000
  142 D1:D100 0E 06 -  -  	.db 14, 6
  143 D1:D102 00 0C 33 FF 
              FF FF FF 3F 	.db %00000000, %00001100, %00110011, %11111111, %11111111, %11111111, %11111111, %00111111
  144 D1:D10A FC 03 F0 -  	.db %11111100, %00000011, %11110000
  145 D1:D10D -  -  -  -  
  146 D1:D10D 01 20 -  -  	.db %00000001, %00100000
  147 D1:D10F -  -  -  -  
  148 D1:D10F 00 00 10 00 
              01 59 08 45 	.db %00000000, %00000000, %00010000, %00000000, %00000001, %01011001, %00001000, %01000101
  149 D1:D117 AA 50 00 15 
              60 00 -  -  	.db %10101010, %01010000, %00000000, %00010101, %01100000, %00000000
  150 D1:D11D -  -  -  -  
  151 D1:D11D -  -  -  -  
  152 D1:D11D -  -  -  -  Leaves_3:
  153 D1:D11D 10 -  -  -  	.db %00010000
  154 D1:D11E 0B 0C -  -  	.db 11, 12
  155 D1:D120 78 0F C1 FC 
              1F 81 F8 1F 	.db %01111000, %00001111, %11000001, %11111100, %00011111, %10000001, %11111000, %00011111
  156 D1:D128 80 F1 DE 7F 
              8F F3 F8 7C 	.db %10000000, %11110001, %11011110, %01111111, %10001111, %11110011, %11111000, %01111100
  157 D1:D130 00 -  -  -  	.db %00000000
  158 D1:D131 -  -  -  -  
  159 D1:D131 45 -  -  -  	.db %01000101
  160 D1:D132 -  -  -  -  
  161 D1:D132 02 08 18 20 
              8C 00 08 60 	.db %00000010, %00001000, %00011000, %00100000, %10001100, %00000000, %00001000, %01100000
  162 D1:D13A 40 00 -  -  	.db %01000000, %00000000
  163 D1:D13C -  -  -  -  
  164 D1:D13C -  -  -  -  
  165 D1:D13C -  -  -  -  Leaves_7:
  166 D1:D13C 10 -  -  -  	.db %00010000
  167 D1:D13D 10 0E -  -  	.db 16, 14
  168 D1:D13F 03 C0 0F F0 
              3F FC 3F FC 	.db %00000011, %11000000, %00001111, %11110000, %00111111, %11111100, %00111111, %11111100
  169 D1:D147 FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  170 D1:D14F FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  171 D1:D157 FF FC 30 30 	.db %11111111, %11111100, %00110000, %00110000
  172 D1:D15B -  -  -  -  
  173 D1:D15B 45 -  -  -  	.db %01000101
  174 D1:D15C -  -  -  -  
  175 D1:D15C 08 03 02 19 
              C0 1C 20 00 	.db %00001000, %00000011, %00000010, %00011001, %11000000, %00011100, %00100000, %00000000
  176 D1:D164 3C 07 07 9C 
              00 60 44 00 	.db %00111100, %00000111, %00000111, %10011100, %00000000, %01100000, %01000100, %00000000
  177 D1:D16C FC 03 80 F0 
              00 00 00 -  	.db %11111100, %00000011, %10000000, %11110000, %00000000, %00000000, %00000000
  178 D1:D173 -  -  -  -  
  179 D1:D173 -  -  -  -  
  180 D1:D173 -  -  -  -  Branches_6:
  181 D1:D173 20 -  -  -  	.db %00100000
  182 D1:D174 12 0B -  -  	.db 18, 11
  183 D1:D176 37 3F 3F FF 
              FF FF FF FF 	.db %00110111, %00111111, %00111111, %11111111, %11111111, %11111111, %11111111, %11111111
  184 D1:D17E FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  185 D1:D186 FF FF FF FF 
              FC FF F0 00 	.db %11111111, %11111111, %11111111, %11111111, %11111100, %11111111, %11110000, %00000000
  186 D1:D18E 0C -  -  -  	.db %00001100
  187 D1:D18F -  -  -  -  
  188 D1:D18F 01 23 -  -  	.db %00000001, %00100011
  189 D1:D191 -  -  -  -  
  190 D1:D191 00 00 00 14 
              00 15 40 10 	.db %00000000, %00000000, %00000000, %00010100, %00000000, %00010101, %01000000, %00010000
  191 D1:D199 05 44 01 55 
              94 41 55 15 	.db %00000101, %01000100, %00000001, %01010101, %10010100, %01000001, %01010101, %00010101
  192 D1:D1A1 2D CA 86 99 
              AA E6 BF FF 	.db %00101101, %11001010, %10000110, %10011001, %10101010, %11100110, %10111111, %11111111
  193 D1:D1A9 FF C8 59 15 
              A6 A8 16 15 	.db %11111111, %11001000, %01011001, %00010101, %10100110, %10101000, %00010110, %00010101
  194 D1:D1B1 01 54 15 41 
              55 00 14 00 	.db %00000001, %01010100, %00010101, %01000001, %01010101, %00000000, %00010100, %00000000
  195 D1:D1B9 00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000
  196 D1:D1BD -  -  -  -  
  197 D1:D1BD -  -  -  -  
  198 D1:D1BD -  -  -  -  Branches_7:
  199 D1:D1BD 20 -  -  -  	.db %00100000
  200 D1:D1BE 12 0A -  -  	.db 18, 10
  201 D1:D1C0 FF 3C FF FF 
              FF FF FF FF 	.db %11111111, %00111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  202 D1:D1C8 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  203 D1:D1D0 FF FF FF F3 
              C3 C0 F0 -  	.db %11111111, %11111111, %11111111, %11110011, %11000011, %11000000, %11110000
  204 D1:D1D7 -  -  -  -  
  205 D1:D1D7 01 23 -  -  	.db %00000001, %00100011
  206 D1:D1D9 -  -  -  -  
  207 D1:D1D9 00 00 00 00 
              55 40 01 00 	.db %00000000, %00000000, %00000000, %00000000, %01010101, %01000000, %00000001, %00000000
  208 D1:D1E1 90 01 55 45 
              51 15 55 05 	.db %10010000, %00000001, %01010101, %01000101, %01010001, %00010101, %01010101, %00000101
  209 D1:D1E9 00 AB FA 9D 
              FA AF AA FB 	.db %00000000, %10101011, %11111010, %10011101, %11111010, %10101111, %10101010, %11111011
  210 D1:D1F1 AA BF 05 51 
              55 51 55 44 	.db %10101010, %10111111, %00000101, %01010001, %01010101, %01010001, %01010101, %01000100
  211 D1:D1F9 15 10 44 00 
              00 00 05 00 	.db %00010101, %00010000, %01000100, %00000000, %00000000, %00000000, %00000101, %00000000
  212 D1:D201 00 -  -  -  	.db %00000000
  213 D1:D202 -  -  -  -  
  214 D1:D202 -  -  -  -  
  215 D1:D202 -  -  -  -  Branches_15:
  216 D1:D202 20 -  -  -  	.db %00100000
  217 D1:D203 09 0E -  -  	.db 9, 14
  218 D1:D205 80 60 38 1E 
              07 C3 F1 FE 	.db %10000000, %01100000, %00111000, %00011110, %00000111, %11000011, %11110001, %11111110
  219 D1:D20D 7F 1F 87 C1 
              E0 F0 18 0C 	.db %01111111, %00011111, %10000111, %11000001, %11100000, %11110000, %00011000, %00001100
  220 D1:D215 -  -  -  -  
  221 D1:D215 01 23 -  -  	.db %00000001, %00100011
  222 D1:D217 -  -  -  -  
  223 D1:D217 00 01 01 00 
              64 00 84 01 	.db %00000000, %00000001, %00000001, %00000000, %01100100, %00000000, %10000100, %00000001
  224 D1:D21F A1 06 90 6C 
              68 10 40 -  	.db %10100001, %00000110, %10010000, %01101100, %01101000, %00010000, %01000000
  225 D1:D226 -  -  -  -  
  226 D1:D226 -  -  -  -  
  227 D1:D226 -  -  -  -  Branches_8:
  228 D1:D226 20 -  -  -  	.db %00100000
  229 D1:D227 0A 0E -  -  	.db 10, 14
  230 D1:D229 03 C3 F3 FC 
              FF 3F FF FF 	.db %00000011, %11000011, %11110011, %11111100, %11111111, %00111111, %11111111, %11111111
  231 D1:D231 FF FF FF 3F 
              CF F3 F0 F0 	.db %11111111, %11111111, %11111111, %00111111, %11001111, %11110011, %11110000, %11110000
  232 D1:D239 3C 00 -  -  	.db %00111100, %00000000
  233 D1:D23B -  -  -  -  
  234 D1:D23B 01 23 -  -  	.db %00000001, %00100011
  235 D1:D23D -  -  -  -  
  236 D1:D23D 06 00 60 12 
              90 5B 51 1A 	.db %00000110, %00000000, %01100000, %00010010, %10010000, %01011011, %01010001, %00011010
  237 D1:D245 50 51 94 11 
              F9 45 6E 50 	.db %01010000, %01010001, %10010100, %00010001, %11111001, %01000101, %01101110, %01010000
  238 D1:D24D 4B 84 5E 54 
              B8 50 A1 01 	.db %01001011, %10000100, %01011110, %01010100, %10111000, %01010000, %10100001, %00000001
  239 D1:D255 44 40 -  -  	.db %01000100, %01000000
  240 D1:D257 -  -  -  -  
  241 D1:D257 -  -  -  -  
  242 D1:D257 -  -  -  -  Branches_12:
  243 D1:D257 20 -  -  -  	.db %00100000
  244 D1:D258 12 0A -  -  	.db 18, 10
  245 D1:D25A 00 00 C0 3F 
              F0 FF FF FF 	.db %00000000, %00000000, %11000000, %00111111, %11110000, %11111111, %11111111, %11111111
  246 D1:D262 FF FF FF FF 
              FF FF FF FC 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111100
  247 D1:D26A 0F FF 00 0F 
              C0 00 F0 -  	.db %00001111, %11111111, %00000000, %00001111, %11000000, %00000000, %11110000
  248 D1:D271 -  -  -  -  
  249 D1:D271 01 23 -  -  	.db %00000001, %00100011
  250 D1:D273 -  -  -  -  
  251 D1:D273 00 00 00 00 
              05 54 50 01 	.db %00000000, %00000000, %00000000, %00000000, %00000101, %01010100, %01010000, %00000001
  252 D1:D27B 45 04 16 3A 
              5F 2A F8 F2 	.db %01000101, %00000100, %00010110, %00111010, %01011111, %00101010, %11111000, %11110010
  253 D1:D283 12 9A C5 6A 
              00 00 15 06 	.db %00010010, %10011010, %11000101, %01101010, %00000000, %00000000, %00010101, %00000110
  254 D1:D28B 90 00 14 10 
              14 00 -  -  	.db %10010000, %00000000, %00010100, %00010000, %00010100, %00000000
  255 D1:D291 -  -  -  -  
  256 D1:D291 -  -  -  -  
  257 D1:D291 -  -  -  -  Leaves_2:
  258 D1:D291 10 -  -  -  	.db %00010000
  259 D1:D292 0C 09 -  -  	.db 12, 9
  260 D1:D294 01 C0 1C 0F 
              C0 F7 6F 7F 	.db %00000001, %11000000, %00011100, %00001111, %11000000, %11110111, %01101111, %01111111
  261 D1:D29C C2 E7 0E 70 
              06 00 -  -  	.db %11000010, %11100111, %00001110, %01110000, %00000110, %00000000
  262 D1:D2A2 -  -  -  -  
  263 D1:D2A2 45 -  -  -  	.db %01000101
  264 D1:D2A3 -  -  -  -  
  265 D1:D2A3 0D 06 00 22 
              8F 0C 00 -  	.db %00001101, %00000110, %00000000, %00100010, %10001111, %00001100, %00000000
  266 D1:D2AA -  -  -  -  
  267 D1:D2AA -  -  -  -  
  268 D1:D2AA -  -  -  -  Leaves_4:
  269 D1:D2AA 10 -  -  -  	.db %00010000
  270 D1:D2AB 0E 0B -  -  	.db 14, 11
  271 D1:D2AD 01 80 1F 83 
              7F 1F FC FF 	.db %00000001, %10000000, %00011111, %10000011, %01111111, %00011111, %11111100, %11111111
  272 D1:D2B5 F3 F7 FF 9F 
              FE 7F F1 FF 	.db %11110011, %11110111, %11111111, %10011111, %11111110, %01111111, %11110001, %11111111
  273 D1:D2BD 83 F0 03 C0 	.db %10000011, %11110000, %00000011, %11000000
  274 D1:D2C1 -  -  -  -  
  275 D1:D2C1 54 -  -  -  	.db %01010100
  276 D1:D2C2 -  -  -  -  
  277 D1:D2C2 33 EF F3 7F 
              77 FF 7E FB 	.db %00110011, %11101111, %11110011, %01111111, %01110111, %11111111, %01111110, %11111011
  278 D1:D2CA DF BD FD FE 
              F8 -  -  -  	.db %11011111, %10111101, %11111101, %11111110, %11111000
  279 D1:D2CF -  -  -  -  
  280 D1:D2CF -  -  -  -  
  281 D1:D2CF -  -  -  -  Branches_11:
  282 D1:D2CF 20 -  -  -  	.db %00100000
  283 D1:D2D0 12 0A -  -  	.db 18, 10
  284 D1:D2D2 00 03 C3 CF 
              FF FF FF FF 	.db %00000000, %00000011, %11000011, %11001111, %11111111, %11111111, %11111111, %11111111
  285 D1:D2DA FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  286 D1:D2E2 FF FF 03 F3 
              C0 00 30 -  	.db %11111111, %11111111, %00000011, %11110011, %11000000, %00000000, %00110000
  287 D1:D2E9 -  -  -  -  
  288 D1:D2E9 01 32 -  -  	.db %00000001, %00110010
  289 D1:D2EB -  -  -  -  
  290 D1:D2EB 00 00 00 15 
              00 00 05 44 	.db %00000000, %00000000, %00000000, %00010101, %00000000, %00000000, %00000101, %01000100
  291 D1:D2F3 15 65 55 04 
              10 FB FA 3F 	.db %00010101, %01100101, %01010101, %00000100, %00010000, %11111011, %11111010, %00111111
  292 D1:D2FB FF B7 D3 FB 
              EA BE 15 54 	.db %11111111, %10110111, %11010011, %11111011, %11101010, %10111110, %00010101, %01010100
  293 D1:D303 14 15 E0 00 
              14 10 15 00 	.db %00010100, %00010101, %11100000, %00000000, %00010100, %00010000, %00010101, %00000000
  294 D1:D30B 00 10 -  -  	.db %00000000, %00010000
  295 D1:D30D -  -  -  -  
  296 D1:D30D -  -  -  -  
  297 D1:D30D -  -  -  -  Branches_14:
  298 D1:D30D 20 -  -  -  	.db %00100000
  299 D1:D30E 06 0E -  -  	.db 6, 14
  300 D1:D310 30 C3 0C 39 
              E7 9E FF FF 	.db %00110000, %11000011, %00001100, %00111001, %11100111, %10011110, %11111111, %11111111
  301 D1:D318 FF FF F0 -  	.db %11111111, %11111111, %11110000
  302 D1:D31B -  -  -  -  
  303 D1:D31B 01 23 -  -  	.db %00000001, %00100011
  304 D1:D31D -  -  -  -  
  305 D1:D31D 00 00 10 20 
              20 20 1D 06 	.db %00000000, %00000000, %00010000, %00100000, %00100000, %00100000, %00011101, %00000110
  306 D1:D325 90 65 06 10 
              59 07 90 -  	.db %10010000, %01100101, %00000110, %00010000, %01011001, %00000111, %10010000
  307 D1:D32C -  -  -  -  
  308 D1:D32C -  -  -  -  
  309 D1:D32C -  -  -  -  Leaves_6:
  310 D1:D32C 10 -  -  -  	.db %00010000
  311 D1:D32D 0D 0D -  -  	.db 13, 13
  312 D1:D32F 60 1F C1 FF 
              0E FE F3 FF 	.db %01100000, %00011111, %11000001, %11111111, %00001110, %11111110, %11110011, %11111111
  313 D1:D337 87 F8 1F 80 
              3C 01 E0 07 	.db %10000111, %11111000, %00011111, %10000000, %00111100, %00000001, %11100000, %00000111
  314 D1:D33F 80 3C 00 E0 
              03 00 -  -  	.db %10000000, %00111100, %00000000, %11100000, %00000011, %00000000
  315 D1:D345 -  -  -  -  
  316 D1:D345 54 -  -  -  	.db %01010100
  317 D1:D346 -  -  -  -  
  318 D1:D346 00 24 36 04 
              01 98 00 00 	.db %00000000, %00100100, %00110110, %00000100, %00000001, %10011000, %00000000, %00000000
  319 D1:D34E 46 60 -  -  	.db %01000110, %01100000
  320 D1:D350 -  -  -  -  
  321 D1:D350 -  -  -  -  
  322 D1:D350 -  -  -  -  Branches_4:
  323 D1:D350 20 -  -  -  	.db %00100000
  324 D1:D351 12 0E -  -  	.db 18, 14
  325 D1:D353 00 03 CF FF 
              FF FF FF FF 	.db %00000000, %00000011, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111
  326 D1:D35B FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  327 D1:D363 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  328 D1:D36B FF FF FF 3F 
              FF C0 FF 30 	.db %11111111, %11111111, %11111111, %00111111, %11111111, %11000000, %11111111, %00110000
  329 D1:D373 -  -  -  -  
  330 D1:D373 01 23 -  -  	.db %00000001, %00100011
  331 D1:D375 -  -  -  -  
  332 D1:D375 00 00 00 00 
              00 00 50 45 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %01010000, %01000101
  333 D1:D37D 01 55 50 00 
              25 00 14 16 	.db %00000001, %01010101, %01010000, %00000000, %00100101, %00000000, %00010100, %00010110
  334 D1:D385 11 45 5A 19 
              2A AA 58 3F 	.db %00010001, %01000101, %01011010, %00011001, %00101010, %10101010, %01011000, %00111111
  335 D1:D38D AA AA AF FE 
              BD FF DF E2 	.db %10101010, %10101010, %10101111, %11111110, %10111101, %11111111, %11011111, %11100010
  336 D1:D395 55 64 02 AA 
              60 00 05 50 	.db %01010101, %01100100, %00000010, %10101010, %01100000, %00000000, %00000101, %01010000
  337 D1:D39D 54 15 54 00 
              00 00 00 05 	.db %01010100, %00010101, %01010100, %00000000, %00000000, %00000000, %00000000, %00000101
  338 D1:D3A5 10 55 00 00 
              00 00 00 00 	.db %00010000, %01010101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  339 D1:D3AD 00 -  -  -  	.db %00000000
  340 D1:D3AE -  -  -  -  
  341 D1:D3AE -  -  -  -  
  342 D1:D3AE -  -  -  -  Vines_8:
  343 D1:D3AE 10 -  -  -  	.db %00010000
  344 D1:D3AF 0A 18 -  -  	.db 10, 24
  345 D1:D3B1 07 01 C1 F0 
              3C 07 01 C1 	.db %00000111, %00000001, %11000001, %11110000, %00111100, %00000111, %00000001, %11000001
  346 D1:D3B9 FC 3B 0E 03 
              80 E0 38 0E 	.db %11111100, %00111011, %00001110, %00000011, %10000000, %11100000, %00111000, %00001110
  347 D1:D3C1 07 A1 FB 78 
              FC 07 03 80 	.db %00000111, %10100001, %11111011, %01111000, %11111100, %00000111, %00000011, %10000000
  348 D1:D3C9 E0 3E 0D 87 
              01 C0 -  -  	.db %11100000, %00111110, %00001101, %10000111, %00000001, %11000000
  349 D1:D3CF -  -  -  -  
  350 D1:D3CF 45 -  -  -  	.db %01000101
  351 D1:D3D0 -  -  -  -  
  352 D1:D3D0 24 66 D8 F7 
              B6 DB 3B E3 	.db %00100100, %01100110, %11011000, %11110111, %10110110, %11011011, %00111011, %11100011
  353 D1:D3D8 86 C9 7B B6 	.db %10000110, %11001001, %01111011, %10110110
  354 D1:D3DC -  -  -  -  
  355 D1:D3DC -  -  -  -  
  356 D1:D3DC -  -  -  -  Vines_2:
  357 D1:D3DC 10 -  -  -  	.db %00010000
  358 D1:D3DD 16 13 -  -  	.db 22, 19
  359 D1:D3DF 00 00 04 00 
              00 30 00 39 	.db %00000000, %00000000, %00000100, %00000000, %00000000, %00110000, %00000000, %00111001
  360 D1:D3E7 C0 00 6F 00 
              10 78 00 63 	.db %11000000, %00000000, %01101111, %00000000, %00010000, %01111000, %00000000, %01100011
  361 D1:D3EF C0 01 9F 00 
              07 F0 00 0F 	.db %11000000, %00000001, %10011111, %00000000, %00000111, %11110000, %00000000, %00001111
  362 D1:D3F7 C0 00 7D 80 
              63 E6 01 DF 	.db %11000000, %00000000, %01111101, %10000000, %01100011, %11100110, %00000001, %11011111
  363 D1:D3FF 80 01 F6 00 
              0F 80 00 F8 	.db %10000000, %00000001, %11110110, %00000000, %00001111, %10000000, %00000000, %11111000
  364 D1:D407 00 1F F8 00 
              3C E0 01 E0 	.db %00000000, %00011111, %11111000, %00000000, %00111100, %11100000, %00000001, %11100000
  365 D1:D40F 00 0E 00 00 
              00 -  -  -  	.db %00000000, %00001110, %00000000, %00000000, %00000000
  366 D1:D414 -  -  -  -  
  367 D1:D414 45 -  -  -  	.db %01000101
  368 D1:D415 -  -  -  -  
  369 D1:D415 21 86 30 C3 
              83 3C F8 7C 	.db %00100001, %10000110, %00110000, %11000011, %10000011, %00111100, %11111000, %01111100
  370 D1:D41D 1E 7C E7 0F 
              CF 9B -  -  	.db %00011110, %01111100, %11100111, %00001111, %11001111, %10011011
  371 D1:D423 -  -  -  -  
  372 D1:D423 -  -  -  -  
  373 D1:D423 -  -  -  -  Vines_3:
  374 D1:D423 10 -  -  -  	.db %00010000
  375 D1:D424 18 10 -  -  	.db 24, 16
  376 D1:D426 00 00 01 00 
              00 03 00 00 	.db %00000000, %00000000, %00000001, %00000000, %00000000, %00000011, %00000000, %00000000
  377 D1:D42E 37 00 00 3E 
              00 00 1C 00 	.db %00110111, %00000000, %00000000, %00111110, %00000000, %00000000, %00011100, %00000000
  378 D1:D436 10 78 00 30 
              F8 00 1F EC 	.db %00010000, %01111000, %00000000, %00110000, %11111000, %00000000, %00011111, %11101100
  379 D1:D43E 18 0F CC 18 
              3F 80 0B FE 	.db %00011000, %00001111, %11001100, %00011000, %00111111, %10000000, %00001011, %11111110
  380 D1:D446 00 FF F8 00 
              FF C0 00 01 	.db %00000000, %11111111, %11111000, %00000000, %11111111, %11000000, %00000000, %00000001
  381 D1:D44E 00 00 03 00 
              00 03 00 00 	.db %00000000, %00000000, %00000011, %00000000, %00000000, %00000011, %00000000, %00000000
  382 D1:D456 -  -  -  -  
  383 D1:D456 45 -  -  -  	.db %01000101
  384 D1:D457 -  -  -  -  
  385 D1:D457 03 1B 18 70 
              3C 1F 07 81 	.db %00000011, %00011011, %00011000, %01110000, %00111100, %00011111, %00000111, %10000001
  386 D1:D45F E0 7F FF FE 	.db %11100000, %01111111, %11111111, %11111110
  387 D1:D463 -  -  -  -  
  388 D1:D463 -  -  -  -  
  389 D1:D463 -  -  -  -  Vines_5:
  390 D1:D463 10 -  -  -  	.db %00010000
  391 D1:D464 14 17 -  -  	.db 20, 23
  392 D1:D466 00 00 30 00 
              1B 00 01 B0 	.db %00000000, %00000000, %00110000, %00000000, %00011011, %00000000, %00000001, %10110000
  393 D1:D46E 00 07 00 00 
              F0 00 0E 00 	.db %00000000, %00000111, %00000000, %00000000, %11110000, %00000000, %00001110, %00000000
  394 D1:D476 31 C0 01 B8 
              00 0F 80 01 	.db %00110001, %11000000, %00000001, %10111000, %00000000, %00001111, %10000000, %00000001
  395 D1:D47E F0 00 3E 00 
              47 E0 0F F8 	.db %11110000, %00000000, %00111110, %00000000, %01000111, %11100000, %00001111, %11111000
  396 D1:D486 00 5F 00 03 
              E8 00 3C C0 	.db %00000000, %01011111, %00000000, %00000011, %11101000, %00000000, %00111100, %11000000
  397 D1:D48E 0F 8C 00 F0 
              00 3D 00 07 	.db %00001111, %10001100, %00000000, %11110000, %00000000, %00111101, %00000000, %00000111
  398 D1:D496 D8 00 79 00 
              0F 00 00 E0 	.db %11011000, %00000000, %01111001, %00000000, %00001111, %00000000, %00000000, %11100000
  399 D1:D49E 00 00 -  -  	.db %00000000, %00000000
  400 D1:D4A0 -  -  -  -  
  401 D1:D4A0 45 -  -  -  	.db %01000101
  402 D1:D4A1 -  -  -  -  
  403 D1:D4A1 00 59 B0 84 
              67 38 F0 38 	.db %00000000, %01011001, %10110000, %10000100, %01100111, %00111000, %11110000, %00111000
  404 D1:D4A9 E7 BE 7D C6 
              7D E6 C0 -  	.db %11100111, %10111110, %01111101, %11000110, %01111101, %11100110, %11000000
  405 D1:D4B0 -  -  -  -  
  406 D1:D4B0 -  -  -  -  
  407 D1:D4B0 -  -  -  -  Vines_9:
  408 D1:D4B0 10 -  -  -  	.db %00010000
  409 D1:D4B1 18 0B -  -  	.db 24, 11
  410 D1:D4B3 00 18 60 00 
              38 27 0C 27 	.db %00000000, %00011000, %01100000, %00000000, %00111000, %00100111, %00001100, %00100111
  411 D1:D4BB FF 0C 3F FF 
              07 FF F8 1F 	.db %11111111, %00001100, %00111111, %11111111, %00000111, %11111111, %11111000, %00011111
  412 D1:D4C3 FE 08 7F F7 
              00 FE 43 00 	.db %11111110, %00001000, %01111111, %11110111, %00000000, %11111110, %01000011, %00000000
  413 D1:D4CB F0 C0 00 E0 
              C0 00 C0 00 	.db %11110000, %11000000, %00000000, %11100000, %11000000, %00000000, %11000000, %00000000
  414 D1:D4D3 00 -  -  -  	.db %00000000
  415 D1:D4D4 -  -  -  -  
  416 D1:D4D4 45 -  -  -  	.db %01000101
  417 D1:D4D5 -  -  -  -  
  418 D1:D4D5 00 00 03 81 
              FF 81 FF 8F 	.db %00000000, %00000000, %00000011, %10000001, %11111111, %10000001, %11111111, %10001111
  419 D1:D4DD FC 7F F3 FF 
              FF E0 -  -  	.db %11111100, %01111111, %11110011, %11111111, %11111111, %11100000
  420 D1:D4E3 -  -  -  -  
  421 D1:D4E3 -  -  -  -  
  422 D1:D4E3 -  -  -  -  Vines_4:
  423 D1:D4E3 10 -  -  -  	.db %00010000
  424 D1:D4E4 18 0D -  -  	.db 24, 13
  425 D1:D4E6 00 00 C7 00 
              00 DF 00 00 	.db %00000000, %00000000, %11000111, %00000000, %00000000, %11011111, %00000000, %00000000
  426 D1:D4EE 3F 00 00 FC 
              00 61 F8 20 	.db %00111111, %00000000, %00000000, %11111100, %00000000, %01100001, %11111000, %00100000
  427 D1:D4F6 6F E0 60 3F 
              80 41 FE 80 	.db %01101111, %11100000, %01100000, %00111111, %10000000, %01000001, %11111110, %10000000
  428 D1:D4FE CF F8 C0 FF 
              C0 40 7C C0 	.db %11001111, %11111000, %11000000, %11111111, %11000000, %01000000, %01111100, %11000000
  429 D1:D506 00 01 80 00 
              00 80 00 -  	.db %00000000, %00000001, %10000000, %00000000, %00000000, %10000000, %00000000
  430 D1:D50D -  -  -  -  
  431 D1:D50D 45 -  -  -  	.db %01000101
  432 D1:D50E -  -  -  -  
  433 D1:D50E 00 33 C7 0F 
              01 C1 E0 F8 	.db %00000000, %00110011, %11000111, %00001111, %00000001, %11000001, %11100000, %11111000
  434 D1:D516 1F F1 FF FE 	.db %00011111, %11110001, %11111111, %11111110
  435 D1:D51A -  -  -  -  
  436 D1:D51A -  -  -  -  
  437 D1:D51A -  -  -  -  Vines_1:
  438 D1:D51A 10 -  -  -  	.db %00010000
  439 D1:D51B 18 09 -  -  	.db 24, 9
  440 D1:D51D 00 06 30 18 
              0E 33 F8 0C 	.db %00000000, %00000110, %00110000, %00011000, %00001110, %00110011, %11111000, %00001100
  441 D1:D525 1F FC 07 FF 
              FF FF F0 1F 	.db %00011111, %11111100, %00000111, %11111111, %11111111, %11111111, %11110000, %00011111
  442 D1:D52D FE 80 30 00 
              E0 30 00 60 	.db %11111110, %10000000, %00110000, %00000000, %11100000, %00110000, %00000000, %01100000
  443 D1:D535 30 00 00 -  	.db %00110000, %00000000, %00000000
  444 D1:D538 -  -  -  -  
  445 D1:D538 45 -  -  -  	.db %01000101
  446 D1:D539 -  -  -  -  
  447 D1:D539 00 00 00 F0 
              03 FF 00 FF 	.db %00000000, %00000000, %00000000, %11110000, %00000011, %11111111, %00000000, %11111111
  448 D1:D541 FF FF FC -  	.db %11111111, %11111111, %11111100
  449 D1:D544 -  -  -  -  
  450 D1:D544 -  -  -  -  
  451 D1:D544 -  -  -  -  Branches_5:
  452 D1:D544 20 -  -  -  	.db %00100000
  453 D1:D545 12 0E -  -  	.db 18, 14
  454 D1:D547 00 C0 CF FF 
              FF FF FF FF 	.db %00000000, %11000000, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111
  455 D1:D54F FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  456 D1:D557 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  457 D1:D55F FF FF FF 3F 
              FF C3 C3 F0 	.db %11111111, %11111111, %11111111, %00111111, %11111111, %11000011, %11000011, %11110000
  458 D1:D567 -  -  -  -  
  459 D1:D567 01 23 -  -  	.db %00000001, %00100011
  460 D1:D569 -  -  -  -  
  461 D1:D569 00 00 00 00 
              01 00 05 05 	.db %00000000, %00000000, %00000000, %00000000, %00000001, %00000000, %00000101, %00000101
  462 D1:D571 41 41 45 40 
              00 01 15 45 	.db %01000001, %01000001, %01000101, %01000000, %00000000, %00000001, %00010101, %01000101
  463 D1:D579 55 45 65 A5 
              AA 66 AA FA 	.db %01010101, %01000101, %01100101, %10100101, %10101010, %01100110, %10101010, %11111010
  464 D1:D581 F9 FF BF FE 
              AA F6 BA 99 	.db %11111001, %11111111, %10111111, %11111110, %10101010, %11110110, %10111010, %10011001
  465 D1:D589 50 55 55 55 
              51 50 00 01 	.db %01010000, %01010101, %01010101, %01010101, %01010001, %01010000, %00000000, %00000001
  466 D1:D591 54 51 41 50 
              00 00 01 40 	.db %01010100, %01010001, %01000001, %01010000, %00000000, %00000000, %00000001, %01000000
  467 D1:D599 15 45 00 00 
              00 00 00 00 	.db %00010101, %01000101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  468 D1:D5A1 00 -  -  -  	.db %00000000
  469 D1:D5A2 -  -  -  -  
  470 D1:D5A2 -  -  -  -  
  471 D1:D5A2 -  -  -  -  Vines_6:
  472 D1:D5A2 10 -  -  -  	.db %00010000
  473 D1:D5A3 08 18 -  -  	.db 8, 24
  474 D1:D5A5 38 F8 F8 78 
              3E 3E 38 38 	.db %00111000, %11111000, %11111000, %01111000, %00111110, %00111110, %00111000, %00111000
  475 D1:D5AD 38 38 78 78 
              7C 3C 3C 3C 	.db %00111000, %00111000, %01111000, %01111000, %01111100, %00111100, %00111100, %00111100
  476 D1:D5B5 3E 1F 1C 1C 
              1F 1F 1C 1E 	.db %00111110, %00011111, %00011100, %00011100, %00011111, %00011111, %00011100, %00011110
  477 D1:D5BD -  -  -  -  
  478 D1:D5BD 54 -  -  -  	.db %01010100
  479 D1:D5BE -  -  -  -  
  480 D1:D5BE 56 D1 6F FB 
              25 5D C4 46 	.db %01010110, %11010001, %01101111, %11111011, %00100101, %01011101, %11000100, %01000110
  481 D1:D5C6 6F D2 5F F6 
              00 -  -  -  	.db %01101111, %11010010, %01011111, %11110110, %00000000
  482 D1:D5CB -  -  -  -  
  483 D1:D5CB -  -  -  -  
  484 D1:D5CB -  -  -  -  Branches_3:
  485 D1:D5CB 20 -  -  -  	.db %00100000
  486 D1:D5CC 12 0E -  -  	.db 18, 14
  487 D1:D5CE 0F CF FF FF 
              FF FF FF FF 	.db %00001111, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  488 D1:D5D6 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  489 D1:D5DE FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  490 D1:D5E6 FF FF FF FF 
              3F FF 00 F0 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %00000000, %11110000
  491 D1:D5EE -  -  -  -  
  492 D1:D5EE 01 23 -  -  	.db %00000001, %00100011
  493 D1:D5F0 -  -  -  -  
  494 D1:D5F0 00 00 00 00 
              50 00 15 55 	.db %00000000, %00000000, %00000000, %00000000, %01010000, %00000000, %00010101, %01010101
  495 D1:D5F8 50 15 00 00 
              00 00 00 65 	.db %01010000, %00010101, %00000000, %00000000, %00000000, %00000000, %00000000, %01100101
  496 D1:D600 05 98 A2 55 
              05 AA 32 AA 	.db %00000101, %10011000, %10100010, %01010101, %00000101, %10101010, %00110010, %10101010
  497 D1:D608 BD 4B FF FF 
              FF BF EA 95 	.db %10111101, %01001011, %11111111, %11111111, %11111111, %10111111, %11101010, %10010101
  498 D1:D610 5E AA E6 55 
              A9 55 6A 56 	.db %01011110, %10101010, %11100110, %01010101, %10101001, %01010101, %01101010, %01010110
  499 D1:D618 40 12 50 00 
              00 50 01 54 	.db %01000000, %00010010, %01010000, %00000000, %00000000, %01010000, %00000001, %01010100
  500 D1:D620 15 54 00 15 
              40 00 00 00 	.db %00010101, %01010100, %00000000, %00010101, %01000000, %00000000, %00000000, %00000000
  501 D1:D628 40 00 00 -  	.db %01000000, %00000000, %00000000
  502 D1:D62B -  -  -  -  
  503 D1:D62B -  -  -  -  
  504 D1:D62B -  -  -  -  Branches_2:
  505 D1:D62B 20 -  -  -  	.db %00100000
  506 D1:D62C 12 0E -  -  	.db 18, 14
  507 D1:D62E 0F C3 FF FF 
              FF FF FF FF 	.db %00001111, %11000011, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  508 D1:D636 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  509 D1:D63E FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  510 D1:D646 FF FF FF FF 
              FF F3 0F 30 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11110011, %00001111, %00110000
  511 D1:D64E -  -  -  -  
  512 D1:D64E 01 32 -  -  	.db %00000001, %00110010
  513 D1:D650 -  -  -  -  
  514 D1:D650 00 00 00 00 
              50 00 00 05 	.db %00000000, %00000000, %00000000, %00000000, %01010000, %00000000, %00000000, %00000101
  515 D1:D658 54 15 55 45 
              40 00 00 00 	.db %01010100, %00010101, %01010101, %01000101, %01000000, %00000000, %00000000, %00000000
  516 D1:D660 55 55 14 05 
              59 FF FD 55 	.db %01010101, %01010101, %00010100, %00000101, %01011001, %11111111, %11111101, %01010101
  517 D1:D668 47 EA AA AE 
              FF EF FF F6 	.db %01000111, %11101010, %10101010, %10101110, %11111111, %11101111, %11111111, %11110110
  518 D1:D670 AA AA 5D 07 
              F4 FF F5 55 	.db %10101010, %10101010, %01011101, %00000111, %11110100, %11111111, %11110101, %01010101
  519 D1:D678 05 55 75 15 
              15 55 00 00 	.db %00000101, %01010101, %01110101, %00010101, %00010101, %01010101, %00000000, %00000000
  520 D1:D680 01 00 05 50 
              00 40 05 50 	.db %00000001, %00000000, %00000101, %01010000, %00000000, %01000000, %00000101, %01010000
  521 D1:D688 00 00 00 -  	.db %00000000, %00000000, %00000000
  522 D1:D68B -  -  -  -  
  523 D1:D68B -  -  -  -  
  524 D1:D68B -  -  -  -  Tree_2:
  525 D1:D68B 10 -  -  -  	.db %00010000
  526 D1:D68C 1A 10 -  -  	.db 26, 16
  527 D1:D68E FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  528 D1:D696 FF FF FF FF 
              FF 3F FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  529 D1:D69E CF FF FF F3 
              FF FF FC FF 	.db %11001111, %11111111, %11111111, %11110011, %11111111, %11111111, %11111100, %11111111
  530 D1:D6A6 FF FF 3F FF 
              FF CF FF FF 	.db %11111111, %11111111, %00111111, %11111111, %11111111, %11001111, %11111111, %11111111
  531 D1:D6AE FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  532 D1:D6B6 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  533 D1:D6BE FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  534 D1:D6C2 -  -  -  -  
  535 D1:D6C2 01 -  -  -  	.db %00000001
  536 D1:D6C3 -  -  -  -  
  537 D1:D6C3 01 12 40 80 
              4C DD 30 33 	.db %00000001, %00010010, %01000000, %10000000, %01001100, %11011101, %00110000, %00110011
  538 D1:D6CB 27 CC 02 51 
              E4 02 59 D9 	.db %00100111, %11001100, %00000010, %01010001, %11100100, %00000010, %01011001, %11011001
  539 D1:D6D3 08 69 D9 01 
              69 9B 07 69 	.db %00001000, %01101001, %11011001, %00000001, %01101001, %10011011, %00000111, %01101001
  540 D1:D6DB 1E 03 70 3E 
              03 D2 3E 00 	.db %00011110, %00000011, %01110000, %00111110, %00000011, %11010010, %00111110, %00000000
  541 D1:D6E3 A5 5C 80 F9 
              75 60 1C 6D 	.db %10100101, %01011100, %10000000, %11111001, %01110101, %01100000, %00011100, %01101101
  542 D1:D6EB 18 01 1B 86 
              02 46 69 41 	.db %00011000, %00000001, %00011011, %10000110, %00000010, %01000110, %01101001, %01000001
  543 D1:D6F3 91 82 40 -  	.db %10010001, %10000010, %01000000
  544 D1:D6F6 -  -  -  -  
  545 D1:D6F6 -  -  -  -  
  546 D1:D6F6 -  -  -  -  Tree_4:
  547 D1:D6F6 24 -  -  -  	.db %00100100
  548 D1:D6F7 1A 10 -  -  	.db 26, 16
  549 D1:D6F9 01 20 -  -  	.db %00000001, %00100000
  550 D1:D6FB -  -  -  -  
  551 D1:D6FB 14 45 40 15 
              54 25 61 44 	.db %00010100, %01000101, %01000000, %00010101, %01010100, %00100101, %01100001, %01000100
  552 D1:D703 14 05 55 00 
              41 11 01 45 	.db %00010100, %00000101, %01010101, %00000000, %01000001, %00010001, %00000001, %01000101
  553 D1:D70B 50 54 24 21 
              10 00 95 05 	.db %01010000, %01010100, %00100100, %00100001, %00010000, %00000000, %10010101, %00000101
  554 D1:D713 41 41 11 00 
              09 10 94 15 	.db %01000001, %01000001, %00010001, %00000000, %00001001, %00010000, %10010100, %00010101
  555 D1:D71B 11 11 00 95 
              09 49 45 10 	.db %00010001, %00010001, %00000000, %10010101, %00001001, %01001001, %01000101, %00010000
  556 D1:D723 01 09 50 94 
              95 51 00 50 	.db %00000001, %00001001, %01010000, %10010100, %10010101, %01010001, %00000000, %01010000
  557 D1:D72B 95 09 49 45 
              40 45 09 40 	.db %10010101, %00001001, %01001001, %01000101, %01000000, %01000101, %00001001, %01000000
  558 D1:D733 90 95 54 01 
              50 A4 05 05 	.db %10010000, %10010101, %01010100, %00000001, %01010000, %10100100, %00000101, %00000101
  559 D1:D73B 54 44 45 0A 
              42 50 55 00 	.db %01010100, %01000100, %01000101, %00001010, %01000010, %01010000, %01010101, %00000000
  560 D1:D743 10 54 14 95 
              41 02 04 11 	.db %00010000, %01010100, %00010100, %10010101, %01000001, %00000010, %00000100, %00010001
  561 D1:D74B 52 49 51 00 
              20 51 11 10 	.db %01010010, %01001001, %01010001, %00000000, %00100000, %01010001, %00010001, %00010000
  562 D1:D753 91 50 A5 05 
              11 12 15 54 	.db %10010001, %01010000, %10100101, %00000101, %00010001, %00010010, %00010101, %01010100
  563 D1:D75B 09 54 04 51 
              01 54 40 25 	.db %00001001, %01010100, %00000100, %01010001, %00000001, %01010100, %01000000, %00100101
  564 D1:D763 -  -  -  -  
  565 D1:D763 -  -  -  -  
  566 D1:D763 -  -  -  -  Tree_7:
  567 D1:D763 24 -  -  -  	.db %00100100
  568 D1:D764 1A 10 -  -  	.db 26, 16
  569 D1:D766 10 23 -  -  	.db %00010000, %00100011
  570 D1:D768 -  -  -  -  
  571 D1:D768 10 05 08 28 
              85 28 81 62 	.db %00010000, %00000101, %00001000, %00101000, %10000101, %00101000, %10000001, %01100010
  572 D1:D770 5A 08 88 5C 
              BA 05 81 60 	.db %01011010, %00001000, %10001000, %01011100, %10111010, %00000101, %10000001, %01100000
  573 D1:D778 88 95 CA B1 
              58 06 A0 49 	.db %10001000, %10010101, %11001010, %10110001, %01011000, %00000110, %10100000, %01001001
  574 D1:D780 62 89 51 68 
              48 60 16 2A 	.db %01100010, %10001001, %01010001, %01101000, %01001000, %01100000, %00010110, %00101010
  575 D1:D788 54 15 80 87 
              85 EA 96 00 	.db %01010100, %00010101, %10000000, %10000111, %10000101, %11101010, %10010110, %00000000
  576 D1:D790 58 82 29 72 
              A1 C0 05 68 	.db %01011000, %10000010, %00101001, %01110010, %10100001, %11000000, %00000101, %01101000
  577 D1:D798 2A 9E 22 1E 
              18 56 22 A5 	.db %00101010, %10011110, %00100010, %00011110, %00011000, %01010110, %00100010, %10100101
  578 D1:D7A0 67 25 80 01 
              62 A9 55 72 	.db %01100111, %00100101, %10000000, %00000001, %01100010, %10101001, %01010101, %01110010
  579 D1:D7A8 5A 06 15 8A 
              56 95 97 81 	.db %01011010, %00000110, %00010101, %10001010, %01010110, %10010101, %10010111, %10000001
  580 D1:D7B0 00 51 25 A0 
              59 E5 00 15 	.db %00000000, %01010001, %00100101, %10100000, %01011001, %11100101, %00000000, %00010101
  581 D1:D7B8 D2 02 A1 58 
              50 41 60 89 	.db %11010010, %00000010, %10100001, %01011000, %01010000, %01000001, %01100000, %10001001
  582 D1:D7C0 28 97 96 10 
              16 08 A2 89 	.db %00101000, %10010111, %10010110, %00010000, %00010110, %00001000, %10100010, %10001001
  583 D1:D7C8 7B 81 81 62 
              08 22 94 20 	.db %01111011, %10000001, %10000001, %01100010, %00001000, %00100010, %10010100, %00100000
  584 D1:D7D0 -  -  -  -  
  585 D1:D7D0 -  -  -  -  
  586 D1:D7D0 -  -  -  -  Tree_9:
  587 D1:D7D0 24 -  -  -  	.db %00100100
  588 D1:D7D1 1A 10 -  -  	.db 26, 16
  589 D1:D7D3 20 31 -  -  	.db %00100000, %00110001
  590 D1:D7D5 -  -  -  -  
  591 D1:D7D5 14 95 0A A8 
              A8 35 B3 49 	.db %00010100, %10010101, %00001010, %10101000, %10101000, %00110101, %10110011, %01001001
  592 D1:D7DD D2 28 A8 8C 
              58 A0 56 EA 	.db %11010010, %00101000, %10101000, %10001100, %01011000, %10100000, %01010110, %11101010
  593 D1:D7E5 AA C8 CD 82 
              17 B8 AA AC 	.db %10101010, %11001000, %11001101, %10000010, %00010111, %10111000, %10101010, %10101100
  594 D1:D7ED 83 5B 25 6E 
              CA A8 23 35 	.db %10000011, %01011011, %00100101, %01101110, %11001010, %10101000, %00100011, %00110101
  595 D1:D7F5 88 68 2C 8A 
              A3 8D 60 C6 	.db %10001000, %01101000, %00101100, %10001010, %10100011, %10001101, %01100000, %11000110
  596 D1:D7FD C2 7A AB 0B 
              5A 0B 34 25 	.db %11000010, %01111010, %10101011, %00001011, %01011010, %00001011, %00110100, %00100101
  597 D1:D805 AA B0 85 0A 
              23 79 52 AA 	.db %10101010, %10110000, %10000101, %00001010, %00100011, %01111001, %01010010, %10101010
  598 D1:D80D 21 63 BE 1E 
              21 68 AA 14 	.db %00100001, %01100011, %10111110, %00011110, %00100001, %01101000, %10101010, %00010100
  599 D1:D815 00 71 20 A5 
              EA B5 08 55 	.db %00000000, %01110001, %00100000, %10100101, %11101010, %10110101, %00001000, %01010101
  600 D1:D81D 80 88 16 2B 
              68 34 5E 20 	.db %10000000, %10001000, %00010110, %00101011, %01101000, %00110100, %01011110, %00100000
  601 D1:D825 AB 48 AA 8D 
              CD A4 22 A2 	.db %10101011, %01001000, %10101010, %10001101, %11001101, %10100100, %00100010, %10100010
  602 D1:D82D 8A 0F 5E D7 
              96 2A 28 88 	.db %10001010, %00001111, %01011110, %11010111, %10010110, %00101010, %00101000, %10001000
  603 D1:D835 D7 81 79 42 
              AA A8 8D 63 	.db %11010111, %10000001, %01111001, %01000010, %10101010, %10101000, %10001101, %01100011
  604 D1:D83D -  -  -  -  
  605 D1:D83D -  -  -  -  
  606 D1:D83D -  -  -  -  Tree_6:
  607 D1:D83D 24 -  -  -  	.db %00100100
  608 D1:D83E 1A 10 -  -  	.db 26, 16
  609 D1:D840 01 23 -  -  	.db %00000001, %00100011
  610 D1:D842 -  -  -  -  
  611 D1:D842 06 50 5A A5 
              80 A9 98 15 	.db %00000110, %01010000, %01011010, %10100101, %10000000, %10101001, %10011000, %00010101
  612 D1:D84A 0A 9A 49 29 
              9B 49 50 99 	.db %00001010, %10011010, %01001001, %00101001, %10011011, %01001001, %01010000, %10011001
  613 D1:D852 61 83 50 85 
              59 43 66 48 	.db %01100001, %10000011, %01010000, %10000101, %01011001, %01000011, %01100110, %01001000
  614 D1:D85A A4 02 15 54 
              2A 69 96 83 	.db %10100100, %00000010, %00010101, %01010100, %00101010, %01101001, %10010110, %10000011
  615 D1:D862 80 45 00 9A 
              A9 A4 39 41 	.db %10000000, %01000101, %00000000, %10011010, %10101001, %10100100, %00111001, %01000001
  616 D1:D86A 41 0B 69 99 
              42 A4 94 90 	.db %01000001, %00001011, %01101001, %10011001, %01000010, %10100100, %10010100, %10010000
  617 D1:D872 06 9A 58 19 
              55 05 04 A6 	.db %00000110, %10011010, %01011000, %00011001, %01010101, %00000101, %00000100, %10100110
  618 D1:D87A 66 43 54 42 
              A5 4D A6 55 	.db %01100110, %01000011, %01010100, %01000010, %10100101, %01001101, %10100110, %01010101
  619 D1:D882 37 50 95 65 
              69 89 92 75 	.db %00110111, %01010000, %10010101, %01100101, %01101001, %10001001, %10010010, %01110101
  620 D1:D88A 29 69 96 54 
              DA 04 55 54 	.db %00101001, %01101001, %10010110, %01010100, %11011010, %00000100, %01010101, %01010100
  621 D1:D892 98 66 4D 10 
              05 59 05 96 	.db %10011000, %01100110, %01001101, %00010000, %00000101, %01011001, %00000101, %10010110
  622 D1:D89A 68 29 0A 41 
              42 69 96 50 	.db %01101000, %00101001, %00001010, %01000001, %01000010, %01101001, %10010110, %01010000
  623 D1:D8A2 D6 64 94 25 
              56 65 42 EA 	.db %11010110, %01100100, %10010100, %00100101, %01010110, %01100101, %01000010, %11101010
  624 D1:D8AA -  -  -  -  
  625 D1:D8AA -  -  -  -  
  626 D1:D8AA -  -  -  -  Tree_3:
  627 D1:D8AA 24 -  -  -  	.db %00100100
  628 D1:D8AB 1A 10 -  -  	.db 26, 16
  629 D1:D8AD 10 20 -  -  	.db %00010000, %00100000
  630 D1:D8AF -  -  -  -  
  631 D1:D8AF 05 11 05 00 
              05 80 01 45 	.db %00000101, %00010001, %00000101, %00000000, %00000101, %10000000, %00000001, %01000101
  632 D1:D8B7 11 48 45 51 
              40 11 45 10 	.db %00010001, %01001000, %01000101, %01010001, %01000000, %00010001, %01000101, %00010000
  633 D1:D8BF 84 58 16 01 
              54 40 54 01 	.db %10000100, %01011000, %00010110, %00000001, %01010100, %01000000, %01010100, %00000001
  634 D1:D8C7 85 64 55 14 
              01 40 18 56 	.db %10000101, %01100100, %01010101, %00010100, %00000001, %01000000, %00011000, %01010110
  635 D1:D8CF 04 55 50 56 
              41 85 60 51 	.db %00000100, %01010101, %01010000, %01010110, %01000001, %10000101, %01100000, %01010001
  636 D1:D8D7 51 05 60 14 
              56 05 55 10 	.db %01010001, %00000101, %01100000, %00010100, %01010110, %00000101, %01010101, %00010000
  637 D1:D8DF 56 01 41 60 
              54 51 04 58 	.db %01010110, %00000001, %01000001, %01100000, %01010100, %01010001, %00000100, %01011000
  638 D1:D8E7 54 16 85 41 
              14 05 85 40 	.db %01010100, %00010110, %10000101, %01000001, %00010100, %00000101, %10000101, %01000000
  639 D1:D8EF 58 45 10 50 
              58 50 01 64 	.db %01011000, %01000101, %00010000, %01010000, %01011000, %01010000, %00000001, %01100100
  640 D1:D8F7 41 10 05 95 
              05 05 44 10 	.db %01000001, %00010000, %00000101, %10010101, %00000101, %00000101, %01000100, %00010000
  641 D1:D8FF 14 55 51 50 
              65 51 01 61 	.db %00010100, %01010101, %01010001, %01010000, %01100101, %01010001, %00000001, %01100001
  642 D1:D907 54 15 00 11 
              10 16 04 05 	.db %01010100, %00010101, %00000000, %00010001, %00010000, %00010110, %00000100, %00000101
  643 D1:D90F 61 01 15 41 
              60 00 56 00 	.db %01100001, %00000001, %00010101, %01000001, %01100000, %00000000, %01010110, %00000000
  644 D1:D917 -  -  -  -  
  645 D1:D917 -  -  -  -  
  646 D1:D917 -  -  -  -  Tree_0:
  647 D1:D917 10 -  -  -  	.db %00010000
  648 D1:D918 1A 10 -  -  	.db 26, 16
  649 D1:D91A FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  650 D1:D922 FF FF FF FF 
              FF 3F FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  651 D1:D92A CF FF FF F3 
              FF FF FC FF 	.db %11001111, %11111111, %11111111, %11110011, %11111111, %11111111, %11111100, %11111111
  652 D1:D932 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  653 D1:D93A FF FF FF FC 
              FF FF FF 3F 	.db %11111111, %11111111, %11111111, %11111100, %11111111, %11111111, %11111111, %00111111
  654 D1:D942 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  655 D1:D94A FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  656 D1:D94E -  -  -  -  
  657 D1:D94E 01 -  -  -  	.db %00000001
  658 D1:D94F -  -  -  -  
  659 D1:D94F 00 9A 4A 80 
              26 02 90 1A 	.db %00000000, %10011010, %01001010, %10000000, %00100110, %00000010, %10010000, %00011010
  660 D1:D957 40 A4 05 9A 
              71 08 AB 73 	.db %01000000, %10100100, %00000101, %10011010, %01110001, %00001000, %10101011, %01110011
  661 D1:D95F 08 AB 74 09 
              5B 77 02 9A 	.db %00001000, %10101011, %01110100, %00001001, %01011011, %01110111, %00000010, %10011010
  662 D1:D967 75 00 B2 1D 
              00 BF 57 40 	.db %01110101, %00000000, %10110010, %00011101, %00000000, %10111111, %01010111, %01000000
  663 D1:D96F 2B 56 10 2B 
              5F 18 01 9F 	.db %00101011, %01010110, %00010000, %00101011, %01011111, %00011000, %00000001, %10011111
  664 D1:D977 0C 00 23 83 
              01 22 E2 40 	.db %00001100, %00000000, %00100011, %10000011, %00000001, %00100010, %11100010, %01000000
  665 D1:D97F 66 2A A0 -  	.db %01100110, %00101010, %10100000
  666 D1:D982 -  -  -  -  
  667 D1:D982 -  -  -  -  
  668 D1:D982 -  -  -  -  Tree_8:
  669 D1:D982 24 -  -  -  	.db %00100100
  670 D1:D983 1A 10 -  -  	.db 26, 16
  671 D1:D985 10 23 -  -  	.db %00010000, %00100011
  672 D1:D987 -  -  -  -  
  673 D1:D987 10 05 62 22 
              85 20 80 40 	.db %00010000, %00000101, %01100010, %00100010, %10000101, %00100000, %10000000, %01000000
  674 D1:D98F 56 82 A0 52 
              2A 06 01 52 	.db %01010110, %10000010, %10100000, %01010010, %00101010, %00000110, %00000001, %01010010
  675 D1:D997 28 25 E0 B8 
              60 21 18 8A 	.db %00101000, %00100101, %11100000, %10111000, %01100000, %00100001, %00011000, %10001010
  676 D1:D99F 5E 22 08 12 
              15 8A A1 62 	.db %01011110, %00100010, %00001000, %00010010, %00010101, %10001010, %10100001, %01100010
  677 D1:D9A7 80 04 21 57 
              0A 85 43 00 	.db %10000000, %00000100, %00100001, %01010111, %00001010, %10000101, %01000011, %00000000
  678 D1:D9AF 00 11 78 A9 
              17 80 60 02 	.db %00000000, %00010001, %01111000, %10101001, %00010111, %10000000, %01100000, %00000010
  679 D1:D9B7 15 A0 89 7A 
              05 A0 08 57 	.db %00010101, %10100000, %10001001, %01111010, %00000101, %10100000, %00001000, %01010111
  680 D1:D9BF A2 00 80 15 
              05 84 57 0A 	.db %10100010, %00000000, %10000000, %00010101, %00000101, %10000100, %01010111, %00001010
  681 D1:D9C7 A6 00 19 5A 
              95 5C 82 55 	.db %10100110, %00000000, %00011001, %01011010, %10010101, %01011100, %10000010, %01010101
  682 D1:D9CF 01 57 08 85 
              7A A5 14 15 	.db %00000001, %01010111, %00001000, %10000101, %01111010, %10100101, %00010100, %00010101
  683 D1:D9D7 A2 AA 16 A0 
              61 41 68 22 	.db %10100010, %10101010, %00010110, %10100000, %01100001, %01000001, %01101000, %00100010
  684 D1:D9DF A1 56 96 08 
              16 06 22 21 	.db %10100001, %01010110, %10010110, %00001000, %00010110, %00000110, %00100010, %00100001
  685 D1:D9E7 71 61 01 60 
              22 0A 56 1E 	.db %01110001, %01100001, %00000001, %01100000, %00100010, %00001010, %01010110, %00011110
  686 D1:D9EF -  -  -  -  
  687 D1:D9EF -  -  -  -  
  688 D1:D9EF -  -  -  -  Tree_10:
  689 D1:D9EF 24 -  -  -  	.db %00100100
  690 D1:D9F0 1A 10 -  -  	.db 26, 16
  691 D1:D9F2 12 03 -  -  	.db %00010010, %00000011
  692 D1:D9F4 -  -  -  -  
  693 D1:D9F4 19 2A 77 FD 
              DD FA D7 9E 	.db %00011001, %00101010, %01110111, %11111101, %11011101, %11111010, %11010111, %10011110
  694 D1:D9FC 25 FF F7 DC 
              AC 65 2B 7F 	.db %00100101, %11111111, %11110111, %11011100, %10101100, %01100101, %00101011, %01111111
  695 D1:DA04 F7 5D D8 C2 
              94 BF 7F FC 	.db %11110111, %01011101, %11011000, %11000010, %10010100, %10111111, %01111111, %11111100
  696 D1:DA0C 5F 21 79 77 
              DF FF 2D D6 	.db %01011111, %00100001, %01111001, %01110111, %11011111, %11111111, %00101101, %11010110
  697 D1:DA14 31 A5 7D FF 
              DF DD 55 38 	.db %00110001, %10100101, %01111101, %11111111, %11011111, %11011101, %01010101, %00111000
  698 D1:DA1C D7 C7 7D F5 
              73 54 AD 77 	.db %11010111, %11000111, %01111101, %11110101, %01110011, %01010100, %10101101, %01110111
  699 D1:DA24 FF FF 75 5D 
              59 D7 73 F7 	.db %11111111, %11111111, %01110101, %01011101, %01011001, %11010111, %01110011, %11110111
  700 D1:DA2C 61 47 A6 B4 
              77 7F F6 1D 	.db %01100001, %01000111, %10100110, %10110100, %01110111, %01111111, %11110110, %00011101
  701 D1:DA34 F9 60 05 D7 
              FF E8 7A 0A 	.db %11111001, %01100000, %00000101, %11010111, %11111111, %11101000, %01111010, %00001010
  702 D1:DA3C 35 2D 7F FD 
              A8 AA 95 18 	.db %00110101, %00101101, %01111111, %11111101, %10101000, %10101010, %10010101, %00011000
  703 D1:DA44 1F FF CE A8 
              A1 96 95 FD 	.db %00011111, %11111111, %11001110, %10101000, %10100001, %10010110, %10010101, %11111101
  704 D1:DA4C FD F2 12 6D 
              6B 5F FF DF 	.db %11111101, %11110010, %00010010, %01101101, %01101011, %01011111, %11111111, %11011111
  705 D1:DA54 E1 52 8E B7 
              F7 DD 5E B1 	.db %11100001, %01010010, %10001110, %10110111, %11110111, %11011101, %01011110, %10110001
  706 D1:DA5C -  -  -  -  
  707 D1:DA5C -  -  -  -  
  708 D1:DA5C -  -  -  -  Tree_1:
  709 D1:DA5C 10 -  -  -  	.db %00010000
  710 D1:DA5D 1A 10 -  -  	.db 26, 16
  711 D1:DA5F FF FF FF FF 
              FF FF F3 FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11110011, %11111111
  712 D1:DA67 FF FC FF FF 
              FF 3F FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  713 D1:DA6F FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  714 D1:DA77 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  715 D1:DA7F FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  716 D1:DA87 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  717 D1:DA8F FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  718 D1:DA93 -  -  -  -  
  719 D1:DA93 01 -  -  -  	.db %00000001
  720 D1:DA94 -  -  -  -  
  721 D1:DA94 01 00 48 80 
              69 35 30 4A 	.db %00000001, %00000000, %01001000, %10000000, %01101001, %00110101, %00110000, %01001010
  722 D1:DA9C 27 20 48 C6 
              61 D5 C6 60 	.db %00100111, %00100000, %01001000, %11000110, %01100001, %11010101, %11000110, %01100000
  723 D1:DAA4 E7 73 AC 29 
              DC E9 0B 55 	.db %11100111, %01110011, %10101100, %00101001, %11011100, %11101001, %00001011, %01010101
  724 D1:DAAC 5A 44 FE 58 
              80 2B 92 28 	.db %01011010, %01000100, %11111110, %01011000, %10000000, %00101011, %10010010, %00101000
  725 D1:DAB4 0E C2 82 03 
              B0 74 C1 2D 	.db %00001110, %11000010, %10000010, %00000011, %10110000, %01110100, %11000001, %00101101
  726 D1:DABC 5F 10 09 73 
              E4 0A 5C F2 	.db %01011111, %00010000, %00001001, %01110011, %11100100, %00001010, %01011100, %11110010
  727 D1:DAC4 04 92 3C 80 	.db %00000100, %10010010, %00111100, %10000000
  728 D1:DAC8 -  -  -  -  
  729 D1:DAC8 -  -  -  -  
  730 D1:DAC8 -  -  -  -  Tree_5:
  731 D1:DAC8 24 -  -  -  	.db %00100100
  732 D1:DAC9 1A 10 -  -  	.db 26, 16
  733 D1:DACB 10 20 -  -  	.db %00010000, %00100000
  734 D1:DACD -  -  -  -  
  735 D1:DACD 11 10 15 00 
              05 40 01 15 	.db %00010001, %00010000, %00010101, %00000000, %00000101, %01000000, %00000001, %00010101
  736 D1:DAD5 05 50 04 56 
              00 15 44 41 	.db %00000101, %01010000, %00000100, %01010110, %00000000, %00010101, %01000100, %01000001
  737 D1:DADD 60 05 60 61 
              04 55 16 04 	.db %01100000, %00000101, %01100000, %01100001, %00000100, %01010101, %00010110, %00000100
  738 D1:DAE5 50 06 11 41 
              60 60 05 81 	.db %01010000, %00000110, %00010001, %01000001, %01100000, %01100000, %00000101, %10000001
  739 D1:DAED 45 44 56 08 
              00 50 10 54 	.db %01000101, %01000100, %01010110, %00001000, %00000000, %01010000, %00010000, %01010100
  740 D1:DAF5 45 60 00 16 
              05 80 44 44 	.db %01000101, %01100000, %00000000, %00010110, %00000101, %10000000, %01000100, %01000100
  741 D1:DAFD 10 15 80 58 
              15 44 41 04 	.db %00010000, %00010101, %10000000, %01011000, %00010101, %01000100, %01000001, %00000100
  742 D1:DB05 58 05 01 55 
              46 01 54 00 	.db %01011000, %00000101, %00000001, %01010101, %01000110, %00000001, %01010100, %00000000
  743 D1:DB0D 10 15 54 58 
              45 81 01 45 	.db %00010000, %00010101, %01010100, %01011000, %01000101, %10000001, %00000001, %01000101
  744 D1:DB15 45 45 05 60 
              00 04 50 44 	.db %01000101, %01000101, %00000101, %01100000, %00000000, %00000100, %01010000, %01000100
  745 D1:DB1D 19 5A 04 40 
              45 40 51 95 	.db %00011001, %01011010, %00000100, %01000000, %01000101, %01000000, %01010001, %10010101
  746 D1:DB25 A0 16 10 45 
              11 01 58 04 	.db %10100000, %00010110, %00010000, %01000101, %00010001, %00000001, %01011000, %00000100
  747 D1:DB2D 68 14 51 10 
              14 00 15 80 	.db %01101000, %00010100, %01010001, %00010000, %00010100, %00000000, %00010101, %10000000
  748 D1:DB35 -  -  -  -  
  749 D1:DB35 -  -  -  -  
  750 D1:DB35 -  -  -  -  Tree_11:
  751 D1:DB35 24 -  -  -  	.db %00100100
  752 D1:DB36 1A 10 -  -  	.db 26, 16
  753 D1:DB38 20 13 -  -  	.db %00100000, %00010011
  754 D1:DB3A -  -  -  -  
  755 D1:DB3A 10 95 33 CF 
              30 C5 C3 42 	.db %00010000, %10010101, %00110011, %11001111, %00110000, %11000101, %11000011, %01000010
  756 D1:DB42 43 F3 F3 FF 
              58 37 97 FC 	.db %01000011, %11110011, %11110011, %11111111, %01011000, %00110111, %10010111, %11111100
  757 D1:DB4A F3 6F 35 B3 
              E5 7F FC C6 	.db %11110011, %01101111, %00110101, %10110011, %11100101, %01111111, %11111100, %11000110
  758 D1:DB52 3F 6E 3F 55 
              FF F9 4C D5 	.db %00111111, %01101110, %00111111, %01010101, %11111111, %11111001, %01001100, %11010101
  759 D1:DB5A 30 B7 97 FE 
              50 CD 6F C9 	.db %00110000, %10110111, %10010111, %11111110, %01010000, %11001101, %01101111, %11001001
  760 D1:DB62 48 F3 96 C3 
              58 C8 54 CF 	.db %01001000, %11110011, %10010110, %11000011, %01011000, %11001000, %01010100, %11001111
  761 D1:DB6A C5 6C CE 3C 
              15 CC F1 5B 	.db %11000101, %01101100, %11001110, %00111100, %00010101, %11001100, %11110001, %01011011
  762 D1:DB72 FC C3 05 50 
              CC 56 CE FC 	.db %11111100, %11000011, %00000101, %01010000, %11001100, %01010110, %11001110, %11111100
  763 D1:DB7A DB 59 43 DA 
              FF E8 CE 5C 	.db %11011011, %01011001, %01000011, %11011010, %11111111, %11101000, %11001110, %01011100
  764 D1:DB82 94 31 FF FF 
              94 F5 C1 43 	.db %10010100, %00110001, %11111111, %11111111, %10010100, %11110101, %11000001, %01000011
  765 D1:DB8A 3F FF F9 73 
              11 25 33 CF 	.db %00111111, %11111111, %11111001, %01110011, %00010001, %00100101, %00110011, %11001111
  766 D1:DB92 FC A5 3C 10 
              50 FF CC CE 	.db %11111100, %10100101, %00111100, %00010000, %01010000, %11111111, %11001100, %11001110
  767 D1:DB9A 5C C9 69 7F 
              33 F0 CD 4F 	.db %01011100, %11001001, %01101001, %01111111, %00110011, %11110000, %11001101, %01001111
  768 D1:DBA2 -  -  -  -  
  769 D1:DBA2 -  -  -  -  
  770 D1:DBA2 -  -  -  -  Branches_1:
  771 D1:DBA2 20 -  -  -  	.db %00100000
  772 D1:DBA3 12 0E -  -  	.db 18, 14
  773 D1:DBA5 3F 00 3F FC 
              0F FF F3 FF 	.db %00111111, %00000000, %00111111, %11111100, %00001111, %11111111, %11110011, %11111111
  774 D1:DBAD FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  775 D1:DBB5 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  776 D1:DBBD F3 FF FC FF 
              FC 3C FC 00 	.db %11110011, %11111111, %11111100, %11111111, %11111100, %00111100, %11111100, %00000000
  777 D1:DBC5 -  -  -  -  
  778 D1:DBC5 01 23 -  -  	.db %00000001, %00100011
  779 D1:DBC7 -  -  -  -  
  780 D1:DBC7 00 00 05 00 
              05 55 55 00 	.db %00000000, %00000000, %00000101, %00000000, %00000101, %01010101, %01010101, %00000000
  781 D1:DBCF 00 50 15 44 
              05 45 52 94 	.db %00000000, %01010000, %00010101, %01000100, %00000101, %01000101, %01010010, %10010100
  782 D1:DBD7 40 4A AA 95 
              84 0A AE AB 	.db %01000000, %01001010, %10101010, %10010101, %10000100, %00001010, %10101110, %10101011
  783 D1:DBDF F5 50 FF FF 
              EA A0 02 AA 	.db %11110101, %01010000, %11111111, %11111111, %11101010, %10100000, %00000010, %10101010
  784 D1:DBE7 A6 54 00 A1 
              15 40 14 00 	.db %10100110, %01010100, %00000000, %10100001, %00010101, %01000000, %00010100, %00000000
  785 D1:DBEF 05 45 44 01 
              45 50 00 00 	.db %00000101, %01000101, %01000100, %00000001, %01000101, %01010000, %00000000, %00000000
  786 D1:DBF7 00 00 00 00 
              00 00 -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  787 D1:DBFD -  -  -  -  
  788 D1:DBFD -  -  -  -  
  789 D1:DBFD -  -  -  -  Vines_7:
  790 D1:DBFD 10 -  -  -  	.db %00010000
  791 D1:DBFE 0A 18 -  -  	.db 10, 24
  792 D1:DC00 C0 30 0C 03 
              90 EC 3F 07 	.db %11000000, %00110000, %00001100, %00000011, %10010000, %11101100, %00111111, %00000111
  793 D1:DC08 00 C0 78 1E 
              03 80 E0 3C 	.db %00000000, %11000000, %01111000, %00011110, %00000011, %10000000, %11100000, %00111100
  794 D1:DC10 07 00 C0 F0 
              3C 03 B0 7C 	.db %00000111, %00000000, %11000000, %11110000, %00111100, %00000011, %10110000, %01111100
  795 D1:DC18 1C 03 00 E0 
              38 06 -  -  	.db %00011100, %00000011, %00000000, %11100000, %00111000, %00000110
  796 D1:DC1E -  -  -  -  
  797 D1:DC1E 54 -  -  -  	.db %01010100
  798 D1:DC1F -  -  -  -  
  799 D1:DC1F 54 CE 79 6F 
              49 36 FE 9D 	.db %01010100, %11001110, %01111001, %01101111, %01001001, %00110110, %11111110, %10011101
  800 D1:DC27 EF 4A -  -  	.db %11101111, %01001010
  801 D1:DC29 -  -  -  -  
  802 D1:DC29 -  -  -  -  
  803 D1:DC29 -  -  -  -  Vines_10:
  804 D1:DC29 10 -  -  -  	.db %00010000
  805 D1:DC2A 18 0E -  -  	.db 24, 14
  806 D1:DC2C 00 40 00 FC 
              E0 00 FF 80 	.db %00000000, %01000000, %00000000, %11111100, %11100000, %00000000, %11111111, %10000000
  807 D1:DC34 00 FF 83 00 
              1F E6 00 33 	.db %00000000, %11111111, %10000011, %00000000, %00011111, %11100110, %00000000, %00110011
  808 D1:DC3C FC 00 10 FF 
              0C 00 1F CC 	.db %11111100, %00000000, %00010000, %11111111, %00001100, %00000000, %00011111, %11001100
  809 D1:DC44 00 37 E8 00 
              31 F8 00 01 	.db %00000000, %00110111, %11101000, %00000000, %00110001, %11111000, %00000000, %00000001
  810 D1:DC4C FC 00 03 3F 
              00 03 9F 00 	.db %11111100, %00000000, %00000011, %00111111, %00000000, %00000011, %10011111, %00000000
  811 D1:DC54 00 07 -  -  	.db %00000000, %00000111
  812 D1:DC56 -  -  -  -  
  813 D1:DC56 45 -  -  -  	.db %01000101
  814 D1:DC57 -  -  -  -  
  815 D1:DC57 00 3E 1F C3 
              F0 FE 3F 07 	.db %00000000, %00111110, %00011111, %11000011, %11110000, %11111110, %00111111, %00000111
  816 D1:DC5F 83 F1 F9 F3 
              E3 FF 80 -  	.db %10000011, %11110001, %11111001, %11110011, %11100011, %11111111, %10000000
  817 D1:DC66 -  -  -  -  
  818 D1:DC66 -  -  -  -  
  819 D1:DC66 -  -  -  -  Branches_0:
  820 D1:DC66 20 -  -  -  	.db %00100000
  821 D1:DC67 12 0E -  -  	.db 18, 14
  822 D1:DC69 CC 00 3F CF 
              0F FF F3 FF 	.db %11001100, %00000000, %00111111, %11001111, %00001111, %11111111, %11110011, %11111111
  823 D1:DC71 FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  824 D1:DC79 FF FF FF FF 
              3F FF CF FF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11001111, %11111111
  825 D1:DC81 F3 FF F0 FF 
              FC 3F 30 00 	.db %11110011, %11111111, %11110000, %11111111, %11111100, %00111111, %00110000, %00000000
  826 D1:DC89 -  -  -  -  
  827 D1:DC89 01 23 -  -  	.db %00000001, %00100011
  828 D1:DC8B -  -  -  -  
  829 D1:DC8B 00 00 00 00 
              15 40 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00010101, %01000000, %00000000, %00000000
  830 D1:DC93 40 51 45 40 
              04 00 00 10 	.db %01000000, %01010001, %01000101, %01000000, %00000100, %00000000, %00000000, %00010000
  831 D1:DC9B 05 45 5A 01 
              10 BA AA F5 	.db %00000101, %01000101, %01011010, %00000001, %00010000, %10111010, %10101010, %11110101
  832 D1:DCA3 41 0F FF FA 
              95 10 AA AA 	.db %01000001, %00001111, %11111111, %11111010, %10010101, %00010000, %10101010, %10101010
  833 D1:DCAB 55 04 55 51 
              44 00 00 05 	.db %01010101, %00000100, %01010101, %01010001, %01000100, %00000000, %00000000, %00000101
  834 D1:DCB3 40 40 00 50 
              14 05 40 00 	.db %01000000, %01000000, %00000000, %01010000, %00010100, %00000101, %01000000, %00000000
  835 D1:DCBB 00 00 00 -  	.db %00000000, %00000000, %00000000
  836 D1:DCBE -  -  -  -  
  837 D1:DCBE -  -  -  -  
  838 D1:DCBE -  -  -  -  GroundDirtDark:
  839 D1:DCBE 24 -  -  -  	.db %00100100
  840 D1:DCBF 10 0C -  -  	.db 16, 12
  841 D1:DCC1 01 50 -  -  	.db %00000001, %01010000
  842 D1:DCC3 -  -  -  -  
  843 D1:DCC3 00 00 00 00 
              00 00 00 04 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000100
  844 D1:DCCB 58 08 00 01 
              08 08 25 40 	.db %01011000, %00001000, %00000000, %00000001, %00001000, %00001000, %00100101, %01000000
  845 D1:DCD3 00 00 20 54 
              01 50 00 08 	.db %00000000, %00000000, %00100000, %01010100, %00000001, %01010000, %00000000, %00001000
  846 D1:DCDB 00 14 00 08 
              20 00 00 00 	.db %00000000, %00010100, %00000000, %00001000, %00100000, %00000000, %00000000, %00000000
  847 D1:DCE3 20 00 50 00 
              52 12 05 05 	.db %00100000, %00000000, %01010000, %00000000, %01010010, %00010010, %00000101, %00000101
  848 D1:DCEB 02 44 80 40 
              00 00 00 00 	.db %00000010, %01000100, %10000000, %01000000, %00000000, %00000000, %00000000, %00000000
  849 D1:DCF3 -  -  -  -  
  850 D1:DCF3 -  -  -  -  
  851 D1:DCF3 -  -  -  -  GroundHumpDark:
  852 D1:DCF3 20 -  -  -  	.db %00100000
  853 D1:DCF4 10 0D -  -  	.db 16, 13
  854 D1:DCF6 03 F0 0F FC 
              3F FC FF FF 	.db %00000011, %11110000, %00001111, %11111100, %00111111, %11111100, %11111111, %11111111
  855 D1:DCFE FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  856 D1:DD06 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  857 D1:DD0E FF FF -  -  	.db %11111111, %11111111
  858 D1:DD10 -  -  -  -  
  859 D1:DD10 10 50 -  -  	.db %00010000, %01010000
  860 D1:DD12 -  -  -  -  
  861 D1:DD12 00 00 55 40 
              01 55 54 05 	.db %00000000, %00000000, %01010101, %01000000, %00000001, %01010101, %01010100, %00000101
  862 D1:DD1A 55 56 50 95 
              59 56 55 95 	.db %01010101, %01010110, %01010000, %10010101, %01011001, %01010110, %01010101, %10010101
  863 D1:DD22 59 05 59 51 
              59 50 09 44 	.db %01011001, %00000101, %01011001, %01010001, %01011001, %01010000, %00001001, %01000100
  864 D1:DD2A 05 55 55 56 
              55 56 55 56 	.db %00000101, %01010101, %01010101, %01010110, %01010101, %01010110, %01010101, %01010110
  865 D1:DD32 95 49 55 45 
              94 18 15 11 	.db %10010101, %01001001, %01010101, %01000101, %10010100, %00011000, %00010101, %00010001
  866 D1:DD3A 56 55 54 55 
              59 55 55 -  	.db %01010110, %01010101, %01010100, %01010101, %01011001, %01010101, %01010101
  867 D1:DD41 -  -  -  -  
  868 D1:DD41 -  -  -  -  
  869 D1:DD41 -  -  -  -  GroundGrassSmall:
  870 D1:DD41 08 -  -  -  	.db %00001000
  871 D1:DD42 10 0F -  -  	.db 16, 15
  872 D1:DD44 30 C0 30 C0 
              F3 CC F3 CC 	.db %00110000, %11000000, %00110000, %11000000, %11110011, %11001100, %11110011, %11001100
  873 D1:DD4C F3 0C C3 0F 
              C3 0F C3 03 	.db %11110011, %00001100, %11000011, %00001111, %11000011, %00001111, %11000011, %00000011
  874 D1:DD54 C3 03 C3 33 
              C3 33 C3 33 	.db %11000011, %00000011, %11000011, %00110011, %11000011, %00110011, %11000011, %00110011
  875 D1:DD5C C3 33 C3 33 
              C0 33 -  -  	.db %11000011, %00110011, %11000011, %00110011, %11000000, %00110011
  876 D1:DD62 -  -  -  -  
  877 D1:DD62 50 -  -  -  	.db %01010000
  878 D1:DD63 -  -  -  -  
  879 D1:DD63 -  -  -  -  
  880 D1:DD63 -  -  -  -  
  881 D1:DD63 -  -  -  -  Tree_16:
  882 D1:DD63 08 -  -  -  	.db %00001000
  883 D1:DD64 0A 10 -  -  	.db 10, 16
  884 D1:DD66 3C 0F 03 C0 
              F0 3C 0F 0F 	.db %00111100, %00001111, %00000011, %11000000, %11110000, %00111100, %00001111, %00001111
  885 D1:DD6E C0 F0 3C 0F 
              03 FC FC 3C 	.db %11000000, %11110000, %00111100, %00001111, %00000011, %11111100, %11111100, %00111100
  886 D1:DD76 0F 03 C0 F0 	.db %00001111, %00000011, %11000000, %11110000
  887 D1:DD7A -  -  -  -  
  888 D1:DD7A 00 -  -  -  	.db %00000000
  889 D1:DD7B -  -  -  -  
  890 D1:DD7B -  -  -  -  
  891 D1:DD7B -  -  -  -  
  892 D1:DD7B -  -  -  -  Tree_17:
  893 D1:DD7B 08 -  -  -  	.db %00001000
  894 D1:DD7C 07 0E -  -  	.db 7, 14
  895 D1:DD7E 0C 18 77 E1 
              C3 0F 9E 70 	.db %00001100, %00011000, %01110111, %11100001, %11000011, %00001111, %10011110, %01110000
  896 D1:DD86 E3 C7 0C 18 
              00 -  -  -  	.db %11100011, %11000111, %00001100, %00011000, %00000000
  897 D1:DD8B -  -  -  -  
  898 D1:DD8B 00 -  -  -  	.db %00000000
  899 D1:DD8C -  -  -  -  
  900 D1:DD8C -  -  -  -  
  901 D1:DD8C -  -  -  -  
  902 D1:DD8C -  -  -  -  Leaves_8:
  903 D1:DD8C 10 -  -  -  	.db %00010000
  904 D1:DD8D 10 0E -  -  	.db 16, 14
  905 D1:DD8F 03 C0 0F F0 
              3F F0 3F FC 	.db %00000011, %11000000, %00001111, %11110000, %00111111, %11110000, %00111111, %11111100
  906 D1:DD97 FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  907 D1:DD9F FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  908 D1:DDA7 FF FC 30 30 	.db %11111111, %11111100, %00110000, %00110000
  909 D1:DDAB -  -  -  -  
  910 D1:DDAB 54 -  -  -  	.db %01010100
  911 D1:DDAC -  -  -  -  
  912 D1:DDAC 00 03 00 67 
              00 70 80 00 	.db %00000000, %00000011, %00000000, %01100111, %00000000, %01110000, %10000000, %00000000
  913 D1:DDB4 F0 1C 1E 70 
              01 81 10 03 	.db %11110000, %00011100, %00011110, %01110000, %00000001, %10000001, %00010000, %00000011
  914 D1:DDBC F0 0E 03 C0 
              00 00 00 -  	.db %11110000, %00001110, %00000011, %11000000, %00000000, %00000000, %00000000
  915 D1:DDC3 -  -  -  -  
  916 D1:DDC3 -  -  -  -  
  917 D1:DDC3 -  -  -  -  Tree_18:
  918 D1:DDC3 08 -  -  -  	.db %00001000
  919 D1:DDC4 07 0E -  -  	.db 7, 14
  920 D1:DDC6 18 30 C7 83 
              06 0C 1C 1E 	.db %00011000, %00110000, %11000111, %10000011, %00000110, %00001100, %00011100, %00011110
  921 D1:DDCE 30 60 C1 83 
              00 -  -  -  	.db %00110000, %01100000, %11000001, %10000011, %00000000
  922 D1:DDD3 -  -  -  -  
  923 D1:DDD3 00 -  -  -  	.db %00000000
  924 D1:DDD4 -  -  -  -  
  925 D1:DDD4 -  -  -  -  
  926 D1:DDD4 -  -  -  -  
  927 D1:DDD4 -  -  -  -  Clouds_0:
  928 D1:DDD4 10 -  -  -  	.db %00010000
  929 D1:DDD5 10 0A -  -  	.db 16, 10
  930 D1:DDD7 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  931 D1:DDDF FF FF FF FF 
              FF FF 3F FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111
  932 D1:DDE7 0F CC 03 00 	.db %00001111, %11001100, %00000011, %00000000
  933 D1:DDEB -  -  -  -  
  934 D1:DDEB 67 -  -  -  	.db %01100111
  935 D1:DDEC -  -  -  -  
  936 D1:DDEC 00 40 31 84 
              13 1C 0E 20 	.db %00000000, %01000000, %00110001, %10000100, %00010011, %00011100, %00001110, %00100000
  937 D1:DDF4 00 00 E0 00 
              F0 77 F3 FF 	.db %00000000, %00000000, %11100000, %00000000, %11110000, %01110111, %11110011, %11111111
  938 D1:DDFC FF -  -  -  	.db %11111111
  939 D1:DDFD -  -  -  -  
  940 D1:DDFD -  -  -  -  
  941 D1:DDFD -  -  -  -  Clouds_1:
  942 D1:DDFD 10 -  -  -  	.db %00010000
  943 D1:DDFE 0C 0E -  -  	.db 12, 14
  944 D1:DE00 03 F0 FF 3F 
              F3 FF FF FF 	.db %00000011, %11110000, %11111111, %00111111, %11110011, %11111111, %11111111, %11111111
  945 D1:DE08 FF 3F F0 FF 
              0F F0 FF 0F 	.db %11111111, %00111111, %11110000, %11111111, %00001111, %11110000, %11111111, %00001111
  946 D1:DE10 F0 3F 00 F0 
              03 -  -  -  	.db %11110000, %00111111, %00000000, %11110000, %00000011
  947 D1:DE15 -  -  -  -  
  948 D1:DE15 76 -  -  -  	.db %01110110
  949 D1:DE16 -  -  -  -  
  950 D1:DE16 3C 7C 3B 3E 
              47 F0 37 C5 	.db %00111100, %01111100, %00111011, %00111110, %01000111, %11110000, %00110111, %11000101
  951 D1:DE1E F6 73 B1 F0 
              70 40 -  -  	.db %11110110, %01110011, %10110001, %11110000, %01110000, %01000000
  952 D1:DE24 -  -  -  -  
  953 D1:DE24 -  -  -  -  
  954 D1:DE24 -  -  -  -  Clouds_3:
  955 D1:DE24 10 -  -  -  	.db %00010000
  956 D1:DE25 10 0B -  -  	.db 16, 11
  957 D1:DE27 03 00 0F C0 
              3F C0 FF F3 	.db %00000011, %00000000, %00001111, %11000000, %00111111, %11000000, %11111111, %11110011
  958 D1:DE2F FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  959 D1:DE37 FF FF FF FF 
              FF FF -  -  	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  960 D1:DE3D -  -  -  -  
  961 D1:DE3D 76 -  -  -  	.db %01110110
  962 D1:DE3E -  -  -  -  
  963 D1:DE3E 00 0C 07 80 
              FF 03 FF C6 	.db %00000000, %00001100, %00000111, %10000000, %11111111, %00000011, %11111111, %11000110
  964 D1:DE46 7F FF 3C FB 
              83 E7 FF FF 	.db %01111111, %11111111, %00111100, %11111011, %10000011, %11100111, %11111111, %11111111
  965 D1:DE4E FF FC -  -  	.db %11111111, %11111100
  966 D1:DE50 -  -  -  -  
  967 D1:DE50 -  -  -  -  
  968 D1:DE50 -  -  -  -  Clouds_4:
  969 D1:DE50 10 -  -  -  	.db %00010000
  970 D1:DE51 08 0A -  -  	.db 8, 10
  971 D1:DE53 03 0F 3F 3F 
              FF FF FF FF 	.db %00000011, %00001111, %00111111, %00111111, %11111111, %11111111, %11111111, %11111111
  972 D1:DE5B FF FF -  -  	.db %11111111, %11111111
  973 D1:DE5D -  -  -  -  
  974 D1:DE5D 76 -  -  -  	.db %01110110
  975 D1:DE5E -  -  -  -  
  976 D1:DE5E 00 11 C3 C7 
              C5 CE 4F CF 	.db %00000000, %00010001, %11000011, %11000111, %11000101, %11001110, %01001111, %11001111
  977 D1:DE66 C0 -  -  -  	.db %11000000
  978 D1:DE67 -  -  -  -  
  979 D1:DE67 -  -  -  -  
  980 D1:DE67 -  -  -  -  Clouds_2:
  981 D1:DE67 14 -  -  -  	.db %00010100
  982 D1:DE68 10 10 -  -  	.db 16, 16
  983 D1:DE6A 67 -  -  -  	.db %01100111
  984 D1:DE6B -  -  -  -  
  985 D1:DE6B 00 00 00 00 
              00 08 40 0E 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001000, %01000000, %00001110
  986 D1:DE73 B0 C3 1F 80 
              00 00 00 00 	.db %10110000, %11000011, %00011111, %10000000, %00000000, %00000000, %00000000, %00000000
  987 D1:DE7B 60 02 80 01 
              01 F0 20 1E 	.db %01100000, %00000010, %10000000, %00000001, %00000001, %11110000, %00100000, %00011110
  988 D1:DE83 30 00 1F 08 
              01 F8 00 00 	.db %00110000, %00000000, %00011111, %00001000, %00000001, %11111000, %00000000, %00000000
  989 D1:DE8B -  -  -  -  
  990 D1:DE8B -  -  -  -  
  991 D1:DE8B -  -  -  -  Frog_0:
  992 D1:DE8B 40 -  -  -  	.db %01000000
  993 D1:DE8C 19 13 -  -  	.db 25, 19
  994 D1:DE8E 00 0F FE 00 
              1F FF 80 3F 	.db %00000000, %00001111, %11111110, %00000000, %00011111, %11111111, %10000000, %00111111
  995 D1:DE96 FF E0 3F FF 
              F0 3F FF F8 	.db %11111111, %11100000, %00111111, %11111111, %11110000, %00111111, %11111111, %11111000
  996 D1:DE9E 7F FF FC 7F 
              FF FE FF FF 	.db %01111111, %11111111, %11111100, %01111111, %11111111, %11111110, %11111111, %11111111
  997 D1:DEA6 FF 7F FF FF 
              FF FF FF BF 	.db %11111111, %01111111, %11111111, %11111111, %11111111, %11111111, %11111111, %10111111
  998 D1:DEAE FF FF DF FF 
              FF 8F FF FF 	.db %11111111, %11111111, %11011111, %11111111, %11111111, %10001111, %11111111, %11111111
  999 D1:DEB6 87 FF FF C3 
              FF FF F1 FF 	.db %10000111, %11111111, %11111111, %11000011, %11111111, %11111111, %11110001, %11111111
 1000 D1:DEBE FF FC FF FF 
              FE 7F FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111110, %01111111, %11111111, %11111111
 1001 D1:DEC6 1F FF FF 80 	.db %00011111, %11111111, %11111111, %10000000
 1002 D1:DECA -  -  -  -  
 1003 D1:DECA 95 46 80 00 	.db %10010101, %01000110, %10000000, %00000000
 1004 D1:DECE -  -  -  -  
 1005 D1:DECE 00 00 00 00 
              00 09 24 92 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001001, %00100100, %10010010
 1006 D1:DED6 48 00 02 4A 
              49 24 89 00 	.db %01001000, %00000000, %00000010, %01001010, %01001001, %00100100, %10001001, %00000000
 1007 D1:DEDE 02 4A 49 26 
              4A 44 80 09 	.db %00000010, %01001010, %01001001, %00100110, %01001010, %01000100, %10000000, %00001001
 1008 D1:DEE6 49 14 93 25 
              24 40 00 94 	.db %01001001, %00010100, %10010011, %00100101, %00100100, %01000000, %00000000, %10010100
 1009 D1:DEEE 91 45 26 DA 
              48 80 09 29 	.db %10010001, %01000101, %00100110, %11011010, %01001000, %10000000, %00001001, %00101001
 1010 D1:DEF6 14 92 49 24 
              89 20 00 4A 	.db %00010100, %10010010, %01001001, %00100100, %10001001, %00100000, %00000000, %01001010
 1011 D1:DEFE 48 A4 92 48 
              92 64 20 12 	.db %01001000, %10100100, %10010010, %01001000, %10010010, %01100100, %00100000, %00010010
 1012 D1:DF06 52 29 24 92 
              92 49 21 00 	.db %01010010, %00101001, %00100100, %10010010, %10010010, %01001001, %00100001, %00000000
 1013 D1:DF0E 02 52 49 24 
              A4 92 49 21 	.db %00000010, %01010010, %01001001, %00100100, %10100100, %10010010, %01001001, %00100001
 1014 D1:DF16 20 12 92 48 
              C9 24 92 13 	.db %00100000, %00010010, %10010010, %01001000, %11001001, %00100100, %10010010, %00010011
 1015 D1:DF1E 08 00 12 92 
              49 19 24 90 	.db %00001000, %00000000, %00010010, %10010010, %01001001, %00011001, %00100100, %10010000
 1016 D1:DF26 A4 40 04 A4 
              92 46 49 21 	.db %10100100, %01000000, %00000100, %10100100, %10010010, %01000110, %01001001, %00100001
 1017 D1:DF2E 49 10 0A 29 
              24 8C 92 14 	.db %01001001, %00010000, %00001010, %00101001, %00100100, %10001100, %10010010, %00010100
 1018 D1:DF36 92 20 12 8A 
              44 99 21 49 	.db %10010010, %00100000, %00010010, %10001010, %01000100, %10011001, %00100001, %01001001
 1019 D1:DF3E 22 40 04 94 
              92 48 C2 52 	.db %00100010, %01000000, %00000100, %10010100, %10010010, %01001000, %11000010, %01010010
 1020 D1:DF46 25 22 00 25 
              14 92 48 82 	.db %00100101, %00100010, %00000000, %00100101, %00010100, %10010010, %01001000, %10000010
 1021 D1:DF4E 52 49 22 00 
              24 92 49 20 	.db %01010010, %01001001, %00100010, %00000000, %00100100, %10010010, %01001001, %00100000
 1022 D1:DF56 02 49 24 90 
              00 00 00 00 	.db %00000010, %01001001, %00100100, %10010000, %00000000, %00000000, %00000000, %00000000
 1023 D1:DF5E 00 00 00 00 
              00 -  -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000
 1024 D1:DF63 -  -  -  -  
 1025 D1:DF63 -  -  -  -  
Listing for file "ascent.asm"
  563 D1:DF63 -  -  -  -  #include "generated/SpriteEquates.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\SpriteEquates.txt"
    1 D1:DF63 -  -  -  -  Clouds_0_Fast_F .equ 13894080 ; vRam + 0 - 101
    2 D1:DF63 -  -  -  -  Clouds_1_Fast_F .equ 13894182 ; vRam + 102 - 201
    3 D1:DF63 -  -  -  -  Clouds_4_Fast_F .equ 13894282 ; vRam + 202 - 266
    4 D1:DF63 -  -  -  -  Clouds_3_Fast_F .equ 13894346 ; vRam + 266 - 373
    5 D1:DF63 -  -  -  -  Clouds_2_Fast_F .equ 13894454 ; vRam + 374 - 551
    6 D1:DF63 -  -  -  -  Frog_0_Slow .equ 13894631 ; vRam + 551 - 854
    7 D1:DF63 -  -  -  -  Frog_0_Slow_O .equ 13894935 ; vRam + 855 - 1158
    8 D1:DF63 -  -  -  -  Branches_8_Fast_F .equ 13895238 ; vRam + 1158 - 1252
    9 D1:DF63 -  -  -  -  Branches_15_Slow .equ 13895333 ; vRam + 1253 - 1365
   10 D1:DF63 -  -  -  -  Branches_3_Fast .equ 13895446 ; vRam + 1366 - 1533
   11 D1:DF63 -  -  -  -  Vines_2_Slow_F .equ 13895613 ; vRam + 1533 - 1751
   12 D1:DF63 -  -  -  -  Vines_1_Slow .equ 13895831 ; vRam + 1751 - 1895
   13 D1:DF63 -  -  -  -  Vines_9_Slow_O .equ 13895975 ; vRam + 1895 - 2072
   14 D1:DF63 -  -  -  -  Tree_0_Fast_F .equ 13896152 ; vRam + 2072 - 2323
   15 D1:DF63 -  -  -  -  Tree_3_Fast .equ 13896404 ; vRam + 2324 - 2581
   16 D1:DF63 -  -  -  -  Tree_8_Fast .equ 13896662 ; vRam + 2582 - 2839
   17 D1:DF63 -  -  -  -  Tree_9_Fast_F .equ 13896920 ; vRam + 2840 - 3097
   18 D1:DF63 -  -  -  -  Tree_8_Fast_F .equ 13897178 ; vRam + 3098 - 3355
   19 D1:DF63 -  -  -  -  Tree_4_Fast_F .equ 13897436 ; vRam + 3356 - 3613
   20 D1:DF63 -  -  -  -  Tree_0_Fast .equ 13897694 ; vRam + 3614 - 3865
   21 D1:DF63 -  -  -  -  Tree_6_Fast .equ 13897946 ; vRam + 3866 - 4123
   22 D1:DF63 -  -  -  -  Tree_10_Fast .equ 13898204 ; vRam + 4124 - 4381
   23 D1:DF63 -  -  -  -  Tree_7_Fast_F .equ 13898462 ; vRam + 4382 - 4639
   24 D1:DF63 -  -  -  -  Tree_1_Fast_F .equ 13898720 ; vRam + 4640 - 4894
   25 D1:DF63 -  -  -  -  Tree_1_Fast .equ 13898974 ; vRam + 4894 - 5148
   26 D1:DF63 -  -  -  -  Tree_5_Fast .equ 13899228 ; vRam + 5148 - 5405
   27 D1:DF63 -  -  -  -  Tree_11_Fast .equ 13899486 ; vRam + 5406 - 5663
   28 D1:DF63 -  -  -  -  Tree_5_Fast_F .equ 13899744 ; vRam + 5664 - 5921
   29 D1:DF63 -  -  -  -  Tree_2_Fast_F .equ 13900002 ; vRam + 5922 - 6173
   30 D1:DF63 -  -  -  -  Tree_11_Fast_F .equ 13900254 ; vRam + 6174 - 6431
   31 D1:DF63 -  -  -  -  Branches_1_Fast .equ 13900512 ; vRam + 6432 - 6584
   32 D1:DF63 -  -  -  -  Branches_2_Slow_O .equ 13900665 ; vRam + 6585 - 6808
   33 D1:DF63 -  -  -  -  Branches_3_Slow_O .equ 13900889 ; vRam + 6809 - 7027
   34 D1:DF63 -  -  -  -  Branches_5_Slow_O .equ 13901107 ; vRam + 7027 - 7235
   35 D1:DF63 -  -  -  -  Leaves_3_Slow_O .equ 13901315 ; vRam + 7235 - 7343
   36 D1:DF63 -  -  -  -  Vines_7_Slow .equ 13901423 ; vRam + 7343 - 7534
   37 D1:DF63 -  -  -  -  Vines_5_Slow_O_F .equ 13901615 ; vRam + 7535 - 7773
   38 D1:DF63 -  -  -  -  Vines_3_Slow_O_F .equ 13901853 ; vRam + 7773 - 7955
   39 D1:DF63 -  -  -  -  Vines_4_Slow_O .equ 13902035 ; vRam + 7955 - 8133
   40 D1:DF63 -  -  -  -  Vines_10_Slow .equ 13902213 ; vRam + 8133 - 8327
   41 D1:DF63 -  -  -  -  Vines_7_Slow_F .equ 13902407 ; vRam + 8327 - 8518
   42 D1:DF63 -  -  -  -  Vines_2_Slow .equ 13902599 ; vRam + 8519 - 8738
   43 D1:DF63 -  -  -  -  Leaves_2_Slow .equ 13902819 ; vRam + 8739 - 8843
   44 D1:DF63 -  -  -  -  Branches_1_Fast_F .equ 13902924 ; vRam + 8844 - 8996
   45 D1:DF63 -  -  -  -  Branches_2_Fast_F .equ 13903076 ; vRam + 8996 - 9165
   46 D1:DF63 -  -  -  -  Branches_5_Fast_F .equ 13903246 ; vRam + 9166 - 9326
   47 D1:DF63 -  -  -  -  Branches_14_Slow .equ 13903407 ; vRam + 9327 - 9435
   48 D1:DF63 -  -  -  -  Vines_10_Slow_O .equ 13903515 ; vRam + 9435 - 9626
   49 D1:DF63 -  -  -  -  Branches_0_Fast .equ 13903706 ; vRam + 9626 - 9777
   50 D1:DF63 -  -  -  -  GroundDirtDark_Fast .equ 13903858 ; vRam + 9778 - 9911
   51 D1:DF63 -  -  -  -  GroundDirtDark_Fast_F .equ 13903992 ; vRam + 9912 - 10045
   52 D1:DF63 -  -  -  -  GroundHumpDark_Fast .equ 13904126 ; vRam + 10046 - 10180
   53 D1:DF63 -  -  -  -  GroundHumpDark_Fast_F .equ 13904260 ; vRam + 10180 - 10314
   54 D1:DF63 -  -  -  -  GroundGrassSmall_Fast .equ 13904394 ; vRam + 10314 - 10481
   55 D1:DF63 -  -  -  -  GroundGrassSmall_Fast_F .equ 13904562 ; vRam + 10482 - 10649
   56 D1:DF63 -  -  -  -  Tree_16_Fast .equ 13904730 ; vRam + 10650 - 10735
   57 D1:DF63 -  -  -  -  Tree_17_Slow_O .equ 13904815 ; vRam + 10735 - 10839
   58 D1:DF63 -  -  -  -  Tree_17_Slow_O_F .equ 13904919 ; vRam + 10839 - 10940
   59 D1:DF63 -  -  -  -  Leaves_8_Fast .equ 13905020 ; vRam + 10940 - 11074
   60 D1:DF63 -  -  -  -  Tree_16_Slow_O .equ 13905155 ; vRam + 11075 - 11208
   61 D1:DF63 -  -  -  -  Tree_17_Slow_F .equ 13905289 ; vRam + 11209 - 11313
   62 D1:DF63 -  -  -  -  Tree_18_Slow_O .equ 13905393 ; vRam + 11313 - 11413
   63 D1:DF63 -  -  -  -  Tree_17_Slow .equ 13905493 ; vRam + 11413 - 11514
   64 D1:DF63 -  -  -  -  Tree_18_Slow_F .equ 13905595 ; vRam + 11515 - 11615
   65 D1:DF63 -  -  -  -  Tree_16_Slow_O_F .equ 13905695 ; vRam + 11615 - 11748
   66 D1:DF63 -  -  -  -  Leaves_2_Slow_F .equ 13905829 ; vRam + 11749 - 11852
   67 D1:DF63 -  -  -  -  Clouds_0_Fast .equ 13905932 ; vRam + 11852 - 11953
   68 D1:DF63 -  -  -  -  Clouds_1_Fast .equ 13906034 ; vRam + 11954 - 12053
   69 D1:DF63 -  -  -  -  Clouds_3_Fast .equ 13906134 ; vRam + 12054 - 12161
   70 D1:DF63 -  -  -  -  Clouds_4_Fast .equ 13906242 ; vRam + 12162 - 12226
   71 D1:DF63 -  -  -  -  Clouds_2_Fast .equ 13906306 ; vRam + 12226 - 12403
   72 D1:DF63 -  -  -  -  GroundDirtFull_Fast .equ 13906484 ; vRam + 12404 - 12581
   73 D1:DF63 -  -  -  -  GroundDirtFull_Fast_F .equ 13906662 ; vRam + 12582 - 12759
   74 D1:DF63 -  -  -  -  GroundDirtMound_Fast .equ 13906840 ; vRam + 12760 - 12887
   75 D1:DF63 -  -  -  -  GroundDirtMound_Fast_F .equ 13906968 ; vRam + 12888 - 13015
   76 D1:DF63 -  -  -  -  GroundGrassL4_Fast .equ 13907096 ; vRam + 13016 - 13153
   77 D1:DF63 -  -  -  -  GroundGrassL2_Fast .equ 13907234 ; vRam + 13154 - 13241
   78 D1:DF63 -  -  -  -  GroundGrassL5_Fast .equ 13907322 ; vRam + 13242 - 13372
   79 D1:DF63 -  -  -  -  GroundGrassL3_Fast .equ 13907452 ; vRam + 13372 - 13461
   80 D1:DF63 -  -  -  -  GroundGrassL1_Fast .equ 13907542 ; vRam + 13462 - 13576
   81 D1:DF63 -  -  -  -  GroundGrassL1_Fast_F .equ 13907656 ; vRam + 13576 - 13690
   82 D1:DF63 -  -  -  -  GroundGrassL3_Fast_F .equ 13907770 ; vRam + 13690 - 13779
   83 D1:DF63 -  -  -  -  Branches_10_Slow_O .equ 13907859 ; vRam + 13779 - 13943
   84 D1:DF63 -  -  -  -  Branches_9_Fast .equ 13908024 ; vRam + 13944 - 14074
   85 D1:DF63 -  -  -  -  Branches_16_Slow .equ 13908155 ; vRam + 14075 - 14183
   86 D1:DF63 -  -  -  -  Branches_13_Slow_O .equ 13908263 ; vRam + 14183 - 14253
   87 D1:DF63 -  -  -  -  Leaves_3_Slow .equ 13908333 ; vRam + 14253 - 14362
   88 D1:DF63 -  -  -  -  Leaves_7_Fast .equ 13908442 ; vRam + 14362 - 14497
   89 D1:DF63 -  -  -  -  Leaves_7_Fast_F .equ 13908578 ; vRam + 14498 - 14633
   90 D1:DF63 -  -  -  -  Branches_6_Slow .equ 13908713 ; vRam + 14633 - 14790
   91 D1:DF63 -  -  -  -  Branches_10_Slow_O_F .equ 13908871 ; vRam + 14791 - 14955
   92 D1:DF63 -  -  -  -  Branches_7_Slow_O .equ 13909035 ; vRam + 14955 - 15118
   93 D1:DF63 -  -  -  -  Branches_16_Slow_O .equ 13909199 ; vRam + 15119 - 15227
   94 D1:DF63 -  -  -  -  Branches_15_Slow_O .equ 13909307 ; vRam + 15227 - 15335
   95 D1:DF63 -  -  -  -  Branches_8_Slow_O_F .equ 13909415 ; vRam + 15335 - 15471
   96 D1:DF63 -  -  -  -  Branches_12_Slow_O .equ 13909551 ; vRam + 15471 - 15592
   97 D1:DF63 -  -  -  -  Branches_15_Slow_O_F .equ 13909673 ; vRam + 15593 - 15705
   98 D1:DF63 -  -  -  -  Leaves_2_Slow_O .equ 13909785 ; vRam + 15705 - 15810
   99 D1:DF63 -  -  -  -  Leaves_4_Slow .equ 13909891 ; vRam + 15811 - 15948
  100 D1:DF63 -  -  -  -  Leaves_4_Slow_F .equ 13910029 ; vRam + 15949 - 16087
  101 D1:DF63 -  -  -  -  Branches_7_Fast .equ 13910168 ; vRam + 16088 - 16209
  102 D1:DF63 -  -  -  -  Branches_8_Fast .equ 13910290 ; vRam + 16210 - 16304
  103 D1:DF63 -  -  -  -  Branches_10_Fast_F .equ 13910384 ; vRam + 16304 - 16423
  104 D1:DF63 -  -  -  -  Branches_11_Fast_F .equ 13910504 ; vRam + 16424 - 16527
  105 D1:DF63 -  -  -  -  Branches_16_Slow_O_F .equ 13910607 ; vRam + 16527 - 16635
  106 D1:DF63 -  -  -  -  Branches_13_Fast_F .equ 13910716 ; vRam + 16636 - 16685
  107 D1:DF63 -  -  -  -  Branches_14_Slow_O .equ 13910765 ; vRam + 16685 - 16796
  108 D1:DF63 -  -  -  -  Branches_15_Slow_F .equ 13910877 ; vRam + 16797 - 16905
  109 D1:DF63 -  -  -  -  Leaves_6_Slow .equ 13910985 ; vRam + 16905 - 17036
  110 D1:DF63 -  -  -  -  Branches_4_Fast_F .equ 13911116 ; vRam + 17036 - 17194
  111 D1:DF63 -  -  -  -  Branches_7_Fast_F .equ 13911274 ; vRam + 17194 - 17315
  112 D1:DF63 -  -  -  -  Branches_12_Fast_F .equ 13911396 ; vRam + 17316 - 17407
  113 D1:DF63 -  -  -  -  Leaves_4_Slow_O .equ 13911487 ; vRam + 17407 - 17549
  114 D1:DF63 -  -  -  -  Branches_8_Slow_O .equ 13911629 ; vRam + 17549 - 17685
  115 D1:DF63 -  -  -  -  Branches_10_Fast .equ 13911766 ; vRam + 17686 - 17805
  116 D1:DF63 -  -  -  -  Leaves_6_Slow_O .equ 13911885 ; vRam + 17805 - 17936
  117 D1:DF63 -  -  -  -  Leaves_3_Slow_F .equ 13912017 ; vRam + 17937 - 18045
  118 D1:DF63 -  -  -  -  Vines_8_Slow .equ 13912125 ; vRam + 18045 - 18246
  119 D1:DF63 -  -  -  -  Vines_2_Slow_O .equ 13912327 ; vRam + 18247 - 18463
  120 D1:DF63 -  -  -  -  Vines_3_Slow .equ 13912543 ; vRam + 18463 - 18639
  121 D1:DF63 -  -  -  -  Vines_5_Slow .equ 13912719 ; vRam + 18639 - 18881
  122 D1:DF63 -  -  -  -  Vines_9_Slow .equ 13912961 ; vRam + 18881 - 19058
  123 D1:DF63 -  -  -  -  Vines_4_Slow_F .equ 13913139 ; vRam + 19059 - 19242
  124 D1:DF63 -  -  -  -  Vines_1_Slow_O .equ 13913323 ; vRam + 19243 - 19383
  125 D1:DF63 -  -  -  -  Vines_9_Slow_O_F .equ 13913463 ; vRam + 19383 - 19560
  126 D1:DF63 -  -  -  -  Vines_3_Slow_F .equ 13913641 ; vRam + 19561 - 19736
  127 D1:DF63 -  -  -  -  Vines_8_Slow_F .equ 13913817 ; vRam + 19737 - 19938
  128 D1:DF63 -  -  -  -  Branches_9_Slow_O .equ 13914019 ; vRam + 19939 - 20114
  129 D1:DF63 -  -  -  -  Vines_2_Slow_O_F .equ 13914195 ; vRam + 20115 - 20331
  130 D1:DF63 -  -  -  -  Tree_2_Fast .equ 13914412 ; vRam + 20332 - 20583
  131 D1:DF63 -  -  -  -  Tree_4_Fast .equ 13914664 ; vRam + 20584 - 20841
  132 D1:DF63 -  -  -  -  Tree_7_Fast .equ 13914922 ; vRam + 20842 - 21099
  133 D1:DF63 -  -  -  -  Tree_9_Fast .equ 13915180 ; vRam + 21100 - 21357
  134 D1:DF63 -  -  -  -  Tree_6_Fast_F .equ 13915438 ; vRam + 21358 - 21615
  135 D1:DF63 -  -  -  -  Tree_3_Fast_F .equ 13915696 ; vRam + 21616 - 21873
  136 D1:DF63 -  -  -  -  Branches_1_Slow_O .equ 13915953 ; vRam + 21873 - 22070
  137 D1:DF63 -  -  -  -  Branches_4_Slow_O .equ 13916151 ; vRam + 22071 - 22274
  138 D1:DF63 -  -  -  -  Leaves_3_Slow_O_F .equ 13916355 ; vRam + 22275 - 22385
  139 D1:DF63 -  -  -  -  Vines_7_Slow_O .equ 13916465 ; vRam + 22385 - 22580
  140 D1:DF63 -  -  -  -  Vines_8_Slow_O .equ 13916661 ; vRam + 22581 - 22778
  141 D1:DF63 -  -  -  -  Vines_8_Slow_O_F .equ 13916859 ; vRam + 22779 - 22976
  142 D1:DF63 -  -  -  -  Vines_6_Slow .equ 13917057 ; vRam + 22977 - 23159
  143 D1:DF63 -  -  -  -  Branches_0_Fast_F .equ 13917240 ; vRam + 23160 - 23311
  144 D1:DF63 -  -  -  -  Branches_9_Fast_F .equ 13917392 ; vRam + 23312 - 23442
  145 D1:DF63 -  -  -  -  Branches_5_Fast .equ 13907096 ; vRam + 13016 - 13176
  146 D1:DF63 -  -  -  -  Branches_4_Fast .equ 13907256 ; vRam + 13176 - 13334
  147 D1:DF63 -  -  -  -  Branches_2_Fast .equ 13907414 ; vRam + 13334 - 13503
  148 D1:DF63 -  -  -  -  Vines_3_Slow_O .equ 13907583 ; vRam + 13503 - 13684
Listing for file "ascent.asm"
  564 D1:DF63 -  -  -  -  #include "generated/Sprite_Groups.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Groups.txt"
    1 D1:DF63 -  -  -  -  Sprite_Groups:
    2 D1:DF63 C3 DF D1 -  	.dl SG_GroundChunk3
    3 D1:DF66 E5 DF D1 -  	.dl SG_GroundGrass
    4 D1:DF69 17 E0 D1 -  	.dl SG_Branch3
    5 D1:DF6C 3D E0 D1 -  	.dl SG_Branch7
    6 D1:DF6F 8F E0 D1 -  	.dl SG_Branch4
    7 D1:DF72 DD E0 D1 -  	.dl SG_Branch5
    8 D1:DF75 1B E1 D1 -  	.dl SG_Vine3
    9 D1:DF78 31 E1 D1 -  	.dl SG_Vine6
   10 D1:DF7B 47 E1 D1 -  	.dl SG_Branch6
   11 D1:DF7E 79 E1 D1 -  	.dl SG_Vine2
   12 D1:DF81 8B E1 D1 -  	.dl SG_Vine7
   13 D1:DF84 A1 E1 D1 -  	.dl SG_Branch2
   14 D1:DF87 E7 E1 D1 -  	.dl SG_GroundChunk2
   15 D1:DF8A 01 E2 D1 -  	.dl SG_GroundChunk1
   16 D1:DF8D 1F E2 D1 -  	.dl SG_Root1
   17 D1:DF90 2D E2 D1 -  	.dl SG_TreeRow3
   18 D1:DF93 4B E2 D1 -  	.dl SG_TreeRow5
   19 D1:DF96 69 E2 D1 -  	.dl SG_TreeRow1
   20 D1:DF99 87 E2 D1 -  	.dl SG_TreeRow2
   21 D1:DF9C A5 E2 D1 -  	.dl SG_TreeRow4
   22 D1:DF9F C3 E2 D1 -  	.dl SG_Branch1
   23 D1:DFA2 09 E3 D1 -  	.dl SG_Vine4
   24 D1:DFA5 2F E3 D1 -  	.dl SG_Vine5
   25 D1:DFA8 41 E3 D1 -  	.dl SG_BranchBase3
   26 D1:DFAB 53 E3 D1 -  	.dl SG_Vine1
   27 D1:DFAE 65 E3 D1 -  	.dl SG_BranchBase1
   28 D1:DFB1 83 E3 D1 -  	.dl SG_BranchBase2
   29 D1:DFB4 A1 E3 D1 -  	.dl SG_BranchBase4
   30 D1:DFB7 B7 E3 D1 -  	.dl SG_DarkGroundChunk
   31 D1:DFBA D5 E3 D1 -  	.dl SG_BGTree1
   32 D1:DFBD F7 E3 D1 -  	.dl SG_BGTree2
   33 D1:DFC0 19 E4 D1 -  	.dl SG_Cloud1
   34 D1:DFC3 -  -  -  -  
   35 D1:DFC3 -  -  -  -  
   36 D1:DFC3 -  -  -  -  
   37 D1:DFC3 -  -  -  -  SG_GroundChunk3:
   38 D1:DFC3 00 -  -  -  	.db 0
   39 D1:DFC4 08 -  -  -  	.db 8
   40 D1:DFC5 0C 10 00 00 	.db 12, 16, 0, 0  ;GroundDirtFull_Fast
   41 D1:DFC9 0C 10 08 00 	.db 12, 16, 8, 0  ;GroundDirtFull_Fast
   42 D1:DFCD 0C 10 10 01 	.db 12, 16, 16, 1  ;GroundDirtFull_Fast_F
   43 D1:DFD1 0C 10 18 01 	.db 12, 16, 24, 1  ;GroundDirtFull_Fast_F
   44 D1:DFD5 00 0C 00 02 	.db 0, 12, 0, 2  ;GroundDirtMound_Fast
   45 D1:DFD9 00 0C 08 02 	.db 0, 12, 8, 2  ;GroundDirtMound_Fast
   46 D1:DFDD 01 0C 10 03 	.db 1, 12, 16, 3  ;GroundDirtMound_Fast_F
   47 D1:DFE1 00 0C 18 03 	.db 0, 12, 24, 3  ;GroundDirtMound_Fast_F
   48 D1:DFE5 -  -  -  -  
   49 D1:DFE5 -  -  -  -  SG_GroundGrass:
   50 D1:DFE5 00 -  -  -  	.db 0
   51 D1:DFE6 0C -  -  -  	.db 12
   52 D1:DFE7 18 10 00 04 	.db 24, 16, 0, 4  ;GroundGrassL4_Fast
   53 D1:DFEB 09 10 02 05 	.db 9, 16, 2, 5  ;GroundGrassL2_Fast
   54 D1:DFEF 17 10 0A 06 	.db 23, 16, 10, 6  ;GroundGrassL5_Fast
   55 D1:DFF3 09 0E 0B 07 	.db 9, 14, 11, 7  ;GroundGrassL3_Fast
   56 D1:DFF7 17 0E 07 07 	.db 23, 14, 7, 7  ;GroundGrassL3_Fast
   57 D1:DFFB 01 10 11 08 	.db 1, 16, 17, 8  ;GroundGrassL1_Fast
   58 D1:DFFF 18 10 19 04 	.db 24, 16, 25, 4  ;GroundGrassL4_Fast
   59 D1:E003 00 10 1D 09 	.db 0, 16, 29, 9  ;GroundGrassL1_Fast_F
   60 D1:E007 02 10 22 05 	.db 2, 16, 34, 5  ;GroundGrassL2_Fast
   61 D1:E00B 00 0E 01 07 	.db 0, 14, 1, 7  ;GroundGrassL3_Fast
   62 D1:E00F 03 0E 08 0A 	.db 3, 14, 8, 10  ;GroundGrassL3_Fast_F
   63 D1:E013 0E 10 1A 06 	.db 14, 16, 26, 6  ;GroundGrassL5_Fast
   64 D1:E017 -  -  -  -  
   65 D1:E017 -  -  -  -  SG_Branch3:
   66 D1:E017 00 -  -  -  	.db 0
   67 D1:E018 09 -  -  -  	.db 9
   68 D1:E019 03 0E 15 0B 	.db 3, 14, 21, 11  ;Branches_9_Fast
   69 D1:E01D 11 06 06 0C 	.db 17, 6, 6, 12  ;Branches_13_Slow_O
   70 D1:E021 0A 0E 0D 0D 	.db 10, 14, 13, 13  ;Branches_10_Slow_O
   71 D1:E025 15 0D 0B 0E 	.db 21, 13, 11, 14  ;Branches_16_Slow
   72 D1:E029 00 0C 13 0F 	.db 0, 12, 19, 15  ;Leaves_3_Slow
   73 D1:E02D 08 0E 04 10 	.db 8, 14, 4, 16  ;Leaves_7_Fast
   74 D1:E031 0E 0E 00 10 	.db 14, 14, 0, 16  ;Leaves_7_Fast
   75 D1:E035 1A 0E 08 11 	.db 26, 14, 8, 17  ;Leaves_7_Fast_F
   76 D1:E039 17 0E 02 11 	.db 23, 14, 2, 17  ;Leaves_7_Fast_F
   77 D1:E03D -  -  -  -  
   78 D1:E03D -  -  -  -  SG_Branch7:
   79 D1:E03D 00 -  -  -  	.db 0
   80 D1:E03E 14 -  -  -  	.db 20
   81 D1:E03F 36 0E 07 12 	.db 54, 14, 7, 18  ;Branches_8_Slow_O
   82 D1:E043 15 0E 02 10 	.db 21, 14, 2, 16  ;Leaves_7_Fast
   83 D1:E047 0A 0E 11 11 	.db 10, 14, 17, 17  ;Leaves_7_Fast_F
   84 D1:E04B 12 0E 08 11 	.db 18, 14, 8, 17  ;Leaves_7_Fast_F
   85 D1:E04F 00 0E 00 10 	.db 0, 14, 0, 16  ;Leaves_7_Fast
   86 D1:E053 0D 0E 00 11 	.db 13, 14, 0, 17  ;Leaves_7_Fast_F
   87 D1:E057 06 0E 07 11 	.db 6, 14, 7, 17  ;Leaves_7_Fast_F
   88 D1:E05B 10 0E 1D 10 	.db 16, 14, 29, 16  ;Leaves_7_Fast
   89 D1:E05F 32 0C 0D 13 	.db 50, 12, 13, 19  ;Leaves_3_Slow_F
   90 D1:E063 25 0E 24 10 	.db 37, 14, 36, 16  ;Leaves_7_Fast
   91 D1:E067 19 0E 1E 14 	.db 25, 14, 30, 20  ;Branches_14_Slow_O
   92 D1:E06B 14 0E 11 15 	.db 20, 14, 17, 21  ;Branches_15_Slow_O_F
   93 D1:E06F 15 0E 0A 16 	.db 21, 14, 10, 22  ;Branches_15_Slow_O
   94 D1:E073 23 0A 17 17 	.db 35, 10, 23, 23  ;Branches_11_Fast_F
   95 D1:E077 25 06 20 18 	.db 37, 6, 32, 24  ;Branches_13_Fast_F
   96 D1:E07B 1F 0E 26 10 	.db 31, 14, 38, 16  ;Leaves_7_Fast
   97 D1:E07F 1D 0E 0F 19 	.db 29, 14, 15, 25  ;Branches_10_Fast_F
   98 D1:E083 26 0E 0F 1A 	.db 38, 14, 15, 26  ;Branches_10_Fast
   99 D1:E087 2E 0E 0B 12 	.db 46, 14, 11, 18  ;Branches_8_Slow_O
  100 D1:E08B 16 0D 0C 1B 	.db 22, 13, 12, 27  ;Leaves_6_Slow_O
  101 D1:E08F -  -  -  -  
  102 D1:E08F -  -  -  -  SG_Branch4:
  103 D1:E08F 00 -  -  -  	.db 0
  104 D1:E090 13 -  -  -  	.db 19
  105 D1:E091 2B 0B 1A 1C 	.db 43, 11, 26, 28  ;Branches_6_Slow
  106 D1:E095 24 0E 11 1D 	.db 36, 14, 17, 29  ;Branches_10_Slow_O_F
  107 D1:E099 11 0E 08 11 	.db 17, 14, 8, 17  ;Leaves_7_Fast_F
  108 D1:E09D 2E 0E 09 0D 	.db 46, 14, 9, 13  ;Branches_10_Slow_O
  109 D1:E0A1 02 0E 0A 11 	.db 2, 14, 10, 17  ;Leaves_7_Fast_F
  110 D1:E0A5 2F 0E 05 16 	.db 47, 14, 5, 22  ;Branches_15_Slow_O
  111 D1:E0A9 07 0E 05 10 	.db 7, 14, 5, 16  ;Leaves_7_Fast
  112 D1:E0AD 1A 0A 05 1E 	.db 26, 10, 5, 30  ;Branches_12_Slow_O
  113 D1:E0B1 13 0E 0E 15 	.db 19, 14, 14, 21  ;Branches_15_Slow_O_F
  114 D1:E0B5 28 0E 02 11 	.db 40, 14, 2, 17  ;Leaves_7_Fast_F
  115 D1:E0B9 21 0B 09 1F 	.db 33, 11, 9, 31  ;Leaves_4_Slow
  116 D1:E0BD 09 0E 0F 10 	.db 9, 14, 15, 16  ;Leaves_7_Fast
  117 D1:E0C1 11 0E 00 10 	.db 17, 14, 0, 16  ;Leaves_7_Fast
  118 D1:E0C5 3E 0E 03 10 	.db 62, 14, 3, 16  ;Leaves_7_Fast
  119 D1:E0C9 1D 0E 0E 20 	.db 29, 14, 14, 32  ;Branches_8_Slow_O_F
  120 D1:E0CD 3A 0D 06 21 	.db 58, 13, 6, 33  ;Branches_16_Slow_O
  121 D1:E0D1 2C 0A 10 22 	.db 44, 10, 16, 34  ;Branches_7_Slow_O
  122 D1:E0D5 2E 0B 19 23 	.db 46, 11, 25, 35  ;Leaves_4_Slow_F
  123 D1:E0D9 2C 09 06 24 	.db 44, 9, 6, 36  ;Leaves_2_Slow_O
  124 D1:E0DD -  -  -  -  
  125 D1:E0DD -  -  -  -  SG_Branch5:
  126 D1:E0DD 00 -  -  -  	.db 0
  127 D1:E0DE 0F -  -  -  	.db 15
  128 D1:E0DF 22 0A 00 25 	.db 34, 10, 0, 37  ;Branches_7_Fast
  129 D1:E0E3 1B 0E 09 26 	.db 27, 14, 9, 38  ;Branches_8_Fast
  130 D1:E0E7 23 0A 0B 17 	.db 35, 10, 11, 23  ;Branches_11_Fast_F
  131 D1:E0EB 24 06 14 18 	.db 36, 6, 20, 24  ;Branches_13_Fast_F
  132 D1:E0EF 0D 0E 0C 14 	.db 13, 14, 12, 20  ;Branches_14_Slow_O
  133 D1:E0F3 13 0E 0E 27 	.db 19, 14, 14, 39  ;Branches_15_Slow_F
  134 D1:E0F7 1C 0D 02 28 	.db 28, 13, 2, 40  ;Leaves_6_Slow
  135 D1:E0FB 27 0E 08 19 	.db 39, 14, 8, 25  ;Branches_10_Fast_F
  136 D1:E0FF 30 0D 0D 29 	.db 48, 13, 13, 41  ;Branches_16_Slow_O_F
  137 D1:E103 04 0E 0A 10 	.db 4, 14, 10, 16  ;Leaves_7_Fast
  138 D1:E107 0B 0E 0F 10 	.db 11, 14, 15, 16  ;Leaves_7_Fast
  139 D1:E10B 1C 0E 17 10 	.db 28, 14, 23, 16  ;Leaves_7_Fast
  140 D1:E10F 20 0E 1A 10 	.db 32, 14, 26, 16  ;Leaves_7_Fast
  141 D1:E113 26 0E 15 10 	.db 38, 14, 21, 16  ;Leaves_7_Fast
  142 D1:E117 34 0E 0F 10 	.db 52, 14, 15, 16  ;Leaves_7_Fast
  143 D1:E11B -  -  -  -  
  144 D1:E11B -  -  -  -  SG_Vine3:
  145 D1:E11B 00 -  -  -  	.db 0
  146 D1:E11C 05 -  -  -  	.db 5
  147 D1:E11D 16 18 17 2A 	.db 22, 24, 23, 42  ;Vines_8_Slow
  148 D1:E121 2E 18 15 2A 	.db 46, 24, 21, 42  ;Vines_8_Slow
  149 D1:E125 45 13 0B 2B 	.db 69, 19, 11, 43  ;Vines_2_Slow_O
  150 D1:E129 56 10 00 2C 	.db 86, 16, 0, 44  ;Vines_3_Slow
  151 D1:E12D 00 17 1A 2D 	.db 0, 23, 26, 45  ;Vines_5_Slow
  152 D1:E131 -  -  -  -  
  153 D1:E131 -  -  -  -  SG_Vine6:
  154 D1:E131 00 -  -  -  	.db 0
  155 D1:E132 05 -  -  -  	.db 5
  156 D1:E133 00 0D 00 2E 	.db 0, 13, 0, 46  ;Vines_4_Slow_F
  157 D1:E137 09 0D 0B 2E 	.db 9, 13, 11, 46  ;Vines_4_Slow_F
  158 D1:E13B 0F 09 16 2F 	.db 15, 9, 22, 47  ;Vines_1_Slow_O
  159 D1:E13F 06 10 22 2C 	.db 6, 16, 34, 44  ;Vines_3_Slow
  160 D1:E143 00 0B 2D 30 	.db 0, 11, 45, 48  ;Vines_9_Slow
  161 D1:E147 -  -  -  -  
  162 D1:E147 -  -  -  -  SG_Branch6:
  163 D1:E147 00 -  -  -  	.db 0
  164 D1:E148 0C -  -  -  	.db 12
  165 D1:E149 12 0E 00 33 	.db 18, 14, 0, 51  ;Branches_4_Fast_F
  166 D1:E14D 13 0A 09 34 	.db 19, 10, 9, 52  ;Branches_7_Fast_F
  167 D1:E151 0E 0E 12 0B 	.db 14, 14, 18, 11  ;Branches_9_Fast
  168 D1:E155 0D 0A 1B 35 	.db 13, 10, 27, 53  ;Branches_12_Fast_F
  169 D1:E159 1D 0B 05 36 	.db 29, 11, 5, 54  ;Leaves_4_Slow_O
  170 D1:E15D 06 0E 0D 14 	.db 6, 14, 13, 20  ;Branches_14_Slow_O
  171 D1:E161 16 0D 16 29 	.db 22, 13, 22, 41  ;Branches_16_Slow_O_F
  172 D1:E165 00 0E 0C 10 	.db 0, 14, 12, 16  ;Leaves_7_Fast
  173 D1:E169 0A 0E 23 10 	.db 10, 14, 35, 16  ;Leaves_7_Fast
  174 D1:E16D 02 0E 1E 11 	.db 2, 14, 30, 17  ;Leaves_7_Fast_F
  175 D1:E171 1C 0E 18 11 	.db 28, 14, 24, 17  ;Leaves_7_Fast_F
  176 D1:E175 14 0E 1C 11 	.db 20, 14, 28, 17  ;Leaves_7_Fast_F
  177 D1:E179 -  -  -  -  
  178 D1:E179 -  -  -  -  SG_Vine2:
  179 D1:E179 00 -  -  -  	.db 0
  180 D1:E17A 04 -  -  -  	.db 4
  181 D1:E17B 00 13 00 37 	.db 0, 19, 0, 55  ;Vines_2_Slow_F
  182 D1:E17F 11 13 0A 37 	.db 17, 19, 10, 55  ;Vines_2_Slow_F
  183 D1:E183 22 10 14 32 	.db 34, 16, 20, 50  ;Vines_3_Slow_F
  184 D1:E187 2B 09 20 38 	.db 43, 9, 32, 56  ;Vines_1_Slow
  185 D1:E18B -  -  -  -  
  186 D1:E18B -  -  -  -  SG_Vine7:
  187 D1:E18B 00 -  -  -  	.db 0
  188 D1:E18C 05 -  -  -  	.db 5
  189 D1:E18D 00 18 02 39 	.db 0, 24, 2, 57  ;Vines_8_Slow_O
  190 D1:E191 18 18 01 3A 	.db 24, 24, 1, 58  ;Vines_8_Slow_O_F
  191 D1:E195 30 18 04 3B 	.db 48, 24, 4, 59  ;Vines_6_Slow
  192 D1:E199 47 0B 02 36 	.db 71, 11, 2, 54  ;Leaves_4_Slow_O
  193 D1:E19D 35 0C 00 0F 	.db 53, 12, 0, 15  ;Leaves_3_Slow
  194 D1:E1A1 -  -  -  -  
  195 D1:E1A1 -  -  -  -  SG_Branch2:
  196 D1:E1A1 00 -  -  -  	.db 0
  197 D1:E1A2 11 -  -  -  	.db 17
  198 D1:E1A3 24 0E 13 3C 	.db 36, 14, 19, 60  ;Branches_8_Fast_F
  199 D1:E1A7 1D 0E 0F 20 	.db 29, 14, 15, 32  ;Branches_8_Slow_O_F
  200 D1:E1AB 15 0E 08 19 	.db 21, 14, 8, 25  ;Branches_10_Fast_F
  201 D1:E1AF 0E 0E 04 16 	.db 14, 14, 4, 22  ;Branches_15_Slow_O
  202 D1:E1B3 18 0E 12 1A 	.db 24, 14, 18, 26  ;Branches_10_Fast
  203 D1:E1B7 11 0E 14 3D 	.db 17, 14, 20, 61  ;Branches_15_Slow
  204 D1:E1BB 17 06 1B 18 	.db 23, 6, 27, 24  ;Branches_13_Fast_F
  205 D1:E1BF 0B 0E 00 11 	.db 11, 14, 0, 17  ;Leaves_7_Fast_F
  206 D1:E1C3 18 0E 01 11 	.db 24, 14, 1, 17  ;Leaves_7_Fast_F
  207 D1:E1C7 1F 0E 05 10 	.db 31, 14, 5, 16  ;Leaves_7_Fast
  208 D1:E1CB 06 0E 06 10 	.db 6, 14, 6, 16  ;Leaves_7_Fast
  209 D1:E1CF 1C 0D 07 21 	.db 28, 13, 7, 33  ;Branches_16_Slow_O
  210 D1:E1D3 06 0E 10 11 	.db 6, 14, 16, 17  ;Leaves_7_Fast_F
  211 D1:E1D7 10 0E 19 27 	.db 16, 14, 25, 39  ;Branches_15_Slow_F
  212 D1:E1DB 07 0E 18 10 	.db 7, 14, 24, 16  ;Leaves_7_Fast
  213 D1:E1DF 11 0E 1F 11 	.db 17, 14, 31, 17  ;Leaves_7_Fast_F
  214 D1:E1E3 1F 09 14 24 	.db 31, 9, 20, 36  ;Leaves_2_Slow_O
  215 D1:E1E7 -  -  -  -  
  216 D1:E1E7 -  -  -  -  SG_GroundChunk2:
  217 D1:E1E7 00 -  -  -  	.db 0
  218 D1:E1E8 06 -  -  -  	.db 6
  219 D1:E1E9 0E 10 00 01 	.db 14, 16, 0, 1  ;GroundDirtFull_Fast_F
  220 D1:E1ED 0F 10 08 00 	.db 15, 16, 8, 0  ;GroundDirtFull_Fast
  221 D1:E1F1 0E 10 10 01 	.db 14, 16, 16, 1  ;GroundDirtFull_Fast_F
  222 D1:E1F5 02 0C 00 02 	.db 2, 12, 0, 2  ;GroundDirtMound_Fast
  223 D1:E1F9 03 0C 08 02 	.db 3, 12, 8, 2  ;GroundDirtMound_Fast
  224 D1:E1FD 02 0C 10 02 	.db 2, 12, 16, 2  ;GroundDirtMound_Fast
  225 D1:E201 -  -  -  -  
  226 D1:E201 -  -  -  -  SG_GroundChunk1:
  227 D1:E201 00 -  -  -  	.db 0
  228 D1:E202 07 -  -  -  	.db 7
  229 D1:E203 10 10 00 00 	.db 16, 16, 0, 0  ;GroundDirtFull_Fast
  230 D1:E207 0F 10 08 00 	.db 15, 16, 8, 0  ;GroundDirtFull_Fast
  231 D1:E20B 0E 10 10 01 	.db 14, 16, 16, 1  ;GroundDirtFull_Fast_F
  232 D1:E20F 02 0C 10 02 	.db 2, 12, 16, 2  ;GroundDirtMound_Fast
  233 D1:E213 03 0C 08 02 	.db 3, 12, 8, 2  ;GroundDirtMound_Fast
  234 D1:E217 04 0C 00 03 	.db 4, 12, 0, 3  ;GroundDirtMound_Fast_F
  235 D1:E21B 00 0C 0C 02 	.db 0, 12, 12, 2  ;GroundDirtMound_Fast
  236 D1:E21F -  -  -  -  
  237 D1:E21F -  -  -  -  SG_Root1:
  238 D1:E21F 00 -  -  -  	.db 0
  239 D1:E220 03 -  -  -  	.db 3
  240 D1:E221 06 0E 00 26 	.db 6, 14, 0, 38  ;Branches_8_Fast
  241 D1:E225 03 0E 0D 20 	.db 3, 14, 13, 32  ;Branches_8_Slow_O_F
  242 D1:E229 00 0E 04 45 	.db 0, 14, 4, 69  ;Branches_9_Slow_O
  243 D1:E22D -  -  -  -  
  244 D1:E22D -  -  -  -  SG_TreeRow3:
  245 D1:E22D 00 -  -  -  	.db 0
  246 D1:E22E 07 -  -  -  	.db 7
  247 D1:E22F 00 10 00 46 	.db 0, 16, 0, 70  ;Tree_2_Fast
  248 D1:E233 00 10 0D 47 	.db 0, 16, 13, 71  ;Tree_4_Fast
  249 D1:E237 00 10 1A 48 	.db 0, 16, 26, 72  ;Tree_7_Fast
  250 D1:E23B 00 10 27 49 	.db 0, 16, 39, 73  ;Tree_9_Fast
  251 D1:E23F 00 10 34 4A 	.db 0, 16, 52, 74  ;Tree_6_Fast_F
  252 D1:E243 00 10 41 4B 	.db 0, 16, 65, 75  ;Tree_3_Fast_F
  253 D1:E247 00 10 4E 4C 	.db 0, 16, 78, 76  ;Tree_0_Fast_F
  254 D1:E24B -  -  -  -  
  255 D1:E24B -  -  -  -  SG_TreeRow5:
  256 D1:E24B 00 -  -  -  	.db 0
  257 D1:E24C 07 -  -  -  	.db 7
  258 D1:E24D 00 10 00 46 	.db 0, 16, 0, 70  ;Tree_2_Fast
  259 D1:E251 00 10 0D 4D 	.db 0, 16, 13, 77  ;Tree_3_Fast
  260 D1:E255 00 10 1A 4E 	.db 0, 16, 26, 78  ;Tree_8_Fast
  261 D1:E259 00 10 27 4F 	.db 0, 16, 39, 79  ;Tree_9_Fast_F
  262 D1:E25D 00 10 34 50 	.db 0, 16, 52, 80  ;Tree_8_Fast_F
  263 D1:E261 00 10 41 51 	.db 0, 16, 65, 81  ;Tree_4_Fast_F
  264 D1:E265 00 10 4E 4C 	.db 0, 16, 78, 76  ;Tree_0_Fast_F
  265 D1:E269 -  -  -  -  
  266 D1:E269 -  -  -  -  SG_TreeRow1:
  267 D1:E269 00 -  -  -  	.db 0
  268 D1:E26A 07 -  -  -  	.db 7
  269 D1:E26B 00 10 00 52 	.db 0, 16, 0, 82  ;Tree_0_Fast
  270 D1:E26F 00 10 0D 4D 	.db 0, 16, 13, 77  ;Tree_3_Fast
  271 D1:E273 00 10 1A 53 	.db 0, 16, 26, 83  ;Tree_6_Fast
  272 D1:E277 00 10 27 54 	.db 0, 16, 39, 84  ;Tree_10_Fast
  273 D1:E27B 00 10 34 55 	.db 0, 16, 52, 85  ;Tree_7_Fast_F
  274 D1:E27F 00 10 41 51 	.db 0, 16, 65, 81  ;Tree_4_Fast_F
  275 D1:E283 00 10 4E 56 	.db 0, 16, 78, 86  ;Tree_1_Fast_F
  276 D1:E287 -  -  -  -  
  277 D1:E287 -  -  -  -  SG_TreeRow2:
  278 D1:E287 00 -  -  -  	.db 0
  279 D1:E288 07 -  -  -  	.db 7
  280 D1:E289 00 10 00 57 	.db 0, 16, 0, 87  ;Tree_1_Fast
  281 D1:E28D 00 10 0D 58 	.db 0, 16, 13, 88  ;Tree_5_Fast
  282 D1:E291 00 10 1A 4E 	.db 0, 16, 26, 78  ;Tree_8_Fast
  283 D1:E295 00 10 27 59 	.db 0, 16, 39, 89  ;Tree_11_Fast
  284 D1:E299 00 10 34 50 	.db 0, 16, 52, 80  ;Tree_8_Fast_F
  285 D1:E29D 00 10 41 5A 	.db 0, 16, 65, 90  ;Tree_5_Fast_F
  286 D1:E2A1 00 10 4E 5B 	.db 0, 16, 78, 91  ;Tree_2_Fast_F
  287 D1:E2A5 -  -  -  -  
  288 D1:E2A5 -  -  -  -  SG_TreeRow4:
  289 D1:E2A5 00 -  -  -  	.db 0
  290 D1:E2A6 07 -  -  -  	.db 7
  291 D1:E2A7 00 10 00 52 	.db 0, 16, 0, 82  ;Tree_0_Fast
  292 D1:E2AB 00 10 0D 58 	.db 0, 16, 13, 88  ;Tree_5_Fast
  293 D1:E2AF 00 10 1A 53 	.db 0, 16, 26, 83  ;Tree_6_Fast
  294 D1:E2B3 00 10 27 5C 	.db 0, 16, 39, 92  ;Tree_11_Fast_F
  295 D1:E2B7 00 10 34 4A 	.db 0, 16, 52, 74  ;Tree_6_Fast_F
  296 D1:E2BB 00 10 41 4B 	.db 0, 16, 65, 75  ;Tree_3_Fast_F
  297 D1:E2BF 00 10 4E 56 	.db 0, 16, 78, 86  ;Tree_1_Fast_F
  298 D1:E2C3 -  -  -  -  
  299 D1:E2C3 -  -  -  -  SG_Branch1:
  300 D1:E2C3 00 -  -  -  	.db 0
  301 D1:E2C4 11 -  -  -  	.db 17
  302 D1:E2C5 0D 0E 34 5D 	.db 13, 14, 52, 93  ;Branches_1_Fast
  303 D1:E2C9 0D 0E 2B 5E 	.db 13, 14, 43, 94  ;Branches_2_Slow_O
  304 D1:E2CD 0E 0E 22 5F 	.db 14, 14, 34, 95  ;Branches_3_Slow_O
  305 D1:E2D1 0F 0E 19 60 	.db 15, 14, 25, 96  ;Branches_5_Slow_O
  306 D1:E2D5 11 0A 10 22 	.db 17, 10, 16, 34  ;Branches_7_Slow_O
  307 D1:E2D9 11 0A 07 1E 	.db 17, 10, 7, 30  ;Branches_12_Slow_O
  308 D1:E2DD 08 0E 17 3D 	.db 8, 14, 23, 61  ;Branches_15_Slow
  309 D1:E2E1 13 0E 21 12 	.db 19, 14, 33, 18  ;Branches_8_Slow_O
  310 D1:E2E5 1D 0D 1E 21 	.db 29, 13, 30, 33  ;Branches_16_Slow_O
  311 D1:E2E9 15 0E 06 10 	.db 21, 14, 6, 16  ;Leaves_7_Fast
  312 D1:E2ED 00 0E 14 10 	.db 0, 14, 20, 16  ;Leaves_7_Fast
  313 D1:E2F1 07 0E 07 10 	.db 7, 14, 7, 16  ;Leaves_7_Fast
  314 D1:E2F5 05 0E 02 11 	.db 5, 14, 2, 17  ;Leaves_7_Fast_F
  315 D1:E2F9 0C 0E 00 10 	.db 12, 14, 0, 16  ;Leaves_7_Fast
  316 D1:E2FD 20 0E 1C 10 	.db 32, 14, 28, 16  ;Leaves_7_Fast
  317 D1:E301 13 0C 1D 61 	.db 19, 12, 29, 97  ;Leaves_3_Slow_O
  318 D1:E305 18 0B 28 36 	.db 24, 11, 40, 54  ;Leaves_4_Slow_O
  319 D1:E309 -  -  -  -  
  320 D1:E309 -  -  -  -  SG_Vine4:
  321 D1:E309 00 -  -  -  	.db 0
  322 D1:E30A 09 -  -  -  	.db 9
  323 D1:E30B 00 18 00 62 	.db 0, 24, 0, 98  ;Vines_7_Slow
  324 D1:E30F 18 18 02 40 	.db 24, 24, 2, 64  ;Vines_8_Slow_F
  325 D1:E313 2F 17 05 63 	.db 47, 23, 5, 99  ;Vines_5_Slow_O_F
  326 D1:E317 44 13 0F 37 	.db 68, 19, 15, 55  ;Vines_2_Slow_F
  327 D1:E31B 55 10 19 64 	.db 85, 16, 25, 100  ;Vines_3_Slow_O_F
  328 D1:E31F 5E 09 25 2F 	.db 94, 9, 37, 47  ;Vines_1_Slow_O
  329 D1:E323 57 0D 31 65 	.db 87, 13, 49, 101  ;Vines_4_Slow_O
  330 D1:E327 4E 0B 3D 41 	.db 78, 11, 61, 65  ;Vines_9_Slow_O
  331 D1:E32B 4E 0E 49 66 	.db 78, 14, 73, 102  ;Vines_10_Slow
  332 D1:E32F -  -  -  -  
  333 D1:E32F -  -  -  -  SG_Vine5:
  334 D1:E32F 00 -  -  -  	.db 0
  335 D1:E330 04 -  -  -  	.db 4
  336 D1:E331 06 18 00 40 	.db 6, 24, 0, 64  ;Vines_8_Slow_F
  337 D1:E335 1B 10 03 64 	.db 27, 16, 3, 100  ;Vines_3_Slow_O_F
  338 D1:E339 00 18 18 67 	.db 0, 24, 24, 103  ;Vines_7_Slow_F
  339 D1:E33D 15 13 0E 68 	.db 21, 19, 14, 104  ;Vines_2_Slow
  340 D1:E341 -  -  -  -  
  341 D1:E341 -  -  -  -  SG_BranchBase3:
  342 D1:E341 00 -  -  -  	.db 0
  343 D1:E342 04 -  -  -  	.db 4
  344 D1:E343 0B 0E 00 6B 	.db 11, 14, 0, 107  ;Branches_1_Fast_F
  345 D1:E347 0A 0E 09 6C 	.db 10, 14, 9, 108  ;Branches_2_Fast_F
  346 D1:E34B 09 0E 12 6D 	.db 9, 14, 18, 109  ;Branches_5_Fast_F
  347 D1:E34F 00 0E 0E 6E 	.db 0, 14, 14, 110  ;Branches_14_Slow
  348 D1:E353 -  -  -  -  
  349 D1:E353 -  -  -  -  SG_Vine1:
  350 D1:E353 00 -  -  -  	.db 0
  351 D1:E354 04 -  -  -  	.db 4
  352 D1:E355 11 10 18 2C 	.db 17, 16, 24, 44  ;Vines_3_Slow
  353 D1:E359 00 13 23 68 	.db 0, 19, 35, 104  ;Vines_2_Slow
  354 D1:E35D 1B 09 0C 38 	.db 27, 9, 12, 56  ;Vines_1_Slow
  355 D1:E361 13 10 00 32 	.db 19, 16, 0, 50  ;Vines_3_Slow_F
  356 D1:E365 -  -  -  -  
  357 D1:E365 -  -  -  -  SG_BranchBase1:
  358 D1:E365 00 -  -  -  	.db 0
  359 D1:E366 07 -  -  -  	.db 7
  360 D1:E367 04 0E 14 70 	.db 4, 14, 20, 112  ;Branches_0_Fast
  361 D1:E36B 04 0E 0B 42 	.db 4, 14, 11, 66  ;Branches_3_Fast
  362 D1:E36F 06 0B 02 1C 	.db 6, 11, 2, 28  ;Branches_6_Slow
  363 D1:E373 0F 0E 00 0B 	.db 15, 14, 0, 11  ;Branches_9_Fast
  364 D1:E377 09 0E 07 12 	.db 9, 14, 7, 18  ;Branches_8_Slow_O
  365 D1:E37B 0D 09 0B 24 	.db 13, 9, 11, 36  ;Leaves_2_Slow_O
  366 D1:E37F 00 0D 0F 1B 	.db 0, 13, 15, 27  ;Leaves_6_Slow_O
  367 D1:E383 -  -  -  -  
  368 D1:E383 -  -  -  -  SG_BranchBase2:
  369 D1:E383 00 -  -  -  	.db 0
  370 D1:E384 07 -  -  -  	.db 7
  371 D1:E385 00 0E 2A 71 	.db 0, 14, 42, 113  ;Branches_1_Slow_O
  372 D1:E389 01 0E 21 5E 	.db 1, 14, 33, 94  ;Branches_2_Slow_O
  373 D1:E38D 02 0E 18 72 	.db 2, 14, 24, 114  ;Branches_4_Slow_O
  374 D1:E391 04 0E 06 45 	.db 4, 14, 6, 69  ;Branches_9_Slow_O
  375 D1:E395 04 0A 0F 22 	.db 4, 10, 15, 34  ;Branches_7_Slow_O
  376 D1:E399 0B 0E 00 1A 	.db 11, 14, 0, 26  ;Branches_10_Fast
  377 D1:E39D 00 0C 17 73 	.db 0, 12, 23, 115  ;Leaves_3_Slow_O_F
  378 D1:E3A1 -  -  -  -  
  379 D1:E3A1 -  -  -  -  SG_BranchBase4:
  380 D1:E3A1 00 -  -  -  	.db 0
  381 D1:E3A2 05 -  -  -  	.db 5
  382 D1:E3A3 0D 0E 00 75 	.db 13, 14, 0, 117  ;Branches_0_Fast_F
  383 D1:E3A7 07 0E 08 12 	.db 7, 14, 8, 18  ;Branches_8_Slow_O
  384 D1:E3AB 12 0E 09 76 	.db 18, 14, 9, 118  ;Branches_9_Fast_F
  385 D1:E3AF 00 0E 0C 45 	.db 0, 14, 12, 69  ;Branches_9_Slow_O
  386 D1:E3B3 0A 09 0B 69 	.db 10, 9, 11, 105  ;Leaves_2_Slow
  387 D1:E3B7 -  -  -  -  
  388 D1:E3B7 -  -  -  -  SG_DarkGroundChunk:
  389 D1:E3B7 00 -  -  -  	.db 0
  390 D1:E3B8 07 -  -  -  	.db 7
  391 D1:E3B9 11 0C 00 77 	.db 17, 12, 0, 119  ;GroundDirtDark_Fast
  392 D1:E3BD 11 0C 08 77 	.db 17, 12, 8, 119  ;GroundDirtDark_Fast
  393 D1:E3C1 10 0C 10 78 	.db 16, 12, 16, 120  ;GroundDirtDark_Fast_F
  394 D1:E3C5 05 0D 00 79 	.db 5, 13, 0, 121  ;GroundHumpDark_Fast
  395 D1:E3C9 05 0D 08 79 	.db 5, 13, 8, 121  ;GroundHumpDark_Fast
  396 D1:E3CD 04 0D 10 7A 	.db 4, 13, 16, 122  ;GroundHumpDark_Fast_F
  397 D1:E3D1 00 0D 0C 7A 	.db 0, 13, 12, 122  ;GroundHumpDark_Fast_F
  398 D1:E3D5 -  -  -  -  
  399 D1:E3D5 -  -  -  -  SG_BGTree1:
  400 D1:E3D5 00 -  -  -  	.db 0
  401 D1:E3D6 08 -  -  -  	.db 8
  402 D1:E3D7 16 10 05 7B 	.db 22, 16, 5, 123  ;Tree_16_Fast
  403 D1:E3DB 0A 0E 07 7C 	.db 10, 14, 7, 124  ;Tree_17_Slow_O
  404 D1:E3DF 0C 0E 03 7D 	.db 12, 14, 3, 125  ;Tree_17_Slow_O_F
  405 D1:E3E3 26 10 04 7E 	.db 38, 16, 4, 126  ;Tree_16_Slow_O
  406 D1:E3E7 20 0E 02 7F 	.db 32, 14, 2, 127  ;Tree_17_Slow_F
  407 D1:E3EB 00 0E 07 80 	.db 0, 14, 7, 128  ;Leaves_8_Fast
  408 D1:E3EF 02 0E 00 80 	.db 2, 14, 0, 128  ;Leaves_8_Fast
  409 D1:E3F3 1D 09 00 69 	.db 29, 9, 0, 105  ;Leaves_2_Slow
  410 D1:E3F7 -  -  -  -  
  411 D1:E3F7 -  -  -  -  SG_BGTree2:
  412 D1:E3F7 00 -  -  -  	.db 0
  413 D1:E3F8 08 -  -  -  	.db 8
  414 D1:E3F9 31 0E 07 81 	.db 49, 14, 7, 129  ;Tree_18_Slow_O
  415 D1:E3FD 31 0E 01 82 	.db 49, 14, 1, 130  ;Tree_17_Slow
  416 D1:E401 31 0E 02 83 	.db 49, 14, 2, 131  ;Tree_18_Slow_F
  417 D1:E405 24 10 00 84 	.db 36, 16, 0, 132  ;Tree_16_Slow_O_F
  418 D1:E409 14 10 01 7E 	.db 20, 16, 1, 126  ;Tree_16_Slow_O
  419 D1:E40D 0B 0E 01 81 	.db 11, 14, 1, 129  ;Tree_18_Slow_O
  420 D1:E411 00 0E 00 80 	.db 0, 14, 0, 128  ;Leaves_8_Fast
  421 D1:E415 2B 09 06 85 	.db 43, 9, 6, 133  ;Leaves_2_Slow_F
  422 D1:E419 -  -  -  -  
  423 D1:E419 -  -  -  -  SG_Cloud1:
  424 D1:E419 00 -  -  -  	.db 0
  425 D1:E41A 0D -  -  -  	.db 13
  426 D1:E41B 14 0A 06 86 	.db 20, 10, 6, 134  ;Clouds_0_Fast
  427 D1:E41F 0D 0E 00 87 	.db 13, 14, 0, 135  ;Clouds_1_Fast
  428 D1:E423 00 0B 07 88 	.db 0, 11, 7, 136  ;Clouds_3_Fast
  429 D1:E427 03 0A 03 89 	.db 3, 10, 3, 137  ;Clouds_4_Fast
  430 D1:E42B 08 10 06 8A 	.db 8, 16, 6, 138  ;Clouds_2_Fast
  431 D1:E42F 14 0A 0E 86 	.db 20, 10, 14, 134  ;Clouds_0_Fast
  432 D1:E433 13 0A 14 8B 	.db 19, 10, 20, 139  ;Clouds_0_Fast_F
  433 D1:E437 0B 0E 1C 8C 	.db 11, 14, 28, 140  ;Clouds_1_Fast_F
  434 D1:E43B 03 0A 1B 8D 	.db 3, 10, 27, 141  ;Clouds_4_Fast_F
  435 D1:E43F 01 0B 0F 8E 	.db 1, 11, 15, 142  ;Clouds_3_Fast_F
  436 D1:E443 01 0B 15 88 	.db 1, 11, 21, 136  ;Clouds_3_Fast
  437 D1:E447 06 10 14 8A 	.db 6, 16, 20, 138  ;Clouds_2_Fast
  438 D1:E44B 06 10 0C 8F 	.db 6, 16, 12, 143  ;Clouds_2_Fast_F
  439 D1:E44F -  -  -  -  
  440 D1:E44F -  -  -  -  
  441 D1:E44F -  -  -  -  
Listing for file "ascent.asm"
  565 D1:E44F -  -  -  -  
  566 D1:E44F -  -  -  -  ;#include "testing/SpriteGroups.txt"
  567 D1:E44F -  -  -  -  ;#include "TestingSpriteData.txt"
  568 D1:E44F -  -  -  -  ;#include "TestGeneratedSpriteData.txt"
  569 D1:E44F -  -  -  -  ;#include "Sprite_Data.txt"
  570 D1:E44F -  -  -  -  ;#include "FG_Data.txt"
  571 D1:E44F -  -  -  -  ;#include "MG_Data.txt"
  572 D1:E44F -  -  -  -  ;#include "BG_Data.txt"
  573 D1:E44F -  -  -  -  ;#include "Palette_Setup.txt"
  574 D1:E44F -  -  -  -  ;#include "Equates.txt"
  575 D1:E44F -  -  -  -  ;#include "Decompress_Calls.txt"
  576 D1:E44F -  -  -  -  ;#include "Sprite_Tables.txt"
  577 D1:E44F -  -  -  -  ;#include "TestingBGData.txt"
  578 D1:E44F -  -  -  -  ;#include "TestingFGData.txt"
  579 D1:E44F -  -  -  -  
  580 D1:E44F -  -  -  -  
