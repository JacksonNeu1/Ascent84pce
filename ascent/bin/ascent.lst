    1 00:0000 -  -  -  -  
    2 00:0000 -  -  -  -  #include "includes\ti84pce.inc"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\includes\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "ascent.asm"
    3 00:0000 -  -  -  -  
    4 00:0000 -  -  -  -   .assume ADL=1
    5 00:0000 -  -  -  -   .org userMem-2
    6 D1:A87F EF 7B -  -   .db tExtTok,tAsm84CeCmp
    7 D1:A881 -  -  -  -  
    8 D1:A881 -  -  -  -  
    9 D1:A881 -  -  -  -  
   10 D1:A881 -  -  -  -  ;0E30000h + 0200h
   11 D1:A881 -  -  -  -  
   12 D1:A881 CD 28 08 02 	call _homeup
   13 D1:A885 CD 10 08 02 	call _ClrScrnFull
   14 D1:A889 -  -  -  -  
   15 D1:A889 CD 48 08 02 	call _RunIndicOff		; turn off run indicator
   16 D1:A88D F3 -  -  -  	di			
   17 D1:A88E -  -  -  -  	
   18 D1:A88E -  -  -  -  	
   19 D1:A88E CD 96 C4 D1 	call setup_palette_1
   20 D1:A892 -  -  -  -  
   21 D1:A892 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255
   22 D1:A896 3E 25 -  -  	ld	a,lcdBpp4
   23 D1:A898 32 18 00 E3 	ld (mpLcdCtrl),a	
   24 D1:A89C -  -  -  -  
   25 D1:A89C -  -  -  -  	
   26 D1:A89C -  -  -  -  
   27 D1:A89C CD 1B C5 D1 	call decompress_calls
   28 D1:A8A0 -  -  -  -  	
   29 D1:A8A0 -  -  -  -  	;gen purp timers
   30 D1:A8A0 -  -  -  -  		; 76543210	
   31 D1:A8A0 3E 03 -  -  	ld a,%00000011;enable, 32768hz
   32 D1:A8A2 32 30 00 F2 	ld ($F20030),a
   33 D1:A8A6 -  -  -  -  	;	  fedcba98
   34 D1:A8A6 3E 02 -  -  	ld a,%00000010;count up
   35 D1:A8A8 32 31 00 F2 	ld ($F20031),a
   36 D1:A8AC -  -  -  -  	
   37 D1:A8AC 21 00 2C D5 	ld hl,vRam + (160*240*2)
   38 D1:A8B0 22 75 A9 D1 	ld (draw_buffer),hl
   39 D1:A8B4 21 00 C2 D5 	ld hl,vRam + (160*240*3)
   40 D1:A8B8 22 10 00 E3 	ld (mpLcdBase),hl
   41 D1:A8BC -  -  -  -  	
   42 D1:A8BC 21 00 00 00 	ld hl,0
   43 D1:A8C0 22 6F A9 D1 	ld (cam_pos),hl
   44 D1:A8C4 -  -  -  -  
   45 D1:A8C4 CD B1 AA D1 	call setup_bg
   46 D1:A8C8 -  -  -  -  
   47 D1:A8C8 -  -  -  -  	;call draw_bg
   48 D1:A8C8 -  -  -  -  		
   49 D1:A8C8 -  -  -  -  	
   50 D1:A8C8 -  -  -  -  main_loop:
   51 D1:A8C8 -  -  -  -  	;clear timer
   52 D1:A8C8 3E 00 -  -  	ld a,0
   53 D1:A8CA 32 00 00 F2 	ld ($F20000),a;32768hz
   54 D1:A8CE 32 01 00 F2 	ld ($F20001),a;128hz
   55 D1:A8D2 32 02 00 F2 	ld ($F20002),a;0.5hz
   56 D1:A8D6 32 03 00 F2 	ld ($F20003),a
   57 D1:A8DA -  -  -  -  	
   58 D1:A8DA -  -  -  -  	;Instructions here 
   59 D1:A8DA CD C1 A9 D1 	call draw_bg
   60 D1:A8DE -  -  -  -  	
   61 D1:A8DE CD A9 B2 D1 	call draw_mg
   62 D1:A8E2 -  -  -  -  	
   63 D1:A8E2 CD F8 B2 D1 	call draw_fg
   64 D1:A8E6 -  -  -  -  	
   65 D1:A8E6 -  -  -  -  	
   66 D1:A8E6 -  -  -  -  	;swap draw buffers
   67 D1:A8E6 2A 10 00 E3 	ld hl,(mpLcdBase)
   68 D1:A8EA ED 5B 75 A9 
              D1 -  -  -  	ld de,(draw_buffer)
   69 D1:A8EF ED 53 10 00 
              E3 -  -  -  	ld (mpLcdBase),de
   70 D1:A8F4 22 75 A9 D1 	ld (draw_buffer),hl
   71 D1:A8F8 -  -  -  -  	
   72 D1:A8F8 -  -  -  -  	;check if lcd has drawn first frame
   73 D1:A8F8 -  -  -  -  clock_check_loop:
   74 D1:A8F8 3A 01 00 F2 	ld a,($F20001);128hz clock
   75 D1:A8FC FE 03 -  -  	cp 3;check if reached 3 
   76 D1:A8FE DA F8 A8 D1 	jp c,clock_check_loop
   77 D1:A902 -  -  -  -  
   78 D1:A902 -  -  -  -  	;wait until finished drawing second frame
   79 D1:A902 -  -  -  -  
   80 D1:A902 -  -  -  -  clear_int:      
   81 D1:A902 21 28 00 E3     ld hl, mpLcdIcr
   82 D1:A906 CB D6 -  -      set 2, (hl)            ; clear interrupt
   83 D1:A908 21 20 00 E3     ld hl, mpLcdRis
   84 D1:A90C -  -  -  -  wait_int:      
   85 D1:A90C CB 56 -  -      bit 2, (hl)
   86 D1:A90E 28 FC -  -      jr z, wait_int  
   87 D1:A910 -  -  -  -  
   88 D1:A910 -  -  -  -  	
   89 D1:A910 -  -  -  -  	
   90 D1:A910 2A 6F A9 D1 	ld hl,(cam_pos)
   91 D1:A914 23 -  -  -  	inc hl
   92 D1:A915 23 -  -  -  	inc hl
   93 D1:A916 22 6F A9 D1 	ld (cam_pos),hl
   94 D1:A91A 01 EF 00 00 	ld bc,239
   95 D1:A91E 09 -  -  -  	add hl,bc 
   96 D1:A91F 7C -  -  -  	ld a,h ;msb 
   97 D1:A920 FE 08 -  -  	cp 8
   98 D1:A922 CA 2A A9 D1 	jp z,exit_prgm
   99 D1:A926 -  -  -  -  	
  100 D1:A926 -  -  -  -  	
  101 D1:A926 -  -  -  -  	;call prgmpause
  102 D1:A926 -  -  -  -  	
  103 D1:A926 C3 C8 A8 D1 	jp main_loop 
  104 D1:A92A -  -  -  -  	
  105 D1:A92A -  -  -  -  	
  106 D1:A92A -  -  -  -  exit_prgm:
  107 D1:A92A 21 00 00 D4 	ld hl,vRam
  108 D1:A92E 22 10 00 E3 	ld (mpLcdBase),hl
  109 D1:A932 CD 10 08 02 	call _ClrScrnFull
  110 D1:A936 3E 2D -  -  	ld	a,lcdBpp16
  111 D1:A938 32 18 00 E3 	ld	(mpLcdCtrl),a
  112 D1:A93C CD 3C 1A 02 	call _DrawStatusBar
  113 D1:A940 -  -  -  -  	
  114 D1:A940 FB -  -  -  	ei				; reset screen back to normal
  115 D1:A941 C9 -  -  -  	ret			; return to os
  116 D1:A942 -  -  -  -  
  117 D1:A942 -  -  -  -  
  118 D1:A942 -  -  -  -  printHL:;=================REMOVE
  119 D1:A942 E5 -  -  -  	push hl
  120 D1:A943 21 00 00 D4 	ld hl,vRam
  121 D1:A947 22 10 00 E3 	ld (mpLcdBase),hl
  122 D1:A94B CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  123 D1:A94F 3E 2D -  -  	ld	a,lcdBpp16
  124 D1:A951 32 18 00 E3 	ld (mpLcdCtrl),a
  125 D1:A955 E1 -  -  -  	pop hl
  126 D1:A956 CD E0 1E 02 	call _DispHL
  127 D1:A95A FB -  -  -  	ei
  128 D1:A95B CD 8C 0D 02 	call _GetKey
  129 D1:A95F F3 -  -  -  	di
  130 D1:A960 C3 2A A9 D1 	jp exit_prgm
  131 D1:A964 -  -  -  -  
  132 D1:A964 -  -  -  -  
  133 D1:A964 -  -  -  -  prgmpause:
  134 D1:A964 D5 -  -  -  	push de 
  135 D1:A965 E5 -  -  -  	push hl 
  136 D1:A966 FB -  -  -  	ei
  137 D1:A967 CD 8C 0D 02 	call _GetKey
  138 D1:A96B F3 -  -  -  	di
  139 D1:A96C E1 -  -  -  	pop hl 
  140 D1:A96D D1 -  -  -  	pop de 
  141 D1:A96E C9 -  -  -  	ret
  142 D1:A96F -  -  -  -  
  143 D1:A96F -  -  -  -  cam_pos:
  144 D1:A96F 00 00 00 -  	.dl 0
  145 D1:A972 -  -  -  -  bg_cam_pos:
  146 D1:A972 00 00 00 -  	.dl 0
  147 D1:A975 -  -  -  -  
  148 D1:A975 -  -  -  -  
  149 D1:A975 -  -  -  -  draw_buffer:
  150 D1:A975 00 00 00 -  	.dl 0
  151 D1:A978 -  -  -  -  BG_draw_buffer:;uppermost line of bg in vram
  152 D1:A978 00 00 00 -  	.dl 0
  153 D1:A97B -  -  -  -  BG_buffer .equ vram + (160*240)
  154 D1:A97B -  -  -  -  
  155 D1:A97B -  -  -  -  
  156 D1:A97B -  -  -  -  
  157 D1:A97B -  -  -  -  #include "timeTesting.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\timeTesting.txt"
    1 D1:A97B -  -  -  -  
    2 D1:A97B -  -  -  -  
    3 D1:A97B -  -  -  -  
    4 D1:A97B -  -  -  -  time_test_start:
    5 D1:A97B -  -  -  -  
    6 D1:A97B -  -  -  -  		; 76543210	
    7 D1:A97B 3E 03 -  -  	ld a,%00000011;enable, 32768hz
    8 D1:A97D 32 30 00 F2 	ld ($F20030),a
    9 D1:A981 -  -  -  -  	;	  fedcba98
   10 D1:A981 3E 02 -  -  	ld a,%00000010;count up
   11 D1:A983 32 31 00 F2 	ld ($F20031),a
   12 D1:A987 3E 00 -  -  	ld a,0
   13 D1:A989 32 00 00 F2 	ld ($F20000),a
   14 D1:A98D 32 01 00 F2 	ld ($F20001),a
   15 D1:A991 32 02 00 F2 	ld ($F20002),a
   16 D1:A995 32 03 00 F2 	ld ($F20003),a
   17 D1:A999 -  -  -  -  	
   18 D1:A999 21 2C 01 00 	ld hl,300
   19 D1:A99D -  -  -  -  	
   20 D1:A99D -  -  -  -  time_testing_loop:
   21 D1:A99D E5 -  -  -  	push hl
   22 D1:A99E 01 E8 03 00 	ld bc,1000
   23 D1:A9A2 -  -  -  -  time_testing_loop_2:
   24 D1:A9A2 C5 -  -  -  	push bc
   25 D1:A9A3 -  -  -  -  	;instruction here
   26 D1:A9A3 -  -  -  -  	
   27 D1:A9A3 -  -  -  -  	
   28 D1:A9A3 -  -  -  -  	;Instruction end
   29 D1:A9A3 C1 -  -  -  	pop bc
   30 D1:A9A4 0B -  -  -  	dec bc
   31 D1:A9A5 79 -  -  -  	ld a,c
   32 D1:A9A6 B0 -  -  -  	or b
   33 D1:A9A7 C2 A2 A9 D1 	jp nz,time_testing_loop_2
   34 D1:A9AB E1 -  -  -  	pop hl
   35 D1:A9AC 2B -  -  -  	dec hl
   36 D1:A9AD 7D -  -  -  	ld a,l
   37 D1:A9AE B4 -  -  -  	or h
   38 D1:A9AF C2 9D A9 D1 	jp nz,time_testing_loop
   39 D1:A9B3 -  -  -  -  	
   40 D1:A9B3 3A 01 00 F2 	ld a,($F20001);128hz
   41 D1:A9B7 6F -  -  -  	ld l,a
   42 D1:A9B8 3A 02 00 F2 	ld a,($F20002);0.5hz
   43 D1:A9BC 67 -  -  -  	ld h,a
   44 D1:A9BD C3 42 A9 D1 	jp printHL;div by 128 for time
   45 D1:A9C1 -  -  -  -  	
   46 D1:A9C1 -  -  -  -  
   47 D1:A9C1 -  -  -  -  ;60fps = .0166sec/f	
   48 D1:A9C1 -  -  -  -  
   49 D1:A9C1 -  -  -  -  ;1000 ldir in vram of 160*240 bytes
   50 D1:A9C1 -  -  -  -  ;6.8sec, .0068 sec/instruction   0.4 of a frame
   51 D1:A9C1 -  -  -  -  
   52 D1:A9C1 -  -  -  -  
   53 D1:A9C1 -  -  -  -  ;10,000 draw 1 bg line very complex 
   54 D1:A9C1 -  -  -  -  ;9 sec  .07 of frame/instruction
   55 D1:A9C1 -  -  -  -  
   56 D1:A9C1 -  -  -  -  ;300k draw slow sprite 12*5 px complex
   57 D1:A9C1 -  -  -  -  ;16.4RT, 14.8CLK
   58 D1:A9C1 -  -  -  -  ;.00328 frames/sprite, 4.19 frames / screen
   59 D1:A9C1 -  -  -  -  ;.24 screens/frame
   60 D1:A9C1 -  -  -  -  
   61 D1:A9C1 -  -  -  -  
   62 D1:A9C1 -  -  -  -  ;300k slow sprite best case 12*5px
   63 D1:A9C1 -  -  -  -  ;8.75RT 7.6clk
   64 D1:A9C1 -  -  -  -  ;.00175 frames/spr 2.24 frames/screen
   65 D1:A9C1 -  -  -  -  ;.446 screens/frame
   66 D1:A9C1 -  -  -  -  
   67 D1:A9C1 -  -  -  -  
   68 D1:A9C1 -  -  -  -  
   69 D1:A9C1 -  -  -  -  ;1,000,000 fast fg sprite 20*4 px
   70 D1:A9C1 -  -  -  -  ;22.15RT,20.35clk
   71 D1:A9C1 -  -  -  -  ;.00133 frames/spr 1.275 frames/screen
   72 D1:A9C1 -  -  -  -  ;.78 screens/frame
   73 D1:A9C1 -  -  -  -  
   74 D1:A9C1 -  -  -  -  
   75 D1:A9C1 -  -  -  -  ;for 60% of screen with fg sprites in 1 frame
   76 D1:A9C1 -  -  -  -  ;.6 = .78*fast + .44*(1-fast)
   77 D1:A9C1 -  -  -  -  ;.47 = FAST
   78 D1:A9C1 -  -  -  -  
   79 D1:A9C1 -  -  -  -  ;50% fast sprites, 50% slow sprites
   80 D1:A9C1 -  -  -  -  
   81 D1:A9C1 -  -  -  -  
   82 D1:A9C1 -  -  -  -  
   83 D1:A9C1 -  -  -  -  
   84 D1:A9C1 -  -  -  -  
   85 D1:A9C1 -  -  -  -  
   86 D1:A9C1 -  -  -  -  
   87 D1:A9C1 -  -  -  -  
   88 D1:A9C1 -  -  -  -  
Listing for file "ascent.asm"
  158 D1:A9C1 -  -  -  -  #include "drawBGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawBGSprite.txt"
    1 D1:A9C1 -  -  -  -  
    2 D1:A9C1 -  -  -  -  draw_bg:
    3 D1:A9C1 CD F5 A9 D1 	call move_bg
    4 D1:A9C5 21 00 2C D5 	ld hl,$d52c00;BG_buffer_end
    5 D1:A9C9 ED 4B 78 A9 
              D1 -  -  -  	ld bc,(BG_draw_buffer)
    6 D1:A9CE 37 -  -  -  	scf 
    7 D1:A9CF 3F -  -  -  	ccf 
    8 D1:A9D0 ED 42 -  -  	sbc hl,bc
    9 D1:A9D2 E5 -  -  -  	push hl 
   10 D1:A9D3 C1 -  -  -  	pop bc
   11 D1:A9D4 2A 78 A9 D1 	ld hl,(BG_draw_buffer)
   12 D1:A9D8 ED 5B 75 A9 
              D1 -  -  -  	ld de,(draw_buffer)
   13 D1:A9DD ED B0 -  -  	ldir
   14 D1:A9DF 2A 78 A9 D1 	ld hl,(BG_draw_buffer)
   15 D1:A9E3 01 00 96 D4 	ld bc,BG_buffer
   16 D1:A9E7 37 -  -  -  	scf 
   17 D1:A9E8 3F -  -  -  	ccf 
   18 D1:A9E9 ED 42 -  -  	sbc hl,bc
   19 D1:A9EB C8 -  -  -  	ret z ;if bg buffer line is at top of buffer, no second ldir
   20 D1:A9EC E5 -  -  -  	push hl 
   21 D1:A9ED C1 -  -  -  	pop bc
   22 D1:A9EE 21 00 96 D4 	ld hl,BG_buffer 
   23 D1:A9F2 ED B0 -  -  	ldir 
   24 D1:A9F4 C9 -  -  -  	ret 
   25 D1:A9F5 -  -  -  -  	
   26 D1:A9F5 -  -  -  -  move_bg:
   27 D1:A9F5 2A 6F A9 D1 	ld hl,(cam_pos)
   28 D1:A9F9 CB 3C -  -  	srl h
   29 D1:A9FB CB 1D -  -  	rr l
   30 D1:A9FD CB 3C -  -  	srl h
   31 D1:A9FF CB 1D -  -  	rr l ;div by 4
   32 D1:AA01 -  -  -  -  	;hl holds bg cam pos 
   33 D1:AA01 01 EF 00 00 	ld bc,239
   34 D1:AA05 09 -  -  -  	add hl,bc;add 0 pos  
   35 D1:AA06 ED 4B 72 A9 
              D1 -  -  -  	ld bc,(bg_cam_pos)
   36 D1:AA0B ED 42 -  -  	sbc hl,bc 
   37 D1:AA0D C8 -  -  -  	ret z 
   38 D1:AA0E DA 1A AA D1 	jp c,move_bg_down
   39 D1:AA12 CD 6B AA D1 	call inc_bg
   40 D1:AA16 C3 F5 A9 D1 	jp move_bg
   41 D1:AA1A -  -  -  -  move_bg_down:
   42 D1:AA1A CD 22 AA D1 	call dec_bg
   43 D1:AA1E C3 F5 A9 D1 	jp move_bg
   44 D1:AA22 -  -  -  -  
   45 D1:AA22 -  -  -  -  
   46 D1:AA22 -  -  -  -  dec_bg:;move cam down
   47 D1:AA22 -  -  -  -  	;write on draw buffer line 
   48 D1:AA22 2A 78 A9 D1 	ld hl,(BG_draw_buffer)
   49 D1:AA26 22 9F AB D1 	ld (dbgl_vram_line_start),hl 
   50 D1:AA2A -  -  -  -  	
   51 D1:AA2A 2A 72 A9 D1 	ld hl,(bg_cam_pos)
   52 D1:AA2E 2B -  -  -  	dec hl 
   53 D1:AA2F 22 72 A9 D1 	ld (bg_cam_pos),hl 
   54 D1:AA33 01 EF 00 00 	ld bc,239
   55 D1:AA37 ED 42 -  -  	sbc hl,bc;bottom row of bc
   56 D1:AA39 4C -  -  -  	ld c,h;cam pos msb 
   57 D1:AA3A 7D -  -  -  	ld a,l 
   58 D1:AA3B 21 58 C2 D1 	ld hl,BG_Data_frame_table
   59 D1:AA3F 0C -  -  -  	inc c 
   60 D1:AA40 09 -  -  -  	add hl,bc 
   61 D1:AA41 09 -  -  -  	add hl,bc 
   62 D1:AA42 09 -  -  -  	add hl,bc 
   63 D1:AA43 ED 27 -  -  	ld hl,(hl)
   64 D1:AA45 CD FE AA D1 	call draw_bg_line
   65 D1:AA49 -  -  -  -  	;move buffer pos
   66 D1:AA49 2A 78 A9 D1 	ld hl,(BG_draw_buffer)
   67 D1:AA4D 01 60 2B D5 	ld bc,$d52b60;BG_buffer_end
   68 D1:AA51 37 -  -  -  	scf 
   69 D1:AA52 3F -  -  -  	ccf 
   70 D1:AA53 ED 42 -  -  	sbc hl,bc
   71 D1:AA55 2A 78 A9 D1 	ld hl,(BG_draw_buffer)
   72 D1:AA59 C2 61 AA D1 	jp nz,dec_bg_bottom_skip
   73 D1:AA5D 21 60 95 D4 	ld hl,$d49560;1 row above top of bg buffer 
   74 D1:AA61 -  -  -  -  dec_bg_bottom_skip:
   75 D1:AA61 01 A0 00 00 	ld bc,160 
   76 D1:AA65 09 -  -  -  	add hl,bc
   77 D1:AA66 22 78 A9 D1 	ld (BG_draw_buffer),hl 
   78 D1:AA6A C9 -  -  -  	ret
   79 D1:AA6B -  -  -  -  
   80 D1:AA6B -  -  -  -  
   81 D1:AA6B -  -  -  -  inc_bg:;move cam up 
   82 D1:AA6B 2A 78 A9 D1 	ld hl,(BG_draw_buffer)
   83 D1:AA6F 01 00 96 D4 	ld bc,$d49600;BG_buffer_start
   84 D1:AA73 37 -  -  -  	scf 
   85 D1:AA74 3F -  -  -  	ccf 
   86 D1:AA75 ED 42 -  -  	sbc hl,bc
   87 D1:AA77 2A 78 A9 D1 	ld hl,(BG_draw_buffer)
   88 D1:AA7B C2 83 AA D1 	jp nz,inc_bg_top_skip
   89 D1:AA7F 21 00 2C D5 	ld hl,$d52c00;1 below bottom of bg buffer 
   90 D1:AA83 -  -  -  -  inc_bg_top_skip:
   91 D1:AA83 01 A0 00 00 	ld bc,160 
   92 D1:AA87 37 -  -  -  	scf
   93 D1:AA88 3F -  -  -  	ccf 
   94 D1:AA89 ED 42 -  -  	sbc hl,bc ;move up line 
   95 D1:AA8B 22 78 A9 D1 	ld (BG_draw_buffer),hl 
   96 D1:AA8F 22 9F AB D1 	ld (dbgl_vram_line_start),hl 
   97 D1:AA93 2A 72 A9 D1 	ld hl,(bg_cam_pos)
   98 D1:AA97 23 -  -  -  	inc hl 
   99 D1:AA98 22 72 A9 D1 	ld (bg_cam_pos),hl 
  100 D1:AA9C 01 00 00 00 	ld bc,0
  101 D1:AAA0 4C -  -  -  	ld c,h;cam pos msb 
  102 D1:AAA1 7D -  -  -  	ld a,l 
  103 D1:AAA2 21 58 C2 D1 	ld hl,BG_Data_frame_table
  104 D1:AAA6 0C -  -  -  	inc c 
  105 D1:AAA7 09 -  -  -  	add hl,bc 
  106 D1:AAA8 09 -  -  -  	add hl,bc 
  107 D1:AAA9 09 -  -  -  	add hl,bc 
  108 D1:AAAA ED 27 -  -  	ld hl,(hl)
  109 D1:AAAC CD FE AA D1 	call draw_bg_line
  110 D1:AAB0 C9 -  -  -  	ret
  111 D1:AAB1 -  -  -  -  	
  112 D1:AAB1 -  -  -  -  
  113 D1:AAB1 -  -  -  -  
  114 D1:AAB1 -  -  -  -  
  115 D1:AAB1 -  -  -  -  
  116 D1:AAB1 -  -  -  -  setup_bg:
  117 D1:AAB1 2A 6F A9 D1 	ld hl,(cam_pos)
  118 D1:AAB5 CB 3C -  -  	srl h
  119 D1:AAB7 CB 1D -  -  	rr l
  120 D1:AAB9 CB 3C -  -  	srl h
  121 D1:AABB CB 1D -  -  	rr l ;div by 4
  122 D1:AABD -  -  -  -  	;hl holds bg cam pos 
  123 D1:AABD 01 EF 00 00 	ld bc,239
  124 D1:AAC1 09 -  -  -  	add hl,bc;add 0 pos  
  125 D1:AAC2 22 72 A9 D1 	ld (bg_cam_pos),hl
  126 D1:AAC6 23 -  -  -  	inc hl;to be dec in loop
  127 D1:AAC7 E5 -  -  -  	push hl 
  128 D1:AAC8 21 00 96 D4 	ld hl,BG_buffer 
  129 D1:AACC 22 78 A9 D1 	ld (BG_draw_buffer),hl
  130 D1:AAD0 E5 -  -  -  	push hl 
  131 D1:AAD1 D9 -  -  -  	exx
  132 D1:AAD2 06 F0 -  -  	ld b,240
  133 D1:AAD4 -  -  -  -  	
  134 D1:AAD4 -  -  -  -  setup_bg_loop:
  135 D1:AAD4 D9 -  -  -  	exx
  136 D1:AAD5 E1 -  -  -  	pop hl;vram draw pos 
  137 D1:AAD6 22 9F AB D1 	ld (dbgl_vram_line_start),hl 
  138 D1:AADA 01 A0 00 00 	ld bc,160
  139 D1:AADE 09 -  -  -  	add hl,bc 
  140 D1:AADF EB -  -  -  	ex de,hl ;put vram pos in de 
  141 D1:AAE0 E1 -  -  -  	pop hl;cam pos
  142 D1:AAE1 2B -  -  -  	dec hl 
  143 D1:AAE2 E5 -  -  -  	push hl;push cam pos 
  144 D1:AAE3 D5 -  -  -  	push de ;push vram pos 
  145 D1:AAE4 01 00 00 00 	ld bc,0
  146 D1:AAE8 4C -  -  -  	ld c,h;cam pos msb 
  147 D1:AAE9 7D -  -  -  	ld a,l 
  148 D1:AAEA 21 58 C2 D1 	ld hl,BG_Data_frame_table
  149 D1:AAEE 0C -  -  -  	inc c 
  150 D1:AAEF 09 -  -  -  	add hl,bc 
  151 D1:AAF0 09 -  -  -  	add hl,bc 
  152 D1:AAF1 09 -  -  -  	add hl,bc 
  153 D1:AAF2 ED 27 -  -  	ld hl,(hl)
  154 D1:AAF4 CD FE AA D1 	call draw_bg_line
  155 D1:AAF8 D9 -  -  -  	exx 
  156 D1:AAF9 10 D9 -  -  	djnz setup_bg_loop
  157 D1:AAFB E1 -  -  -  	pop hl 
  158 D1:AAFC E1 -  -  -  	pop hl 
  159 D1:AAFD C9 -  -  -  	ret 
  160 D1:AAFE -  -  -  -  
  161 D1:AAFE -  -  -  -  
  162 D1:AAFE -  -  -  -  
  163 D1:AAFE -  -  -  -  
  164 D1:AAFE -  -  -  -  
  165 D1:AAFE -  -  -  -  
  166 D1:AAFE -  -  -  -  ;hl = upper data frame, a = line number in target frame
  167 D1:AAFE -  -  -  -  ;set dbgl_vram_line_start 
  168 D1:AAFE -  -  -  -  draw_bg_line:
  169 D1:AAFE E5 -  -  -  	push hl 
  170 D1:AAFF F5 -  -  -  	push af 
  171 D1:AB00 3E FF -  -  	ld a,$ff
  172 D1:AB02 01 A0 00 00 	ld bc,160
  173 D1:AB06 2A 9F AB D1 	ld hl,(dbgl_vram_line_start)
  174 D1:AB0A CD E0 10 02 	call _MemSet 
  175 D1:AB0E F1 -  -  -  	pop af 
  176 D1:AB0F E1 -  -  -  	pop hl
  177 D1:AB10 -  -  -  -  
  178 D1:AB10 32 36 AB D1 	ld (dbgl_line_num),a
  179 D1:AB14 32 73 AB D1 	ld (dbgl_line_num_2),a
  180 D1:AB18 ED 17 -  -  	ld de,(hl)
  181 D1:AB1A ED 53 A5 AB 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  182 D1:AB1F 23 -  -  -  	inc hl
  183 D1:AB20 23 -  -  -  	inc hl
  184 D1:AB21 23 -  -  -  	inc hl ;to frame data start 
  185 D1:AB22 08 -  -  -  	ex af,af' ;'
  186 D1:AB23 7E -  -  -  	ld a,(hl);number of elements
  187 D1:AB24 08 -  -  -  	ex af,af' ;'
  188 D1:AB25 23 -  -  -  	inc hl 
  189 D1:AB26 -  -  -  -  	
  190 D1:AB26 11 00 00 00 	ld de,0
  191 D1:AB2A 01 00 00 00 	ld bc,0
  192 D1:AB2E -  -  -  -  	;upper frame, checking for sprites that carry into lower frame 
  193 D1:AB2E -  -  -  -  dbgl_upper_loop:
  194 D1:AB2E 7E -  -  -  	ld a,(hl);y
  195 D1:AB2F 23 -  -  -  	inc hl;to height
  196 D1:AB30 96 -  -  -  	sub (hl);subtract height
  197 D1:AB31 -  -  -  -  	;a is y value of bottom row of sprite
  198 D1:AB31 D2 3F AB D1 	jp nc,dbgl_upper_skip;if no carry into next frame
  199 D1:AB35 -  -  -  -  	;sprite extends into target frame
  200 D1:AB35 -  -  -  -  dbgl_line_num .equ $ + 1
  201 D1:AB35 D6 00 -  -  	sub 0 ;compare to line number in target frame
  202 D1:AB37 DA 4D AB D1 	jp c,dbgl_upper_cont;if linenum is >  bottom row
  203 D1:AB3B CA 4D AB D1 	jp z,dbgl_upper_cont;if = bottom row
  204 D1:AB3F -  -  -  -  dbgl_upper_skip:
  205 D1:AB3F 23 -  -  -  	inc hl;to x
  206 D1:AB40 23 -  -  -  	inc hl;to index 
  207 D1:AB41 23 -  -  -  	inc hl;to y
  208 D1:AB42 08 -  -  -  	ex af,af';'
  209 D1:AB43 3D -  -  -  	dec a 
  210 D1:AB44 CA 5E AB D1 	jp z,dbgl_lower_start 
  211 D1:AB48 08 -  -  -  	ex af,af';'
  212 D1:AB49 C3 2E AB D1 	jp dbgl_upper_loop
  213 D1:AB4D -  -  -  -  	
  214 D1:AB4D -  -  -  -  dbgl_upper_cont:
  215 D1:AB4D -  -  -  -  	;a = bottom row - linenum
  216 D1:AB4D 86 -  -  -  	add a,(hl);add height-1 
  217 D1:AB4E -  -  -  -  	;a holds 0 indexed line num within sprite
  218 D1:AB4E CD 99 AB D1 	call dbgl_setup_and_draw
  219 D1:AB52 23 -  -  -  	inc hl;to y
  220 D1:AB53 08 -  -  -  	ex af,af';'
  221 D1:AB54 3D -  -  -  	dec a 
  222 D1:AB55 CA 5E AB D1 	jp z,dbgl_lower_start 
  223 D1:AB59 08 -  -  -  	ex af,af';'
  224 D1:AB5A C3 2E AB D1 	jp dbgl_upper_loop
  225 D1:AB5E -  -  -  -  	
  226 D1:AB5E -  -  -  -  dbgl_lower_start:
  227 D1:AB5E -  -  -  -  ;LOWER FRAME START 
  228 D1:AB5E -  -  -  -  	;hl pointing to sprite data table 
  229 D1:AB5E ED 17 -  -  	ld de,(hl)
  230 D1:AB60 ED 53 A5 AB 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de	
  231 D1:AB65 11 00 00 00 	ld de,0
  232 D1:AB69 23 -  -  -  	inc hl
  233 D1:AB6A 23 -  -  -  	inc hl
  234 D1:AB6B 23 -  -  -  	inc hl;to num elements
  235 D1:AB6C -  -  -  -  	
  236 D1:AB6C 08 -  -  -  	ex af,af' ;'
  237 D1:AB6D 7E -  -  -  	ld a,(hl);number of elements
  238 D1:AB6E 08 -  -  -  	ex af,af' ;'
  239 D1:AB6F 23 -  -  -  	inc hl ;to y
  240 D1:AB70 -  -  -  -  	
  241 D1:AB70 -  -  -  -  dbgl_lower_loop:
  242 D1:AB70 7E -  -  -  	ld a,(hl)
  243 D1:AB71 23 -  -  -  	inc hl;to height-1
  244 D1:AB72 -  -  -  -  dbgl_line_num_2 .equ $ + 1
  245 D1:AB72 D6 00 -  -  	sub 0;subtract line num 
  246 D1:AB74 DA 81 AB D1 	jp c,dbgl_lower_skip;target line num is above sprite 
  247 D1:AB78 -  -  -  -  	;target is below or = sprite y value 
  248 D1:AB78 -  -  -  -  	;a holds 0 indexed sprite row 
  249 D1:AB78 BE -  -  -  	cp (hl);compare to height
  250 D1:AB79 DA 8C AB D1 	jp c,dbgl_lower_cont ;if height >= a 
  251 D1:AB7D CA 8C AB D1 	jp z,dbgl_lower_cont
  252 D1:AB81 -  -  -  -  dbgl_lower_skip:
  253 D1:AB81 23 -  -  -  	inc hl;to x  
  254 D1:AB82 23 -  -  -  	inc hl; to index
  255 D1:AB83 23 -  -  -  	inc hl;to y
  256 D1:AB84 08 -  -  -  	ex af,af';'
  257 D1:AB85 3D -  -  -  	dec a 
  258 D1:AB86 C8 -  -  -  	ret z 
  259 D1:AB87 08 -  -  -  	ex af,af';'
  260 D1:AB88 C3 70 AB D1 	jp dbgl_lower_loop
  261 D1:AB8C -  -  -  -  dbgl_lower_cont:
  262 D1:AB8C -  -  -  -  
  263 D1:AB8C CD 99 AB D1 	call dbgl_setup_and_draw
  264 D1:AB90 23 -  -  -  	inc hl;to y
  265 D1:AB91 08 -  -  -  	ex af,af';'
  266 D1:AB92 3D -  -  -  	dec a 
  267 D1:AB93 C8 -  -  -  	ret z 
  268 D1:AB94 08 -  -  -  	ex af,af';'
  269 D1:AB95 C3 70 AB D1 	jp dbgl_lower_loop
  270 D1:AB99 -  -  -  -  
  271 D1:AB99 -  -  -  -  ;a holds 0 indexed line num, (hl) = height ,bc,de = 0
  272 D1:AB99 -  -  -  -  dbgl_setup_and_draw:
  273 D1:AB99 23 -  -  -  	inc hl;to x pos
  274 D1:AB9A 5E -  -  -  	ld e,(hl)
  275 D1:AB9B 23 -  -  -  	inc hl 
  276 D1:AB9C 4E -  -  -  	ld c,(hl);sprite index 
  277 D1:AB9D E5 -  -  -  	push hl
  278 D1:AB9E -  -  -  -  dbgl_vram_line_start .equ $ + 1	
  279 D1:AB9E 21 00 00 00 	ld hl,0
  280 D1:ABA2 19 -  -  -  	add hl,de;add x pos 
  281 D1:ABA3 EB -  -  -  	ex de,hl;put vram pos into de 
  282 D1:ABA4 -  -  -  -  dbgl_sprite_pointers .equ $ + 1
  283 D1:ABA4 21 00 00 00 	ld hl,0
  284 D1:ABA8 09 -  -  -  	add hl,bc
  285 D1:ABA9 09 -  -  -  	add hl,bc 
  286 D1:ABAA 09 -  -  -  	add hl,bc ;hl points to sprite data pointer 
  287 D1:ABAB ED 27 -  -  	ld hl,(hl);hl holds sprite data
  288 D1:ABAD -  -  -  -  
  289 D1:ABAD CD BB AB D1 	call draw_bg_sprite_line;draw sprite line 
  290 D1:ABB1 11 00 00 00 	ld de,0;clear de 
  291 D1:ABB5 01 00 00 00 	ld bc,0
  292 D1:ABB9 E1 -  -  -  	pop hl;back to data
  293 D1:ABBA C9 -  -  -  	ret
  294 D1:ABBB -  -  -  -  	
  295 D1:ABBB -  -  -  -  
  296 D1:ABBB -  -  -  -  
  297 D1:ABBB -  -  -  -  
  298 D1:ABBB -  -  -  -  
  299 D1:ABBB -  -  -  -  
  300 D1:ABBB -  -  -  -  ;hl = data, de = vram, a = linenum (0 indexed from top)
  301 D1:ABBB -  -  -  -  draw_bg_sprite_line:
  302 D1:ABBB E5 -  -  -  	push hl;save 
  303 D1:ABBC 6E -  -  -  	ld l,(hl);sprite width in px
  304 D1:ABBD 67 -  -  -  	ld h,a ;lines to skip
  305 D1:ABBE 7D -  -  -  	ld a,l;width 
  306 D1:ABBF ED 6C -  -  	mlt hl;widt*lines skipped 
  307 D1:ABC1 C1 -  -  -  	pop bc 
  308 D1:ABC2 09 -  -  -  	add hl,bc;skip to target line data 
  309 D1:ABC3 23 -  -  -  	inc hl 
  310 D1:ABC4 -  -  -  -  	;hl is pointing to start of line data 
  311 D1:ABC4 CB 2F -  -  	sra a;divide width by 2 
  312 D1:ABC6 47 -  -  -  	ld b,a;b holds number of loops 
  313 D1:ABC7 -  -  -  -  dbgsl_loop:
  314 D1:ABC7 1A -  -  -  	ld a,(de); load vram data 
  315 D1:ABC8 A6 -  -  -  	and (hl);and with mask 
  316 D1:ABC9 23 -  -  -  	inc hl ;to color data 
  317 D1:ABCA B6 -  -  -  	or (hl);or w color data 
  318 D1:ABCB 12 -  -  -  	ld (de),a;write to vram  
  319 D1:ABCC 13 -  -  -  	inc de
  320 D1:ABCD 23 -  -  -  	inc hl;to mask data
  321 D1:ABCE 10 F7 -  -  	djnz dbgsl_loop
  322 D1:ABD0 C9 -  -  -  	ret 
  323 D1:ABD1 -  -  -  -  	
  324 D1:ABD1 -  -  -  -  
  325 D1:ABD1 -  -  -  -  
  326 D1:ABD1 -  -  -  -  
  327 D1:ABD1 -  -  -  -  
  328 D1:ABD1 -  -  -  -  
  329 D1:ABD1 -  -  -  -  
  330 D1:ABD1 -  -  -  -  
  331 D1:ABD1 -  -  -  -  
  332 D1:ABD1 -  -  -  -  
  333 D1:ABD1 -  -  -  -  
  334 D1:ABD1 -  -  -  -  
  335 D1:ABD1 -  -  -  -  
Listing for file "ascent.asm"
  159 D1:ABD1 -  -  -  -  #include "drawFGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFGSprite.txt"
    1 D1:ABD1 -  -  -  -  
    2 D1:ABD1 -  -  -  -  
    3 D1:ABD1 -  -  -  -  ;de = vram , hl = data, a = number lines to draw
    4 D1:ABD1 -  -  -  -  draw_fast_sprite_bottom_cut:
    5 D1:ABD1 1B -  -  -  	dec de
    6 D1:ABD2 01 00 00 00 	ld bc,0
    7 D1:ABD6 4F -  -  -  	ld c,a
    8 D1:ABD7 E5 -  -  -  	push hl
    9 D1:ABD8 7E -  -  -  	ld a,(hl);height
   10 D1:ABD9 09 -  -  -  	add hl,bc;hl points to num loops required
   11 D1:ABDA 4F -  -  -  	ld c,a;height
   12 D1:ABDB 7E -  -  -  	ld a,(hl);a holds num loops
   13 D1:ABDC E1 -  -  -  	pop hl
   14 D1:ABDD 23 -  -  -  	inc hl
   15 D1:ABDE 09 -  -  -  	add hl,bc;beginning of pixel data
   16 D1:ABDF -  -  -  -  
   17 D1:ABDF 4E -  -  -  	ld c,(hl);load alpha length
   18 D1:ABE0 EB -  -  -  	ex de,hl;hl is vram, de is data
   19 D1:ABE1 C3 27 AC D1 	jp dfgs_loop
   20 D1:ABE5 -  -  -  -  	
   21 D1:ABE5 -  -  -  -  ;de = vram , hl = data, a = top lines to skip	
   22 D1:ABE5 -  -  -  -  draw_fast_sprite_top_cut:
   23 D1:ABE5 1B -  -  -  	dec de
   24 D1:ABE6 01 00 00 00 	ld bc,0
   25 D1:ABEA 4F -  -  -  	ld c,a
   26 D1:ABEB D5 -  -  -  	push de
   27 D1:ABEC 11 00 00 00 	ld de,0
   28 D1:ABF0 E5 -  -  -  	push hl
   29 D1:ABF1 5E -  -  -  	ld e,(hl);height
   30 D1:ABF2 09 -  -  -  	add hl,bc;hl points to num skip loops 
   31 D1:ABF3 -  -  -  -  
   32 D1:ABF3 4E -  -  -  	ld c,(hl);c holds num skip loops
   33 D1:ABF4 E1 -  -  -  	pop hl;start of data
   34 D1:ABF5 19 -  -  -  	add hl,de
   35 D1:ABF6 46 -  -  -  	ld b,(hl);total number of loops
   36 D1:ABF7 23 -  -  -  	inc hl;hl is pixel data
   37 D1:ABF8 D1 -  -  -  	pop de
   38 D1:ABF9 C5 -  -  -  	push bc;save total and skipped loops
   39 D1:ABFA 79 -  -  -  	ld a,c;loops to skip
   40 D1:ABFB 01 00 00 00 	ld bc,0
   41 D1:ABFF -  -  -  -  	
   42 D1:ABFF -  -  -  -  
   43 D1:ABFF -  -  -  -  draw_fast_sprite_top_loop:
   44 D1:ABFF 4E -  -  -  	ld c,(hl);load with first gap length	
   45 D1:AC00 EB -  -  -  	ex de,hl;hl is vram
   46 D1:AC01 09 -  -  -  	add hl,bc
   47 D1:AC02 EB -  -  -  	ex de,hl;hl is data
   48 D1:AC03 23 -  -  -  	inc hl
   49 D1:AC04 4E -  -  -  	ld c,(hl);ldir length
   50 D1:AC05 09 -  -  -  	add hl,bc;add ldir length
   51 D1:AC06 EB -  -  -  	ex de,hl;hl is vram
   52 D1:AC07 09 -  -  -  	add hl,bc;add ldir length
   53 D1:AC08 13 -  -  -  	inc de
   54 D1:AC09 EB -  -  -  	ex de,hl;hl is data
   55 D1:AC0A 3D -  -  -  	dec a
   56 D1:AC0B C2 FF AB D1 	jp nz,draw_fast_sprite_top_loop
   57 D1:AC0F -  -  -  -  	
   58 D1:AC0F -  -  -  -  	
   59 D1:AC0F C1 -  -  -  	pop bc
   60 D1:AC10 78 -  -  -  	ld a,b
   61 D1:AC11 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
   62 D1:AC12 -  -  -  -  		
   63 D1:AC12 01 00 00 00 	ld bc,0
   64 D1:AC16 4E -  -  -  	ld c,(hl)
   65 D1:AC17 EB -  -  -  	ex de,hl
   66 D1:AC18 C3 27 AC D1 	jp dfgs_loop
   67 D1:AC1C -  -  -  -  
   68 D1:AC1C -  -  -  -  
   69 D1:AC1C -  -  -  -  ;de = vram , hl = data
   70 D1:AC1C -  -  -  -  draw_fast_sprite_full:
   71 D1:AC1C 1B -  -  -  	dec de
   72 D1:AC1D 01 00 00 00 	ld bc,0
   73 D1:AC21 4E -  -  -  	ld c,(hl);height
   74 D1:AC22 09 -  -  -  	add hl,bc
   75 D1:AC23 7E -  -  -  	ld a,(hl);total loops
   76 D1:AC24 23 -  -  -  	inc hl
   77 D1:AC25 4E -  -  -  	ld c,(hl);first gap length
   78 D1:AC26 EB -  -  -  	ex de,hl
   79 D1:AC27 -  -  -  -  ;a = num loops, c = alphaLength,hl = vram
   80 D1:AC27 -  -  -  -  dfgs_loop:;gap, colors
   81 D1:AC27 09 -  -  -  	add hl,bc;add alpha length
   82 D1:AC28 EB -  -  -  	ex de,hl;swap, hl is data, de is vram
   83 D1:AC29 23 -  -  -  	inc hl
   84 D1:AC2A 4E -  -  -  	ld c,(hl);get ldir length
   85 D1:AC2B 23 -  -  -  	inc hl
   86 D1:AC2C ED B0 -  -  	ldir
   87 D1:AC2E 4E -  -  -  	ld c,(hl);load c with next alpha length
   88 D1:AC2F EB -  -  -  	ex de,hl;swap, hl is vram
   89 D1:AC30 3D -  -  -  	dec a
   90 D1:AC31 C2 27 AC D1 	jp nz,dfgs_loop
   91 D1:AC35 C9 -  -  -  	ret
   92 D1:AC36 -  -  -  -  	
   93 D1:AC36 -  -  -  -  	
   94 D1:AC36 -  -  -  -  	
   95 D1:AC36 -  -  -  -  	
   96 D1:AC36 -  -  -  -  
   97 D1:AC36 -  -  -  -  
   98 D1:AC36 -  -  -  -  ;hl = data, de = vram
   99 D1:AC36 -  -  -  -  draw_slow_sprite_full:
  100 D1:AC36 01 00 00 00 	ld bc,0
  101 D1:AC3A 4E -  -  -  	ld c,(hl);height
  102 D1:AC3B 09 -  -  -  	add hl,bc
  103 D1:AC3C 7E -  -  -  	ld a,(hl);num loops
  104 D1:AC3D D9 -  -  -  	exx
  105 D1:AC3E 4F -  -  -  	ld c,a
  106 D1:AC3F D9 -  -  -  	exx
  107 D1:AC40 1B -  -  -  	dec de
  108 D1:AC41 -  -  -  -  	;hl = (gap length) -1 de = vram-1 c' = loops
  109 D1:AC41 -  -  -  -  dsfgs_line_loop:
  110 D1:AC41 23 -  -  -  	inc hl;gap length
  111 D1:AC42 4E -  -  -  	ld c,(hl);gap length
  112 D1:AC43 EB -  -  -  	ex de,hl;hl is vram
  113 D1:AC44 09 -  -  -  	add hl,bc;add aplha gap
  114 D1:AC45 EB -  -  -  	ex de,hl;hl is data
  115 D1:AC46 23 -  -  -  	inc hl;hl points to single pix mask
  116 D1:AC47 1A -  -  -  	ld a,(de);vram data
  117 D1:AC48 A6 -  -  -  	and (hl)
  118 D1:AC49 23 -  -  -  	inc hl;pixel data
  119 D1:AC4A B6 -  -  -  	or (hl)
  120 D1:AC4B 12 -  -  -  	ld (de),a
  121 D1:AC4C 23 -  -  -  	inc hl;ldir length
  122 D1:AC4D -  -  -  -  	
  123 D1:AC4D 13 -  -  -  	inc de;move to next pixel
  124 D1:AC4E -  -  -  -  	
  125 D1:AC4E 7E -  -  -  	ld a,(hl);ldir length
  126 D1:AC4F 23 -  -  -  	inc hl;data
  127 D1:AC50 4F -  -  -  	ld c,a
  128 D1:AC51 B7 -  -  -  	or a
  129 D1:AC52 CA 58 AC D1 	jp z,dsfgs_ldir_skip
  130 D1:AC56 ED B0 -  -  	ldir
  131 D1:AC58 -  -  -  -  dsfgs_ldir_skip:
  132 D1:AC58 1A -  -  -  	ld a,(de);vram data
  133 D1:AC59 A6 -  -  -  	and (hl)
  134 D1:AC5A 23 -  -  -  	inc hl;pixel data
  135 D1:AC5B B6 -  -  -  	or (hl)
  136 D1:AC5C 12 -  -  -  	ld (de),a
  137 D1:AC5D -  -  -  -  	
  138 D1:AC5D D9 -  -  -  	exx 
  139 D1:AC5E 0D -  -  -  	dec c
  140 D1:AC5F D9 -  -  -  	exx
  141 D1:AC60 C2 41 AC D1 	jp nz,dsfgs_line_loop
  142 D1:AC64 C9 -  -  -  	ret
  143 D1:AC65 -  -  -  -  
  144 D1:AC65 -  -  -  -  
  145 D1:AC65 -  -  -  -  ;de = vram , hl = data, a = top lines to skip	
  146 D1:AC65 -  -  -  -  draw_slow_sprite_top_cut:
  147 D1:AC65 -  -  -  -  
  148 D1:AC65 E5 -  -  -  	push hl
  149 D1:AC66 01 00 00 00 	ld bc,0
  150 D1:AC6A 4F -  -  -  	ld c,a
  151 D1:AC6B 09 -  -  -  	add hl,bc
  152 D1:AC6C 7E -  -  -  	ld a,(hl);loops to skip
  153 D1:AC6D 32 90 AC D1 	ld (dsstc_loops_skipped),a
  154 D1:AC71 D9 -  -  -  	exx
  155 D1:AC72 47 -  -  -  	ld b,a;loops to skip
  156 D1:AC73 D9 -  -  -  	exx
  157 D1:AC74 E1 -  -  -  	pop hl
  158 D1:AC75 4E -  -  -  	ld c,(hl)
  159 D1:AC76 09 -  -  -  	add hl,bc;total loops
  160 D1:AC77 7E -  -  -  	ld a,(hl);total loops
  161 D1:AC78 23 -  -  -  	inc hl;gap length
  162 D1:AC79 -  -  -  -  
  163 D1:AC79 -  -  -  -  ;hl = data start, b' = num loops,bc = 0
  164 D1:AC79 D9 -  -  -  	exx
  165 D1:AC7A -  -  -  -  slow_sprite_data_traverse:
  166 D1:AC7A D9 -  -  -  	exx
  167 D1:AC7B 4E -  -  -  	ld c,(hl);gap length
  168 D1:AC7C EB -  -  -  	ex de,hl;hl is vram
  169 D1:AC7D 09 -  -  -  	add hl,bc
  170 D1:AC7E EB -  -  -  	ex de,hl
  171 D1:AC7F -  -  -  -  	
  172 D1:AC7F 23 -  -  -  	inc hl
  173 D1:AC80 23 -  -  -  	inc hl
  174 D1:AC81 23 -  -  -  	inc hl;ldir length
  175 D1:AC82 4E -  -  -  	ld c,(hl)
  176 D1:AC83 09 -  -  -  	add hl,bc
  177 D1:AC84 EB -  -  -  	ex de,hl
  178 D1:AC85 09 -  -  -  	add hl,bc
  179 D1:AC86 EB -  -  -  	ex de,hl
  180 D1:AC87 13 -  -  -  	inc de;single pix
  181 D1:AC88 23 -  -  -  	inc hl
  182 D1:AC89 23 -  -  -  	inc hl
  183 D1:AC8A 23 -  -  -  	inc hl;gap length
  184 D1:AC8B D9 -  -  -  	exx
  185 D1:AC8C 10 EC -  -  	djnz slow_sprite_data_traverse
  186 D1:AC8E D9 -  -  -  	exx
  187 D1:AC8F -  -  -  -  
  188 D1:AC8F -  -  -  -  dsstc_loops_skipped .equ $ + 1
  189 D1:AC8F D6 00 -  -  	sub a,0;loops skipped
  190 D1:AC91 D9 -  -  -  	exx
  191 D1:AC92 4F -  -  -  	ld c,a
  192 D1:AC93 D9 -  -  -  	exx
  193 D1:AC94 -  -  -  -  	
  194 D1:AC94 1B -  -  -  	dec de
  195 D1:AC95 2B -  -  -  	dec hl	
  196 D1:AC96 C3 41 AC D1 	jp dsfgs_line_loop
  197 D1:AC9A -  -  -  -  	
  198 D1:AC9A -  -  -  -  ;de = vram , hl = data, a = number lines to draw
  199 D1:AC9A -  -  -  -  draw_slow_sprite_bottom_cut:
  200 D1:AC9A 01 00 00 00 	ld bc,0
  201 D1:AC9E E5 -  -  -  	push hl
  202 D1:AC9F 4F -  -  -  	ld c,a;height
  203 D1:ACA0 09 -  -  -  	add hl,bc
  204 D1:ACA1 7E -  -  -  	ld a,(hl);num loops
  205 D1:ACA2 D9 -  -  -  	exx
  206 D1:ACA3 4F -  -  -  	ld c,a
  207 D1:ACA4 D9 -  -  -  	exx
  208 D1:ACA5 E1 -  -  -  	pop hl
  209 D1:ACA6 4E -  -  -  	ld c,(hl)
  210 D1:ACA7 09 -  -  -  	add hl,bc
  211 D1:ACA8 -  -  -  -  
  212 D1:ACA8 1B -  -  -  	dec de
  213 D1:ACA9 C3 41 AC D1 	jp dsfgs_line_loop
  214 D1:ACAD -  -  -  -  
  215 D1:ACAD -  -  -  -  
  216 D1:ACAD -  -  -  -  
  217 D1:ACAD -  -  -  -  
  218 D1:ACAD -  -  -  -  
  219 D1:ACAD -  -  -  -  
  220 D1:ACAD -  -  -  -  
  221 D1:ACAD -  -  -  -  
  222 D1:ACAD -  -  -  -  
  223 D1:ACAD -  -  -  -  
  224 D1:ACAD -  -  -  -  
  225 D1:ACAD -  -  -  -  
  226 D1:ACAD -  -  -  -  
  227 D1:ACAD -  -  -  -  
  228 D1:ACAD -  -  -  -  
  229 D1:ACAD -  -  -  -  
  230 D1:ACAD -  -  -  -  
  231 D1:ACAD -  -  -  -  
  232 D1:ACAD -  -  -  -  
  233 D1:ACAD -  -  -  -  
  234 D1:ACAD -  -  -  -  
  235 D1:ACAD -  -  -  -  
  236 D1:ACAD -  -  -  -  
  237 D1:ACAD -  -  -  -  
  238 D1:ACAD -  -  -  -  
  239 D1:ACAD -  -  -  -  
  240 D1:ACAD -  -  -  -  
  241 D1:ACAD -  -  -  -  
  242 D1:ACAD -  -  -  -  
  243 D1:ACAD -  -  -  -  
  244 D1:ACAD -  -  -  -  
  245 D1:ACAD -  -  -  -  
  246 D1:ACAD -  -  -  -  
  247 D1:ACAD -  -  -  -  
  248 D1:ACAD -  -  -  -  
  249 D1:ACAD -  -  -  -   
  250 D1:ACAD -  -  -  -  
  251 D1:ACAD -  -  -  -  
  252 D1:ACAD -  -  -  -  
  253 D1:ACAD -  -  -  -  
  254 D1:ACAD -  -  -  -  
  255 D1:ACAD -  -  -  -  
  256 D1:ACAD -  -  -  -  
  257 D1:ACAD -  -  -  -  
  258 D1:ACAD -  -  -  -  
  259 D1:ACAD -  -  -  -  
  260 D1:ACAD -  -  -  -  
  261 D1:ACAD -  -  -  -  
  262 D1:ACAD -  -  -  -  
  263 D1:ACAD -  -  -  -  
  264 D1:ACAD -  -  -  -  
  265 D1:ACAD -  -  -  -  
  266 D1:ACAD -  -  -  -  
  267 D1:ACAD -  -  -  -  
  268 D1:ACAD -  -  -  -  
  269 D1:ACAD -  -  -  -  
  270 D1:ACAD -  -  -  -  
  271 D1:ACAD -  -  -  -  
  272 D1:ACAD -  -  -  -  
  273 D1:ACAD -  -  -  -  
  274 D1:ACAD -  -  -  -  
  275 D1:ACAD -  -  -  -  
  276 D1:ACAD -  -  -  -  
  277 D1:ACAD -  -  -  -  
  278 D1:ACAD -  -  -  -  
  279 D1:ACAD -  -  -  -  
  280 D1:ACAD -  -  -  -  
  281 D1:ACAD -  -  -  -  
  282 D1:ACAD -  -  -  -  
  283 D1:ACAD -  -  -  -  
  284 D1:ACAD -  -  -  -  
  285 D1:ACAD -  -  -  -  
  286 D1:ACAD -  -  -  -  
  287 D1:ACAD -  -  -  -  
  288 D1:ACAD -  -  -  -  
  289 D1:ACAD -  -  -  -  
  290 D1:ACAD -  -  -  -  
  291 D1:ACAD -  -  -  -  
  292 D1:ACAD -  -  -  -  
  293 D1:ACAD -  -  -  -  
  294 D1:ACAD -  -  -  -  
  295 D1:ACAD -  -  -  -  
  296 D1:ACAD -  -  -  -  
  297 D1:ACAD -  -  -  -  
  298 D1:ACAD -  -  -  -  
  299 D1:ACAD -  -  -  -  
  300 D1:ACAD -  -  -  -  
  301 D1:ACAD -  -  -  -  
  302 D1:ACAD -  -  -  -  
  303 D1:ACAD -  -  -  -  
  304 D1:ACAD -  -  -  -  
  305 D1:ACAD -  -  -  -  	
  306 D1:ACAD -  -  -  -  	
Listing for file "ascent.asm"
  160 D1:ACAD -  -  -  -  #include "spriteDecompress.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\spriteDecompress.txt"
    1 D1:ACAD -  -  -  -  
    2 D1:ACAD -  -  -  -  
    3 D1:ACAD -  -  -  -  ;hl = sprite data start, de = main data decompress location de' = loops/line data location
    4 D1:ACAD -  -  -  -  sprite_decompress:
    5 D1:ACAD 3E D2 -  -  	ld a,%11010010;jp nc 
    6 D1:ACAF 32 B5 AD D1 	ld (sdcomp_end_reached_flag),a;reset end reached flag
    7 D1:ACB3 3E 00 -  -  	ld a,0
    8 D1:ACB5 32 C5 AD D1 	ld (sdcomp_loop_counter) ,a;reset loop counter
    9 D1:ACB9 CD E2 B1 D1 	call sdcomp_reset_noalpha
   10 D1:ACBD -  -  -  -  ;set bpc mode 
   11 D1:ACBD CB 7E -  -  	bit 7,(hl)
   12 D1:ACBF C4 8E B0 D1 	call nz,sdcomp_set_4bpp 
   13 D1:ACC3 CB 76 -  -  	bit 6,(hl)
   14 D1:ACC5 C4 E1 B0 D1 	call nz,sdcomp_set_3bpp 
   15 D1:ACC9 CB 6E -  -  	bit 5,(hl)
   16 D1:ACCB C4 32 B1 D1 	call nz,sdcomp_set_2bpp 
   17 D1:ACCF CB 66 -  -  	bit 4,(hl)
   18 D1:ACD1 C4 7B B1 D1 	call nz,sdcomp_set_1bpp 
   19 D1:ACD5 CB 5E -  -  	bit 3,(hl)
   20 D1:ACD7 C4 BA B1 D1 	call nz,sdcomp_set_0bpp 
   21 D1:ACDB CB 56 -  -  	bit 2,(hl)
   22 D1:ACDD C4 D1 B1 D1 	call nz,sdcomp_set_noalpha
   23 D1:ACE1 23 -  -  -  	inc hl
   24 D1:ACE2 -  -  -  -  	
   25 D1:ACE2 -  -  -  -  	
   26 D1:ACE2 -  -  -  -  ;set zeroes btwn lines
   27 D1:ACE2 7E -  -  -  	ld a,(hl);width,in px
   28 D1:ACE3 E5 -  -  -  	push hl 
   29 D1:ACE4 21 40 01 00 	ld hl,320
   30 D1:ACE8 01 00 00 00 	ld bc,0
   31 D1:ACEC 4F -  -  -  	ld c,a 
   32 D1:ACED 37 -  -  -  	scf 
   33 D1:ACEE 3F -  -  -  	ccf 
   34 D1:ACEF ED 42 -  -  	sbc hl,bc;320 - width
   35 D1:ACF1 22 F7 AE D1 	ld (sdcomp_zeroes_between_lines),hl
   36 D1:ACF5 E1 -  -  -  	pop hl 
   37 D1:ACF6 47 -  -  -  	ld b,a;width
   38 D1:ACF7 08 -  -  -  	ex af,af' ;'
   39 D1:ACF8 78 -  -  -  	ld a,b
   40 D1:ACF9 32 2B AF D1 	ld (sdcomp_sprite_width),a
   41 D1:ACFD 08 -  -  -  	ex af,af' ;'
   42 D1:ACFE -  -  -  -  
   43 D1:ACFE -  -  -  -  	
   44 D1:ACFE 37 -  -  -  	scf 
   45 D1:ACFF -  -  -  -  sdcomp_bg_sprite_1 .equ $
   46 D1:ACFF DA 13 AD D1 	jp c,sdcomp_bg_sprite_1_skip
   47 D1:AD03 -  -  -  -  	;a holds width 
   48 D1:AD03 -  -  -  -  sdcomp_offset_BG .equ $	
   49 D1:AD03 00 -  -  -  	nop ; inc a  
   50 D1:AD04 CB 47 -  -  	bit 0,a ;round up a 
   51 D1:AD06 CA 0B AD D1 	jp z,sdcomp_bg_sprite_1_round_skip
   52 D1:AD0A 3C -  -  -  	inc a 
   53 D1:AD0B -  -  -  -  sdcomp_bg_sprite_1_round_skip:
   54 D1:AD0B 12 -  -  -  	ld (de),a ;load width 
   55 D1:AD0C 13 -  -  -  	inc de
   56 D1:AD0D 3E 00 -  -  	ld a,0;nop 
   57 D1:AD0F 32 03 AD D1 	ld (sdcomp_offset_BG),a 
   58 D1:AD13 -  -  -  -  sdcomp_bg_sprite_1_skip:
   59 D1:AD13 -  -  -  -  
   60 D1:AD13 -  -  -  -  
   61 D1:AD13 3E 00 -  -  	ld a,0;nop 
   62 D1:AD15 32 03 AD D1 	ld (sdcomp_offset_BG),a 
   63 D1:AD19 -  -  -  -  
   64 D1:AD19 -  -  -  -  
   65 D1:AD19 23 -  -  -  	inc hl;to height
   66 D1:AD1A 7E -  -  -  	ld a,(hl);height
   67 D1:AD1B 32 E5 AE D1 	ld (sdcomp_lines_remaining),a;load remaining lines
   68 D1:AD1F -  -  -  -  	
   69 D1:AD1F 37 -  -  -  	scf 
   70 D1:AD20 -  -  -  -  sdcomp_bg_sprite_2 .equ $
   71 D1:AD20 D2 26 AD D1 	jp nc,sdcomp_bg_sprite_2_skip
   72 D1:AD24 12 -  -  -  	ld (de),a;height
   73 D1:AD25 13 -  -  -  	inc de
   74 D1:AD26 -  -  -  -  sdcomp_bg_sprite_2_skip:
   75 D1:AD26 D5 -  -  -  	push de;loop/line data start 
   76 D1:AD27 D9 -  -  -  	exx;to shadow
   77 D1:AD28 D1 -  -  -  	pop de ;de' is loop/line data
   78 D1:AD29 D9 -  -  -  	exx
   79 D1:AD2A -  -  -  -  
   80 D1:AD2A -  -  -  -  ;find start of color data
   81 D1:AD2A 23 -  -  -  	inc hl;alpha data start
   82 D1:AD2B E5 -  -  -  	push hl
   83 D1:AD2C -  -  -  -  	
   84 D1:AD2C 37 -  -  -  	scf
   85 D1:AD2D -  -  -  -  sdcomp_no_alpha_1 .equ $
   86 D1:AD2D D2 46 AD D1 	jp nc, sdcomp_no_alpha_1_skip
   87 D1:AD31 E5 -  -  -  	push hl
   88 D1:AD32 67 -  -  -  	ld h,a;height
   89 D1:AD33 68 -  -  -  	ld l,b;width
   90 D1:AD34 ED 6C -  -  	mlt hl;number of pixels
   91 D1:AD36 2B -  -  -  	dec hl
   92 D1:AD37 CB 3C -  -  	srl h
   93 D1:AD39 CB 1D -  -  	rr l
   94 D1:AD3B CB 3C -  -  	srl h
   95 D1:AD3D CB 1D -  -  	rr l 
   96 D1:AD3F CB 3C -  -  	srl h 
   97 D1:AD41 CB 1D -  -  	rr l ;divide by 8
   98 D1:AD43 23 -  -  -  	inc hl 
   99 D1:AD44 C1 -  -  -  	pop bc
  100 D1:AD45 09 -  -  -  	add hl,bc;hl holds start of color data
  101 D1:AD46 -  -  -  -  sdcomp_no_alpha_1_skip:
  102 D1:AD46 -  -  -  -  
  103 D1:AD46 -  -  -  -  	;HL POINTING TO COLOR DATA
  104 D1:AD46 -  -  -  -  
  105 D1:AD46 -  -  -  -  	
  106 D1:AD46 F5 -  -  -  	push af;save height
  107 D1:AD47 -  -  -  -  	
  108 D1:AD47 37 -  -  -  	scf 
  109 D1:AD48 -  -  -  -  sdcomp_get_indexed_color_1bpc .equ $ 
  110 D1:AD48 DA 52 AD D1 	jp c,sdcomp_get_indexed_color_1bpc_skip
  111 D1:AD4C 7E -  -  -  	ld a,(hl);color data 
  112 D1:AD4D 32 A8 AF D1 	ld (sdcomp_indexed_color_data),a 
  113 D1:AD51 23 -  -  -  	inc hl 
  114 D1:AD52 -  -  -  -  sdcomp_get_indexed_color_1bpc_skip:
  115 D1:AD52 -  -  -  -  
  116 D1:AD52 37 -  -  -  	scf 
  117 D1:AD53 -  -  -  -  sdcomp_get_indexed_color_2bpc .equ $ 
  118 D1:AD53 DA 5D AD D1 	jp c,sdcomp_get_indexed_color_2bpc_skip
  119 D1:AD57 7E -  -  -  	ld a,(hl);color data 
  120 D1:AD58 32 A9 AF D1 	ld (sdcomp_indexed_color_data+1),a 
  121 D1:AD5C 23 -  -  -  	inc hl 
  122 D1:AD5D -  -  -  -  sdcomp_get_indexed_color_2bpc_skip:
  123 D1:AD5D -  -  -  -  
  124 D1:AD5D 37 -  -  -  	scf 
  125 D1:AD5E -  -  -  -  sdcomp_get_indexed_color_3bpc .equ $ 
  126 D1:AD5E DA 6E AD D1 	jp c,sdcomp_get_indexed_color_3bpc_skip
  127 D1:AD62 7E -  -  -  	ld a,(hl);color data 
  128 D1:AD63 32 AA AF D1 	ld (sdcomp_indexed_color_data+2),a 
  129 D1:AD67 23 -  -  -  	inc hl 
  130 D1:AD68 7E -  -  -  	ld a,(hl);color data 
  131 D1:AD69 32 AB AF D1 	ld (sdcomp_indexed_color_data+3),a 
  132 D1:AD6D 23 -  -  -  	inc hl 
  133 D1:AD6E -  -  -  -  sdcomp_get_indexed_color_3bpc_skip:
  134 D1:AD6E -  -  -  -  
  135 D1:AD6E F1 -  -  -  	pop af
  136 D1:AD6F EB -  -  -  	ex de,hl
  137 D1:AD70 01 00 00 00 	ld bc,0
  138 D1:AD74 4F -  -  -  	ld c,a;height 
  139 D1:AD75 09 -  -  -  	add hl,bc
  140 D1:AD76 EB -  -  -  	ex de,hl;de points to data write location
  141 D1:AD77 -  -  -  -  	
  142 D1:AD77 -  -  -  -  	
  143 D1:AD77 D9 -  -  -  	exx;to shadow 
  144 D1:AD78 E1 -  -  -  	pop hl;alpha data	
  145 D1:AD79 -  -  -  -  
  146 D1:AD79 -  -  -  -  	;HL IS POINTING TO ALPHA DATA
  147 D1:AD79 0E 80 -  -  	ld c,%10000000;alpha mask
  148 D1:AD7B D9 -  -  -  	exx;out 
  149 D1:AD7C 0E 80 -  -  	ld c,%10000000;color mask
  150 D1:AD7E -  -  -  -  	
  151 D1:AD7E -  -  -  -  	
  152 D1:AD7E -  -  -  -  	
  153 D1:AD7E 37 -  -  -  	scf 
  154 D1:AD7F -  -  -  -  sdcomp_flip_1 .equ $
  155 D1:AD7F DA 9F AD D1 	jp c,sdcomp_find_gap_length;continue if no flip
  156 D1:AD83 -  -  -  -  
  157 D1:AD83 D9 -  -  -  	exx;to shadow 
  158 D1:AD84 2B -  -  -  	dec hl;dec alpha pointer
  159 D1:AD85 22 C9 AF D1 	ld (sdcomp_alpha_data_line_end_byte),hl 
  160 D1:AD89 3E 01 -  -  	ld a,%00000001;alpha mask
  161 D1:AD8B 32 CD AF D1 	ld (sdcomp_alpha_data_line_end_mask),a 
  162 D1:AD8F D9 -  -  -  	exx ;out 
  163 D1:AD90 2B -  -  -  	dec hl;dec color pointer
  164 D1:AD91 22 C2 AF D1 	ld (sdcomp_color_data_line_end_byte),hl 
  165 D1:AD95 3E 01 -  -  	ld a,%00000001;color mask
  166 D1:AD97 32 C6 AF D1 	ld (sdcomp_color_data_line_end_mask),a 
  167 D1:AD9B -  -  -  -  	
  168 D1:AD9B -  -  -  -  
  169 D1:AD9B -  -  -  -  	
  170 D1:AD9B -  -  -  -  	
  171 D1:AD9B CD C1 AF D1 	call sdcomp_traverse_line_data	
  172 D1:AD9F -  -  -  -  
  173 D1:AD9F -  -  -  -  ;START OF LOOP===================================================================================================
  174 D1:AD9F -  -  -  -  ;add amount to get from ending pixels to first nonzero pair
  175 D1:AD9F -  -  -  -  sdcomp_find_gap_length:
  176 D1:AD9F 37 -  -  -  	scf 
  177 D1:ADA0 -  -  -  -  sdcomp_bg_sprite_3 .equ $
  178 D1:ADA0 D2 3D B2 D1 	jp nc,sdcomp_bg_sprite_routine
  179 D1:ADA4 -  -  -  -  	
  180 D1:ADA4 3E D2 -  -  	ld a,%11010010;jp nc
  181 D1:ADA6 32 60 B2 D1 	ld (sdcomp_offset_BG_2),a;clear bg offset if not bg
  182 D1:ADAA -  -  -  -  	
  183 D1:ADAA D9 -  -  -  	exx ;toshadow
  184 D1:ADAB 06 00 -  -  	ld b,0;pairs found, always < 255 
  185 D1:ADAD -  -  -  -  sdcomp_add_1_gap_length .equ $
  186 D1:ADAD 00 -  -  -  	nop
  187 D1:ADAE 3E 00 -  -  	ld a,0;nop
  188 D1:ADB0 32 AD AD D1 	ld (sdcomp_add_1_gap_length),a
  189 D1:ADB4 -  -  -  -  sdcomp_find_gap_length_loop:
  190 D1:ADB4 -  -  -  -  	
  191 D1:ADB4 37 -  -  -  	scf 
  192 D1:ADB5 -  -  -  -  sdcomp_end_reached_flag .equ $;check if end of sprite reached
  193 D1:ADB5 D2 BA AF D1 	jp nc,sdcomp_end
  194 D1:ADB9 -  -  -  -  
  195 D1:ADB9 CD 92 AE D1 	call sdcomp_get_next_alpha_pair
  196 D1:ADBD -  -  -  -  	;a holds alpha data 
  197 D1:ADBD 04 -  -  -  	inc b
  198 D1:ADBE B7 -  -  -  	or a 
  199 D1:ADBF CA B4 AD D1 	jp z,sdcomp_find_gap_length_loop
  200 D1:ADC3 -  -  -  -  	;END OF LOOP, B HOLDS NUMBER OF 00 PAIRS  +1
  201 D1:ADC3 -  -  -  -  		
  202 D1:ADC3 -  -  -  -  	
  203 D1:ADC3 F5 -  -  -  	push af;saves leading pixel alpha data
  204 D1:ADC4 -  -  -  -  	;inc loop counter 
  205 D1:ADC4 -  -  -  -  sdcomp_loop_counter .equ $ + 1
  206 D1:ADC4 3E 00 -  -  	ld a,0;inc number of loops
  207 D1:ADC6 3C -  -  -  	inc a 
  208 D1:ADC7 32 C5 AD D1 	ld (sdcomp_loop_counter),a
  209 D1:ADCB -  -  -  -  	
  210 D1:ADCB 78 -  -  -  	ld a,b 
  211 D1:ADCC D9 -  -  -  	exx;out of shadow 
  212 D1:ADCD 12 -  -  -  	ld (de),a;GAP LENGTH 
  213 D1:ADCE 13 -  -  -  	inc de 
  214 D1:ADCF D9 -  -  -  	exx;into shadow 	
  215 D1:ADD0 -  -  -  -  	
  216 D1:ADD0 F1 -  -  -  	pop af
  217 D1:ADD1 37 -  -  -  	scf
  218 D1:ADD2 -  -  -  -  sdcomp_fast_sprite_1 .equ $ 
  219 D1:ADD2 D2 05 AE D1 	jp nc,sdcomp_ldir_start ;jp c if fast move to ldir loop 
  220 D1:ADD6 -  -  -  -  
  221 D1:ADD6 -  -  -  -  ;LEADING PIXELS
  222 D1:ADD6 -  -  -  -  	;a holds alpha data after gap, 11 01 10
  223 D1:ADD6 D9 -  -  -  	exx;out of shadow
  224 D1:ADD7 D5 -  -  -  	push de 
  225 D1:ADD8 -  -  -  -  	
  226 D1:ADD8 47 -  -  -  	ld b,a;save for later
  227 D1:ADD9 CB 67 -  -  	bit 4,a ;check if first pixel has color 
  228 D1:ADDB 3E 00 -  -  	ld a,0
  229 D1:ADDD 16 FF -  -  	ld d,%11111111;assuming no colors 
  230 D1:ADDF CA E9 AD D1 	jp z,sdcomp_leading_pixel_first_skip
  231 D1:ADE3 -  -  -  -  	;has first color
  232 D1:ADE3 16 F0 -  -  	ld d,%11110000;save second pixel of bg 
  233 D1:ADE5 CD B5 AF D1 	call sdcomp_get_next_color_ending_nibble
  234 D1:ADE9 -  -  -  -  sdcomp_leading_pixel_first_skip:
  235 D1:ADE9 -  -  -  -  	;a is either $00 or $0color1
  236 D1:ADE9 -  -  -  -  	
  237 D1:ADE9 1E FF -  -  	ld e,%11111111;assuming no colors
  238 D1:ADEB -  -  -  -  	
  239 D1:ADEB CB 40 -  -  	bit 0,b;check second pixel alpha
  240 D1:ADED 47 -  -  -  	ld b,a;save for later 
  241 D1:ADEE 3E 00 -  -  	ld a,0
  242 D1:ADF0 CA FA AD D1 	jp z,sdcomp_leading_pixel_second_skip;
  243 D1:ADF4 -  -  -  -  	;has second color 
  244 D1:ADF4 CD AC AF D1 	call sdcomp_get_next_color_leading_nibble
  245 D1:ADF8 -  -  -  -  	;a = color2 0 
  246 D1:ADF8 1E 0F -  -  	ld e,%00001111;save first pixel of bg
  247 D1:ADFA -  -  -  -  	
  248 D1:ADFA -  -  -  -  sdcomp_leading_pixel_second_skip:
  249 D1:ADFA -  -  -  -  	;a is either 00 or c2 0 
  250 D1:ADFA -  -  -  -  	;b is either 00 or 0 c1 
  251 D1:ADFA B0 -  -  -  	or b 
  252 D1:ADFB 47 -  -  -  	ld b,a;final color data
  253 D1:ADFC 7A -  -  -  	ld a,d 
  254 D1:ADFD A3 -  -  -  	and e ;final mask data 
  255 D1:ADFE -  -  -  -  	
  256 D1:ADFE D1 -  -  -  	pop de;return to pointer 
  257 D1:ADFF -  -  -  -  	
  258 D1:ADFF 12 -  -  -  	ld (de),a;write mask data 
  259 D1:AE00 13 -  -  -  	inc de 
  260 D1:AE01 78 -  -  -  	ld a,b;color data 
  261 D1:AE02 12 -  -  -  	ld (de),a;write color data 
  262 D1:AE03 13 -  -  -  	inc de 
  263 D1:AE04 D9 -  -  -  	exx;into shadow 
  264 D1:AE05 -  -  -  -  	
  265 D1:AE05 -  -  -  -  sdcomp_ldir_start:
  266 D1:AE05 -  -  -  -  ;CHECK FOR LDIR 
  267 D1:AE05 06 00 -  -  	ld b,0;pairs found 
  268 D1:AE07 -  -  -  -  sdcomp_ldir_loop:
  269 D1:AE07 CD 92 AE D1 	call sdcomp_get_next_alpha_pair
  270 D1:AE0B 04 -  -  -  	inc b
  271 D1:AE0C EE FF -  -  	xor %11111111;flip bits
  272 D1:AE0E CA 07 AE D1 	jp z,sdcomp_ldir_loop;alpha data was 11
  273 D1:AE12 -  -  -  -  	;b holds pairs found+1
  274 D1:AE12 -  -  -  -  	
  275 D1:AE12 37 -  -  -  	scf 
  276 D1:AE13 -  -  -  -  sdcomp_fast_sprite_2 .equ $
  277 D1:AE13 D2 30 AE D1 	jp nc,sdcomp_ldir_write
  278 D1:AE17 -  -  -  -  	;fast mode 
  279 D1:AE17 -  -  -  -  	;b holds ldir length 
  280 D1:AE17 -  -  -  -  	
  281 D1:AE17 -  -  -  -  sdcomp_ldir_not_fast:
  282 D1:AE17 EE FF -  -  	xor %11111111;flip back
  283 D1:AE19 -  -  -  -  	;a holds first non 11 pair 
  284 D1:AE19 05 -  -  -  	dec b ;b holds pairs found
  285 D1:AE1A CA 3F AE D1 	jp z,sdcomp_no_ldir;no pairs found,no ldir length
  286 D1:AE1E B7 -  -  -  	or a
  287 D1:AE1F C2 30 AE D1 	jp nz,sdcomp_ldir_write;ends not in 00, has single ending pixel
  288 D1:AE23 -  -  -  -  	;ends in 00,ending pixels will be 11 
  289 D1:AE23 -  -  -  -  	;must add 1 to next gap length, have already read first 00
  290 D1:AE23 3E 04 -  -  	ld a,%00000100;inc b 
  291 D1:AE25 32 AD AD D1 	ld (sdcomp_add_1_gap_length),a 
  292 D1:AE29 3E FF -  -  	ld a,$ff;ending pixels 11
  293 D1:AE2B -  -  -  -  	
  294 D1:AE2B 05 -  -  -  	dec b;reduce length by 1, final pair is end pixels
  295 D1:AE2C CA 3F AE D1 	jp z,sdcomp_no_ldir;no ldir length,ending pixels is 11 
  296 D1:AE30 -  -  -  -  	;b holds ldir length 
  297 D1:AE30 -  -  -  -  	
  298 D1:AE30 -  -  -  -  ;b holds ldir length, a holds ending pixels
  299 D1:AE30 -  -  -  -  sdcomp_ldir_write:
  300 D1:AE30 F5 -  -  -  	push af;save ending pixels
  301 D1:AE31 78 -  -  -  	ld a,b
  302 D1:AE32 D9 -  -  -  	exx ;out 
  303 D1:AE33 12 -  -  -  	ld (de),a;write ldir length
  304 D1:AE34 13 -  -  -  	inc de 
  305 D1:AE35 CD 7E AE D1 	call sdcomp_write_ldir_data_loop
  306 D1:AE39 D9 -  -  -  	exx ;toshadow
  307 D1:AE3A F1 -  -  -  	pop af;return ending pixels
  308 D1:AE3B -  -  -  -  	
  309 D1:AE3B -  -  -  -  	
  310 D1:AE3B C3 47 AE D1 	jp sdcomp_write_end_pixels
  311 D1:AE3F -  -  -  -  sdcomp_no_ldir:;no ldir length, a holds ending pixels,00,10,01,11
  312 D1:AE3F F5 -  -  -  	push af;save end pixels
  313 D1:AE40 -  -  -  -  	
  314 D1:AE40 D9 -  -  -  	exx;out of shadow
  315 D1:AE41 3E 00 -  -  	ld a,0
  316 D1:AE43 12 -  -  -  	ld (de),a 
  317 D1:AE44 13 -  -  -  	inc de 
  318 D1:AE45 D9 -  -  -  	exx 
  319 D1:AE46 F1 -  -  -  	pop af;return ending pixels
  320 D1:AE47 -  -  -  -  
  321 D1:AE47 -  -  -  -  
  322 D1:AE47 -  -  -  -  ;WRITE ENDING PIXELS 
  323 D1:AE47 -  -  -  -  
  324 D1:AE47 -  -  -  -  sdcomp_write_end_pixels:;a holds end pixels
  325 D1:AE47 -  -  -  -  	
  326 D1:AE47 D9 -  -  -  	exx;out of shadow
  327 D1:AE48 -  -  -  -  	
  328 D1:AE48 37 -  -  -  	scf 
  329 D1:AE49 -  -  -  -  sdcomp_fast_sprite_3 .equ $
  330 D1:AE49 D2 9F AD D1 	jp nc,sdcomp_find_gap_length;if fast, back to gap length
  331 D1:AE4D -  -  -  -  	
  332 D1:AE4D -  -  -  -  	
  333 D1:AE4D D5 -  -  -  	push de 
  334 D1:AE4E -  -  -  -  	
  335 D1:AE4E 47 -  -  -  	ld b,a;save for later
  336 D1:AE4F CB 67 -  -  	bit 4,a ;check if first pixel has color 
  337 D1:AE51 3E 00 -  -  	ld a,0
  338 D1:AE53 16 FF -  -  	ld d,%11111111;assuming no colors 
  339 D1:AE55 CA 5F AE D1 	jp z,sdcomp_ending_pixel_first_skip
  340 D1:AE59 -  -  -  -  	;has first color
  341 D1:AE59 16 F0 -  -  	ld d,%11110000;save second pixel of bg 
  342 D1:AE5B CD B5 AF D1 	call sdcomp_get_next_color_ending_nibble
  343 D1:AE5F -  -  -  -  sdcomp_ending_pixel_first_skip:
  344 D1:AE5F -  -  -  -  	;a is either $00 or $0color1
  345 D1:AE5F -  -  -  -  	
  346 D1:AE5F 1E FF -  -  	ld e,%11111111;assuming no colors
  347 D1:AE61 -  -  -  -  	
  348 D1:AE61 CB 40 -  -  	bit 0,b;check second pixel alpha
  349 D1:AE63 47 -  -  -  	ld b,a;save for later 
  350 D1:AE64 3E 00 -  -  	ld a,0
  351 D1:AE66 CA 70 AE D1 	jp z,sdcomp_ending_pixel_second_skip;
  352 D1:AE6A -  -  -  -  	;has second color 
  353 D1:AE6A CD AC AF D1 	call sdcomp_get_next_color_leading_nibble
  354 D1:AE6E -  -  -  -  	;a = color2 0 
  355 D1:AE6E 1E 0F -  -  	ld e,%00001111;save first pixel of bg
  356 D1:AE70 -  -  -  -  	
  357 D1:AE70 -  -  -  -  sdcomp_ending_pixel_second_skip:
  358 D1:AE70 -  -  -  -  	;a is either 00 or c2 0 
  359 D1:AE70 -  -  -  -  	;b is either 00 or 0 c1 
  360 D1:AE70 B0 -  -  -  	or b 
  361 D1:AE71 47 -  -  -  	ld b,a;final color data
  362 D1:AE72 7A -  -  -  	ld a,d 
  363 D1:AE73 A3 -  -  -  	and e ;final mask data 
  364 D1:AE74 -  -  -  -  	
  365 D1:AE74 D1 -  -  -  	pop de;return to pointer 
  366 D1:AE75 -  -  -  -  	
  367 D1:AE75 12 -  -  -  	ld (de),a;write mask data 
  368 D1:AE76 13 -  -  -  	inc de 
  369 D1:AE77 78 -  -  -  	ld a,b;color data 
  370 D1:AE78 12 -  -  -  	ld (de),a;write color data 
  371 D1:AE79 13 -  -  -  	inc de 
  372 D1:AE7A -  -  -  -  	
  373 D1:AE7A -  -  -  -  	
  374 D1:AE7A C3 9F AD D1 	jp sdcomp_find_gap_length;BACK TO START
  375 D1:AE7E -  -  -  -  	
  376 D1:AE7E -  -  -  -  	
  377 D1:AE7E -  -  -  -  
  378 D1:AE7E -  -  -  -  
  379 D1:AE7E -  -  -  -  
  380 D1:AE7E -  -  -  -  ;hl/c is color data, de is ldir write pos, b' is ldir length, not in shadow 
  381 D1:AE7E -  -  -  -  sdcomp_write_ldir_data_loop:
  382 D1:AE7E CD B5 AF D1 	call sdcomp_get_next_color_ending_nibble	
  383 D1:AE82 47 -  -  -  	ld b,a;first pixel
  384 D1:AE83 CD AC AF D1 	call sdcomp_get_next_color_leading_nibble
  385 D1:AE87 B0 -  -  -  	or b
  386 D1:AE88 -  -  -  -  	
  387 D1:AE88 -  -  -  -  	
  388 D1:AE88 12 -  -  -  	ld (de),a;write color data
  389 D1:AE89 13 -  -  -  	inc de
  390 D1:AE8A D9 -  -  -  	exx;to shadow
  391 D1:AE8B 05 -  -  -  	dec b;ldir length counter
  392 D1:AE8C D9 -  -  -  	exx
  393 D1:AE8D C2 7E AE D1 	jp nz,sdcomp_write_ldir_data_loop
  394 D1:AE91 C9 -  -  -  	ret
  395 D1:AE92 -  -  -  -  	
  396 D1:AE92 -  -  -  -  	
  397 D1:AE92 -  -  -  -  	
  398 D1:AE92 -  -  -  -  ;in shadow,returns a $FF,$0F,$F0,$00
  399 D1:AE92 -  -  -  -  sdcomp_get_next_alpha_pair:
  400 D1:AE92 CD BB AE D1 	call sdcomp_get_next_alpha_bit
  401 D1:AE96 B7 -  -  -  	or a 
  402 D1:AE97 CA A1 AE D1 	jp z,sdcomp_get_next_alpha_pair0
  403 D1:AE9B 3E F0 -  -  	ld a,$F0;FIRST BIT WAS 1
  404 D1:AE9D C3 A3 AE D1 	jp sdcomp_get_next_alpha_pair1
  405 D1:AEA1 -  -  -  -  sdcomp_get_next_alpha_pair0:
  406 D1:AEA1 3E 00 -  -  	ld a,0
  407 D1:AEA3 -  -  -  -  sdcomp_get_next_alpha_pair1:
  408 D1:AEA3 32 B9 AE D1 	ld (sdcomp_get_next_alpha_pair_or),a 
  409 D1:AEA7 -  -  -  -  	
  410 D1:AEA7 CD BB AE D1 	call sdcomp_get_next_alpha_bit
  411 D1:AEAB B7 -  -  -  	or a 
  412 D1:AEAC CA B6 AE D1 	jp z,sdcomp_get_next_alpha_pair2
  413 D1:AEB0 3E 0F -  -  	ld a,$0F;SECOND BIT WAS 1
  414 D1:AEB2 C3 B8 AE D1 	jp sdcomp_get_next_alpha_pair3
  415 D1:AEB6 -  -  -  -  sdcomp_get_next_alpha_pair2:
  416 D1:AEB6 3E 00 -  -  	ld a,0;SECOND BIT WAS 0
  417 D1:AEB8 -  -  -  -  sdcomp_get_next_alpha_pair3:	
  418 D1:AEB8 -  -  -  -  sdcomp_get_next_alpha_pair_or .equ $ + 1
  419 D1:AEB8 F6 00 -  -  	or 0;AND WITH FIRST BIT 
  420 D1:AEBA -  -  -  -  	
  421 D1:AEBA C9 -  -  -  	ret 
  422 D1:AEBB -  -  -  -  
  423 D1:AEBB -  -  -  -  
  424 D1:AEBB -  -  -  -  ;in shadow
  425 D1:AEBB -  -  -  -  sdcomp_get_next_alpha_bit:
  426 D1:AEBB -  -  -  -  	
  427 D1:AEBB 37 -  -  -  	scf
  428 D1:AEBC -  -  -  -  sdcomp_bit_offset .equ $ ;jp nc for offset
  429 D1:AEBC DA C9 AE D1 	jp c,sdcomp_bit_offset_skip
  430 D1:AEC0 3E DA -  -  	ld a,%11011010;jp c 
  431 D1:AEC2 32 BC AE D1 	ld (sdcomp_bit_offset),a
  432 D1:AEC6 3E 00 -  -  	ld a,0
  433 D1:AEC8 C9 -  -  -  	ret ;return 0 first bit
  434 D1:AEC9 -  -  -  -  sdcomp_bit_offset_skip:;skip bit offset
  435 D1:AEC9 -  -  -  -  	;CHECKS IF OUTSIDE OF SPRITE,VIRTUAL 0s
  436 D1:AEC9 08 -  -  -  	ex af,af' ;'
  437 D1:AECA B7 -  -  -  	or a
  438 D1:AECB CA 02 AF D1 	jp z,sdcomp_line_end
  439 D1:AECF 08 -  -  -  	ex af,af' ;'
  440 D1:AED0 -  -  -  -  
  441 D1:AED0 -  -  -  -  	;LOAD NEXT BIT
  442 D1:AED0 -  -  -  -  	
  443 D1:AED0 7E -  -  -  	ld a,(hl)
  444 D1:AED1 A1 -  -  -  	and c 
  445 D1:AED2 CD 30 AF D1 	call sdcomp_next_in_bitstream;incs bitstream
  446 D1:AED6 -  -  -  -  	
  447 D1:AED6 37 -  -  -  	scf 
  448 D1:AED7 -  -  -  -  sdcomp_no_alpha_2 .equ $
  449 D1:AED7 DA DD AE D1 	jp c,sdcomp_no_alpha_skip
  450 D1:AEDB 3E 01 -  -  	ld a,1
  451 D1:AEDD -  -  -  -  sdcomp_no_alpha_skip:
  452 D1:AEDD -  -  -  -  	
  453 D1:AEDD -  -  -  -  	
  454 D1:AEDD -  -  -  -  	;DEC WIDTH COUNTER
  455 D1:AEDD 08 -  -  -  	ex af,af' ;';to shadow
  456 D1:AEDE 3D -  -  -  	dec a;dec width counter
  457 D1:AEDF C2 00 AF D1 	jp nz,sdcomp_setup_line_gap_skip
  458 D1:AEE3 -  -  -  -  	
  459 D1:AEE3 -  -  -  -  	;END OF LINE REACHED, have just read alpha last bit of line
  460 D1:AEE3 -  -  -  -  	
  461 D1:AEE3 -  -  -  -  	;AT LINE END,WRITE LOOPS/LINE DATA
  462 D1:AEE3 F5 -  -  -  	push af;push shadow a 
  463 D1:AEE4 -  -  -  -  	;DEC NUMBER LINES REMAINING
  464 D1:AEE4 -  -  -  -  sdcomp_lines_remaining .equ $ + 1
  465 D1:AEE4 3E 00 -  -  	ld a,0
  466 D1:AEE6 3D -  -  -  	dec a 
  467 D1:AEE7 32 E5 AE D1 	ld (sdcomp_lines_remaining),a
  468 D1:AEEB C2 F5 AE D1 	jp nz,sdcomp_set_end_flag_skip
  469 D1:AEEF -  -  -  -  	;end of last line reached 
  470 D1:AEEF 3E DA -  -  	ld a,%11011010;jp c
  471 D1:AEF1 32 B5 AD D1 	ld (sdcomp_end_reached_flag) , a
  472 D1:AEF5 -  -  -  -  sdcomp_set_end_flag_skip:
  473 D1:AEF5 -  -  -  -  	;SET UP NUMBER OF VIRTUAL ZEROES
  474 D1:AEF5 E5 -  -  -  	push hl
  475 D1:AEF6 -  -  -  -  sdcomp_zeroes_between_lines .equ $ + 1 
  476 D1:AEF6 21 00 00 00 	ld hl,0;320-width
  477 D1:AEFA 22 05 AF D1 	ld (sdcomp_remaining_zeroes_between_lines),hl
  478 D1:AEFE E1 -  -  -  	pop hl
  479 D1:AEFF F1 -  -  -  	pop af 
  480 D1:AF00 -  -  -  -  	
  481 D1:AF00 -  -  -  -  	
  482 D1:AF00 -  -  -  -  sdcomp_setup_line_gap_skip:
  483 D1:AF00 08 -  -  -  	ex af,af' ;';out of shadow
  484 D1:AF01 C9 -  -  -  	ret;A HOLDS 0 OR NOT 0
  485 D1:AF02 -  -  -  -  	
  486 D1:AF02 -  -  -  -  	
  487 D1:AF02 -  -  -  -  	;IF OUTSIDE OF SPRITE,RETURN VIRTUAL 0
  488 D1:AF02 -  -  -  -  sdcomp_line_end:
  489 D1:AF02 08 -  -  -  	ex af,af' ;';out of shadow keep a' at 0 until next line start reached 
  490 D1:AF03 E5 -  -  -  	push hl
  491 D1:AF04 -  -  -  -  	;DEC REMAINING ZEROES
  492 D1:AF04 -  -  -  -  sdcomp_remaining_zeroes_between_lines .equ $ + 1 
  493 D1:AF04 21 00 00 00 	ld hl,0;320 - width 
  494 D1:AF08 2B -  -  -  	dec hl
  495 D1:AF09 22 05 AF D1 	ld (sdcomp_remaining_zeroes_between_lines),hl
  496 D1:AF0D 7D -  -  -  	ld a,l
  497 D1:AF0E B4 -  -  -  	or h
  498 D1:AF0F E1 -  -  -  	pop hl
  499 D1:AF10 CA 17 AF D1 	jp z,sdcomp_line_gap_end;IF END OF VIRTUAL ZEROES
  500 D1:AF14 3E 00 -  -  	ld a,0
  501 D1:AF16 C9 -  -  -  	ret;return 0
  502 D1:AF17 -  -  -  -  	
  503 D1:AF17 -  -  -  -  sdcomp_line_gap_end:
  504 D1:AF17 -  -  -  -  	
  505 D1:AF17 37 -  -  -  	scf 
  506 D1:AF18 -  -  -  -  sdcomp_bg_sprite_4 .equ $ 
  507 D1:AF18 D2 22 AF D1 	jp nc,sdcomp_bg_sprite_4_skip
  508 D1:AF1C -  -  -  -  	
  509 D1:AF1C 3A C5 AD D1 	ld a,(sdcomp_loop_counter)
  510 D1:AF20 12 -  -  -  	ld (de),a;write loops per line data
  511 D1:AF21 13 -  -  -  	inc de
  512 D1:AF22 -  -  -  -  sdcomp_bg_sprite_4_skip:
  513 D1:AF22 -  -  -  -  	
  514 D1:AF22 D9 -  -  -  	exx;out
  515 D1:AF23 -  -  -  -  
  516 D1:AF23 37 -  -  -  	scf
  517 D1:AF24 -  -  -  -  sdcomp_flip_7 .equ $ ;call c 
  518 D1:AF24 D4 C1 AF D1 	call nc,sdcomp_traverse_line_data
  519 D1:AF28 -  -  -  -  
  520 D1:AF28 D9 -  -  -  	exx ;in
  521 D1:AF29 -  -  -  -  	
  522 D1:AF29 08 -  -  -  	ex af,af' ;';to shadow
  523 D1:AF2A -  -  -  -  sdcomp_sprite_width .equ $ + 1
  524 D1:AF2A 3E 00 -  -  	ld a,0;ld shadow a with width
  525 D1:AF2C 08 -  -  -  	ex af,af' ;';out of shadow
  526 D1:AF2D 3E 00 -  -  	ld a,0;ret 0
  527 D1:AF2F C9 -  -  -  	ret
  528 D1:AF30 -  -  -  -  
  529 D1:AF30 -  -  -  -  
  530 D1:AF30 -  -  -  -  
  531 D1:AF30 -  -  -  -  ;rotates c and incs hl if needed to point to next bit. can be flipped to dec bit 
  532 D1:AF30 -  -  -  -  sdcomp_next_in_bitstream:
  533 D1:AF30 -  -  -  -  sdcomp_flip_bitstream .equ $ + 1
  534 D1:AF30 CB 09 -  -  	rrc c;rlc flip
  535 D1:AF32 D0 -  -  -  	ret nc
  536 D1:AF33 -  -  -  -  sdcomp_flip_bitstream_2 .equ $
  537 D1:AF33 23 -  -  -  	inc hl;dec hl flip
  538 D1:AF34 C9 -  -  -  	ret
  539 D1:AF35 -  -  -  -  
  540 D1:AF35 -  -  -  -  
  541 D1:AF35 -  -  -  -  
  542 D1:AF35 -  -  -  -  
  543 D1:AF35 -  -  -  -  
  544 D1:AF35 -  -  -  -  
  545 D1:AF35 -  -  -  -  ;bit orders
  546 D1:AF35 -  -  -  -  ;	noflip   flip 
  547 D1:AF35 -  -  -  -  ;4bpp 3210 	 0123
  548 D1:AF35 -  -  -  -  ;3bpp 210	 012
  549 D1:AF35 -  -  -  -  ;2bpp 10	 01
  550 D1:AF35 -  -  -  -  ;1bpp 0		 0
  551 D1:AF35 -  -  -  -  
  552 D1:AF35 -  -  -  -  
  553 D1:AF35 -  -  -  -  ;not in shadow,returns a=0000color
  554 D1:AF35 -  -  -  -  sdcomp_get_color_data:
  555 D1:AF35 D5 -  -  -  	push de 
  556 D1:AF36 1E 00 -  -  	ld e,0
  557 D1:AF38 -  -  -  -  	
  558 D1:AF38 37 -  -  -  	scf
  559 D1:AF39 -  -  -  -  sdcomp_0bpc .equ $ 
  560 D1:AF39 D2 83 AF D1 	jp nc,sdcomp_get_color_from_index
  561 D1:AF3D -  -  -  -  	
  562 D1:AF3D 7E -  -  -  	ld a,(hl)
  563 D1:AF3E A1 -  -  -  	and c 
  564 D1:AF3F CD 30 AF D1 	call sdcomp_next_in_bitstream
  565 D1:AF43 B7 -  -  -  	or a
  566 D1:AF44 CA 4A AF D1 	jp z,sdcomp_get_color_data_set_skip_1
  567 D1:AF48 -  -  -  -  sdcomp_color_bit_0 .equ $ + 1 
  568 D1:AF48 CB C3 -  -  	set 0,e 
  569 D1:AF4A -  -  -  -  sdcomp_get_color_data_set_skip_1:
  570 D1:AF4A -  -  -  -  	
  571 D1:AF4A 37 -  -  -  	scf
  572 D1:AF4B -  -  -  -  sdcomp_1bpc .equ $
  573 D1:AF4B D2 83 AF D1 	jp nc,sdcomp_get_color_from_index
  574 D1:AF4F -  -  -  -  	
  575 D1:AF4F -  -  -  -  	
  576 D1:AF4F 7E -  -  -  	ld a,(hl)
  577 D1:AF50 A1 -  -  -  	and c 
  578 D1:AF51 CD 30 AF D1 	call sdcomp_next_in_bitstream
  579 D1:AF55 B7 -  -  -  	or a
  580 D1:AF56 CA 5C AF D1 	jp z,sdcomp_get_color_data_set_skip_2
  581 D1:AF5A -  -  -  -  sdcomp_color_bit_1 .equ $ + 1 	
  582 D1:AF5A CB CB -  -  	set 1,e 
  583 D1:AF5C -  -  -  -  sdcomp_get_color_data_set_skip_2:
  584 D1:AF5C -  -  -  -  	
  585 D1:AF5C 37 -  -  -  	scf
  586 D1:AF5D -  -  -  -  sdcomp_2bpc .equ $
  587 D1:AF5D D2 83 AF D1 	jp nc,sdcomp_get_color_from_index
  588 D1:AF61 -  -  -  -  	
  589 D1:AF61 7E -  -  -  	ld a,(hl)
  590 D1:AF62 A1 -  -  -  	and c 
  591 D1:AF63 CD 30 AF D1 	call sdcomp_next_in_bitstream
  592 D1:AF67 B7 -  -  -  	or a
  593 D1:AF68 CA 6E AF D1 	jp z,sdcomp_get_color_data_set_skip_3
  594 D1:AF6C -  -  -  -  sdcomp_color_bit_2 .equ $ + 1 
  595 D1:AF6C CB D3 -  -  	set 2,e 
  596 D1:AF6E -  -  -  -  sdcomp_get_color_data_set_skip_3:
  597 D1:AF6E -  -  -  -  	
  598 D1:AF6E 37 -  -  -  	scf
  599 D1:AF6F -  -  -  -  sdcomp_3bpc .equ $
  600 D1:AF6F D2 83 AF D1 	jp nc,sdcomp_get_color_from_index	
  601 D1:AF73 -  -  -  -  
  602 D1:AF73 7E -  -  -  	ld a,(hl)
  603 D1:AF74 A1 -  -  -  	and c 
  604 D1:AF75 CD 30 AF D1 	call sdcomp_next_in_bitstream
  605 D1:AF79 B7 -  -  -  	or a
  606 D1:AF7A CA 80 AF D1 	jp z,sdcomp_get_color_data_set_skip_4
  607 D1:AF7E -  -  -  -  sdcomp_color_bit_3 .equ $ + 1 
  608 D1:AF7E CB DB -  -  	set 3,e 
  609 D1:AF80 -  -  -  -  sdcomp_get_color_data_set_skip_4:
  610 D1:AF80 -  -  -  -  ;4bpp, interpret as color data 
  611 D1:AF80 7B -  -  -  	ld a,e 
  612 D1:AF81 D1 -  -  -  	pop de 
  613 D1:AF82 C9 -  -  -  	ret 
  614 D1:AF83 -  -  -  -  
  615 D1:AF83 -  -  -  -  sdcomp_get_color_from_index:
  616 D1:AF83 E5 -  -  -  	push hl 
  617 D1:AF84 C5 -  -  -  	push bc 
  618 D1:AF85 01 00 00 00 	ld bc,0
  619 D1:AF89 21 A8 AF D1 	ld hl,sdcomp_indexed_color_data
  620 D1:AF8D 4B -  -  -  	ld c,e ;index number
  621 D1:AF8E CB 39 -  -  	srl c;div by 2
  622 D1:AF90 09 -  -  -  	add hl,bc;add index
  623 D1:AF91 7E -  -  -  	ld a,(hl)
  624 D1:AF92 CB 43 -  -  	bit 0,e;check lsb
  625 D1:AF94 CA 9E AF D1 	jp z,sdcomp_get_color_from_index_and_msn
  626 D1:AF98 E6 0F -  -  	and %00001111;a holds 0000color
  627 D1:AF9A C1 -  -  -  	pop bc 
  628 D1:AF9B E1 -  -  -  	pop hl 
  629 D1:AF9C D1 -  -  -  	pop de 
  630 D1:AF9D C9 -  -  -  	ret 
  631 D1:AF9E -  -  -  -  	
  632 D1:AF9E -  -  -  -  sdcomp_get_color_from_index_and_msn:
  633 D1:AF9E E6 F0 -  -  	and %11110000
  634 D1:AFA0 0F -  -  -  	rrca 
  635 D1:AFA1 0F -  -  -  	rrca 
  636 D1:AFA2 0F -  -  -  	rrca 
  637 D1:AFA3 0F -  -  -  	rrca ;a holds 0000colro
  638 D1:AFA4 C1 -  -  -  	pop bc 
  639 D1:AFA5 E1 -  -  -  	pop hl 
  640 D1:AFA6 D1 -  -  -  	pop de 
  641 D1:AFA7 C9 -  -  -  	ret
  642 D1:AFA8 -  -  -  -  	
  643 D1:AFA8 -  -  -  -  sdcomp_indexed_color_data:;4bpc
  644 D1:AFA8 00 00 00 00 	.db 0,0,0,0
  645 D1:AFAC -  -  -  -  
  646 D1:AFAC -  -  -  -  
  647 D1:AFAC -  -  -  -  
  648 D1:AFAC -  -  -  -  
  649 D1:AFAC -  -  -  -  
  650 D1:AFAC -  -  -  -  ;not in shadow, returns a = color0000
  651 D1:AFAC -  -  -  -  sdcomp_get_next_color_leading_nibble:
  652 D1:AFAC CD 35 AF D1 	call sdcomp_get_color_data
  653 D1:AFB0 0F -  -  -  	rrca 
  654 D1:AFB1 0F -  -  -  	rrca 
  655 D1:AFB2 0F -  -  -  	rrca 
  656 D1:AFB3 0F -  -  -  	rrca
  657 D1:AFB4 C9 -  -  -  	ret 
  658 D1:AFB5 -  -  -  -  
  659 D1:AFB5 -  -  -  -  
  660 D1:AFB5 -  -  -  -  ;not in shadow, returns a = 0000color
  661 D1:AFB5 -  -  -  -  sdcomp_get_next_color_ending_nibble:
  662 D1:AFB5 CD 35 AF D1 	call sdcomp_get_color_data
  663 D1:AFB9 C9 -  -  -  	ret
  664 D1:AFBA -  -  -  -  
  665 D1:AFBA -  -  -  -  sdcomp_end:
  666 D1:AFBA -  -  -  -  	;write final loop/line data
  667 D1:AFBA 3A C5 AD D1 	ld a,(sdcomp_loop_counter)
  668 D1:AFBE 12 -  -  -  	ld (de),a;write loops per line data
  669 D1:AFBF 13 -  -  -  	inc de
  670 D1:AFC0 C9 -  -  -  	ret 
  671 D1:AFC1 -  -  -  -  
  672 D1:AFC1 -  -  -  -  
  673 D1:AFC1 -  -  -  -  
  674 D1:AFC1 -  -  -  -  
  675 D1:AFC1 -  -  -  -  
  676 D1:AFC1 -  -  -  -  
  677 D1:AFC1 -  -  -  -  
  678 D1:AFC1 -  -  -  -  ;not in shadow ,destroys a
  679 D1:AFC1 -  -  -  -  sdcomp_traverse_line_data:
  680 D1:AFC1 -  -  -  -  sdcomp_color_data_line_end_byte .equ $ + 1
  681 D1:AFC1 21 00 00 00 	ld hl,0
  682 D1:AFC5 -  -  -  -  sdcomp_color_data_line_end_mask .equ $ + 1
  683 D1:AFC5 0E 00 -  -  	ld c,0
  684 D1:AFC7 D9 -  -  -  	exx;toshadow 
  685 D1:AFC8 -  -  -  -  sdcomp_alpha_data_line_end_byte .equ $ + 1
  686 D1:AFC8 21 00 00 00 	ld hl,0
  687 D1:AFCC -  -  -  -  sdcomp_alpha_data_line_end_mask .equ $ + 1
  688 D1:AFCC 0E 00 -  -  	ld c,0
  689 D1:AFCE D5 -  -  -  	push de
  690 D1:AFCF 3A 2B AF D1 	ld a,(sdcomp_sprite_width)
  691 D1:AFD3 5F -  -  -  	ld e,a
  692 D1:AFD4 -  -  -  -  sdcomp_traverse_line_data_loop:
  693 D1:AFD4 CB 09 -  -  	rrc c 
  694 D1:AFD6 D2 DB AF D1 	jp nc,sdcomp_traverse_line_data_alpha_inc_skip
  695 D1:AFDA 23 -  -  -  	inc hl
  696 D1:AFDB -  -  -  -  sdcomp_traverse_line_data_alpha_inc_skip:
  697 D1:AFDB 7E -  -  -  	ld a,(hl)
  698 D1:AFDC A1 -  -  -  	and c
  699 D1:AFDD -  -  -  -  sdcomp_no_alpha_3 .equ $
  700 D1:AFDD CA F3 AF D1 	jp z,sdcomp_traverse_line_data_color_skip;jp c for no alpha
  701 D1:AFE1 D9 -  -  -  	exx;out of shadow 
  702 D1:AFE2 -  -  -  -  sdcomp_traverse_1bpp .equ $ + 1
  703 D1:AFE2 CB 09 -  -  	rrc c ;rotate mask
  704 D1:AFE4 -  -  -  -  sdcomp_traverse_2bpp .equ $ + 1
  705 D1:AFE4 CB 09 -  -  	rrc c ;rrc a for 1bpc
  706 D1:AFE6 -  -  -  -  sdcomp_traverse_3bpp .equ $ + 1
  707 D1:AFE6 CB 09 -  -  	rrc c;rrc a for 2bpc
  708 D1:AFE8 -  -  -  -  sdcomp_traverse_4bpp .equ $ + 1
  709 D1:AFE8 CB 09 -  -  	rrc c
  710 D1:AFEA -  -  -  -  	
  711 D1:AFEA 79 -  -  -  	ld a,c
  712 D1:AFEB -  -  -  -  sdcomp_traverse_bit_check .equ $ + 1
  713 D1:AFEB E6 F0 -  -  	and %11110000 ; 4bpc = 11110000 3bpc = 11100000, 2bpc 11000000 1bpc 10000000
  714 D1:AFED CA F2 AF D1 	jp z,sdcomp_traverse_line_data_color_inc_skip
  715 D1:AFF1 23 -  -  -  	inc hl
  716 D1:AFF2 -  -  -  -  sdcomp_traverse_line_data_color_inc_skip:
  717 D1:AFF2 D9 -  -  -  	exx ;toshadow
  718 D1:AFF3 -  -  -  -  sdcomp_traverse_line_data_color_skip:
  719 D1:AFF3 1D -  -  -  	dec e
  720 D1:AFF4 C2 D4 AF D1 	jp nz,sdcomp_traverse_line_data_loop
  721 D1:AFF8 D1 -  -  -  	pop de  
  722 D1:AFF9 22 C9 AF D1 	ld (sdcomp_alpha_data_line_end_byte),hl
  723 D1:AFFD 79 -  -  -  	ld a,c
  724 D1:AFFE 32 CD AF D1 	ld (sdcomp_alpha_data_line_end_mask),a
  725 D1:B002 D9 -  -  -  	exx ;out
  726 D1:B003 22 C2 AF D1 	ld (sdcomp_color_data_line_end_byte),hl
  727 D1:B007 79 -  -  -  	ld a,c 
  728 D1:B008 32 C6 AF D1 	ld (sdcomp_color_data_line_end_mask),a
  729 D1:B00C C9 -  -  -  	ret
  730 D1:B00D -  -  -  -  
  731 D1:B00D -  -  -  -  
  732 D1:B00D -  -  -  -  
  733 D1:B00D -  -  -  -  sdcomp_set_flip:
  734 D1:B00D 3E D2 -  -  	ld a,%11010010;jp nc 
  735 D1:B00F 32 7F AD D1 	ld (sdcomp_flip_1),a 
  736 D1:B013 -  -  -  -   
  737 D1:B013 3E DC -  -  	ld a,%11011100;call c 
  738 D1:B015 32 24 AF D1 	ld (sdcomp_flip_7),a
  739 D1:B019 -  -  -  -  	
  740 D1:B019 3E 01 -  -  	ld a,%00000001;rlc 
  741 D1:B01B 32 31 AF D1 	ld (sdcomp_flip_bitstream),a
  742 D1:B01F 3E 2B -  -  	ld a,%00101011;dec hl
  743 D1:B021 32 33 AF D1 	ld (sdcomp_flip_bitstream_2),a
  744 D1:B025 -  -  -  -  	
  745 D1:B025 -  -  -  -  	
  746 D1:B025 -  -  -  -  	;set reverse color reading
  747 D1:B025 3E C3 -  -  	ld a,%11000011;set 0,e
  748 D1:B027 32 49 AF D1 	ld (sdcomp_color_bit_0),a 
  749 D1:B02B 3E CB -  -  	ld a,%11001011;set 1,e
  750 D1:B02D 32 5B AF D1 	ld (sdcomp_color_bit_1),a 
  751 D1:B031 3E D3 -  -  	ld a,%11010011;set 2,e
  752 D1:B033 32 6D AF D1 	ld (sdcomp_color_bit_2),a 
  753 D1:B037 3E DB -  -  	ld a,%11011011;set 3,e
  754 D1:B039 32 7F AF D1 	ld (sdcomp_color_bit_3),a 
  755 D1:B03D -  -  -  -  	
  756 D1:B03D 3E D8 -  -  	ld a,%11011000;ret c 
  757 D1:B03F 32 C7 B0 D1 	ld (sdcomp_flip_4),a
  758 D1:B043 32 1E B1 D1 	ld (sdcomp_flip_5),a
  759 D1:B047 32 6D B1 D1 	ld (sdcomp_flip_6),a
  760 D1:B04B 32 B2 B1 D1 	ld (sdcomp_flip_8),a
  761 D1:B04F -  -  -  -  	
  762 D1:B04F C9 -  -  -  	ret 
  763 D1:B050 -  -  -  -  	
  764 D1:B050 -  -  -  -  	
  765 D1:B050 -  -  -  -  sdcomp_reset_flip:
  766 D1:B050 3E DA -  -  	ld a,%11011010;jp c 
  767 D1:B052 32 7F AD D1 	ld (sdcomp_flip_1),a 
  768 D1:B056 -  -  -  -  
  769 D1:B056 3E D4 -  -  	ld a,%11010100;call nc 
  770 D1:B058 32 24 AF D1 	ld (sdcomp_flip_7),a
  771 D1:B05C -  -  -  -  	
  772 D1:B05C 3E 09 -  -  	ld a,%00001001;rrc 
  773 D1:B05E 32 31 AF D1 	ld (sdcomp_flip_bitstream),a
  774 D1:B062 3E 23 -  -  	ld a,%00100011;inc hl
  775 D1:B064 32 33 AF D1 	ld (sdcomp_flip_bitstream_2),a
  776 D1:B068 -  -  -  -  	
  777 D1:B068 -  -  -  -  	
  778 D1:B068 3E D0 -  -  	ld a,%11010000;ret nc 
  779 D1:B06A 32 C7 B0 D1 	ld (sdcomp_flip_4),a
  780 D1:B06E 32 1E B1 D1 	ld (sdcomp_flip_5),a
  781 D1:B072 32 6D B1 D1 	ld (sdcomp_flip_6),a
  782 D1:B076 32 B2 B1 D1 	ld (sdcomp_flip_8),a
  783 D1:B07A -  -  -  -  	
  784 D1:B07A -  -  -  -  	
  785 D1:B07A C9 -  -  -  	ret 
  786 D1:B07B -  -  -  -  
  787 D1:B07B -  -  -  -  
  788 D1:B07B -  -  -  -  
  789 D1:B07B -  -  -  -  sdcomp_set_offset:
  790 D1:B07B 3E D2 -  -  	ld a,%11010010;jp nc 
  791 D1:B07D 32 BC AE D1 	ld (sdcomp_bit_offset),a
  792 D1:B081 3E 3C -  -  	ld a, %00111100;inc a 
  793 D1:B083 32 03 AD D1 	ld (sdcomp_offset_BG),a
  794 D1:B087 3E DA -  -  	ld a,%11011010;jp c
  795 D1:B089 32 60 B2 D1 	ld (sdcomp_offset_BG_2),a	
  796 D1:B08D C9 -  -  -  	ret
  797 D1:B08E -  -  -  -  
  798 D1:B08E -  -  -  -  
  799 D1:B08E -  -  -  -  
  800 D1:B08E -  -  -  -  
  801 D1:B08E -  -  -  -  ;0,1,2,3,4bpp modes
  802 D1:B08E -  -  -  -  ;destroys a 
  803 D1:B08E -  -  -  -  sdcomp_set_4bpp:
  804 D1:B08E 3E D2 -  -  	ld a,%11010010;jp nc
  805 D1:B090 32 39 AF D1 	ld (sdcomp_0bpc),a
  806 D1:B094 32 4B AF D1 	ld (sdcomp_1bpc),a
  807 D1:B098 32 5D AF D1 	ld (sdcomp_2bpc),a
  808 D1:B09C 32 6F AF D1 	ld (sdcomp_3bpc),a
  809 D1:B0A0 -  -  -  -  	
  810 D1:B0A0 -  -  -  -  	
  811 D1:B0A0 -  -  -  -  ;traverse data 
  812 D1:B0A0 3E 09 -  -  	ld a,%00001001;rrc c
  813 D1:B0A2 32 E3 AF D1 	ld (sdcomp_traverse_1bpp),a
  814 D1:B0A6 32 E5 AF D1 	ld (sdcomp_traverse_2bpp),a
  815 D1:B0AA 32 E7 AF D1 	ld (sdcomp_traverse_3bpp),a
  816 D1:B0AE 32 E9 AF D1 	ld (sdcomp_traverse_4bpp),a
  817 D1:B0B2 -  -  -  -  	
  818 D1:B0B2 3E F0 -  -  	ld a,%11110000
  819 D1:B0B4 32 EC AF D1 	ld (sdcomp_traverse_bit_check),a
  820 D1:B0B8 -  -  -  -  	
  821 D1:B0B8 -  -  -  -  ;setting indexed colors 
  822 D1:B0B8 3E DA -  -  	ld a,%11011010;jp c 
  823 D1:B0BA 32 48 AD D1 	ld (sdcomp_get_indexed_color_1bpc),a
  824 D1:B0BE 32 53 AD D1 	ld (sdcomp_get_indexed_color_2bpc),a
  825 D1:B0C2 32 5E AD D1 	ld (sdcomp_get_indexed_color_3bpc),a
  826 D1:B0C6 -  -  -  -  	
  827 D1:B0C6 37 -  -  -  	scf 
  828 D1:B0C7 -  -  -  -  sdcomp_flip_4 .equ $
  829 D1:B0C7 D0 -  -  -  	ret nc 
  830 D1:B0C8 -  -  -  -  	;not flipped
  831 D1:B0C8 -  -  -  -  	
  832 D1:B0C8 3E DB -  -  	ld a,%11011011;set 3,e
  833 D1:B0CA 32 49 AF D1 	ld (sdcomp_color_bit_0),a 
  834 D1:B0CE 3E D3 -  -  	ld a,%11010011;set 2,e
  835 D1:B0D0 32 5B AF D1 	ld (sdcomp_color_bit_1),a 
  836 D1:B0D4 3E CB -  -  	ld a,%11001011;set 1,e
  837 D1:B0D6 32 6D AF D1 	ld (sdcomp_color_bit_2),a 
  838 D1:B0DA 3E C3 -  -  	ld a,%11000011;set 0,e
  839 D1:B0DC 32 7F AF D1 	ld (sdcomp_color_bit_3),a 
  840 D1:B0E0 C9 -  -  -  	ret 
  841 D1:B0E1 -  -  -  -  	
  842 D1:B0E1 -  -  -  -  
  843 D1:B0E1 -  -  -  -  sdcomp_set_3bpp:
  844 D1:B0E1 3E D2 -  -  	ld a,%11010010;jp nc
  845 D1:B0E3 32 39 AF D1 	ld (sdcomp_0bpc),a
  846 D1:B0E7 32 4B AF D1 	ld (sdcomp_1bpc),a
  847 D1:B0EB 32 5D AF D1 	ld (sdcomp_2bpc),a
  848 D1:B0EF -  -  -  -  	
  849 D1:B0EF 3E DA -  -  	ld a,%11011010;jp c 
  850 D1:B0F1 32 6F AF D1 	ld (sdcomp_3bpc),a
  851 D1:B0F5 -  -  -  -  	
  852 D1:B0F5 -  -  -  -  ;traverse data	
  853 D1:B0F5 3E 09 -  -  	ld a,%00001001;rrc c
  854 D1:B0F7 32 E3 AF D1 	ld (sdcomp_traverse_1bpp),a
  855 D1:B0FB 32 E5 AF D1 	ld (sdcomp_traverse_2bpp),a
  856 D1:B0FF 32 E7 AF D1 	ld (sdcomp_traverse_3bpp),a
  857 D1:B103 3E 0F -  -  	ld a,%00001111;rrc a
  858 D1:B105 32 E9 AF D1 	ld (sdcomp_traverse_4bpp),a
  859 D1:B109 -  -  -  -  	
  860 D1:B109 3E E0 -  -  	ld a,%11100000
  861 D1:B10B 32 EC AF D1 	ld (sdcomp_traverse_bit_check),a
  862 D1:B10F -  -  -  -  	
  863 D1:B10F -  -  -  -  ;setting indexed colors 
  864 D1:B10F 3E D2 -  -  	ld a,%11010010;jp nc 
  865 D1:B111 32 48 AD D1 	ld (sdcomp_get_indexed_color_1bpc),a
  866 D1:B115 32 53 AD D1 	ld (sdcomp_get_indexed_color_2bpc),a
  867 D1:B119 32 5E AD D1 	ld (sdcomp_get_indexed_color_3bpc),a
  868 D1:B11D -  -  -  -  	
  869 D1:B11D -  -  -  -  	
  870 D1:B11D -  -  -  -  	
  871 D1:B11D 37 -  -  -  	scf 
  872 D1:B11E -  -  -  -  sdcomp_flip_5 .equ $
  873 D1:B11E D0 -  -  -  	ret nc 
  874 D1:B11F -  -  -  -  	;not flipped
  875 D1:B11F -  -  -  -  	
  876 D1:B11F 3E D3 -  -  	ld a,%11010011;set 2,e
  877 D1:B121 32 49 AF D1 	ld (sdcomp_color_bit_0),a 
  878 D1:B125 3E CB -  -  	ld a,%11001011;set 1,e
  879 D1:B127 32 5B AF D1 	ld (sdcomp_color_bit_1),a 
  880 D1:B12B 3E C3 -  -  	ld a,%11000011;set 0,e
  881 D1:B12D 32 6D AF D1 	ld (sdcomp_color_bit_2),a 
  882 D1:B131 -  -  -  -  
  883 D1:B131 C9 -  -  -  	ret 
  884 D1:B132 -  -  -  -  
  885 D1:B132 -  -  -  -  sdcomp_set_2bpp:
  886 D1:B132 3E D2 -  -  	ld a,%11010010;jp nc
  887 D1:B134 32 39 AF D1 	ld (sdcomp_0bpc),a
  888 D1:B138 32 4B AF D1 	ld (sdcomp_1bpc),a
  889 D1:B13C -  -  -  -  	
  890 D1:B13C 3E DA -  -  	ld a,%11011010;jp c 
  891 D1:B13E 32 5D AF D1 	ld (sdcomp_2bpc),a
  892 D1:B142 -  -  -  -  	
  893 D1:B142 -  -  -  -  ;traverse data	
  894 D1:B142 3E 09 -  -  	ld a,%00001001;rrc c
  895 D1:B144 32 E3 AF D1 	ld (sdcomp_traverse_1bpp),a
  896 D1:B148 32 E5 AF D1 	ld (sdcomp_traverse_2bpp),a
  897 D1:B14C 3E 0F -  -  	ld a,%00001111;rrc a
  898 D1:B14E 32 E7 AF D1 	ld (sdcomp_traverse_3bpp),a
  899 D1:B152 32 E9 AF D1 	ld (sdcomp_traverse_4bpp),a
  900 D1:B156 -  -  -  -  	
  901 D1:B156 3E C0 -  -  	ld a,%11000000 
  902 D1:B158 32 EC AF D1 	ld (sdcomp_traverse_bit_check),a
  903 D1:B15C -  -  -  -  ;setting indexed colors 
  904 D1:B15C 3E D2 -  -  	ld a,%11010010;jp nc 
  905 D1:B15E 32 48 AD D1 	ld (sdcomp_get_indexed_color_1bpc),a
  906 D1:B162 32 53 AD D1 	ld (sdcomp_get_indexed_color_2bpc),a
  907 D1:B166 3E DA -  -  	ld a,%11011010;jp c 
  908 D1:B168 32 5E AD D1 	ld (sdcomp_get_indexed_color_3bpc),a	
  909 D1:B16C -  -  -  -  	
  910 D1:B16C 37 -  -  -  	scf 
  911 D1:B16D -  -  -  -  sdcomp_flip_6 .equ $
  912 D1:B16D D0 -  -  -  	ret nc 
  913 D1:B16E -  -  -  -  	;not flipped
  914 D1:B16E -  -  -  -  	
  915 D1:B16E -  -  -  -  
  916 D1:B16E 3E CB -  -  	ld a,%11001011;set 1,e
  917 D1:B170 32 49 AF D1 	ld (sdcomp_color_bit_0),a 
  918 D1:B174 3E C3 -  -  	ld a,%11000011;set 0,e
  919 D1:B176 32 5B AF D1 	ld (sdcomp_color_bit_1),a 
  920 D1:B17A -  -  -  -  
  921 D1:B17A C9 -  -  -  	ret 
  922 D1:B17B -  -  -  -  
  923 D1:B17B -  -  -  -  
  924 D1:B17B -  -  -  -  
  925 D1:B17B -  -  -  -  sdcomp_set_1bpp:
  926 D1:B17B 3E D2 -  -  	ld a,%11010010;jp nc
  927 D1:B17D 32 39 AF D1 	ld (sdcomp_0bpc),a
  928 D1:B181 -  -  -  -  	
  929 D1:B181 3E DA -  -  	ld a,%11011010;jp c 
  930 D1:B183 32 4B AF D1 	ld (sdcomp_1bpc),a
  931 D1:B187 -  -  -  -  	
  932 D1:B187 -  -  -  -  ;traverse data	
  933 D1:B187 3E 09 -  -  	ld a,%00001001;rrc c
  934 D1:B189 32 E3 AF D1 	ld (sdcomp_traverse_1bpp),a
  935 D1:B18D 3E 0F -  -  	ld a,%00001111;rrc a
  936 D1:B18F 32 E5 AF D1 	ld (sdcomp_traverse_2bpp),a
  937 D1:B193 32 E7 AF D1 	ld (sdcomp_traverse_3bpp),a
  938 D1:B197 32 E9 AF D1 	ld (sdcomp_traverse_4bpp),a
  939 D1:B19B 3E 80 -  -  	ld a,%10000000
  940 D1:B19D 32 EC AF D1 	ld (sdcomp_traverse_bit_check),a
  941 D1:B1A1 -  -  -  -  ;setting indexed colors 
  942 D1:B1A1 3E D2 -  -  	ld a,%11010010;jp nc 
  943 D1:B1A3 32 48 AD D1 	ld (sdcomp_get_indexed_color_1bpc),a
  944 D1:B1A7 3E DA -  -  	ld a,%11011010;jp c 
  945 D1:B1A9 32 53 AD D1 	ld (sdcomp_get_indexed_color_2bpc),a
  946 D1:B1AD 32 5E AD D1 	ld (sdcomp_get_indexed_color_3bpc),a	
  947 D1:B1B1 -  -  -  -  	
  948 D1:B1B1 -  -  -  -  
  949 D1:B1B1 37 -  -  -  	scf 
  950 D1:B1B2 -  -  -  -  sdcomp_flip_8 .equ $
  951 D1:B1B2 D0 -  -  -  	ret nc 
  952 D1:B1B3 -  -  -  -  	;not flipped
  953 D1:B1B3 -  -  -  -  	
  954 D1:B1B3 -  -  -  -  
  955 D1:B1B3 3E C3 -  -  	ld a,%11000011;set 0,e
  956 D1:B1B5 32 49 AF D1 	ld (sdcomp_color_bit_0),a 
  957 D1:B1B9 -  -  -  -  
  958 D1:B1B9 C9 -  -  -  	ret 
  959 D1:B1BA -  -  -  -  	
  960 D1:B1BA -  -  -  -  
  961 D1:B1BA -  -  -  -  sdcomp_set_0bpp:
  962 D1:B1BA 3E DA -  -  	ld a,%11011010;jp c 
  963 D1:B1BC 32 39 AF D1 	ld (sdcomp_0bpc),a
  964 D1:B1C0 -  -  -  -  
  965 D1:B1C0 -  -  -  -  
  966 D1:B1C0 3E D2 -  -  	ld a,%11010010;jp nc 
  967 D1:B1C2 32 48 AD D1 	ld (sdcomp_get_indexed_color_1bpc),a
  968 D1:B1C6 3E DA -  -  	ld a,%11011010;jp c 
  969 D1:B1C8 32 53 AD D1 	ld (sdcomp_get_indexed_color_2bpc),a
  970 D1:B1CC 32 5E AD D1 	ld (sdcomp_get_indexed_color_3bpc),a	
  971 D1:B1D0 -  -  -  -  	
  972 D1:B1D0 C9 -  -  -  	ret 
  973 D1:B1D1 -  -  -  -  	
  974 D1:B1D1 -  -  -  -  sdcomp_set_noalpha:
  975 D1:B1D1 3E DA -  -  	ld a,%11011010;jp c 
  976 D1:B1D3 32 2D AD D1 	ld (sdcomp_no_alpha_1),a 
  977 D1:B1D7 32 DD AF D1 	ld (sdcomp_no_alpha_3),a 
  978 D1:B1DB 3E D2 -  -  	ld a,%11010010;jp nc 
  979 D1:B1DD 32 D7 AE D1 	ld (sdcomp_no_alpha_2),a 
  980 D1:B1E1 C9 -  -  -  	ret 
  981 D1:B1E2 -  -  -  -  	
  982 D1:B1E2 -  -  -  -  sdcomp_reset_noalpha:
  983 D1:B1E2 3E DA -  -  	ld a,%11011010;jp c 
  984 D1:B1E4 32 D7 AE D1 	ld (sdcomp_no_alpha_2),a 
  985 D1:B1E8 3E D2 -  -  	ld a,%11010010;jp nc 
  986 D1:B1EA 32 2D AD D1 	ld (sdcomp_no_alpha_1),a 
  987 D1:B1EE 3E CA -  -  	ld a,%11001010;jp z
  988 D1:B1F0 32 DD AF D1 	ld (sdcomp_no_alpha_3),a 
  989 D1:B1F4 C9 -  -  -  	ret 
  990 D1:B1F5 -  -  -  -  
  991 D1:B1F5 -  -  -  -  
  992 D1:B1F5 -  -  -  -  sdcomp_set_fast_sprite:
  993 D1:B1F5 3E DA -  -  	ld a,%11011010;jp c 
  994 D1:B1F7 32 D2 AD D1 	ld (sdcomp_fast_sprite_1),a 
  995 D1:B1FB 32 13 AE D1 	ld (sdcomp_fast_sprite_2),a
  996 D1:B1FF 32 49 AE D1 	ld (sdcomp_fast_sprite_3),a
  997 D1:B203 C9 -  -  -  	ret
  998 D1:B204 -  -  -  -  sdcomp_reset_fast_sprite:
  999 D1:B204 3E D2 -  -  	ld a,%11010010;jp nc
 1000 D1:B206 32 D2 AD D1 	ld (sdcomp_fast_sprite_1),a 
 1001 D1:B20A 32 13 AE D1 	ld (sdcomp_fast_sprite_2),a
 1002 D1:B20E 32 49 AE D1 	ld (sdcomp_fast_sprite_3),a
 1003 D1:B212 C9 -  -  -  	ret
 1004 D1:B213 -  -  -  -  	
 1005 D1:B213 -  -  -  -  	
 1006 D1:B213 -  -  -  -  sdcomp_set_bg_sprite:
 1007 D1:B213 3E D2 -  -  	ld a,%11010010;jp nc
 1008 D1:B215 32 FF AC D1 	ld (sdcomp_bg_sprite_1),a 
 1009 D1:B219 3E DA -  -  	ld a,%11011010;jp c 
 1010 D1:B21B 32 20 AD D1 	ld (sdcomp_bg_sprite_2),a
 1011 D1:B21F 32 A0 AD D1 	ld (sdcomp_bg_sprite_3),a
 1012 D1:B223 32 18 AF D1 	ld (sdcomp_bg_sprite_4),a
 1013 D1:B227 C9 -  -  -  	ret
 1014 D1:B228 -  -  -  -  
 1015 D1:B228 -  -  -  -  	
 1016 D1:B228 -  -  -  -  sdcomp_reset_bg_sprite:
 1017 D1:B228 3E DA -  -  	ld a,%11011010;jp c 
 1018 D1:B22A 32 FF AC D1 	ld (sdcomp_bg_sprite_1),a 
 1019 D1:B22E 3E D2 -  -  	ld a,%11010010;jp nc
 1020 D1:B230 32 20 AD D1 	ld (sdcomp_bg_sprite_2),a
 1021 D1:B234 32 A0 AD D1 	ld (sdcomp_bg_sprite_3),a
 1022 D1:B238 32 18 AF D1 	ld (sdcomp_bg_sprite_4),a
 1023 D1:B23C C9 -  -  -  	ret
 1024 D1:B23D -  -  -  -  
 1025 D1:B23D -  -  -  -  ;not in shadow 
 1026 D1:B23D -  -  -  -  sdcomp_bg_sprite_routine:
 1027 D1:B23D D9 -  -  -  	exx ;in 
 1028 D1:B23E D5 -  -  -  	push de
 1029 D1:B23F D9 -  -  -  	exx ;out 
 1030 D1:B240 D1 -  -  -  	pop de ;transfer loops/line write location to be main write location
 1031 D1:B241 D9 -  -  -  	exx;in 
 1032 D1:B242 C3 64 B2 D1 	jp sdcomp_bg_sprite_loop_skip;start of data, not virtual
 1033 D1:B246 -  -  -  -  ;not in shadow 
 1034 D1:B246 -  -  -  -  sdcomp_bg_sprite_loop:
 1035 D1:B246 D9 -  -  -  	exx;toshadow 
 1036 D1:B247 -  -  -  -  	
 1037 D1:B247 -  -  -  -  	
 1038 D1:B247 08 -  -  -  	ex af,af' ;'
 1039 D1:B248 47 -  -  -  	ld b,a;b holds a'
 1040 D1:B249 08 -  -  -  	ex af,af' ;'
 1041 D1:B24A 78 -  -  -  	ld a,b
 1042 D1:B24B B7 -  -  -  	or a;check if a' is 0
 1043 D1:B24C C2 64 B2 D1 	jp nz,sdcomp_bg_sprite_loop_skip;if zero check if virtual or not, if not use as real data
 1044 D1:B250 -  -  -  -  	
 1045 D1:B250 -  -  -  -  	;start of virtual zeroes
 1046 D1:B250 -  -  -  -  sdcomp_bg_sprite_traverse_virtual_zeroes:
 1047 D1:B250 CD 92 AE D1 	call sdcomp_get_next_alpha_pair;read next alpha pair 
 1048 D1:B254 47 -  -  -  	ld b,a
 1049 D1:B255 08 -  -  -  	ex af,af' ;'
 1050 D1:B256 F5 -  -  -  	push af
 1051 D1:B257 08 -  -  -  	ex af,af' ;'
 1052 D1:B258 F1 -  -  -  	pop af
 1053 D1:B259 B7 -  -  -  	or a;check if a' is 0
 1054 D1:B25A CA 50 B2 D1 	jp z,sdcomp_bg_sprite_traverse_virtual_zeroes
 1055 D1:B25E 78 -  -  -  	ld a,b;a holds prev alpha pair
 1056 D1:B25F -  -  -  -  	;end of vitual zeroes  
 1057 D1:B25F -  -  -  -  
 1058 D1:B25F 37 -  -  -  	scf 
 1059 D1:B260 -  -  -  -  sdcomp_offset_BG_2 .equ $
 1060 D1:B260 D2 68 B2 D1 	jp nc,sdcomp_bg_zeroes_end_skip;if offset, use previously read data 
 1061 D1:B264 -  -  -  -  	;if no offset, use next alpha pair
 1062 D1:B264 -  -  -  -  	
 1063 D1:B264 -  -  -  -  sdcomp_bg_sprite_loop_skip:;not in virt 0s 
 1064 D1:B264 CD 92 AE D1 	call sdcomp_get_next_alpha_pair;read next alpha pair 
 1065 D1:B268 -  -  -  -  sdcomp_bg_zeroes_end_skip:
 1066 D1:B268 D9 -  -  -  	exx;out 
 1067 D1:B269 -  -  -  -  	
 1068 D1:B269 -  -  -  -  	;write mask and color data 
 1069 D1:B269 D5 -  -  -  	push de 
 1070 D1:B26A -  -  -  -  	
 1071 D1:B26A 47 -  -  -  	ld b,a;save for later
 1072 D1:B26B CB 67 -  -  	bit 4,a ;check if first pixel has color 
 1073 D1:B26D 3E 00 -  -  	ld a,0
 1074 D1:B26F 16 FF -  -  	ld d,%11111111;assuming no colors 
 1075 D1:B271 CA 7B B2 D1 	jp z,sdcomp_bg_pixel_first_skip
 1076 D1:B275 -  -  -  -  	;has first color
 1077 D1:B275 16 F0 -  -  	ld d,%11110000;save second pixel of bg 
 1078 D1:B277 CD B5 AF D1 	call sdcomp_get_next_color_ending_nibble
 1079 D1:B27B -  -  -  -  sdcomp_bg_pixel_first_skip:
 1080 D1:B27B -  -  -  -  	;a is either $00 or $0color1
 1081 D1:B27B -  -  -  -  	
 1082 D1:B27B 1E FF -  -  	ld e,%11111111;assuming no colors
 1083 D1:B27D -  -  -  -  	
 1084 D1:B27D CB 40 -  -  	bit 0,b;check second pixel alpha
 1085 D1:B27F 47 -  -  -  	ld b,a;save for later 
 1086 D1:B280 3E 00 -  -  	ld a,0
 1087 D1:B282 CA 8C B2 D1 	jp z,sdcomp_bg_pixel_second_skip;
 1088 D1:B286 -  -  -  -  	;has second color 
 1089 D1:B286 CD AC AF D1 	call sdcomp_get_next_color_leading_nibble
 1090 D1:B28A -  -  -  -  	;a = color2 0 
 1091 D1:B28A 1E 0F -  -  	ld e,%00001111;save first pixel of bg
 1092 D1:B28C -  -  -  -  	
 1093 D1:B28C -  -  -  -  sdcomp_bg_pixel_second_skip:
 1094 D1:B28C -  -  -  -  	;a is either 00 or c2 0 
 1095 D1:B28C -  -  -  -  	;b is either 00 or 0 c1 
 1096 D1:B28C B0 -  -  -  	or b 
 1097 D1:B28D 47 -  -  -  	ld b,a;final color data
 1098 D1:B28E 7A -  -  -  	ld a,d 
 1099 D1:B28F A3 -  -  -  	and e ;final mask data 
 1100 D1:B290 -  -  -  -  	
 1101 D1:B290 D1 -  -  -  	pop de;return to pointer 
 1102 D1:B291 12 -  -  -  	ld (de),a;write mask data 
 1103 D1:B292 13 -  -  -  	inc de 
 1104 D1:B293 78 -  -  -  	ld a,b;color data 
 1105 D1:B294 12 -  -  -  	ld (de),a;write color data 
 1106 D1:B295 13 -  -  -  	inc de 
 1107 D1:B296 -  -  -  -  	
 1108 D1:B296 -  -  -  -  	;check if end reached 
 1109 D1:B296 3A B5 AD D1 	ld a,(sdcomp_end_reached_flag)
 1110 D1:B29A FE DA -  -  	cp %11011010;jp c
 1111 D1:B29C 3E 00 -  -  	ld a,0
 1112 D1:B29E C2 46 B2 D1 	jp nz,sdcomp_bg_sprite_loop 
 1113 D1:B2A2 3E D2 -  -  	ld a,%11010010;jp nc
 1114 D1:B2A4 32 60 B2 D1 	ld (sdcomp_offset_BG_2),a
 1115 D1:B2A8 C9 -  -  -  	ret 
 1116 D1:B2A9 -  -  -  -  
 1117 D1:B2A9 -  -  -  -  ;FIND GAP LENGTH
 1118 D1:B2A9 -  -  -  -  ;read bitsteam in pairs
 1119 D1:B2A9 -  -  -  -  ;gap length = number of full pairs found 
 1120 D1:B2A9 -  -  -  -  
 1121 D1:B2A9 -  -  -  -  ;STARTING PIXEL(S);have read either 11,01,10 in bitstream
 1122 D1:B2A9 -  -  -  -  ;write either both, start,or end pixel 
 1123 D1:B2A9 -  -  -  -  
 1124 D1:B2A9 -  -  -  -  ;LDIR
 1125 D1:B2A9 -  -  -  -  ;read number of pairs of 11 in bitstream 
 1126 D1:B2A9 -  -  -  -  ;if 0 move to ending pixels
 1127 D1:B2A9 -  -  -  -  ;if ends in 00, last full 11 pair will be ending pixels 
 1128 D1:B2A9 -  -  -  -  ;write ldir length 
 1129 D1:B2A9 -  -  -  -  ;if 0 move to next step
 1130 D1:B2A9 -  -  -  -  ;else write ldir data 
 1131 D1:B2A9 -  -  -  -  
 1132 D1:B2A9 -  -  -  -  
 1133 D1:B2A9 -  -  -  -  ;ENDING PIXEL(S)
 1134 D1:B2A9 -  -  -  -  ;00 if there is nothing after leading pixels 
 1135 D1:B2A9 -  -  -  -  ;11 10 01 otherwise
 1136 D1:B2A9 -  -  -  -  
 1137 D1:B2A9 -  -  -  -  ;BACK TO GAP LENGTH
 1138 D1:B2A9 -  -  -  -  
 1139 D1:B2A9 -  -  -  -  
 1140 D1:B2A9 -  -  -  -  
 1141 D1:B2A9 -  -  -  -  
 1142 D1:B2A9 -  -  -  -  
 1143 D1:B2A9 -  -  -  -  
 1144 D1:B2A9 -  -  -  -  
 1145 D1:B2A9 -  -  -  -  
 1146 D1:B2A9 -  -  -  -  
 1147 D1:B2A9 -  -  -  -  
 1148 D1:B2A9 -  -  -  -  
 1149 D1:B2A9 -  -  -  -  
 1150 D1:B2A9 -  -  -  -  
 1151 D1:B2A9 -  -  -  -  
 1152 D1:B2A9 -  -  -  -  
 1153 D1:B2A9 -  -  -  -  
 1154 D1:B2A9 -  -  -  -  
 1155 D1:B2A9 -  -  -  -  
 1156 D1:B2A9 -  -  -  -  
 1157 D1:B2A9 -  -  -  -  
 1158 D1:B2A9 -  -  -  -  
 1159 D1:B2A9 -  -  -  -  	
 1160 D1:B2A9 -  -  -  -  	
 1161 D1:B2A9 -  -  -  -  	
 1162 D1:B2A9 -  -  -  -  	
Listing for file "ascent.asm"
  161 D1:B2A9 -  -  -  -  #include "drawFG.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFG.txt"
    1 D1:B2A9 -  -  -  -  
    2 D1:B2A9 -  -  -  -  
    3 D1:B2A9 -  -  -  -  draw_mg:
    4 D1:B2A9 2A 75 A9 D1 	ld hl,(draw_buffer)
    5 D1:B2AD 22 77 B3 D1 	ld (dfgs_vram_top_1),hl
    6 D1:B2B1 22 DD B3 D1 	ld (dfgs_vram_top_2),hl
    7 D1:B2B5 01 60 95 00 	ld bc,160*239
    8 D1:B2B9 09 -  -  -  	add hl,bc
    9 D1:B2BA 22 4B B4 D1 	ld (dfgs_vram_bottom_1),hl 
   10 D1:B2BE 22 1A B4 D1 	ld (dfgs_vram_bottom_2),hl 
   11 D1:B2C2 22 B1 B4 D1 	ld (dfgs_vram_bottom_3),hl 
   12 D1:B2C6 22 DF B4 D1 	ld (dfgs_vram_bottom_4),hl 
   13 D1:B2CA -  -  -  -  	
   14 D1:B2CA 2A 6F A9 D1 	ld hl,(cam_pos)
   15 D1:B2CE CB 3C -  -  	srl h
   16 D1:B2D0 CB 1D -  -  	rr l;div by 2
   17 D1:B2D2 01 EF 00 00 	ld bc,239
   18 D1:B2D6 09 -  -  -  	add hl,bc 
   19 D1:B2D7 7D -  -  -  	ld a,l ;lsb cam pos 
   20 D1:B2D8 32 5D B3 D1 	ld (dfgs_cam_height_1),a
   21 D1:B2DC 32 BB B3 D1 	ld (dfgs_cam_height_2),a
   22 D1:B2E0 32 90 B4 D1 	ld (dfgs_cam_height_3),a
   23 D1:B2E4 -  -  -  -  	
   24 D1:B2E4 01 00 00 00 	ld bc,0
   25 D1:B2E8 4C -  -  -  	ld c,h;msb ccam pos 
   26 D1:B2E9 0C -  -  -  	inc c 
   27 D1:B2EA 21 76 C0 D1 	ld hl,MG_Data_frame_table
   28 D1:B2EE 09 -  -  -  	add hl,bc
   29 D1:B2EF 09 -  -  -  	add hl,bc 
   30 D1:B2F0 09 -  -  -  	add hl,bc 	
   31 D1:B2F1 ED 27 -  -  	ld hl,(hl);upper frame 
   32 D1:B2F3 -  -  -  -  	
   33 D1:B2F3 CD 43 B3 D1 	call draw_fg_sprites
   34 D1:B2F7 C9 -  -  -  	ret
   35 D1:B2F8 -  -  -  -  
   36 D1:B2F8 -  -  -  -  
   37 D1:B2F8 -  -  -  -  draw_fg:
   38 D1:B2F8 2A 75 A9 D1 	ld hl,(draw_buffer)
   39 D1:B2FC 22 77 B3 D1 	ld (dfgs_vram_top_1),hl
   40 D1:B300 22 DD B3 D1 	ld (dfgs_vram_top_2),hl
   41 D1:B304 01 60 95 00 	ld bc,160*239
   42 D1:B308 09 -  -  -  	add hl,bc
   43 D1:B309 22 4B B4 D1 	ld (dfgs_vram_bottom_1),hl 
   44 D1:B30D 22 1A B4 D1 	ld (dfgs_vram_bottom_2),hl 
   45 D1:B311 22 B1 B4 D1 	ld (dfgs_vram_bottom_3),hl 
   46 D1:B315 22 DF B4 D1 	ld (dfgs_vram_bottom_4),hl 
   47 D1:B319 -  -  -  -  	
   48 D1:B319 2A 6F A9 D1 	ld hl,(cam_pos)
   49 D1:B31D 01 EF 00 00 	ld bc,239
   50 D1:B321 09 -  -  -  	add hl,bc 
   51 D1:B322 7D -  -  -  	ld a,l ;lsb cam pos 
   52 D1:B323 32 5D B3 D1 	ld (dfgs_cam_height_1),a
   53 D1:B327 32 BB B3 D1 	ld (dfgs_cam_height_2),a
   54 D1:B32B 32 90 B4 D1 	ld (dfgs_cam_height_3),a
   55 D1:B32F -  -  -  -  	
   56 D1:B32F 01 00 00 00 	ld bc,0
   57 D1:B333 4C -  -  -  	ld c,h;msb ccam pos 
   58 D1:B334 0C -  -  -  	inc c 
   59 D1:B335 21 D4 BE D1 	ld hl,FG_Data_frame_table
   60 D1:B339 09 -  -  -  	add hl,bc
   61 D1:B33A 09 -  -  -  	add hl,bc 
   62 D1:B33B 09 -  -  -  	add hl,bc 	
   63 D1:B33C ED 27 -  -  	ld hl,(hl);upper frame 
   64 D1:B33E -  -  -  -  	
   65 D1:B33E CD 43 B3 D1 	call draw_fg_sprites
   66 D1:B342 C9 -  -  -  	ret
   67 D1:B343 -  -  -  -  
   68 D1:B343 -  -  -  -  
   69 D1:B343 -  -  -  -  
   70 D1:B343 -  -  -  -  
   71 D1:B343 -  -  -  -  ;hl = upper frame data
   72 D1:B343 -  -  -  -   
   73 D1:B343 -  -  -  -  ;load cam height 123,vram top 12 vram bottom 1234
   74 D1:B343 -  -  -  -  draw_fg_sprites:
   75 D1:B343 -  -  -  -  	;UPPER FRAME, bottom of upper frame is not on screen, bottom of mid frame is on screen bottom of lower is not on screen
   76 D1:B343 ED 17 -  -  	ld de,(hl)
   77 D1:B345 ED 53 26 B5 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
   78 D1:B34A -  -  -  -  	
   79 D1:B34A 11 00 00 00 	ld de,0
   80 D1:B34E 23 -  -  -  	inc hl 
   81 D1:B34F 23 -  -  -  	inc hl
   82 D1:B350 23 -  -  -  	inc hl;past data table 
   83 D1:B351 -  -  -  -  	;hl is number of elements
   84 D1:B351 08 -  -  -  	ex af,af' ;'
   85 D1:B352 7E -  -  -  	ld a,(hl);number of elements
   86 D1:B353 08 -  -  -  	ex af,af' ;'
   87 D1:B354 23 -  -  -  	inc hl 
   88 D1:B355 -  -  -  -  	
   89 D1:B355 -  -  -  -  	
   90 D1:B355 -  -  -  -  dfgs_upper_loop:
   91 D1:B355 7E -  -  -  	ld a,(hl);sprite y value 
   92 D1:B356 23 -  -  -  	inc hl 
   93 D1:B357 96 -  -  -  	sub (hl);subtract height
   94 D1:B358 D2 66 B3 D1 	jp nc,dfgs_upper_skip;if no carry,skip
   95 D1:B35C -  -  -  -  	
   96 D1:B35C -  -  -  -  dfgs_cam_height_1 .equ $ + 1
   97 D1:B35C D6 00 -  -  	sub 0 ;subtract camera height lsb 
   98 D1:B35E DA 74 B3 D1 	jp c,dfgs_upper_cont
   99 D1:B362 CA 74 B3 D1 	jp z,dfgs_upper_cont 
  100 D1:B366 -  -  -  -  dfgs_upper_skip:
  101 D1:B366 23 -  -  -  	inc hl 
  102 D1:B367 23 -  -  -  	inc hl
  103 D1:B368 23 -  -  -  	inc hl;to y 
  104 D1:B369 08 -  -  -  	ex af,af';'
  105 D1:B36A 3D -  -  -  	dec a 
  106 D1:B36B CA A6 B3 D1 	jp z,dfgs_mid_start 
  107 D1:B36F 08 -  -  -  	ex af,af';'
  108 D1:B370 C3 55 B3 D1 	jp dfgs_upper_loop
  109 D1:B374 -  -  -  -  	
  110 D1:B374 -  -  -  -  dfgs_upper_cont:
  111 D1:B374 -  -  -  -  	
  112 D1:B374 86 -  -  -  	add a,(hl);add height
  113 D1:B375 -  -  -  -  	;a now holds 0 indexed row, number of lines to skip drawing
  114 D1:B375 D9 -  -  -  	exx
  115 D1:B376 -  -  -  -  dfgs_vram_top_1 .equ $ + 1 
  116 D1:B376 11 00 00 00 	ld de,0;load top of vram 
  117 D1:B37A D9 -  -  -  	exx;out shadow
  118 D1:B37B -  -  -  -  	
  119 D1:B37B CD 0C B5 D1 	call dfgs_setup_draw;toshadow	
  120 D1:B37F -  -  -  -  	
  121 D1:B37F CB 45 -  -  	bit 0,l 
  122 D1:B381 CA 8D B3 D1 	jp z,dfgs_upper_fast
  123 D1:B385 CD 65 AC D1 	call draw_slow_sprite_top_cut
  124 D1:B389 C3 91 B3 D1 	jp dfgs_upper_skip_2
  125 D1:B38D -  -  -  -  dfgs_upper_fast:
  126 D1:B38D CD E5 AB D1 	call draw_fast_sprite_top_cut
  127 D1:B391 -  -  -  -  dfgs_upper_skip_2:
  128 D1:B391 D9 -  -  -  	exx ;out of shadow, hl holds index
  129 D1:B392 -  -  -  -  	
  130 D1:B392 11 00 00 00 	ld de,0 
  131 D1:B396 01 00 00 00 	ld bc,0
  132 D1:B39A 23 -  -  -  	inc hl;to y 
  133 D1:B39B 08 -  -  -  	ex af,af';'
  134 D1:B39C 3D -  -  -  	dec a 
  135 D1:B39D CA A6 B3 D1 	jp z,dfgs_mid_start 
  136 D1:B3A1 08 -  -  -  	ex af,af';'
  137 D1:B3A2 C3 55 B3 D1 	jp dfgs_upper_loop
  138 D1:B3A6 -  -  -  -  	
  139 D1:B3A6 -  -  -  -  dfgs_mid_start:;MIDDLE FRAME, can be top cut, no cut, or bottom cut ===============================================
  140 D1:B3A6 -  -  -  -  	
  141 D1:B3A6 ED 17 -  -  	ld de,(hl)
  142 D1:B3A8 ED 53 26 B5 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  143 D1:B3AD 11 00 00 00 	ld de,0
  144 D1:B3B1 23 -  -  -  	inc hl 
  145 D1:B3B2 23 -  -  -  	inc hl
  146 D1:B3B3 23 -  -  -  	inc hl;past data table 
  147 D1:B3B4 08 -  -  -  	ex af,af' ;'
  148 D1:B3B5 7E -  -  -  	ld a,(hl);number of elements
  149 D1:B3B6 08 -  -  -  	ex af,af' ;'
  150 D1:B3B7 23 -  -  -  	inc hl 
  151 D1:B3B8 -  -  -  -  dfgs_mid_loop:
  152 D1:B3B8 7E -  -  -  	ld a,(hl);y val 
  153 D1:B3B9 23 -  -  -  	inc hl ;to height
  154 D1:B3BA -  -  -  -  dfgs_cam_height_2 .equ $ + 1
  155 D1:B3BA D6 00 -  -  	sub 0;subtract cam pos
  156 D1:B3BC DA 0C B4 D1 	jp c,dfgs_mid_sprite_below ;sprite is below camera pos, either full or bottom cut 
  157 D1:B3C0 CA 0C B4 D1 	jp z,dfgs_mid_sprite_below 
  158 D1:B3C4 -  -  -  -  	;sprite start is above camera pos, top cut 
  159 D1:B3C4 BE -  -  -  	cp (hl);a holds numb lines below sprite y , compare to height
  160 D1:B3C5 DA DB B3 D1 	jp c,dfgs_mid_above_cont
  161 D1:B3C9 CA DB B3 D1 	jp z,dfgs_mid_above_cont
  162 D1:B3CD -  -  -  -  dfgs_mid_skip:;sprite is entirely above or below cam pos 
  163 D1:B3CD 23 -  -  -  	inc hl 
  164 D1:B3CE 23 -  -  -  	inc hl
  165 D1:B3CF 23 -  -  -  	inc hl;to y 
  166 D1:B3D0 08 -  -  -  	ex af,af';'
  167 D1:B3D1 3D -  -  -  	dec a 
  168 D1:B3D2 CA 7B B4 D1 	jp z,dfgs_lower_start 
  169 D1:B3D6 08 -  -  -  	ex af,af';'
  170 D1:B3D7 C3 B8 B3 D1 	jp dfgs_mid_loop
  171 D1:B3DB -  -  -  -  	
  172 D1:B3DB -  -  -  -  dfgs_mid_above_cont:
  173 D1:B3DB -  -  -  -  	;a = lines to skip 
  174 D1:B3DB D9 -  -  -  	exx
  175 D1:B3DC -  -  -  -  dfgs_vram_top_2 .equ $ + 1 
  176 D1:B3DC 11 00 00 00 	ld de,0
  177 D1:B3E0 D9 -  -  -  	exx
  178 D1:B3E1 -  -  -  -  	
  179 D1:B3E1 CD 0C B5 D1 	call dfgs_setup_draw;toshadow
  180 D1:B3E5 -  -  -  -  	
  181 D1:B3E5 CB 45 -  -  	bit 0,l 
  182 D1:B3E7 CA F3 B3 D1 	jp z,dfgs_mid_top_fast
  183 D1:B3EB CD 65 AC D1 	call draw_slow_sprite_top_cut
  184 D1:B3EF C3 F7 B3 D1 	jp dfgs_mid_top_slow
  185 D1:B3F3 -  -  -  -  dfgs_mid_top_fast:
  186 D1:B3F3 CD E5 AB D1 	call draw_fast_sprite_top_cut
  187 D1:B3F7 -  -  -  -  dfgs_mid_top_slow:
  188 D1:B3F7 D9 -  -  -  	exx;out shadwo
  189 D1:B3F8 11 00 00 00 	ld de,0 
  190 D1:B3FC 01 00 00 00 	ld bc,0
  191 D1:B400 23 -  -  -  	inc hl;to y 
  192 D1:B401 08 -  -  -  	ex af,af';'
  193 D1:B402 3D -  -  -  	dec a 
  194 D1:B403 CA 7B B4 D1 	jp z,dfgs_lower_start 
  195 D1:B407 08 -  -  -  	ex af,af';'
  196 D1:B408 C3 B8 B3 D1 	jp dfgs_mid_loop
  197 D1:B40C -  -  -  -  
  198 D1:B40C -  -  -  -  dfgs_mid_sprite_below:;sprite start is = or below top of screen 
  199 D1:B40C -  -  -  -  	;can be full or bottom cut
  200 D1:B40C -  -  -  -  	;a holds distance of sprite below top of screen
  201 D1:B40C -  -  -  -  	;0 = top of screen 255 = 1 below ,254 = 2 below ... 17 = bottom of screen
  202 D1:B40C 3D -  -  -  	dec a 
  203 D1:B40D D6 10 -  -  	sub 16;a holds dist from bottom
  204 D1:B40F DA CD B3 D1 	jp c,dfgs_mid_skip
  205 D1:B413 BE -  -  -  	cp (hl);compare to height
  206 D1:B414 DA 49 B4 D1 	jp c,dfgs_mid_bottom_cut
  207 D1:B418 -  -  -  -  	
  208 D1:B418 -  -  -  -  	;full sprite
  209 D1:B418 D9 -  -  -  	exx
  210 D1:B419 -  -  -  -  dfgs_vram_bottom_2 .equ $ + 1
  211 D1:B419 11 00 00 00 	ld de,0
  212 D1:B41D D9 -  -  -  	exx
  213 D1:B41E CD 0C B5 D1 	call dfgs_setup_draw;toshadow
  214 D1:B422 CB 45 -  -  	bit 0,l
  215 D1:B424 CA 30 B4 D1 	jp z,dfgs_mid_full_fast
  216 D1:B428 CD 36 AC D1 	call draw_slow_sprite_full
  217 D1:B42C C3 34 B4 D1 	jp dfgs_mid_full_slow
  218 D1:B430 -  -  -  -  dfgs_mid_full_fast:
  219 D1:B430 CD 1C AC D1 	call draw_fast_sprite_full
  220 D1:B434 -  -  -  -  dfgs_mid_full_slow:
  221 D1:B434 D9 -  -  -  	exx
  222 D1:B435 11 00 00 00 	ld de,0 
  223 D1:B439 01 00 00 00 	ld bc,0
  224 D1:B43D 23 -  -  -  	inc hl;to y 
  225 D1:B43E 08 -  -  -  	ex af,af';'
  226 D1:B43F 3D -  -  -  	dec a 
  227 D1:B440 CA 7B B4 D1 	jp z,dfgs_lower_start 
  228 D1:B444 08 -  -  -  	ex af,af';'
  229 D1:B445 C3 B8 B3 D1 	jp dfgs_mid_loop
  230 D1:B449 -  -  -  -  	
  231 D1:B449 -  -  -  -  	
  232 D1:B449 -  -  -  -  dfgs_mid_bottom_cut:
  233 D1:B449 D9 -  -  -  	exx
  234 D1:B44A -  -  -  -  dfgs_vram_bottom_1 .equ $ + 1
  235 D1:B44A 11 00 00 00 	ld de,0
  236 D1:B44E D9 -  -  -  	exx
  237 D1:B44F CD 0C B5 D1 	call dfgs_setup_draw
  238 D1:B453 3C -  -  -  	inc a;for bottom cuts
  239 D1:B454 CB 45 -  -  	bit 0,l 
  240 D1:B456 CA 62 B4 D1 	jp z,dfgs_mid_bottom_fast
  241 D1:B45A CD 9A AC D1 	call draw_slow_sprite_bottom_cut
  242 D1:B45E C3 66 B4 D1 	jp dfgs_mid_bottom_slow
  243 D1:B462 -  -  -  -  dfgs_mid_bottom_fast:
  244 D1:B462 CD D1 AB D1 	call draw_fast_sprite_bottom_cut
  245 D1:B466 -  -  -  -  dfgs_mid_bottom_slow:
  246 D1:B466 D9 -  -  -  	exx
  247 D1:B467 11 00 00 00 	ld de,0 
  248 D1:B46B 01 00 00 00 	ld bc,0
  249 D1:B46F 23 -  -  -  	inc hl;to y 
  250 D1:B470 08 -  -  -  	ex af,af';'
  251 D1:B471 3D -  -  -  	dec a 
  252 D1:B472 CA 7B B4 D1 	jp z,dfgs_lower_start 
  253 D1:B476 08 -  -  -  	ex af,af';'
  254 D1:B477 C3 B8 B3 D1 	jp dfgs_mid_loop
  255 D1:B47B -  -  -  -  	
  256 D1:B47B -  -  -  -  	
  257 D1:B47B -  -  -  -  	
  258 D1:B47B -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================	
  259 D1:B47B -  -  -  -  dfgs_lower_start:
  260 D1:B47B -  -  -  -  	
  261 D1:B47B ED 17 -  -  	ld de,(hl)
  262 D1:B47D ED 53 26 B5 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  263 D1:B482 11 00 00 00 	ld de,0
  264 D1:B486 23 -  -  -  	inc hl 
  265 D1:B487 23 -  -  -  	inc hl
  266 D1:B488 23 -  -  -  	inc hl;past data table 
  267 D1:B489 -  -  -  -  	
  268 D1:B489 08 -  -  -  	ex af,af' ;'
  269 D1:B48A 7E -  -  -  	ld a,(hl);number of elements
  270 D1:B48B 08 -  -  -  	ex af,af' ;'
  271 D1:B48C 23 -  -  -  	inc hl
  272 D1:B48D -  -  -  -  	
  273 D1:B48D 3E EF -  -  	ld a,239
  274 D1:B48F -  -  -  -  dfgs_cam_height_3 .equ $ + 1 
  275 D1:B48F D6 00 -  -  	sub 0;cam pos 
  276 D1:B491 D8 -  -  -  	ret c;if bottom frame is offscreen 
  277 D1:B492 C8 -  -  -  	ret z 
  278 D1:B493 -  -  -  -  	;a holds distance of top line of lower frame from bottom of screen starting from 1
  279 D1:B493 32 9A B4 D1 	ld (dfgs_lower_frame_height),a
  280 D1:B497 -  -  -  -  
  281 D1:B497 -  -  -  -  dfgs_lower_loop:
  282 D1:B497 7E -  -  -  	ld a,(hl);y
  283 D1:B498 23 -  -  -  	inc hl
  284 D1:B499 -  -  -  -  dfgs_lower_frame_height .equ $ + 1
  285 D1:B499 C6 00 -  -  	add a,0;add frame height 
  286 D1:B49B DA AA B4 D1 	jp c,dfgs_lower_cont;sprite onscreen
  287 D1:B49F -  -  -  -  dfgs_lower_skip:;sprite offscreen
  288 D1:B49F 23 -  -  -  	inc hl
  289 D1:B4A0 23 -  -  -  	inc hl
  290 D1:B4A1 23 -  -  -  	inc hl;to y 
  291 D1:B4A2 08 -  -  -  	ex af,af';'
  292 D1:B4A3 3D -  -  -  	dec a 
  293 D1:B4A4 C8 -  -  -  	ret z
  294 D1:B4A5 08 -  -  -  	ex af,af';'
  295 D1:B4A6 C3 97 B4 D1 	jp dfgs_lower_loop
  296 D1:B4AA -  -  -  -  	
  297 D1:B4AA -  -  -  -  dfgs_lower_cont:
  298 D1:B4AA -  -  -  -  	;a holds sprite dist from bottom of screen, from 0
  299 D1:B4AA BE -  -  -  	cp (hl);compare to height
  300 D1:B4AB DA DD B4 D1 	jp c,dfgs_lower_bottom_cut
  301 D1:B4AF -  -  -  -  	
  302 D1:B4AF -  -  -  -  	;full sprite 
  303 D1:B4AF D9 -  -  -  	exx
  304 D1:B4B0 -  -  -  -  dfgs_vram_bottom_3 .equ $ + 1
  305 D1:B4B0 11 00 00 00 	ld de,0
  306 D1:B4B4 D9 -  -  -  	exx
  307 D1:B4B5 CD 0C B5 D1 	call dfgs_setup_draw
  308 D1:B4B9 CB 45 -  -  	bit 0,l
  309 D1:B4BB CA C7 B4 D1 	jp z,dfgs_lower_full_fast
  310 D1:B4BF CD 36 AC D1 	call draw_slow_sprite_full
  311 D1:B4C3 C3 CB B4 D1 	jp dfgs_lower_full_slow
  312 D1:B4C7 -  -  -  -  dfgs_lower_full_fast:
  313 D1:B4C7 CD 1C AC D1 	call draw_fast_sprite_full
  314 D1:B4CB -  -  -  -  dfgs_lower_full_slow:
  315 D1:B4CB D9 -  -  -  	exx
  316 D1:B4CC 11 00 00 00 	ld de,0 
  317 D1:B4D0 01 00 00 00 	ld bc,0
  318 D1:B4D4 23 -  -  -  	inc hl;to y 
  319 D1:B4D5 08 -  -  -  	ex af,af';'
  320 D1:B4D6 3D -  -  -  	dec a 
  321 D1:B4D7 C8 -  -  -  	ret z
  322 D1:B4D8 08 -  -  -  	ex af,af';'
  323 D1:B4D9 C3 97 B4 D1 	jp dfgs_lower_loop
  324 D1:B4DD -  -  -  -  	
  325 D1:B4DD -  -  -  -  	
  326 D1:B4DD -  -  -  -  dfgs_lower_bottom_cut:
  327 D1:B4DD D9 -  -  -  	exx
  328 D1:B4DE -  -  -  -  dfgs_vram_bottom_4 .equ $ + 1
  329 D1:B4DE 11 00 00 00 	ld de,0
  330 D1:B4E2 D9 -  -  -  	exx
  331 D1:B4E3 CD 0C B5 D1 	call dfgs_setup_draw
  332 D1:B4E7 3C -  -  -  	inc a;for bottom cuts
  333 D1:B4E8 CB 45 -  -  	bit 0,l 
  334 D1:B4EA CA F6 B4 D1 	jp z,dfgs_lower_bottom_fast
  335 D1:B4EE CD 9A AC D1 	call draw_slow_sprite_bottom_cut
  336 D1:B4F2 C3 FA B4 D1 	jp dfgs_lower_bottom_slow
  337 D1:B4F6 -  -  -  -  dfgs_lower_bottom_fast:
  338 D1:B4F6 CD D1 AB D1 	call draw_fast_sprite_bottom_cut
  339 D1:B4FA -  -  -  -  dfgs_lower_bottom_slow:
  340 D1:B4FA D9 -  -  -  	exx
  341 D1:B4FB 11 00 00 00 	ld de,0 
  342 D1:B4FF 01 00 00 00 	ld bc,0
  343 D1:B503 23 -  -  -  	inc hl;to y 
  344 D1:B504 08 -  -  -  	ex af,af';'
  345 D1:B505 3D -  -  -  	dec a 
  346 D1:B506 C8 -  -  -  	ret z
  347 D1:B507 08 -  -  -  	ex af,af';'
  348 D1:B508 C3 97 B4 D1 	jp dfgs_lower_loop
  349 D1:B50C -  -  -  -  	
  350 D1:B50C -  -  -  -  	
  351 D1:B50C -  -  -  -  	
  352 D1:B50C -  -  -  -  	
  353 D1:B50C -  -  -  -  	
  354 D1:B50C -  -  -  -  	
  355 D1:B50C -  -  -  -  	
  356 D1:B50C -  -  -  -  	
  357 D1:B50C -  -  -  -  	
  358 D1:B50C -  -  -  -  ;a holds distance from bottom of screen, starting from 0, or for top cut dist above screen = num lines to skip 
  359 D1:B50C -  -  -  -  ;(hl) = height 	
  360 D1:B50C -  -  -  -  ;de = initial vram, top for top cut, otherwise bottom
  361 D1:B50C -  -  -  -  ;returns hl = sprite data, de = vram position
  362 D1:B50C -  -  -  -  dfgs_setup_draw:
  363 D1:B50C 23 -  -  -  	inc hl
  364 D1:B50D 01 00 00 00 	ld bc,0
  365 D1:B511 4E -  -  -  	ld c,(hl); x pos
  366 D1:B512 23 -  -  -  	inc hl;to index
  367 D1:B513 E5 -  -  -  	push hl
  368 D1:B514 C5 -  -  -  	push bc
  369 D1:B515 D9 -  -  -  	exx;toshadow
  370 D1:B516 C1 -  -  -  	pop bc
  371 D1:B517 26 A0 -  -  	ld h,160
  372 D1:B519 6F -  -  -  	ld l,a
  373 D1:B51A ED 6C -  -  	mlt hl;subtract from vram
  374 D1:B51C 37 -  -  -  	scf 
  375 D1:B51D 3F -  -  -  	ccf
  376 D1:B51E EB -  -  -  	ex de,hl;hl holds vram
  377 D1:B51F ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  378 D1:B521 09 -  -  -  	add hl,bc;add x pos ;hl now holds sprite draw start pos 
  379 D1:B522 EB -  -  -  	ex de,hl;put in de
  380 D1:B523 E1 -  -  -  	pop hl;back to frame data 
  381 D1:B524 4E -  -  -  	ld c,(hl);sprite index
  382 D1:B525 -  -  -  -  dfgs_sprite_pointers_1 .equ $ + 1	
  383 D1:B525 21 00 00 00 	ld hl,0 ;load sprite table 
  384 D1:B529 09 -  -  -  	add hl,bc
  385 D1:B52A 09 -  -  -  	add hl,bc 
  386 D1:B52B 09 -  -  -  	add hl,bc;move to sprite ptr
  387 D1:B52C -  -  -  -  	;call prgmpause
  388 D1:B52C ED 27 -  -  	ld hl,(hl);hl holds sprite data, if even = fast sprite 
  389 D1:B52E -  -  -  -  
  390 D1:B52E C9 -  -  -  	ret
  391 D1:B52F -  -  -  -  
  392 D1:B52F -  -  -  -  	
  393 D1:B52F -  -  -  -  	
  394 D1:B52F -  -  -  -  	
  395 D1:B52F -  -  -  -  	
  396 D1:B52F -  -  -  -  	
  397 D1:B52F -  -  -  -  	
  398 D1:B52F -  -  -  -  	
  399 D1:B52F -  -  -  -  	
  400 D1:B52F -  -  -  -  	
  401 D1:B52F -  -  -  -  	
  402 D1:B52F -  -  -  -  	
  403 D1:B52F -  -  -  -  	
Listing for file "ascent.asm"
  162 D1:B52F -  -  -  -  
  163 D1:B52F -  -  -  -  #include "levelData.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\levelData.txt"
    1 D1:B52F -  -  -  -  bg_sprite_pointers:;255 sprites max
    2 D1:B52F -  -  -  -  	;.dl lastSprite
    3 D1:B52F -  -  -  -  	;.dl lastSpritecopy
    4 D1:B52F -  -  -  -  	;.dl sprite2
    5 D1:B52F -  -  -  -  	;.dl sprite3
    6 D1:B52F -  -  -  -  
    7 D1:B52F -  -  -  -  
    8 D1:B52F -  -  -  -  
    9 D1:B52F -  -  -  -  
   10 D1:B52F -  -  -  -  bg_data_frame:
   11 D1:B52F -  -  -  -  	;.db sprite data table pointer
   12 D1:B52F -  -  -  -  	;.db y (lsb) ,height-1,x,index(0 indicates end of data)
   13 D1:B52F -  -  -  -  	
   14 D1:B52F -  -  -  -  
   15 D1:B52F -  -  -  -  bg_sprite_pointers_1:
   16 D1:B52F -  -  -  -  	;.dl testBG1
   17 D1:B52F -  -  -  -  	;.dl testBG1;h = 7
   18 D1:B52F -  -  -  -  	;.dl testBG2;h = 5
   19 D1:B52F -  -  -  -  	;.dl testBG3;h = 0
   20 D1:B52F -  -  -  -  	;.dl testBG4
   21 D1:B52F -  -  -  -  
   22 D1:B52F -  -  -  -  bg_data_frame_0:
   23 D1:B52F 2F B5 D1 -  	.dl bg_sprite_pointers_1 
   24 D1:B532 C8 07 05 00 	.db 200,7,5,0
   25 D1:B536 -  -  -  -  	;upper 
   26 D1:B536 -  -  -  -  bg_data_frame_1:
   27 D1:B536 2F B5 D1 -  	.dl bg_sprite_pointers_1
   28 D1:B539 C8 07 05 01 	.db 200,7,5,1
   29 D1:B53D 64 07 05 01 	.db 100,7,5,1
   30 D1:B541 08 07 05 01 	.db 8,7,5,1
   31 D1:B545 07 07 0A 01 	.db 7,7,10,1
   32 D1:B549 06 07 0F 01 	.db 6,7,15,1;X
   33 D1:B54D 05 07 14 01 	.db 5,7,20,1;X
   34 D1:B551 05 05 19 02 	.db 5,5,25,2
   35 D1:B555 04 05 1E 02 	.db 4,5,30,2;X
   36 D1:B559 03 05 23 02 	.db 3,5,35,2;X
   37 D1:B55D 00 05 28 02 	.db 0,5,40,2;X
   38 D1:B561 00 00 2D 03 	.db 0,0,45,3
   39 D1:B565 0A 00 32 03 	.db 10,0,50,3
   40 D1:B569 32 07 05 00 	.db 50,7,5,0;end 
   41 D1:B56D -  -  -  -  	
   42 D1:B56D -  -  -  -  bg_data_frame_2:
   43 D1:B56D 2F B5 D1 -  	.dl bg_sprite_pointers_1
   44 D1:B570 FF 07 3C 01 	.db 255,7,60,1
   45 D1:B574 FE 07 41 01 	.db 254,7,65,1
   46 D1:B578 64 05 46 02 	.db 100,5,70,2
   47 D1:B57C 64 00 4B 03 	.db 100,0,75,3
   48 D1:B580 32 07 50 00 	.db 50,7,80,0
   49 D1:B584 -  -  -  -  	
   50 D1:B584 -  -  -  -  	
Listing for file "ascent.asm"
  164 D1:B584 -  -  -  -  #include "FGLevelData.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\FGLevelData.txt"
    1 D1:B584 -  -  -  -  
    2 D1:B584 -  -  -  -  FG_sprite_table_1:
    3 D1:B584 -  -  -  -  	;.dl fg_sprite_1;9*4
    4 D1:B584 -  -  -  -  	;.dl fg_sprite_1
    5 D1:B584 -  -  -  -  	;.dl fg_sprite_2;8*8
    6 D1:B584 -  -  -  -  	;.dl fg_sprite_3;8*8 fast
    7 D1:B584 -  -  -  -  	;.dl fg_sprite_4;8*8 fast 
    8 D1:B584 -  -  -  -  	
    9 D1:B584 -  -  -  -  
   10 D1:B584 -  -  -  -  
   11 D1:B584 -  -  -  -  
   12 D1:B584 -  -  -  -  
   13 D1:B584 -  -  -  -  FG_Frame_2:
   14 D1:B584 84 B5 D1 -  	.dl FG_sprite_table_1
   15 D1:B587 03 03 00 01 	.db 3,3,0,1
   16 D1:B58B 02 03 05 01 	.db 2,3,5,1;x
   17 D1:B58F 01 03 0A 01 	.db 1,3,10,1;x
   18 D1:B593 02 07 0F 02 	.db 2,7,15,2;x
   19 D1:B597 32 07 14 02 	.db 50,7,20,2
   20 D1:B59B 1E 07 19 03 	.db 30,7,25,3
   21 D1:B59F 00 07 1E 03 	.db 0,7,30,3;x
   22 D1:B5A3 05 07 23 03 	.db 5,7,35,3;x
   23 D1:B5A7 03 07 28 04 	.db 3,7,40,4;x
   24 D1:B5AB 00 03 2D 00 	.db 0,3,45,0;x
   25 D1:B5AF -  -  -  -  
   26 D1:B5AF -  -  -  -  
   27 D1:B5AF -  -  -  -  FG_Frame_1:
   28 D1:B5AF -  -  -  -  	;.dl sprite table ptr
   29 D1:B5AF -  -  -  -  	;.db y in frame, height-1, x, index 
   30 D1:B5AF 84 B5 D1 -  	.dl FG_sprite_table_1
   31 D1:B5B2 FF 03 3C 01 	.db 255,3,60,1
   32 D1:B5B6 FF 07 46 02 	.db 255,7,70,2
   33 D1:B5BA FF 07 4B 03 	.db 255,7,75,3
   34 D1:B5BE FF 07 50 04 	.db 255,7,80,4
   35 D1:B5C2 FE 03 55 01 	.db 254,3,85,1
   36 D1:B5C6 FE 07 5A 04 	.db 254,7,90,4
   37 D1:B5CA C8 03 0A 01 	.db 200,3,10,1
   38 D1:B5CE C8 07 0F 02 	.db 200,7,15,2
   39 D1:B5D2 C8 07 14 03 	.db 200,7,20,3
   40 D1:B5D6 32 07 0A 02 	.db 50,7,10,2
   41 D1:B5DA 0F 07 50 03 	.db 15,7,80,3
   42 D1:B5DE 10 07 41 03 	.db 16,7,65,3
   43 D1:B5E2 11 03 46 01 	.db 17,3,70,1
   44 D1:B5E6 09 07 0A 02 	.db 9,7,10,2
   45 D1:B5EA 08 07 14 02 	.db 8,7,20,2
   46 D1:B5EE 08 07 1E 03 	.db 8,7,30,3
   47 D1:B5F2 07 07 23 02 	.db 7,7,35,2
   48 D1:B5F6 06 07 28 02 	.db 6,7,40,2
   49 D1:B5FA 05 07 2D 02 	.db 5,7,45,2
   50 D1:B5FE 00 07 32 02 	.db 0,7,50,2
   51 D1:B602 04 07 37 03 	.db 4,7,55,3
   52 D1:B606 02 07 3C 04 	.db 2,7,60,4
   53 D1:B60A 01 03 41 00 	.db 1,3,65,0
   54 D1:B60E -  -  -  -  	
   55 D1:B60E -  -  -  -  
   56 D1:B60E -  -  -  -  FG_Frame_0:
   57 D1:B60E 84 B5 D1 -  	.dl FG_sprite_table_1
   58 D1:B611 FF 03 46 01 	.db 255,3,70,1
   59 D1:B615 FF 07 4B 02 	.db 255,7,75,2
   60 D1:B619 FF 07 5F 03 	.db 255,7,95,3
   61 D1:B61D FF 07 50 04 	.db 255,7,80,4
   62 D1:B621 FE 03 78 01 	.db 254,3,120,1
   63 D1:B625 FE 07 7D 04 	.db 254,7,125,4
   64 D1:B629 C8 03 0A 01 	.db 200,3,10,1
   65 D1:B62D C8 07 0F 02 	.db 200,7,15,2
   66 D1:B631 C8 07 14 03 	.db 200,7,20,3
   67 D1:B635 C8 03 00 00 	.db 200,3,0,0
   68 D1:B639 -  -  -  -  	
   69 D1:B639 -  -  -  -  	
   70 D1:B639 -  -  -  -  	
   71 D1:B639 -  -  -  -  
   72 D1:B639 -  -  -  -  	
   73 D1:B639 -  -  -  -  	
   74 D1:B639 -  -  -  -  	
   75 D1:B639 -  -  -  -  	
   76 D1:B639 -  -  -  -  	
   77 D1:B639 -  -  -  -  	
   78 D1:B639 -  -  -  -  	
Listing for file "ascent.asm"
  165 D1:B639 -  -  -  -  
  166 D1:B639 -  -  -  -  #include "Sprite_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\Sprite_Data.txt"
    1 D1:B639 -  -  -  -  Banana1:
    2 D1:B639 20 -  -  -  	.db %00100000
    3 D1:B63A 18 18 -  -  	.db 24, 24
    4 D1:B63C E0 00 00 FC 
              00 00 7E 00 	.db %11100000, %00000000, %00000000, %11111100, %00000000, %00000000, %01111110, %00000000
    5 D1:B644 00 7F 00 00 
              7F 80 00 7F 	.db %00000000, %01111111, %00000000, %00000000, %01111111, %10000000, %00000000, %01111111
    6 D1:B64C 80 00 7F 80 
              00 7F C0 00 	.db %10000000, %00000000, %01111111, %10000000, %00000000, %01111111, %11000000, %00000000
    7 D1:B654 7F E0 00 7F 
              F0 00 7F F8 	.db %01111111, %11100000, %00000000, %01111111, %11110000, %00000000, %01111111, %11111000
    8 D1:B65C 00 3F FC 00 
              3F FF 00 3F 	.db %00000000, %00111111, %11111100, %00000000, %00111111, %11111111, %00000000, %00111111
    9 D1:B664 FF C0 1F FF 
              F0 0F FF F8 	.db %11111111, %11000000, %00011111, %11111111, %11110000, %00001111, %11111111, %11111000
   10 D1:B66C 0F FF F8 07 
              FF FC 03 FF 	.db %00001111, %11111111, %11111000, %00000111, %11111111, %11111100, %00000011, %11111111
   11 D1:B674 FF 03 FF FF 
              01 FF FF 00 	.db %11111111, %00000011, %11111111, %11111111, %00000001, %11111111, %11111111, %00000000
   12 D1:B67C 7F FF 00 7F 
              FF 00 1F FE 	.db %01111111, %11111111, %00000000, %01111111, %11111111, %00000000, %00011111, %11111110
   13 D1:B684 -  -  -  -  
   14 D1:B684 01 20 -  -  	.db %00000001, %00100000
   15 D1:B686 -  -  -  -  
   16 D1:B686 00 01 40 95 
              AA 56 A9 56 	.db %00000000, %00000001, %01000000, %10010101, %10101010, %01010110, %10101001, %01010110
   17 D1:B68E AA 56 AA 56 
              AA 95 AA A9 	.db %10101010, %01010110, %10101010, %01010110, %10101010, %10010101, %10101010, %10101001
   18 D1:B696 5A AA A5 5A 
              5A A5 6A 6A 	.db %01011010, %10101010, %10100101, %01011010, %01011010, %10100101, %01101010, %01101010
   19 D1:B69E A5 6A 9A A9 
              55 A9 6A A9 	.db %10100101, %01101010, %10011010, %10101001, %01010101, %10101001, %01101010, %10101001
   20 D1:B6A6 56 A9 6A AA 
              55 AA AA AA 	.db %01010110, %10101001, %01101010, %10101010, %01010101, %10101010, %10101010, %10101010
   21 D1:B6AE A5 5A A9 6A 
              AA 56 AA 5A 	.db %10100101, %01011010, %10101001, %01101010, %10101010, %01010110, %10101010, %01011010
   22 D1:B6B6 AA 56 AA AA 
              AA 95 5A AA 	.db %10101010, %01010110, %10101010, %10101010, %10101010, %10010101, %01011010, %10101010
   23 D1:B6BE 56 AA 95 AA 
              A9 56 A5 AA 	.db %01010110, %10101010, %10010101, %10101010, %10101001, %01010110, %10100101, %10101010
   24 D1:B6C6 AA 96 95 6A 
              AA AA 55 55 	.db %10101010, %10010110, %10010101, %01101010, %10101010, %10101010, %01010101, %01010101
   25 D1:B6CE 55 40 -  -  	.db %01010101, %01000000
   26 D1:B6D0 -  -  -  -  
   27 D1:B6D0 -  -  -  -  
   28 D1:B6D0 -  -  -  -  Banana1Large:
   29 D1:B6D0 20 -  -  -  	.db %00100000
   30 D1:B6D1 2E 2E -  -  	.db 46, 46
   31 D1:B6D3 FC 00 00 00 
              00 03 F0 00 	.db %11111100, %00000000, %00000000, %00000000, %00000000, %00000011, %11110000, %00000000
   32 D1:B6DB 00 00 00 0F 
              FF 00 00 00 	.db %00000000, %00000000, %00000000, %00001111, %11111111, %00000000, %00000000, %00000000
   33 D1:B6E3 00 3F FC 00 
              00 00 00 3F 	.db %00000000, %00111111, %11111100, %00000000, %00000000, %00000000, %00000000, %00111111
   34 D1:B6EB F0 00 00 00 
              00 FF C0 00 	.db %11110000, %00000000, %00000000, %00000000, %00000000, %11111111, %11000000, %00000000
   35 D1:B6F3 00 00 03 FF 
              C0 00 00 00 	.db %00000000, %00000000, %00000011, %11111111, %11000000, %00000000, %00000000, %00000000
   36 D1:B6FB 0F FF 00 00 
              00 00 3F FF 	.db %00001111, %11111111, %00000000, %00000000, %00000000, %00000000, %00111111, %11111111
   37 D1:B703 00 00 00 00 
              FF FC 00 00 	.db %00000000, %00000000, %00000000, %00000000, %11111111, %11111100, %00000000, %00000000
   38 D1:B70B 00 03 FF F0 
              00 00 00 0F 	.db %00000000, %00000011, %11111111, %11110000, %00000000, %00000000, %00000000, %00001111
   39 D1:B713 FF C0 00 00 
              00 3F FF 00 	.db %11111111, %11000000, %00000000, %00000000, %00000000, %00111111, %11111111, %00000000
   40 D1:B71B 00 00 00 FF 
              FC 00 00 00 	.db %00000000, %00000000, %00000000, %11111111, %11111100, %00000000, %00000000, %00000000
   41 D1:B723 03 FF FC 00 
              00 00 0F FF 	.db %00000011, %11111111, %11111100, %00000000, %00000000, %00000000, %00001111, %11111111
   42 D1:B72B F0 00 00 00 
              3F FF F0 00 	.db %11110000, %00000000, %00000000, %00000000, %00111111, %11111111, %11110000, %00000000
   43 D1:B733 00 00 FF FF 
              C0 00 00 03 	.db %00000000, %00000000, %11111111, %11111111, %11000000, %00000000, %00000000, %00000011
   44 D1:B73B FF FF C0 00 
              00 0F FF FF 	.db %11111111, %11111111, %11000000, %00000000, %00000000, %00001111, %11111111, %11111111
   45 D1:B743 00 00 00 3F 
              FF FF C0 00 	.db %00000000, %00000000, %00000000, %00111111, %11111111, %11111111, %11000000, %00000000
   46 D1:B74B 00 3F FF FF 
              00 00 00 FF 	.db %00000000, %00111111, %11111111, %11111111, %00000000, %00000000, %00000000, %11111111
   47 D1:B753 FF FF 00 00 
              03 FF FF FF 	.db %11111111, %11111111, %00000000, %00000000, %00000011, %11111111, %11111111, %11111111
   48 D1:B75B 00 00 0F FF 
              FF FF 00 00 	.db %00000000, %00000000, %00001111, %11111111, %11111111, %11111111, %00000000, %00000000
   49 D1:B763 3F FF FF FF 
              00 00 FF FF 	.db %00111111, %11111111, %11111111, %11111111, %00000000, %00000000, %11111111, %11111111
   50 D1:B76B FF FF 00 00 
              FF FF FF FF 	.db %11111111, %11111111, %00000000, %00000000, %11111111, %11111111, %11111111, %11111111
   51 D1:B773 00 03 FF FF 
              FF FC 00 03 	.db %00000000, %00000011, %11111111, %11111111, %11111111, %11111100, %00000000, %00000011
   52 D1:B77B FF FF FF FC 
              00 0F FF FF 	.db %11111111, %11111111, %11111111, %11111100, %00000000, %00001111, %11111111, %11111111
   53 D1:B783 FF F0 00 3F 
              FF FF FF C0 	.db %11111111, %11110000, %00000000, %00111111, %11111111, %11111111, %11111111, %11000000
   54 D1:B78B 00 FF FF FF 
              FF 00 00 FF 	.db %00000000, %11111111, %11111111, %11111111, %11111111, %00000000, %00000000, %11111111
   55 D1:B793 FF FF FF 00 
              03 FF FF FF 	.db %11111111, %11111111, %11111111, %00000000, %00000011, %11111111, %11111111, %11111111
   56 D1:B79B FC 00 03 FF 
              FF FF FF 00 	.db %11111100, %00000000, %00000011, %11111111, %11111111, %11111111, %11111111, %00000000
   57 D1:B7A3 0F FF FF FF 
              FC 00 3F FF 	.db %00001111, %11111111, %11111111, %11111111, %11111100, %00000000, %00111111, %11111111
   58 D1:B7AB FF FF F0 00 
              3F FF FF FF 	.db %11111111, %11111111, %11110000, %00000000, %00111111, %11111111, %11111111, %11111111
   59 D1:B7B3 C0 00 FF FF 
              FF FF 00 00 	.db %11000000, %00000000, %11111111, %11111111, %11111111, %11111111, %00000000, %00000000
   60 D1:B7BB 3F FF FF FC 
              00 00 FF FF 	.db %00111111, %11111111, %11111111, %11111100, %00000000, %00000000, %11111111, %11111111
   61 D1:B7C3 FF F0 00 03 
              FF FF FF C0 	.db %11111111, %11110000, %00000000, %00000011, %11111111, %11111111, %11111111, %11000000
   62 D1:B7CB 00 0F FF FF 
              FF 00 00 03 	.db %00000000, %00001111, %11111111, %11111111, %11111111, %00000000, %00000000, %00000011
   63 D1:B7D3 FF FF F0 00 
              00 0F FF FF 	.db %11111111, %11111111, %11110000, %00000000, %00000000, %00001111, %11111111, %11111111
   64 D1:B7DB C0 -  -  -  	.db %11000000
   65 D1:B7DC -  -  -  -  
   66 D1:B7DC 01 20 -  -  	.db %00000001, %00100000
   67 D1:B7DE -  -  -  -  
   68 D1:B7DE 00 00 00 00 
              00 55 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %01010101, %00000000, %00000000
   69 D1:B7E6 55 00 0A 50 
              00 A5 5A AA 	.db %01010101, %00000000, %00001010, %01010000, %00000000, %10100101, %01011010, %10101010
   70 D1:B7EE A5 5A AA A5 
              5A AA A5 55 	.db %10100101, %01011010, %10101010, %10100101, %01011010, %10101010, %10100101, %01010101
   71 D1:B7F6 AA AA 55 5A 
              AA A9 55 AA 	.db %10101010, %10101010, %01010101, %01011010, %10101010, %10101001, %01010101, %10101010
   72 D1:B7FE AA 95 5A AA 
              A9 55 AA AA 	.db %10101010, %10010101, %01011010, %10101010, %10101001, %01010101, %10101010, %10101010
   73 D1:B806 A9 5A AA AA 
              95 5A AA AA 	.db %10101001, %01011010, %10101010, %10101010, %10010101, %01011010, %10101010, %10101010
   74 D1:B80E A9 5A AA AA 
              A9 55 AA AA 	.db %10101001, %01011010, %10101010, %10101010, %10101001, %01010101, %10101010, %10101010
   75 D1:B816 AA A9 5A AA 
              AA AA 95 55 	.db %10101010, %10101001, %01011010, %10101010, %10101010, %10101010, %10010101, %01010101
   76 D1:B81E AA 56 AA A9 
              55 AA 56 AA 	.db %10101010, %01010110, %10101010, %10101001, %01010101, %10101010, %01010110, %10101010
   77 D1:B826 A9 55 5A AA 
              6A AA A9 55 	.db %10101001, %01010101, %01011010, %10101010, %01101010, %10101010, %10101001, %01010101
   78 D1:B82E AA A6 AA AA 
              95 55 AA A9 	.db %10101010, %10100110, %10101010, %10101010, %10010101, %01010101, %10101010, %10101001
   79 D1:B836 6A AA A9 55 
              5A AA 96 AA 	.db %01101010, %10101010, %10101001, %01010101, %01011010, %10101010, %10010110, %10101010
   80 D1:B83E AA 95 55 55 
              AA 95 6A AA 	.db %10101010, %10010101, %01010101, %01010101, %10101010, %10010101, %01101010, %10101010
   81 D1:B846 AA 95 55 5A 
              A9 56 AA AA 	.db %10101010, %10010101, %01010101, %01011010, %10101001, %01010110, %10101010, %10101010
   82 D1:B84E A9 55 55 AA 
              A9 56 AA AA 	.db %10101001, %01010101, %01010101, %10101010, %10101001, %01010110, %10101010, %10101010
   83 D1:B856 AA 95 55 AA 
              A9 56 AA AA 	.db %10101010, %10010101, %01010101, %10101010, %10101001, %01010110, %10101010, %10101010
   84 D1:B85E AA 95 55 AA 
              AA AA AA AA 	.db %10101010, %10010101, %01010101, %10101010, %10101010, %10101010, %10101010, %10101010
   85 D1:B866 AA A5 55 AA 
              AA AA AA AA 	.db %10101010, %10100101, %01010101, %10101010, %10101010, %10101010, %10101010, %10101010
   86 D1:B86E AA A5 55 5A 
              AA A9 56 AA 	.db %10101010, %10100101, %01010101, %01011010, %10101010, %10101001, %01010110, %10101010
   87 D1:B876 AA AA 55 5A 
              AA A9 56 AA 	.db %10101010, %10101010, %01010101, %01011010, %10101010, %10101001, %01010110, %10101010
   88 D1:B87E AA AA 55 6A 
              AA A9 56 AA 	.db %10101010, %10101010, %01010101, %01101010, %10101010, %10101001, %01010110, %10101010
   89 D1:B886 AA A5 55 6A 
              AA A9 56 AA 	.db %10101010, %10100101, %01010101, %01101010, %10101010, %10101001, %01010110, %10101010
   90 D1:B88E AA A5 56 AA 
              AA AA AA AA 	.db %10101010, %10100101, %01010110, %10101010, %10101010, %10101010, %10101010, %10101010
   91 D1:B896 AA A5 55 56 
              AA AA A9 55 	.db %10101010, %10100101, %01010101, %01010110, %10101010, %10101010, %10101001, %01010101
   92 D1:B89E 6A AA AA 55 
              6A AA AA 95 	.db %01101010, %10101010, %10101010, %01010101, %01101010, %10101010, %10101010, %10010101
   93 D1:B8A6 56 AA AA A5 
              56 AA AA AA 	.db %01010110, %10101010, %10101010, %10100101, %01010110, %10101010, %10101010, %10101010
   94 D1:B8AE 95 55 AA A5 
              56 AA AA AA 	.db %10010101, %01010101, %10101010, %10100101, %01010110, %10101010, %10101010, %10101010
   95 D1:B8B6 95 55 AA A5 
              5A AA AA AA 	.db %10010101, %01010101, %10101010, %10100101, %01011010, %10101010, %10101010, %10101010
   96 D1:B8BE A5 5A A5 5A 
              AA AA AA A5 	.db %10100101, %01011010, %10100101, %01011010, %10101010, %10101010, %10101010, %10100101
   97 D1:B8C6 5A A5 55 6A 
              AA AA AA AA 	.db %01011010, %10100101, %01010101, %01101010, %10101010, %10101010, %10101010, %10101010
   98 D1:B8CE A5 55 6A AA 
              AA AA AA A5 	.db %10100101, %01010101, %01101010, %10101010, %10101010, %10101010, %10101010, %10100101
   99 D1:B8D6 55 55 55 55 
              55 55 55 55 	.db %01010101, %01010101, %01010101, %01010101, %01010101, %01010101, %01010101, %01010101
  100 D1:B8DE 55 55 55 -  	.db %01010101, %01010101, %01010101
  101 D1:B8E1 -  -  -  -  
  102 D1:B8E1 -  -  -  -  
  103 D1:B8E1 -  -  -  -  Shittlogo:
  104 D1:B8E1 20 -  -  -  	.db %00100000
  105 D1:B8E2 30 30 -  -  	.db 48, 48
  106 D1:B8E4 00 00 40 02 
              00 00 00 60 	.db %00000000, %00000000, %01000000, %00000010, %00000000, %00000000, %00000000, %01100000
  107 D1:B8EC 70 0E 06 00 
              00 70 78 1E 	.db %01110000, %00001110, %00000110, %00000000, %00000000, %01110000, %01111000, %00011110
  108 D1:B8F4 0E 00 00 78 
              7C 3E 1E 00 	.db %00001110, %00000000, %00000000, %01111000, %01111100, %00111110, %00011110, %00000000
  109 D1:B8FC 00 7E 7E 7E 
              7E 00 00 7F 	.db %00000000, %01111110, %01111110, %01111110, %01111110, %00000000, %00000000, %01111111
  110 D1:B904 FF FF FE 00 
              1C 3F FF FF 	.db %11111111, %11111111, %11111110, %00000000, %00011100, %00111111, %11111111, %11111111
  111 D1:B90C FC 78 1F 9F 
              FF FF F9 F8 	.db %11111100, %01111000, %00011111, %10011111, %11111111, %11111111, %11111001, %11111000
  112 D1:B914 1F CF FF FF 
              F3 F8 07 FF 	.db %00011111, %11001111, %11111111, %11111111, %11110011, %11111000, %00000111, %11111111
  113 D1:B91C FF FF F7 E0 
              03 FF FF FF 	.db %11111111, %11111111, %11110111, %11100000, %00000011, %11111111, %11111111, %11111111
  114 D1:B924 FF C0 01 FF 
              FF FF FF 80 	.db %11111111, %11000000, %00000001, %11111111, %11111111, %11111111, %11111111, %10000000
  115 D1:B92C F8 FF FF FF 
              FF 1F FF FF 	.db %11111000, %11111111, %11111111, %11111111, %11111111, %00011111, %11111111, %11111111
  116 D1:B934 FF FF FE FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111110, %11111111, %11111111, %11111111, %11111111, %11111111
  117 D1:B93C FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  118 D1:B944 7F FF FF FF 
              FF FE 1F FF 	.db %01111111, %11111111, %11111111, %11111111, %11111111, %11111110, %00011111, %11111111
  119 D1:B94C FF FF FF F8 
              0F FF FF FF 	.db %11111111, %11111111, %11111111, %11111000, %00001111, %11111111, %11111111, %11111111
  120 D1:B954 FF F0 07 FF 
              FF FF FF C0 	.db %11111111, %11110000, %00000111, %11111111, %11111111, %11111111, %11111111, %11000000
  121 D1:B95C 7F FF FF FF 
              FF FE FF FF 	.db %01111111, %11111111, %11111111, %11111111, %11111111, %11111110, %11111111, %11111111
  122 D1:B964 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  123 D1:B96C FF FF 7F FF 
              FF FF FF FE 	.db %11111111, %11111111, %01111111, %11111111, %11111111, %11111111, %11111111, %11111110
  124 D1:B974 3F FF FF FF 
              FF FC 0F FF 	.db %00111111, %11111111, %11111111, %11111111, %11111111, %11111100, %00001111, %11111111
  125 D1:B97C FF FF FF E0 
              1F FF FF FF 	.db %11111111, %11111111, %11111111, %11100000, %00011111, %11111111, %11111111, %11111111
  126 D1:B984 FF F8 7F FF 
              FF FF FF FE 	.db %11111111, %11111000, %01111111, %11111111, %11111111, %11111111, %11111111, %11111110
  127 D1:B98C FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  128 D1:B994 FF FF FF FF 
              67 FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %01100111, %11111111, %11111111, %11111111
  129 D1:B99C FF E6 0F FF 
              FF FF FF F0 	.db %11111111, %11100110, %00001111, %11111111, %11111111, %11111111, %11111111, %11110000
  130 D1:B9A4 1F FF FF FF 
              FF F8 3F FF 	.db %00011111, %11111111, %11111111, %11111111, %11111111, %11111000, %00111111, %11111111
  131 D1:B9AC FF FF FF FC 
              3F FF FF FF 	.db %11111111, %11111111, %11111111, %11111100, %00111111, %11111111, %11111111, %11111111
  132 D1:B9B4 FF FC 23 FF 
              FF FF FF C4 	.db %11111111, %11111100, %00100011, %11111111, %11111111, %11111111, %11111111, %11000100
  133 D1:B9BC 03 FF FF FF 
              FF C0 07 FF 	.db %00000011, %11111111, %11111111, %11111111, %11111111, %11000000, %00000111, %11111111
  134 D1:B9C4 FF FF FF E0 
              05 FF FF FF 	.db %11111111, %11111111, %11111111, %11100000, %00000101, %11111111, %11111111, %11111111
  135 D1:B9CC FF E0 0F 3F 
              FF FF FC F0 	.db %11111111, %11100000, %00001111, %00111111, %11111111, %11111111, %11111100, %11110000
  136 D1:B9D4 0C 7F FF FF 
              FE 30 00 7F 	.db %00001100, %01111111, %11111111, %11111111, %11111110, %00110000, %00000000, %01111111
  137 D1:B9DC FF FF FE 00 
              00 7F FF FF 	.db %11111111, %11111111, %11111110, %00000000, %00000000, %01111111, %11111111, %11111111
  138 D1:B9E4 FE 00 00 67 
              FE 7F E6 00 	.db %11111110, %00000000, %00000000, %01100111, %11111110, %01111111, %11100110, %00000000
  139 D1:B9EC 00 07 DE 7B 
              E0 00 00 07 	.db %00000000, %00000111, %11011110, %01111011, %11100000, %00000000, %00000000, %00000111
  140 D1:B9F4 9E 79 E0 00 
              00 07 0C 30 	.db %10011110, %01111001, %11100000, %00000000, %00000000, %00000111, %00001100, %00110000
  141 D1:B9FC E0 00 00 00 
              04 20 00 00 	.db %11100000, %00000000, %00000000, %00000000, %00000100, %00100000, %00000000, %00000000
  142 D1:BA04 -  -  -  -  
  143 D1:BA04 95 D0 -  -  	.db %10010101, %11010000
  144 D1:BA06 -  -  -  -  
  145 D1:BA06 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  146 D1:BA0E 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  147 D1:BA16 00 00 00 05 
              AA 94 00 00 	.db %00000000, %00000000, %00000000, %00000101, %10101010, %10010100, %00000000, %00000000
  148 D1:BA1E 00 00 00 15 
              AA 95 40 00 	.db %00000000, %00000000, %00000000, %00010101, %10101010, %10010101, %01000000, %00000000
  149 D1:BA26 00 00 00 05 
              55 6A A5 55 	.db %00000000, %00000000, %00000000, %00000101, %01010101, %01101010, %10100101, %01010101
  150 D1:BA2E 40 00 00 00 
              01 55 56 56 	.db %01000000, %00000000, %00000000, %00000000, %00000001, %01010101, %01010110, %01010110
  151 D1:BA36 55 55 00 00 
              00 01 55 55 	.db %01010101, %01010101, %00000000, %00000000, %00000000, %00000001, %01010101, %01010101
  152 D1:BA3E A5 69 55 55 
              00 00 05 55 	.db %10100101, %01101001, %01010101, %01010101, %00000000, %00000000, %00000101, %01010101
  153 D1:BA46 6A A5 6A A5 
              55 40 00 55 	.db %01101010, %10100101, %01101010, %10100101, %01010101, %01000000, %00000000, %01010101
  154 D1:BA4E 5A AA 95 AA 
              A9 55 40 00 	.db %01011010, %10101010, %10010101, %10101010, %10101001, %01010101, %01000000, %00000000
  155 D1:BA56 05 56 AA A9 
              5A AA A5 54 	.db %00000101, %01010110, %10101010, %10101001, %01011010, %10101010, %10100101, %01010100
  156 D1:BA5E 00 00 00 05 
              56 AA AA 56 	.db %00000000, %00000000, %00000000, %00000101, %01010110, %10101010, %10101010, %01010110
  157 D1:BA66 AA AA 55 40 
              00 00 00 15 	.db %10101010, %10101010, %01010101, %01000000, %00000000, %00000000, %00000000, %00010101
  158 D1:BA6E 6A AA A9 5A 
              AA AA 55 40 	.db %01101010, %10101010, %10101001, %01011010, %10101010, %10101010, %01010101, %01000000
  159 D1:BA76 00 00 00 55 
              AA AA A9 5A 	.db %00000000, %00000000, %00000000, %01010101, %10101010, %10101010, %10101001, %01011010
  160 D1:BA7E AA AA 95 40 
              00 00 05 56 	.db %10101010, %10101010, %10010101, %01000000, %00000000, %00000000, %00000101, %01010110
  161 D1:BA86 AA AA A5 6A 
              AA AA 55 40 	.db %10101010, %10101010, %10100101, %01101010, %10101010, %10101010, %01010101, %01000000
  162 D1:BA8E 00 05 5A AA 
              AA A5 6A AA 	.db %00000000, %00000101, %01011010, %10101010, %10101010, %10100101, %01101010, %10101010
  163 D1:BA96 AA 95 40 01 
              56 AA AA A9 	.db %10101010, %10010101, %01000000, %00000001, %01010110, %10101010, %10101010, %10101001
  164 D1:BA9E 5A AA AA A5 
              50 15 5A AA 	.db %01011010, %10101010, %10101010, %10100101, %01010000, %00010101, %01011010, %10101010
  165 D1:BAA6 AA A5 6A AA 
              AA 95 50 05 	.db %10101010, %10100101, %01101010, %10101010, %10101010, %10010101, %01010000, %00000101
  166 D1:BAAE 5A AA AA A9 
              5A AA AA A9 	.db %01011010, %10101010, %10101010, %10101001, %01011010, %10101010, %10101010, %10101001
  167 D1:BAB6 54 00 00 2A 
              AA AA AA 55 	.db %01010100, %00000000, %00000000, %00101010, %10101010, %10101010, %10101010, %01010101
  168 D1:BABE 6A AA AA AA 
              A0 00 00 2A 	.db %01101010, %10101010, %10101010, %10101010, %10100000, %00000000, %00000000, %00101010
  169 D1:BAC6 AA AA A5 55 
              56 AA AA AA 	.db %10101010, %10101010, %10100101, %01010101, %01010110, %10101010, %10101010, %10101010
  170 D1:BACE A0 00 00 AA 
              AA AA 55 55 	.db %10100000, %00000000, %00000000, %10101010, %10101010, %10101010, %01010101, %01010101
  171 D1:BAD6 56 AA AA AA 
              80 00 2A AA 	.db %01010110, %10101010, %10101010, %10101010, %10000000, %00000000, %00101010, %10101010
  172 D1:BADE AA 55 55 55 
              5A AA AA A0 	.db %10101010, %01010101, %01010101, %01010101, %01011010, %10101010, %10101010, %10100000
  173 D1:BAE6 02 AA AA 95 
              65 56 95 5A 	.db %00000010, %10101010, %10101010, %10010101, %01100101, %01010110, %10010101, %01011010
  174 D1:BAEE AA AA 01 56 
              AA 95 A5 55 	.db %10101010, %10101010, %00000001, %01010110, %10101010, %10010101, %10100101, %01010101
  175 D1:BAF6 A5 56 AA 55 
              00 01 55 AA 	.db %10100101, %01010110, %10101010, %01010101, %00000000, %00000001, %01010101, %10101010
  176 D1:BAFE 56 95 55 AA 
              55 A9 55 00 	.db %01010110, %10010101, %01010101, %10101010, %01010101, %10101001, %01010101, %00000000
  177 D1:BB06 00 01 56 A5 
              6A 55 55 A9 	.db %00000000, %00000001, %01010110, %10100101, %01101010, %01010101, %01010101, %10101001
  178 D1:BB0E 55 A5 50 00 
              00 01 56 95 	.db %01010101, %10100101, %01010000, %00000000, %00000000, %00000001, %01010110, %10010101
  179 D1:BB16 69 59 55 6A 
              55 A5 50 00 	.db %01101001, %01011001, %01010101, %01101010, %01010101, %10100101, %01010000, %00000000
  180 D1:BB1E 00 15 65 AA 
              56 5A 5A A5 	.db %00000000, %00010101, %01100101, %10101010, %01010110, %01011010, %01011010, %10100101
  181 D1:BB26 65 54 00 05 
              5A AA 56 9A 	.db %01100101, %01010100, %00000000, %00000101, %01011010, %10101010, %01010110, %10011010
  182 D1:BB2E 95 AA 59 54 
              00 01 55 AA 	.db %10010101, %10101010, %01011001, %01010100, %00000000, %00000001, %01010101, %10101010
  183 D1:BB36 56 A5 A9 5A 
              A9 55 00 00 	.db %01010110, %10100101, %10101001, %01011010, %10101001, %01010101, %00000000, %00000000
  184 D1:BB3E 01 55 A9 5A 
              96 A5 6A 95 	.db %00000001, %01010101, %10101001, %01011010, %10010110, %10100101, %01101010, %10010101
  185 D1:BB46 50 00 00 00 
              55 6A AA 96 	.db %01010000, %00000000, %00000000, %00000000, %01010101, %01101010, %10101010, %10010110
  186 D1:BB4E A9 6A 55 40 
              00 00 15 56 	.db %10101001, %01101010, %01010101, %01000000, %00000000, %00000000, %00010101, %01010110
  187 D1:BB56 AA AA AA AA 
              55 50 00 01 	.db %10101010, %10101010, %10101010, %10101010, %01010101, %01010000, %00000000, %00000001
  188 D1:BB5E 55 5A AA AA 
              A9 55 50 00 	.db %01010101, %01011010, %10101010, %10101010, %10101001, %01010101, %01010000, %00000000
  189 D1:BB66 00 15 55 5A 
              AA 95 55 50 	.db %00000000, %00010101, %01010101, %01011010, %10101010, %10010101, %01010101, %01010000
  190 D1:BB6E 00 00 00 55 
              55 AA 95 55 	.db %00000000, %00000000, %00000000, %01010101, %01010101, %10101010, %10010101, %01010101
  191 D1:BB76 40 00 00 00 
              05 55 6A A5 	.db %01000000, %00000000, %00000000, %00000000, %00000101, %01010101, %01101010, %10100101
  192 D1:BB7E 55 40 00 00 
              00 01 55 AA 	.db %01010101, %01000000, %00000000, %00000000, %00000000, %00000001, %01010101, %10101010
  193 D1:BB86 95 50 00 00 
              00 00 05 AA 	.db %10010101, %01010000, %00000000, %00000000, %00000000, %00000000, %00000101, %10101010
  194 D1:BB8E 94 00 00 00 
              00 00 00 00 	.db %10010100, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  195 D1:BB96 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  196 D1:BB9E 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  197 D1:BBA6 00 00 00 00 
              00 -  -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000
  198 D1:BBAB -  -  -  -  
  199 D1:BBAB -  -  -  -  
  200 D1:BBAB -  -  -  -  OrangeDot:
  201 D1:BBAB 08 -  -  -  	.db %00001000
  202 D1:BBAC 0F 0F -  -  	.db 15, 15
  203 D1:BBAE 03 C0 0F C0 
              7F E1 FF E7 	.db %00000011, %11000000, %00001111, %11000000, %01111111, %11100001, %11111111, %11100111
  204 D1:BBB6 FF DF FF FF 
              FF FF FF FF 	.db %11111111, %11011111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  205 D1:BBBE FF FF FF FF 
              FB FF E3 FF 	.db %11111111, %11111111, %11111111, %11111111, %11111011, %11111111, %11100011, %11111111
  206 D1:BBC6 C3 FF 01 F8 
              00 -  -  -  	.db %11000011, %11111111, %00000001, %11111000, %00000000
  207 D1:BBCB -  -  -  -  
  208 D1:BBCB B0 -  -  -  	.db %10110000
  209 D1:BBCC -  -  -  -  
  210 D1:BBCC -  -  -  -  
  211 D1:BBCC -  -  -  -  
  212 D1:BBCC -  -  -  -  SquiggleL:
  213 D1:BBCC 08 -  -  -  	.db %00001000
  214 D1:BBCD 26 18 -  -  	.db 38, 24
  215 D1:BBCF 00 00 07 FF 
              80 00 00 1F 	.db %00000000, %00000000, %00000111, %11111111, %10000000, %00000000, %00000000, %00011111
  216 D1:BBD7 FE 00 00 00 
              7F FF C0 00 	.db %11111110, %00000000, %00000000, %00000000, %01111111, %11111111, %11000000, %00000000
  217 D1:BBDF 01 FF FF 00 
              00 07 FF FC 	.db %00000001, %11111111, %11111111, %00000000, %00000000, %00000111, %11111111, %11111100
  218 D1:BBE7 00 00 1F 1F 
              F0 00 00 7C 	.db %00000000, %00000000, %00011111, %00011111, %11110000, %00000000, %00000000, %01111100
  219 D1:BBEF 7F C1 FC 01 
              F0 1F 07 F0 	.db %01111111, %11000001, %11111100, %00000001, %11110000, %00011111, %00000111, %11110000
  220 D1:BBF7 07 C0 7C 1F 
              C0 1F 01 F3 	.db %00000111, %11000000, %01111100, %00011111, %11000000, %00011111, %00000001, %11110011
  221 D1:BBFF FF F8 7C 07 
              CF FF E1 F0 	.db %11111111, %11111000, %01111100, %00000111, %11001111, %11111111, %11100001, %11110000
  222 D1:BC07 1F 3F FF FF 
              C0 00 FF FF 	.db %00011111, %00111111, %11111111, %11111111, %11000000, %00000000, %11111111, %11111111
  223 D1:BC0F FF 00 0F E0 
              FF F0 00 3F 	.db %11111111, %00000000, %00001111, %11100000, %11111111, %11110000, %00000000, %00111111
  224 D1:BC17 83 FF C0 00 
              FE 0F FF 00 	.db %10000011, %11111111, %11000000, %00000000, %11111110, %00001111, %11111111, %00000000
  225 D1:BC1F 03 F8 0F FC 
              00 0F E0 3F 	.db %00000011, %11111000, %00001111, %11111100, %00000000, %00001111, %11100000, %00111111
  226 D1:BC27 F0 00 3E 00 
              1F C0 00 F8 	.db %11110000, %00000000, %00111110, %00000000, %00011111, %11000000, %00000000, %11111000
  227 D1:BC2F 00 7F 00 03 
              E0 01 FC 00 	.db %00000000, %01111111, %00000000, %00000011, %11100000, %00000001, %11111100, %00000000
  228 D1:BC37 0F 80 00 00 
              00 3E 00 00 	.db %00001111, %10000000, %00000000, %00000000, %00000000, %00111110, %00000000, %00000000
  229 D1:BC3F 00 00 -  -  	.db %00000000, %00000000
  230 D1:BC41 -  -  -  -  
  231 D1:BC41 50 -  -  -  	.db %01010000
  232 D1:BC42 -  -  -  -  
  233 D1:BC42 -  -  -  -  
  234 D1:BC42 -  -  -  -  
  235 D1:BC42 -  -  -  -  Banana5:
  236 D1:BC42 20 -  -  -  	.db %00100000
  237 D1:BC43 20 20 -  -  	.db 32, 32
  238 D1:BC45 00 00 00 3C 
              00 00 00 FC 	.db %00000000, %00000000, %00000000, %00111100, %00000000, %00000000, %00000000, %11111100
  239 D1:BC4D 00 00 03 FC 
              00 00 07 FC 	.db %00000000, %00000000, %00000011, %11111100, %00000000, %00000000, %00000111, %11111100
  240 D1:BC55 00 00 0F FC 
              00 00 3F FC 	.db %00000000, %00000000, %00001111, %11111100, %00000000, %00000000, %00111111, %11111100
  241 D1:BC5D 00 00 7F FC 
              00 00 FF F8 	.db %00000000, %00000000, %01111111, %11111100, %00000000, %00000000, %11111111, %11111000
  242 D1:BC65 00 03 FF F0 
              00 07 FF F0 	.db %00000000, %00000011, %11111111, %11110000, %00000000, %00000111, %11111111, %11110000
  243 D1:BC6D 00 1F FF E0 
              00 3F FF E0 	.db %00000000, %00011111, %11111111, %11100000, %00000000, %00111111, %11111111, %11100000
  244 D1:BC75 00 7F FF C0 
              01 FF FF 80 	.db %00000000, %01111111, %11111111, %11000000, %00000001, %11111111, %11111111, %10000000
  245 D1:BC7D 01 FF FF 00 
              03 FF FE 00 	.db %00000001, %11111111, %11111111, %00000000, %00000011, %11111111, %11111110, %00000000
  246 D1:BC85 07 FF FE 00 
              0F FF FC 00 	.db %00000111, %11111111, %11111110, %00000000, %00001111, %11111111, %11111100, %00000000
  247 D1:BC8D 1F FF F8 00 
              1F FF F0 00 	.db %00011111, %11111111, %11111000, %00000000, %00011111, %11111111, %11110000, %00000000
  248 D1:BC95 3F FF C0 00 
              3F FF 80 00 	.db %00111111, %11111111, %11000000, %00000000, %00111111, %11111111, %10000000, %00000000
  249 D1:BC9D 7F FF 00 00 
              7F FC 00 00 	.db %01111111, %11111111, %00000000, %00000000, %01111111, %11111100, %00000000, %00000000
  250 D1:BCA5 FF F8 00 00 
              FF E0 00 00 	.db %11111111, %11111000, %00000000, %00000000, %11111111, %11100000, %00000000, %00000000
  251 D1:BCAD FF C0 00 00 
              FF 80 00 00 	.db %11111111, %11000000, %00000000, %00000000, %11111111, %10000000, %00000000, %00000000
  252 D1:BCB5 FF 00 00 00 
              FC 00 00 00 	.db %11111111, %00000000, %00000000, %00000000, %11111100, %00000000, %00000000, %00000000
  253 D1:BCBD F8 00 00 00 
              F8 00 00 00 	.db %11111000, %00000000, %00000000, %00000000, %11111000, %00000000, %00000000, %00000000
  254 D1:BCC5 -  -  -  -  
  255 D1:BCC5 01 20 -  -  	.db %00000001, %00100000
  256 D1:BCC7 -  -  -  -  
  257 D1:BCC7 00 50 05 A0 
              05 A8 01 6A 	.db %00000000, %01010000, %00000101, %10100000, %00000101, %10101000, %00000001, %01101010
  258 D1:BCCF 6A 55 A9 AA 
              56 A9 AA 55 	.db %01101010, %01010101, %10101001, %10101010, %01010110, %10101001, %10101010, %01010101
  259 D1:BCD7 AA 66 A5 5A 
              A6 6A 56 AA 	.db %10101010, %01100110, %10100101, %01011010, %10100110, %01101010, %01010110, %10101010
  260 D1:BCDF 66 A5 5A AA 
              A6 A9 5A AA 	.db %01100110, %10100101, %01011010, %10101010, %10100110, %10101001, %01011010, %10101010
  261 D1:BCE7 66 A9 56 AA 
              99 9A 55 6A 	.db %01100110, %10101001, %01010110, %10101010, %10011001, %10011010, %01010101, %01101010
  262 D1:BCEF AA 99 A9 6A 
              AA AA 6A 5A 	.db %10101010, %10011001, %10101001, %01101010, %10101010, %10101010, %01101010, %01011010
  263 D1:BCF7 AA AA 9A 96 
              AA AA A6 65 	.db %10101010, %10101010, %10011010, %10010110, %10101010, %10101010, %10100110, %01100101
  264 D1:BCFF 6A AA AA 66 
              55 AA AA A6 	.db %01101010, %10101010, %10101010, %01100110, %01010101, %10101010, %10101010, %10100110
  265 D1:BD07 65 6A AA A9 
              99 56 AA A6 	.db %01100101, %01101010, %10101010, %10101001, %10011001, %01010110, %10101010, %10100110
  266 D1:BD0F 66 5A AA 99 
              95 5A A6 66 	.db %01100110, %01011010, %10101010, %10011001, %10010101, %01011010, %10100110, %01100110
  267 D1:BD17 95 AA 66 A5 
              6A 99 A5 5A 	.db %10010101, %10101010, %01100110, %10100101, %01101010, %10011001, %10100101, %01011010
  268 D1:BD1F 99 A5 59 9A 
              56 66 55 02 	.db %10011001, %10100101, %01011001, %10011010, %01010110, %01100110, %01010101, %00000010
  269 D1:BD27 55 00 60 04 
              00 -  -  -  	.db %01010101, %00000000, %01100000, %00000100, %00000000
  270 D1:BD2C -  -  -  -  
  271 D1:BD2C -  -  -  -  
  272 D1:BD2C -  -  -  -  GreenCurl1:
  273 D1:BD2C 08 -  -  -  	.db %00001000
  274 D1:BD2D 20 20 -  -  	.db 32, 32
  275 D1:BD2F 00 0F E0 00 
              00 1F E0 00 	.db %00000000, %00001111, %11100000, %00000000, %00000000, %00011111, %11100000, %00000000
  276 D1:BD37 00 FF E0 00 
              03 FE 00 00 	.db %00000000, %11111111, %11100000, %00000000, %00000011, %11111110, %00000000, %00000000
  277 D1:BD3F 07 F8 00 00 
              07 E0 00 00 	.db %00000111, %11111000, %00000000, %00000000, %00000111, %11100000, %00000000, %00000000
  278 D1:BD47 1F 80 00 00 
              3F 00 00 00 	.db %00011111, %10000000, %00000000, %00000000, %00111111, %00000000, %00000000, %00000000
  279 D1:BD4F 3E 07 FE 00 
              7C 0F FF F8 	.db %00111110, %00000111, %11111110, %00000000, %01111100, %00001111, %11111111, %11111000
  280 D1:BD57 78 1F FF FC 
              F0 3F 07 FE 	.db %01111000, %00011111, %11111111, %11111100, %11110000, %00111111, %00000111, %11111110
  281 D1:BD5F F0 3C 00 3F 
              E0 78 00 1F 	.db %11110000, %00111100, %00000000, %00111111, %11100000, %01111000, %00000000, %00011111
  282 D1:BD67 E0 78 00 07 
              E0 78 0E 07 	.db %11100000, %01111000, %00000000, %00000111, %11100000, %01111000, %00001110, %00000111
  283 D1:BD6F E0 78 0E 07 
              E0 38 0E 03 	.db %11100000, %01111000, %00001110, %00000111, %11100000, %00111000, %00001110, %00000011
  284 D1:BD77 F0 3C 1E 03 
              F8 3E 3E 07 	.db %11110000, %00111100, %00011110, %00000011, %11111000, %00111110, %00111110, %00000111
  285 D1:BD7F F8 1F FE 07 
              78 1F FC 07 	.db %11111000, %00011111, %11111110, %00000111, %01111000, %00011111, %11111100, %00000111
  286 D1:BD87 3C 0F F8 0F 
              3E 00 70 1F 	.db %00111100, %00001111, %11111000, %00001111, %00111110, %00000000, %01110000, %00011111
  287 D1:BD8F 1F 00 00 3E 
              0F 80 00 FE 	.db %00011111, %00000000, %00000000, %00111110, %00001111, %10000000, %00000000, %11111110
  288 D1:BD97 0F C0 01 FC 
              07 C0 03 F8 	.db %00001111, %11000000, %00000001, %11111100, %00000111, %11000000, %00000011, %11111000
  289 D1:BD9F 03 E0 0F E0 
              01 FF FF C0 	.db %00000011, %11100000, %00001111, %11100000, %00000001, %11111111, %11111111, %11000000
  290 D1:BDA7 00 FF FF 00 
              00 7F FE 00 	.db %00000000, %11111111, %11111111, %00000000, %00000000, %01111111, %11111110, %00000000
  291 D1:BDAF -  -  -  -  
  292 D1:BDAF 50 -  -  -  	.db %01010000
  293 D1:BDB0 -  -  -  -  
  294 D1:BDB0 -  -  -  -  
  295 D1:BDB0 -  -  -  -  
  296 D1:BDB0 -  -  -  -  Bluecurl:
  297 D1:BDB0 08 -  -  -  	.db %00001000
  298 D1:BDB1 30 30 -  -  	.db 48, 48
  299 D1:BDB3 00 00 FF C0 
              00 00 00 01 	.db %00000000, %00000000, %11111111, %11000000, %00000000, %00000000, %00000000, %00000001
  300 D1:BDBB FF FE 00 00 
              00 07 C0 7F 	.db %11111111, %11111110, %00000000, %00000000, %00000000, %00000111, %11000000, %01111111
  301 D1:BDC3 00 00 00 1F 
              00 07 C0 00 	.db %00000000, %00000000, %00000000, %00011111, %00000000, %00000111, %11000000, %00000000
  302 D1:BDCB 00 3E 00 01 
              F0 00 00 78 	.db %00000000, %00111110, %00000000, %00000001, %11110000, %00000000, %00000000, %01111000
  303 D1:BDD3 00 00 78 00 
              00 F0 00 00 	.db %00000000, %00000000, %01111000, %00000000, %00000000, %11110000, %00000000, %00000000
  304 D1:BDDB 1C 00 01 E0 
              00 00 0C 00 	.db %00011100, %00000000, %00000001, %11100000, %00000000, %00000000, %00001100, %00000000
  305 D1:BDE3 01 C0 00 00 
              0E 00 01 80 	.db %00000001, %11000000, %00000000, %00000000, %00001110, %00000000, %00000001, %10000000
  306 D1:BDEB 00 00 07 00 
              03 80 00 00 	.db %00000000, %00000000, %00000111, %00000000, %00000011, %10000000, %00000000, %00000000
  307 D1:BDF3 03 80 03 03 
              FF 80 01 C0 	.db %00000011, %10000000, %00000011, %00000011, %11111111, %10000000, %00000001, %11000000
  308 D1:BDFB 03 0F FF C0 
              00 E0 07 1F 	.db %00000011, %00001111, %11111111, %11000000, %00000000, %11100000, %00000111, %00011111
  309 D1:BE03 00 F0 00 F0 
              0E 18 00 78 	.db %00000000, %11110000, %00000000, %11110000, %00001110, %00011000, %00000000, %01111000
  310 D1:BE0B 00 30 0E 38 
              00 1C 00 38 	.db %00000000, %00110000, %00001110, %00111000, %00000000, %00011100, %00000000, %00111000
  311 D1:BE13 1C 30 00 0E 
              00 38 1C 30 	.db %00011100, %00110000, %00000000, %00001110, %00000000, %00111000, %00011100, %00110000
  312 D1:BE1B 00 0E 00 1C 
              18 30 00 06 	.db %00000000, %00001110, %00000000, %00011100, %00011000, %00110000, %00000000, %00000110
  313 D1:BE23 00 0C 38 30 
              00 07 00 0E 	.db %00000000, %00001100, %00111000, %00110000, %00000000, %00000111, %00000000, %00001110
  314 D1:BE2B 70 30 1F 03 
              80 0E 60 30 	.db %01110000, %00110000, %00011111, %00000011, %10000000, %00001110, %01100000, %00110000
  315 D1:BE33 1F 01 C0 06 
              E0 30 18 00 	.db %00011111, %00000001, %11000000, %00000110, %11100000, %00110000, %00011000, %00000000
  316 D1:BE3B C0 06 E0 30 
              18 00 C0 07 	.db %11000000, %00000110, %11100000, %00110000, %00011000, %00000000, %11000000, %00000111
  317 D1:BE43 C0 30 18 00 
              C0 07 C0 30 	.db %11000000, %00110000, %00011000, %00000000, %11000000, %00000111, %11000000, %00110000
  318 D1:BE4B 18 00 C0 03 
              C0 30 1C 00 	.db %00011000, %00000000, %11000000, %00000011, %11000000, %00110000, %00011100, %00000000
  319 D1:BE53 C0 03 C0 30 
              0C 00 C0 03 	.db %11000000, %00000011, %11000000, %00110000, %00001100, %00000000, %11000000, %00000011
  320 D1:BE5B C0 30 0E 00 
              C0 07 C0 38 	.db %11000000, %00110000, %00001110, %00000000, %11000000, %00000111, %11000000, %00111000
  321 D1:BE63 07 00 C0 07 
              00 18 07 81 	.db %00000111, %00000000, %11000000, %00000111, %00000000, %00011000, %00000111, %10000001
  322 D1:BE6B C0 06 00 18 
              01 E7 80 06 	.db %11000000, %00000110, %00000000, %00011000, %00000001, %11100111, %10000000, %00000110
  323 D1:BE73 00 1C 01 FF 
              80 06 00 0C 	.db %00000000, %00011100, %00000001, %11111111, %10000000, %00000110, %00000000, %00001100
  324 D1:BE7B 00 3C 00 0E 
              00 0E 00 00 	.db %00000000, %00111100, %00000000, %00001110, %00000000, %00001110, %00000000, %00000000
  325 D1:BE83 00 0E 00 06 
              00 00 00 0C 	.db %00000000, %00001110, %00000000, %00000110, %00000000, %00000000, %00000000, %00001100
  326 D1:BE8B 00 07 00 00 
              00 1C 00 03 	.db %00000000, %00000111, %00000000, %00000000, %00000000, %00011100, %00000000, %00000011
  327 D1:BE93 80 00 00 38 
              00 01 80 00 	.db %10000000, %00000000, %00000000, %00111000, %00000000, %00000001, %10000000, %00000000
  328 D1:BE9B 00 78 00 01 
              C0 00 00 F0 	.db %00000000, %01111000, %00000000, %00000001, %11000000, %00000000, %00000000, %11110000
  329 D1:BEA3 00 00 E0 00 
              01 E0 00 00 	.db %00000000, %00000000, %11100000, %00000000, %00000001, %11100000, %00000000, %00000000
  330 D1:BEAB 70 00 03 80 
              00 00 78 00 	.db %01110000, %00000000, %00000011, %10000000, %00000000, %00000000, %01111000, %00000000
  331 D1:BEB3 07 80 00 00 
              18 00 1F 00 	.db %00000111, %10000000, %00000000, %00000000, %00011000, %00000000, %00011111, %00000000
  332 D1:BEBB 00 00 1C 00 
              7C 00 00 00 	.db %00000000, %00000000, %00011100, %00000000, %01111100, %00000000, %00000000, %00000000
  333 D1:BEC3 1E 01 F8 00 
              00 00 07 F7 	.db %00011110, %00000001, %11111000, %00000000, %00000000, %00000000, %00000111, %11110111
  334 D1:BECB E0 00 00 00 
              03 FF 00 00 	.db %11100000, %00000000, %00000000, %00000000, %00000011, %11111111, %00000000, %00000000
  335 D1:BED3 -  -  -  -  
  336 D1:BED3 60 -  -  -  	.db %01100000
  337 D1:BED4 -  -  -  -  
  338 D1:BED4 -  -  -  -  
  339 D1:BED4 -  -  -  -  
Listing for file "ascent.asm"
  167 D1:BED4 -  -  -  -  #include "FG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\FG_Data.txt"
    1 D1:BED4 -  -  -  -  FG_Data_frame_table:
    2 D1:BED4 52 C0 D1 -  	.dl FG_Data_0
    3 D1:BED7 2A C0 D1 -  	.dl FG_Data_1
    4 D1:BEDA 06 C0 D1 -  	.dl FG_Data_2
    5 D1:BEDD DE BF D1 -  	.dl FG_Data_3
    6 D1:BEE0 9E BF D1 -  	.dl FG_Data_4
    7 D1:BEE3 76 BF D1 -  	.dl FG_Data_5
    8 D1:BEE6 52 BF D1 -  	.dl FG_Data_6
    9 D1:BEE9 2A BF D1 -  	.dl FG_Data_7
   10 D1:BEEC 02 BF D1 -  	.dl FG_Data_8
   11 D1:BEEF F2 BE D1 -  	.dl FG_Data_9
   12 D1:BEF2 -  -  -  -  
   13 D1:BEF2 -  -  -  -  
   14 D1:BEF2 -  -  -  -  
   15 D1:BEF2 -  -  -  -  FG_Data_9:
   16 D1:BEF2 38 C7 D1 -  	.dl Sprite_Table_0
   17 D1:BEF5 03 -  -  -  	.db 3
   18 D1:BEF6 18 2D 56 05 	.db 24, 45, 86, 5
   19 D1:BEFA 26 2D 22 02 	.db 38, 45, 34, 2
   20 D1:BEFE 1E 17 7C 04 	.db 30, 23, 124, 4
   21 D1:BF02 -  -  -  -  
   22 D1:BF02 -  -  -  -  FG_Data_8:
   23 D1:BF02 38 C7 D1 -  	.dl Sprite_Table_0
   24 D1:BF05 09 -  -  -  	.db 9
   25 D1:BF06 41 2D 1B 05 	.db 65, 45, 27, 5
   26 D1:BF0A B7 2D 7C 05 	.db 183, 45, 124, 5
   27 D1:BF0E DD 2D 2D 05 	.db 221, 45, 45, 5
   28 D1:BF12 36 2D 6C 06 	.db 54, 45, 108, 6
   29 D1:BF16 98 2D 15 06 	.db 152, 45, 21, 6
   30 D1:BF1A 75 2D 54 02 	.db 117, 45, 84, 2
   31 D1:BF1E C0 17 55 07 	.db 192, 23, 85, 7
   32 D1:BF22 59 17 78 04 	.db 89, 23, 120, 4
   33 D1:BF26 1A 17 46 04 	.db 26, 23, 70, 4
   34 D1:BF2A -  -  -  -  
   35 D1:BF2A -  -  -  -  FG_Data_7:
   36 D1:BF2A 38 C7 D1 -  	.dl Sprite_Table_0
   37 D1:BF2D 09 -  -  -  	.db 9
   38 D1:BF2E 48 2D 6D 05 	.db 72, 45, 109, 5
   39 D1:BF32 A3 2D 27 01 	.db 163, 45, 39, 1
   40 D1:BF36 E8 2D 4C 01 	.db 232, 45, 76, 1
   41 D1:BF3A BA 2D 70 02 	.db 186, 45, 112, 2
   42 D1:BF3E 1F 2D 2C 02 	.db 31, 45, 44, 2
   43 D1:BF42 4D 17 16 03 	.db 77, 23, 22, 3
   44 D1:BF46 E8 17 16 07 	.db 232, 23, 22, 7
   45 D1:BF4A 75 17 4F 00 	.db 117, 23, 79, 0
   46 D1:BF4E 05 2F 4C 09 	.db 5, 47, 76, 9
   47 D1:BF52 -  -  -  -  
   48 D1:BF52 -  -  -  -  FG_Data_6:
   49 D1:BF52 38 C7 D1 -  	.dl Sprite_Table_0
   50 D1:BF55 08 -  -  -  	.db 8
   51 D1:BF56 1D 2D 29 05 	.db 29, 45, 41, 5
   52 D1:BF5A 10 2D 64 01 	.db 16, 45, 100, 1
   53 D1:BF5E F2 2D 2F 05 	.db 242, 45, 47, 5
   54 D1:BF62 DF 2D 60 02 	.db 223, 45, 96, 2
   55 D1:BF66 60 2D 4E 02 	.db 96, 45, 78, 2
   56 D1:BF6A 90 2D 13 06 	.db 144, 45, 19, 6
   57 D1:BF6E 54 17 79 03 	.db 84, 23, 121, 3
   58 D1:BF72 B8 17 0A 00 	.db 184, 23, 10, 0
   59 D1:BF76 -  -  -  -  
   60 D1:BF76 -  -  -  -  FG_Data_5:
   61 D1:BF76 38 C7 D1 -  	.dl Sprite_Table_0
   62 D1:BF79 09 -  -  -  	.db 9
   63 D1:BF7A 03 2D 52 05 	.db 3, 45, 82, 5
   64 D1:BF7E 58 2D 78 01 	.db 88, 45, 120, 1
   65 D1:BF82 B1 2D 09 06 	.db 177, 45, 9, 6
   66 D1:BF86 6A 2D 3C 02 	.db 106, 45, 60, 2
   67 D1:BF8A B4 17 4D 07 	.db 180, 23, 77, 7
   68 D1:BF8E EE 17 42 04 	.db 238, 23, 66, 4
   69 D1:BF92 81 17 71 04 	.db 129, 23, 113, 4
   70 D1:BF96 20 17 1D 00 	.db 32, 23, 29, 0
   71 D1:BF9A 27 2F 32 09 	.db 39, 47, 50, 9
   72 D1:BF9E -  -  -  -  
   73 D1:BF9E -  -  -  -  FG_Data_4:
   74 D1:BF9E 38 C7 D1 -  	.dl Sprite_Table_0
   75 D1:BFA1 0F -  -  -  	.db 15
   76 D1:BFA2 9B 2D 22 01 	.db 155, 45, 34, 1
   77 D1:BFA6 95 2D 2D 05 	.db 149, 45, 45, 5
   78 D1:BFAA 73 2D 3D 01 	.db 115, 45, 61, 1
   79 D1:BFAE 5D 2D 41 05 	.db 93, 45, 65, 5
   80 D1:BFB2 70 2D 4B 05 	.db 112, 45, 75, 5
   81 D1:BFB6 45 2D 50 05 	.db 69, 45, 80, 5
   82 D1:BFBA 45 2D 50 05 	.db 69, 45, 80, 5
   83 D1:BFBE 61 2D 67 05 	.db 97, 45, 103, 5
   84 D1:BFC2 EF 2D 28 01 	.db 239, 45, 40, 1
   85 D1:BFC6 3A 2D 55 05 	.db 58, 45, 85, 5
   86 D1:BFCA 3B 2D 26 01 	.db 59, 45, 38, 1
   87 D1:BFCE 0A 2D 17 01 	.db 10, 45, 23, 1
   88 D1:BFD2 8B 2D 11 06 	.db 139, 45, 17, 6
   89 D1:BFD6 B4 17 7E 03 	.db 180, 23, 126, 3
   90 D1:BFDA 93 17 46 04 	.db 147, 23, 70, 4
   91 D1:BFDE -  -  -  -  
   92 D1:BFDE -  -  -  -  FG_Data_3:
   93 D1:BFDE 38 C7 D1 -  	.dl Sprite_Table_0
   94 D1:BFE1 09 -  -  -  	.db 9
   95 D1:BFE2 52 2D 41 01 	.db 82, 45, 65, 1
   96 D1:BFE6 83 2D 62 01 	.db 131, 45, 98, 1
   97 D1:BFEA 25 2D 85 01 	.db 37, 45, 133, 1
   98 D1:BFEE 8D 2D 15 06 	.db 141, 45, 21, 6
   99 D1:BFF2 13 17 1B 07 	.db 19, 23, 27, 7
  100 D1:BFF6 CE 17 39 07 	.db 206, 23, 57, 7
  101 D1:BFFA DB 17 69 04 	.db 219, 23, 105, 4
  102 D1:BFFE 1E 17 6C 04 	.db 30, 23, 108, 4
  103 D1:C002 AB 2F 4B 08 	.db 171, 47, 75, 8
  104 D1:C006 -  -  -  -  
  105 D1:C006 -  -  -  -  FG_Data_2:
  106 D1:C006 38 C7 D1 -  	.dl Sprite_Table_0
  107 D1:C009 08 -  -  -  	.db 8
  108 D1:C00A 1E 2D 40 05 	.db 30, 45, 64, 5
  109 D1:C00E 33 2D 74 05 	.db 51, 45, 116, 5
  110 D1:C012 94 2D 2C 01 	.db 148, 45, 44, 1
  111 D1:C016 B1 2D 56 06 	.db 177, 45, 86, 6
  112 D1:C01A 3B 17 5F 07 	.db 59, 23, 95, 7
  113 D1:C01E BF 17 43 04 	.db 191, 23, 67, 4
  114 D1:C022 3D 17 20 04 	.db 61, 23, 32, 4
  115 D1:C026 16 2F 19 08 	.db 22, 47, 25, 8
  116 D1:C02A -  -  -  -  
  117 D1:C02A -  -  -  -  FG_Data_1:
  118 D1:C02A 38 C7 D1 -  	.dl Sprite_Table_0
  119 D1:C02D 09 -  -  -  	.db 9
  120 D1:C02E 32 2D 80 05 	.db 50, 45, 128, 5
  121 D1:C032 19 2D 21 05 	.db 25, 45, 33, 5
  122 D1:C036 8A 2D 50 05 	.db 138, 45, 80, 5
  123 D1:C03A C7 2D 12 02 	.db 199, 45, 18, 2
  124 D1:C03E B3 2D 6A 06 	.db 179, 45, 106, 6
  125 D1:C042 0C 2D 54 06 	.db 12, 45, 84, 6
  126 D1:C046 47 17 20 07 	.db 71, 23, 32, 7
  127 D1:C04A CE 17 35 00 	.db 206, 23, 53, 0
  128 D1:C04E 54 17 44 00 	.db 84, 23, 68, 0
  129 D1:C052 -  -  -  -  
  130 D1:C052 -  -  -  -  FG_Data_0:
  131 D1:C052 38 C7 D1 -  	.dl Sprite_Table_0
  132 D1:C055 08 -  -  -  	.db 8
  133 D1:C056 53 17 7E 00 	.db 83, 23, 126, 0
  134 D1:C05A A4 2D 44 01 	.db 164, 45, 68, 1
  135 D1:C05E B2 2D 84 01 	.db 178, 45, 132, 1
  136 D1:C062 81 2D 0E 02 	.db 129, 45, 14, 2
  137 D1:C066 2E 17 07 03 	.db 46, 23, 7, 3
  138 D1:C06A BD 17 61 03 	.db 189, 23, 97, 3
  139 D1:C06E C8 17 1A 00 	.db 200, 23, 26, 0
  140 D1:C072 36 17 47 04 	.db 54, 23, 71, 4
  141 D1:C076 -  -  -  -  
  142 D1:C076 -  -  -  -  
  143 D1:C076 -  -  -  -  
Listing for file "ascent.asm"
  168 D1:C076 -  -  -  -  #include "MG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\MG_Data.txt"
    1 D1:C076 -  -  -  -  MG_Data_frame_table:
    2 D1:C076 2C C2 D1 -  	.dl MG_Data_0
    3 D1:C079 F8 C1 D1 -  	.dl MG_Data_1
    4 D1:C07C D0 C1 D1 -  	.dl MG_Data_2
    5 D1:C07F A0 C1 D1 -  	.dl MG_Data_3
    6 D1:C082 64 C1 D1 -  	.dl MG_Data_4
    7 D1:C085 34 C1 D1 -  	.dl MG_Data_5
    8 D1:C088 04 C1 D1 -  	.dl MG_Data_6
    9 D1:C08B D8 C0 D1 -  	.dl MG_Data_7
   10 D1:C08E A0 C0 D1 -  	.dl MG_Data_8
   11 D1:C091 94 C0 D1 -  	.dl MG_Data_9
   12 D1:C094 -  -  -  -  
   13 D1:C094 -  -  -  -  
   14 D1:C094 -  -  -  -  
   15 D1:C094 -  -  -  -  MG_Data_9:
   16 D1:C094 38 C7 D1 -  	.dl Sprite_Table_0
   17 D1:C097 02 -  -  -  	.db 2
   18 D1:C098 24 0E 59 0B 	.db 36, 14, 89, 11
   19 D1:C09C 18 17 30 0C 	.db 24, 23, 48, 12
   20 D1:C0A0 -  -  -  -  
   21 D1:C0A0 -  -  -  -  MG_Data_8:
   22 D1:C0A0 38 C7 D1 -  	.dl Sprite_Table_0
   23 D1:C0A3 0D -  -  -  	.db 13
   24 D1:C0A4 11 0E 30 0B 	.db 17, 14, 48, 11
   25 D1:C0A8 86 0E 13 0A 	.db 134, 14, 19, 10
   26 D1:C0AC 15 0E 6A 0B 	.db 21, 14, 106, 11
   27 D1:C0B0 94 0E 24 0A 	.db 148, 14, 36, 10
   28 D1:C0B4 CD 0E 7D 0B 	.db 205, 14, 125, 11
   29 D1:C0B8 FA 0E 21 0B 	.db 250, 14, 33, 11
   30 D1:C0BC 94 0E 51 0A 	.db 148, 14, 81, 10
   31 D1:C0C0 CB 2F 3A 09 	.db 203, 47, 58, 9
   32 D1:C0C4 44 2D 61 05 	.db 68, 45, 97, 5
   33 D1:C0C8 EB 2D 15 01 	.db 235, 45, 21, 1
   34 D1:C0CC EB 2D 73 05 	.db 235, 45, 115, 5
   35 D1:C0D0 36 2D 24 05 	.db 54, 45, 36, 5
   36 D1:C0D4 B0 17 66 0C 	.db 176, 23, 102, 12
   37 D1:C0D8 -  -  -  -  
   38 D1:C0D8 -  -  -  -  MG_Data_7:
   39 D1:C0D8 38 C7 D1 -  	.dl Sprite_Table_0
   40 D1:C0DB 0A -  -  -  	.db 10
   41 D1:C0DC 27 0E 4C 0B 	.db 39, 14, 76, 11
   42 D1:C0E0 8A 0E 70 0B 	.db 138, 14, 112, 11
   43 D1:C0E4 6F 0E 22 0A 	.db 111, 14, 34, 10
   44 D1:C0E8 B6 0E 37 0A 	.db 182, 14, 55, 10
   45 D1:C0EC 55 2F 72 08 	.db 85, 47, 114, 8
   46 D1:C0F0 8B 2D 19 05 	.db 139, 45, 25, 5
   47 D1:C0F4 C1 2D 58 06 	.db 193, 45, 88, 6
   48 D1:C0F8 15 2D 2B 06 	.db 21, 45, 43, 6
   49 D1:C0FC D7 17 39 0C 	.db 215, 23, 57, 12
   50 D1:C100 4F 17 3A 0F 	.db 79, 23, 58, 15
   51 D1:C104 -  -  -  -  
   52 D1:C104 -  -  -  -  MG_Data_6:
   53 D1:C104 38 C7 D1 -  	.dl Sprite_Table_0
   54 D1:C107 0B -  -  -  	.db 11
   55 D1:C108 30 0E 1D 0B 	.db 48, 14, 29, 11
   56 D1:C10C FE 0E 26 0A 	.db 254, 14, 38, 10
   57 D1:C110 F3 0E 5F 0B 	.db 243, 14, 95, 11
   58 D1:C114 2C 0E 5F 0B 	.db 44, 14, 95, 11
   59 D1:C118 67 0E 3D 0B 	.db 103, 14, 61, 11
   60 D1:C11C 59 2F 75 09 	.db 89, 47, 117, 9
   61 D1:C120 A9 2D 6F 01 	.db 169, 45, 111, 1
   62 D1:C124 06 2D 3D 06 	.db 6, 45, 61, 6
   63 D1:C128 61 17 30 0C 	.db 97, 23, 48, 12
   64 D1:C12C E4 17 6F 0C 	.db 228, 23, 111, 12
   65 D1:C130 9B 17 38 0F 	.db 155, 23, 56, 15
   66 D1:C134 -  -  -  -  
   67 D1:C134 -  -  -  -  MG_Data_5:
   68 D1:C134 38 C7 D1 -  	.dl Sprite_Table_0
   69 D1:C137 0B -  -  -  	.db 11
   70 D1:C138 0A 0E 4E 0B 	.db 10, 14, 78, 11
   71 D1:C13C 7B 0E 64 0A 	.db 123, 14, 100, 10
   72 D1:C140 7B 0E 28 0A 	.db 123, 14, 40, 10
   73 D1:C144 1C 0E 84 0A 	.db 28, 14, 132, 10
   74 D1:C148 E0 0E 59 0B 	.db 224, 14, 89, 11
   75 D1:C14C 28 2F 6D 09 	.db 40, 47, 109, 9
   76 D1:C150 53 2F 22 09 	.db 83, 47, 34, 9
   77 D1:C154 4E 2D 52 01 	.db 78, 45, 82, 1
   78 D1:C158 E3 2D 10 05 	.db 227, 45, 16, 5
   79 D1:C15C 76 17 7D 0E 	.db 118, 23, 125, 14
   80 D1:C160 B1 17 5F 0D 	.db 177, 23, 95, 13
   81 D1:C164 -  -  -  -  
   82 D1:C164 -  -  -  -  MG_Data_4:
   83 D1:C164 38 C7 D1 -  	.dl Sprite_Table_0
   84 D1:C167 0E -  -  -  	.db 14
   85 D1:C168 56 0E 46 0A 	.db 86, 14, 70, 10
   86 D1:C16C DD 0E 1B 0B 	.db 221, 14, 27, 11
   87 D1:C170 EC 0E 6A 0B 	.db 236, 14, 106, 11
   88 D1:C174 43 0E 84 0A 	.db 67, 14, 132, 10
   89 D1:C178 12 0E 19 0B 	.db 18, 14, 25, 11
   90 D1:C17C 11 0E 5D 0B 	.db 17, 14, 93, 11
   91 D1:C180 51 0E 15 0A 	.db 81, 14, 21, 10
   92 D1:C184 00 2D 5B 01 	.db 0, 45, 91, 1
   93 D1:C188 87 2D 37 01 	.db 135, 45, 55, 1
   94 D1:C18C 43 2D 75 02 	.db 67, 45, 117, 2
   95 D1:C190 C1 2D 10 06 	.db 193, 45, 16, 6
   96 D1:C194 1F 17 1E 0E 	.db 31, 23, 30, 14
   97 D1:C198 7A 17 5F 0C 	.db 122, 23, 95, 12
   98 D1:C19C E6 17 30 0C 	.db 230, 23, 48, 12
   99 D1:C1A0 -  -  -  -  
  100 D1:C1A0 -  -  -  -  MG_Data_3:
  101 D1:C1A0 38 C7 D1 -  	.dl Sprite_Table_0
  102 D1:C1A3 0B -  -  -  	.db 11
  103 D1:C1A4 5A 0E 26 0A 	.db 90, 14, 38, 10
  104 D1:C1A8 C3 0E 5B 0B 	.db 195, 14, 91, 11
  105 D1:C1AC 5D 0E 42 0A 	.db 93, 14, 66, 10
  106 D1:C1B0 51 0E 6A 0B 	.db 81, 14, 106, 11
  107 D1:C1B4 06 0E 2A 0B 	.db 6, 14, 42, 11
  108 D1:C1B8 06 0E 48 0B 	.db 6, 14, 72, 11
  109 D1:C1BC E2 2F 25 09 	.db 226, 47, 37, 9
  110 D1:C1C0 6B 2D 19 05 	.db 107, 45, 25, 5
  111 D1:C1C4 5D 2D 46 06 	.db 93, 45, 70, 6
  112 D1:C1C8 3E 17 74 0E 	.db 62, 23, 116, 14
  113 D1:C1CC 86 17 24 0D 	.db 134, 23, 36, 13
  114 D1:C1D0 -  -  -  -  
  115 D1:C1D0 -  -  -  -  MG_Data_2:
  116 D1:C1D0 38 C7 D1 -  	.dl Sprite_Table_0
  117 D1:C1D3 09 -  -  -  	.db 9
  118 D1:C1D4 7C 0E 35 0A 	.db 124, 14, 53, 10
  119 D1:C1D8 F3 0E 6E 0B 	.db 243, 14, 110, 11
  120 D1:C1DC 73 0E 6E 0B 	.db 115, 14, 110, 11
  121 D1:C1E0 1C 0E 7E 0A 	.db 28, 14, 126, 10
  122 D1:C1E4 37 0E 4F 0A 	.db 55, 14, 79, 10
  123 D1:C1E8 5B 2F 1D 09 	.db 91, 47, 29, 9
  124 D1:C1EC 89 2D 76 01 	.db 137, 45, 118, 1
  125 D1:C1F0 A4 2D 14 02 	.db 164, 45, 20, 2
  126 D1:C1F4 89 17 54 0C 	.db 137, 23, 84, 12
  127 D1:C1F8 -  -  -  -  
  128 D1:C1F8 -  -  -  -  MG_Data_1:
  129 D1:C1F8 38 C7 D1 -  	.dl Sprite_Table_0
  130 D1:C1FB 0C -  -  -  	.db 12
  131 D1:C1FC 4F 0E 31 0A 	.db 79, 14, 49, 10
  132 D1:C200 FC 0E 53 0A 	.db 252, 14, 83, 10
  133 D1:C204 FE 0E 28 0B 	.db 254, 14, 40, 11
  134 D1:C208 77 0E 6A 0B 	.db 119, 14, 106, 11
  135 D1:C20C 95 0E 20 0A 	.db 149, 14, 32, 10
  136 D1:C210 3F 2F 52 08 	.db 63, 47, 82, 8
  137 D1:C214 7F 2D 3B 05 	.db 127, 45, 59, 5
  138 D1:C218 EB 2D 58 06 	.db 235, 45, 88, 6
  139 D1:C21C 91 17 75 0D 	.db 145, 23, 117, 13
  140 D1:C220 37 17 81 0C 	.db 55, 23, 129, 12
  141 D1:C224 C3 17 39 0C 	.db 195, 23, 57, 12
  142 D1:C228 C3 17 12 0D 	.db 195, 23, 18, 13
  143 D1:C22C -  -  -  -  
  144 D1:C22C -  -  -  -  MG_Data_0:
  145 D1:C22C 38 C7 D1 -  	.dl Sprite_Table_0
  146 D1:C22F 0A -  -  -  	.db 10
  147 D1:C230 5E 0E 15 0A 	.db 94, 14, 21, 10
  148 D1:C234 80 0E 40 0A 	.db 128, 14, 64, 10
  149 D1:C238 AF 0E 64 0A 	.db 175, 14, 100, 10
  150 D1:C23C 46 0E 75 0A 	.db 70, 14, 117, 10
  151 D1:C240 37 0E 48 0B 	.db 55, 14, 72, 11
  152 D1:C244 95 0E 24 0A 	.db 149, 14, 36, 10
  153 D1:C248 9E 2D 6E 02 	.db 158, 45, 110, 2
  154 D1:C24C F8 2D 13 01 	.db 248, 45, 19, 1
  155 D1:C250 3A 17 22 0C 	.db 58, 23, 34, 12
  156 D1:C254 D8 17 3F 0D 	.db 216, 23, 63, 13
  157 D1:C258 -  -  -  -  
  158 D1:C258 -  -  -  -  
  159 D1:C258 -  -  -  -  
Listing for file "ascent.asm"
  169 D1:C258 -  -  -  -  #include "BG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\BG_Data.txt"
    1 D1:C258 -  -  -  -  BG_Data_frame_table:
    2 D1:C258 5E C4 D1 -  	.dl BG_Data_0
    3 D1:C25B 2A C4 D1 -  	.dl BG_Data_1
    4 D1:C25E EA C3 D1 -  	.dl BG_Data_2
    5 D1:C261 A6 C3 D1 -  	.dl BG_Data_3
    6 D1:C264 66 C3 D1 -  	.dl BG_Data_4
    7 D1:C267 2A C3 D1 -  	.dl BG_Data_5
    8 D1:C26A F2 C2 D1 -  	.dl BG_Data_6
    9 D1:C26D BE C2 D1 -  	.dl BG_Data_7
   10 D1:C270 86 C2 D1 -  	.dl BG_Data_8
   11 D1:C273 76 C2 D1 -  	.dl BG_Data_9
   12 D1:C276 -  -  -  -  
   13 D1:C276 -  -  -  -  
   14 D1:C276 -  -  -  -  
   15 D1:C276 -  -  -  -  BG_Data_9:
   16 D1:C276 68 C7 D1 -  	.dl Sprite_Table_1
   17 D1:C279 03 -  -  -  	.db 3
   18 D1:C27A 4A 2D 49 09 	.db 74, 45, 73, 9
   19 D1:C27E 12 1F 22 04 	.db 18, 31, 34, 4
   20 D1:C282 23 1F 25 06 	.db 35, 31, 37, 6
   21 D1:C286 -  -  -  -  
   22 D1:C286 -  -  -  -  BG_Data_8:
   23 D1:C286 68 C7 D1 -  	.dl Sprite_Table_1
   24 D1:C289 0D -  -  -  	.db 13
   25 D1:C28A 34 2D 38 01 	.db 52, 45, 56, 1
   26 D1:C28E FA 2D 3E 02 	.db 250, 45, 62, 2
   27 D1:C292 FA 2D 6C 02 	.db 250, 45, 108, 2
   28 D1:C296 2D 2D 5C 09 	.db 45, 45, 92, 9
   29 D1:C29A AE 2D 1F 00 	.db 174, 45, 31, 0
   30 D1:C29E 08 1F 7F 04 	.db 8, 31, 127, 4
   31 D1:C2A2 8D 1F 57 04 	.db 141, 31, 87, 4
   32 D1:C2A6 2A 1F 18 03 	.db 42, 31, 24, 3
   33 D1:C2AA 0F 1F 13 06 	.db 15, 31, 19, 6
   34 D1:C2AE 19 1F 87 0C 	.db 25, 31, 135, 12
   35 D1:C2B2 D3 1F 6D 06 	.db 211, 31, 109, 6
   36 D1:C2B6 6F 1F 3A 0C 	.db 111, 31, 58, 12
   37 D1:C2BA 02 1F 44 07 	.db 2, 31, 68, 7
   38 D1:C2BE -  -  -  -  
   39 D1:C2BE -  -  -  -  BG_Data_7:
   40 D1:C2BE 68 C7 D1 -  	.dl Sprite_Table_1
   41 D1:C2C1 0C -  -  -  	.db 12
   42 D1:C2C2 08 2D 55 02 	.db 8, 45, 85, 2
   43 D1:C2C6 CA 2D 23 01 	.db 202, 45, 35, 1
   44 D1:C2CA D5 2D 7F 02 	.db 213, 45, 127, 2
   45 D1:C2CE A8 2D 4B 09 	.db 168, 45, 75, 9
   46 D1:C2D2 37 1F 0F 04 	.db 55, 31, 15, 4
   47 D1:C2D6 2C 1F 62 03 	.db 44, 31, 98, 3
   48 D1:C2DA 4A 1F 38 03 	.db 74, 31, 56, 3
   49 D1:C2DE 0D 1F 88 03 	.db 13, 31, 136, 3
   50 D1:C2E2 6D 1F 73 0D 	.db 109, 31, 115, 13
   51 D1:C2E6 3E 1F 2B 06 	.db 62, 31, 43, 6
   52 D1:C2EA AF 1F 4D 06 	.db 175, 31, 77, 6
   53 D1:C2EE A8 1F 14 07 	.db 168, 31, 20, 7
   54 D1:C2F2 -  -  -  -  
   55 D1:C2F2 -  -  -  -  BG_Data_6:
   56 D1:C2F2 68 C7 D1 -  	.dl Sprite_Table_1
   57 D1:C2F5 0D -  -  -  	.db 13
   58 D1:C2F6 0D 2D 22 02 	.db 13, 45, 34, 2
   59 D1:C2FA 2B 2D 4F 01 	.db 43, 45, 79, 1
   60 D1:C2FE F1 2D 18 01 	.db 241, 45, 24, 1
   61 D1:C302 9E 2D 80 09 	.db 158, 45, 128, 9
   62 D1:C306 80 2D 32 00 	.db 128, 45, 50, 0
   63 D1:C30A 1A 1F 79 03 	.db 26, 31, 121, 3
   64 D1:C30E 40 1F 24 04 	.db 64, 31, 36, 4
   65 D1:C312 A2 1F 54 0A 	.db 162, 31, 84, 10
   66 D1:C316 88 1F 0F 0A 	.db 136, 31, 15, 10
   67 D1:C31A 94 1F 54 0C 	.db 148, 31, 84, 12
   68 D1:C31E FB 1F 72 06 	.db 251, 31, 114, 6
   69 D1:C322 00 1F 77 05 	.db 0, 31, 119, 5
   70 D1:C326 8D 1F 2A 05 	.db 141, 31, 42, 5
   71 D1:C32A -  -  -  -  
   72 D1:C32A -  -  -  -  BG_Data_5:
   73 D1:C32A 68 C7 D1 -  	.dl Sprite_Table_1
   74 D1:C32D 0E -  -  -  	.db 14
   75 D1:C32E 1E 2D 46 02 	.db 30, 45, 70, 2
   76 D1:C332 47 2D 75 01 	.db 71, 45, 117, 1
   77 D1:C336 94 2D 34 09 	.db 148, 45, 52, 9
   78 D1:C33A 07 2D 0C 00 	.db 7, 45, 12, 0
   79 D1:C33E 9C 2D 5A 00 	.db 156, 45, 90, 0
   80 D1:C342 5C 1F 18 03 	.db 92, 31, 24, 3
   81 D1:C346 90 1F 1F 04 	.db 144, 31, 31, 4
   82 D1:C34A DE 1F 67 0A 	.db 222, 31, 103, 10
   83 D1:C34E 97 1F 64 0C 	.db 151, 31, 100, 12
   84 D1:C352 E7 1F 32 0C 	.db 231, 31, 50, 12
   85 D1:C356 19 1F 6A 05 	.db 25, 31, 106, 5
   86 D1:C35A 5F 1F 25 05 	.db 95, 31, 37, 5
   87 D1:C35E BD 2F 40 08 	.db 189, 47, 64, 8
   88 D1:C362 59 2F 42 0B 	.db 89, 47, 66, 11
   89 D1:C366 -  -  -  -  
   90 D1:C366 -  -  -  -  BG_Data_4:
   91 D1:C366 68 C7 D1 -  	.dl Sprite_Table_1
   92 D1:C369 0F -  -  -  	.db 15
   93 D1:C36A 17 2D 4D 01 	.db 23, 45, 77, 1
   94 D1:C36E 67 2D 20 02 	.db 103, 45, 32, 2
   95 D1:C372 5D 2D 64 09 	.db 93, 45, 100, 9
   96 D1:C376 8B 1F 4C 04 	.db 139, 31, 76, 4
   97 D1:C37A C9 1F 7F 04 	.db 201, 31, 127, 4
   98 D1:C37E C3 1F 3B 04 	.db 195, 31, 59, 4
   99 D1:C382 0E 1F 86 03 	.db 14, 31, 134, 3
  100 D1:C386 8F 1F 74 0A 	.db 143, 31, 116, 10
  101 D1:C38A A2 1F 09 0D 	.db 162, 31, 9, 13
  102 D1:C38E 0C 1F 07 0A 	.db 12, 31, 7, 10
  103 D1:C392 CD 1F 54 0D 	.db 205, 31, 84, 13
  104 D1:C396 45 1F 5C 0C 	.db 69, 31, 92, 12
  105 D1:C39A D3 1F 2D 06 	.db 211, 31, 45, 6
  106 D1:C39E 48 1F 2C 07 	.db 72, 31, 44, 7
  107 D1:C3A2 D9 2F 77 0B 	.db 217, 47, 119, 11
  108 D1:C3A6 -  -  -  -  
  109 D1:C3A6 -  -  -  -  BG_Data_3:
  110 D1:C3A6 68 C7 D1 -  	.dl Sprite_Table_1
  111 D1:C3A9 10 -  -  -  	.db 16
  112 D1:C3AA 37 2D 42 02 	.db 55, 45, 66, 2
  113 D1:C3AE 56 2D 66 01 	.db 86, 45, 102, 1
  114 D1:C3B2 87 2D 29 01 	.db 135, 45, 41, 1
  115 D1:C3B6 D4 2D 1A 09 	.db 212, 45, 26, 9
  116 D1:C3BA 8C 2D 51 09 	.db 140, 45, 81, 9
  117 D1:C3BE AF 1F 6E 04 	.db 175, 31, 110, 4
  118 D1:C3C2 7C 1F 7B 0D 	.db 124, 31, 123, 13
  119 D1:C3C6 2D 1F 16 0D 	.db 45, 31, 22, 13
  120 D1:C3CA 82 1F 59 0C 	.db 130, 31, 89, 12
  121 D1:C3CE F5 1F 1D 06 	.db 245, 31, 29, 6
  122 D1:C3D2 DB 1F 7E 07 	.db 219, 31, 126, 7
  123 D1:C3D6 47 1F 72 05 	.db 71, 31, 114, 5
  124 D1:C3DA 17 1F 22 05 	.db 23, 31, 34, 5
  125 D1:C3DE 6E 1F 14 07 	.db 110, 31, 20, 7
  126 D1:C3E2 41 2F 43 08 	.db 65, 47, 67, 8
  127 D1:C3E6 E5 2F 37 0B 	.db 229, 47, 55, 11
  128 D1:C3EA -  -  -  -  
  129 D1:C3EA -  -  -  -  BG_Data_2:
  130 D1:C3EA 68 C7 D1 -  	.dl Sprite_Table_1
  131 D1:C3ED 0F -  -  -  	.db 15
  132 D1:C3EE 7D 2D 20 02 	.db 125, 45, 32, 2
  133 D1:C3F2 72 2D 59 02 	.db 114, 45, 89, 2
  134 D1:C3F6 AC 2D 67 00 	.db 172, 45, 103, 0
  135 D1:C3FA E1 2D 14 09 	.db 225, 45, 20, 9
  136 D1:C3FE 04 2D 23 00 	.db 4, 45, 35, 0
  137 D1:C402 11 1F 59 04 	.db 17, 31, 89, 4
  138 D1:C406 CF 1F 3B 04 	.db 207, 31, 59, 4
  139 D1:C40A 2C 1F 82 0A 	.db 44, 31, 130, 10
  140 D1:C40E 34 1F 19 0A 	.db 52, 31, 25, 10
  141 D1:C412 2D 1F 37 0C 	.db 45, 31, 55, 12
  142 D1:C416 F1 1F 6C 0C 	.db 241, 31, 108, 12
  143 D1:C41A 80 1F 1C 05 	.db 128, 31, 28, 5
  144 D1:C41E 56 1F 67 05 	.db 86, 31, 103, 5
  145 D1:C422 91 2F 40 08 	.db 145, 47, 64, 8
  146 D1:C426 9D 2F 7D 08 	.db 157, 47, 125, 8
  147 D1:C42A -  -  -  -  
  148 D1:C42A -  -  -  -  BG_Data_1:
  149 D1:C42A 68 C7 D1 -  	.dl Sprite_Table_1
  150 D1:C42D 0C -  -  -  	.db 12
  151 D1:C42E 43 2D 1F 02 	.db 67, 45, 31, 2
  152 D1:C432 61 2D 5C 02 	.db 97, 45, 92, 2
  153 D1:C436 8A 2D 33 02 	.db 138, 45, 51, 2
  154 D1:C43A C7 2D 46 02 	.db 199, 45, 70, 2
  155 D1:C43E C0 2D 73 09 	.db 192, 45, 115, 9
  156 D1:C442 6A 1F 79 0A 	.db 106, 31, 121, 10
  157 D1:C446 90 1F 0B 06 	.db 144, 31, 11, 6
  158 D1:C44A 93 1F 4E 07 	.db 147, 31, 78, 7
  159 D1:C44E 1F 1F 76 07 	.db 31, 31, 118, 7
  160 D1:C452 13 2F 34 0B 	.db 19, 47, 52, 11
  161 D1:C456 CD 2F 1F 0B 	.db 205, 47, 31, 11
  162 D1:C45A EA 2F 59 0B 	.db 234, 47, 89, 11
  163 D1:C45E -  -  -  -  
  164 D1:C45E -  -  -  -  BG_Data_0:
  165 D1:C45E 68 C7 D1 -  	.dl Sprite_Table_1
  166 D1:C461 0D -  -  -  	.db 13
  167 D1:C462 C9 2D 14 00 	.db 201, 45, 20, 0
  168 D1:C466 4C 2D 14 01 	.db 76, 45, 20, 1
  169 D1:C46A B5 2D 41 02 	.db 181, 45, 65, 2
  170 D1:C46E 7D 2D 73 00 	.db 125, 45, 115, 0
  171 D1:C472 3E 1F 3C 03 	.db 62, 31, 60, 3
  172 D1:C476 E5 1F 5F 04 	.db 229, 31, 95, 4
  173 D1:C47A EC 1F 47 05 	.db 236, 31, 71, 5
  174 D1:C47E F6 1F 08 06 	.db 246, 31, 8, 6
  175 D1:C482 3E 1F 67 05 	.db 62, 31, 103, 5
  176 D1:C486 A8 1F 71 05 	.db 168, 31, 113, 5
  177 D1:C48A 62 1F 31 07 	.db 98, 31, 49, 7
  178 D1:C48E EC 1F 47 05 	.db 236, 31, 71, 5
  179 D1:C492 79 2F 0D 08 	.db 121, 47, 13, 8
  180 D1:C496 -  -  -  -  
  181 D1:C496 -  -  -  -  
  182 D1:C496 -  -  -  -  
Listing for file "ascent.asm"
  170 D1:C496 -  -  -  -  #include "Palette_Setup.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\Palette_Setup.txt"
    1 D1:C496 -  -  -  -  setup_palette_1:
    2 D1:C496 21 00 02 E3 	ld hl,mpLcdPalette
    3 D1:C49A 3E 80 -  -  	ld a,%10000000
    4 D1:C49C 77 -  -  -  	ld (hl),a 
    5 D1:C49D 23 -  -  -  	inc hl
    6 D1:C49E 3E 10 -  -  	ld a,%00010000
    7 D1:C4A0 77 -  -  -  	ld (hl),a 
    8 D1:C4A1 23 -  -  -  	inc hl
    9 D1:C4A2 3E 61 -  -  	ld a,%01100001
   10 D1:C4A4 77 -  -  -  	ld (hl),a 
   11 D1:C4A5 23 -  -  -  	inc hl
   12 D1:C4A6 3E 4E -  -  	ld a,%01001110
   13 D1:C4A8 77 -  -  -  	ld (hl),a 
   14 D1:C4A9 23 -  -  -  	inc hl
   15 D1:C4AA 3E 65 -  -  	ld a,%01100101
   16 D1:C4AC 77 -  -  -  	ld (hl),a 
   17 D1:C4AD 23 -  -  -  	inc hl
   18 D1:C4AE 3E 6B -  -  	ld a,%01101011
   19 D1:C4B0 77 -  -  -  	ld (hl),a 
   20 D1:C4B1 23 -  -  -  	inc hl
   21 D1:C4B2 3E A0 -  -  	ld a,%10100000
   22 D1:C4B4 77 -  -  -  	ld (hl),a 
   23 D1:C4B5 23 -  -  -  	inc hl
   24 D1:C4B6 3E 5F -  -  	ld a,%01011111
   25 D1:C4B8 77 -  -  -  	ld (hl),a 
   26 D1:C4B9 23 -  -  -  	inc hl
   27 D1:C4BA 3E E0 -  -  	ld a,%11100000
   28 D1:C4BC 77 -  -  -  	ld (hl),a 
   29 D1:C4BD 23 -  -  -  	inc hl
   30 D1:C4BE 3E D3 -  -  	ld a,%11010011
   31 D1:C4C0 77 -  -  -  	ld (hl),a 
   32 D1:C4C1 23 -  -  -  	inc hl
   33 D1:C4C2 3E A2 -  -  	ld a,%10100010
   34 D1:C4C4 77 -  -  -  	ld (hl),a 
   35 D1:C4C5 23 -  -  -  	inc hl
   36 D1:C4C6 3E 12 -  -  	ld a,%00010010
   37 D1:C4C8 77 -  -  -  	ld (hl),a 
   38 D1:C4C9 23 -  -  -  	inc hl
   39 D1:C4CA 3E F9 -  -  	ld a,%11111001
   40 D1:C4CC 77 -  -  -  	ld (hl),a 
   41 D1:C4CD 23 -  -  -  	inc hl
   42 D1:C4CE 3E 0A -  -  	ld a,%00001010
   43 D1:C4D0 77 -  -  -  	ld (hl),a 
   44 D1:C4D1 23 -  -  -  	inc hl
   45 D1:C4D2 3E 1A -  -  	ld a,%00011010
   46 D1:C4D4 77 -  -  -  	ld (hl),a 
   47 D1:C4D5 23 -  -  -  	inc hl
   48 D1:C4D6 3E 31 -  -  	ld a,%00110001
   49 D1:C4D8 77 -  -  -  	ld (hl),a 
   50 D1:C4D9 23 -  -  -  	inc hl
   51 D1:C4DA 3E FF -  -  	ld a,%11111111
   52 D1:C4DC 77 -  -  -  	ld (hl),a 
   53 D1:C4DD 23 -  -  -  	inc hl
   54 D1:C4DE 3E FF -  -  	ld a,%11111111
   55 D1:C4E0 77 -  -  -  	ld (hl),a 
   56 D1:C4E1 23 -  -  -  	inc hl
   57 D1:C4E2 3E 1F -  -  	ld a,%00011111
   58 D1:C4E4 77 -  -  -  	ld (hl),a 
   59 D1:C4E5 23 -  -  -  	inc hl
   60 D1:C4E6 3E 81 -  -  	ld a,%10000001
   61 D1:C4E8 77 -  -  -  	ld (hl),a 
   62 D1:C4E9 23 -  -  -  	inc hl
   63 D1:C4EA 3E 00 -  -  	ld a,%00000000
   64 D1:C4EC 77 -  -  -  	ld (hl),a 
   65 D1:C4ED 23 -  -  -  	inc hl
   66 D1:C4EE 3E 68 -  -  	ld a,%01101000
   67 D1:C4F0 77 -  -  -  	ld (hl),a 
   68 D1:C4F1 23 -  -  -  	inc hl
   69 D1:C4F2 3E 20 -  -  	ld a,%00100000
   70 D1:C4F4 77 -  -  -  	ld (hl),a 
   71 D1:C4F5 23 -  -  -  	inc hl
   72 D1:C4F6 3E 6A -  -  	ld a,%01101010
   73 D1:C4F8 77 -  -  -  	ld (hl),a 
   74 D1:C4F9 23 -  -  -  	inc hl
   75 D1:C4FA 3E 28 -  -  	ld a,%00101000
   76 D1:C4FC 77 -  -  -  	ld (hl),a 
   77 D1:C4FD 23 -  -  -  	inc hl
   78 D1:C4FE 3E 21 -  -  	ld a,%00100001
   79 D1:C500 77 -  -  -  	ld (hl),a 
   80 D1:C501 23 -  -  -  	inc hl
   81 D1:C502 3E 00 -  -  	ld a,%00000000
   82 D1:C504 77 -  -  -  	ld (hl),a 
   83 D1:C505 23 -  -  -  	inc hl
   84 D1:C506 3E 00 -  -  	ld a,%00000000
   85 D1:C508 77 -  -  -  	ld (hl),a 
   86 D1:C509 23 -  -  -  	inc hl
   87 D1:C50A 3E 23 -  -  	ld a,%00100011
   88 D1:C50C 77 -  -  -  	ld (hl),a 
   89 D1:C50D 23 -  -  -  	inc hl
   90 D1:C50E 3E B1 -  -  	ld a,%10110001
   91 D1:C510 77 -  -  -  	ld (hl),a 
   92 D1:C511 23 -  -  -  	inc hl
   93 D1:C512 3E 1F -  -  	ld a,%00011111
   94 D1:C514 77 -  -  -  	ld (hl),a 
   95 D1:C515 23 -  -  -  	inc hl
   96 D1:C516 3E 68 -  -  	ld a,%01101000
   97 D1:C518 77 -  -  -  	ld (hl),a 
   98 D1:C519 23 -  -  -  	inc hl
   99 D1:C51A C9 -  -  -  	ret 
Listing for file "ascent.asm"
  171 D1:C51B -  -  -  -  #include "Equates.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\Equates.txt"
    1 D1:C51B -  -  -  -  Banana1_Slow .equ $d40001
    2 D1:C51B -  -  -  -  Banana1_Slow_F .equ $d40119
    3 D1:C51B -  -  -  -  Banana1_Slow_O .equ $d40231
    4 D1:C51B -  -  -  -  Banana1_Slow_O_F .equ $d40349
    5 D1:C51B -  -  -  -  Banana1Large_Slow_O .equ $d40461
    6 D1:C51B -  -  -  -  Banana1Large_Slow_O_F .equ $d4077d
    7 D1:C51B -  -  -  -  Banana1Large_Fast .equ $d40a98
    8 D1:C51B -  -  -  -  Banana1Large_Fast_F .equ $d40d2a
    9 D1:C51B -  -  -  -  Banana1Large_BG .equ $d40fbb
   10 D1:C51B -  -  -  -  Banana1Large_BG_O .equ $d41800
   11 D1:C51B -  -  -  -  Banana1Large_BG_F .equ $d420a1
   12 D1:C51B -  -  -  -  Banana1Large_BG_O_F .equ $d428e6
   13 D1:C51B -  -  -  -  Shittlogo_Slow .equ $d43187
   14 D1:C51B -  -  -  -  Shittlogo_Slow_O .equ $d436b7
   15 D1:C51B -  -  -  -  OrangeDot_Slow .equ $d43bd3
   16 D1:C51B -  -  -  -  OrangeDot_Slow_O .equ $d43c7f
   17 D1:C51B -  -  -  -  SquiggleL_Slow .equ $d43d2b
   18 D1:C51B -  -  -  -  SquiggleL_Slow_F .equ $d43ecb
   19 D1:C51B -  -  -  -  SquiggleL_Slow_O .equ $d4406b
   20 D1:C51B -  -  -  -  SquiggleL_Slow_O_F .equ $d4420f
   21 D1:C51B -  -  -  -  Banana5_BG .equ $d443b3
   22 D1:C51B -  -  -  -  Banana5_BG_O .equ $d447b4
   23 D1:C51B -  -  -  -  Banana5_BG_F .equ $d44bf5
   24 D1:C51B -  -  -  -  Banana5_BG_O_F .equ $d44ff6
   25 D1:C51B -  -  -  -  GreenCurl1_BG .equ $d45437
   26 D1:C51B -  -  -  -  GreenCurl1_BG_O .equ $d45838
   27 D1:C51B -  -  -  -  GreenCurl1_BG_F .equ $d45c79
   28 D1:C51B -  -  -  -  GreenCurl1_BG_O_F .equ $d4607a
   29 D1:C51B -  -  -  -  Bluecurl_BG .equ $d464bb
   30 D1:C51B -  -  -  -  Bluecurl_BG_O .equ $d46dbc
Listing for file "ascent.asm"
  172 D1:C51B -  -  -  -  #include "Decompress_Calls.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\Decompress_Calls.txt"
    1 D1:C51B -  -  -  -  decompress_calls:
    2 D1:C51B -  -  -  -  
    3 D1:C51B CD 28 B2 D1 	call sdcomp_reset_bg_sprite 
    4 D1:C51F CD 50 B0 D1 	call sdcomp_reset_flip
    5 D1:C523 CD 04 B2 D1 	call sdcomp_reset_fast_sprite
    6 D1:C527 21 39 B6 D1 	ld hl, Banana1
    7 D1:C52B 11 01 00 D4 	ld de, Banana1_Slow
    8 D1:C52F CD AD AC D1 	call sprite_decompress
    9 D1:C533 21 E1 B8 D1 	ld hl, Shittlogo
   10 D1:C537 11 87 31 D4 	ld de, Shittlogo_Slow
   11 D1:C53B CD AD AC D1 	call sprite_decompress
   12 D1:C53F 21 AB BB D1 	ld hl, OrangeDot
   13 D1:C543 11 D3 3B D4 	ld de, OrangeDot_Slow
   14 D1:C547 CD AD AC D1 	call sprite_decompress
   15 D1:C54B 21 CC BB D1 	ld hl, SquiggleL
   16 D1:C54F 11 2B 3D D4 	ld de, SquiggleL_Slow
   17 D1:C553 CD AD AC D1 	call sprite_decompress
   18 D1:C557 CD 28 B2 D1 	call sdcomp_reset_bg_sprite 
   19 D1:C55B CD 0D B0 D1 	call sdcomp_set_flip
   20 D1:C55F CD 04 B2 D1 	call sdcomp_reset_fast_sprite
   21 D1:C563 21 39 B6 D1 	ld hl, Banana1
   22 D1:C567 11 19 01 D4 	ld de, Banana1_Slow_F
   23 D1:C56B CD AD AC D1 	call sprite_decompress
   24 D1:C56F 21 CC BB D1 	ld hl, SquiggleL
   25 D1:C573 11 CB 3E D4 	ld de, SquiggleL_Slow_F
   26 D1:C577 CD AD AC D1 	call sprite_decompress
   27 D1:C57B CD 28 B2 D1 	call sdcomp_reset_bg_sprite 
   28 D1:C57F CD 50 B0 D1 	call sdcomp_reset_flip
   29 D1:C583 CD 04 B2 D1 	call sdcomp_reset_fast_sprite
   30 D1:C587 CD 7B B0 D1 	call sdcomp_set_offset 
   31 D1:C58B 21 39 B6 D1 	ld hl, Banana1
   32 D1:C58F 11 31 02 D4 	ld de, Banana1_Slow_O
   33 D1:C593 CD AD AC D1 	call sprite_decompress
   34 D1:C597 CD 7B B0 D1 	call sdcomp_set_offset 
   35 D1:C59B 21 D0 B6 D1 	ld hl, Banana1Large
   36 D1:C59F 11 61 04 D4 	ld de, Banana1Large_Slow_O
   37 D1:C5A3 CD AD AC D1 	call sprite_decompress
   38 D1:C5A7 CD 7B B0 D1 	call sdcomp_set_offset 
   39 D1:C5AB 21 E1 B8 D1 	ld hl, Shittlogo
   40 D1:C5AF 11 B7 36 D4 	ld de, Shittlogo_Slow_O
   41 D1:C5B3 CD AD AC D1 	call sprite_decompress
   42 D1:C5B7 CD 7B B0 D1 	call sdcomp_set_offset 
   43 D1:C5BB 21 AB BB D1 	ld hl, OrangeDot
   44 D1:C5BF 11 7F 3C D4 	ld de, OrangeDot_Slow_O
   45 D1:C5C3 CD AD AC D1 	call sprite_decompress
   46 D1:C5C7 CD 7B B0 D1 	call sdcomp_set_offset 
   47 D1:C5CB 21 CC BB D1 	ld hl, SquiggleL
   48 D1:C5CF 11 6B 40 D4 	ld de, SquiggleL_Slow_O
   49 D1:C5D3 CD AD AC D1 	call sprite_decompress
   50 D1:C5D7 CD 28 B2 D1 	call sdcomp_reset_bg_sprite 
   51 D1:C5DB CD 0D B0 D1 	call sdcomp_set_flip
   52 D1:C5DF CD 04 B2 D1 	call sdcomp_reset_fast_sprite
   53 D1:C5E3 CD 7B B0 D1 	call sdcomp_set_offset 
   54 D1:C5E7 21 39 B6 D1 	ld hl, Banana1
   55 D1:C5EB 11 49 03 D4 	ld de, Banana1_Slow_O_F
   56 D1:C5EF CD AD AC D1 	call sprite_decompress
   57 D1:C5F3 CD 7B B0 D1 	call sdcomp_set_offset 
   58 D1:C5F7 21 D0 B6 D1 	ld hl, Banana1Large
   59 D1:C5FB 11 7D 07 D4 	ld de, Banana1Large_Slow_O_F
   60 D1:C5FF CD AD AC D1 	call sprite_decompress
   61 D1:C603 CD 7B B0 D1 	call sdcomp_set_offset 
   62 D1:C607 21 CC BB D1 	ld hl, SquiggleL
   63 D1:C60B 11 0F 42 D4 	ld de, SquiggleL_Slow_O_F
   64 D1:C60F CD AD AC D1 	call sprite_decompress
   65 D1:C613 CD 28 B2 D1 	call sdcomp_reset_bg_sprite 
   66 D1:C617 CD 50 B0 D1 	call sdcomp_reset_flip
   67 D1:C61B CD F5 B1 D1 	call sdcomp_set_fast_sprite
   68 D1:C61F 21 D0 B6 D1 	ld hl, Banana1Large
   69 D1:C623 11 98 0A D4 	ld de, Banana1Large_Fast
   70 D1:C627 CD AD AC D1 	call sprite_decompress
   71 D1:C62B CD 28 B2 D1 	call sdcomp_reset_bg_sprite 
   72 D1:C62F CD 0D B0 D1 	call sdcomp_set_flip
   73 D1:C633 CD F5 B1 D1 	call sdcomp_set_fast_sprite
   74 D1:C637 21 D0 B6 D1 	ld hl, Banana1Large
   75 D1:C63B 11 2A 0D D4 	ld de, Banana1Large_Fast_F
   76 D1:C63F CD AD AC D1 	call sprite_decompress
   77 D1:C643 CD 13 B2 D1 	call sdcomp_set_bg_sprite 
   78 D1:C647 CD 50 B0 D1 	call sdcomp_reset_flip
   79 D1:C64B CD 04 B2 D1 	call sdcomp_reset_fast_sprite
   80 D1:C64F 21 D0 B6 D1 	ld hl, Banana1Large
   81 D1:C653 11 BB 0F D4 	ld de, Banana1Large_BG
   82 D1:C657 CD AD AC D1 	call sprite_decompress
   83 D1:C65B 21 42 BC D1 	ld hl, Banana5
   84 D1:C65F 11 B3 43 D4 	ld de, Banana5_BG
   85 D1:C663 CD AD AC D1 	call sprite_decompress
   86 D1:C667 21 2C BD D1 	ld hl, GreenCurl1
   87 D1:C66B 11 37 54 D4 	ld de, GreenCurl1_BG
   88 D1:C66F CD AD AC D1 	call sprite_decompress
   89 D1:C673 21 B0 BD D1 	ld hl, Bluecurl
   90 D1:C677 11 BB 64 D4 	ld de, Bluecurl_BG
   91 D1:C67B CD AD AC D1 	call sprite_decompress
   92 D1:C67F CD 13 B2 D1 	call sdcomp_set_bg_sprite 
   93 D1:C683 CD 50 B0 D1 	call sdcomp_reset_flip
   94 D1:C687 CD 04 B2 D1 	call sdcomp_reset_fast_sprite
   95 D1:C68B CD 7B B0 D1 	call sdcomp_set_offset 
   96 D1:C68F 21 D0 B6 D1 	ld hl, Banana1Large
   97 D1:C693 11 00 18 D4 	ld de, Banana1Large_BG_O
   98 D1:C697 CD AD AC D1 	call sprite_decompress
   99 D1:C69B CD 7B B0 D1 	call sdcomp_set_offset 
  100 D1:C69F 21 42 BC D1 	ld hl, Banana5
  101 D1:C6A3 11 B4 47 D4 	ld de, Banana5_BG_O
  102 D1:C6A7 CD AD AC D1 	call sprite_decompress
  103 D1:C6AB CD 7B B0 D1 	call sdcomp_set_offset 
  104 D1:C6AF 21 2C BD D1 	ld hl, GreenCurl1
  105 D1:C6B3 11 38 58 D4 	ld de, GreenCurl1_BG_O
  106 D1:C6B7 CD AD AC D1 	call sprite_decompress
  107 D1:C6BB CD 7B B0 D1 	call sdcomp_set_offset 
  108 D1:C6BF 21 B0 BD D1 	ld hl, Bluecurl
  109 D1:C6C3 11 BC 6D D4 	ld de, Bluecurl_BG_O
  110 D1:C6C7 CD AD AC D1 	call sprite_decompress
  111 D1:C6CB CD 13 B2 D1 	call sdcomp_set_bg_sprite 
  112 D1:C6CF CD 0D B0 D1 	call sdcomp_set_flip
  113 D1:C6D3 CD 04 B2 D1 	call sdcomp_reset_fast_sprite
  114 D1:C6D7 21 D0 B6 D1 	ld hl, Banana1Large
  115 D1:C6DB 11 A1 20 D4 	ld de, Banana1Large_BG_F
  116 D1:C6DF CD AD AC D1 	call sprite_decompress
  117 D1:C6E3 21 42 BC D1 	ld hl, Banana5
  118 D1:C6E7 11 F5 4B D4 	ld de, Banana5_BG_F
  119 D1:C6EB CD AD AC D1 	call sprite_decompress
  120 D1:C6EF 21 2C BD D1 	ld hl, GreenCurl1
  121 D1:C6F3 11 79 5C D4 	ld de, GreenCurl1_BG_F
  122 D1:C6F7 CD AD AC D1 	call sprite_decompress
  123 D1:C6FB CD 13 B2 D1 	call sdcomp_set_bg_sprite 
  124 D1:C6FF CD 0D B0 D1 	call sdcomp_set_flip
  125 D1:C703 CD 04 B2 D1 	call sdcomp_reset_fast_sprite
  126 D1:C707 CD 7B B0 D1 	call sdcomp_set_offset 
  127 D1:C70B 21 D0 B6 D1 	ld hl, Banana1Large
  128 D1:C70F 11 E6 28 D4 	ld de, Banana1Large_BG_O_F
  129 D1:C713 CD AD AC D1 	call sprite_decompress
  130 D1:C717 CD 7B B0 D1 	call sdcomp_set_offset 
  131 D1:C71B 21 42 BC D1 	ld hl, Banana5
  132 D1:C71F 11 F6 4F D4 	ld de, Banana5_BG_O_F
  133 D1:C723 CD AD AC D1 	call sprite_decompress
  134 D1:C727 CD 7B B0 D1 	call sdcomp_set_offset 
  135 D1:C72B 21 2C BD D1 	ld hl, GreenCurl1
  136 D1:C72F 11 7A 60 D4 	ld de, GreenCurl1_BG_O_F
  137 D1:C733 CD AD AC D1 	call sprite_decompress
  138 D1:C737 C9 -  -  -  	ret
Listing for file "ascent.asm"
  173 D1:C738 -  -  -  -  #include "Sprite_Tables.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\Sprite_Tables.txt"
    1 D1:C738 -  -  -  -  Sprite_Table_0:
    2 D1:C738 49 03 D4 -  	.dl Banana1_Slow_O_F
    3 D1:C73B 98 0A D4 -  	.dl Banana1Large_Fast
    4 D1:C73E 7D 07 D4 -  	.dl Banana1Large_Slow_O_F
    5 D1:C741 01 00 D4 -  	.dl Banana1_Slow
    6 D1:C744 19 01 D4 -  	.dl Banana1_Slow_F
    7 D1:C747 61 04 D4 -  	.dl Banana1Large_Slow_O
    8 D1:C74A 2A 0D D4 -  	.dl Banana1Large_Fast_F
    9 D1:C74D 31 02 D4 -  	.dl Banana1_Slow_O
   10 D1:C750 B7 36 D4 -  	.dl Shittlogo_Slow_O
   11 D1:C753 87 31 D4 -  	.dl Shittlogo_Slow
   12 D1:C756 7F 3C D4 -  	.dl OrangeDot_Slow_O
   13 D1:C759 D3 3B D4 -  	.dl OrangeDot_Slow
   14 D1:C75C 6B 40 D4 -  	.dl SquiggleL_Slow_O
   15 D1:C75F CB 3E D4 -  	.dl SquiggleL_Slow_F
   16 D1:C762 2B 3D D4 -  	.dl SquiggleL_Slow
   17 D1:C765 0F 42 D4 -  	.dl SquiggleL_Slow_O_F
   18 D1:C768 -  -  -  -  
   19 D1:C768 -  -  -  -  Sprite_Table_1:
   20 D1:C768 E6 28 D4 -  	.dl Banana1Large_BG_O_F
   21 D1:C76B 00 18 D4 -  	.dl Banana1Large_BG_O
   22 D1:C76E BB 0F D4 -  	.dl Banana1Large_BG
   23 D1:C771 B4 47 D4 -  	.dl Banana5_BG_O
   24 D1:C774 B3 43 D4 -  	.dl Banana5_BG
   25 D1:C777 7A 60 D4 -  	.dl GreenCurl1_BG_O_F
   26 D1:C77A 38 58 D4 -  	.dl GreenCurl1_BG_O
   27 D1:C77D 79 5C D4 -  	.dl GreenCurl1_BG_F
   28 D1:C780 BC 6D D4 -  	.dl Bluecurl_BG_O
   29 D1:C783 A1 20 D4 -  	.dl Banana1Large_BG_F
   30 D1:C786 F5 4B D4 -  	.dl Banana5_BG_F
   31 D1:C789 BB 64 D4 -  	.dl Bluecurl_BG
   32 D1:C78C 37 54 D4 -  	.dl GreenCurl1_BG
   33 D1:C78F F6 4F D4 -  	.dl Banana5_BG_O_F
   34 D1:C792 -  -  -  -  
   35 D1:C792 -  -  -  -  Sprite_Table_2:
   36 D1:C792 -  -  -  -  
Listing for file "ascent.asm"
  174 D1:C792 -  -  -  -  
  175 D1:C792 -  -  -  -  
