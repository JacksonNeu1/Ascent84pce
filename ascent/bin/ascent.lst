    1 00:0000 -  -  -  -  
    2 00:0000 -  -  -  -  #include "includes\ti84pce.inc"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\includes\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "ascent.asm"
    3 00:0000 -  -  -  -  
    4 00:0000 -  -  -  -   .assume ADL=1
    5 00:0000 -  -  -  -   .org userMem-2
    6 D1:A87F EF 7B -  -   .db tExtTok,tAsm84CeCmp
    7 D1:A881 -  -  -  -  
    8 D1:A881 -  -  -  -  
    9 D1:A881 -  -  -  -  
   10 D1:A881 -  -  -  -  ;0E30000h + 0200h
   11 D1:A881 -  -  -  -  
   12 D1:A881 CD 28 08 02 	call _homeup
   13 D1:A885 CD 10 08 02 	call _ClrScrnFull
   14 D1:A889 -  -  -  -  
   15 D1:A889 CD 48 08 02 	call _RunIndicOff		; turn off run indicator
   16 D1:A88D F3 -  -  -  	di			
   17 D1:A88E -  -  -  -  	
   18 D1:A88E -  -  -  -  	
   19 D1:A88E CD 92 D0 D1 	call setup_palette_1
   20 D1:A892 -  -  -  -  
   21 D1:A892 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255
   22 D1:A896 3E 25 -  -  	ld	a,lcdBpp4
   23 D1:A898 32 18 00 E3 	ld (mpLcdCtrl),a	
   24 D1:A89C -  -  -  -  
   25 D1:A89C -  -  -  -  	
   26 D1:A89C -  -  -  -  
   27 D1:A89C CD 17 D1 D1 	call decompress_calls
   28 D1:A8A0 -  -  -  -  	
   29 D1:A8A0 -  -  -  -  	;gen purp timers
   30 D1:A8A0 -  -  -  -  		; 76543210	
   31 D1:A8A0 3E 03 -  -  	ld a,%00000011;enable, 32768hz
   32 D1:A8A2 32 30 00 F2 	ld ($F20030),a
   33 D1:A8A6 -  -  -  -  	;	  fedcba98
   34 D1:A8A6 3E 02 -  -  	ld a,%00000010;count up
   35 D1:A8A8 32 31 00 F2 	ld ($F20031),a
   36 D1:A8AC -  -  -  -  	
   37 D1:A8AC 21 00 2C D5 	ld hl,vRam + (160*240*2)
   38 D1:A8B0 22 29 AA D1 	ld (draw_buffer),hl
   39 D1:A8B4 21 00 C2 D5 	ld hl,vRam + (160*240*3)
   40 D1:A8B8 22 10 00 E3 	ld (mpLcdBase),hl
   41 D1:A8BC -  -  -  -  	
   42 D1:A8BC 21 00 00 00 	ld hl,0
   43 D1:A8C0 22 23 AA D1 	ld (cam_pos),hl
   44 D1:A8C4 -  -  -  -  
   45 D1:A8C4 CD 74 AB D1 	call setup_bg
   46 D1:A8C8 -  -  -  -  
   47 D1:A8C8 -  -  -  -  	;call draw_bg
   48 D1:A8C8 -  -  -  -  	
   49 D1:A8C8 -  -  -  -  	
   50 D1:A8C8 -  -  -  -  main_loop:
   51 D1:A8C8 -  -  -  -  	;clear timer
   52 D1:A8C8 3E 00 -  -  	ld a,0
   53 D1:A8CA 32 00 00 F2 	ld ($F20000),a;32768hz
   54 D1:A8CE 32 01 00 F2 	ld ($F20001),a;128hz
   55 D1:A8D2 32 02 00 F2 	ld ($F20002),a;0.5hz
   56 D1:A8D6 32 03 00 F2 	ld ($F20003),a
   57 D1:A8DA -  -  -  -  	
   58 D1:A8DA -  -  -  -  	;Instructions here 
   59 D1:A8DA CD 84 AA D1 	call draw_bg
   60 D1:A8DE -  -  -  -  	
   61 D1:A8DE CD 6C B3 D1 	call draw_mg
   62 D1:A8E2 -  -  -  -  	
   63 D1:A8E2 CD BB B3 D1 	call draw_fg
   64 D1:A8E6 -  -  -  -  	
   65 D1:A8E6 21 00 00 00 	ld hl,0
   66 D1:A8EA -  -  -  -  	
   67 D1:A8EA 3A 00 00 F2 	ld a,($F20000)
   68 D1:A8EE 6F -  -  -  	ld l,a
   69 D1:A8EF 3A 01 00 F2 	ld a,($F20001);128hz 
   70 D1:A8F3 67 -  -  -  	ld h,a
   71 D1:A8F4 E5 -  -  -  	push hl
   72 D1:A8F5 ED 4B 2F AA 
              D1 -  -  -  	ld bc,(longestFrame)
   73 D1:A8FA ED 42 -  -  	sbc hl,bc 
   74 D1:A8FC DA 0E A9 D1 	jp c,longest_frame_skip
   75 D1:A900 -  -  -  -  	
   76 D1:A900 E1 -  -  -  	pop hl 
   77 D1:A901 E5 -  -  -  	push hl 
   78 D1:A902 22 2F AA D1 	ld (longestFrame),hl 
   79 D1:A906 2A 23 AA D1 	ld hl,(cam_pos)
   80 D1:A90A 22 32 AA D1 	ld (longestFramePos),hl
   81 D1:A90E -  -  -  -  longest_frame_skip:
   82 D1:A90E E1 -  -  -  	pop hl 
   83 D1:A90F -  -  -  -  	
   84 D1:A90F -  -  -  -  		
   85 D1:A90F 2A 38 AA D1 	ld hl,(frameCount)
   86 D1:A913 23 -  -  -  	inc hl
   87 D1:A914 22 38 AA D1 	ld (frameCount),hl
   88 D1:A918 -  -  -  -  	
   89 D1:A918 -  -  -  -  	;swap draw buffers
   90 D1:A918 2A 10 00 E3 	ld hl,(mpLcdBase)
   91 D1:A91C ED 5B 29 AA 
              D1 -  -  -  	ld de,(draw_buffer)
   92 D1:A921 ED 53 10 00 
              E3 -  -  -  	ld (mpLcdBase),de
   93 D1:A926 22 29 AA D1 	ld (draw_buffer),hl
   94 D1:A92A -  -  -  -  	
   95 D1:A92A -  -  -  -  	;check if lcd has drawn first frame
   96 D1:A92A -  -  -  -  clock_check_loop:
   97 D1:A92A 3A 01 00 F2 	ld a,($F20001);128hz clock
   98 D1:A92E FE 03 -  -  	cp 3;check if reached 3 
   99 D1:A930 DA 2A A9 D1 	jp c,clock_check_loop
  100 D1:A934 -  -  -  -  	
  101 D1:A934 -  -  -  -  	;wait until finished drawing second frame
  102 D1:A934 -  -  -  -  
  103 D1:A934 -  -  -  -  clear_int:      
  104 D1:A934 21 28 00 E3     ld hl, mpLcdIcr
  105 D1:A938 CB D6 -  -      set 2, (hl)            ; clear interrupt
  106 D1:A93A 21 20 00 E3     ld hl, mpLcdRis
  107 D1:A93E -  -  -  -  wait_int:
  108 D1:A93E CB 56 -  -      bit 2, (hl)
  109 D1:A940 28 FC -  -      jr z, wait_int  
  110 D1:A942 -  -  -  -  
  111 D1:A942 -  -  -  -  
  112 D1:A942 21 00 00 00 	ld hl,0
  113 D1:A946 -  -  -  -  	
  114 D1:A946 3A 02 00 F2 	ld a,($F20002)
  115 D1:A94A 67 -  -  -  	ld h,a
  116 D1:A94B 3A 01 00 F2 	ld a,($F20001)
  117 D1:A94F 6F -  -  -  	ld l,a
  118 D1:A950 ED 4B 35 AA 
              D1 -  -  -  	ld bc,(totalTime)
  119 D1:A955 09 -  -  -  	add hl,bc 
  120 D1:A956 22 35 AA D1 	ld (totalTime),hl 
  121 D1:A95A -  -  -  -  	
  122 D1:A95A -  -  -  -  	
  123 D1:A95A 2A 23 AA D1 	ld hl,(cam_pos)
  124 D1:A95E 23 -  -  -  	inc hl
  125 D1:A95F 23 -  -  -  	inc hl
  126 D1:A960 23 -  -  -  	inc hl
  127 D1:A961 23 -  -  -  	inc hl
  128 D1:A962 23 -  -  -  	inc hl
  129 D1:A963 23 -  -  -  	inc hl
  130 D1:A964 23 -  -  -  	inc hl
  131 D1:A965 23 -  -  -  	inc hl
  132 D1:A966 22 23 AA D1 	ld (cam_pos),hl
  133 D1:A96A 01 EF 00 00 	ld bc,239
  134 D1:A96E 09 -  -  -  	add hl,bc 
  135 D1:A96F 7C -  -  -  	ld a,h ;msb 
  136 D1:A970 FE 23 -  -  	cp 35
  137 D1:A972 C2 C8 A8 D1 	jp nz,main_loop
  138 D1:A976 -  -  -  -  		
  139 D1:A976 -  -  -  -  	;print debug times 
  140 D1:A976 21 00 00 D4 	ld hl,vRam
  141 D1:A97A 22 10 00 E3 	ld (mpLcdBase),hl
  142 D1:A97E CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  143 D1:A982 3E 2D -  -  	ld	a,lcdBpp16
  144 D1:A984 32 18 00 E3 	ld (mpLcdCtrl),a
  145 D1:A988 -  -  -  -  	
  146 D1:A988 3E 00 -  -  	ld a,0
  147 D1:A98A 32 95 05 D0 	ld (curRow),a
  148 D1:A98E 32 96 05 D0 	ld (curCol),a
  149 D1:A992 2A 2F AA D1 	ld hl,(longestFrame)
  150 D1:A996 CD E0 1E 02 	call _DispHL
  151 D1:A99A 3E 01 -  -  	ld a,1
  152 D1:A99C 32 95 05 D0 	ld (curRow),a
  153 D1:A9A0 3E 00 -  -  	ld a,0
  154 D1:A9A2 32 96 05 D0 	ld (curCol),a
  155 D1:A9A6 2A 32 AA D1 	ld hl,(longestFramePos)
  156 D1:A9AA CD E0 1E 02 	call _DispHL
  157 D1:A9AE 3E 02 -  -  	ld a,2
  158 D1:A9B0 32 95 05 D0 	ld (curRow),a
  159 D1:A9B4 3E 00 -  -  	ld a,0
  160 D1:A9B6 32 96 05 D0 	ld (curCol),a
  161 D1:A9BA 2A 35 AA D1 	ld hl,(totalTime)
  162 D1:A9BE CD E0 1E 02 	call _DispHL
  163 D1:A9C2 3E 03 -  -  	ld a,3
  164 D1:A9C4 32 95 05 D0 	ld (curRow),a
  165 D1:A9C8 3E 00 -  -  	ld a,0
  166 D1:A9CA 32 96 05 D0 	ld (curCol),a
  167 D1:A9CE 2A 38 AA D1 	ld hl,(frameCount)
  168 D1:A9D2 CD E0 1E 02 	call _DispHL
  169 D1:A9D6 -  -  -  -  	
  170 D1:A9D6 CD 18 AA D1 	call prgmpause
  171 D1:A9DA CD 18 AA D1 	call prgmpause
  172 D1:A9DE -  -  -  -  	
  173 D1:A9DE -  -  -  -  	
  174 D1:A9DE -  -  -  -  exit_prgm:
  175 D1:A9DE 21 00 00 D4 	ld hl,vRam
  176 D1:A9E2 22 10 00 E3 	ld (mpLcdBase),hl
  177 D1:A9E6 CD 10 08 02 	call _ClrScrnFull
  178 D1:A9EA 3E 2D -  -  	ld	a,lcdBpp16
  179 D1:A9EC 32 18 00 E3 	ld	(mpLcdCtrl),a
  180 D1:A9F0 CD 3C 1A 02 	call _DrawStatusBar
  181 D1:A9F4 -  -  -  -  	
  182 D1:A9F4 FB -  -  -  	ei				; reset screen back to normal
  183 D1:A9F5 C9 -  -  -  	ret			; return to os
  184 D1:A9F6 -  -  -  -  
  185 D1:A9F6 -  -  -  -  
  186 D1:A9F6 -  -  -  -  printHL:;=================REMOVE
  187 D1:A9F6 E5 -  -  -  	push hl
  188 D1:A9F7 21 00 00 D4 	ld hl,vRam
  189 D1:A9FB 22 10 00 E3 	ld (mpLcdBase),hl
  190 D1:A9FF CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  191 D1:AA03 3E 2D -  -  	ld	a,lcdBpp16
  192 D1:AA05 32 18 00 E3 	ld (mpLcdCtrl),a
  193 D1:AA09 E1 -  -  -  	pop hl
  194 D1:AA0A CD E0 1E 02 	call _DispHL
  195 D1:AA0E FB -  -  -  	ei
  196 D1:AA0F CD 8C 0D 02 	call _GetKey
  197 D1:AA13 F3 -  -  -  	di
  198 D1:AA14 C3 DE A9 D1 	jp exit_prgm
  199 D1:AA18 -  -  -  -  
  200 D1:AA18 -  -  -  -  
  201 D1:AA18 -  -  -  -  prgmpause:
  202 D1:AA18 D5 -  -  -  	push de 
  203 D1:AA19 E5 -  -  -  	push hl 
  204 D1:AA1A FB -  -  -  	ei
  205 D1:AA1B CD 8C 0D 02 	call _GetKey
  206 D1:AA1F F3 -  -  -  	di
  207 D1:AA20 E1 -  -  -  	pop hl 
  208 D1:AA21 D1 -  -  -  	pop de 
  209 D1:AA22 C9 -  -  -  	ret
  210 D1:AA23 -  -  -  -  
  211 D1:AA23 -  -  -  -  cam_pos:;bottom of cam
  212 D1:AA23 00 00 00 -  	.dl 0
  213 D1:AA26 -  -  -  -  bg_cam_pos:
  214 D1:AA26 00 00 00 -  	.dl 0
  215 D1:AA29 -  -  -  -  
  216 D1:AA29 -  -  -  -  
  217 D1:AA29 -  -  -  -  draw_buffer:
  218 D1:AA29 00 00 00 -  	.dl 0
  219 D1:AA2C -  -  -  -  BG_draw_buffer:;uppermost line of bg in vram
  220 D1:AA2C 00 00 00 -  	.dl 0
  221 D1:AA2F -  -  -  -  BG_buffer .equ vram + (160*240)
  222 D1:AA2F -  -  -  -  
  223 D1:AA2F -  -  -  -  
  224 D1:AA2F -  -  -  -  longestFrame:
  225 D1:AA2F 00 00 00 -  	.dl 0
  226 D1:AA32 -  -  -  -  longestFramePos:
  227 D1:AA32 00 00 00 -  	.dl 0
  228 D1:AA35 -  -  -  -  totalTime:
  229 D1:AA35 00 00 00 -  	.dl 0
  230 D1:AA38 -  -  -  -  frameCount:
  231 D1:AA38 00 00 00 -  	.dl 0
  232 D1:AA3B -  -  -  -  hasLagged:
  233 D1:AA3B 00 00 00 -  	.dl 0
  234 D1:AA3E -  -  -  -  
  235 D1:AA3E -  -  -  -  
  236 D1:AA3E -  -  -  -  
  237 D1:AA3E -  -  -  -  
  238 D1:AA3E -  -  -  -  
  239 D1:AA3E -  -  -  -  #include "timeTesting.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\timeTesting.txt"
    1 D1:AA3E -  -  -  -  
    2 D1:AA3E -  -  -  -  
    3 D1:AA3E -  -  -  -  
    4 D1:AA3E -  -  -  -  time_test_start:
    5 D1:AA3E -  -  -  -  
    6 D1:AA3E -  -  -  -  		; 76543210	
    7 D1:AA3E 3E 03 -  -  	ld a,%00000011;enable, 32768hz
    8 D1:AA40 32 30 00 F2 	ld ($F20030),a
    9 D1:AA44 -  -  -  -  	;	  fedcba98
   10 D1:AA44 3E 02 -  -  	ld a,%00000010;count up
   11 D1:AA46 32 31 00 F2 	ld ($F20031),a
   12 D1:AA4A 3E 00 -  -  	ld a,0
   13 D1:AA4C 32 00 00 F2 	ld ($F20000),a
   14 D1:AA50 32 01 00 F2 	ld ($F20001),a
   15 D1:AA54 32 02 00 F2 	ld ($F20002),a
   16 D1:AA58 32 03 00 F2 	ld ($F20003),a
   17 D1:AA5C -  -  -  -  	
   18 D1:AA5C 21 2C 01 00 	ld hl,300
   19 D1:AA60 -  -  -  -  	
   20 D1:AA60 -  -  -  -  time_testing_loop:
   21 D1:AA60 E5 -  -  -  	push hl
   22 D1:AA61 01 E8 03 00 	ld bc,1000
   23 D1:AA65 -  -  -  -  time_testing_loop_2:
   24 D1:AA65 C5 -  -  -  	push bc
   25 D1:AA66 -  -  -  -  	;instruction here
   26 D1:AA66 -  -  -  -  	
   27 D1:AA66 -  -  -  -  	
   28 D1:AA66 -  -  -  -  	;Instruction end
   29 D1:AA66 C1 -  -  -  	pop bc
   30 D1:AA67 0B -  -  -  	dec bc
   31 D1:AA68 79 -  -  -  	ld a,c
   32 D1:AA69 B0 -  -  -  	or b
   33 D1:AA6A C2 65 AA D1 	jp nz,time_testing_loop_2
   34 D1:AA6E E1 -  -  -  	pop hl
   35 D1:AA6F 2B -  -  -  	dec hl
   36 D1:AA70 7D -  -  -  	ld a,l
   37 D1:AA71 B4 -  -  -  	or h
   38 D1:AA72 C2 60 AA D1 	jp nz,time_testing_loop
   39 D1:AA76 -  -  -  -  	
   40 D1:AA76 3A 01 00 F2 	ld a,($F20001);128hz
   41 D1:AA7A 6F -  -  -  	ld l,a
   42 D1:AA7B 3A 02 00 F2 	ld a,($F20002);0.5hz
   43 D1:AA7F 67 -  -  -  	ld h,a
   44 D1:AA80 C3 F6 A9 D1 	jp printHL;div by 128 for time
   45 D1:AA84 -  -  -  -  	
   46 D1:AA84 -  -  -  -  
   47 D1:AA84 -  -  -  -  ;60fps = .0166sec/f	
   48 D1:AA84 -  -  -  -  
   49 D1:AA84 -  -  -  -  ;1000 ldir in vram of 160*240 bytes
   50 D1:AA84 -  -  -  -  ;6.8sec, .0068 sec/instruction   0.4 of a frame
   51 D1:AA84 -  -  -  -  
   52 D1:AA84 -  -  -  -  
   53 D1:AA84 -  -  -  -  ;10,000 draw 1 bg line very complex 
   54 D1:AA84 -  -  -  -  ;9 sec  .07 of frame/instruction
   55 D1:AA84 -  -  -  -  
   56 D1:AA84 -  -  -  -  ;300k draw slow sprite 12*5 px complex
   57 D1:AA84 -  -  -  -  ;16.4RT, 14.8CLK
   58 D1:AA84 -  -  -  -  ;.00328 frames/sprite, 4.19 frames / screen
   59 D1:AA84 -  -  -  -  ;.24 screens/frame
   60 D1:AA84 -  -  -  -  
   61 D1:AA84 -  -  -  -  
   62 D1:AA84 -  -  -  -  ;300k slow sprite best case 12*5px
   63 D1:AA84 -  -  -  -  ;8.75RT 7.6clk
   64 D1:AA84 -  -  -  -  ;.00175 frames/spr 2.24 frames/screen
   65 D1:AA84 -  -  -  -  ;.446 screens/frame
   66 D1:AA84 -  -  -  -  
   67 D1:AA84 -  -  -  -  
   68 D1:AA84 -  -  -  -  
   69 D1:AA84 -  -  -  -  ;1,000,000 fast fg sprite 20*4 px
   70 D1:AA84 -  -  -  -  ;22.15RT,20.35clk
   71 D1:AA84 -  -  -  -  ;.00133 frames/spr 1.275 frames/screen
   72 D1:AA84 -  -  -  -  ;.78 screens/frame
   73 D1:AA84 -  -  -  -  
   74 D1:AA84 -  -  -  -  
   75 D1:AA84 -  -  -  -  ;for 60% of screen with fg sprites in 1 frame
   76 D1:AA84 -  -  -  -  ;.6 = .78*fast + .44*(1-fast)
   77 D1:AA84 -  -  -  -  ;.47 = FAST
   78 D1:AA84 -  -  -  -  
   79 D1:AA84 -  -  -  -  ;50% fast sprites, 50% slow sprites
   80 D1:AA84 -  -  -  -  
   81 D1:AA84 -  -  -  -  
   82 D1:AA84 -  -  -  -  
   83 D1:AA84 -  -  -  -  
   84 D1:AA84 -  -  -  -  
   85 D1:AA84 -  -  -  -  
   86 D1:AA84 -  -  -  -  
   87 D1:AA84 -  -  -  -  
   88 D1:AA84 -  -  -  -  
Listing for file "ascent.asm"
  240 D1:AA84 -  -  -  -  #include "drawBGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawBGSprite.txt"
    1 D1:AA84 -  -  -  -  
    2 D1:AA84 -  -  -  -  draw_bg:
    3 D1:AA84 CD B8 AA D1 	call move_bg
    4 D1:AA88 21 00 2C D5 	ld hl,$d52c00;BG_buffer_end
    5 D1:AA8C ED 4B 2C AA 
              D1 -  -  -  	ld bc,(BG_draw_buffer)
    6 D1:AA91 37 -  -  -  	scf 
    7 D1:AA92 3F -  -  -  	ccf 
    8 D1:AA93 ED 42 -  -  	sbc hl,bc
    9 D1:AA95 E5 -  -  -  	push hl 
   10 D1:AA96 C1 -  -  -  	pop bc
   11 D1:AA97 2A 2C AA D1 	ld hl,(BG_draw_buffer)
   12 D1:AA9B ED 5B 29 AA 
              D1 -  -  -  	ld de,(draw_buffer)
   13 D1:AAA0 ED B0 -  -  	ldir
   14 D1:AAA2 2A 2C AA D1 	ld hl,(BG_draw_buffer)
   15 D1:AAA6 01 00 96 D4 	ld bc,BG_buffer
   16 D1:AAAA 37 -  -  -  	scf 
   17 D1:AAAB 3F -  -  -  	ccf 
   18 D1:AAAC ED 42 -  -  	sbc hl,bc
   19 D1:AAAE C8 -  -  -  	ret z ;if bg buffer line is at top of buffer, no second ldir
   20 D1:AAAF E5 -  -  -  	push hl 
   21 D1:AAB0 C1 -  -  -  	pop bc
   22 D1:AAB1 21 00 96 D4 	ld hl,BG_buffer 
   23 D1:AAB5 ED B0 -  -  	ldir 
   24 D1:AAB7 C9 -  -  -  	ret 
   25 D1:AAB8 -  -  -  -  	
   26 D1:AAB8 -  -  -  -  move_bg:
   27 D1:AAB8 2A 23 AA D1 	ld hl,(cam_pos)
   28 D1:AABC CB 3C -  -  	srl h
   29 D1:AABE CB 1D -  -  	rr l
   30 D1:AAC0 CB 3C -  -  	srl h
   31 D1:AAC2 CB 1D -  -  	rr l ;div by 4
   32 D1:AAC4 -  -  -  -  	;hl holds bg cam pos 
   33 D1:AAC4 01 EF 00 00 	ld bc,239
   34 D1:AAC8 09 -  -  -  	add hl,bc;add 0 pos  
   35 D1:AAC9 ED 4B 26 AA 
              D1 -  -  -  	ld bc,(bg_cam_pos)
   36 D1:AACE ED 42 -  -  	sbc hl,bc 
   37 D1:AAD0 C8 -  -  -  	ret z 
   38 D1:AAD1 DA DD AA D1 	jp c,move_bg_down
   39 D1:AAD5 CD 2E AB D1 	call inc_bg
   40 D1:AAD9 C3 B8 AA D1 	jp move_bg
   41 D1:AADD -  -  -  -  move_bg_down:
   42 D1:AADD CD E5 AA D1 	call dec_bg
   43 D1:AAE1 C3 B8 AA D1 	jp move_bg
   44 D1:AAE5 -  -  -  -  
   45 D1:AAE5 -  -  -  -  
   46 D1:AAE5 -  -  -  -  dec_bg:;move cam down
   47 D1:AAE5 -  -  -  -  	;write on draw buffer line 
   48 D1:AAE5 2A 2C AA D1 	ld hl,(BG_draw_buffer)
   49 D1:AAE9 22 62 AC D1 	ld (dbgl_vram_line_start),hl 
   50 D1:AAED -  -  -  -  	
   51 D1:AAED 2A 26 AA D1 	ld hl,(bg_cam_pos)
   52 D1:AAF1 2B -  -  -  	dec hl 
   53 D1:AAF2 22 26 AA D1 	ld (bg_cam_pos),hl 
   54 D1:AAF6 01 EF 00 00 	ld bc,239
   55 D1:AAFA ED 42 -  -  	sbc hl,bc;bottom row of bc
   56 D1:AAFC 4C -  -  -  	ld c,h;cam pos msb 
   57 D1:AAFD 7D -  -  -  	ld a,l 
   58 D1:AAFE 21 4F CD D1 	ld hl,BG_Data_frame_table
   59 D1:AB02 0C -  -  -  	inc c 
   60 D1:AB03 09 -  -  -  	add hl,bc 
   61 D1:AB04 09 -  -  -  	add hl,bc 
   62 D1:AB05 09 -  -  -  	add hl,bc 
   63 D1:AB06 ED 27 -  -  	ld hl,(hl)
   64 D1:AB08 CD C1 AB D1 	call draw_bg_line
   65 D1:AB0C -  -  -  -  	;move buffer pos
   66 D1:AB0C 2A 2C AA D1 	ld hl,(BG_draw_buffer)
   67 D1:AB10 01 60 2B D5 	ld bc,$d52b60;BG_buffer_end
   68 D1:AB14 37 -  -  -  	scf 
   69 D1:AB15 3F -  -  -  	ccf 
   70 D1:AB16 ED 42 -  -  	sbc hl,bc
   71 D1:AB18 2A 2C AA D1 	ld hl,(BG_draw_buffer)
   72 D1:AB1C C2 24 AB D1 	jp nz,dec_bg_bottom_skip
   73 D1:AB20 21 60 95 D4 	ld hl,$d49560;1 row above top of bg buffer 
   74 D1:AB24 -  -  -  -  dec_bg_bottom_skip:
   75 D1:AB24 01 A0 00 00 	ld bc,160 
   76 D1:AB28 09 -  -  -  	add hl,bc
   77 D1:AB29 22 2C AA D1 	ld (BG_draw_buffer),hl 
   78 D1:AB2D C9 -  -  -  	ret
   79 D1:AB2E -  -  -  -  
   80 D1:AB2E -  -  -  -  
   81 D1:AB2E -  -  -  -  inc_bg:;move cam up 
   82 D1:AB2E 2A 2C AA D1 	ld hl,(BG_draw_buffer)
   83 D1:AB32 01 00 96 D4 	ld bc,$d49600;BG_buffer_start
   84 D1:AB36 37 -  -  -  	scf 
   85 D1:AB37 3F -  -  -  	ccf 
   86 D1:AB38 ED 42 -  -  	sbc hl,bc
   87 D1:AB3A 2A 2C AA D1 	ld hl,(BG_draw_buffer)
   88 D1:AB3E C2 46 AB D1 	jp nz,inc_bg_top_skip
   89 D1:AB42 21 00 2C D5 	ld hl,$d52c00;1 below bottom of bg buffer 
   90 D1:AB46 -  -  -  -  inc_bg_top_skip:
   91 D1:AB46 01 A0 00 00 	ld bc,160 
   92 D1:AB4A 37 -  -  -  	scf
   93 D1:AB4B 3F -  -  -  	ccf 
   94 D1:AB4C ED 42 -  -  	sbc hl,bc ;move up line 
   95 D1:AB4E 22 2C AA D1 	ld (BG_draw_buffer),hl 
   96 D1:AB52 22 62 AC D1 	ld (dbgl_vram_line_start),hl 
   97 D1:AB56 2A 26 AA D1 	ld hl,(bg_cam_pos)
   98 D1:AB5A 23 -  -  -  	inc hl 
   99 D1:AB5B 22 26 AA D1 	ld (bg_cam_pos),hl 
  100 D1:AB5F 01 00 00 00 	ld bc,0
  101 D1:AB63 4C -  -  -  	ld c,h;cam pos msb 
  102 D1:AB64 7D -  -  -  	ld a,l 
  103 D1:AB65 21 4F CD D1 	ld hl,BG_Data_frame_table
  104 D1:AB69 0C -  -  -  	inc c 
  105 D1:AB6A 09 -  -  -  	add hl,bc 
  106 D1:AB6B 09 -  -  -  	add hl,bc 
  107 D1:AB6C 09 -  -  -  	add hl,bc 
  108 D1:AB6D ED 27 -  -  	ld hl,(hl)
  109 D1:AB6F CD C1 AB D1 	call draw_bg_line
  110 D1:AB73 C9 -  -  -  	ret
  111 D1:AB74 -  -  -  -  	
  112 D1:AB74 -  -  -  -  
  113 D1:AB74 -  -  -  -  
  114 D1:AB74 -  -  -  -  
  115 D1:AB74 -  -  -  -  
  116 D1:AB74 -  -  -  -  setup_bg:
  117 D1:AB74 2A 23 AA D1 	ld hl,(cam_pos)
  118 D1:AB78 CB 3C -  -  	srl h
  119 D1:AB7A CB 1D -  -  	rr l
  120 D1:AB7C CB 3C -  -  	srl h
  121 D1:AB7E CB 1D -  -  	rr l ;div by 4
  122 D1:AB80 -  -  -  -  	;hl holds bg cam pos 
  123 D1:AB80 01 EF 00 00 	ld bc,239
  124 D1:AB84 09 -  -  -  	add hl,bc;add 0 pos  
  125 D1:AB85 22 26 AA D1 	ld (bg_cam_pos),hl
  126 D1:AB89 23 -  -  -  	inc hl;to be dec in loop
  127 D1:AB8A E5 -  -  -  	push hl 
  128 D1:AB8B 21 00 96 D4 	ld hl,BG_buffer 
  129 D1:AB8F 22 2C AA D1 	ld (BG_draw_buffer),hl
  130 D1:AB93 E5 -  -  -  	push hl 
  131 D1:AB94 D9 -  -  -  	exx
  132 D1:AB95 06 F0 -  -  	ld b,240
  133 D1:AB97 -  -  -  -  	
  134 D1:AB97 -  -  -  -  setup_bg_loop:
  135 D1:AB97 D9 -  -  -  	exx
  136 D1:AB98 E1 -  -  -  	pop hl;vram draw pos 
  137 D1:AB99 22 62 AC D1 	ld (dbgl_vram_line_start),hl 
  138 D1:AB9D 01 A0 00 00 	ld bc,160
  139 D1:ABA1 09 -  -  -  	add hl,bc 
  140 D1:ABA2 EB -  -  -  	ex de,hl ;put vram pos in de 
  141 D1:ABA3 E1 -  -  -  	pop hl;cam pos
  142 D1:ABA4 2B -  -  -  	dec hl 
  143 D1:ABA5 E5 -  -  -  	push hl;push cam pos 
  144 D1:ABA6 D5 -  -  -  	push de ;push vram pos 
  145 D1:ABA7 01 00 00 00 	ld bc,0
  146 D1:ABAB 4C -  -  -  	ld c,h;cam pos msb 
  147 D1:ABAC 7D -  -  -  	ld a,l 
  148 D1:ABAD 21 4F CD D1 	ld hl,BG_Data_frame_table
  149 D1:ABB1 0C -  -  -  	inc c 
  150 D1:ABB2 09 -  -  -  	add hl,bc 
  151 D1:ABB3 09 -  -  -  	add hl,bc 
  152 D1:ABB4 09 -  -  -  	add hl,bc 
  153 D1:ABB5 ED 27 -  -  	ld hl,(hl)
  154 D1:ABB7 CD C1 AB D1 	call draw_bg_line
  155 D1:ABBB D9 -  -  -  	exx 
  156 D1:ABBC 10 D9 -  -  	djnz setup_bg_loop
  157 D1:ABBE E1 -  -  -  	pop hl 
  158 D1:ABBF E1 -  -  -  	pop hl 
  159 D1:ABC0 C9 -  -  -  	ret 
  160 D1:ABC1 -  -  -  -  
  161 D1:ABC1 -  -  -  -  
  162 D1:ABC1 -  -  -  -  
  163 D1:ABC1 -  -  -  -  
  164 D1:ABC1 -  -  -  -  
  165 D1:ABC1 -  -  -  -  
  166 D1:ABC1 -  -  -  -  ;hl = upper data frame, a = line number in target frame
  167 D1:ABC1 -  -  -  -  ;set dbgl_vram_line_start 
  168 D1:ABC1 -  -  -  -  draw_bg_line:
  169 D1:ABC1 E5 -  -  -  	push hl 
  170 D1:ABC2 F5 -  -  -  	push af 
  171 D1:ABC3 3E FF -  -  	ld a,$ff
  172 D1:ABC5 01 A0 00 00 	ld bc,160
  173 D1:ABC9 2A 62 AC D1 	ld hl,(dbgl_vram_line_start)
  174 D1:ABCD CD E0 10 02 	call _MemSet 
  175 D1:ABD1 F1 -  -  -  	pop af 
  176 D1:ABD2 E1 -  -  -  	pop hl
  177 D1:ABD3 -  -  -  -  
  178 D1:ABD3 32 F9 AB D1 	ld (dbgl_line_num),a
  179 D1:ABD7 32 36 AC D1 	ld (dbgl_line_num_2),a
  180 D1:ABDB ED 17 -  -  	ld de,(hl)
  181 D1:ABDD ED 53 68 AC 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  182 D1:ABE2 23 -  -  -  	inc hl
  183 D1:ABE3 23 -  -  -  	inc hl
  184 D1:ABE4 23 -  -  -  	inc hl ;to frame data start 
  185 D1:ABE5 08 -  -  -  	ex af,af' ;'
  186 D1:ABE6 7E -  -  -  	ld a,(hl);number of elements
  187 D1:ABE7 08 -  -  -  	ex af,af' ;'
  188 D1:ABE8 23 -  -  -  	inc hl 
  189 D1:ABE9 -  -  -  -  	
  190 D1:ABE9 11 00 00 00 	ld de,0
  191 D1:ABED 01 00 00 00 	ld bc,0
  192 D1:ABF1 -  -  -  -  	;upper frame, checking for sprites that carry into lower frame 
  193 D1:ABF1 -  -  -  -  dbgl_upper_loop:
  194 D1:ABF1 7E -  -  -  	ld a,(hl);y
  195 D1:ABF2 23 -  -  -  	inc hl;to height
  196 D1:ABF3 96 -  -  -  	sub (hl);subtract height
  197 D1:ABF4 -  -  -  -  	;a is y value of bottom row of sprite
  198 D1:ABF4 D2 02 AC D1 	jp nc,dbgl_upper_skip;if no carry into next frame
  199 D1:ABF8 -  -  -  -  	;sprite extends into target frame
  200 D1:ABF8 -  -  -  -  dbgl_line_num .equ $ + 1
  201 D1:ABF8 D6 00 -  -  	sub 0 ;compare to line number in target frame
  202 D1:ABFA DA 10 AC D1 	jp c,dbgl_upper_cont;if linenum is >  bottom row
  203 D1:ABFE CA 10 AC D1 	jp z,dbgl_upper_cont;if = bottom row
  204 D1:AC02 -  -  -  -  dbgl_upper_skip:
  205 D1:AC02 23 -  -  -  	inc hl;to x
  206 D1:AC03 23 -  -  -  	inc hl;to index 
  207 D1:AC04 23 -  -  -  	inc hl;to y
  208 D1:AC05 08 -  -  -  	ex af,af';'
  209 D1:AC06 3D -  -  -  	dec a 
  210 D1:AC07 CA 21 AC D1 	jp z,dbgl_lower_start 
  211 D1:AC0B 08 -  -  -  	ex af,af';'
  212 D1:AC0C C3 F1 AB D1 	jp dbgl_upper_loop
  213 D1:AC10 -  -  -  -  	
  214 D1:AC10 -  -  -  -  dbgl_upper_cont:
  215 D1:AC10 -  -  -  -  	;a = bottom row - linenum
  216 D1:AC10 86 -  -  -  	add a,(hl);add height-1 
  217 D1:AC11 -  -  -  -  	;a holds 0 indexed line num within sprite
  218 D1:AC11 CD 5C AC D1 	call dbgl_setup_and_draw
  219 D1:AC15 23 -  -  -  	inc hl;to y
  220 D1:AC16 08 -  -  -  	ex af,af';'
  221 D1:AC17 3D -  -  -  	dec a 
  222 D1:AC18 CA 21 AC D1 	jp z,dbgl_lower_start 
  223 D1:AC1C 08 -  -  -  	ex af,af';'
  224 D1:AC1D C3 F1 AB D1 	jp dbgl_upper_loop
  225 D1:AC21 -  -  -  -  	
  226 D1:AC21 -  -  -  -  dbgl_lower_start:
  227 D1:AC21 -  -  -  -  ;LOWER FRAME START 
  228 D1:AC21 -  -  -  -  	;hl pointing to sprite data table 
  229 D1:AC21 ED 17 -  -  	ld de,(hl)
  230 D1:AC23 ED 53 68 AC 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de	
  231 D1:AC28 11 00 00 00 	ld de,0
  232 D1:AC2C 23 -  -  -  	inc hl
  233 D1:AC2D 23 -  -  -  	inc hl
  234 D1:AC2E 23 -  -  -  	inc hl;to num elements
  235 D1:AC2F -  -  -  -  	
  236 D1:AC2F 08 -  -  -  	ex af,af' ;'
  237 D1:AC30 7E -  -  -  	ld a,(hl);number of elements
  238 D1:AC31 08 -  -  -  	ex af,af' ;'
  239 D1:AC32 23 -  -  -  	inc hl ;to y
  240 D1:AC33 -  -  -  -  	
  241 D1:AC33 -  -  -  -  dbgl_lower_loop:
  242 D1:AC33 7E -  -  -  	ld a,(hl)
  243 D1:AC34 23 -  -  -  	inc hl;to height-1
  244 D1:AC35 -  -  -  -  dbgl_line_num_2 .equ $ + 1
  245 D1:AC35 D6 00 -  -  	sub 0;subtract line num 
  246 D1:AC37 DA 44 AC D1 	jp c,dbgl_lower_skip;target line num is above sprite 
  247 D1:AC3B -  -  -  -  	;target is below or = sprite y value 
  248 D1:AC3B -  -  -  -  	;a holds 0 indexed sprite row 
  249 D1:AC3B BE -  -  -  	cp (hl);compare to height
  250 D1:AC3C DA 4F AC D1 	jp c,dbgl_lower_cont ;if height >= a 
  251 D1:AC40 CA 4F AC D1 	jp z,dbgl_lower_cont
  252 D1:AC44 -  -  -  -  dbgl_lower_skip:
  253 D1:AC44 23 -  -  -  	inc hl;to x  
  254 D1:AC45 23 -  -  -  	inc hl; to index
  255 D1:AC46 23 -  -  -  	inc hl;to y
  256 D1:AC47 08 -  -  -  	ex af,af';'
  257 D1:AC48 3D -  -  -  	dec a 
  258 D1:AC49 C8 -  -  -  	ret z 
  259 D1:AC4A 08 -  -  -  	ex af,af';'
  260 D1:AC4B C3 33 AC D1 	jp dbgl_lower_loop
  261 D1:AC4F -  -  -  -  dbgl_lower_cont:
  262 D1:AC4F -  -  -  -  
  263 D1:AC4F CD 5C AC D1 	call dbgl_setup_and_draw
  264 D1:AC53 23 -  -  -  	inc hl;to y
  265 D1:AC54 08 -  -  -  	ex af,af';'
  266 D1:AC55 3D -  -  -  	dec a 
  267 D1:AC56 C8 -  -  -  	ret z 
  268 D1:AC57 08 -  -  -  	ex af,af';'
  269 D1:AC58 C3 33 AC D1 	jp dbgl_lower_loop
  270 D1:AC5C -  -  -  -  
  271 D1:AC5C -  -  -  -  ;a holds 0 indexed line num, (hl) = height ,bc,de = 0
  272 D1:AC5C -  -  -  -  dbgl_setup_and_draw:
  273 D1:AC5C 23 -  -  -  	inc hl;to x pos
  274 D1:AC5D 5E -  -  -  	ld e,(hl)
  275 D1:AC5E 23 -  -  -  	inc hl 
  276 D1:AC5F 4E -  -  -  	ld c,(hl);sprite index 
  277 D1:AC60 E5 -  -  -  	push hl
  278 D1:AC61 -  -  -  -  dbgl_vram_line_start .equ $ + 1	
  279 D1:AC61 21 00 00 00 	ld hl,0
  280 D1:AC65 19 -  -  -  	add hl,de;add x pos 
  281 D1:AC66 EB -  -  -  	ex de,hl;put vram pos into de 
  282 D1:AC67 -  -  -  -  dbgl_sprite_pointers .equ $ + 1
  283 D1:AC67 21 00 00 00 	ld hl,0
  284 D1:AC6B 09 -  -  -  	add hl,bc
  285 D1:AC6C 09 -  -  -  	add hl,bc 
  286 D1:AC6D 09 -  -  -  	add hl,bc ;hl points to sprite data pointer 
  287 D1:AC6E ED 27 -  -  	ld hl,(hl);hl holds sprite data
  288 D1:AC70 -  -  -  -  
  289 D1:AC70 CD 7E AC D1 	call draw_bg_sprite_line;draw sprite line 
  290 D1:AC74 11 00 00 00 	ld de,0;clear de 
  291 D1:AC78 01 00 00 00 	ld bc,0
  292 D1:AC7C E1 -  -  -  	pop hl;back to data
  293 D1:AC7D C9 -  -  -  	ret
  294 D1:AC7E -  -  -  -  	
  295 D1:AC7E -  -  -  -  
  296 D1:AC7E -  -  -  -  
  297 D1:AC7E -  -  -  -  
  298 D1:AC7E -  -  -  -  
  299 D1:AC7E -  -  -  -  
  300 D1:AC7E -  -  -  -  ;hl = data, de = vram, a = linenum (0 indexed from top)
  301 D1:AC7E -  -  -  -  draw_bg_sprite_line:
  302 D1:AC7E E5 -  -  -  	push hl;save 
  303 D1:AC7F 6E -  -  -  	ld l,(hl);sprite width in px
  304 D1:AC80 67 -  -  -  	ld h,a ;lines to skip
  305 D1:AC81 7D -  -  -  	ld a,l;width 
  306 D1:AC82 ED 6C -  -  	mlt hl;widt*lines skipped 
  307 D1:AC84 C1 -  -  -  	pop bc 
  308 D1:AC85 09 -  -  -  	add hl,bc;skip to target line data 
  309 D1:AC86 23 -  -  -  	inc hl 
  310 D1:AC87 -  -  -  -  	;hl is pointing to start of line data 
  311 D1:AC87 CB 2F -  -  	sra a;divide width by 2 
  312 D1:AC89 47 -  -  -  	ld b,a;b holds number of loops 
  313 D1:AC8A -  -  -  -  dbgsl_loop:
  314 D1:AC8A 1A -  -  -  	ld a,(de); load vram data 
  315 D1:AC8B A6 -  -  -  	and (hl);and with mask 
  316 D1:AC8C 23 -  -  -  	inc hl ;to color data 
  317 D1:AC8D B6 -  -  -  	or (hl);or w color data 
  318 D1:AC8E 12 -  -  -  	ld (de),a;write to vram  
  319 D1:AC8F 13 -  -  -  	inc de
  320 D1:AC90 23 -  -  -  	inc hl;to mask data
  321 D1:AC91 10 F7 -  -  	djnz dbgsl_loop
  322 D1:AC93 C9 -  -  -  	ret 
  323 D1:AC94 -  -  -  -  	
  324 D1:AC94 -  -  -  -  
  325 D1:AC94 -  -  -  -  
  326 D1:AC94 -  -  -  -  
  327 D1:AC94 -  -  -  -  
  328 D1:AC94 -  -  -  -  
  329 D1:AC94 -  -  -  -  
  330 D1:AC94 -  -  -  -  
  331 D1:AC94 -  -  -  -  
  332 D1:AC94 -  -  -  -  
  333 D1:AC94 -  -  -  -  
  334 D1:AC94 -  -  -  -  
  335 D1:AC94 -  -  -  -  
Listing for file "ascent.asm"
  241 D1:AC94 -  -  -  -  #include "drawFGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFGSprite.txt"
    1 D1:AC94 -  -  -  -  
    2 D1:AC94 -  -  -  -  
    3 D1:AC94 -  -  -  -  ;de = vram , hl = data, a = number lines to draw
    4 D1:AC94 -  -  -  -  draw_fast_sprite_bottom_cut:
    5 D1:AC94 1B -  -  -  	dec de
    6 D1:AC95 01 00 00 00 	ld bc,0
    7 D1:AC99 4F -  -  -  	ld c,a
    8 D1:AC9A E5 -  -  -  	push hl
    9 D1:AC9B 7E -  -  -  	ld a,(hl);height
   10 D1:AC9C 09 -  -  -  	add hl,bc;hl points to num loops required
   11 D1:AC9D 4F -  -  -  	ld c,a;height
   12 D1:AC9E 7E -  -  -  	ld a,(hl);a holds num loops
   13 D1:AC9F E1 -  -  -  	pop hl
   14 D1:ACA0 23 -  -  -  	inc hl
   15 D1:ACA1 09 -  -  -  	add hl,bc;beginning of pixel data
   16 D1:ACA2 -  -  -  -  
   17 D1:ACA2 4E -  -  -  	ld c,(hl);load alpha length
   18 D1:ACA3 EB -  -  -  	ex de,hl;hl is vram, de is data
   19 D1:ACA4 C3 EA AC D1 	jp dfgs_loop
   20 D1:ACA8 -  -  -  -  	
   21 D1:ACA8 -  -  -  -  ;de = vram , hl = data, a = top lines to skip	
   22 D1:ACA8 -  -  -  -  draw_fast_sprite_top_cut:
   23 D1:ACA8 1B -  -  -  	dec de
   24 D1:ACA9 01 00 00 00 	ld bc,0
   25 D1:ACAD 4F -  -  -  	ld c,a
   26 D1:ACAE D5 -  -  -  	push de
   27 D1:ACAF 11 00 00 00 	ld de,0
   28 D1:ACB3 E5 -  -  -  	push hl
   29 D1:ACB4 5E -  -  -  	ld e,(hl);height
   30 D1:ACB5 09 -  -  -  	add hl,bc;hl points to num skip loops 
   31 D1:ACB6 -  -  -  -  
   32 D1:ACB6 4E -  -  -  	ld c,(hl);c holds num skip loops
   33 D1:ACB7 E1 -  -  -  	pop hl;start of data
   34 D1:ACB8 19 -  -  -  	add hl,de
   35 D1:ACB9 46 -  -  -  	ld b,(hl);total number of loops
   36 D1:ACBA 23 -  -  -  	inc hl;hl is pixel data
   37 D1:ACBB D1 -  -  -  	pop de
   38 D1:ACBC C5 -  -  -  	push bc;save total and skipped loops
   39 D1:ACBD 79 -  -  -  	ld a,c;loops to skip
   40 D1:ACBE 01 00 00 00 	ld bc,0
   41 D1:ACC2 -  -  -  -  	
   42 D1:ACC2 -  -  -  -  
   43 D1:ACC2 -  -  -  -  draw_fast_sprite_top_loop:
   44 D1:ACC2 4E -  -  -  	ld c,(hl);load with first gap length	
   45 D1:ACC3 EB -  -  -  	ex de,hl;hl is vram
   46 D1:ACC4 09 -  -  -  	add hl,bc
   47 D1:ACC5 EB -  -  -  	ex de,hl;hl is data
   48 D1:ACC6 23 -  -  -  	inc hl
   49 D1:ACC7 4E -  -  -  	ld c,(hl);ldir length
   50 D1:ACC8 09 -  -  -  	add hl,bc;add ldir length
   51 D1:ACC9 EB -  -  -  	ex de,hl;hl is vram
   52 D1:ACCA 09 -  -  -  	add hl,bc;add ldir length
   53 D1:ACCB 13 -  -  -  	inc de
   54 D1:ACCC EB -  -  -  	ex de,hl;hl is data
   55 D1:ACCD 3D -  -  -  	dec a
   56 D1:ACCE C2 C2 AC D1 	jp nz,draw_fast_sprite_top_loop
   57 D1:ACD2 -  -  -  -  	
   58 D1:ACD2 -  -  -  -  	
   59 D1:ACD2 C1 -  -  -  	pop bc
   60 D1:ACD3 78 -  -  -  	ld a,b
   61 D1:ACD4 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
   62 D1:ACD5 -  -  -  -  		
   63 D1:ACD5 01 00 00 00 	ld bc,0
   64 D1:ACD9 4E -  -  -  	ld c,(hl)
   65 D1:ACDA EB -  -  -  	ex de,hl
   66 D1:ACDB C3 EA AC D1 	jp dfgs_loop
   67 D1:ACDF -  -  -  -  
   68 D1:ACDF -  -  -  -  
   69 D1:ACDF -  -  -  -  ;de = vram , hl = data
   70 D1:ACDF -  -  -  -  draw_fast_sprite_full:
   71 D1:ACDF 1B -  -  -  	dec de
   72 D1:ACE0 01 00 00 00 	ld bc,0
   73 D1:ACE4 4E -  -  -  	ld c,(hl);height
   74 D1:ACE5 09 -  -  -  	add hl,bc
   75 D1:ACE6 7E -  -  -  	ld a,(hl);total loops
   76 D1:ACE7 23 -  -  -  	inc hl
   77 D1:ACE8 4E -  -  -  	ld c,(hl);first gap length
   78 D1:ACE9 EB -  -  -  	ex de,hl
   79 D1:ACEA -  -  -  -  ;a = num loops, c = alphaLength,hl = vram
   80 D1:ACEA -  -  -  -  dfgs_loop:;gap, colors
   81 D1:ACEA 09 -  -  -  	add hl,bc;add alpha length
   82 D1:ACEB EB -  -  -  	ex de,hl;swap, hl is data, de is vram
   83 D1:ACEC 23 -  -  -  	inc hl
   84 D1:ACED 4E -  -  -  	ld c,(hl);get ldir length
   85 D1:ACEE 23 -  -  -  	inc hl
   86 D1:ACEF ED B0 -  -  	ldir
   87 D1:ACF1 4E -  -  -  	ld c,(hl);load c with next alpha length
   88 D1:ACF2 EB -  -  -  	ex de,hl;swap, hl is vram
   89 D1:ACF3 3D -  -  -  	dec a
   90 D1:ACF4 C2 EA AC D1 	jp nz,dfgs_loop
   91 D1:ACF8 C9 -  -  -  	ret
   92 D1:ACF9 -  -  -  -  	
   93 D1:ACF9 -  -  -  -  	
   94 D1:ACF9 -  -  -  -  	
   95 D1:ACF9 -  -  -  -  	
   96 D1:ACF9 -  -  -  -  
   97 D1:ACF9 -  -  -  -  
   98 D1:ACF9 -  -  -  -  ;hl = data, de = vram
   99 D1:ACF9 -  -  -  -  draw_slow_sprite_full:
  100 D1:ACF9 01 00 00 00 	ld bc,0
  101 D1:ACFD 4E -  -  -  	ld c,(hl);height
  102 D1:ACFE 09 -  -  -  	add hl,bc
  103 D1:ACFF 7E -  -  -  	ld a,(hl);num loops
  104 D1:AD00 D9 -  -  -  	exx
  105 D1:AD01 4F -  -  -  	ld c,a
  106 D1:AD02 D9 -  -  -  	exx
  107 D1:AD03 1B -  -  -  	dec de
  108 D1:AD04 -  -  -  -  	;hl = (gap length) -1 de = vram-1 c' = loops
  109 D1:AD04 -  -  -  -  dsfgs_line_loop:
  110 D1:AD04 23 -  -  -  	inc hl;gap length
  111 D1:AD05 4E -  -  -  	ld c,(hl);gap length
  112 D1:AD06 EB -  -  -  	ex de,hl;hl is vram
  113 D1:AD07 09 -  -  -  	add hl,bc;add aplha gap
  114 D1:AD08 EB -  -  -  	ex de,hl;hl is data
  115 D1:AD09 23 -  -  -  	inc hl;hl points to single pix mask
  116 D1:AD0A 1A -  -  -  	ld a,(de);vram data
  117 D1:AD0B A6 -  -  -  	and (hl)
  118 D1:AD0C 23 -  -  -  	inc hl;pixel data
  119 D1:AD0D B6 -  -  -  	or (hl)
  120 D1:AD0E 12 -  -  -  	ld (de),a
  121 D1:AD0F 23 -  -  -  	inc hl;ldir length
  122 D1:AD10 -  -  -  -  	
  123 D1:AD10 13 -  -  -  	inc de;move to next pixel
  124 D1:AD11 -  -  -  -  	
  125 D1:AD11 7E -  -  -  	ld a,(hl);ldir length
  126 D1:AD12 23 -  -  -  	inc hl;data
  127 D1:AD13 4F -  -  -  	ld c,a
  128 D1:AD14 B7 -  -  -  	or a
  129 D1:AD15 CA 1B AD D1 	jp z,dsfgs_ldir_skip
  130 D1:AD19 ED B0 -  -  	ldir
  131 D1:AD1B -  -  -  -  dsfgs_ldir_skip:
  132 D1:AD1B 1A -  -  -  	ld a,(de);vram data
  133 D1:AD1C A6 -  -  -  	and (hl)
  134 D1:AD1D 23 -  -  -  	inc hl;pixel data
  135 D1:AD1E B6 -  -  -  	or (hl)
  136 D1:AD1F 12 -  -  -  	ld (de),a
  137 D1:AD20 -  -  -  -  	
  138 D1:AD20 D9 -  -  -  	exx 
  139 D1:AD21 0D -  -  -  	dec c
  140 D1:AD22 D9 -  -  -  	exx
  141 D1:AD23 C2 04 AD D1 	jp nz,dsfgs_line_loop
  142 D1:AD27 C9 -  -  -  	ret
  143 D1:AD28 -  -  -  -  
  144 D1:AD28 -  -  -  -  
  145 D1:AD28 -  -  -  -  ;de = vram , hl = data, a = top lines to skip	
  146 D1:AD28 -  -  -  -  draw_slow_sprite_top_cut:
  147 D1:AD28 -  -  -  -  
  148 D1:AD28 E5 -  -  -  	push hl
  149 D1:AD29 01 00 00 00 	ld bc,0
  150 D1:AD2D 4F -  -  -  	ld c,a
  151 D1:AD2E 09 -  -  -  	add hl,bc
  152 D1:AD2F 7E -  -  -  	ld a,(hl);loops to skip
  153 D1:AD30 32 53 AD D1 	ld (dsstc_loops_skipped),a
  154 D1:AD34 D9 -  -  -  	exx
  155 D1:AD35 47 -  -  -  	ld b,a;loops to skip
  156 D1:AD36 D9 -  -  -  	exx
  157 D1:AD37 E1 -  -  -  	pop hl
  158 D1:AD38 4E -  -  -  	ld c,(hl)
  159 D1:AD39 09 -  -  -  	add hl,bc;total loops
  160 D1:AD3A 7E -  -  -  	ld a,(hl);total loops
  161 D1:AD3B 23 -  -  -  	inc hl;gap length
  162 D1:AD3C -  -  -  -  
  163 D1:AD3C -  -  -  -  ;hl = data start, b' = num loops,bc = 0
  164 D1:AD3C D9 -  -  -  	exx
  165 D1:AD3D -  -  -  -  slow_sprite_data_traverse:
  166 D1:AD3D D9 -  -  -  	exx
  167 D1:AD3E 4E -  -  -  	ld c,(hl);gap length
  168 D1:AD3F EB -  -  -  	ex de,hl;hl is vram
  169 D1:AD40 09 -  -  -  	add hl,bc
  170 D1:AD41 EB -  -  -  	ex de,hl
  171 D1:AD42 -  -  -  -  	
  172 D1:AD42 23 -  -  -  	inc hl
  173 D1:AD43 23 -  -  -  	inc hl
  174 D1:AD44 23 -  -  -  	inc hl;ldir length
  175 D1:AD45 4E -  -  -  	ld c,(hl)
  176 D1:AD46 09 -  -  -  	add hl,bc
  177 D1:AD47 EB -  -  -  	ex de,hl
  178 D1:AD48 09 -  -  -  	add hl,bc
  179 D1:AD49 EB -  -  -  	ex de,hl
  180 D1:AD4A 13 -  -  -  	inc de;single pix
  181 D1:AD4B 23 -  -  -  	inc hl
  182 D1:AD4C 23 -  -  -  	inc hl
  183 D1:AD4D 23 -  -  -  	inc hl;gap length
  184 D1:AD4E D9 -  -  -  	exx
  185 D1:AD4F 10 EC -  -  	djnz slow_sprite_data_traverse
  186 D1:AD51 D9 -  -  -  	exx
  187 D1:AD52 -  -  -  -  
  188 D1:AD52 -  -  -  -  dsstc_loops_skipped .equ $ + 1
  189 D1:AD52 D6 00 -  -  	sub a,0;loops skipped
  190 D1:AD54 D9 -  -  -  	exx
  191 D1:AD55 4F -  -  -  	ld c,a
  192 D1:AD56 D9 -  -  -  	exx
  193 D1:AD57 -  -  -  -  	
  194 D1:AD57 1B -  -  -  	dec de
  195 D1:AD58 2B -  -  -  	dec hl	
  196 D1:AD59 C3 04 AD D1 	jp dsfgs_line_loop
  197 D1:AD5D -  -  -  -  	
  198 D1:AD5D -  -  -  -  ;de = vram , hl = data, a = number lines to draw
  199 D1:AD5D -  -  -  -  draw_slow_sprite_bottom_cut:
  200 D1:AD5D 01 00 00 00 	ld bc,0
  201 D1:AD61 E5 -  -  -  	push hl
  202 D1:AD62 4F -  -  -  	ld c,a;height
  203 D1:AD63 09 -  -  -  	add hl,bc
  204 D1:AD64 7E -  -  -  	ld a,(hl);num loops
  205 D1:AD65 D9 -  -  -  	exx
  206 D1:AD66 4F -  -  -  	ld c,a
  207 D1:AD67 D9 -  -  -  	exx
  208 D1:AD68 E1 -  -  -  	pop hl
  209 D1:AD69 4E -  -  -  	ld c,(hl)
  210 D1:AD6A 09 -  -  -  	add hl,bc
  211 D1:AD6B -  -  -  -  
  212 D1:AD6B 1B -  -  -  	dec de
  213 D1:AD6C C3 04 AD D1 	jp dsfgs_line_loop
  214 D1:AD70 -  -  -  -  
  215 D1:AD70 -  -  -  -  
  216 D1:AD70 -  -  -  -  
  217 D1:AD70 -  -  -  -  
  218 D1:AD70 -  -  -  -  
  219 D1:AD70 -  -  -  -  
  220 D1:AD70 -  -  -  -  
  221 D1:AD70 -  -  -  -  
  222 D1:AD70 -  -  -  -  
  223 D1:AD70 -  -  -  -  
  224 D1:AD70 -  -  -  -  
  225 D1:AD70 -  -  -  -  
  226 D1:AD70 -  -  -  -  
  227 D1:AD70 -  -  -  -  
  228 D1:AD70 -  -  -  -  
  229 D1:AD70 -  -  -  -  
  230 D1:AD70 -  -  -  -  
  231 D1:AD70 -  -  -  -  
  232 D1:AD70 -  -  -  -  
  233 D1:AD70 -  -  -  -  
  234 D1:AD70 -  -  -  -  
  235 D1:AD70 -  -  -  -  
  236 D1:AD70 -  -  -  -  
  237 D1:AD70 -  -  -  -  
  238 D1:AD70 -  -  -  -  
  239 D1:AD70 -  -  -  -  
  240 D1:AD70 -  -  -  -  
  241 D1:AD70 -  -  -  -  
  242 D1:AD70 -  -  -  -  
  243 D1:AD70 -  -  -  -  
  244 D1:AD70 -  -  -  -  
  245 D1:AD70 -  -  -  -  
  246 D1:AD70 -  -  -  -  
  247 D1:AD70 -  -  -  -  
  248 D1:AD70 -  -  -  -  
  249 D1:AD70 -  -  -  -   
  250 D1:AD70 -  -  -  -  
  251 D1:AD70 -  -  -  -  
  252 D1:AD70 -  -  -  -  
  253 D1:AD70 -  -  -  -  
  254 D1:AD70 -  -  -  -  
  255 D1:AD70 -  -  -  -  
  256 D1:AD70 -  -  -  -  
  257 D1:AD70 -  -  -  -  
  258 D1:AD70 -  -  -  -  
  259 D1:AD70 -  -  -  -  
  260 D1:AD70 -  -  -  -  
  261 D1:AD70 -  -  -  -  
  262 D1:AD70 -  -  -  -  
  263 D1:AD70 -  -  -  -  
  264 D1:AD70 -  -  -  -  
  265 D1:AD70 -  -  -  -  
  266 D1:AD70 -  -  -  -  
  267 D1:AD70 -  -  -  -  
  268 D1:AD70 -  -  -  -  
  269 D1:AD70 -  -  -  -  
  270 D1:AD70 -  -  -  -  
  271 D1:AD70 -  -  -  -  
  272 D1:AD70 -  -  -  -  
  273 D1:AD70 -  -  -  -  
  274 D1:AD70 -  -  -  -  
  275 D1:AD70 -  -  -  -  
  276 D1:AD70 -  -  -  -  
  277 D1:AD70 -  -  -  -  
  278 D1:AD70 -  -  -  -  
  279 D1:AD70 -  -  -  -  
  280 D1:AD70 -  -  -  -  
  281 D1:AD70 -  -  -  -  
  282 D1:AD70 -  -  -  -  
  283 D1:AD70 -  -  -  -  
  284 D1:AD70 -  -  -  -  
  285 D1:AD70 -  -  -  -  
  286 D1:AD70 -  -  -  -  
  287 D1:AD70 -  -  -  -  
  288 D1:AD70 -  -  -  -  
  289 D1:AD70 -  -  -  -  
  290 D1:AD70 -  -  -  -  
  291 D1:AD70 -  -  -  -  
  292 D1:AD70 -  -  -  -  
  293 D1:AD70 -  -  -  -  
  294 D1:AD70 -  -  -  -  
  295 D1:AD70 -  -  -  -  
  296 D1:AD70 -  -  -  -  
  297 D1:AD70 -  -  -  -  
  298 D1:AD70 -  -  -  -  
  299 D1:AD70 -  -  -  -  
  300 D1:AD70 -  -  -  -  
  301 D1:AD70 -  -  -  -  
  302 D1:AD70 -  -  -  -  
  303 D1:AD70 -  -  -  -  
  304 D1:AD70 -  -  -  -  
  305 D1:AD70 -  -  -  -  	
  306 D1:AD70 -  -  -  -  	
Listing for file "ascent.asm"
  242 D1:AD70 -  -  -  -  #include "spriteDecompress.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\spriteDecompress.txt"
    1 D1:AD70 -  -  -  -  
    2 D1:AD70 -  -  -  -  
    3 D1:AD70 -  -  -  -  ;hl = sprite data start, de = main data decompress location de' = loops/line data location
    4 D1:AD70 -  -  -  -  sprite_decompress:
    5 D1:AD70 3E D2 -  -  	ld a,%11010010;jp nc 
    6 D1:AD72 32 78 AE D1 	ld (sdcomp_end_reached_flag),a;reset end reached flag
    7 D1:AD76 3E 00 -  -  	ld a,0
    8 D1:AD78 32 88 AE D1 	ld (sdcomp_loop_counter) ,a;reset loop counter
    9 D1:AD7C CD A5 B2 D1 	call sdcomp_reset_noalpha
   10 D1:AD80 -  -  -  -  ;set bpc mode 
   11 D1:AD80 CB 7E -  -  	bit 7,(hl)
   12 D1:AD82 C4 51 B1 D1 	call nz,sdcomp_set_4bpp 
   13 D1:AD86 CB 76 -  -  	bit 6,(hl)
   14 D1:AD88 C4 A4 B1 D1 	call nz,sdcomp_set_3bpp 
   15 D1:AD8C CB 6E -  -  	bit 5,(hl)
   16 D1:AD8E C4 F5 B1 D1 	call nz,sdcomp_set_2bpp 
   17 D1:AD92 CB 66 -  -  	bit 4,(hl)
   18 D1:AD94 C4 3E B2 D1 	call nz,sdcomp_set_1bpp 
   19 D1:AD98 CB 5E -  -  	bit 3,(hl)
   20 D1:AD9A C4 7D B2 D1 	call nz,sdcomp_set_0bpp 
   21 D1:AD9E CB 56 -  -  	bit 2,(hl)
   22 D1:ADA0 C4 94 B2 D1 	call nz,sdcomp_set_noalpha
   23 D1:ADA4 23 -  -  -  	inc hl
   24 D1:ADA5 -  -  -  -  	
   25 D1:ADA5 -  -  -  -  	
   26 D1:ADA5 -  -  -  -  ;set zeroes btwn lines
   27 D1:ADA5 7E -  -  -  	ld a,(hl);width,in px
   28 D1:ADA6 E5 -  -  -  	push hl 
   29 D1:ADA7 21 40 01 00 	ld hl,320
   30 D1:ADAB 01 00 00 00 	ld bc,0
   31 D1:ADAF 4F -  -  -  	ld c,a 
   32 D1:ADB0 37 -  -  -  	scf 
   33 D1:ADB1 3F -  -  -  	ccf 
   34 D1:ADB2 ED 42 -  -  	sbc hl,bc;320 - width
   35 D1:ADB4 22 BA AF D1 	ld (sdcomp_zeroes_between_lines),hl
   36 D1:ADB8 E1 -  -  -  	pop hl 
   37 D1:ADB9 47 -  -  -  	ld b,a;width
   38 D1:ADBA 08 -  -  -  	ex af,af' ;'
   39 D1:ADBB 78 -  -  -  	ld a,b
   40 D1:ADBC 32 EE AF D1 	ld (sdcomp_sprite_width),a
   41 D1:ADC0 08 -  -  -  	ex af,af' ;'
   42 D1:ADC1 -  -  -  -  
   43 D1:ADC1 -  -  -  -  	
   44 D1:ADC1 37 -  -  -  	scf 
   45 D1:ADC2 -  -  -  -  sdcomp_bg_sprite_1 .equ $
   46 D1:ADC2 DA D6 AD D1 	jp c,sdcomp_bg_sprite_1_skip
   47 D1:ADC6 -  -  -  -  	;a holds width 
   48 D1:ADC6 -  -  -  -  sdcomp_offset_BG .equ $	
   49 D1:ADC6 00 -  -  -  	nop ; inc a  
   50 D1:ADC7 CB 47 -  -  	bit 0,a ;round up a 
   51 D1:ADC9 CA CE AD D1 	jp z,sdcomp_bg_sprite_1_round_skip
   52 D1:ADCD 3C -  -  -  	inc a 
   53 D1:ADCE -  -  -  -  sdcomp_bg_sprite_1_round_skip:
   54 D1:ADCE 12 -  -  -  	ld (de),a ;load width 
   55 D1:ADCF 13 -  -  -  	inc de
   56 D1:ADD0 3E 00 -  -  	ld a,0;nop 
   57 D1:ADD2 32 C6 AD D1 	ld (sdcomp_offset_BG),a 
   58 D1:ADD6 -  -  -  -  sdcomp_bg_sprite_1_skip:
   59 D1:ADD6 -  -  -  -  
   60 D1:ADD6 -  -  -  -  
   61 D1:ADD6 3E 00 -  -  	ld a,0;nop 
   62 D1:ADD8 32 C6 AD D1 	ld (sdcomp_offset_BG),a 
   63 D1:ADDC -  -  -  -  
   64 D1:ADDC -  -  -  -  
   65 D1:ADDC 23 -  -  -  	inc hl;to height
   66 D1:ADDD 7E -  -  -  	ld a,(hl);height
   67 D1:ADDE 32 A8 AF D1 	ld (sdcomp_lines_remaining),a;load remaining lines
   68 D1:ADE2 -  -  -  -  	
   69 D1:ADE2 37 -  -  -  	scf 
   70 D1:ADE3 -  -  -  -  sdcomp_bg_sprite_2 .equ $
   71 D1:ADE3 D2 E9 AD D1 	jp nc,sdcomp_bg_sprite_2_skip
   72 D1:ADE7 12 -  -  -  	ld (de),a;height
   73 D1:ADE8 13 -  -  -  	inc de
   74 D1:ADE9 -  -  -  -  sdcomp_bg_sprite_2_skip:
   75 D1:ADE9 D5 -  -  -  	push de;loop/line data start 
   76 D1:ADEA D9 -  -  -  	exx;to shadow
   77 D1:ADEB D1 -  -  -  	pop de ;de' is loop/line data
   78 D1:ADEC D9 -  -  -  	exx
   79 D1:ADED -  -  -  -  
   80 D1:ADED -  -  -  -  ;find start of color data
   81 D1:ADED 23 -  -  -  	inc hl;alpha data start
   82 D1:ADEE E5 -  -  -  	push hl
   83 D1:ADEF -  -  -  -  	
   84 D1:ADEF 37 -  -  -  	scf
   85 D1:ADF0 -  -  -  -  sdcomp_no_alpha_1 .equ $
   86 D1:ADF0 D2 09 AE D1 	jp nc, sdcomp_no_alpha_1_skip
   87 D1:ADF4 E5 -  -  -  	push hl
   88 D1:ADF5 67 -  -  -  	ld h,a;height
   89 D1:ADF6 68 -  -  -  	ld l,b;width
   90 D1:ADF7 ED 6C -  -  	mlt hl;number of pixels
   91 D1:ADF9 2B -  -  -  	dec hl
   92 D1:ADFA CB 3C -  -  	srl h
   93 D1:ADFC CB 1D -  -  	rr l
   94 D1:ADFE CB 3C -  -  	srl h
   95 D1:AE00 CB 1D -  -  	rr l 
   96 D1:AE02 CB 3C -  -  	srl h 
   97 D1:AE04 CB 1D -  -  	rr l ;divide by 8
   98 D1:AE06 23 -  -  -  	inc hl 
   99 D1:AE07 C1 -  -  -  	pop bc
  100 D1:AE08 09 -  -  -  	add hl,bc;hl holds start of color data
  101 D1:AE09 -  -  -  -  sdcomp_no_alpha_1_skip:
  102 D1:AE09 -  -  -  -  
  103 D1:AE09 -  -  -  -  	;HL POINTING TO COLOR DATA
  104 D1:AE09 -  -  -  -  
  105 D1:AE09 -  -  -  -  	
  106 D1:AE09 F5 -  -  -  	push af;save height
  107 D1:AE0A -  -  -  -  	
  108 D1:AE0A 37 -  -  -  	scf 
  109 D1:AE0B -  -  -  -  sdcomp_get_indexed_color_1bpc .equ $ 
  110 D1:AE0B DA 15 AE D1 	jp c,sdcomp_get_indexed_color_1bpc_skip
  111 D1:AE0F 7E -  -  -  	ld a,(hl);color data 
  112 D1:AE10 32 6B B0 D1 	ld (sdcomp_indexed_color_data),a 
  113 D1:AE14 23 -  -  -  	inc hl 
  114 D1:AE15 -  -  -  -  sdcomp_get_indexed_color_1bpc_skip:
  115 D1:AE15 -  -  -  -  
  116 D1:AE15 37 -  -  -  	scf 
  117 D1:AE16 -  -  -  -  sdcomp_get_indexed_color_2bpc .equ $ 
  118 D1:AE16 DA 20 AE D1 	jp c,sdcomp_get_indexed_color_2bpc_skip
  119 D1:AE1A 7E -  -  -  	ld a,(hl);color data 
  120 D1:AE1B 32 6C B0 D1 	ld (sdcomp_indexed_color_data+1),a 
  121 D1:AE1F 23 -  -  -  	inc hl 
  122 D1:AE20 -  -  -  -  sdcomp_get_indexed_color_2bpc_skip:
  123 D1:AE20 -  -  -  -  
  124 D1:AE20 37 -  -  -  	scf 
  125 D1:AE21 -  -  -  -  sdcomp_get_indexed_color_3bpc .equ $ 
  126 D1:AE21 DA 31 AE D1 	jp c,sdcomp_get_indexed_color_3bpc_skip
  127 D1:AE25 7E -  -  -  	ld a,(hl);color data 
  128 D1:AE26 32 6D B0 D1 	ld (sdcomp_indexed_color_data+2),a 
  129 D1:AE2A 23 -  -  -  	inc hl 
  130 D1:AE2B 7E -  -  -  	ld a,(hl);color data 
  131 D1:AE2C 32 6E B0 D1 	ld (sdcomp_indexed_color_data+3),a 
  132 D1:AE30 23 -  -  -  	inc hl 
  133 D1:AE31 -  -  -  -  sdcomp_get_indexed_color_3bpc_skip:
  134 D1:AE31 -  -  -  -  
  135 D1:AE31 F1 -  -  -  	pop af
  136 D1:AE32 EB -  -  -  	ex de,hl
  137 D1:AE33 01 00 00 00 	ld bc,0
  138 D1:AE37 4F -  -  -  	ld c,a;height 
  139 D1:AE38 09 -  -  -  	add hl,bc
  140 D1:AE39 EB -  -  -  	ex de,hl;de points to data write location
  141 D1:AE3A -  -  -  -  	
  142 D1:AE3A -  -  -  -  	
  143 D1:AE3A D9 -  -  -  	exx;to shadow 
  144 D1:AE3B E1 -  -  -  	pop hl;alpha data	
  145 D1:AE3C -  -  -  -  
  146 D1:AE3C -  -  -  -  	;HL IS POINTING TO ALPHA DATA
  147 D1:AE3C 0E 80 -  -  	ld c,%10000000;alpha mask
  148 D1:AE3E D9 -  -  -  	exx;out 
  149 D1:AE3F 0E 80 -  -  	ld c,%10000000;color mask
  150 D1:AE41 -  -  -  -  	
  151 D1:AE41 -  -  -  -  	
  152 D1:AE41 -  -  -  -  	
  153 D1:AE41 37 -  -  -  	scf 
  154 D1:AE42 -  -  -  -  sdcomp_flip_1 .equ $
  155 D1:AE42 DA 62 AE D1 	jp c,sdcomp_find_gap_length;continue if no flip
  156 D1:AE46 -  -  -  -  
  157 D1:AE46 D9 -  -  -  	exx;to shadow 
  158 D1:AE47 2B -  -  -  	dec hl;dec alpha pointer
  159 D1:AE48 22 8C B0 D1 	ld (sdcomp_alpha_data_line_end_byte),hl 
  160 D1:AE4C 3E 01 -  -  	ld a,%00000001;alpha mask
  161 D1:AE4E 32 90 B0 D1 	ld (sdcomp_alpha_data_line_end_mask),a 
  162 D1:AE52 D9 -  -  -  	exx ;out 
  163 D1:AE53 2B -  -  -  	dec hl;dec color pointer
  164 D1:AE54 22 85 B0 D1 	ld (sdcomp_color_data_line_end_byte),hl 
  165 D1:AE58 3E 01 -  -  	ld a,%00000001;color mask
  166 D1:AE5A 32 89 B0 D1 	ld (sdcomp_color_data_line_end_mask),a 
  167 D1:AE5E -  -  -  -  	
  168 D1:AE5E -  -  -  -  
  169 D1:AE5E -  -  -  -  	
  170 D1:AE5E -  -  -  -  	
  171 D1:AE5E CD 84 B0 D1 	call sdcomp_traverse_line_data	
  172 D1:AE62 -  -  -  -  
  173 D1:AE62 -  -  -  -  ;START OF LOOP===================================================================================================
  174 D1:AE62 -  -  -  -  ;add amount to get from ending pixels to first nonzero pair
  175 D1:AE62 -  -  -  -  sdcomp_find_gap_length:
  176 D1:AE62 37 -  -  -  	scf 
  177 D1:AE63 -  -  -  -  sdcomp_bg_sprite_3 .equ $
  178 D1:AE63 D2 00 B3 D1 	jp nc,sdcomp_bg_sprite_routine
  179 D1:AE67 -  -  -  -  	
  180 D1:AE67 3E D2 -  -  	ld a,%11010010;jp nc
  181 D1:AE69 32 23 B3 D1 	ld (sdcomp_offset_BG_2),a;clear bg offset if not bg
  182 D1:AE6D -  -  -  -  	
  183 D1:AE6D D9 -  -  -  	exx ;toshadow
  184 D1:AE6E 06 00 -  -  	ld b,0;pairs found, always < 255 
  185 D1:AE70 -  -  -  -  sdcomp_add_1_gap_length .equ $
  186 D1:AE70 00 -  -  -  	nop
  187 D1:AE71 3E 00 -  -  	ld a,0;nop
  188 D1:AE73 32 70 AE D1 	ld (sdcomp_add_1_gap_length),a
  189 D1:AE77 -  -  -  -  sdcomp_find_gap_length_loop:
  190 D1:AE77 -  -  -  -  	
  191 D1:AE77 37 -  -  -  	scf 
  192 D1:AE78 -  -  -  -  sdcomp_end_reached_flag .equ $;check if end of sprite reached
  193 D1:AE78 D2 7D B0 D1 	jp nc,sdcomp_end
  194 D1:AE7C -  -  -  -  
  195 D1:AE7C CD 55 AF D1 	call sdcomp_get_next_alpha_pair
  196 D1:AE80 -  -  -  -  	;a holds alpha data 
  197 D1:AE80 04 -  -  -  	inc b
  198 D1:AE81 B7 -  -  -  	or a 
  199 D1:AE82 CA 77 AE D1 	jp z,sdcomp_find_gap_length_loop
  200 D1:AE86 -  -  -  -  	;END OF LOOP, B HOLDS NUMBER OF 00 PAIRS  +1
  201 D1:AE86 -  -  -  -  		
  202 D1:AE86 -  -  -  -  	
  203 D1:AE86 F5 -  -  -  	push af;saves leading pixel alpha data
  204 D1:AE87 -  -  -  -  	;inc loop counter 
  205 D1:AE87 -  -  -  -  sdcomp_loop_counter .equ $ + 1
  206 D1:AE87 3E 00 -  -  	ld a,0;inc number of loops
  207 D1:AE89 3C -  -  -  	inc a 
  208 D1:AE8A 32 88 AE D1 	ld (sdcomp_loop_counter),a
  209 D1:AE8E -  -  -  -  	
  210 D1:AE8E 78 -  -  -  	ld a,b 
  211 D1:AE8F D9 -  -  -  	exx;out of shadow 
  212 D1:AE90 12 -  -  -  	ld (de),a;GAP LENGTH 
  213 D1:AE91 13 -  -  -  	inc de 
  214 D1:AE92 D9 -  -  -  	exx;into shadow 	
  215 D1:AE93 -  -  -  -  	
  216 D1:AE93 F1 -  -  -  	pop af
  217 D1:AE94 37 -  -  -  	scf
  218 D1:AE95 -  -  -  -  sdcomp_fast_sprite_1 .equ $ 
  219 D1:AE95 D2 C8 AE D1 	jp nc,sdcomp_ldir_start ;jp c if fast move to ldir loop 
  220 D1:AE99 -  -  -  -  
  221 D1:AE99 -  -  -  -  ;LEADING PIXELS
  222 D1:AE99 -  -  -  -  	;a holds alpha data after gap, 11 01 10
  223 D1:AE99 D9 -  -  -  	exx;out of shadow
  224 D1:AE9A D5 -  -  -  	push de 
  225 D1:AE9B -  -  -  -  	
  226 D1:AE9B 47 -  -  -  	ld b,a;save for later
  227 D1:AE9C CB 67 -  -  	bit 4,a ;check if first pixel has color 
  228 D1:AE9E 3E 00 -  -  	ld a,0
  229 D1:AEA0 16 FF -  -  	ld d,%11111111;assuming no colors 
  230 D1:AEA2 CA AC AE D1 	jp z,sdcomp_leading_pixel_first_skip
  231 D1:AEA6 -  -  -  -  	;has first color
  232 D1:AEA6 16 F0 -  -  	ld d,%11110000;save second pixel of bg 
  233 D1:AEA8 CD 78 B0 D1 	call sdcomp_get_next_color_ending_nibble
  234 D1:AEAC -  -  -  -  sdcomp_leading_pixel_first_skip:
  235 D1:AEAC -  -  -  -  	;a is either $00 or $0color1
  236 D1:AEAC -  -  -  -  	
  237 D1:AEAC 1E FF -  -  	ld e,%11111111;assuming no colors
  238 D1:AEAE -  -  -  -  	
  239 D1:AEAE CB 40 -  -  	bit 0,b;check second pixel alpha
  240 D1:AEB0 47 -  -  -  	ld b,a;save for later 
  241 D1:AEB1 3E 00 -  -  	ld a,0
  242 D1:AEB3 CA BD AE D1 	jp z,sdcomp_leading_pixel_second_skip;
  243 D1:AEB7 -  -  -  -  	;has second color 
  244 D1:AEB7 CD 6F B0 D1 	call sdcomp_get_next_color_leading_nibble
  245 D1:AEBB -  -  -  -  	;a = color2 0 
  246 D1:AEBB 1E 0F -  -  	ld e,%00001111;save first pixel of bg
  247 D1:AEBD -  -  -  -  	
  248 D1:AEBD -  -  -  -  sdcomp_leading_pixel_second_skip:
  249 D1:AEBD -  -  -  -  	;a is either 00 or c2 0 
  250 D1:AEBD -  -  -  -  	;b is either 00 or 0 c1 
  251 D1:AEBD B0 -  -  -  	or b 
  252 D1:AEBE 47 -  -  -  	ld b,a;final color data
  253 D1:AEBF 7A -  -  -  	ld a,d 
  254 D1:AEC0 A3 -  -  -  	and e ;final mask data 
  255 D1:AEC1 -  -  -  -  	
  256 D1:AEC1 D1 -  -  -  	pop de;return to pointer 
  257 D1:AEC2 -  -  -  -  	
  258 D1:AEC2 12 -  -  -  	ld (de),a;write mask data 
  259 D1:AEC3 13 -  -  -  	inc de 
  260 D1:AEC4 78 -  -  -  	ld a,b;color data 
  261 D1:AEC5 12 -  -  -  	ld (de),a;write color data 
  262 D1:AEC6 13 -  -  -  	inc de 
  263 D1:AEC7 D9 -  -  -  	exx;into shadow 
  264 D1:AEC8 -  -  -  -  	
  265 D1:AEC8 -  -  -  -  sdcomp_ldir_start:
  266 D1:AEC8 -  -  -  -  ;CHECK FOR LDIR 
  267 D1:AEC8 06 00 -  -  	ld b,0;pairs found 
  268 D1:AECA -  -  -  -  sdcomp_ldir_loop:
  269 D1:AECA CD 55 AF D1 	call sdcomp_get_next_alpha_pair
  270 D1:AECE 04 -  -  -  	inc b
  271 D1:AECF EE FF -  -  	xor %11111111;flip bits
  272 D1:AED1 CA CA AE D1 	jp z,sdcomp_ldir_loop;alpha data was 11
  273 D1:AED5 -  -  -  -  	;b holds pairs found+1
  274 D1:AED5 -  -  -  -  	
  275 D1:AED5 37 -  -  -  	scf 
  276 D1:AED6 -  -  -  -  sdcomp_fast_sprite_2 .equ $
  277 D1:AED6 D2 F3 AE D1 	jp nc,sdcomp_ldir_write
  278 D1:AEDA -  -  -  -  	;fast mode 
  279 D1:AEDA -  -  -  -  	;b holds ldir length 
  280 D1:AEDA -  -  -  -  	
  281 D1:AEDA -  -  -  -  sdcomp_ldir_not_fast:
  282 D1:AEDA EE FF -  -  	xor %11111111;flip back
  283 D1:AEDC -  -  -  -  	;a holds first non 11 pair 
  284 D1:AEDC 05 -  -  -  	dec b ;b holds pairs found
  285 D1:AEDD CA 02 AF D1 	jp z,sdcomp_no_ldir;no pairs found,no ldir length
  286 D1:AEE1 B7 -  -  -  	or a
  287 D1:AEE2 C2 F3 AE D1 	jp nz,sdcomp_ldir_write;ends not in 00, has single ending pixel
  288 D1:AEE6 -  -  -  -  	;ends in 00,ending pixels will be 11 
  289 D1:AEE6 -  -  -  -  	;must add 1 to next gap length, have already read first 00
  290 D1:AEE6 3E 04 -  -  	ld a,%00000100;inc b 
  291 D1:AEE8 32 70 AE D1 	ld (sdcomp_add_1_gap_length),a 
  292 D1:AEEC 3E FF -  -  	ld a,$ff;ending pixels 11
  293 D1:AEEE -  -  -  -  	
  294 D1:AEEE 05 -  -  -  	dec b;reduce length by 1, final pair is end pixels
  295 D1:AEEF CA 02 AF D1 	jp z,sdcomp_no_ldir;no ldir length,ending pixels is 11 
  296 D1:AEF3 -  -  -  -  	;b holds ldir length 
  297 D1:AEF3 -  -  -  -  	
  298 D1:AEF3 -  -  -  -  ;b holds ldir length, a holds ending pixels
  299 D1:AEF3 -  -  -  -  sdcomp_ldir_write:
  300 D1:AEF3 F5 -  -  -  	push af;save ending pixels
  301 D1:AEF4 78 -  -  -  	ld a,b
  302 D1:AEF5 D9 -  -  -  	exx ;out 
  303 D1:AEF6 12 -  -  -  	ld (de),a;write ldir length
  304 D1:AEF7 13 -  -  -  	inc de 
  305 D1:AEF8 CD 41 AF D1 	call sdcomp_write_ldir_data_loop
  306 D1:AEFC D9 -  -  -  	exx ;toshadow
  307 D1:AEFD F1 -  -  -  	pop af;return ending pixels
  308 D1:AEFE -  -  -  -  	
  309 D1:AEFE -  -  -  -  	
  310 D1:AEFE C3 0A AF D1 	jp sdcomp_write_end_pixels
  311 D1:AF02 -  -  -  -  sdcomp_no_ldir:;no ldir length, a holds ending pixels,00,10,01,11
  312 D1:AF02 F5 -  -  -  	push af;save end pixels
  313 D1:AF03 -  -  -  -  	
  314 D1:AF03 D9 -  -  -  	exx;out of shadow
  315 D1:AF04 3E 00 -  -  	ld a,0
  316 D1:AF06 12 -  -  -  	ld (de),a 
  317 D1:AF07 13 -  -  -  	inc de 
  318 D1:AF08 D9 -  -  -  	exx 
  319 D1:AF09 F1 -  -  -  	pop af;return ending pixels
  320 D1:AF0A -  -  -  -  
  321 D1:AF0A -  -  -  -  
  322 D1:AF0A -  -  -  -  ;WRITE ENDING PIXELS 
  323 D1:AF0A -  -  -  -  
  324 D1:AF0A -  -  -  -  sdcomp_write_end_pixels:;a holds end pixels
  325 D1:AF0A -  -  -  -  	
  326 D1:AF0A D9 -  -  -  	exx;out of shadow
  327 D1:AF0B -  -  -  -  	
  328 D1:AF0B 37 -  -  -  	scf 
  329 D1:AF0C -  -  -  -  sdcomp_fast_sprite_3 .equ $
  330 D1:AF0C D2 62 AE D1 	jp nc,sdcomp_find_gap_length;if fast, back to gap length
  331 D1:AF10 -  -  -  -  	
  332 D1:AF10 -  -  -  -  	
  333 D1:AF10 D5 -  -  -  	push de 
  334 D1:AF11 -  -  -  -  	
  335 D1:AF11 47 -  -  -  	ld b,a;save for later
  336 D1:AF12 CB 67 -  -  	bit 4,a ;check if first pixel has color 
  337 D1:AF14 3E 00 -  -  	ld a,0
  338 D1:AF16 16 FF -  -  	ld d,%11111111;assuming no colors 
  339 D1:AF18 CA 22 AF D1 	jp z,sdcomp_ending_pixel_first_skip
  340 D1:AF1C -  -  -  -  	;has first color
  341 D1:AF1C 16 F0 -  -  	ld d,%11110000;save second pixel of bg 
  342 D1:AF1E CD 78 B0 D1 	call sdcomp_get_next_color_ending_nibble
  343 D1:AF22 -  -  -  -  sdcomp_ending_pixel_first_skip:
  344 D1:AF22 -  -  -  -  	;a is either $00 or $0color1
  345 D1:AF22 -  -  -  -  	
  346 D1:AF22 1E FF -  -  	ld e,%11111111;assuming no colors
  347 D1:AF24 -  -  -  -  	
  348 D1:AF24 CB 40 -  -  	bit 0,b;check second pixel alpha
  349 D1:AF26 47 -  -  -  	ld b,a;save for later 
  350 D1:AF27 3E 00 -  -  	ld a,0
  351 D1:AF29 CA 33 AF D1 	jp z,sdcomp_ending_pixel_second_skip;
  352 D1:AF2D -  -  -  -  	;has second color 
  353 D1:AF2D CD 6F B0 D1 	call sdcomp_get_next_color_leading_nibble
  354 D1:AF31 -  -  -  -  	;a = color2 0 
  355 D1:AF31 1E 0F -  -  	ld e,%00001111;save first pixel of bg
  356 D1:AF33 -  -  -  -  	
  357 D1:AF33 -  -  -  -  sdcomp_ending_pixel_second_skip:
  358 D1:AF33 -  -  -  -  	;a is either 00 or c2 0 
  359 D1:AF33 -  -  -  -  	;b is either 00 or 0 c1 
  360 D1:AF33 B0 -  -  -  	or b 
  361 D1:AF34 47 -  -  -  	ld b,a;final color data
  362 D1:AF35 7A -  -  -  	ld a,d 
  363 D1:AF36 A3 -  -  -  	and e ;final mask data 
  364 D1:AF37 -  -  -  -  	
  365 D1:AF37 D1 -  -  -  	pop de;return to pointer 
  366 D1:AF38 -  -  -  -  	
  367 D1:AF38 12 -  -  -  	ld (de),a;write mask data 
  368 D1:AF39 13 -  -  -  	inc de 
  369 D1:AF3A 78 -  -  -  	ld a,b;color data 
  370 D1:AF3B 12 -  -  -  	ld (de),a;write color data 
  371 D1:AF3C 13 -  -  -  	inc de 
  372 D1:AF3D -  -  -  -  	
  373 D1:AF3D -  -  -  -  	
  374 D1:AF3D C3 62 AE D1 	jp sdcomp_find_gap_length;BACK TO START
  375 D1:AF41 -  -  -  -  	
  376 D1:AF41 -  -  -  -  	
  377 D1:AF41 -  -  -  -  
  378 D1:AF41 -  -  -  -  
  379 D1:AF41 -  -  -  -  
  380 D1:AF41 -  -  -  -  ;hl/c is color data, de is ldir write pos, b' is ldir length, not in shadow 
  381 D1:AF41 -  -  -  -  sdcomp_write_ldir_data_loop:
  382 D1:AF41 CD 78 B0 D1 	call sdcomp_get_next_color_ending_nibble	
  383 D1:AF45 47 -  -  -  	ld b,a;first pixel
  384 D1:AF46 CD 6F B0 D1 	call sdcomp_get_next_color_leading_nibble
  385 D1:AF4A B0 -  -  -  	or b
  386 D1:AF4B -  -  -  -  	
  387 D1:AF4B -  -  -  -  	
  388 D1:AF4B 12 -  -  -  	ld (de),a;write color data
  389 D1:AF4C 13 -  -  -  	inc de
  390 D1:AF4D D9 -  -  -  	exx;to shadow
  391 D1:AF4E 05 -  -  -  	dec b;ldir length counter
  392 D1:AF4F D9 -  -  -  	exx
  393 D1:AF50 C2 41 AF D1 	jp nz,sdcomp_write_ldir_data_loop
  394 D1:AF54 C9 -  -  -  	ret
  395 D1:AF55 -  -  -  -  	
  396 D1:AF55 -  -  -  -  	
  397 D1:AF55 -  -  -  -  	
  398 D1:AF55 -  -  -  -  ;in shadow,returns a $FF,$0F,$F0,$00
  399 D1:AF55 -  -  -  -  sdcomp_get_next_alpha_pair:
  400 D1:AF55 CD 7E AF D1 	call sdcomp_get_next_alpha_bit
  401 D1:AF59 B7 -  -  -  	or a 
  402 D1:AF5A CA 64 AF D1 	jp z,sdcomp_get_next_alpha_pair0
  403 D1:AF5E 3E F0 -  -  	ld a,$F0;FIRST BIT WAS 1
  404 D1:AF60 C3 66 AF D1 	jp sdcomp_get_next_alpha_pair1
  405 D1:AF64 -  -  -  -  sdcomp_get_next_alpha_pair0:
  406 D1:AF64 3E 00 -  -  	ld a,0
  407 D1:AF66 -  -  -  -  sdcomp_get_next_alpha_pair1:
  408 D1:AF66 32 7C AF D1 	ld (sdcomp_get_next_alpha_pair_or),a 
  409 D1:AF6A -  -  -  -  	
  410 D1:AF6A CD 7E AF D1 	call sdcomp_get_next_alpha_bit
  411 D1:AF6E B7 -  -  -  	or a 
  412 D1:AF6F CA 79 AF D1 	jp z,sdcomp_get_next_alpha_pair2
  413 D1:AF73 3E 0F -  -  	ld a,$0F;SECOND BIT WAS 1
  414 D1:AF75 C3 7B AF D1 	jp sdcomp_get_next_alpha_pair3
  415 D1:AF79 -  -  -  -  sdcomp_get_next_alpha_pair2:
  416 D1:AF79 3E 00 -  -  	ld a,0;SECOND BIT WAS 0
  417 D1:AF7B -  -  -  -  sdcomp_get_next_alpha_pair3:	
  418 D1:AF7B -  -  -  -  sdcomp_get_next_alpha_pair_or .equ $ + 1
  419 D1:AF7B F6 00 -  -  	or 0;AND WITH FIRST BIT 
  420 D1:AF7D -  -  -  -  	
  421 D1:AF7D C9 -  -  -  	ret 
  422 D1:AF7E -  -  -  -  
  423 D1:AF7E -  -  -  -  
  424 D1:AF7E -  -  -  -  ;in shadow
  425 D1:AF7E -  -  -  -  sdcomp_get_next_alpha_bit:
  426 D1:AF7E -  -  -  -  	
  427 D1:AF7E 37 -  -  -  	scf
  428 D1:AF7F -  -  -  -  sdcomp_bit_offset .equ $ ;jp nc for offset
  429 D1:AF7F DA 8C AF D1 	jp c,sdcomp_bit_offset_skip
  430 D1:AF83 3E DA -  -  	ld a,%11011010;jp c 
  431 D1:AF85 32 7F AF D1 	ld (sdcomp_bit_offset),a
  432 D1:AF89 3E 00 -  -  	ld a,0
  433 D1:AF8B C9 -  -  -  	ret ;return 0 first bit
  434 D1:AF8C -  -  -  -  sdcomp_bit_offset_skip:;skip bit offset
  435 D1:AF8C -  -  -  -  	;CHECKS IF OUTSIDE OF SPRITE,VIRTUAL 0s
  436 D1:AF8C 08 -  -  -  	ex af,af' ;'
  437 D1:AF8D B7 -  -  -  	or a
  438 D1:AF8E CA C5 AF D1 	jp z,sdcomp_line_end
  439 D1:AF92 08 -  -  -  	ex af,af' ;'
  440 D1:AF93 -  -  -  -  
  441 D1:AF93 -  -  -  -  	;LOAD NEXT BIT
  442 D1:AF93 -  -  -  -  	
  443 D1:AF93 7E -  -  -  	ld a,(hl)
  444 D1:AF94 A1 -  -  -  	and c 
  445 D1:AF95 CD F3 AF D1 	call sdcomp_next_in_bitstream;incs bitstream
  446 D1:AF99 -  -  -  -  	
  447 D1:AF99 37 -  -  -  	scf 
  448 D1:AF9A -  -  -  -  sdcomp_no_alpha_2 .equ $
  449 D1:AF9A DA A0 AF D1 	jp c,sdcomp_no_alpha_skip
  450 D1:AF9E 3E 01 -  -  	ld a,1
  451 D1:AFA0 -  -  -  -  sdcomp_no_alpha_skip:
  452 D1:AFA0 -  -  -  -  	
  453 D1:AFA0 -  -  -  -  	
  454 D1:AFA0 -  -  -  -  	;DEC WIDTH COUNTER
  455 D1:AFA0 08 -  -  -  	ex af,af' ;';to shadow
  456 D1:AFA1 3D -  -  -  	dec a;dec width counter
  457 D1:AFA2 C2 C3 AF D1 	jp nz,sdcomp_setup_line_gap_skip
  458 D1:AFA6 -  -  -  -  	
  459 D1:AFA6 -  -  -  -  	;END OF LINE REACHED, have just read alpha last bit of line
  460 D1:AFA6 -  -  -  -  	
  461 D1:AFA6 -  -  -  -  	;AT LINE END,WRITE LOOPS/LINE DATA
  462 D1:AFA6 F5 -  -  -  	push af;push shadow a 
  463 D1:AFA7 -  -  -  -  	;DEC NUMBER LINES REMAINING
  464 D1:AFA7 -  -  -  -  sdcomp_lines_remaining .equ $ + 1
  465 D1:AFA7 3E 00 -  -  	ld a,0
  466 D1:AFA9 3D -  -  -  	dec a 
  467 D1:AFAA 32 A8 AF D1 	ld (sdcomp_lines_remaining),a
  468 D1:AFAE C2 B8 AF D1 	jp nz,sdcomp_set_end_flag_skip
  469 D1:AFB2 -  -  -  -  	;end of last line reached 
  470 D1:AFB2 3E DA -  -  	ld a,%11011010;jp c
  471 D1:AFB4 32 78 AE D1 	ld (sdcomp_end_reached_flag) , a
  472 D1:AFB8 -  -  -  -  sdcomp_set_end_flag_skip:
  473 D1:AFB8 -  -  -  -  	;SET UP NUMBER OF VIRTUAL ZEROES
  474 D1:AFB8 E5 -  -  -  	push hl
  475 D1:AFB9 -  -  -  -  sdcomp_zeroes_between_lines .equ $ + 1 
  476 D1:AFB9 21 00 00 00 	ld hl,0;320-width
  477 D1:AFBD 22 C8 AF D1 	ld (sdcomp_remaining_zeroes_between_lines),hl
  478 D1:AFC1 E1 -  -  -  	pop hl
  479 D1:AFC2 F1 -  -  -  	pop af 
  480 D1:AFC3 -  -  -  -  	
  481 D1:AFC3 -  -  -  -  	
  482 D1:AFC3 -  -  -  -  sdcomp_setup_line_gap_skip:
  483 D1:AFC3 08 -  -  -  	ex af,af' ;';out of shadow
  484 D1:AFC4 C9 -  -  -  	ret;A HOLDS 0 OR NOT 0
  485 D1:AFC5 -  -  -  -  	
  486 D1:AFC5 -  -  -  -  	
  487 D1:AFC5 -  -  -  -  	;IF OUTSIDE OF SPRITE,RETURN VIRTUAL 0
  488 D1:AFC5 -  -  -  -  sdcomp_line_end:
  489 D1:AFC5 08 -  -  -  	ex af,af' ;';out of shadow keep a' at 0 until next line start reached 
  490 D1:AFC6 E5 -  -  -  	push hl
  491 D1:AFC7 -  -  -  -  	;DEC REMAINING ZEROES
  492 D1:AFC7 -  -  -  -  sdcomp_remaining_zeroes_between_lines .equ $ + 1 
  493 D1:AFC7 21 00 00 00 	ld hl,0;320 - width 
  494 D1:AFCB 2B -  -  -  	dec hl
  495 D1:AFCC 22 C8 AF D1 	ld (sdcomp_remaining_zeroes_between_lines),hl
  496 D1:AFD0 7D -  -  -  	ld a,l
  497 D1:AFD1 B4 -  -  -  	or h
  498 D1:AFD2 E1 -  -  -  	pop hl
  499 D1:AFD3 CA DA AF D1 	jp z,sdcomp_line_gap_end;IF END OF VIRTUAL ZEROES
  500 D1:AFD7 3E 00 -  -  	ld a,0
  501 D1:AFD9 C9 -  -  -  	ret;return 0
  502 D1:AFDA -  -  -  -  	
  503 D1:AFDA -  -  -  -  sdcomp_line_gap_end:
  504 D1:AFDA -  -  -  -  	
  505 D1:AFDA 37 -  -  -  	scf 
  506 D1:AFDB -  -  -  -  sdcomp_bg_sprite_4 .equ $ 
  507 D1:AFDB D2 E5 AF D1 	jp nc,sdcomp_bg_sprite_4_skip
  508 D1:AFDF -  -  -  -  	
  509 D1:AFDF 3A 88 AE D1 	ld a,(sdcomp_loop_counter)
  510 D1:AFE3 12 -  -  -  	ld (de),a;write loops per line data
  511 D1:AFE4 13 -  -  -  	inc de
  512 D1:AFE5 -  -  -  -  sdcomp_bg_sprite_4_skip:
  513 D1:AFE5 -  -  -  -  	
  514 D1:AFE5 D9 -  -  -  	exx;out
  515 D1:AFE6 -  -  -  -  
  516 D1:AFE6 37 -  -  -  	scf
  517 D1:AFE7 -  -  -  -  sdcomp_flip_7 .equ $ ;call c 
  518 D1:AFE7 D4 84 B0 D1 	call nc,sdcomp_traverse_line_data
  519 D1:AFEB -  -  -  -  
  520 D1:AFEB D9 -  -  -  	exx ;in
  521 D1:AFEC -  -  -  -  	
  522 D1:AFEC 08 -  -  -  	ex af,af' ;';to shadow
  523 D1:AFED -  -  -  -  sdcomp_sprite_width .equ $ + 1
  524 D1:AFED 3E 00 -  -  	ld a,0;ld shadow a with width
  525 D1:AFEF 08 -  -  -  	ex af,af' ;';out of shadow
  526 D1:AFF0 3E 00 -  -  	ld a,0;ret 0
  527 D1:AFF2 C9 -  -  -  	ret
  528 D1:AFF3 -  -  -  -  
  529 D1:AFF3 -  -  -  -  
  530 D1:AFF3 -  -  -  -  
  531 D1:AFF3 -  -  -  -  ;rotates c and incs hl if needed to point to next bit. can be flipped to dec bit 
  532 D1:AFF3 -  -  -  -  sdcomp_next_in_bitstream:
  533 D1:AFF3 -  -  -  -  sdcomp_flip_bitstream .equ $ + 1
  534 D1:AFF3 CB 09 -  -  	rrc c;rlc flip
  535 D1:AFF5 D0 -  -  -  	ret nc
  536 D1:AFF6 -  -  -  -  sdcomp_flip_bitstream_2 .equ $
  537 D1:AFF6 23 -  -  -  	inc hl;dec hl flip
  538 D1:AFF7 C9 -  -  -  	ret
  539 D1:AFF8 -  -  -  -  
  540 D1:AFF8 -  -  -  -  
  541 D1:AFF8 -  -  -  -  
  542 D1:AFF8 -  -  -  -  
  543 D1:AFF8 -  -  -  -  
  544 D1:AFF8 -  -  -  -  
  545 D1:AFF8 -  -  -  -  ;bit orders
  546 D1:AFF8 -  -  -  -  ;	noflip   flip 
  547 D1:AFF8 -  -  -  -  ;4bpp 3210 	 0123
  548 D1:AFF8 -  -  -  -  ;3bpp 210	 012
  549 D1:AFF8 -  -  -  -  ;2bpp 10	 01
  550 D1:AFF8 -  -  -  -  ;1bpp 0		 0
  551 D1:AFF8 -  -  -  -  
  552 D1:AFF8 -  -  -  -  
  553 D1:AFF8 -  -  -  -  ;not in shadow,returns a=0000color
  554 D1:AFF8 -  -  -  -  sdcomp_get_color_data:
  555 D1:AFF8 D5 -  -  -  	push de 
  556 D1:AFF9 1E 00 -  -  	ld e,0
  557 D1:AFFB -  -  -  -  	
  558 D1:AFFB 37 -  -  -  	scf
  559 D1:AFFC -  -  -  -  sdcomp_0bpc .equ $ 
  560 D1:AFFC D2 46 B0 D1 	jp nc,sdcomp_get_color_from_index
  561 D1:B000 -  -  -  -  	
  562 D1:B000 7E -  -  -  	ld a,(hl)
  563 D1:B001 A1 -  -  -  	and c 
  564 D1:B002 CD F3 AF D1 	call sdcomp_next_in_bitstream
  565 D1:B006 B7 -  -  -  	or a
  566 D1:B007 CA 0D B0 D1 	jp z,sdcomp_get_color_data_set_skip_1
  567 D1:B00B -  -  -  -  sdcomp_color_bit_0 .equ $ + 1 
  568 D1:B00B CB C3 -  -  	set 0,e 
  569 D1:B00D -  -  -  -  sdcomp_get_color_data_set_skip_1:
  570 D1:B00D -  -  -  -  	
  571 D1:B00D 37 -  -  -  	scf
  572 D1:B00E -  -  -  -  sdcomp_1bpc .equ $
  573 D1:B00E D2 46 B0 D1 	jp nc,sdcomp_get_color_from_index
  574 D1:B012 -  -  -  -  	
  575 D1:B012 -  -  -  -  	
  576 D1:B012 7E -  -  -  	ld a,(hl)
  577 D1:B013 A1 -  -  -  	and c 
  578 D1:B014 CD F3 AF D1 	call sdcomp_next_in_bitstream
  579 D1:B018 B7 -  -  -  	or a
  580 D1:B019 CA 1F B0 D1 	jp z,sdcomp_get_color_data_set_skip_2
  581 D1:B01D -  -  -  -  sdcomp_color_bit_1 .equ $ + 1 	
  582 D1:B01D CB CB -  -  	set 1,e 
  583 D1:B01F -  -  -  -  sdcomp_get_color_data_set_skip_2:
  584 D1:B01F -  -  -  -  	
  585 D1:B01F 37 -  -  -  	scf
  586 D1:B020 -  -  -  -  sdcomp_2bpc .equ $
  587 D1:B020 D2 46 B0 D1 	jp nc,sdcomp_get_color_from_index
  588 D1:B024 -  -  -  -  	
  589 D1:B024 7E -  -  -  	ld a,(hl)
  590 D1:B025 A1 -  -  -  	and c 
  591 D1:B026 CD F3 AF D1 	call sdcomp_next_in_bitstream
  592 D1:B02A B7 -  -  -  	or a
  593 D1:B02B CA 31 B0 D1 	jp z,sdcomp_get_color_data_set_skip_3
  594 D1:B02F -  -  -  -  sdcomp_color_bit_2 .equ $ + 1 
  595 D1:B02F CB D3 -  -  	set 2,e 
  596 D1:B031 -  -  -  -  sdcomp_get_color_data_set_skip_3:
  597 D1:B031 -  -  -  -  	
  598 D1:B031 37 -  -  -  	scf
  599 D1:B032 -  -  -  -  sdcomp_3bpc .equ $
  600 D1:B032 D2 46 B0 D1 	jp nc,sdcomp_get_color_from_index	
  601 D1:B036 -  -  -  -  
  602 D1:B036 7E -  -  -  	ld a,(hl)
  603 D1:B037 A1 -  -  -  	and c 
  604 D1:B038 CD F3 AF D1 	call sdcomp_next_in_bitstream
  605 D1:B03C B7 -  -  -  	or a
  606 D1:B03D CA 43 B0 D1 	jp z,sdcomp_get_color_data_set_skip_4
  607 D1:B041 -  -  -  -  sdcomp_color_bit_3 .equ $ + 1 
  608 D1:B041 CB DB -  -  	set 3,e 
  609 D1:B043 -  -  -  -  sdcomp_get_color_data_set_skip_4:
  610 D1:B043 -  -  -  -  ;4bpp, interpret as color data 
  611 D1:B043 7B -  -  -  	ld a,e 
  612 D1:B044 D1 -  -  -  	pop de 
  613 D1:B045 C9 -  -  -  	ret 
  614 D1:B046 -  -  -  -  
  615 D1:B046 -  -  -  -  sdcomp_get_color_from_index:
  616 D1:B046 E5 -  -  -  	push hl 
  617 D1:B047 C5 -  -  -  	push bc 
  618 D1:B048 01 00 00 00 	ld bc,0
  619 D1:B04C 21 6B B0 D1 	ld hl,sdcomp_indexed_color_data
  620 D1:B050 4B -  -  -  	ld c,e ;index number
  621 D1:B051 CB 39 -  -  	srl c;div by 2
  622 D1:B053 09 -  -  -  	add hl,bc;add index
  623 D1:B054 7E -  -  -  	ld a,(hl)
  624 D1:B055 CB 43 -  -  	bit 0,e;check lsb
  625 D1:B057 CA 61 B0 D1 	jp z,sdcomp_get_color_from_index_and_msn
  626 D1:B05B E6 0F -  -  	and %00001111;a holds 0000color
  627 D1:B05D C1 -  -  -  	pop bc 
  628 D1:B05E E1 -  -  -  	pop hl 
  629 D1:B05F D1 -  -  -  	pop de 
  630 D1:B060 C9 -  -  -  	ret 
  631 D1:B061 -  -  -  -  	
  632 D1:B061 -  -  -  -  sdcomp_get_color_from_index_and_msn:
  633 D1:B061 E6 F0 -  -  	and %11110000
  634 D1:B063 0F -  -  -  	rrca 
  635 D1:B064 0F -  -  -  	rrca 
  636 D1:B065 0F -  -  -  	rrca 
  637 D1:B066 0F -  -  -  	rrca ;a holds 0000colro
  638 D1:B067 C1 -  -  -  	pop bc 
  639 D1:B068 E1 -  -  -  	pop hl 
  640 D1:B069 D1 -  -  -  	pop de 
  641 D1:B06A C9 -  -  -  	ret
  642 D1:B06B -  -  -  -  	
  643 D1:B06B -  -  -  -  sdcomp_indexed_color_data:;4bpc
  644 D1:B06B 00 00 00 00 	.db 0,0,0,0
  645 D1:B06F -  -  -  -  
  646 D1:B06F -  -  -  -  
  647 D1:B06F -  -  -  -  
  648 D1:B06F -  -  -  -  
  649 D1:B06F -  -  -  -  
  650 D1:B06F -  -  -  -  ;not in shadow, returns a = color0000
  651 D1:B06F -  -  -  -  sdcomp_get_next_color_leading_nibble:
  652 D1:B06F CD F8 AF D1 	call sdcomp_get_color_data
  653 D1:B073 0F -  -  -  	rrca 
  654 D1:B074 0F -  -  -  	rrca 
  655 D1:B075 0F -  -  -  	rrca 
  656 D1:B076 0F -  -  -  	rrca
  657 D1:B077 C9 -  -  -  	ret 
  658 D1:B078 -  -  -  -  
  659 D1:B078 -  -  -  -  
  660 D1:B078 -  -  -  -  ;not in shadow, returns a = 0000color
  661 D1:B078 -  -  -  -  sdcomp_get_next_color_ending_nibble:
  662 D1:B078 CD F8 AF D1 	call sdcomp_get_color_data
  663 D1:B07C C9 -  -  -  	ret
  664 D1:B07D -  -  -  -  
  665 D1:B07D -  -  -  -  sdcomp_end:
  666 D1:B07D -  -  -  -  	;write final loop/line data
  667 D1:B07D 3A 88 AE D1 	ld a,(sdcomp_loop_counter)
  668 D1:B081 12 -  -  -  	ld (de),a;write loops per line data
  669 D1:B082 13 -  -  -  	inc de
  670 D1:B083 C9 -  -  -  	ret 
  671 D1:B084 -  -  -  -  
  672 D1:B084 -  -  -  -  
  673 D1:B084 -  -  -  -  
  674 D1:B084 -  -  -  -  
  675 D1:B084 -  -  -  -  
  676 D1:B084 -  -  -  -  
  677 D1:B084 -  -  -  -  
  678 D1:B084 -  -  -  -  ;not in shadow ,destroys a
  679 D1:B084 -  -  -  -  sdcomp_traverse_line_data:
  680 D1:B084 -  -  -  -  sdcomp_color_data_line_end_byte .equ $ + 1
  681 D1:B084 21 00 00 00 	ld hl,0
  682 D1:B088 -  -  -  -  sdcomp_color_data_line_end_mask .equ $ + 1
  683 D1:B088 0E 00 -  -  	ld c,0
  684 D1:B08A D9 -  -  -  	exx;toshadow 
  685 D1:B08B -  -  -  -  sdcomp_alpha_data_line_end_byte .equ $ + 1
  686 D1:B08B 21 00 00 00 	ld hl,0
  687 D1:B08F -  -  -  -  sdcomp_alpha_data_line_end_mask .equ $ + 1
  688 D1:B08F 0E 00 -  -  	ld c,0
  689 D1:B091 D5 -  -  -  	push de
  690 D1:B092 3A EE AF D1 	ld a,(sdcomp_sprite_width)
  691 D1:B096 5F -  -  -  	ld e,a
  692 D1:B097 -  -  -  -  sdcomp_traverse_line_data_loop:
  693 D1:B097 CB 09 -  -  	rrc c 
  694 D1:B099 D2 9E B0 D1 	jp nc,sdcomp_traverse_line_data_alpha_inc_skip
  695 D1:B09D 23 -  -  -  	inc hl
  696 D1:B09E -  -  -  -  sdcomp_traverse_line_data_alpha_inc_skip:
  697 D1:B09E 7E -  -  -  	ld a,(hl)
  698 D1:B09F A1 -  -  -  	and c
  699 D1:B0A0 -  -  -  -  sdcomp_no_alpha_3 .equ $
  700 D1:B0A0 CA B6 B0 D1 	jp z,sdcomp_traverse_line_data_color_skip;jp c for no alpha
  701 D1:B0A4 D9 -  -  -  	exx;out of shadow 
  702 D1:B0A5 -  -  -  -  sdcomp_traverse_1bpp .equ $ + 1
  703 D1:B0A5 CB 09 -  -  	rrc c ;rotate mask
  704 D1:B0A7 -  -  -  -  sdcomp_traverse_2bpp .equ $ + 1
  705 D1:B0A7 CB 09 -  -  	rrc c ;rrc a for 1bpc
  706 D1:B0A9 -  -  -  -  sdcomp_traverse_3bpp .equ $ + 1
  707 D1:B0A9 CB 09 -  -  	rrc c;rrc a for 2bpc
  708 D1:B0AB -  -  -  -  sdcomp_traverse_4bpp .equ $ + 1
  709 D1:B0AB CB 09 -  -  	rrc c
  710 D1:B0AD -  -  -  -  	
  711 D1:B0AD 79 -  -  -  	ld a,c
  712 D1:B0AE -  -  -  -  sdcomp_traverse_bit_check .equ $ + 1
  713 D1:B0AE E6 F0 -  -  	and %11110000 ; 4bpc = 11110000 3bpc = 11100000, 2bpc 11000000 1bpc 10000000
  714 D1:B0B0 CA B5 B0 D1 	jp z,sdcomp_traverse_line_data_color_inc_skip
  715 D1:B0B4 23 -  -  -  	inc hl
  716 D1:B0B5 -  -  -  -  sdcomp_traverse_line_data_color_inc_skip:
  717 D1:B0B5 D9 -  -  -  	exx ;toshadow
  718 D1:B0B6 -  -  -  -  sdcomp_traverse_line_data_color_skip:
  719 D1:B0B6 1D -  -  -  	dec e
  720 D1:B0B7 C2 97 B0 D1 	jp nz,sdcomp_traverse_line_data_loop
  721 D1:B0BB D1 -  -  -  	pop de  
  722 D1:B0BC 22 8C B0 D1 	ld (sdcomp_alpha_data_line_end_byte),hl
  723 D1:B0C0 79 -  -  -  	ld a,c
  724 D1:B0C1 32 90 B0 D1 	ld (sdcomp_alpha_data_line_end_mask),a
  725 D1:B0C5 D9 -  -  -  	exx ;out
  726 D1:B0C6 22 85 B0 D1 	ld (sdcomp_color_data_line_end_byte),hl
  727 D1:B0CA 79 -  -  -  	ld a,c 
  728 D1:B0CB 32 89 B0 D1 	ld (sdcomp_color_data_line_end_mask),a
  729 D1:B0CF C9 -  -  -  	ret
  730 D1:B0D0 -  -  -  -  
  731 D1:B0D0 -  -  -  -  
  732 D1:B0D0 -  -  -  -  
  733 D1:B0D0 -  -  -  -  sdcomp_set_flip:
  734 D1:B0D0 3E D2 -  -  	ld a,%11010010;jp nc 
  735 D1:B0D2 32 42 AE D1 	ld (sdcomp_flip_1),a 
  736 D1:B0D6 -  -  -  -   
  737 D1:B0D6 3E DC -  -  	ld a,%11011100;call c 
  738 D1:B0D8 32 E7 AF D1 	ld (sdcomp_flip_7),a
  739 D1:B0DC -  -  -  -  	
  740 D1:B0DC 3E 01 -  -  	ld a,%00000001;rlc 
  741 D1:B0DE 32 F4 AF D1 	ld (sdcomp_flip_bitstream),a
  742 D1:B0E2 3E 2B -  -  	ld a,%00101011;dec hl
  743 D1:B0E4 32 F6 AF D1 	ld (sdcomp_flip_bitstream_2),a
  744 D1:B0E8 -  -  -  -  	
  745 D1:B0E8 -  -  -  -  	
  746 D1:B0E8 -  -  -  -  	;set reverse color reading
  747 D1:B0E8 3E C3 -  -  	ld a,%11000011;set 0,e
  748 D1:B0EA 32 0C B0 D1 	ld (sdcomp_color_bit_0),a 
  749 D1:B0EE 3E CB -  -  	ld a,%11001011;set 1,e
  750 D1:B0F0 32 1E B0 D1 	ld (sdcomp_color_bit_1),a 
  751 D1:B0F4 3E D3 -  -  	ld a,%11010011;set 2,e
  752 D1:B0F6 32 30 B0 D1 	ld (sdcomp_color_bit_2),a 
  753 D1:B0FA 3E DB -  -  	ld a,%11011011;set 3,e
  754 D1:B0FC 32 42 B0 D1 	ld (sdcomp_color_bit_3),a 
  755 D1:B100 -  -  -  -  	
  756 D1:B100 3E D8 -  -  	ld a,%11011000;ret c 
  757 D1:B102 32 8A B1 D1 	ld (sdcomp_flip_4),a
  758 D1:B106 32 E1 B1 D1 	ld (sdcomp_flip_5),a
  759 D1:B10A 32 30 B2 D1 	ld (sdcomp_flip_6),a
  760 D1:B10E 32 75 B2 D1 	ld (sdcomp_flip_8),a
  761 D1:B112 -  -  -  -  	
  762 D1:B112 C9 -  -  -  	ret 
  763 D1:B113 -  -  -  -  	
  764 D1:B113 -  -  -  -  	
  765 D1:B113 -  -  -  -  sdcomp_reset_flip:
  766 D1:B113 3E DA -  -  	ld a,%11011010;jp c 
  767 D1:B115 32 42 AE D1 	ld (sdcomp_flip_1),a 
  768 D1:B119 -  -  -  -  
  769 D1:B119 3E D4 -  -  	ld a,%11010100;call nc 
  770 D1:B11B 32 E7 AF D1 	ld (sdcomp_flip_7),a
  771 D1:B11F -  -  -  -  	
  772 D1:B11F 3E 09 -  -  	ld a,%00001001;rrc 
  773 D1:B121 32 F4 AF D1 	ld (sdcomp_flip_bitstream),a
  774 D1:B125 3E 23 -  -  	ld a,%00100011;inc hl
  775 D1:B127 32 F6 AF D1 	ld (sdcomp_flip_bitstream_2),a
  776 D1:B12B -  -  -  -  	
  777 D1:B12B -  -  -  -  	
  778 D1:B12B 3E D0 -  -  	ld a,%11010000;ret nc 
  779 D1:B12D 32 8A B1 D1 	ld (sdcomp_flip_4),a
  780 D1:B131 32 E1 B1 D1 	ld (sdcomp_flip_5),a
  781 D1:B135 32 30 B2 D1 	ld (sdcomp_flip_6),a
  782 D1:B139 32 75 B2 D1 	ld (sdcomp_flip_8),a
  783 D1:B13D -  -  -  -  	
  784 D1:B13D -  -  -  -  	
  785 D1:B13D C9 -  -  -  	ret 
  786 D1:B13E -  -  -  -  
  787 D1:B13E -  -  -  -  
  788 D1:B13E -  -  -  -  
  789 D1:B13E -  -  -  -  sdcomp_set_offset:
  790 D1:B13E 3E D2 -  -  	ld a,%11010010;jp nc 
  791 D1:B140 32 7F AF D1 	ld (sdcomp_bit_offset),a
  792 D1:B144 3E 3C -  -  	ld a, %00111100;inc a 
  793 D1:B146 32 C6 AD D1 	ld (sdcomp_offset_BG),a
  794 D1:B14A 3E DA -  -  	ld a,%11011010;jp c
  795 D1:B14C 32 23 B3 D1 	ld (sdcomp_offset_BG_2),a	
  796 D1:B150 C9 -  -  -  	ret
  797 D1:B151 -  -  -  -  
  798 D1:B151 -  -  -  -  
  799 D1:B151 -  -  -  -  
  800 D1:B151 -  -  -  -  
  801 D1:B151 -  -  -  -  ;0,1,2,3,4bpp modes
  802 D1:B151 -  -  -  -  ;destroys a 
  803 D1:B151 -  -  -  -  sdcomp_set_4bpp:
  804 D1:B151 3E D2 -  -  	ld a,%11010010;jp nc
  805 D1:B153 32 FC AF D1 	ld (sdcomp_0bpc),a
  806 D1:B157 32 0E B0 D1 	ld (sdcomp_1bpc),a
  807 D1:B15B 32 20 B0 D1 	ld (sdcomp_2bpc),a
  808 D1:B15F 32 32 B0 D1 	ld (sdcomp_3bpc),a
  809 D1:B163 -  -  -  -  	
  810 D1:B163 -  -  -  -  	
  811 D1:B163 -  -  -  -  ;traverse data 
  812 D1:B163 3E 09 -  -  	ld a,%00001001;rrc c
  813 D1:B165 32 A6 B0 D1 	ld (sdcomp_traverse_1bpp),a
  814 D1:B169 32 A8 B0 D1 	ld (sdcomp_traverse_2bpp),a
  815 D1:B16D 32 AA B0 D1 	ld (sdcomp_traverse_3bpp),a
  816 D1:B171 32 AC B0 D1 	ld (sdcomp_traverse_4bpp),a
  817 D1:B175 -  -  -  -  	
  818 D1:B175 3E F0 -  -  	ld a,%11110000
  819 D1:B177 32 AF B0 D1 	ld (sdcomp_traverse_bit_check),a
  820 D1:B17B -  -  -  -  	
  821 D1:B17B -  -  -  -  ;setting indexed colors 
  822 D1:B17B 3E DA -  -  	ld a,%11011010;jp c 
  823 D1:B17D 32 0B AE D1 	ld (sdcomp_get_indexed_color_1bpc),a
  824 D1:B181 32 16 AE D1 	ld (sdcomp_get_indexed_color_2bpc),a
  825 D1:B185 32 21 AE D1 	ld (sdcomp_get_indexed_color_3bpc),a
  826 D1:B189 -  -  -  -  	
  827 D1:B189 37 -  -  -  	scf 
  828 D1:B18A -  -  -  -  sdcomp_flip_4 .equ $
  829 D1:B18A D0 -  -  -  	ret nc 
  830 D1:B18B -  -  -  -  	;not flipped
  831 D1:B18B -  -  -  -  	
  832 D1:B18B 3E DB -  -  	ld a,%11011011;set 3,e
  833 D1:B18D 32 0C B0 D1 	ld (sdcomp_color_bit_0),a 
  834 D1:B191 3E D3 -  -  	ld a,%11010011;set 2,e
  835 D1:B193 32 1E B0 D1 	ld (sdcomp_color_bit_1),a 
  836 D1:B197 3E CB -  -  	ld a,%11001011;set 1,e
  837 D1:B199 32 30 B0 D1 	ld (sdcomp_color_bit_2),a 
  838 D1:B19D 3E C3 -  -  	ld a,%11000011;set 0,e
  839 D1:B19F 32 42 B0 D1 	ld (sdcomp_color_bit_3),a 
  840 D1:B1A3 C9 -  -  -  	ret 
  841 D1:B1A4 -  -  -  -  	
  842 D1:B1A4 -  -  -  -  
  843 D1:B1A4 -  -  -  -  sdcomp_set_3bpp:
  844 D1:B1A4 3E D2 -  -  	ld a,%11010010;jp nc
  845 D1:B1A6 32 FC AF D1 	ld (sdcomp_0bpc),a
  846 D1:B1AA 32 0E B0 D1 	ld (sdcomp_1bpc),a
  847 D1:B1AE 32 20 B0 D1 	ld (sdcomp_2bpc),a
  848 D1:B1B2 -  -  -  -  	
  849 D1:B1B2 3E DA -  -  	ld a,%11011010;jp c 
  850 D1:B1B4 32 32 B0 D1 	ld (sdcomp_3bpc),a
  851 D1:B1B8 -  -  -  -  	
  852 D1:B1B8 -  -  -  -  ;traverse data	
  853 D1:B1B8 3E 09 -  -  	ld a,%00001001;rrc c
  854 D1:B1BA 32 A6 B0 D1 	ld (sdcomp_traverse_1bpp),a
  855 D1:B1BE 32 A8 B0 D1 	ld (sdcomp_traverse_2bpp),a
  856 D1:B1C2 32 AA B0 D1 	ld (sdcomp_traverse_3bpp),a
  857 D1:B1C6 3E 0F -  -  	ld a,%00001111;rrc a
  858 D1:B1C8 32 AC B0 D1 	ld (sdcomp_traverse_4bpp),a
  859 D1:B1CC -  -  -  -  	
  860 D1:B1CC 3E E0 -  -  	ld a,%11100000
  861 D1:B1CE 32 AF B0 D1 	ld (sdcomp_traverse_bit_check),a
  862 D1:B1D2 -  -  -  -  	
  863 D1:B1D2 -  -  -  -  ;setting indexed colors 
  864 D1:B1D2 3E D2 -  -  	ld a,%11010010;jp nc 
  865 D1:B1D4 32 0B AE D1 	ld (sdcomp_get_indexed_color_1bpc),a
  866 D1:B1D8 32 16 AE D1 	ld (sdcomp_get_indexed_color_2bpc),a
  867 D1:B1DC 32 21 AE D1 	ld (sdcomp_get_indexed_color_3bpc),a
  868 D1:B1E0 -  -  -  -  	
  869 D1:B1E0 -  -  -  -  	
  870 D1:B1E0 -  -  -  -  	
  871 D1:B1E0 37 -  -  -  	scf 
  872 D1:B1E1 -  -  -  -  sdcomp_flip_5 .equ $
  873 D1:B1E1 D0 -  -  -  	ret nc 
  874 D1:B1E2 -  -  -  -  	;not flipped
  875 D1:B1E2 -  -  -  -  	
  876 D1:B1E2 3E D3 -  -  	ld a,%11010011;set 2,e
  877 D1:B1E4 32 0C B0 D1 	ld (sdcomp_color_bit_0),a 
  878 D1:B1E8 3E CB -  -  	ld a,%11001011;set 1,e
  879 D1:B1EA 32 1E B0 D1 	ld (sdcomp_color_bit_1),a 
  880 D1:B1EE 3E C3 -  -  	ld a,%11000011;set 0,e
  881 D1:B1F0 32 30 B0 D1 	ld (sdcomp_color_bit_2),a 
  882 D1:B1F4 -  -  -  -  
  883 D1:B1F4 C9 -  -  -  	ret 
  884 D1:B1F5 -  -  -  -  
  885 D1:B1F5 -  -  -  -  sdcomp_set_2bpp:
  886 D1:B1F5 3E D2 -  -  	ld a,%11010010;jp nc
  887 D1:B1F7 32 FC AF D1 	ld (sdcomp_0bpc),a
  888 D1:B1FB 32 0E B0 D1 	ld (sdcomp_1bpc),a
  889 D1:B1FF -  -  -  -  	
  890 D1:B1FF 3E DA -  -  	ld a,%11011010;jp c 
  891 D1:B201 32 20 B0 D1 	ld (sdcomp_2bpc),a
  892 D1:B205 -  -  -  -  	
  893 D1:B205 -  -  -  -  ;traverse data	
  894 D1:B205 3E 09 -  -  	ld a,%00001001;rrc c
  895 D1:B207 32 A6 B0 D1 	ld (sdcomp_traverse_1bpp),a
  896 D1:B20B 32 A8 B0 D1 	ld (sdcomp_traverse_2bpp),a
  897 D1:B20F 3E 0F -  -  	ld a,%00001111;rrc a
  898 D1:B211 32 AA B0 D1 	ld (sdcomp_traverse_3bpp),a
  899 D1:B215 32 AC B0 D1 	ld (sdcomp_traverse_4bpp),a
  900 D1:B219 -  -  -  -  	
  901 D1:B219 3E C0 -  -  	ld a,%11000000 
  902 D1:B21B 32 AF B0 D1 	ld (sdcomp_traverse_bit_check),a
  903 D1:B21F -  -  -  -  ;setting indexed colors 
  904 D1:B21F 3E D2 -  -  	ld a,%11010010;jp nc 
  905 D1:B221 32 0B AE D1 	ld (sdcomp_get_indexed_color_1bpc),a
  906 D1:B225 32 16 AE D1 	ld (sdcomp_get_indexed_color_2bpc),a
  907 D1:B229 3E DA -  -  	ld a,%11011010;jp c 
  908 D1:B22B 32 21 AE D1 	ld (sdcomp_get_indexed_color_3bpc),a	
  909 D1:B22F -  -  -  -  	
  910 D1:B22F 37 -  -  -  	scf 
  911 D1:B230 -  -  -  -  sdcomp_flip_6 .equ $
  912 D1:B230 D0 -  -  -  	ret nc 
  913 D1:B231 -  -  -  -  	;not flipped
  914 D1:B231 -  -  -  -  	
  915 D1:B231 -  -  -  -  
  916 D1:B231 3E CB -  -  	ld a,%11001011;set 1,e
  917 D1:B233 32 0C B0 D1 	ld (sdcomp_color_bit_0),a 
  918 D1:B237 3E C3 -  -  	ld a,%11000011;set 0,e
  919 D1:B239 32 1E B0 D1 	ld (sdcomp_color_bit_1),a 
  920 D1:B23D -  -  -  -  
  921 D1:B23D C9 -  -  -  	ret 
  922 D1:B23E -  -  -  -  
  923 D1:B23E -  -  -  -  
  924 D1:B23E -  -  -  -  
  925 D1:B23E -  -  -  -  sdcomp_set_1bpp:
  926 D1:B23E 3E D2 -  -  	ld a,%11010010;jp nc
  927 D1:B240 32 FC AF D1 	ld (sdcomp_0bpc),a
  928 D1:B244 -  -  -  -  	
  929 D1:B244 3E DA -  -  	ld a,%11011010;jp c 
  930 D1:B246 32 0E B0 D1 	ld (sdcomp_1bpc),a
  931 D1:B24A -  -  -  -  	
  932 D1:B24A -  -  -  -  ;traverse data	
  933 D1:B24A 3E 09 -  -  	ld a,%00001001;rrc c
  934 D1:B24C 32 A6 B0 D1 	ld (sdcomp_traverse_1bpp),a
  935 D1:B250 3E 0F -  -  	ld a,%00001111;rrc a
  936 D1:B252 32 A8 B0 D1 	ld (sdcomp_traverse_2bpp),a
  937 D1:B256 32 AA B0 D1 	ld (sdcomp_traverse_3bpp),a
  938 D1:B25A 32 AC B0 D1 	ld (sdcomp_traverse_4bpp),a
  939 D1:B25E 3E 80 -  -  	ld a,%10000000
  940 D1:B260 32 AF B0 D1 	ld (sdcomp_traverse_bit_check),a
  941 D1:B264 -  -  -  -  ;setting indexed colors 
  942 D1:B264 3E D2 -  -  	ld a,%11010010;jp nc 
  943 D1:B266 32 0B AE D1 	ld (sdcomp_get_indexed_color_1bpc),a
  944 D1:B26A 3E DA -  -  	ld a,%11011010;jp c 
  945 D1:B26C 32 16 AE D1 	ld (sdcomp_get_indexed_color_2bpc),a
  946 D1:B270 32 21 AE D1 	ld (sdcomp_get_indexed_color_3bpc),a	
  947 D1:B274 -  -  -  -  	
  948 D1:B274 -  -  -  -  
  949 D1:B274 37 -  -  -  	scf 
  950 D1:B275 -  -  -  -  sdcomp_flip_8 .equ $
  951 D1:B275 D0 -  -  -  	ret nc 
  952 D1:B276 -  -  -  -  	;not flipped
  953 D1:B276 -  -  -  -  	
  954 D1:B276 -  -  -  -  
  955 D1:B276 3E C3 -  -  	ld a,%11000011;set 0,e
  956 D1:B278 32 0C B0 D1 	ld (sdcomp_color_bit_0),a 
  957 D1:B27C -  -  -  -  
  958 D1:B27C C9 -  -  -  	ret 
  959 D1:B27D -  -  -  -  	
  960 D1:B27D -  -  -  -  
  961 D1:B27D -  -  -  -  sdcomp_set_0bpp:
  962 D1:B27D 3E DA -  -  	ld a,%11011010;jp c 
  963 D1:B27F 32 FC AF D1 	ld (sdcomp_0bpc),a
  964 D1:B283 -  -  -  -  
  965 D1:B283 -  -  -  -  
  966 D1:B283 3E D2 -  -  	ld a,%11010010;jp nc 
  967 D1:B285 32 0B AE D1 	ld (sdcomp_get_indexed_color_1bpc),a
  968 D1:B289 3E DA -  -  	ld a,%11011010;jp c 
  969 D1:B28B 32 16 AE D1 	ld (sdcomp_get_indexed_color_2bpc),a
  970 D1:B28F 32 21 AE D1 	ld (sdcomp_get_indexed_color_3bpc),a	
  971 D1:B293 -  -  -  -  	
  972 D1:B293 C9 -  -  -  	ret 
  973 D1:B294 -  -  -  -  	
  974 D1:B294 -  -  -  -  sdcomp_set_noalpha:
  975 D1:B294 3E DA -  -  	ld a,%11011010;jp c 
  976 D1:B296 32 F0 AD D1 	ld (sdcomp_no_alpha_1),a 
  977 D1:B29A 32 A0 B0 D1 	ld (sdcomp_no_alpha_3),a 
  978 D1:B29E 3E D2 -  -  	ld a,%11010010;jp nc 
  979 D1:B2A0 32 9A AF D1 	ld (sdcomp_no_alpha_2),a 
  980 D1:B2A4 C9 -  -  -  	ret 
  981 D1:B2A5 -  -  -  -  	
  982 D1:B2A5 -  -  -  -  sdcomp_reset_noalpha:
  983 D1:B2A5 3E DA -  -  	ld a,%11011010;jp c 
  984 D1:B2A7 32 9A AF D1 	ld (sdcomp_no_alpha_2),a 
  985 D1:B2AB 3E D2 -  -  	ld a,%11010010;jp nc 
  986 D1:B2AD 32 F0 AD D1 	ld (sdcomp_no_alpha_1),a 
  987 D1:B2B1 3E CA -  -  	ld a,%11001010;jp z
  988 D1:B2B3 32 A0 B0 D1 	ld (sdcomp_no_alpha_3),a 
  989 D1:B2B7 C9 -  -  -  	ret 
  990 D1:B2B8 -  -  -  -  
  991 D1:B2B8 -  -  -  -  
  992 D1:B2B8 -  -  -  -  sdcomp_set_fast_sprite:
  993 D1:B2B8 3E DA -  -  	ld a,%11011010;jp c 
  994 D1:B2BA 32 95 AE D1 	ld (sdcomp_fast_sprite_1),a 
  995 D1:B2BE 32 D6 AE D1 	ld (sdcomp_fast_sprite_2),a
  996 D1:B2C2 32 0C AF D1 	ld (sdcomp_fast_sprite_3),a
  997 D1:B2C6 C9 -  -  -  	ret
  998 D1:B2C7 -  -  -  -  sdcomp_reset_fast_sprite:
  999 D1:B2C7 3E D2 -  -  	ld a,%11010010;jp nc
 1000 D1:B2C9 32 95 AE D1 	ld (sdcomp_fast_sprite_1),a 
 1001 D1:B2CD 32 D6 AE D1 	ld (sdcomp_fast_sprite_2),a
 1002 D1:B2D1 32 0C AF D1 	ld (sdcomp_fast_sprite_3),a
 1003 D1:B2D5 C9 -  -  -  	ret
 1004 D1:B2D6 -  -  -  -  	
 1005 D1:B2D6 -  -  -  -  	
 1006 D1:B2D6 -  -  -  -  sdcomp_set_bg_sprite:
 1007 D1:B2D6 3E D2 -  -  	ld a,%11010010;jp nc
 1008 D1:B2D8 32 C2 AD D1 	ld (sdcomp_bg_sprite_1),a 
 1009 D1:B2DC 3E DA -  -  	ld a,%11011010;jp c 
 1010 D1:B2DE 32 E3 AD D1 	ld (sdcomp_bg_sprite_2),a
 1011 D1:B2E2 32 63 AE D1 	ld (sdcomp_bg_sprite_3),a
 1012 D1:B2E6 32 DB AF D1 	ld (sdcomp_bg_sprite_4),a
 1013 D1:B2EA C9 -  -  -  	ret
 1014 D1:B2EB -  -  -  -  
 1015 D1:B2EB -  -  -  -  	
 1016 D1:B2EB -  -  -  -  sdcomp_reset_bg_sprite:
 1017 D1:B2EB 3E DA -  -  	ld a,%11011010;jp c 
 1018 D1:B2ED 32 C2 AD D1 	ld (sdcomp_bg_sprite_1),a 
 1019 D1:B2F1 3E D2 -  -  	ld a,%11010010;jp nc
 1020 D1:B2F3 32 E3 AD D1 	ld (sdcomp_bg_sprite_2),a
 1021 D1:B2F7 32 63 AE D1 	ld (sdcomp_bg_sprite_3),a
 1022 D1:B2FB 32 DB AF D1 	ld (sdcomp_bg_sprite_4),a
 1023 D1:B2FF C9 -  -  -  	ret
 1024 D1:B300 -  -  -  -  
 1025 D1:B300 -  -  -  -  ;not in shadow 
 1026 D1:B300 -  -  -  -  sdcomp_bg_sprite_routine:
 1027 D1:B300 D9 -  -  -  	exx ;in 
 1028 D1:B301 D5 -  -  -  	push de
 1029 D1:B302 D9 -  -  -  	exx ;out 
 1030 D1:B303 D1 -  -  -  	pop de ;transfer loops/line write location to be main write location
 1031 D1:B304 D9 -  -  -  	exx;in 
 1032 D1:B305 C3 27 B3 D1 	jp sdcomp_bg_sprite_loop_skip;start of data, not virtual
 1033 D1:B309 -  -  -  -  ;not in shadow 
 1034 D1:B309 -  -  -  -  sdcomp_bg_sprite_loop:
 1035 D1:B309 D9 -  -  -  	exx;toshadow 
 1036 D1:B30A -  -  -  -  	
 1037 D1:B30A -  -  -  -  	
 1038 D1:B30A 08 -  -  -  	ex af,af' ;'
 1039 D1:B30B 47 -  -  -  	ld b,a;b holds a'
 1040 D1:B30C 08 -  -  -  	ex af,af' ;'
 1041 D1:B30D 78 -  -  -  	ld a,b
 1042 D1:B30E B7 -  -  -  	or a;check if a' is 0
 1043 D1:B30F C2 27 B3 D1 	jp nz,sdcomp_bg_sprite_loop_skip;if zero check if virtual or not, if not use as real data
 1044 D1:B313 -  -  -  -  	
 1045 D1:B313 -  -  -  -  	;start of virtual zeroes
 1046 D1:B313 -  -  -  -  sdcomp_bg_sprite_traverse_virtual_zeroes:
 1047 D1:B313 CD 55 AF D1 	call sdcomp_get_next_alpha_pair;read next alpha pair 
 1048 D1:B317 47 -  -  -  	ld b,a
 1049 D1:B318 08 -  -  -  	ex af,af' ;'
 1050 D1:B319 F5 -  -  -  	push af
 1051 D1:B31A 08 -  -  -  	ex af,af' ;'
 1052 D1:B31B F1 -  -  -  	pop af
 1053 D1:B31C B7 -  -  -  	or a;check if a' is 0
 1054 D1:B31D CA 13 B3 D1 	jp z,sdcomp_bg_sprite_traverse_virtual_zeroes
 1055 D1:B321 78 -  -  -  	ld a,b;a holds prev alpha pair
 1056 D1:B322 -  -  -  -  	;end of vitual zeroes  
 1057 D1:B322 -  -  -  -  
 1058 D1:B322 37 -  -  -  	scf 
 1059 D1:B323 -  -  -  -  sdcomp_offset_BG_2 .equ $
 1060 D1:B323 D2 2B B3 D1 	jp nc,sdcomp_bg_zeroes_end_skip;if offset, use previously read data 
 1061 D1:B327 -  -  -  -  	;if no offset, use next alpha pair
 1062 D1:B327 -  -  -  -  	
 1063 D1:B327 -  -  -  -  sdcomp_bg_sprite_loop_skip:;not in virt 0s 
 1064 D1:B327 CD 55 AF D1 	call sdcomp_get_next_alpha_pair;read next alpha pair 
 1065 D1:B32B -  -  -  -  sdcomp_bg_zeroes_end_skip:
 1066 D1:B32B D9 -  -  -  	exx;out 
 1067 D1:B32C -  -  -  -  	
 1068 D1:B32C -  -  -  -  	;write mask and color data 
 1069 D1:B32C D5 -  -  -  	push de 
 1070 D1:B32D -  -  -  -  	
 1071 D1:B32D 47 -  -  -  	ld b,a;save for later
 1072 D1:B32E CB 67 -  -  	bit 4,a ;check if first pixel has color 
 1073 D1:B330 3E 00 -  -  	ld a,0
 1074 D1:B332 16 FF -  -  	ld d,%11111111;assuming no colors 
 1075 D1:B334 CA 3E B3 D1 	jp z,sdcomp_bg_pixel_first_skip
 1076 D1:B338 -  -  -  -  	;has first color
 1077 D1:B338 16 F0 -  -  	ld d,%11110000;save second pixel of bg 
 1078 D1:B33A CD 78 B0 D1 	call sdcomp_get_next_color_ending_nibble
 1079 D1:B33E -  -  -  -  sdcomp_bg_pixel_first_skip:
 1080 D1:B33E -  -  -  -  	;a is either $00 or $0color1
 1081 D1:B33E -  -  -  -  	
 1082 D1:B33E 1E FF -  -  	ld e,%11111111;assuming no colors
 1083 D1:B340 -  -  -  -  	
 1084 D1:B340 CB 40 -  -  	bit 0,b;check second pixel alpha
 1085 D1:B342 47 -  -  -  	ld b,a;save for later 
 1086 D1:B343 3E 00 -  -  	ld a,0
 1087 D1:B345 CA 4F B3 D1 	jp z,sdcomp_bg_pixel_second_skip;
 1088 D1:B349 -  -  -  -  	;has second color 
 1089 D1:B349 CD 6F B0 D1 	call sdcomp_get_next_color_leading_nibble
 1090 D1:B34D -  -  -  -  	;a = color2 0 
 1091 D1:B34D 1E 0F -  -  	ld e,%00001111;save first pixel of bg
 1092 D1:B34F -  -  -  -  	
 1093 D1:B34F -  -  -  -  sdcomp_bg_pixel_second_skip:
 1094 D1:B34F -  -  -  -  	;a is either 00 or c2 0 
 1095 D1:B34F -  -  -  -  	;b is either 00 or 0 c1 
 1096 D1:B34F B0 -  -  -  	or b 
 1097 D1:B350 47 -  -  -  	ld b,a;final color data
 1098 D1:B351 7A -  -  -  	ld a,d 
 1099 D1:B352 A3 -  -  -  	and e ;final mask data 
 1100 D1:B353 -  -  -  -  	
 1101 D1:B353 D1 -  -  -  	pop de;return to pointer 
 1102 D1:B354 12 -  -  -  	ld (de),a;write mask data 
 1103 D1:B355 13 -  -  -  	inc de 
 1104 D1:B356 78 -  -  -  	ld a,b;color data 
 1105 D1:B357 12 -  -  -  	ld (de),a;write color data 
 1106 D1:B358 13 -  -  -  	inc de 
 1107 D1:B359 -  -  -  -  	
 1108 D1:B359 -  -  -  -  	;check if end reached 
 1109 D1:B359 3A 78 AE D1 	ld a,(sdcomp_end_reached_flag)
 1110 D1:B35D FE DA -  -  	cp %11011010;jp c
 1111 D1:B35F 3E 00 -  -  	ld a,0
 1112 D1:B361 C2 09 B3 D1 	jp nz,sdcomp_bg_sprite_loop 
 1113 D1:B365 3E D2 -  -  	ld a,%11010010;jp nc
 1114 D1:B367 32 23 B3 D1 	ld (sdcomp_offset_BG_2),a
 1115 D1:B36B C9 -  -  -  	ret 
 1116 D1:B36C -  -  -  -  
 1117 D1:B36C -  -  -  -  ;FIND GAP LENGTH
 1118 D1:B36C -  -  -  -  ;read bitsteam in pairs
 1119 D1:B36C -  -  -  -  ;gap length = number of full pairs found 
 1120 D1:B36C -  -  -  -  
 1121 D1:B36C -  -  -  -  ;STARTING PIXEL(S);have read either 11,01,10 in bitstream
 1122 D1:B36C -  -  -  -  ;write either both, start,or end pixel 
 1123 D1:B36C -  -  -  -  
 1124 D1:B36C -  -  -  -  ;LDIR
 1125 D1:B36C -  -  -  -  ;read number of pairs of 11 in bitstream 
 1126 D1:B36C -  -  -  -  ;if 0 move to ending pixels
 1127 D1:B36C -  -  -  -  ;if ends in 00, last full 11 pair will be ending pixels 
 1128 D1:B36C -  -  -  -  ;write ldir length 
 1129 D1:B36C -  -  -  -  ;if 0 move to next step
 1130 D1:B36C -  -  -  -  ;else write ldir data 
 1131 D1:B36C -  -  -  -  
 1132 D1:B36C -  -  -  -  
 1133 D1:B36C -  -  -  -  ;ENDING PIXEL(S)
 1134 D1:B36C -  -  -  -  ;00 if there is nothing after leading pixels 
 1135 D1:B36C -  -  -  -  ;11 10 01 otherwise
 1136 D1:B36C -  -  -  -  
 1137 D1:B36C -  -  -  -  ;BACK TO GAP LENGTH
 1138 D1:B36C -  -  -  -  
 1139 D1:B36C -  -  -  -  
 1140 D1:B36C -  -  -  -  
 1141 D1:B36C -  -  -  -  
 1142 D1:B36C -  -  -  -  
 1143 D1:B36C -  -  -  -  
 1144 D1:B36C -  -  -  -  
 1145 D1:B36C -  -  -  -  
 1146 D1:B36C -  -  -  -  
 1147 D1:B36C -  -  -  -  
 1148 D1:B36C -  -  -  -  
 1149 D1:B36C -  -  -  -  
 1150 D1:B36C -  -  -  -  
 1151 D1:B36C -  -  -  -  
 1152 D1:B36C -  -  -  -  
 1153 D1:B36C -  -  -  -  
 1154 D1:B36C -  -  -  -  
 1155 D1:B36C -  -  -  -  
 1156 D1:B36C -  -  -  -  
 1157 D1:B36C -  -  -  -  
 1158 D1:B36C -  -  -  -  
 1159 D1:B36C -  -  -  -  	
 1160 D1:B36C -  -  -  -  	
 1161 D1:B36C -  -  -  -  	
 1162 D1:B36C -  -  -  -  	
Listing for file "ascent.asm"
  243 D1:B36C -  -  -  -  #include "drawFG.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFG.txt"
    1 D1:B36C -  -  -  -  
    2 D1:B36C -  -  -  -  
    3 D1:B36C -  -  -  -  draw_mg:
    4 D1:B36C 2A 29 AA D1 	ld hl,(draw_buffer)
    5 D1:B370 22 3A B4 D1 	ld (dfgs_vram_top_1),hl
    6 D1:B374 22 A0 B4 D1 	ld (dfgs_vram_top_2),hl
    7 D1:B378 01 60 95 00 	ld bc,160*239
    8 D1:B37C 09 -  -  -  	add hl,bc
    9 D1:B37D 22 0E B5 D1 	ld (dfgs_vram_bottom_1),hl 
   10 D1:B381 22 DD B4 D1 	ld (dfgs_vram_bottom_2),hl 
   11 D1:B385 22 74 B5 D1 	ld (dfgs_vram_bottom_3),hl 
   12 D1:B389 22 A2 B5 D1 	ld (dfgs_vram_bottom_4),hl 
   13 D1:B38D -  -  -  -  	
   14 D1:B38D 2A 23 AA D1 	ld hl,(cam_pos)
   15 D1:B391 CB 3C -  -  	srl h
   16 D1:B393 CB 1D -  -  	rr l;div by 2
   17 D1:B395 01 EF 00 00 	ld bc,239
   18 D1:B399 09 -  -  -  	add hl,bc 
   19 D1:B39A 7D -  -  -  	ld a,l ;lsb cam pos 
   20 D1:B39B 32 20 B4 D1 	ld (dfgs_cam_height_1),a
   21 D1:B39F 32 7E B4 D1 	ld (dfgs_cam_height_2),a
   22 D1:B3A3 32 53 B5 D1 	ld (dfgs_cam_height_3),a
   23 D1:B3A7 -  -  -  -  	
   24 D1:B3A7 01 00 00 00 	ld bc,0
   25 D1:B3AB 4C -  -  -  	ld c,h;msb ccam pos 
   26 D1:B3AC 0C -  -  -  	inc c 
   27 D1:B3AD 21 77 C8 D1 	ld hl,MG_Data_frame_table
   28 D1:B3B1 09 -  -  -  	add hl,bc
   29 D1:B3B2 09 -  -  -  	add hl,bc 
   30 D1:B3B3 09 -  -  -  	add hl,bc 	
   31 D1:B3B4 ED 27 -  -  	ld hl,(hl);upper frame 
   32 D1:B3B6 -  -  -  -  	
   33 D1:B3B6 CD 06 B4 D1 	call draw_fg_sprites
   34 D1:B3BA C9 -  -  -  	ret
   35 D1:B3BB -  -  -  -  
   36 D1:B3BB -  -  -  -  
   37 D1:B3BB -  -  -  -  draw_fg:
   38 D1:B3BB 2A 29 AA D1 	ld hl,(draw_buffer)
   39 D1:B3BF 22 3A B4 D1 	ld (dfgs_vram_top_1),hl
   40 D1:B3C3 22 A0 B4 D1 	ld (dfgs_vram_top_2),hl
   41 D1:B3C7 01 60 95 00 	ld bc,160*239
   42 D1:B3CB 09 -  -  -  	add hl,bc
   43 D1:B3CC 22 0E B5 D1 	ld (dfgs_vram_bottom_1),hl 
   44 D1:B3D0 22 DD B4 D1 	ld (dfgs_vram_bottom_2),hl 
   45 D1:B3D4 22 74 B5 D1 	ld (dfgs_vram_bottom_3),hl 
   46 D1:B3D8 22 A2 B5 D1 	ld (dfgs_vram_bottom_4),hl 
   47 D1:B3DC -  -  -  -  	
   48 D1:B3DC 2A 23 AA D1 	ld hl,(cam_pos)
   49 D1:B3E0 01 EF 00 00 	ld bc,239
   50 D1:B3E4 09 -  -  -  	add hl,bc 
   51 D1:B3E5 7D -  -  -  	ld a,l ;lsb cam pos 
   52 D1:B3E6 32 20 B4 D1 	ld (dfgs_cam_height_1),a
   53 D1:B3EA 32 7E B4 D1 	ld (dfgs_cam_height_2),a
   54 D1:B3EE 32 53 B5 D1 	ld (dfgs_cam_height_3),a
   55 D1:B3F2 -  -  -  -  	
   56 D1:B3F2 01 00 00 00 	ld bc,0
   57 D1:B3F6 4C -  -  -  	ld c,h;msb ccam pos 
   58 D1:B3F7 0C -  -  -  	inc c 
   59 D1:B3F8 21 97 BF D1 	ld hl,FG_Data_frame_table
   60 D1:B3FC 09 -  -  -  	add hl,bc
   61 D1:B3FD 09 -  -  -  	add hl,bc 
   62 D1:B3FE 09 -  -  -  	add hl,bc 	
   63 D1:B3FF ED 27 -  -  	ld hl,(hl);upper frame 
   64 D1:B401 -  -  -  -  	
   65 D1:B401 CD 06 B4 D1 	call draw_fg_sprites
   66 D1:B405 C9 -  -  -  	ret
   67 D1:B406 -  -  -  -  
   68 D1:B406 -  -  -  -  
   69 D1:B406 -  -  -  -  
   70 D1:B406 -  -  -  -  
   71 D1:B406 -  -  -  -  ;hl = upper frame data
   72 D1:B406 -  -  -  -   
   73 D1:B406 -  -  -  -  ;load cam height 123,vram top 12 vram bottom 1234
   74 D1:B406 -  -  -  -  draw_fg_sprites:
   75 D1:B406 -  -  -  -  	;UPPER FRAME, bottom of upper frame is not on screen, bottom of mid frame is on screen bottom of lower is not on screen
   76 D1:B406 ED 17 -  -  	ld de,(hl)
   77 D1:B408 ED 53 E9 B5 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
   78 D1:B40D -  -  -  -  	
   79 D1:B40D 11 00 00 00 	ld de,0
   80 D1:B411 23 -  -  -  	inc hl 
   81 D1:B412 23 -  -  -  	inc hl
   82 D1:B413 23 -  -  -  	inc hl;past data table 
   83 D1:B414 -  -  -  -  	;hl is number of elements
   84 D1:B414 08 -  -  -  	ex af,af' ;'
   85 D1:B415 7E -  -  -  	ld a,(hl);number of elements
   86 D1:B416 08 -  -  -  	ex af,af' ;'
   87 D1:B417 23 -  -  -  	inc hl 
   88 D1:B418 -  -  -  -  	
   89 D1:B418 -  -  -  -  	
   90 D1:B418 -  -  -  -  dfgs_upper_loop:
   91 D1:B418 7E -  -  -  	ld a,(hl);sprite y value 
   92 D1:B419 23 -  -  -  	inc hl 
   93 D1:B41A 96 -  -  -  	sub (hl);subtract height
   94 D1:B41B D2 29 B4 D1 	jp nc,dfgs_upper_skip;if no carry,skip
   95 D1:B41F -  -  -  -  	
   96 D1:B41F -  -  -  -  dfgs_cam_height_1 .equ $ + 1
   97 D1:B41F D6 00 -  -  	sub 0 ;subtract camera height lsb 
   98 D1:B421 DA 37 B4 D1 	jp c,dfgs_upper_cont
   99 D1:B425 CA 37 B4 D1 	jp z,dfgs_upper_cont 
  100 D1:B429 -  -  -  -  dfgs_upper_skip:
  101 D1:B429 23 -  -  -  	inc hl 
  102 D1:B42A 23 -  -  -  	inc hl
  103 D1:B42B 23 -  -  -  	inc hl;to y 
  104 D1:B42C 08 -  -  -  	ex af,af';'
  105 D1:B42D 3D -  -  -  	dec a 
  106 D1:B42E CA 69 B4 D1 	jp z,dfgs_mid_start 
  107 D1:B432 08 -  -  -  	ex af,af';'
  108 D1:B433 C3 18 B4 D1 	jp dfgs_upper_loop
  109 D1:B437 -  -  -  -  	
  110 D1:B437 -  -  -  -  dfgs_upper_cont:
  111 D1:B437 -  -  -  -  	
  112 D1:B437 86 -  -  -  	add a,(hl);add height
  113 D1:B438 -  -  -  -  	;a now holds 0 indexed row, number of lines to skip drawing
  114 D1:B438 D9 -  -  -  	exx
  115 D1:B439 -  -  -  -  dfgs_vram_top_1 .equ $ + 1 
  116 D1:B439 11 00 00 00 	ld de,0;load top of vram 
  117 D1:B43D D9 -  -  -  	exx;out shadow
  118 D1:B43E -  -  -  -  	
  119 D1:B43E CD CF B5 D1 	call dfgs_setup_draw;toshadow	
  120 D1:B442 -  -  -  -  	
  121 D1:B442 CB 45 -  -  	bit 0,l 
  122 D1:B444 CA 50 B4 D1 	jp z,dfgs_upper_fast
  123 D1:B448 CD 28 AD D1 	call draw_slow_sprite_top_cut
  124 D1:B44C C3 54 B4 D1 	jp dfgs_upper_skip_2
  125 D1:B450 -  -  -  -  dfgs_upper_fast:
  126 D1:B450 CD A8 AC D1 	call draw_fast_sprite_top_cut
  127 D1:B454 -  -  -  -  dfgs_upper_skip_2:
  128 D1:B454 D9 -  -  -  	exx ;out of shadow, hl holds index
  129 D1:B455 -  -  -  -  	
  130 D1:B455 11 00 00 00 	ld de,0 
  131 D1:B459 01 00 00 00 	ld bc,0
  132 D1:B45D 23 -  -  -  	inc hl;to y 
  133 D1:B45E 08 -  -  -  	ex af,af';'
  134 D1:B45F 3D -  -  -  	dec a 
  135 D1:B460 CA 69 B4 D1 	jp z,dfgs_mid_start 
  136 D1:B464 08 -  -  -  	ex af,af';'
  137 D1:B465 C3 18 B4 D1 	jp dfgs_upper_loop
  138 D1:B469 -  -  -  -  	
  139 D1:B469 -  -  -  -  dfgs_mid_start:;MIDDLE FRAME, can be top cut, no cut, or bottom cut ===============================================
  140 D1:B469 -  -  -  -  	
  141 D1:B469 ED 17 -  -  	ld de,(hl)
  142 D1:B46B ED 53 E9 B5 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  143 D1:B470 11 00 00 00 	ld de,0
  144 D1:B474 23 -  -  -  	inc hl 
  145 D1:B475 23 -  -  -  	inc hl
  146 D1:B476 23 -  -  -  	inc hl;past data table 
  147 D1:B477 08 -  -  -  	ex af,af' ;'
  148 D1:B478 7E -  -  -  	ld a,(hl);number of elements
  149 D1:B479 08 -  -  -  	ex af,af' ;'
  150 D1:B47A 23 -  -  -  	inc hl 
  151 D1:B47B -  -  -  -  dfgs_mid_loop:
  152 D1:B47B 7E -  -  -  	ld a,(hl);y val 
  153 D1:B47C 23 -  -  -  	inc hl ;to height
  154 D1:B47D -  -  -  -  dfgs_cam_height_2 .equ $ + 1
  155 D1:B47D D6 00 -  -  	sub 0;subtract cam pos
  156 D1:B47F DA CF B4 D1 	jp c,dfgs_mid_sprite_below ;sprite is below camera pos, either full or bottom cut 
  157 D1:B483 CA CF B4 D1 	jp z,dfgs_mid_sprite_below 
  158 D1:B487 -  -  -  -  	;sprite start is above camera pos, top cut 
  159 D1:B487 BE -  -  -  	cp (hl);a holds numb lines below sprite y , compare to height
  160 D1:B488 DA 9E B4 D1 	jp c,dfgs_mid_above_cont
  161 D1:B48C CA 9E B4 D1 	jp z,dfgs_mid_above_cont
  162 D1:B490 -  -  -  -  dfgs_mid_skip:;sprite is entirely above or below cam pos 
  163 D1:B490 23 -  -  -  	inc hl 
  164 D1:B491 23 -  -  -  	inc hl
  165 D1:B492 23 -  -  -  	inc hl;to y 
  166 D1:B493 08 -  -  -  	ex af,af';'
  167 D1:B494 3D -  -  -  	dec a 
  168 D1:B495 CA 3E B5 D1 	jp z,dfgs_lower_start 
  169 D1:B499 08 -  -  -  	ex af,af';'
  170 D1:B49A C3 7B B4 D1 	jp dfgs_mid_loop
  171 D1:B49E -  -  -  -  	
  172 D1:B49E -  -  -  -  dfgs_mid_above_cont:
  173 D1:B49E -  -  -  -  	;a = lines to skip 
  174 D1:B49E D9 -  -  -  	exx
  175 D1:B49F -  -  -  -  dfgs_vram_top_2 .equ $ + 1 
  176 D1:B49F 11 00 00 00 	ld de,0
  177 D1:B4A3 D9 -  -  -  	exx
  178 D1:B4A4 -  -  -  -  	
  179 D1:B4A4 CD CF B5 D1 	call dfgs_setup_draw;toshadow
  180 D1:B4A8 -  -  -  -  	
  181 D1:B4A8 CB 45 -  -  	bit 0,l 
  182 D1:B4AA CA B6 B4 D1 	jp z,dfgs_mid_top_fast
  183 D1:B4AE CD 28 AD D1 	call draw_slow_sprite_top_cut
  184 D1:B4B2 C3 BA B4 D1 	jp dfgs_mid_top_slow
  185 D1:B4B6 -  -  -  -  dfgs_mid_top_fast:
  186 D1:B4B6 CD A8 AC D1 	call draw_fast_sprite_top_cut
  187 D1:B4BA -  -  -  -  dfgs_mid_top_slow:
  188 D1:B4BA D9 -  -  -  	exx;out shadwo
  189 D1:B4BB 11 00 00 00 	ld de,0 
  190 D1:B4BF 01 00 00 00 	ld bc,0
  191 D1:B4C3 23 -  -  -  	inc hl;to y 
  192 D1:B4C4 08 -  -  -  	ex af,af';'
  193 D1:B4C5 3D -  -  -  	dec a 
  194 D1:B4C6 CA 3E B5 D1 	jp z,dfgs_lower_start 
  195 D1:B4CA 08 -  -  -  	ex af,af';'
  196 D1:B4CB C3 7B B4 D1 	jp dfgs_mid_loop
  197 D1:B4CF -  -  -  -  
  198 D1:B4CF -  -  -  -  dfgs_mid_sprite_below:;sprite start is = or below top of screen 
  199 D1:B4CF -  -  -  -  	;can be full or bottom cut
  200 D1:B4CF -  -  -  -  	;a holds distance of sprite below top of screen
  201 D1:B4CF -  -  -  -  	;0 = top of screen 255 = 1 below ,254 = 2 below ... 17 = bottom of screen
  202 D1:B4CF 3D -  -  -  	dec a 
  203 D1:B4D0 D6 10 -  -  	sub 16;a holds dist from bottom
  204 D1:B4D2 DA 90 B4 D1 	jp c,dfgs_mid_skip
  205 D1:B4D6 BE -  -  -  	cp (hl);compare to height
  206 D1:B4D7 DA 0C B5 D1 	jp c,dfgs_mid_bottom_cut
  207 D1:B4DB -  -  -  -  	
  208 D1:B4DB -  -  -  -  	;full sprite
  209 D1:B4DB D9 -  -  -  	exx
  210 D1:B4DC -  -  -  -  dfgs_vram_bottom_2 .equ $ + 1
  211 D1:B4DC 11 00 00 00 	ld de,0
  212 D1:B4E0 D9 -  -  -  	exx
  213 D1:B4E1 CD CF B5 D1 	call dfgs_setup_draw;toshadow
  214 D1:B4E5 CB 45 -  -  	bit 0,l
  215 D1:B4E7 CA F3 B4 D1 	jp z,dfgs_mid_full_fast
  216 D1:B4EB CD F9 AC D1 	call draw_slow_sprite_full
  217 D1:B4EF C3 F7 B4 D1 	jp dfgs_mid_full_slow
  218 D1:B4F3 -  -  -  -  dfgs_mid_full_fast:
  219 D1:B4F3 CD DF AC D1 	call draw_fast_sprite_full
  220 D1:B4F7 -  -  -  -  dfgs_mid_full_slow:
  221 D1:B4F7 D9 -  -  -  	exx
  222 D1:B4F8 11 00 00 00 	ld de,0 
  223 D1:B4FC 01 00 00 00 	ld bc,0
  224 D1:B500 23 -  -  -  	inc hl;to y 
  225 D1:B501 08 -  -  -  	ex af,af';'
  226 D1:B502 3D -  -  -  	dec a 
  227 D1:B503 CA 3E B5 D1 	jp z,dfgs_lower_start 
  228 D1:B507 08 -  -  -  	ex af,af';'
  229 D1:B508 C3 7B B4 D1 	jp dfgs_mid_loop
  230 D1:B50C -  -  -  -  	
  231 D1:B50C -  -  -  -  	
  232 D1:B50C -  -  -  -  dfgs_mid_bottom_cut:
  233 D1:B50C D9 -  -  -  	exx
  234 D1:B50D -  -  -  -  dfgs_vram_bottom_1 .equ $ + 1
  235 D1:B50D 11 00 00 00 	ld de,0
  236 D1:B511 D9 -  -  -  	exx
  237 D1:B512 CD CF B5 D1 	call dfgs_setup_draw
  238 D1:B516 3C -  -  -  	inc a;for bottom cuts
  239 D1:B517 CB 45 -  -  	bit 0,l 
  240 D1:B519 CA 25 B5 D1 	jp z,dfgs_mid_bottom_fast
  241 D1:B51D CD 5D AD D1 	call draw_slow_sprite_bottom_cut
  242 D1:B521 C3 29 B5 D1 	jp dfgs_mid_bottom_slow
  243 D1:B525 -  -  -  -  dfgs_mid_bottom_fast:
  244 D1:B525 CD 94 AC D1 	call draw_fast_sprite_bottom_cut
  245 D1:B529 -  -  -  -  dfgs_mid_bottom_slow:
  246 D1:B529 D9 -  -  -  	exx
  247 D1:B52A 11 00 00 00 	ld de,0 
  248 D1:B52E 01 00 00 00 	ld bc,0
  249 D1:B532 23 -  -  -  	inc hl;to y 
  250 D1:B533 08 -  -  -  	ex af,af';'
  251 D1:B534 3D -  -  -  	dec a 
  252 D1:B535 CA 3E B5 D1 	jp z,dfgs_lower_start 
  253 D1:B539 08 -  -  -  	ex af,af';'
  254 D1:B53A C3 7B B4 D1 	jp dfgs_mid_loop
  255 D1:B53E -  -  -  -  	
  256 D1:B53E -  -  -  -  	
  257 D1:B53E -  -  -  -  	
  258 D1:B53E -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================	
  259 D1:B53E -  -  -  -  dfgs_lower_start:
  260 D1:B53E -  -  -  -  	
  261 D1:B53E ED 17 -  -  	ld de,(hl)
  262 D1:B540 ED 53 E9 B5 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  263 D1:B545 11 00 00 00 	ld de,0
  264 D1:B549 23 -  -  -  	inc hl 
  265 D1:B54A 23 -  -  -  	inc hl
  266 D1:B54B 23 -  -  -  	inc hl;past data table 
  267 D1:B54C -  -  -  -  	
  268 D1:B54C 08 -  -  -  	ex af,af' ;'
  269 D1:B54D 7E -  -  -  	ld a,(hl);number of elements
  270 D1:B54E 08 -  -  -  	ex af,af' ;'
  271 D1:B54F 23 -  -  -  	inc hl
  272 D1:B550 -  -  -  -  	
  273 D1:B550 3E EF -  -  	ld a,239
  274 D1:B552 -  -  -  -  dfgs_cam_height_3 .equ $ + 1 
  275 D1:B552 D6 00 -  -  	sub 0;cam pos 
  276 D1:B554 D8 -  -  -  	ret c;if bottom frame is offscreen 
  277 D1:B555 C8 -  -  -  	ret z 
  278 D1:B556 -  -  -  -  	;a holds distance of top line of lower frame from bottom of screen starting from 1
  279 D1:B556 32 5D B5 D1 	ld (dfgs_lower_frame_height),a
  280 D1:B55A -  -  -  -  
  281 D1:B55A -  -  -  -  dfgs_lower_loop:
  282 D1:B55A 7E -  -  -  	ld a,(hl);y
  283 D1:B55B 23 -  -  -  	inc hl
  284 D1:B55C -  -  -  -  dfgs_lower_frame_height .equ $ + 1
  285 D1:B55C C6 00 -  -  	add a,0;add frame height 
  286 D1:B55E DA 6D B5 D1 	jp c,dfgs_lower_cont;sprite onscreen
  287 D1:B562 -  -  -  -  dfgs_lower_skip:;sprite offscreen
  288 D1:B562 23 -  -  -  	inc hl
  289 D1:B563 23 -  -  -  	inc hl
  290 D1:B564 23 -  -  -  	inc hl;to y 
  291 D1:B565 08 -  -  -  	ex af,af';'
  292 D1:B566 3D -  -  -  	dec a 
  293 D1:B567 C8 -  -  -  	ret z
  294 D1:B568 08 -  -  -  	ex af,af';'
  295 D1:B569 C3 5A B5 D1 	jp dfgs_lower_loop
  296 D1:B56D -  -  -  -  	
  297 D1:B56D -  -  -  -  dfgs_lower_cont:
  298 D1:B56D -  -  -  -  	;a holds sprite dist from bottom of screen, from 0
  299 D1:B56D BE -  -  -  	cp (hl);compare to height
  300 D1:B56E DA A0 B5 D1 	jp c,dfgs_lower_bottom_cut
  301 D1:B572 -  -  -  -  	
  302 D1:B572 -  -  -  -  	;full sprite 
  303 D1:B572 D9 -  -  -  	exx
  304 D1:B573 -  -  -  -  dfgs_vram_bottom_3 .equ $ + 1
  305 D1:B573 11 00 00 00 	ld de,0
  306 D1:B577 D9 -  -  -  	exx
  307 D1:B578 CD CF B5 D1 	call dfgs_setup_draw
  308 D1:B57C CB 45 -  -  	bit 0,l
  309 D1:B57E CA 8A B5 D1 	jp z,dfgs_lower_full_fast
  310 D1:B582 CD F9 AC D1 	call draw_slow_sprite_full
  311 D1:B586 C3 8E B5 D1 	jp dfgs_lower_full_slow
  312 D1:B58A -  -  -  -  dfgs_lower_full_fast:
  313 D1:B58A CD DF AC D1 	call draw_fast_sprite_full
  314 D1:B58E -  -  -  -  dfgs_lower_full_slow:
  315 D1:B58E D9 -  -  -  	exx
  316 D1:B58F 11 00 00 00 	ld de,0 
  317 D1:B593 01 00 00 00 	ld bc,0
  318 D1:B597 23 -  -  -  	inc hl;to y 
  319 D1:B598 08 -  -  -  	ex af,af';'
  320 D1:B599 3D -  -  -  	dec a 
  321 D1:B59A C8 -  -  -  	ret z
  322 D1:B59B 08 -  -  -  	ex af,af';'
  323 D1:B59C C3 5A B5 D1 	jp dfgs_lower_loop
  324 D1:B5A0 -  -  -  -  	
  325 D1:B5A0 -  -  -  -  	
  326 D1:B5A0 -  -  -  -  dfgs_lower_bottom_cut:
  327 D1:B5A0 D9 -  -  -  	exx
  328 D1:B5A1 -  -  -  -  dfgs_vram_bottom_4 .equ $ + 1
  329 D1:B5A1 11 00 00 00 	ld de,0
  330 D1:B5A5 D9 -  -  -  	exx
  331 D1:B5A6 CD CF B5 D1 	call dfgs_setup_draw
  332 D1:B5AA 3C -  -  -  	inc a;for bottom cuts
  333 D1:B5AB CB 45 -  -  	bit 0,l 
  334 D1:B5AD CA B9 B5 D1 	jp z,dfgs_lower_bottom_fast
  335 D1:B5B1 CD 5D AD D1 	call draw_slow_sprite_bottom_cut
  336 D1:B5B5 C3 BD B5 D1 	jp dfgs_lower_bottom_slow
  337 D1:B5B9 -  -  -  -  dfgs_lower_bottom_fast:
  338 D1:B5B9 CD 94 AC D1 	call draw_fast_sprite_bottom_cut
  339 D1:B5BD -  -  -  -  dfgs_lower_bottom_slow:
  340 D1:B5BD D9 -  -  -  	exx
  341 D1:B5BE 11 00 00 00 	ld de,0 
  342 D1:B5C2 01 00 00 00 	ld bc,0
  343 D1:B5C6 23 -  -  -  	inc hl;to y 
  344 D1:B5C7 08 -  -  -  	ex af,af';'
  345 D1:B5C8 3D -  -  -  	dec a 
  346 D1:B5C9 C8 -  -  -  	ret z
  347 D1:B5CA 08 -  -  -  	ex af,af';'
  348 D1:B5CB C3 5A B5 D1 	jp dfgs_lower_loop
  349 D1:B5CF -  -  -  -  	
  350 D1:B5CF -  -  -  -  	
  351 D1:B5CF -  -  -  -  	
  352 D1:B5CF -  -  -  -  	
  353 D1:B5CF -  -  -  -  	
  354 D1:B5CF -  -  -  -  	
  355 D1:B5CF -  -  -  -  	
  356 D1:B5CF -  -  -  -  	
  357 D1:B5CF -  -  -  -  	
  358 D1:B5CF -  -  -  -  ;a holds distance from bottom of screen, starting from 0, or for top cut dist above screen = num lines to skip 
  359 D1:B5CF -  -  -  -  ;(hl) = height 	
  360 D1:B5CF -  -  -  -  ;de = initial vram, top for top cut, otherwise bottom
  361 D1:B5CF -  -  -  -  ;returns hl = sprite data, de = vram position
  362 D1:B5CF -  -  -  -  dfgs_setup_draw:
  363 D1:B5CF 23 -  -  -  	inc hl
  364 D1:B5D0 01 00 00 00 	ld bc,0
  365 D1:B5D4 4E -  -  -  	ld c,(hl); x pos
  366 D1:B5D5 23 -  -  -  	inc hl;to index
  367 D1:B5D6 E5 -  -  -  	push hl
  368 D1:B5D7 C5 -  -  -  	push bc
  369 D1:B5D8 D9 -  -  -  	exx;toshadow
  370 D1:B5D9 C1 -  -  -  	pop bc
  371 D1:B5DA 26 A0 -  -  	ld h,160
  372 D1:B5DC 6F -  -  -  	ld l,a
  373 D1:B5DD ED 6C -  -  	mlt hl;subtract from vram
  374 D1:B5DF 37 -  -  -  	scf 
  375 D1:B5E0 3F -  -  -  	ccf
  376 D1:B5E1 EB -  -  -  	ex de,hl;hl holds vram
  377 D1:B5E2 ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  378 D1:B5E4 09 -  -  -  	add hl,bc;add x pos ;hl now holds sprite draw start pos 
  379 D1:B5E5 EB -  -  -  	ex de,hl;put in de
  380 D1:B5E6 E1 -  -  -  	pop hl;back to frame data 
  381 D1:B5E7 4E -  -  -  	ld c,(hl);sprite index
  382 D1:B5E8 -  -  -  -  dfgs_sprite_pointers_1 .equ $ + 1	
  383 D1:B5E8 21 00 00 00 	ld hl,0 ;load sprite table 
  384 D1:B5EC 09 -  -  -  	add hl,bc
  385 D1:B5ED 09 -  -  -  	add hl,bc 
  386 D1:B5EE 09 -  -  -  	add hl,bc;move to sprite ptr
  387 D1:B5EF -  -  -  -  	;call prgmpause
  388 D1:B5EF ED 27 -  -  	ld hl,(hl);hl holds sprite data, if even = fast sprite 
  389 D1:B5F1 -  -  -  -  
  390 D1:B5F1 C9 -  -  -  	ret
  391 D1:B5F2 -  -  -  -  
  392 D1:B5F2 -  -  -  -  	
  393 D1:B5F2 -  -  -  -  	
  394 D1:B5F2 -  -  -  -  	
  395 D1:B5F2 -  -  -  -  	
  396 D1:B5F2 -  -  -  -  	
  397 D1:B5F2 -  -  -  -  	
  398 D1:B5F2 -  -  -  -  	
  399 D1:B5F2 -  -  -  -  	
  400 D1:B5F2 -  -  -  -  	
  401 D1:B5F2 -  -  -  -  	
  402 D1:B5F2 -  -  -  -  	
  403 D1:B5F2 -  -  -  -  	
Listing for file "ascent.asm"
  244 D1:B5F2 -  -  -  -  
  245 D1:B5F2 -  -  -  -  #include "levelData.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\levelData.txt"
    1 D1:B5F2 -  -  -  -  bg_sprite_pointers:;255 sprites max
    2 D1:B5F2 -  -  -  -  	;.dl lastSprite
    3 D1:B5F2 -  -  -  -  	;.dl lastSpritecopy
    4 D1:B5F2 -  -  -  -  	;.dl sprite2
    5 D1:B5F2 -  -  -  -  	;.dl sprite3
    6 D1:B5F2 -  -  -  -  
    7 D1:B5F2 -  -  -  -  
    8 D1:B5F2 -  -  -  -  
    9 D1:B5F2 -  -  -  -  
   10 D1:B5F2 -  -  -  -  bg_data_frame:
   11 D1:B5F2 -  -  -  -  	;.db sprite data table pointer
   12 D1:B5F2 -  -  -  -  	;.db y (lsb) ,height-1,x,index(0 indicates end of data)
   13 D1:B5F2 -  -  -  -  	
   14 D1:B5F2 -  -  -  -  
   15 D1:B5F2 -  -  -  -  bg_sprite_pointers_1:
   16 D1:B5F2 -  -  -  -  	;.dl testBG1
   17 D1:B5F2 -  -  -  -  	;.dl testBG1;h = 7
   18 D1:B5F2 -  -  -  -  	;.dl testBG2;h = 5
   19 D1:B5F2 -  -  -  -  	;.dl testBG3;h = 0
   20 D1:B5F2 -  -  -  -  	;.dl testBG4
   21 D1:B5F2 -  -  -  -  
   22 D1:B5F2 -  -  -  -  bg_data_frame_0:
   23 D1:B5F2 F2 B5 D1 -  	.dl bg_sprite_pointers_1 
   24 D1:B5F5 C8 07 05 00 	.db 200,7,5,0
   25 D1:B5F9 -  -  -  -  	;upper 
   26 D1:B5F9 -  -  -  -  bg_data_frame_1:
   27 D1:B5F9 F2 B5 D1 -  	.dl bg_sprite_pointers_1
   28 D1:B5FC C8 07 05 01 	.db 200,7,5,1
   29 D1:B600 64 07 05 01 	.db 100,7,5,1
   30 D1:B604 08 07 05 01 	.db 8,7,5,1
   31 D1:B608 07 07 0A 01 	.db 7,7,10,1
   32 D1:B60C 06 07 0F 01 	.db 6,7,15,1;X
   33 D1:B610 05 07 14 01 	.db 5,7,20,1;X
   34 D1:B614 05 05 19 02 	.db 5,5,25,2
   35 D1:B618 04 05 1E 02 	.db 4,5,30,2;X
   36 D1:B61C 03 05 23 02 	.db 3,5,35,2;X
   37 D1:B620 00 05 28 02 	.db 0,5,40,2;X
   38 D1:B624 00 00 2D 03 	.db 0,0,45,3
   39 D1:B628 0A 00 32 03 	.db 10,0,50,3
   40 D1:B62C 32 07 05 00 	.db 50,7,5,0;end 
   41 D1:B630 -  -  -  -  	
   42 D1:B630 -  -  -  -  bg_data_frame_2:
   43 D1:B630 F2 B5 D1 -  	.dl bg_sprite_pointers_1
   44 D1:B633 FF 07 3C 01 	.db 255,7,60,1
   45 D1:B637 FE 07 41 01 	.db 254,7,65,1
   46 D1:B63B 64 05 46 02 	.db 100,5,70,2
   47 D1:B63F 64 00 4B 03 	.db 100,0,75,3
   48 D1:B643 32 07 50 00 	.db 50,7,80,0
   49 D1:B647 -  -  -  -  	
   50 D1:B647 -  -  -  -  	
Listing for file "ascent.asm"
  246 D1:B647 -  -  -  -  #include "FGLevelData.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\FGLevelData.txt"
    1 D1:B647 -  -  -  -  
    2 D1:B647 -  -  -  -  FG_sprite_table_1:
    3 D1:B647 -  -  -  -  	;.dl fg_sprite_1;9*4
    4 D1:B647 -  -  -  -  	;.dl fg_sprite_1
    5 D1:B647 -  -  -  -  	;.dl fg_sprite_2;8*8
    6 D1:B647 -  -  -  -  	;.dl fg_sprite_3;8*8 fast
    7 D1:B647 -  -  -  -  	;.dl fg_sprite_4;8*8 fast 
    8 D1:B647 -  -  -  -  	
    9 D1:B647 -  -  -  -  
   10 D1:B647 -  -  -  -  
   11 D1:B647 -  -  -  -  
   12 D1:B647 -  -  -  -  
   13 D1:B647 -  -  -  -  FG_Frame_2:
   14 D1:B647 47 B6 D1 -  	.dl FG_sprite_table_1
   15 D1:B64A 03 03 00 01 	.db 3,3,0,1
   16 D1:B64E 02 03 05 01 	.db 2,3,5,1;x
   17 D1:B652 01 03 0A 01 	.db 1,3,10,1;x
   18 D1:B656 02 07 0F 02 	.db 2,7,15,2;x
   19 D1:B65A 32 07 14 02 	.db 50,7,20,2
   20 D1:B65E 1E 07 19 03 	.db 30,7,25,3
   21 D1:B662 00 07 1E 03 	.db 0,7,30,3;x
   22 D1:B666 05 07 23 03 	.db 5,7,35,3;x
   23 D1:B66A 03 07 28 04 	.db 3,7,40,4;x
   24 D1:B66E 00 03 2D 00 	.db 0,3,45,0;x
   25 D1:B672 -  -  -  -  
   26 D1:B672 -  -  -  -  
   27 D1:B672 -  -  -  -  FG_Frame_1:
   28 D1:B672 -  -  -  -  	;.dl sprite table ptr
   29 D1:B672 -  -  -  -  	;.db y in frame, height-1, x, index 
   30 D1:B672 47 B6 D1 -  	.dl FG_sprite_table_1
   31 D1:B675 FF 03 3C 01 	.db 255,3,60,1
   32 D1:B679 FF 07 46 02 	.db 255,7,70,2
   33 D1:B67D FF 07 4B 03 	.db 255,7,75,3
   34 D1:B681 FF 07 50 04 	.db 255,7,80,4
   35 D1:B685 FE 03 55 01 	.db 254,3,85,1
   36 D1:B689 FE 07 5A 04 	.db 254,7,90,4
   37 D1:B68D C8 03 0A 01 	.db 200,3,10,1
   38 D1:B691 C8 07 0F 02 	.db 200,7,15,2
   39 D1:B695 C8 07 14 03 	.db 200,7,20,3
   40 D1:B699 32 07 0A 02 	.db 50,7,10,2
   41 D1:B69D 0F 07 50 03 	.db 15,7,80,3
   42 D1:B6A1 10 07 41 03 	.db 16,7,65,3
   43 D1:B6A5 11 03 46 01 	.db 17,3,70,1
   44 D1:B6A9 09 07 0A 02 	.db 9,7,10,2
   45 D1:B6AD 08 07 14 02 	.db 8,7,20,2
   46 D1:B6B1 08 07 1E 03 	.db 8,7,30,3
   47 D1:B6B5 07 07 23 02 	.db 7,7,35,2
   48 D1:B6B9 06 07 28 02 	.db 6,7,40,2
   49 D1:B6BD 05 07 2D 02 	.db 5,7,45,2
   50 D1:B6C1 00 07 32 02 	.db 0,7,50,2
   51 D1:B6C5 04 07 37 03 	.db 4,7,55,3
   52 D1:B6C9 02 07 3C 04 	.db 2,7,60,4
   53 D1:B6CD 01 03 41 00 	.db 1,3,65,0
   54 D1:B6D1 -  -  -  -  	
   55 D1:B6D1 -  -  -  -  
   56 D1:B6D1 -  -  -  -  FG_Frame_0:
   57 D1:B6D1 47 B6 D1 -  	.dl FG_sprite_table_1
   58 D1:B6D4 FF 03 46 01 	.db 255,3,70,1
   59 D1:B6D8 FF 07 4B 02 	.db 255,7,75,2
   60 D1:B6DC FF 07 5F 03 	.db 255,7,95,3
   61 D1:B6E0 FF 07 50 04 	.db 255,7,80,4
   62 D1:B6E4 FE 03 78 01 	.db 254,3,120,1
   63 D1:B6E8 FE 07 7D 04 	.db 254,7,125,4
   64 D1:B6EC C8 03 0A 01 	.db 200,3,10,1
   65 D1:B6F0 C8 07 0F 02 	.db 200,7,15,2
   66 D1:B6F4 C8 07 14 03 	.db 200,7,20,3
   67 D1:B6F8 C8 03 00 00 	.db 200,3,0,0
   68 D1:B6FC -  -  -  -  	
   69 D1:B6FC -  -  -  -  	
   70 D1:B6FC -  -  -  -  	
   71 D1:B6FC -  -  -  -  
   72 D1:B6FC -  -  -  -  	
   73 D1:B6FC -  -  -  -  	
   74 D1:B6FC -  -  -  -  	
   75 D1:B6FC -  -  -  -  	
   76 D1:B6FC -  -  -  -  	
   77 D1:B6FC -  -  -  -  	
   78 D1:B6FC -  -  -  -  	
Listing for file "ascent.asm"
  247 D1:B6FC -  -  -  -  
  248 D1:B6FC -  -  -  -  #include "Sprite_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\Sprite_Data.txt"
    1 D1:B6FC -  -  -  -  Banana1:
    2 D1:B6FC 20 -  -  -  	.db %00100000
    3 D1:B6FD 18 18 -  -  	.db 24, 24
    4 D1:B6FF E0 00 00 FC 
              00 00 7E 00 	.db %11100000, %00000000, %00000000, %11111100, %00000000, %00000000, %01111110, %00000000
    5 D1:B707 00 7F 00 00 
              7F 80 00 7F 	.db %00000000, %01111111, %00000000, %00000000, %01111111, %10000000, %00000000, %01111111
    6 D1:B70F 80 00 7F 80 
              00 7F C0 00 	.db %10000000, %00000000, %01111111, %10000000, %00000000, %01111111, %11000000, %00000000
    7 D1:B717 7F E0 00 7F 
              F0 00 7F F8 	.db %01111111, %11100000, %00000000, %01111111, %11110000, %00000000, %01111111, %11111000
    8 D1:B71F 00 3F FC 00 
              3F FF 00 3F 	.db %00000000, %00111111, %11111100, %00000000, %00111111, %11111111, %00000000, %00111111
    9 D1:B727 FF C0 1F FF 
              F0 0F FF F8 	.db %11111111, %11000000, %00011111, %11111111, %11110000, %00001111, %11111111, %11111000
   10 D1:B72F 0F FF F8 07 
              FF FC 03 FF 	.db %00001111, %11111111, %11111000, %00000111, %11111111, %11111100, %00000011, %11111111
   11 D1:B737 FF 03 FF FF 
              01 FF FF 00 	.db %11111111, %00000011, %11111111, %11111111, %00000001, %11111111, %11111111, %00000000
   12 D1:B73F 7F FF 00 7F 
              FF 00 1F FE 	.db %01111111, %11111111, %00000000, %01111111, %11111111, %00000000, %00011111, %11111110
   13 D1:B747 -  -  -  -  
   14 D1:B747 01 20 -  -  	.db %00000001, %00100000
   15 D1:B749 -  -  -  -  
   16 D1:B749 00 01 40 95 
              AA 56 A9 56 	.db %00000000, %00000001, %01000000, %10010101, %10101010, %01010110, %10101001, %01010110
   17 D1:B751 AA 56 AA 56 
              AA 95 AA A9 	.db %10101010, %01010110, %10101010, %01010110, %10101010, %10010101, %10101010, %10101001
   18 D1:B759 5A AA A5 5A 
              5A A5 6A 6A 	.db %01011010, %10101010, %10100101, %01011010, %01011010, %10100101, %01101010, %01101010
   19 D1:B761 A5 6A 9A A9 
              55 A9 6A A9 	.db %10100101, %01101010, %10011010, %10101001, %01010101, %10101001, %01101010, %10101001
   20 D1:B769 56 A9 6A AA 
              55 AA AA AA 	.db %01010110, %10101001, %01101010, %10101010, %01010101, %10101010, %10101010, %10101010
   21 D1:B771 A5 5A A9 6A 
              AA 56 AA 5A 	.db %10100101, %01011010, %10101001, %01101010, %10101010, %01010110, %10101010, %01011010
   22 D1:B779 AA 56 AA AA 
              AA 95 5A AA 	.db %10101010, %01010110, %10101010, %10101010, %10101010, %10010101, %01011010, %10101010
   23 D1:B781 56 AA 95 AA 
              A9 56 A5 AA 	.db %01010110, %10101010, %10010101, %10101010, %10101001, %01010110, %10100101, %10101010
   24 D1:B789 AA 96 95 6A 
              AA AA 55 55 	.db %10101010, %10010110, %10010101, %01101010, %10101010, %10101010, %01010101, %01010101
   25 D1:B791 55 40 -  -  	.db %01010101, %01000000
   26 D1:B793 -  -  -  -  
   27 D1:B793 -  -  -  -  
   28 D1:B793 -  -  -  -  Banana1Large:
   29 D1:B793 20 -  -  -  	.db %00100000
   30 D1:B794 2E 2E -  -  	.db 46, 46
   31 D1:B796 FC 00 00 00 
              00 03 F0 00 	.db %11111100, %00000000, %00000000, %00000000, %00000000, %00000011, %11110000, %00000000
   32 D1:B79E 00 00 00 0F 
              FF 00 00 00 	.db %00000000, %00000000, %00000000, %00001111, %11111111, %00000000, %00000000, %00000000
   33 D1:B7A6 00 3F FC 00 
              00 00 00 3F 	.db %00000000, %00111111, %11111100, %00000000, %00000000, %00000000, %00000000, %00111111
   34 D1:B7AE F0 00 00 00 
              00 FF C0 00 	.db %11110000, %00000000, %00000000, %00000000, %00000000, %11111111, %11000000, %00000000
   35 D1:B7B6 00 00 03 FF 
              C0 00 00 00 	.db %00000000, %00000000, %00000011, %11111111, %11000000, %00000000, %00000000, %00000000
   36 D1:B7BE 0F FF 00 00 
              00 00 3F FF 	.db %00001111, %11111111, %00000000, %00000000, %00000000, %00000000, %00111111, %11111111
   37 D1:B7C6 00 00 00 00 
              FF FC 00 00 	.db %00000000, %00000000, %00000000, %00000000, %11111111, %11111100, %00000000, %00000000
   38 D1:B7CE 00 03 FF F0 
              00 00 00 0F 	.db %00000000, %00000011, %11111111, %11110000, %00000000, %00000000, %00000000, %00001111
   39 D1:B7D6 FF C0 00 00 
              00 3F FF 00 	.db %11111111, %11000000, %00000000, %00000000, %00000000, %00111111, %11111111, %00000000
   40 D1:B7DE 00 00 00 FF 
              FC 00 00 00 	.db %00000000, %00000000, %00000000, %11111111, %11111100, %00000000, %00000000, %00000000
   41 D1:B7E6 03 FF FC 00 
              00 00 0F FF 	.db %00000011, %11111111, %11111100, %00000000, %00000000, %00000000, %00001111, %11111111
   42 D1:B7EE F0 00 00 00 
              3F FF F0 00 	.db %11110000, %00000000, %00000000, %00000000, %00111111, %11111111, %11110000, %00000000
   43 D1:B7F6 00 00 FF FF 
              C0 00 00 03 	.db %00000000, %00000000, %11111111, %11111111, %11000000, %00000000, %00000000, %00000011
   44 D1:B7FE FF FF C0 00 
              00 0F FF FF 	.db %11111111, %11111111, %11000000, %00000000, %00000000, %00001111, %11111111, %11111111
   45 D1:B806 00 00 00 3F 
              FF FF C0 00 	.db %00000000, %00000000, %00000000, %00111111, %11111111, %11111111, %11000000, %00000000
   46 D1:B80E 00 3F FF FF 
              00 00 00 FF 	.db %00000000, %00111111, %11111111, %11111111, %00000000, %00000000, %00000000, %11111111
   47 D1:B816 FF FF 00 00 
              03 FF FF FF 	.db %11111111, %11111111, %00000000, %00000000, %00000011, %11111111, %11111111, %11111111
   48 D1:B81E 00 00 0F FF 
              FF FF 00 00 	.db %00000000, %00000000, %00001111, %11111111, %11111111, %11111111, %00000000, %00000000
   49 D1:B826 3F FF FF FF 
              00 00 FF FF 	.db %00111111, %11111111, %11111111, %11111111, %00000000, %00000000, %11111111, %11111111
   50 D1:B82E FF FF 00 00 
              FF FF FF FF 	.db %11111111, %11111111, %00000000, %00000000, %11111111, %11111111, %11111111, %11111111
   51 D1:B836 00 03 FF FF 
              FF FC 00 03 	.db %00000000, %00000011, %11111111, %11111111, %11111111, %11111100, %00000000, %00000011
   52 D1:B83E FF FF FF FC 
              00 0F FF FF 	.db %11111111, %11111111, %11111111, %11111100, %00000000, %00001111, %11111111, %11111111
   53 D1:B846 FF F0 00 3F 
              FF FF FF C0 	.db %11111111, %11110000, %00000000, %00111111, %11111111, %11111111, %11111111, %11000000
   54 D1:B84E 00 FF FF FF 
              FF 00 00 FF 	.db %00000000, %11111111, %11111111, %11111111, %11111111, %00000000, %00000000, %11111111
   55 D1:B856 FF FF FF 00 
              03 FF FF FF 	.db %11111111, %11111111, %11111111, %00000000, %00000011, %11111111, %11111111, %11111111
   56 D1:B85E FC 00 03 FF 
              FF FF FF 00 	.db %11111100, %00000000, %00000011, %11111111, %11111111, %11111111, %11111111, %00000000
   57 D1:B866 0F FF FF FF 
              FC 00 3F FF 	.db %00001111, %11111111, %11111111, %11111111, %11111100, %00000000, %00111111, %11111111
   58 D1:B86E FF FF F0 00 
              3F FF FF FF 	.db %11111111, %11111111, %11110000, %00000000, %00111111, %11111111, %11111111, %11111111
   59 D1:B876 C0 00 FF FF 
              FF FF 00 00 	.db %11000000, %00000000, %11111111, %11111111, %11111111, %11111111, %00000000, %00000000
   60 D1:B87E 3F FF FF FC 
              00 00 FF FF 	.db %00111111, %11111111, %11111111, %11111100, %00000000, %00000000, %11111111, %11111111
   61 D1:B886 FF F0 00 03 
              FF FF FF C0 	.db %11111111, %11110000, %00000000, %00000011, %11111111, %11111111, %11111111, %11000000
   62 D1:B88E 00 0F FF FF 
              FF 00 00 03 	.db %00000000, %00001111, %11111111, %11111111, %11111111, %00000000, %00000000, %00000011
   63 D1:B896 FF FF F0 00 
              00 0F FF FF 	.db %11111111, %11111111, %11110000, %00000000, %00000000, %00001111, %11111111, %11111111
   64 D1:B89E C0 -  -  -  	.db %11000000
   65 D1:B89F -  -  -  -  
   66 D1:B89F 01 20 -  -  	.db %00000001, %00100000
   67 D1:B8A1 -  -  -  -  
   68 D1:B8A1 00 00 00 00 
              00 55 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %01010101, %00000000, %00000000
   69 D1:B8A9 55 00 0A 50 
              00 A5 5A AA 	.db %01010101, %00000000, %00001010, %01010000, %00000000, %10100101, %01011010, %10101010
   70 D1:B8B1 A5 5A AA A5 
              5A AA A5 55 	.db %10100101, %01011010, %10101010, %10100101, %01011010, %10101010, %10100101, %01010101
   71 D1:B8B9 AA AA 55 5A 
              AA A9 55 AA 	.db %10101010, %10101010, %01010101, %01011010, %10101010, %10101001, %01010101, %10101010
   72 D1:B8C1 AA 95 5A AA 
              A9 55 AA AA 	.db %10101010, %10010101, %01011010, %10101010, %10101001, %01010101, %10101010, %10101010
   73 D1:B8C9 A9 5A AA AA 
              95 5A AA AA 	.db %10101001, %01011010, %10101010, %10101010, %10010101, %01011010, %10101010, %10101010
   74 D1:B8D1 A9 5A AA AA 
              A9 55 AA AA 	.db %10101001, %01011010, %10101010, %10101010, %10101001, %01010101, %10101010, %10101010
   75 D1:B8D9 AA A9 5A AA 
              AA AA 95 55 	.db %10101010, %10101001, %01011010, %10101010, %10101010, %10101010, %10010101, %01010101
   76 D1:B8E1 AA 56 AA A9 
              55 AA 56 AA 	.db %10101010, %01010110, %10101010, %10101001, %01010101, %10101010, %01010110, %10101010
   77 D1:B8E9 A9 55 5A AA 
              6A AA A9 55 	.db %10101001, %01010101, %01011010, %10101010, %01101010, %10101010, %10101001, %01010101
   78 D1:B8F1 AA A6 AA AA 
              95 55 AA A9 	.db %10101010, %10100110, %10101010, %10101010, %10010101, %01010101, %10101010, %10101001
   79 D1:B8F9 6A AA A9 55 
              5A AA 96 AA 	.db %01101010, %10101010, %10101001, %01010101, %01011010, %10101010, %10010110, %10101010
   80 D1:B901 AA 95 55 55 
              AA 95 6A AA 	.db %10101010, %10010101, %01010101, %01010101, %10101010, %10010101, %01101010, %10101010
   81 D1:B909 AA 95 55 5A 
              A9 56 AA AA 	.db %10101010, %10010101, %01010101, %01011010, %10101001, %01010110, %10101010, %10101010
   82 D1:B911 A9 55 55 AA 
              A9 56 AA AA 	.db %10101001, %01010101, %01010101, %10101010, %10101001, %01010110, %10101010, %10101010
   83 D1:B919 AA 95 55 AA 
              A9 56 AA AA 	.db %10101010, %10010101, %01010101, %10101010, %10101001, %01010110, %10101010, %10101010
   84 D1:B921 AA 95 55 AA 
              AA AA AA AA 	.db %10101010, %10010101, %01010101, %10101010, %10101010, %10101010, %10101010, %10101010
   85 D1:B929 AA A5 55 AA 
              AA AA AA AA 	.db %10101010, %10100101, %01010101, %10101010, %10101010, %10101010, %10101010, %10101010
   86 D1:B931 AA A5 55 5A 
              AA A9 56 AA 	.db %10101010, %10100101, %01010101, %01011010, %10101010, %10101001, %01010110, %10101010
   87 D1:B939 AA AA 55 5A 
              AA A9 56 AA 	.db %10101010, %10101010, %01010101, %01011010, %10101010, %10101001, %01010110, %10101010
   88 D1:B941 AA AA 55 6A 
              AA A9 56 AA 	.db %10101010, %10101010, %01010101, %01101010, %10101010, %10101001, %01010110, %10101010
   89 D1:B949 AA A5 55 6A 
              AA A9 56 AA 	.db %10101010, %10100101, %01010101, %01101010, %10101010, %10101001, %01010110, %10101010
   90 D1:B951 AA A5 56 AA 
              AA AA AA AA 	.db %10101010, %10100101, %01010110, %10101010, %10101010, %10101010, %10101010, %10101010
   91 D1:B959 AA A5 55 56 
              AA AA A9 55 	.db %10101010, %10100101, %01010101, %01010110, %10101010, %10101010, %10101001, %01010101
   92 D1:B961 6A AA AA 55 
              6A AA AA 95 	.db %01101010, %10101010, %10101010, %01010101, %01101010, %10101010, %10101010, %10010101
   93 D1:B969 56 AA AA A5 
              56 AA AA AA 	.db %01010110, %10101010, %10101010, %10100101, %01010110, %10101010, %10101010, %10101010
   94 D1:B971 95 55 AA A5 
              56 AA AA AA 	.db %10010101, %01010101, %10101010, %10100101, %01010110, %10101010, %10101010, %10101010
   95 D1:B979 95 55 AA A5 
              5A AA AA AA 	.db %10010101, %01010101, %10101010, %10100101, %01011010, %10101010, %10101010, %10101010
   96 D1:B981 A5 5A A5 5A 
              AA AA AA A5 	.db %10100101, %01011010, %10100101, %01011010, %10101010, %10101010, %10101010, %10100101
   97 D1:B989 5A A5 55 6A 
              AA AA AA AA 	.db %01011010, %10100101, %01010101, %01101010, %10101010, %10101010, %10101010, %10101010
   98 D1:B991 A5 55 6A AA 
              AA AA AA A5 	.db %10100101, %01010101, %01101010, %10101010, %10101010, %10101010, %10101010, %10100101
   99 D1:B999 55 55 55 55 
              55 55 55 55 	.db %01010101, %01010101, %01010101, %01010101, %01010101, %01010101, %01010101, %01010101
  100 D1:B9A1 55 55 55 -  	.db %01010101, %01010101, %01010101
  101 D1:B9A4 -  -  -  -  
  102 D1:B9A4 -  -  -  -  
  103 D1:B9A4 -  -  -  -  Shittlogo:
  104 D1:B9A4 20 -  -  -  	.db %00100000
  105 D1:B9A5 30 30 -  -  	.db 48, 48
  106 D1:B9A7 00 00 40 02 
              00 00 00 60 	.db %00000000, %00000000, %01000000, %00000010, %00000000, %00000000, %00000000, %01100000
  107 D1:B9AF 70 0E 06 00 
              00 70 78 1E 	.db %01110000, %00001110, %00000110, %00000000, %00000000, %01110000, %01111000, %00011110
  108 D1:B9B7 0E 00 00 78 
              7C 3E 1E 00 	.db %00001110, %00000000, %00000000, %01111000, %01111100, %00111110, %00011110, %00000000
  109 D1:B9BF 00 7E 7E 7E 
              7E 00 00 7F 	.db %00000000, %01111110, %01111110, %01111110, %01111110, %00000000, %00000000, %01111111
  110 D1:B9C7 FF FF FE 00 
              1C 3F FF FF 	.db %11111111, %11111111, %11111110, %00000000, %00011100, %00111111, %11111111, %11111111
  111 D1:B9CF FC 78 1F 9F 
              FF FF F9 F8 	.db %11111100, %01111000, %00011111, %10011111, %11111111, %11111111, %11111001, %11111000
  112 D1:B9D7 1F CF FF FF 
              F3 F8 07 FF 	.db %00011111, %11001111, %11111111, %11111111, %11110011, %11111000, %00000111, %11111111
  113 D1:B9DF FF FF F7 E0 
              03 FF FF FF 	.db %11111111, %11111111, %11110111, %11100000, %00000011, %11111111, %11111111, %11111111
  114 D1:B9E7 FF C0 01 FF 
              FF FF FF 80 	.db %11111111, %11000000, %00000001, %11111111, %11111111, %11111111, %11111111, %10000000
  115 D1:B9EF F8 FF FF FF 
              FF 1F FF FF 	.db %11111000, %11111111, %11111111, %11111111, %11111111, %00011111, %11111111, %11111111
  116 D1:B9F7 FF FF FE FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111110, %11111111, %11111111, %11111111, %11111111, %11111111
  117 D1:B9FF FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  118 D1:BA07 7F FF FF FF 
              FF FE 1F FF 	.db %01111111, %11111111, %11111111, %11111111, %11111111, %11111110, %00011111, %11111111
  119 D1:BA0F FF FF FF F8 
              0F FF FF FF 	.db %11111111, %11111111, %11111111, %11111000, %00001111, %11111111, %11111111, %11111111
  120 D1:BA17 FF F0 07 FF 
              FF FF FF C0 	.db %11111111, %11110000, %00000111, %11111111, %11111111, %11111111, %11111111, %11000000
  121 D1:BA1F 7F FF FF FF 
              FF FE FF FF 	.db %01111111, %11111111, %11111111, %11111111, %11111111, %11111110, %11111111, %11111111
  122 D1:BA27 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  123 D1:BA2F FF FF 7F FF 
              FF FF FF FE 	.db %11111111, %11111111, %01111111, %11111111, %11111111, %11111111, %11111111, %11111110
  124 D1:BA37 3F FF FF FF 
              FF FC 0F FF 	.db %00111111, %11111111, %11111111, %11111111, %11111111, %11111100, %00001111, %11111111
  125 D1:BA3F FF FF FF E0 
              1F FF FF FF 	.db %11111111, %11111111, %11111111, %11100000, %00011111, %11111111, %11111111, %11111111
  126 D1:BA47 FF F8 7F FF 
              FF FF FF FE 	.db %11111111, %11111000, %01111111, %11111111, %11111111, %11111111, %11111111, %11111110
  127 D1:BA4F FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  128 D1:BA57 FF FF FF FF 
              67 FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %01100111, %11111111, %11111111, %11111111
  129 D1:BA5F FF E6 0F FF 
              FF FF FF F0 	.db %11111111, %11100110, %00001111, %11111111, %11111111, %11111111, %11111111, %11110000
  130 D1:BA67 1F FF FF FF 
              FF F8 3F FF 	.db %00011111, %11111111, %11111111, %11111111, %11111111, %11111000, %00111111, %11111111
  131 D1:BA6F FF FF FF FC 
              3F FF FF FF 	.db %11111111, %11111111, %11111111, %11111100, %00111111, %11111111, %11111111, %11111111
  132 D1:BA77 FF FC 23 FF 
              FF FF FF C4 	.db %11111111, %11111100, %00100011, %11111111, %11111111, %11111111, %11111111, %11000100
  133 D1:BA7F 03 FF FF FF 
              FF C0 07 FF 	.db %00000011, %11111111, %11111111, %11111111, %11111111, %11000000, %00000111, %11111111
  134 D1:BA87 FF FF FF E0 
              05 FF FF FF 	.db %11111111, %11111111, %11111111, %11100000, %00000101, %11111111, %11111111, %11111111
  135 D1:BA8F FF E0 0F 3F 
              FF FF FC F0 	.db %11111111, %11100000, %00001111, %00111111, %11111111, %11111111, %11111100, %11110000
  136 D1:BA97 0C 7F FF FF 
              FE 30 00 7F 	.db %00001100, %01111111, %11111111, %11111111, %11111110, %00110000, %00000000, %01111111
  137 D1:BA9F FF FF FE 00 
              00 7F FF FF 	.db %11111111, %11111111, %11111110, %00000000, %00000000, %01111111, %11111111, %11111111
  138 D1:BAA7 FE 00 00 67 
              FE 7F E6 00 	.db %11111110, %00000000, %00000000, %01100111, %11111110, %01111111, %11100110, %00000000
  139 D1:BAAF 00 07 DE 7B 
              E0 00 00 07 	.db %00000000, %00000111, %11011110, %01111011, %11100000, %00000000, %00000000, %00000111
  140 D1:BAB7 9E 79 E0 00 
              00 07 0C 30 	.db %10011110, %01111001, %11100000, %00000000, %00000000, %00000111, %00001100, %00110000
  141 D1:BABF E0 00 00 00 
              04 20 00 00 	.db %11100000, %00000000, %00000000, %00000000, %00000100, %00100000, %00000000, %00000000
  142 D1:BAC7 -  -  -  -  
  143 D1:BAC7 95 D0 -  -  	.db %10010101, %11010000
  144 D1:BAC9 -  -  -  -  
  145 D1:BAC9 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  146 D1:BAD1 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  147 D1:BAD9 00 00 00 05 
              AA 94 00 00 	.db %00000000, %00000000, %00000000, %00000101, %10101010, %10010100, %00000000, %00000000
  148 D1:BAE1 00 00 00 15 
              AA 95 40 00 	.db %00000000, %00000000, %00000000, %00010101, %10101010, %10010101, %01000000, %00000000
  149 D1:BAE9 00 00 00 05 
              55 6A A5 55 	.db %00000000, %00000000, %00000000, %00000101, %01010101, %01101010, %10100101, %01010101
  150 D1:BAF1 40 00 00 00 
              01 55 56 56 	.db %01000000, %00000000, %00000000, %00000000, %00000001, %01010101, %01010110, %01010110
  151 D1:BAF9 55 55 00 00 
              00 01 55 55 	.db %01010101, %01010101, %00000000, %00000000, %00000000, %00000001, %01010101, %01010101
  152 D1:BB01 A5 69 55 55 
              00 00 05 55 	.db %10100101, %01101001, %01010101, %01010101, %00000000, %00000000, %00000101, %01010101
  153 D1:BB09 6A A5 6A A5 
              55 40 00 55 	.db %01101010, %10100101, %01101010, %10100101, %01010101, %01000000, %00000000, %01010101
  154 D1:BB11 5A AA 95 AA 
              A9 55 40 00 	.db %01011010, %10101010, %10010101, %10101010, %10101001, %01010101, %01000000, %00000000
  155 D1:BB19 05 56 AA A9 
              5A AA A5 54 	.db %00000101, %01010110, %10101010, %10101001, %01011010, %10101010, %10100101, %01010100
  156 D1:BB21 00 00 00 05 
              56 AA AA 56 	.db %00000000, %00000000, %00000000, %00000101, %01010110, %10101010, %10101010, %01010110
  157 D1:BB29 AA AA 55 40 
              00 00 00 15 	.db %10101010, %10101010, %01010101, %01000000, %00000000, %00000000, %00000000, %00010101
  158 D1:BB31 6A AA A9 5A 
              AA AA 55 40 	.db %01101010, %10101010, %10101001, %01011010, %10101010, %10101010, %01010101, %01000000
  159 D1:BB39 00 00 00 55 
              AA AA A9 5A 	.db %00000000, %00000000, %00000000, %01010101, %10101010, %10101010, %10101001, %01011010
  160 D1:BB41 AA AA 95 40 
              00 00 05 56 	.db %10101010, %10101010, %10010101, %01000000, %00000000, %00000000, %00000101, %01010110
  161 D1:BB49 AA AA A5 6A 
              AA AA 55 40 	.db %10101010, %10101010, %10100101, %01101010, %10101010, %10101010, %01010101, %01000000
  162 D1:BB51 00 05 5A AA 
              AA A5 6A AA 	.db %00000000, %00000101, %01011010, %10101010, %10101010, %10100101, %01101010, %10101010
  163 D1:BB59 AA 95 40 01 
              56 AA AA A9 	.db %10101010, %10010101, %01000000, %00000001, %01010110, %10101010, %10101010, %10101001
  164 D1:BB61 5A AA AA A5 
              50 15 5A AA 	.db %01011010, %10101010, %10101010, %10100101, %01010000, %00010101, %01011010, %10101010
  165 D1:BB69 AA A5 6A AA 
              AA 95 50 05 	.db %10101010, %10100101, %01101010, %10101010, %10101010, %10010101, %01010000, %00000101
  166 D1:BB71 5A AA AA A9 
              5A AA AA A9 	.db %01011010, %10101010, %10101010, %10101001, %01011010, %10101010, %10101010, %10101001
  167 D1:BB79 54 00 00 2A 
              AA AA AA 55 	.db %01010100, %00000000, %00000000, %00101010, %10101010, %10101010, %10101010, %01010101
  168 D1:BB81 6A AA AA AA 
              A0 00 00 2A 	.db %01101010, %10101010, %10101010, %10101010, %10100000, %00000000, %00000000, %00101010
  169 D1:BB89 AA AA A5 55 
              56 AA AA AA 	.db %10101010, %10101010, %10100101, %01010101, %01010110, %10101010, %10101010, %10101010
  170 D1:BB91 A0 00 00 AA 
              AA AA 55 55 	.db %10100000, %00000000, %00000000, %10101010, %10101010, %10101010, %01010101, %01010101
  171 D1:BB99 56 AA AA AA 
              80 00 2A AA 	.db %01010110, %10101010, %10101010, %10101010, %10000000, %00000000, %00101010, %10101010
  172 D1:BBA1 AA 55 55 55 
              5A AA AA A0 	.db %10101010, %01010101, %01010101, %01010101, %01011010, %10101010, %10101010, %10100000
  173 D1:BBA9 02 AA AA 95 
              65 56 95 5A 	.db %00000010, %10101010, %10101010, %10010101, %01100101, %01010110, %10010101, %01011010
  174 D1:BBB1 AA AA 01 56 
              AA 95 A5 55 	.db %10101010, %10101010, %00000001, %01010110, %10101010, %10010101, %10100101, %01010101
  175 D1:BBB9 A5 56 AA 55 
              00 01 55 AA 	.db %10100101, %01010110, %10101010, %01010101, %00000000, %00000001, %01010101, %10101010
  176 D1:BBC1 56 95 55 AA 
              55 A9 55 00 	.db %01010110, %10010101, %01010101, %10101010, %01010101, %10101001, %01010101, %00000000
  177 D1:BBC9 00 01 56 A5 
              6A 55 55 A9 	.db %00000000, %00000001, %01010110, %10100101, %01101010, %01010101, %01010101, %10101001
  178 D1:BBD1 55 A5 50 00 
              00 01 56 95 	.db %01010101, %10100101, %01010000, %00000000, %00000000, %00000001, %01010110, %10010101
  179 D1:BBD9 69 59 55 6A 
              55 A5 50 00 	.db %01101001, %01011001, %01010101, %01101010, %01010101, %10100101, %01010000, %00000000
  180 D1:BBE1 00 15 65 AA 
              56 5A 5A A5 	.db %00000000, %00010101, %01100101, %10101010, %01010110, %01011010, %01011010, %10100101
  181 D1:BBE9 65 54 00 05 
              5A AA 56 9A 	.db %01100101, %01010100, %00000000, %00000101, %01011010, %10101010, %01010110, %10011010
  182 D1:BBF1 95 AA 59 54 
              00 01 55 AA 	.db %10010101, %10101010, %01011001, %01010100, %00000000, %00000001, %01010101, %10101010
  183 D1:BBF9 56 A5 A9 5A 
              A9 55 00 00 	.db %01010110, %10100101, %10101001, %01011010, %10101001, %01010101, %00000000, %00000000
  184 D1:BC01 01 55 A9 5A 
              96 A5 6A 95 	.db %00000001, %01010101, %10101001, %01011010, %10010110, %10100101, %01101010, %10010101
  185 D1:BC09 50 00 00 00 
              55 6A AA 96 	.db %01010000, %00000000, %00000000, %00000000, %01010101, %01101010, %10101010, %10010110
  186 D1:BC11 A9 6A 55 40 
              00 00 15 56 	.db %10101001, %01101010, %01010101, %01000000, %00000000, %00000000, %00010101, %01010110
  187 D1:BC19 AA AA AA AA 
              55 50 00 01 	.db %10101010, %10101010, %10101010, %10101010, %01010101, %01010000, %00000000, %00000001
  188 D1:BC21 55 5A AA AA 
              A9 55 50 00 	.db %01010101, %01011010, %10101010, %10101010, %10101001, %01010101, %01010000, %00000000
  189 D1:BC29 00 15 55 5A 
              AA 95 55 50 	.db %00000000, %00010101, %01010101, %01011010, %10101010, %10010101, %01010101, %01010000
  190 D1:BC31 00 00 00 55 
              55 AA 95 55 	.db %00000000, %00000000, %00000000, %01010101, %01010101, %10101010, %10010101, %01010101
  191 D1:BC39 40 00 00 00 
              05 55 6A A5 	.db %01000000, %00000000, %00000000, %00000000, %00000101, %01010101, %01101010, %10100101
  192 D1:BC41 55 40 00 00 
              00 01 55 AA 	.db %01010101, %01000000, %00000000, %00000000, %00000000, %00000001, %01010101, %10101010
  193 D1:BC49 95 50 00 00 
              00 00 05 AA 	.db %10010101, %01010000, %00000000, %00000000, %00000000, %00000000, %00000101, %10101010
  194 D1:BC51 94 00 00 00 
              00 00 00 00 	.db %10010100, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  195 D1:BC59 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  196 D1:BC61 00 00 00 00 
              00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  197 D1:BC69 00 00 00 00 
              00 -  -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000
  198 D1:BC6E -  -  -  -  
  199 D1:BC6E -  -  -  -  
  200 D1:BC6E -  -  -  -  OrangeDot:
  201 D1:BC6E 08 -  -  -  	.db %00001000
  202 D1:BC6F 0F 0F -  -  	.db 15, 15
  203 D1:BC71 03 C0 0F C0 
              7F E1 FF E7 	.db %00000011, %11000000, %00001111, %11000000, %01111111, %11100001, %11111111, %11100111
  204 D1:BC79 FF DF FF FF 
              FF FF FF FF 	.db %11111111, %11011111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  205 D1:BC81 FF FF FF FF 
              FB FF E3 FF 	.db %11111111, %11111111, %11111111, %11111111, %11111011, %11111111, %11100011, %11111111
  206 D1:BC89 C3 FF 01 F8 
              00 -  -  -  	.db %11000011, %11111111, %00000001, %11111000, %00000000
  207 D1:BC8E -  -  -  -  
  208 D1:BC8E B0 -  -  -  	.db %10110000
  209 D1:BC8F -  -  -  -  
  210 D1:BC8F -  -  -  -  
  211 D1:BC8F -  -  -  -  
  212 D1:BC8F -  -  -  -  SquiggleL:
  213 D1:BC8F 08 -  -  -  	.db %00001000
  214 D1:BC90 26 18 -  -  	.db 38, 24
  215 D1:BC92 00 00 07 FF 
              80 00 00 1F 	.db %00000000, %00000000, %00000111, %11111111, %10000000, %00000000, %00000000, %00011111
  216 D1:BC9A FE 00 00 00 
              7F FF C0 00 	.db %11111110, %00000000, %00000000, %00000000, %01111111, %11111111, %11000000, %00000000
  217 D1:BCA2 01 FF FF 00 
              00 07 FF FC 	.db %00000001, %11111111, %11111111, %00000000, %00000000, %00000111, %11111111, %11111100
  218 D1:BCAA 00 00 1F 1F 
              F0 00 00 7C 	.db %00000000, %00000000, %00011111, %00011111, %11110000, %00000000, %00000000, %01111100
  219 D1:BCB2 7F C1 FC 01 
              F0 1F 07 F0 	.db %01111111, %11000001, %11111100, %00000001, %11110000, %00011111, %00000111, %11110000
  220 D1:BCBA 07 C0 7C 1F 
              C0 1F 01 F3 	.db %00000111, %11000000, %01111100, %00011111, %11000000, %00011111, %00000001, %11110011
  221 D1:BCC2 FF F8 7C 07 
              CF FF E1 F0 	.db %11111111, %11111000, %01111100, %00000111, %11001111, %11111111, %11100001, %11110000
  222 D1:BCCA 1F 3F FF FF 
              C0 00 FF FF 	.db %00011111, %00111111, %11111111, %11111111, %11000000, %00000000, %11111111, %11111111
  223 D1:BCD2 FF 00 0F E0 
              FF F0 00 3F 	.db %11111111, %00000000, %00001111, %11100000, %11111111, %11110000, %00000000, %00111111
  224 D1:BCDA 83 FF C0 00 
              FE 0F FF 00 	.db %10000011, %11111111, %11000000, %00000000, %11111110, %00001111, %11111111, %00000000
  225 D1:BCE2 03 F8 0F FC 
              00 0F E0 3F 	.db %00000011, %11111000, %00001111, %11111100, %00000000, %00001111, %11100000, %00111111
  226 D1:BCEA F0 00 3E 00 
              1F C0 00 F8 	.db %11110000, %00000000, %00111110, %00000000, %00011111, %11000000, %00000000, %11111000
  227 D1:BCF2 00 7F 00 03 
              E0 01 FC 00 	.db %00000000, %01111111, %00000000, %00000011, %11100000, %00000001, %11111100, %00000000
  228 D1:BCFA 0F 80 00 00 
              00 3E 00 00 	.db %00001111, %10000000, %00000000, %00000000, %00000000, %00111110, %00000000, %00000000
  229 D1:BD02 00 00 -  -  	.db %00000000, %00000000
  230 D1:BD04 -  -  -  -  
  231 D1:BD04 50 -  -  -  	.db %01010000
  232 D1:BD05 -  -  -  -  
  233 D1:BD05 -  -  -  -  
  234 D1:BD05 -  -  -  -  
  235 D1:BD05 -  -  -  -  Banana5:
  236 D1:BD05 20 -  -  -  	.db %00100000
  237 D1:BD06 20 20 -  -  	.db 32, 32
  238 D1:BD08 00 00 00 3C 
              00 00 00 FC 	.db %00000000, %00000000, %00000000, %00111100, %00000000, %00000000, %00000000, %11111100
  239 D1:BD10 00 00 03 FC 
              00 00 07 FC 	.db %00000000, %00000000, %00000011, %11111100, %00000000, %00000000, %00000111, %11111100
  240 D1:BD18 00 00 0F FC 
              00 00 3F FC 	.db %00000000, %00000000, %00001111, %11111100, %00000000, %00000000, %00111111, %11111100
  241 D1:BD20 00 00 7F FC 
              00 00 FF F8 	.db %00000000, %00000000, %01111111, %11111100, %00000000, %00000000, %11111111, %11111000
  242 D1:BD28 00 03 FF F0 
              00 07 FF F0 	.db %00000000, %00000011, %11111111, %11110000, %00000000, %00000111, %11111111, %11110000
  243 D1:BD30 00 1F FF E0 
              00 3F FF E0 	.db %00000000, %00011111, %11111111, %11100000, %00000000, %00111111, %11111111, %11100000
  244 D1:BD38 00 7F FF C0 
              01 FF FF 80 	.db %00000000, %01111111, %11111111, %11000000, %00000001, %11111111, %11111111, %10000000
  245 D1:BD40 01 FF FF 00 
              03 FF FE 00 	.db %00000001, %11111111, %11111111, %00000000, %00000011, %11111111, %11111110, %00000000
  246 D1:BD48 07 FF FE 00 
              0F FF FC 00 	.db %00000111, %11111111, %11111110, %00000000, %00001111, %11111111, %11111100, %00000000
  247 D1:BD50 1F FF F8 00 
              1F FF F0 00 	.db %00011111, %11111111, %11111000, %00000000, %00011111, %11111111, %11110000, %00000000
  248 D1:BD58 3F FF C0 00 
              3F FF 80 00 	.db %00111111, %11111111, %11000000, %00000000, %00111111, %11111111, %10000000, %00000000
  249 D1:BD60 7F FF 00 00 
              7F FC 00 00 	.db %01111111, %11111111, %00000000, %00000000, %01111111, %11111100, %00000000, %00000000
  250 D1:BD68 FF F8 00 00 
              FF E0 00 00 	.db %11111111, %11111000, %00000000, %00000000, %11111111, %11100000, %00000000, %00000000
  251 D1:BD70 FF C0 00 00 
              FF 80 00 00 	.db %11111111, %11000000, %00000000, %00000000, %11111111, %10000000, %00000000, %00000000
  252 D1:BD78 FF 00 00 00 
              FC 00 00 00 	.db %11111111, %00000000, %00000000, %00000000, %11111100, %00000000, %00000000, %00000000
  253 D1:BD80 F8 00 00 00 
              F8 00 00 00 	.db %11111000, %00000000, %00000000, %00000000, %11111000, %00000000, %00000000, %00000000
  254 D1:BD88 -  -  -  -  
  255 D1:BD88 01 20 -  -  	.db %00000001, %00100000
  256 D1:BD8A -  -  -  -  
  257 D1:BD8A 00 50 05 A0 
              05 A8 01 6A 	.db %00000000, %01010000, %00000101, %10100000, %00000101, %10101000, %00000001, %01101010
  258 D1:BD92 6A 55 A9 AA 
              56 A9 AA 55 	.db %01101010, %01010101, %10101001, %10101010, %01010110, %10101001, %10101010, %01010101
  259 D1:BD9A AA 66 A5 5A 
              A6 6A 56 AA 	.db %10101010, %01100110, %10100101, %01011010, %10100110, %01101010, %01010110, %10101010
  260 D1:BDA2 66 A5 5A AA 
              A6 A9 5A AA 	.db %01100110, %10100101, %01011010, %10101010, %10100110, %10101001, %01011010, %10101010
  261 D1:BDAA 66 A9 56 AA 
              99 9A 55 6A 	.db %01100110, %10101001, %01010110, %10101010, %10011001, %10011010, %01010101, %01101010
  262 D1:BDB2 AA 99 A9 6A 
              AA AA 6A 5A 	.db %10101010, %10011001, %10101001, %01101010, %10101010, %10101010, %01101010, %01011010
  263 D1:BDBA AA AA 9A 96 
              AA AA A6 65 	.db %10101010, %10101010, %10011010, %10010110, %10101010, %10101010, %10100110, %01100101
  264 D1:BDC2 6A AA AA 66 
              55 AA AA A6 	.db %01101010, %10101010, %10101010, %01100110, %01010101, %10101010, %10101010, %10100110
  265 D1:BDCA 65 6A AA A9 
              99 56 AA A6 	.db %01100101, %01101010, %10101010, %10101001, %10011001, %01010110, %10101010, %10100110
  266 D1:BDD2 66 5A AA 99 
              95 5A A6 66 	.db %01100110, %01011010, %10101010, %10011001, %10010101, %01011010, %10100110, %01100110
  267 D1:BDDA 95 AA 66 A5 
              6A 99 A5 5A 	.db %10010101, %10101010, %01100110, %10100101, %01101010, %10011001, %10100101, %01011010
  268 D1:BDE2 99 A5 59 9A 
              56 66 55 02 	.db %10011001, %10100101, %01011001, %10011010, %01010110, %01100110, %01010101, %00000010
  269 D1:BDEA 55 00 60 04 
              00 -  -  -  	.db %01010101, %00000000, %01100000, %00000100, %00000000
  270 D1:BDEF -  -  -  -  
  271 D1:BDEF -  -  -  -  
  272 D1:BDEF -  -  -  -  GreenCurl1:
  273 D1:BDEF 08 -  -  -  	.db %00001000
  274 D1:BDF0 20 20 -  -  	.db 32, 32
  275 D1:BDF2 00 0F E0 00 
              00 1F E0 00 	.db %00000000, %00001111, %11100000, %00000000, %00000000, %00011111, %11100000, %00000000
  276 D1:BDFA 00 FF E0 00 
              03 FE 00 00 	.db %00000000, %11111111, %11100000, %00000000, %00000011, %11111110, %00000000, %00000000
  277 D1:BE02 07 F8 00 00 
              07 E0 00 00 	.db %00000111, %11111000, %00000000, %00000000, %00000111, %11100000, %00000000, %00000000
  278 D1:BE0A 1F 80 00 00 
              3F 00 00 00 	.db %00011111, %10000000, %00000000, %00000000, %00111111, %00000000, %00000000, %00000000
  279 D1:BE12 3E 07 FE 00 
              7C 0F FF F8 	.db %00111110, %00000111, %11111110, %00000000, %01111100, %00001111, %11111111, %11111000
  280 D1:BE1A 78 1F FF FC 
              F0 3F 07 FE 	.db %01111000, %00011111, %11111111, %11111100, %11110000, %00111111, %00000111, %11111110
  281 D1:BE22 F0 3C 00 3F 
              E0 78 00 1F 	.db %11110000, %00111100, %00000000, %00111111, %11100000, %01111000, %00000000, %00011111
  282 D1:BE2A E0 78 00 07 
              E0 78 0E 07 	.db %11100000, %01111000, %00000000, %00000111, %11100000, %01111000, %00001110, %00000111
  283 D1:BE32 E0 78 0E 07 
              E0 38 0E 03 	.db %11100000, %01111000, %00001110, %00000111, %11100000, %00111000, %00001110, %00000011
  284 D1:BE3A F0 3C 1E 03 
              F8 3E 3E 07 	.db %11110000, %00111100, %00011110, %00000011, %11111000, %00111110, %00111110, %00000111
  285 D1:BE42 F8 1F FE 07 
              78 1F FC 07 	.db %11111000, %00011111, %11111110, %00000111, %01111000, %00011111, %11111100, %00000111
  286 D1:BE4A 3C 0F F8 0F 
              3E 00 70 1F 	.db %00111100, %00001111, %11111000, %00001111, %00111110, %00000000, %01110000, %00011111
  287 D1:BE52 1F 00 00 3E 
              0F 80 00 FE 	.db %00011111, %00000000, %00000000, %00111110, %00001111, %10000000, %00000000, %11111110
  288 D1:BE5A 0F C0 01 FC 
              07 C0 03 F8 	.db %00001111, %11000000, %00000001, %11111100, %00000111, %11000000, %00000011, %11111000
  289 D1:BE62 03 E0 0F E0 
              01 FF FF C0 	.db %00000011, %11100000, %00001111, %11100000, %00000001, %11111111, %11111111, %11000000
  290 D1:BE6A 00 FF FF 00 
              00 7F FE 00 	.db %00000000, %11111111, %11111111, %00000000, %00000000, %01111111, %11111110, %00000000
  291 D1:BE72 -  -  -  -  
  292 D1:BE72 50 -  -  -  	.db %01010000
  293 D1:BE73 -  -  -  -  
  294 D1:BE73 -  -  -  -  
  295 D1:BE73 -  -  -  -  
  296 D1:BE73 -  -  -  -  Bluecurl:
  297 D1:BE73 08 -  -  -  	.db %00001000
  298 D1:BE74 30 30 -  -  	.db 48, 48
  299 D1:BE76 00 00 FF C0 
              00 00 00 01 	.db %00000000, %00000000, %11111111, %11000000, %00000000, %00000000, %00000000, %00000001
  300 D1:BE7E FF FE 00 00 
              00 07 C0 7F 	.db %11111111, %11111110, %00000000, %00000000, %00000000, %00000111, %11000000, %01111111
  301 D1:BE86 00 00 00 1F 
              00 07 C0 00 	.db %00000000, %00000000, %00000000, %00011111, %00000000, %00000111, %11000000, %00000000
  302 D1:BE8E 00 3E 00 01 
              F0 00 00 78 	.db %00000000, %00111110, %00000000, %00000001, %11110000, %00000000, %00000000, %01111000
  303 D1:BE96 00 00 78 00 
              00 F0 00 00 	.db %00000000, %00000000, %01111000, %00000000, %00000000, %11110000, %00000000, %00000000
  304 D1:BE9E 1C 00 01 E0 
              00 00 0C 00 	.db %00011100, %00000000, %00000001, %11100000, %00000000, %00000000, %00001100, %00000000
  305 D1:BEA6 01 C0 00 00 
              0E 00 01 80 	.db %00000001, %11000000, %00000000, %00000000, %00001110, %00000000, %00000001, %10000000
  306 D1:BEAE 00 00 07 00 
              03 80 00 00 	.db %00000000, %00000000, %00000111, %00000000, %00000011, %10000000, %00000000, %00000000
  307 D1:BEB6 03 80 03 03 
              FF 80 01 C0 	.db %00000011, %10000000, %00000011, %00000011, %11111111, %10000000, %00000001, %11000000
  308 D1:BEBE 03 0F FF C0 
              00 E0 07 1F 	.db %00000011, %00001111, %11111111, %11000000, %00000000, %11100000, %00000111, %00011111
  309 D1:BEC6 00 F0 00 F0 
              0E 18 00 78 	.db %00000000, %11110000, %00000000, %11110000, %00001110, %00011000, %00000000, %01111000
  310 D1:BECE 00 30 0E 38 
              00 1C 00 38 	.db %00000000, %00110000, %00001110, %00111000, %00000000, %00011100, %00000000, %00111000
  311 D1:BED6 1C 30 00 0E 
              00 38 1C 30 	.db %00011100, %00110000, %00000000, %00001110, %00000000, %00111000, %00011100, %00110000
  312 D1:BEDE 00 0E 00 1C 
              18 30 00 06 	.db %00000000, %00001110, %00000000, %00011100, %00011000, %00110000, %00000000, %00000110
  313 D1:BEE6 00 0C 38 30 
              00 07 00 0E 	.db %00000000, %00001100, %00111000, %00110000, %00000000, %00000111, %00000000, %00001110
  314 D1:BEEE 70 30 1F 03 
              80 0E 60 30 	.db %01110000, %00110000, %00011111, %00000011, %10000000, %00001110, %01100000, %00110000
  315 D1:BEF6 1F 01 C0 06 
              E0 30 18 00 	.db %00011111, %00000001, %11000000, %00000110, %11100000, %00110000, %00011000, %00000000
  316 D1:BEFE C0 06 E0 30 
              18 00 C0 07 	.db %11000000, %00000110, %11100000, %00110000, %00011000, %00000000, %11000000, %00000111
  317 D1:BF06 C0 30 18 00 
              C0 07 C0 30 	.db %11000000, %00110000, %00011000, %00000000, %11000000, %00000111, %11000000, %00110000
  318 D1:BF0E 18 00 C0 03 
              C0 30 1C 00 	.db %00011000, %00000000, %11000000, %00000011, %11000000, %00110000, %00011100, %00000000
  319 D1:BF16 C0 03 C0 30 
              0C 00 C0 03 	.db %11000000, %00000011, %11000000, %00110000, %00001100, %00000000, %11000000, %00000011
  320 D1:BF1E C0 30 0E 00 
              C0 07 C0 38 	.db %11000000, %00110000, %00001110, %00000000, %11000000, %00000111, %11000000, %00111000
  321 D1:BF26 07 00 C0 07 
              00 18 07 81 	.db %00000111, %00000000, %11000000, %00000111, %00000000, %00011000, %00000111, %10000001
  322 D1:BF2E C0 06 00 18 
              01 E7 80 06 	.db %11000000, %00000110, %00000000, %00011000, %00000001, %11100111, %10000000, %00000110
  323 D1:BF36 00 1C 01 FF 
              80 06 00 0C 	.db %00000000, %00011100, %00000001, %11111111, %10000000, %00000110, %00000000, %00001100
  324 D1:BF3E 00 3C 00 0E 
              00 0E 00 00 	.db %00000000, %00111100, %00000000, %00001110, %00000000, %00001110, %00000000, %00000000
  325 D1:BF46 00 0E 00 06 
              00 00 00 0C 	.db %00000000, %00001110, %00000000, %00000110, %00000000, %00000000, %00000000, %00001100
  326 D1:BF4E 00 07 00 00 
              00 1C 00 03 	.db %00000000, %00000111, %00000000, %00000000, %00000000, %00011100, %00000000, %00000011
  327 D1:BF56 80 00 00 38 
              00 01 80 00 	.db %10000000, %00000000, %00000000, %00111000, %00000000, %00000001, %10000000, %00000000
  328 D1:BF5E 00 78 00 01 
              C0 00 00 F0 	.db %00000000, %01111000, %00000000, %00000001, %11000000, %00000000, %00000000, %11110000
  329 D1:BF66 00 00 E0 00 
              01 E0 00 00 	.db %00000000, %00000000, %11100000, %00000000, %00000001, %11100000, %00000000, %00000000
  330 D1:BF6E 70 00 03 80 
              00 00 78 00 	.db %01110000, %00000000, %00000011, %10000000, %00000000, %00000000, %01111000, %00000000
  331 D1:BF76 07 80 00 00 
              18 00 1F 00 	.db %00000111, %10000000, %00000000, %00000000, %00011000, %00000000, %00011111, %00000000
  332 D1:BF7E 00 00 1C 00 
              7C 00 00 00 	.db %00000000, %00000000, %00011100, %00000000, %01111100, %00000000, %00000000, %00000000
  333 D1:BF86 1E 01 F8 00 
              00 00 07 F7 	.db %00011110, %00000001, %11111000, %00000000, %00000000, %00000000, %00000111, %11110111
  334 D1:BF8E E0 00 00 00 
              03 FF 00 00 	.db %11100000, %00000000, %00000000, %00000000, %00000011, %11111111, %00000000, %00000000
  335 D1:BF96 -  -  -  -  
  336 D1:BF96 60 -  -  -  	.db %01100000
  337 D1:BF97 -  -  -  -  
  338 D1:BF97 -  -  -  -  
  339 D1:BF97 -  -  -  -  
Listing for file "ascent.asm"
  249 D1:BF97 -  -  -  -  #include "FG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\FG_Data.txt"
    1 D1:BF97 -  -  -  -  FG_Data_frame_table:
    2 D1:BF97 4F C8 D1 -  	.dl FG_Data_0
    3 D1:BF9A 2B C8 D1 -  	.dl FG_Data_1
    4 D1:BF9D 07 C8 D1 -  	.dl FG_Data_2
    5 D1:BFA0 DF C7 D1 -  	.dl FG_Data_3
    6 D1:BFA3 9F C7 D1 -  	.dl FG_Data_4
    7 D1:BFA6 77 C7 D1 -  	.dl FG_Data_5
    8 D1:BFA9 53 C7 D1 -  	.dl FG_Data_6
    9 D1:BFAC 2B C7 D1 -  	.dl FG_Data_7
   10 D1:BFAF 03 C7 D1 -  	.dl FG_Data_8
   11 D1:BFB2 DB C6 D1 -  	.dl FG_Data_9
   12 D1:BFB5 B3 C6 D1 -  	.dl FG_Data_10
   13 D1:BFB8 8F C6 D1 -  	.dl FG_Data_11
   14 D1:BFBB 4B C6 D1 -  	.dl FG_Data_12
   15 D1:BFBE 27 C6 D1 -  	.dl FG_Data_13
   16 D1:BFC1 03 C6 D1 -  	.dl FG_Data_14
   17 D1:BFC4 DB C5 D1 -  	.dl FG_Data_15
   18 D1:BFC7 B3 C5 D1 -  	.dl FG_Data_16
   19 D1:BFCA 8B C5 D1 -  	.dl FG_Data_17
   20 D1:BFCD 5B C5 D1 -  	.dl FG_Data_18
   21 D1:BFD0 3F C5 D1 -  	.dl FG_Data_19
   22 D1:BFD3 17 C5 D1 -  	.dl FG_Data_20
   23 D1:BFD6 9F C4 D1 -  	.dl FG_Data_21
   24 D1:BFD9 0B C4 D1 -  	.dl FG_Data_22
   25 D1:BFDC 9F C3 D1 -  	.dl FG_Data_23
   26 D1:BFDF FF C2 D1 -  	.dl FG_Data_24
   27 D1:BFE2 67 C2 D1 -  	.dl FG_Data_25
   28 D1:BFE5 3B C2 D1 -  	.dl FG_Data_26
   29 D1:BFE8 13 C2 D1 -  	.dl FG_Data_27
   30 D1:BFEB EF C1 D1 -  	.dl FG_Data_28
   31 D1:BFEE AB C1 D1 -  	.dl FG_Data_29
   32 D1:BFF1 83 C1 D1 -  	.dl FG_Data_30
   33 D1:BFF4 63 C1 D1 -  	.dl FG_Data_31
   34 D1:BFF7 3F C1 D1 -  	.dl FG_Data_32
   35 D1:BFFA 13 C1 D1 -  	.dl FG_Data_33
   36 D1:BFFD DF C0 D1 -  	.dl FG_Data_34
   37 D1:C000 BB C0 D1 -  	.dl FG_Data_35
   38 D1:C003 83 C0 D1 -  	.dl FG_Data_36
   39 D1:C006 4B C0 D1 -  	.dl FG_Data_37
   40 D1:C009 2B C0 D1 -  	.dl FG_Data_38
   41 D1:C00C 0F C0 D1 -  	.dl FG_Data_39
   42 D1:C00F -  -  -  -  
   43 D1:C00F -  -  -  -  
   44 D1:C00F -  -  -  -  
   45 D1:C00F -  -  -  -  FG_Data_39:
   46 D1:C00F 50 D3 D1 -  	.dl Sprite_Table_0
   47 D1:C012 06 -  -  -  	.db 6
   48 D1:C013 31 2D 77 01 	.db 49, 45, 119, 1
   49 D1:C017 57 2D 28 01 	.db 87, 45, 40, 1
   50 D1:C01B 92 2D 51 01 	.db 146, 45, 81, 1
   51 D1:C01F A0 2D 1D 03 	.db 160, 45, 29, 3
   52 D1:C023 3A 17 50 07 	.db 58, 23, 80, 7
   53 D1:C027 98 17 77 00 	.db 152, 23, 119, 0
   54 D1:C02B -  -  -  -  
   55 D1:C02B -  -  -  -  FG_Data_38:
   56 D1:C02B 50 D3 D1 -  	.dl Sprite_Table_0
   57 D1:C02E 07 -  -  -  	.db 7
   58 D1:C02F 1D 2D 22 02 	.db 29, 45, 34, 2
   59 D1:C033 62 2D 47 02 	.db 98, 45, 71, 2
   60 D1:C037 B0 2D 67 06 	.db 176, 45, 103, 6
   61 D1:C03B EF 2D 4F 03 	.db 239, 45, 79, 3
   62 D1:C03F 34 2D 6B 03 	.db 52, 45, 107, 3
   63 D1:C043 D3 17 72 05 	.db 211, 23, 114, 5
   64 D1:C047 94 17 40 05 	.db 148, 23, 64, 5
   65 D1:C04B -  -  -  -  
   66 D1:C04B -  -  -  -  FG_Data_37:
   67 D1:C04B 50 D3 D1 -  	.dl Sprite_Table_0
   68 D1:C04E 0D -  -  -  	.db 13
   69 D1:C04F 58 2D 6D 01 	.db 88, 45, 109, 1
   70 D1:C053 7E 2D 1E 01 	.db 126, 45, 30, 1
   71 D1:C057 B9 2D 47 01 	.db 185, 45, 71, 1
   72 D1:C05B C7 2D 13 03 	.db 199, 45, 19, 3
   73 D1:C05F 16 2D 45 03 	.db 22, 45, 69, 3
   74 D1:C063 61 17 46 07 	.db 97, 23, 70, 7
   75 D1:C067 BF 17 6D 00 	.db 191, 23, 109, 0
   76 D1:C06B 6C 2D 2A 01 	.db 108, 45, 42, 1
   77 D1:C06F C2 2D 68 01 	.db 194, 45, 104, 1
   78 D1:C073 99 2D 27 03 	.db 153, 45, 39, 3
   79 D1:C077 59 2D 5B 03 	.db 89, 45, 91, 3
   80 D1:C07B EF 17 4A 00 	.db 239, 23, 74, 0
   81 D1:C07F 7F 2F 47 09 	.db 127, 47, 71, 9
   82 D1:C083 -  -  -  -  
   83 D1:C083 -  -  -  -  FG_Data_36:
   84 D1:C083 50 D3 D1 -  	.dl Sprite_Table_0
   85 D1:C086 0D -  -  -  	.db 13
   86 D1:C087 44 2D 18 02 	.db 68, 45, 24, 2
   87 D1:C08B 89 2D 3D 02 	.db 137, 45, 61, 2
   88 D1:C08F D7 2D 5D 06 	.db 215, 45, 93, 6
   89 D1:C093 5B 2D 61 03 	.db 91, 45, 97, 3
   90 D1:C097 FA 17 69 00 	.db 250, 23, 105, 0
   91 D1:C09B BB 17 37 00 	.db 187, 23, 55, 0
   92 D1:C09F 16 17 40 05 	.db 22, 23, 64, 5
   93 D1:C0A3 97 2D 24 01 	.db 151, 45, 36, 1
   94 D1:C0A7 8A 2D 5F 02 	.db 138, 45, 95, 2
   95 D1:C0AB DA 2D 49 03 	.db 218, 45, 73, 3
   96 D1:C0AF 2E 17 48 07 	.db 46, 23, 72, 7
   97 D1:C0B3 CE 17 74 04 	.db 206, 23, 116, 4
   98 D1:C0B7 68 17 3D 00 	.db 104, 23, 61, 0
   99 D1:C0BB -  -  -  -  
  100 D1:C0BB -  -  -  -  FG_Data_35:
  101 D1:C0BB 50 D3 D1 -  	.dl Sprite_Table_0
  102 D1:C0BE 08 -  -  -  	.db 8
  103 D1:C0BF 93 2D 20 01 	.db 147, 45, 32, 1
  104 D1:C0C3 E9 2D 5E 01 	.db 233, 45, 94, 1
  105 D1:C0C7 C0 2D 1D 03 	.db 192, 45, 29, 3
  106 D1:C0CB 80 2D 51 03 	.db 128, 45, 81, 3
  107 D1:C0CF 01 2D 3F 03 	.db 1, 45, 63, 3
  108 D1:C0D3 A6 2F 3D 09 	.db 166, 47, 61, 9
  109 D1:C0D7 E4 2D 37 03 	.db 228, 45, 55, 3
  110 D1:C0DB FB 17 6C 00 	.db 251, 23, 108, 0
  111 D1:C0DF -  -  -  -  
  112 D1:C0DF -  -  -  -  FG_Data_34:
  113 D1:C0DF 50 D3 D1 -  	.dl Sprite_Table_0
  114 D1:C0E2 0C -  -  -  	.db 12
  115 D1:C0E3 23 2D 2C 02 	.db 35, 45, 44, 2
  116 D1:C0E7 5E 2D 55 02 	.db 94, 45, 85, 2
  117 D1:C0EB 6C 2D 21 06 	.db 108, 45, 33, 6
  118 D1:C0EF 06 17 54 07 	.db 6, 23, 84, 7
  119 D1:C0F3 64 17 7A 05 	.db 100, 23, 122, 5
  120 D1:C0F7 BE 2D 1A 01 	.db 190, 45, 26, 1
  121 D1:C0FB B1 2D 55 02 	.db 177, 45, 85, 2
  122 D1:C0FF 0B 2D 2D 03 	.db 11, 45, 45, 3
  123 D1:C103 55 17 3E 07 	.db 85, 23, 62, 7
  124 D1:C107 F5 17 6A 04 	.db 245, 23, 106, 4
  125 D1:C10B 8F 17 33 00 	.db 143, 23, 51, 0
  126 D1:C10F 22 17 62 00 	.db 34, 23, 98, 0
  127 D1:C113 -  -  -  -  
  128 D1:C113 -  -  -  -  FG_Data_33:
  129 D1:C113 50 D3 D1 -  	.dl Sprite_Table_0
  130 D1:C116 0A -  -  -  	.db 10
  131 D1:C117 87 2D 1A 02 	.db 135, 45, 26, 2
  132 D1:C11B 2E 2D 4A 01 	.db 46, 45, 74, 1
  133 D1:C11F FD 2D 7B 02 	.db 253, 45, 123, 2
  134 D1:C123 7C 2D 6A 03 	.db 124, 45, 106, 3
  135 D1:C127 DE 2D 13 03 	.db 222, 45, 19, 3
  136 D1:C12B BB 2D 53 06 	.db 187, 45, 83, 6
  137 D1:C12F 00 2D 6F 06 	.db 0, 45, 111, 6
  138 D1:C133 2E 17 15 04 	.db 46, 23, 21, 4
  139 D1:C137 9F 17 76 05 	.db 159, 23, 118, 5
  140 D1:C13B 60 17 44 05 	.db 96, 23, 68, 5
  141 D1:C13F -  -  -  -  
  142 D1:C13F -  -  -  -  FG_Data_32:
  143 D1:C13F 50 D3 D1 -  	.dl Sprite_Table_0
  144 D1:C142 08 -  -  -  	.db 8
  145 D1:C143 38 2D 2E 02 	.db 56, 45, 46, 2
  146 D1:C147 8E 2D 6C 02 	.db 142, 45, 108, 2
  147 D1:C14B E9 2D 25 01 	.db 233, 45, 37, 1
  148 D1:C14F 65 2D 2B 06 	.db 101, 45, 43, 6
  149 D1:C153 25 2D 5F 06 	.db 37, 45, 95, 6
  150 D1:C157 93 17 15 04 	.db 147, 23, 21, 4
  151 D1:C15B BB 17 4E 00 	.db 187, 23, 78, 0
  152 D1:C15F 4B 2F 4A 08 	.db 75, 47, 74, 8
  153 D1:C163 -  -  -  -  
  154 D1:C163 -  -  -  -  FG_Data_31:
  155 D1:C163 50 D3 D1 -  	.dl Sprite_Table_0
  156 D1:C166 07 -  -  -  	.db 7
  157 D1:C167 63 2D 28 02 	.db 99, 45, 40, 2
  158 D1:C16B 56 2D 62 01 	.db 86, 45, 98, 1
  159 D1:C16F A6 2D 4D 06 	.db 166, 45, 77, 6
  160 D1:C173 D6 2D 11 03 	.db 214, 45, 17, 3
  161 D1:C177 9A 17 78 04 	.db 154, 23, 120, 4
  162 D1:C17B FE 17 09 00 	.db 254, 23, 9, 0
  163 D1:C17F 34 17 40 05 	.db 52, 23, 64, 5
  164 D1:C183 -  -  -  -  
  165 D1:C183 -  -  -  -  FG_Data_30:
  166 D1:C183 50 D3 D1 -  	.dl Sprite_Table_0
  167 D1:C186 09 -  -  -  	.db 9
  168 D1:C187 49 2D 51 02 	.db 73, 45, 81, 2
  169 D1:C18B 35 2D 26 01 	.db 53, 45, 38, 1
  170 D1:C18F 9E 2D 76 01 	.db 158, 45, 118, 1
  171 D1:C193 F7 2D 07 03 	.db 247, 45, 7, 3
  172 D1:C197 B0 2D 3B 06 	.db 176, 45, 59, 6
  173 D1:C19B FA 17 4C 04 	.db 250, 23, 76, 4
  174 D1:C19F C7 17 6F 05 	.db 199, 23, 111, 5
  175 D1:C1A3 66 17 1C 00 	.db 102, 23, 28, 0
  176 D1:C1A7 6D 2F 30 08 	.db 109, 47, 48, 8
  177 D1:C1AB -  -  -  -  
  178 D1:C1AB -  -  -  -  FG_Data_29:
  179 D1:C1AB 50 D3 D1 -  	.dl Sprite_Table_0
  180 D1:C1AE 10 -  -  -  	.db 16
  181 D1:C1AF E1 2D 20 01 	.db 225, 45, 32, 1
  182 D1:C1B3 DB 2D 2C 02 	.db 219, 45, 44, 2
  183 D1:C1B7 B9 2D 3B 01 	.db 185, 45, 59, 1
  184 D1:C1BB A2 2D 40 02 	.db 162, 45, 64, 2
  185 D1:C1BF B6 2D 4A 02 	.db 182, 45, 74, 2
  186 D1:C1C3 8B 2D 4F 02 	.db 139, 45, 79, 2
  187 D1:C1C7 8B 2D 4F 02 	.db 139, 45, 79, 2
  188 D1:C1CB A7 2D 66 02 	.db 167, 45, 102, 2
  189 D1:C1CF 80 2D 54 02 	.db 128, 45, 84, 2
  190 D1:C1D3 81 2D 24 01 	.db 129, 45, 36, 1
  191 D1:C1D7 50 2D 15 01 	.db 80, 45, 21, 1
  192 D1:C1DB D1 2D 0F 03 	.db 209, 45, 15, 3
  193 D1:C1DF 14 17 38 04 	.db 20, 23, 56, 4
  194 D1:C1E3 FA 17 7D 04 	.db 250, 23, 125, 4
  195 D1:C1E7 D9 17 44 05 	.db 217, 23, 68, 5
  196 D1:C1EB 21 17 67 05 	.db 33, 23, 103, 5
  197 D1:C1EF -  -  -  -  
  198 D1:C1EF -  -  -  -  FG_Data_28:
  199 D1:C1EF 50 D3 D1 -  	.dl Sprite_Table_0
  200 D1:C1F2 08 -  -  -  	.db 8
  201 D1:C1F3 98 2D 3F 01 	.db 152, 45, 63, 1
  202 D1:C1F7 C9 2D 60 01 	.db 201, 45, 96, 1
  203 D1:C1FB 6B 2D 83 01 	.db 107, 45, 131, 1
  204 D1:C1FF D3 2D 13 03 	.db 211, 45, 19, 3
  205 D1:C203 59 17 1A 04 	.db 89, 23, 26, 4
  206 D1:C207 64 17 6A 05 	.db 100, 23, 106, 5
  207 D1:C20B 05 17 41 05 	.db 5, 23, 65, 5
  208 D1:C20F F1 2F 4A 09 	.db 241, 47, 74, 9
  209 D1:C213 -  -  -  -  
  210 D1:C213 -  -  -  -  FG_Data_27:
  211 D1:C213 50 D3 D1 -  	.dl Sprite_Table_0
  212 D1:C216 09 -  -  -  	.db 9
  213 D1:C217 64 2D 3F 02 	.db 100, 45, 63, 2
  214 D1:C21B 79 2D 73 02 	.db 121, 45, 115, 2
  215 D1:C21F DA 2D 2A 01 	.db 218, 45, 42, 1
  216 D1:C223 F7 2D 54 03 	.db 247, 45, 84, 3
  217 D1:C227 0D 2D 11 06 	.db 13, 45, 17, 6
  218 D1:C22B 81 17 5E 04 	.db 129, 23, 94, 4
  219 D1:C22F 83 17 1E 05 	.db 131, 23, 30, 5
  220 D1:C233 14 17 34 00 	.db 20, 23, 52, 0
  221 D1:C237 5C 2F 18 09 	.db 92, 47, 24, 9
  222 D1:C23B -  -  -  -  
  223 D1:C23B -  -  -  -  FG_Data_26:
  224 D1:C23B 50 D3 D1 -  	.dl Sprite_Table_0
  225 D1:C23E 0A -  -  -  	.db 10
  226 D1:C23F 78 2D 7F 02 	.db 120, 45, 127, 2
  227 D1:C243 5F 2D 20 02 	.db 95, 45, 32, 2
  228 D1:C247 D0 2D 4F 02 	.db 208, 45, 79, 2
  229 D1:C24B F9 2D 68 03 	.db 249, 45, 104, 3
  230 D1:C24F 52 2D 52 03 	.db 82, 45, 82, 3
  231 D1:C253 8D 17 1F 04 	.db 141, 23, 31, 4
  232 D1:C257 9A 17 43 00 	.db 154, 23, 67, 0
  233 D1:C25B 33 2D 7E 02 	.db 51, 45, 126, 2
  234 D1:C25F 45 2D 42 03 	.db 69, 45, 66, 3
  235 D1:C263 02 2F 38 09 	.db 2, 47, 56, 9
  236 D1:C267 -  -  -  -  
  237 D1:C267 -  -  -  -  FG_Data_25:
  238 D1:C267 50 D3 D1 -  	.dl Sprite_Table_0
  239 D1:C26A 25 -  -  -  	.db 37
  240 D1:C26B 00 2D 23 01 	.db 0, 45, 35, 1
  241 D1:C26F 76 2D 28 02 	.db 118, 45, 40, 2
  242 D1:C273 70 2D 33 01 	.db 112, 45, 51, 1
  243 D1:C277 4E 2D 43 02 	.db 78, 45, 67, 2
  244 D1:C27B 38 2D 47 01 	.db 56, 45, 71, 1
  245 D1:C27F 4B 2D 51 01 	.db 75, 45, 81, 1
  246 D1:C283 20 2D 56 01 	.db 32, 45, 86, 1
  247 D1:C287 20 2D 56 01 	.db 32, 45, 86, 1
  248 D1:C28B 6E 17 4C 00 	.db 110, 23, 76, 0
  249 D1:C28F FB 17 23 05 	.db 251, 23, 35, 5
  250 D1:C293 8F 17 84 04 	.db 143, 23, 132, 4
  251 D1:C297 16 2D 2C 02 	.db 22, 45, 44, 2
  252 D1:C29B 15 2D 5B 01 	.db 21, 45, 91, 1
  253 D1:C29F CA 2D 2E 02 	.db 202, 45, 46, 2
  254 D1:C2A3 DE 2D 58 01 	.db 222, 45, 88, 1
  255 D1:C2A7 3C 2D 6D 01 	.db 60, 45, 109, 1
  256 D1:C2AB 8C 2F 33 08 	.db 140, 47, 51, 8
  257 D1:C2AF 66 2D 17 06 	.db 102, 45, 23, 6
  258 D1:C2B3 85 17 1F 00 	.db 133, 23, 31, 0
  259 D1:C2B7 CF 2D 3E 06 	.db 207, 45, 62, 6
  260 D1:C2BB 98 2D 26 02 	.db 152, 45, 38, 2
  261 D1:C2BF D3 2D 4F 02 	.db 211, 45, 79, 2
  262 D1:C2C3 53 2D 0D 06 	.db 83, 45, 13, 6
  263 D1:C2C7 E1 2D 1B 06 	.db 225, 45, 27, 6
  264 D1:C2CB 30 2D 4D 06 	.db 48, 45, 77, 6
  265 D1:C2CF 7B 17 4E 04 	.db 123, 23, 78, 4
  266 D1:C2D3 D9 17 74 05 	.db 217, 23, 116, 5
  267 D1:C2D7 14 17 70 00 	.db 20, 23, 112, 0
  268 D1:C2DB 52 2D 7A 01 	.db 82, 45, 122, 1
  269 D1:C2DF 64 2D 3F 06 	.db 100, 45, 63, 6
  270 D1:C2E3 1A 17 20 00 	.db 26, 23, 32, 0
  271 D1:C2E7 21 2F 34 08 	.db 33, 47, 52, 8
  272 D1:C2EB 68 2D 54 02 	.db 104, 45, 84, 2
  273 D1:C2EF 54 2D 29 01 	.db 84, 45, 41, 1
  274 D1:C2F3 BD 2D 79 01 	.db 189, 45, 121, 1
  275 D1:C2F7 19 17 80 04 	.db 25, 23, 128, 4
  276 D1:C2FB 72 2D 75 02 	.db 114, 45, 117, 2
  277 D1:C2FF -  -  -  -  
  278 D1:C2FF -  -  -  -  FG_Data_24:
  279 D1:C2FF 50 D3 D1 -  	.dl Sprite_Table_0
  280 D1:C302 27 -  -  -  	.db 39
  281 D1:C303 95 2D 24 02 	.db 149, 45, 36, 2
  282 D1:C307 FA 2D 2F 02 	.db 250, 45, 47, 2
  283 D1:C30B 8F 2D 30 02 	.db 143, 45, 48, 2
  284 D1:C30F D8 2D 3E 01 	.db 216, 45, 62, 1
  285 D1:C313 6D 2D 3F 01 	.db 109, 45, 63, 1
  286 D1:C317 D5 2D 4D 02 	.db 213, 45, 77, 2
  287 D1:C31B C2 2D 43 02 	.db 194, 45, 67, 2
  288 D1:C31F 57 2D 44 02 	.db 87, 45, 68, 2
  289 D1:C323 6A 2D 4E 02 	.db 106, 45, 78, 2
  290 D1:C327 AA 2D 52 02 	.db 170, 45, 82, 2
  291 D1:C32B 3F 2D 53 02 	.db 63, 45, 83, 2
  292 D1:C32F 3F 2D 53 02 	.db 63, 45, 83, 2
  293 D1:C333 AA 2D 52 02 	.db 170, 45, 82, 2
  294 D1:C337 A0 2D 27 01 	.db 160, 45, 39, 1
  295 D1:C33B 9F 2D 57 02 	.db 159, 45, 87, 2
  296 D1:C33F 6F 2D 18 01 	.db 111, 45, 24, 1
  297 D1:C343 F0 2D 12 03 	.db 240, 45, 18, 3
  298 D1:C347 F8 17 47 05 	.db 248, 23, 71, 5
  299 D1:C34B C6 2D 69 02 	.db 198, 45, 105, 2
  300 D1:C34F FC 2D 14 02 	.db 252, 45, 20, 2
  301 D1:C353 8D 17 48 05 	.db 141, 23, 72, 5
  302 D1:C357 85 2D 13 03 	.db 133, 45, 19, 3
  303 D1:C35B 03 2D 66 02 	.db 3, 45, 102, 2
  304 D1:C35F 5E 2D 1F 01 	.db 94, 45, 31, 1
  305 D1:C363 A3 2D 44 01 	.db 163, 45, 68, 1
  306 D1:C367 F1 2D 64 03 	.db 241, 45, 100, 3
  307 D1:C36B 75 2D 68 03 	.db 117, 45, 104, 3
  308 D1:C36F 08 17 0E 07 	.db 8, 23, 14, 7
  309 D1:C373 A3 17 0F 04 	.db 163, 23, 15, 4
  310 D1:C377 D5 17 3E 00 	.db 213, 23, 62, 0
  311 D1:C37B 30 17 47 05 	.db 48, 23, 71, 5
  312 D1:C37F 5B 2D 6A 02 	.db 91, 45, 106, 2
  313 D1:C383 FD 2D 55 02 	.db 253, 45, 85, 2
  314 D1:C387 E9 2D 2A 01 	.db 233, 45, 42, 1
  315 D1:C38B 34 2D 58 02 	.db 52, 45, 88, 2
  316 D1:C38F 35 2D 28 01 	.db 53, 45, 40, 1
  317 D1:C393 04 2D 19 01 	.db 4, 45, 25, 1
  318 D1:C397 AE 17 80 07 	.db 174, 23, 128, 7
  319 D1:C39B E5 2D 1D 02 	.db 229, 45, 29, 2
  320 D1:C39F -  -  -  -  
  321 D1:C39F -  -  -  -  FG_Data_23:
  322 D1:C39F 50 D3 D1 -  	.dl Sprite_Table_0
  323 D1:C3A2 1A -  -  -  	.db 26
  324 D1:C3A3 2D 2D 1A 02 	.db 45, 45, 26, 2
  325 D1:C3A7 27 2D 26 02 	.db 39, 45, 38, 2
  326 D1:C3AB 05 2D 35 01 	.db 5, 45, 53, 1
  327 D1:C3AF 02 2D 44 02 	.db 2, 45, 68, 2
  328 D1:C3B3 AD 2D 28 02 	.db 173, 45, 40, 2
  329 D1:C3B7 25 17 3E 05 	.db 37, 23, 62, 5
  330 D1:C3BB B2 17 16 00 	.db 178, 23, 22, 0
  331 D1:C3BF 46 17 76 07 	.db 70, 23, 118, 7
  332 D1:C3C3 1D 2D 09 03 	.db 29, 45, 9, 3
  333 D1:C3C7 FC 2D 35 06 	.db 252, 45, 53, 6
  334 D1:C3CB EA 2D 70 01 	.db 234, 45, 112, 1
  335 D1:C3CF 81 2D 20 01 	.db 129, 45, 32, 1
  336 D1:C3D3 95 2D 4B 02 	.db 149, 45, 75, 2
  337 D1:C3D7 24 2F 3F 08 	.db 36, 47, 63, 8
  338 D1:C3DB 67 2D 4A 06 	.db 103, 45, 74, 6
  339 D1:C3DF 55 2D 85 01 	.db 85, 45, 133, 1
  340 D1:C3E3 00 2D 60 02 	.db 0, 45, 96, 2
  341 D1:C3E7 C0 2F 44 08 	.db 192, 47, 68, 8
  342 D1:C3EB 73 17 03 00 	.db 115, 23, 3, 0
  343 D1:C3EF 0F 17 71 07 	.db 15, 23, 113, 7
  344 D1:C3F3 4B 2D 0B 06 	.db 75, 45, 11, 6
  345 D1:C3F7 1B 2D 46 03 	.db 27, 45, 70, 3
  346 D1:C3FB 9A 2D 59 06 	.db 154, 45, 89, 6
  347 D1:C3FF DA 2D 25 06 	.db 218, 45, 37, 6
  348 D1:C403 1D 17 2B 00 	.db 29, 23, 43, 0
  349 D1:C407 B9 2F 2A 08 	.db 185, 47, 42, 8
  350 D1:C40B -  -  -  -  
  351 D1:C40B -  -  -  -  FG_Data_22:
  352 D1:C40B 50 D3 D1 -  	.dl Sprite_Table_0
  353 D1:C40E 24 -  -  -  	.db 36
  354 D1:C40F 98 2D 2F 01 	.db 152, 45, 47, 1
  355 D1:C413 92 2D 3B 02 	.db 146, 45, 59, 2
  356 D1:C417 70 2D 4A 01 	.db 112, 45, 74, 1
  357 D1:C41B EF 2D 3A 02 	.db 239, 45, 58, 2
  358 D1:C41F 5A 2D 4F 02 	.db 90, 45, 79, 2
  359 D1:C423 6D 2D 59 02 	.db 109, 45, 89, 2
  360 D1:C427 42 2D 5E 02 	.db 66, 45, 94, 2
  361 D1:C42B D7 2D 48 01 	.db 215, 45, 72, 1
  362 D1:C42F 42 2D 5E 02 	.db 66, 45, 94, 2
  363 D1:C433 D7 2D 48 01 	.db 215, 45, 72, 1
  364 D1:C437 CC 2D 4E 02 	.db 204, 45, 78, 2
  365 D1:C43B CD 2D 1E 01 	.db 205, 45, 30, 1
  366 D1:C43F 07 2D 24 01 	.db 7, 45, 36, 1
  367 D1:C443 9C 2D 0F 01 	.db 156, 45, 15, 1
  368 D1:C447 90 17 53 05 	.db 144, 23, 83, 5
  369 D1:C44B B1 17 8B 07 	.db 177, 23, 139, 7
  370 D1:C44F 88 2D 1E 03 	.db 136, 45, 30, 3
  371 D1:C453 F3 2D 60 02 	.db 243, 45, 96, 2
  372 D1:C457 38 2D 33 01 	.db 56, 45, 51, 1
  373 D1:C45B EC 2D 35 01 	.db 236, 45, 53, 1
  374 D1:C45F D8 2D 22 02 	.db 216, 45, 34, 2
  375 D1:C463 CB 2D 5C 01 	.db 203, 45, 92, 1
  376 D1:C467 6C 2D 01 06 	.db 108, 45, 1, 6
  377 D1:C46B 25 2D 35 06 	.db 37, 45, 53, 6
  378 D1:C46F 6F 17 46 04 	.db 111, 23, 70, 4
  379 D1:C473 A9 17 3A 05 	.db 169, 23, 58, 5
  380 D1:C477 37 2D 63 02 	.db 55, 45, 99, 2
  381 D1:C47B 3C 17 69 05 	.db 60, 23, 105, 5
  382 D1:C47F 08 2D 2E 02 	.db 8, 45, 46, 2
  383 D1:C483 71 2D 7E 02 	.db 113, 45, 126, 2
  384 D1:C487 83 2D 42 03 	.db 131, 45, 66, 3
  385 D1:C48B 39 17 23 05 	.db 57, 23, 35, 5
  386 D1:C48F 40 2F 38 09 	.db 64, 47, 56, 9
  387 D1:C493 5E 2D 75 02 	.db 94, 45, 117, 2
  388 D1:C497 1C 2D 58 01 	.db 28, 45, 88, 1
  389 D1:C49B 13 2D 70 01 	.db 19, 45, 112, 1
  390 D1:C49F -  -  -  -  
  391 D1:C49F -  -  -  -  FG_Data_21:
  392 D1:C49F 50 D3 D1 -  	.dl Sprite_Table_0
  393 D1:C4A2 1D -  -  -  	.db 29
  394 D1:C4A3 56 2D 1A 02 	.db 86, 45, 26, 2
  395 D1:C4A7 B4 2D 28 02 	.db 180, 45, 40, 2
  396 D1:C4AB 50 2D 26 02 	.db 80, 45, 38, 2
  397 D1:C4AF AE 2D 33 01 	.db 174, 45, 51, 1
  398 D1:C4B3 2E 2D 35 01 	.db 46, 45, 53, 1
  399 D1:C4B7 8C 2D 43 02 	.db 140, 45, 67, 2
  400 D1:C4BB 76 2D 47 01 	.db 118, 45, 71, 1
  401 D1:C4BF 18 2D 3A 02 	.db 24, 45, 58, 2
  402 D1:C4C3 2B 2D 44 02 	.db 43, 45, 68, 2
  403 D1:C4C7 89 2D 51 01 	.db 137, 45, 81, 1
  404 D1:C4CB 5E 2D 56 01 	.db 94, 45, 86, 1
  405 D1:C4CF 5E 2D 56 01 	.db 94, 45, 86, 1
  406 D1:C4D3 00 2D 48 01 	.db 0, 45, 72, 1
  407 D1:C4D7 00 2D 48 01 	.db 0, 45, 72, 1
  408 D1:C4DB AC 17 4C 00 	.db 172, 23, 76, 0
  409 D1:C4DF CD 17 84 04 	.db 205, 23, 132, 4
  410 D1:C4E3 A4 2D 17 06 	.db 164, 45, 23, 6
  411 D1:C4E7 23 2D 1D 02 	.db 35, 45, 29, 2
  412 D1:C4EB E2 2F 2A 08 	.db 226, 47, 42, 8
  413 D1:C4EF 53 2D 5B 01 	.db 83, 45, 91, 1
  414 D1:C4F3 7A 2D 6D 01 	.db 122, 45, 109, 1
  415 D1:C4F7 4E 17 3E 05 	.db 78, 23, 62, 5
  416 D1:C4FB DB 17 16 00 	.db 219, 23, 22, 0
  417 D1:C4FF 6F 17 76 07 	.db 111, 23, 118, 7
  418 D1:C503 46 2D 09 03 	.db 70, 45, 9, 3
  419 D1:C507 AA 2D 20 01 	.db 170, 45, 32, 1
  420 D1:C50B BE 2D 4B 02 	.db 190, 45, 75, 2
  421 D1:C50F 54 2D 2C 02 	.db 84, 45, 44, 2
  422 D1:C513 1C 2D 60 02 	.db 28, 45, 96, 2
  423 D1:C517 -  -  -  -  
  424 D1:C517 -  -  -  -  FG_Data_20:
  425 D1:C517 50 D3 D1 -  	.dl Sprite_Table_0
  426 D1:C51A 09 -  -  -  	.db 9
  427 D1:C51B 0D 2D 39 01 	.db 13, 45, 57, 1
  428 D1:C51F F5 2D 4E 02 	.db 245, 45, 78, 2
  429 D1:C523 F6 2D 1E 01 	.db 246, 45, 30, 1
  430 D1:C527 C5 2D 0F 01 	.db 197, 45, 15, 1
  431 D1:C52B 3E 2D 5A 01 	.db 62, 45, 90, 1
  432 D1:C52F 48 2D 0D 06 	.db 72, 45, 13, 6
  433 D1:C533 89 17 32 04 	.db 137, 23, 50, 4
  434 D1:C537 96 17 61 05 	.db 150, 23, 97, 5
  435 D1:C53B 66 2F 44 09 	.db 102, 47, 68, 9
  436 D1:C53F -  -  -  -  
  437 D1:C53F -  -  -  -  FG_Data_19:
  438 D1:C53F 50 D3 D1 -  	.dl Sprite_Table_0
  439 D1:C542 06 -  -  -  	.db 6
  440 D1:C543 4F 2D 24 01 	.db 79, 45, 36, 1
  441 D1:C547 E0 2D 7D 01 	.db 224, 45, 125, 1
  442 D1:C54B 6C 2D 4E 06 	.db 108, 45, 78, 6
  443 D1:C54F CE 17 14 04 	.db 206, 23, 20, 4
  444 D1:C553 D9 17 64 05 	.db 217, 23, 100, 5
  445 D1:C557 7A 17 3B 05 	.db 122, 23, 59, 5
  446 D1:C55B -  -  -  -  
  447 D1:C55B -  -  -  -  FG_Data_18:
  448 D1:C55B 50 D3 D1 -  	.dl Sprite_Table_0
  449 D1:C55E 0B -  -  -  	.db 11
  450 D1:C55F 45 2D 49 02 	.db 69, 45, 73, 2
  451 D1:C563 D9 2D 39 02 	.db 217, 45, 57, 2
  452 D1:C567 EE 2D 6D 02 	.db 238, 45, 109, 2
  453 D1:C56B 82 2D 0A 03 	.db 130, 45, 10, 3
  454 D1:C56F 6E 2D 62 06 	.db 110, 45, 98, 6
  455 D1:C573 02 17 19 04 	.db 2, 23, 25, 4
  456 D1:C577 F6 17 57 07 	.db 246, 23, 87, 7
  457 D1:C57B F8 17 18 05 	.db 248, 23, 24, 5
  458 D1:C57F 89 17 2E 00 	.db 137, 23, 46, 0
  459 D1:C583 0F 17 3D 00 	.db 15, 23, 61, 0
  460 D1:C587 D1 2F 12 09 	.db 209, 47, 18, 9
  461 D1:C58B -  -  -  -  
  462 D1:C58B -  -  -  -  FG_Data_17:
  463 D1:C58B 50 D3 D1 -  	.dl Sprite_Table_0
  464 D1:C58E 09 -  -  -  	.db 9
  465 D1:C58F 12 2D 77 01 	.db 18, 45, 119, 1
  466 D1:C593 38 2D 28 01 	.db 56, 45, 40, 1
  467 D1:C597 73 2D 51 01 	.db 115, 45, 81, 1
  468 D1:C59B 81 2D 1D 03 	.db 129, 45, 29, 3
  469 D1:C59F 1B 17 50 07 	.db 27, 23, 80, 7
  470 D1:C5A3 79 17 77 00 	.db 121, 23, 119, 0
  471 D1:C5A7 ED 2D 79 02 	.db 237, 45, 121, 2
  472 D1:C5AB D4 2D 1A 02 	.db 212, 45, 26, 2
  473 D1:C5AF C7 2D 4C 06 	.db 199, 45, 76, 6
  474 D1:C5B3 -  -  -  -  
  475 D1:C5B3 -  -  -  -  FG_Data_16:
  476 D1:C5B3 50 D3 D1 -  	.dl Sprite_Table_0
  477 D1:C5B6 09 -  -  -  	.db 9
  478 D1:C5B7 9C 2D 16 01 	.db 156, 45, 22, 1
  479 D1:C5BB 43 2D 47 02 	.db 67, 45, 71, 2
  480 D1:C5BF 91 2D 67 06 	.db 145, 45, 103, 6
  481 D1:C5C3 F3 2D 10 06 	.db 243, 45, 16, 6
  482 D1:C5C7 D0 2D 4F 03 	.db 208, 45, 79, 3
  483 D1:C5CB 15 2D 6B 03 	.db 21, 45, 107, 3
  484 D1:C5CF 43 17 11 07 	.db 67, 23, 17, 7
  485 D1:C5D3 B4 17 73 00 	.db 180, 23, 115, 0
  486 D1:C5D7 75 17 41 00 	.db 117, 23, 65, 0
  487 D1:C5DB -  -  -  -  
  488 D1:C5DB -  -  -  -  FG_Data_15:
  489 D1:C5DB 50 D3 D1 -  	.dl Sprite_Table_0
  490 D1:C5DE 09 -  -  -  	.db 9
  491 D1:C5DF 4D 2D 2A 01 	.db 77, 45, 42, 1
  492 D1:C5E3 A3 2D 68 01 	.db 163, 45, 104, 1
  493 D1:C5E7 FE 2D 22 02 	.db 254, 45, 34, 2
  494 D1:C5EB 7A 2D 27 03 	.db 122, 45, 39, 3
  495 D1:C5EF 3A 2D 5B 03 	.db 58, 45, 91, 3
  496 D1:C5F3 A8 17 11 04 	.db 168, 23, 17, 4
  497 D1:C5F7 D0 17 4A 05 	.db 208, 23, 74, 5
  498 D1:C5FB 13 17 05 05 	.db 19, 23, 5, 5
  499 D1:C5FF 60 2F 47 09 	.db 96, 47, 71, 9
  500 D1:C603 -  -  -  -  
  501 D1:C603 -  -  -  -  FG_Data_14:
  502 D1:C603 50 D3 D1 -  	.dl Sprite_Table_0
  503 D1:C606 08 -  -  -  	.db 8
  504 D1:C607 78 2D 24 01 	.db 120, 45, 36, 1
  505 D1:C60B 6B 2D 5F 02 	.db 107, 45, 95, 2
  506 D1:C60F BB 2D 49 03 	.db 187, 45, 73, 3
  507 D1:C613 EB 2D 0E 06 	.db 235, 45, 14, 6
  508 D1:C617 0C 2D 04 06 	.db 12, 45, 4, 6
  509 D1:C61B 0F 17 48 07 	.db 15, 23, 72, 7
  510 D1:C61F AF 17 74 04 	.db 175, 23, 116, 4
  511 D1:C623 49 17 3D 00 	.db 73, 23, 61, 0
  512 D1:C627 -  -  -  -  
  513 D1:C627 -  -  -  -  FG_Data_13:
  514 D1:C627 50 D3 D1 -  	.dl Sprite_Table_0
  515 D1:C62A 08 -  -  -  	.db 8
  516 D1:C62B 5E 2D 4D 01 	.db 94, 45, 77, 1
  517 D1:C62F 4A 2D 23 02 	.db 74, 45, 35, 2
  518 D1:C633 B3 2D 73 02 	.db 179, 45, 115, 2
  519 D1:C637 C5 2D 37 03 	.db 197, 45, 55, 3
  520 D1:C63B 0F 17 79 04 	.db 15, 23, 121, 4
  521 D1:C63F DC 17 6C 00 	.db 220, 23, 108, 0
  522 D1:C643 7B 17 18 05 	.db 123, 23, 24, 5
  523 D1:C647 82 2F 2D 09 	.db 130, 47, 45, 9
  524 D1:C64B -  -  -  -  
  525 D1:C64B -  -  -  -  FG_Data_12:
  526 D1:C64B 50 D3 D1 -  	.dl Sprite_Table_0
  527 D1:C64E 10 -  -  -  	.db 16
  528 D1:C64F F6 2D 1D 02 	.db 246, 45, 29, 2
  529 D1:C653 F0 2D 28 01 	.db 240, 45, 40, 1
  530 D1:C657 CE 2D 38 02 	.db 206, 45, 56, 2
  531 D1:C65B B8 2D 3C 01 	.db 184, 45, 60, 1
  532 D1:C65F CB 2D 46 01 	.db 203, 45, 70, 1
  533 D1:C663 A0 2D 4B 01 	.db 160, 45, 75, 1
  534 D1:C667 A0 2D 4B 01 	.db 160, 45, 75, 1
  535 D1:C66B BC 2D 62 01 	.db 188, 45, 98, 1
  536 D1:C66F 95 2D 50 01 	.db 149, 45, 80, 1
  537 D1:C673 96 2D 21 02 	.db 150, 45, 33, 2
  538 D1:C677 65 2D 12 02 	.db 101, 45, 18, 2
  539 D1:C67B E6 2D 0C 06 	.db 230, 45, 12, 6
  540 D1:C67F 29 17 34 07 	.db 41, 23, 52, 7
  541 D1:C683 EE 17 41 00 	.db 238, 23, 65, 0
  542 D1:C687 36 17 64 00 	.db 54, 23, 100, 0
  543 D1:C68B 06 2F 46 08 	.db 6, 47, 70, 8
  544 D1:C68F -  -  -  -  
  545 D1:C68F -  -  -  -  FG_Data_11:
  546 D1:C68F 50 D3 D1 -  	.dl Sprite_Table_0
  547 D1:C692 08 -  -  -  	.db 8
  548 D1:C693 AD 2D 3C 02 	.db 173, 45, 60, 2
  549 D1:C697 DE 2D 5D 02 	.db 222, 45, 93, 2
  550 D1:C69B 80 2D 80 02 	.db 128, 45, 128, 2
  551 D1:C69F E8 2D 10 06 	.db 232, 45, 16, 6
  552 D1:C6A3 0C 2D 51 06 	.db 12, 45, 81, 6
  553 D1:C6A7 6E 17 16 07 	.db 110, 23, 22, 7
  554 D1:C6AB 79 17 67 00 	.db 121, 23, 103, 0
  555 D1:C6AF 1A 17 3E 00 	.db 26, 23, 62, 0
  556 D1:C6B3 -  -  -  -  
  557 D1:C6B3 -  -  -  -  FG_Data_10:
  558 D1:C6B3 50 D3 D1 -  	.dl Sprite_Table_0
  559 D1:C6B6 09 -  -  -  	.db 9
  560 D1:C6B7 79 2D 3B 01 	.db 121, 45, 59, 1
  561 D1:C6BB 8E 2D 6F 01 	.db 142, 45, 111, 1
  562 D1:C6BF EF 2D 27 02 	.db 239, 45, 39, 2
  563 D1:C6C3 22 2D 0D 03 	.db 34, 45, 13, 3
  564 D1:C6C7 0E 2D 65 06 	.db 14, 45, 101, 6
  565 D1:C6CB 96 17 5A 07 	.db 150, 23, 90, 7
  566 D1:C6CF 98 17 1B 00 	.db 152, 23, 27, 0
  567 D1:C6D3 29 17 30 05 	.db 41, 23, 48, 5
  568 D1:C6D7 71 2F 14 08 	.db 113, 47, 20, 8
  569 D1:C6DB -  -  -  -  
  570 D1:C6DB -  -  -  -  FG_Data_9:
  571 D1:C6DB 50 D3 D1 -  	.dl Sprite_Table_0
  572 D1:C6DE 09 -  -  -  	.db 9
  573 D1:C6DF 18 2D 56 01 	.db 24, 45, 86, 1
  574 D1:C6E3 26 2D 22 03 	.db 38, 45, 34, 3
  575 D1:C6E7 1E 17 7C 00 	.db 30, 23, 124, 0
  576 D1:C6EB 8D 2D 7B 01 	.db 141, 45, 123, 1
  577 D1:C6EF 74 2D 1C 01 	.db 116, 45, 28, 1
  578 D1:C6F3 E5 2D 4B 01 	.db 229, 45, 75, 1
  579 D1:C6F7 67 2D 4F 06 	.db 103, 45, 79, 6
  580 D1:C6FB A2 17 1B 07 	.db 162, 23, 27, 7
  581 D1:C6FF AF 17 3F 05 	.db 175, 23, 63, 5
  582 D1:C703 -  -  -  -  
  583 D1:C703 -  -  -  -  FG_Data_8:
  584 D1:C703 50 D3 D1 -  	.dl Sprite_Table_0
  585 D1:C706 09 -  -  -  	.db 9
  586 D1:C707 41 2D 1B 01 	.db 65, 45, 27, 1
  587 D1:C70B B7 2D 7C 01 	.db 183, 45, 124, 1
  588 D1:C70F DD 2D 2D 01 	.db 221, 45, 45, 1
  589 D1:C713 36 2D 6C 06 	.db 54, 45, 108, 6
  590 D1:C717 98 2D 15 06 	.db 152, 45, 21, 6
  591 D1:C71B 75 2D 54 03 	.db 117, 45, 84, 3
  592 D1:C71F C0 17 55 07 	.db 192, 23, 85, 7
  593 D1:C723 59 17 78 00 	.db 89, 23, 120, 0
  594 D1:C727 1A 17 46 00 	.db 26, 23, 70, 0
  595 D1:C72B -  -  -  -  
  596 D1:C72B -  -  -  -  FG_Data_7:
  597 D1:C72B 50 D3 D1 -  	.dl Sprite_Table_0
  598 D1:C72E 09 -  -  -  	.db 9
  599 D1:C72F 48 2D 6D 01 	.db 72, 45, 109, 1
  600 D1:C733 A3 2D 27 02 	.db 163, 45, 39, 2
  601 D1:C737 E8 2D 4C 02 	.db 232, 45, 76, 2
  602 D1:C73B BA 2D 70 03 	.db 186, 45, 112, 3
  603 D1:C73F 1F 2D 2C 03 	.db 31, 45, 44, 3
  604 D1:C743 4D 17 16 04 	.db 77, 23, 22, 4
  605 D1:C747 E8 17 16 07 	.db 232, 23, 22, 7
  606 D1:C74B 75 17 4F 05 	.db 117, 23, 79, 5
  607 D1:C74F 05 2F 4C 09 	.db 5, 47, 76, 9
  608 D1:C753 -  -  -  -  
  609 D1:C753 -  -  -  -  FG_Data_6:
  610 D1:C753 50 D3 D1 -  	.dl Sprite_Table_0
  611 D1:C756 08 -  -  -  	.db 8
  612 D1:C757 1D 2D 29 01 	.db 29, 45, 41, 1
  613 D1:C75B 10 2D 64 02 	.db 16, 45, 100, 2
  614 D1:C75F F2 2D 2F 01 	.db 242, 45, 47, 1
  615 D1:C763 DF 2D 60 03 	.db 223, 45, 96, 3
  616 D1:C767 60 2D 4E 03 	.db 96, 45, 78, 3
  617 D1:C76B 90 2D 13 06 	.db 144, 45, 19, 6
  618 D1:C76F 54 17 79 04 	.db 84, 23, 121, 4
  619 D1:C773 B8 17 0A 05 	.db 184, 23, 10, 5
  620 D1:C777 -  -  -  -  
  621 D1:C777 -  -  -  -  FG_Data_5:
  622 D1:C777 50 D3 D1 -  	.dl Sprite_Table_0
  623 D1:C77A 09 -  -  -  	.db 9
  624 D1:C77B 03 2D 52 01 	.db 3, 45, 82, 1
  625 D1:C77F 58 2D 78 02 	.db 88, 45, 120, 2
  626 D1:C783 B1 2D 09 06 	.db 177, 45, 9, 6
  627 D1:C787 6A 2D 3C 03 	.db 106, 45, 60, 3
  628 D1:C78B B4 17 4D 07 	.db 180, 23, 77, 7
  629 D1:C78F EE 17 42 00 	.db 238, 23, 66, 0
  630 D1:C793 81 17 71 00 	.db 129, 23, 113, 0
  631 D1:C797 20 17 1D 05 	.db 32, 23, 29, 5
  632 D1:C79B 27 2F 32 09 	.db 39, 47, 50, 9
  633 D1:C79F -  -  -  -  
  634 D1:C79F -  -  -  -  FG_Data_4:
  635 D1:C79F 50 D3 D1 -  	.dl Sprite_Table_0
  636 D1:C7A2 0F -  -  -  	.db 15
  637 D1:C7A3 9B 2D 22 02 	.db 155, 45, 34, 2
  638 D1:C7A7 95 2D 2D 01 	.db 149, 45, 45, 1
  639 D1:C7AB 73 2D 3D 02 	.db 115, 45, 61, 2
  640 D1:C7AF 5D 2D 41 01 	.db 93, 45, 65, 1
  641 D1:C7B3 70 2D 4B 01 	.db 112, 45, 75, 1
  642 D1:C7B7 45 2D 50 01 	.db 69, 45, 80, 1
  643 D1:C7BB 45 2D 50 01 	.db 69, 45, 80, 1
  644 D1:C7BF 61 2D 67 01 	.db 97, 45, 103, 1
  645 D1:C7C3 EF 2D 28 02 	.db 239, 45, 40, 2
  646 D1:C7C7 3A 2D 55 01 	.db 58, 45, 85, 1
  647 D1:C7CB 3B 2D 26 02 	.db 59, 45, 38, 2
  648 D1:C7CF 0A 2D 17 02 	.db 10, 45, 23, 2
  649 D1:C7D3 8B 2D 11 06 	.db 139, 45, 17, 6
  650 D1:C7D7 B4 17 7E 04 	.db 180, 23, 126, 4
  651 D1:C7DB 93 17 46 00 	.db 147, 23, 70, 0
  652 D1:C7DF -  -  -  -  
  653 D1:C7DF -  -  -  -  FG_Data_3:
  654 D1:C7DF 50 D3 D1 -  	.dl Sprite_Table_0
  655 D1:C7E2 09 -  -  -  	.db 9
  656 D1:C7E3 52 2D 41 02 	.db 82, 45, 65, 2
  657 D1:C7E7 83 2D 62 02 	.db 131, 45, 98, 2
  658 D1:C7EB 25 2D 85 02 	.db 37, 45, 133, 2
  659 D1:C7EF 8D 2D 15 06 	.db 141, 45, 21, 6
  660 D1:C7F3 13 17 1B 07 	.db 19, 23, 27, 7
  661 D1:C7F7 CE 17 39 07 	.db 206, 23, 57, 7
  662 D1:C7FB DB 17 69 00 	.db 219, 23, 105, 0
  663 D1:C7FF 1E 17 6C 00 	.db 30, 23, 108, 0
  664 D1:C803 AB 2F 4B 08 	.db 171, 47, 75, 8
  665 D1:C807 -  -  -  -  
  666 D1:C807 -  -  -  -  FG_Data_2:
  667 D1:C807 50 D3 D1 -  	.dl Sprite_Table_0
  668 D1:C80A 08 -  -  -  	.db 8
  669 D1:C80B 1E 2D 40 01 	.db 30, 45, 64, 1
  670 D1:C80F 33 2D 74 01 	.db 51, 45, 116, 1
  671 D1:C813 94 2D 2C 02 	.db 148, 45, 44, 2
  672 D1:C817 B1 2D 56 06 	.db 177, 45, 86, 6
  673 D1:C81B 3B 17 5F 07 	.db 59, 23, 95, 7
  674 D1:C81F BF 17 43 00 	.db 191, 23, 67, 0
  675 D1:C823 3D 17 20 00 	.db 61, 23, 32, 0
  676 D1:C827 16 2F 19 08 	.db 22, 47, 25, 8
  677 D1:C82B -  -  -  -  
  678 D1:C82B -  -  -  -  FG_Data_1:
  679 D1:C82B 50 D3 D1 -  	.dl Sprite_Table_0
  680 D1:C82E 08 -  -  -  	.db 8
  681 D1:C82F 15 2D 68 02 	.db 21, 45, 104, 2
  682 D1:C833 8A 2D 50 01 	.db 138, 45, 80, 1
  683 D1:C837 C7 2D 12 03 	.db 199, 45, 18, 3
  684 D1:C83B B3 2D 6A 06 	.db 179, 45, 106, 6
  685 D1:C83F 0C 2D 54 06 	.db 12, 45, 84, 6
  686 D1:C843 47 17 20 07 	.db 71, 23, 32, 7
  687 D1:C847 CE 17 35 05 	.db 206, 23, 53, 5
  688 D1:C84B 54 17 44 05 	.db 84, 23, 68, 5
  689 D1:C84F -  -  -  -  
  690 D1:C84F -  -  -  -  FG_Data_0:
  691 D1:C84F 50 D3 D1 -  	.dl Sprite_Table_0
  692 D1:C852 09 -  -  -  	.db 9
  693 D1:C853 36 17 66 00 	.db 54, 23, 102, 0
  694 D1:C857 87 2D 2B 01 	.db 135, 45, 43, 1
  695 D1:C85B FC 2D 09 02 	.db 252, 45, 9, 2
  696 D1:C85F B2 2D 84 02 	.db 178, 45, 132, 2
  697 D1:C863 81 2D 0E 03 	.db 129, 45, 14, 3
  698 D1:C867 2E 17 07 04 	.db 46, 23, 7, 4
  699 D1:C86B BD 17 61 04 	.db 189, 23, 97, 4
  700 D1:C86F C8 17 1A 05 	.db 200, 23, 26, 5
  701 D1:C873 36 17 47 00 	.db 54, 23, 71, 0
  702 D1:C877 -  -  -  -  
  703 D1:C877 -  -  -  -  
  704 D1:C877 -  -  -  -  
Listing for file "ascent.asm"
  250 D1:C877 -  -  -  -  #include "MG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\MG_Data.txt"
    1 D1:C877 -  -  -  -  MG_Data_frame_table:
    2 D1:C877 23 CD D1 -  	.dl MG_Data_0
    3 D1:C87A EF CC D1 -  	.dl MG_Data_1
    4 D1:C87D C7 CC D1 -  	.dl MG_Data_2
    5 D1:C880 97 CC D1 -  	.dl MG_Data_3
    6 D1:C883 5B CC D1 -  	.dl MG_Data_4
    7 D1:C886 2B CC D1 -  	.dl MG_Data_5
    8 D1:C889 FB CB D1 -  	.dl MG_Data_6
    9 D1:C88C CF CB D1 -  	.dl MG_Data_7
   10 D1:C88F 97 CB D1 -  	.dl MG_Data_8
   11 D1:C892 73 CB D1 -  	.dl MG_Data_9
   12 D1:C895 47 CB D1 -  	.dl MG_Data_10
   13 D1:C898 0F CB D1 -  	.dl MG_Data_11
   14 D1:C89B AF CA D1 -  	.dl MG_Data_12
   15 D1:C89E 4B CA D1 -  	.dl MG_Data_13
   16 D1:C8A1 EF C9 D1 -  	.dl MG_Data_14
   17 D1:C8A4 93 C9 D1 -  	.dl MG_Data_15
   18 D1:C8A7 37 C9 D1 -  	.dl MG_Data_16
   19 D1:C8AA 0B C9 D1 -  	.dl MG_Data_17
   20 D1:C8AD DF C8 D1 -  	.dl MG_Data_18
   21 D1:C8B0 B3 C8 D1 -  	.dl MG_Data_19
   22 D1:C8B3 -  -  -  -  
   23 D1:C8B3 -  -  -  -  
   24 D1:C8B3 -  -  -  -  
   25 D1:C8B3 -  -  -  -  MG_Data_19:
   26 D1:C8B3 50 D3 D1 -  	.dl Sprite_Table_0
   27 D1:C8B6 0A -  -  -  	.db 10
   28 D1:C8B7 9C 0E 5E 0A 	.db 156, 14, 94, 10
   29 D1:C8BB 0C 0E 2A 0B 	.db 12, 14, 42, 11
   30 D1:C8BF 45 0E 82 0A 	.db 69, 14, 130, 10
   31 D1:C8C3 72 0E 26 0A 	.db 114, 14, 38, 10
   32 D1:C8C7 0C 0E 57 0B 	.db 12, 14, 87, 11
   33 D1:C8CB 43 2F 3F 08 	.db 67, 47, 63, 8
   34 D1:C8CF 63 2D 1A 01 	.db 99, 45, 26, 1
   35 D1:C8D3 63 2D 79 02 	.db 99, 45, 121, 2
   36 D1:C8D7 28 17 6C 0E 	.db 40, 23, 108, 14
   37 D1:C8DB 90 17 36 0E 	.db 144, 23, 54, 14
   38 D1:C8DF -  -  -  -  
   39 D1:C8DF -  -  -  -  MG_Data_18:
   40 D1:C8DF 50 D3 D1 -  	.dl Sprite_Table_0
   41 D1:C8E2 0A -  -  -  	.db 10
   42 D1:C8E3 02 0E 75 0A 	.db 2, 14, 117, 10
   43 D1:C8E7 89 0E 35 0A 	.db 137, 14, 53, 10
   44 D1:C8EB FE 0E 19 0B 	.db 254, 14, 25, 11
   45 D1:C8EF 8D 0E 6F 0A 	.db 141, 14, 111, 10
   46 D1:C8F3 2E 0E 3D 0B 	.db 46, 14, 61, 11
   47 D1:C8F7 03 2D 1F 02 	.db 3, 45, 31, 2
   48 D1:C8FB BC 2D 67 02 	.db 188, 45, 103, 2
   49 D1:C8FF AE 2D 2A 02 	.db 174, 45, 42, 2
   50 D1:C903 39 2D 5D 03 	.db 57, 45, 93, 3
   51 D1:C907 4F 17 3F 0E 	.db 79, 23, 63, 14
   52 D1:C90B -  -  -  -  
   53 D1:C90B -  -  -  -  MG_Data_17:
   54 D1:C90B 50 D3 D1 -  	.dl Sprite_Table_0
   55 D1:C90E 0A -  -  -  	.db 10
   56 D1:C90F 9F 0E 51 0A 	.db 159, 14, 81, 10
   57 D1:C913 76 0E 2C 0B 	.db 118, 14, 44, 11
   58 D1:C917 E7 0E 28 0B 	.db 231, 14, 40, 11
   59 D1:C91B 6B 0E 64 0A 	.db 107, 14, 100, 10
   60 D1:C91F CD 2F 78 09 	.db 205, 47, 120, 9
   61 D1:C923 21 2D 74 01 	.db 33, 45, 116, 1
   62 D1:C927 8D 2D 30 03 	.db 141, 45, 48, 3
   63 D1:C92B 5C 17 75 0E 	.db 92, 23, 117, 14
   64 D1:C92F C7 17 40 0D 	.db 199, 23, 64, 13
   65 D1:C933 13 17 3E 0D 	.db 19, 23, 62, 13
   66 D1:C937 -  -  -  -  
   67 D1:C937 -  -  -  -  MG_Data_16:
   68 D1:C937 50 D3 D1 -  	.dl Sprite_Table_0
   69 D1:C93A 16 -  -  -  	.db 22
   70 D1:C93B 52 0E 1B 0A 	.db 82, 14, 27, 10
   71 D1:C93F 7E 2D 42 03 	.db 126, 45, 66, 3
   72 D1:C943 5B 2D 16 02 	.db 91, 45, 22, 2
   73 D1:C947 D1 2F 7A 08 	.db 209, 47, 122, 8
   74 D1:C94B DF 0E 42 0A 	.db 223, 14, 66, 10
   75 D1:C94F 58 0E 5E 0A 	.db 88, 14, 94, 10
   76 D1:C953 A4 0E 64 0A 	.db 164, 14, 100, 10
   77 D1:C957 A8 0E 22 0A 	.db 168, 14, 34, 10
   78 D1:C95B E4 17 38 0C 	.db 228, 23, 56, 12
   79 D1:C95F 7C 17 6E 0C 	.db 124, 23, 110, 12
   80 D1:C963 02 2D 2C 01 	.db 2, 45, 44, 1
   81 D1:C967 B7 2D 7B 01 	.db 183, 45, 123, 1
   82 D1:C96B B7 2D 1D 02 	.db 183, 45, 29, 2
   83 D1:C96F 10 2D 69 01 	.db 16, 45, 105, 1
   84 D1:C973 97 2F 42 09 	.db 151, 47, 66, 9
   85 D1:C977 60 0E 59 0A 	.db 96, 14, 89, 10
   86 D1:C97B C6 0E 29 0B 	.db 198, 14, 41, 11
   87 D1:C97F 99 0E 85 0B 	.db 153, 14, 133, 11
   88 D1:C983 60 0E 2C 0A 	.db 96, 14, 44, 10
   89 D1:C987 F0 0E 61 0B 	.db 240, 14, 97, 11
   90 D1:C98B D9 17 36 0E 	.db 217, 23, 54, 14
   91 D1:C98F 29 17 64 0F 	.db 41, 23, 100, 15
   92 D1:C993 -  -  -  -  
   93 D1:C993 -  -  -  -  MG_Data_15:
   94 D1:C993 50 D3 D1 -  	.dl Sprite_Table_0
   95 D1:C996 16 -  -  -  	.db 22
   96 D1:C997 56 0E 78 0B 	.db 86, 14, 120, 11
   97 D1:C99B 39 2D 15 03 	.db 57, 45, 21, 3
   98 D1:C99F C6 2D 57 01 	.db 198, 45, 87, 1
   99 D1:C9A3 CB 2F 27 08 	.db 203, 47, 39, 8
  100 D1:C9A7 A0 2F 72 08 	.db 160, 47, 114, 8
  101 D1:C9AB 94 0E 8A 0B 	.db 148, 14, 138, 11
  102 D1:C9AF 64 0E 6F 0A 	.db 100, 14, 111, 10
  103 D1:C9B3 F3 0E 2E 0B 	.db 243, 14, 46, 11
  104 D1:C9B7 F3 0E 6A 0B 	.db 243, 14, 106, 11
  105 D1:C9BB 82 0E 53 0A 	.db 130, 14, 83, 10
  106 D1:C9BF 55 0E 20 0A 	.db 85, 14, 32, 10
  107 D1:C9C3 1B 17 42 0F 	.db 27, 23, 66, 15
  108 D1:C9C7 A3 17 41 0C 	.db 163, 23, 65, 12
  109 D1:C9CB 8D 2D 60 06 	.db 141, 45, 96, 6
  110 D1:C9CF 57 2D 21 01 	.db 87, 45, 33, 1
  111 D1:C9D3 21 2F 7A 08 	.db 33, 47, 122, 8
  112 D1:C9D7 82 0E 3F 0A 	.db 130, 14, 63, 10
  113 D1:C9DB 3B 0E 2A 0A 	.db 59, 14, 42, 10
  114 D1:C9DF E1 0E 72 0B 	.db 225, 14, 114, 11
  115 D1:C9E3 DD 0E 38 0B 	.db 221, 14, 56, 11
  116 D1:C9E7 5E 17 36 0E 	.db 94, 23, 54, 14
  117 D1:C9EB EE 17 82 0C 	.db 238, 23, 130, 12
  118 D1:C9EF -  -  -  -  
  119 D1:C9EF -  -  -  -  MG_Data_14:
  120 D1:C9EF 50 D3 D1 -  	.dl Sprite_Table_0
  121 D1:C9F2 16 -  -  -  	.db 22
  122 D1:C9F3 F3 0E 54 0B 	.db 243, 14, 84, 11
  123 D1:C9F7 BB 2D 7B 06 	.db 187, 45, 123, 6
  124 D1:C9FB FF 2D 3C 01 	.db 255, 45, 60, 1
  125 D1:C9FF 78 2D 60 01 	.db 120, 45, 96, 1
  126 D1:CA03 5A 2F 2A 08 	.db 90, 47, 42, 8
  127 D1:CA07 C9 0E 1B 0B 	.db 201, 14, 27, 11
  128 D1:CA0B 89 0E 62 0A 	.db 137, 14, 98, 10
  129 D1:CA0F 8A 0E 1E 0A 	.db 138, 14, 30, 10
  130 D1:CA13 BB 0E 8A 0B 	.db 187, 14, 138, 11
  131 D1:CA17 CE 0E 4C 0B 	.db 206, 14, 76, 11
  132 D1:CA1B 3B 0E 60 0A 	.db 59, 14, 96, 10
  133 D1:CA1F 67 17 40 0F 	.db 103, 23, 64, 15
  134 D1:CA23 B0 17 77 0C 	.db 176, 23, 119, 12
  135 D1:CA27 2D 17 38 0C 	.db 45, 23, 56, 12
  136 D1:CA2B E1 2D 33 06 	.db 225, 45, 51, 6
  137 D1:CA2F 75 2D 77 02 	.db 117, 45, 119, 2
  138 D1:CA33 25 2F 7D 09 	.db 37, 47, 125, 9
  139 D1:CA37 33 0E 45 0B 	.db 51, 14, 69, 11
  140 D1:CA3B BF 0E 67 0B 	.db 191, 14, 103, 11
  141 D1:CA3F CA 0E 2E 0A 	.db 202, 14, 46, 10
  142 D1:CA43 97 17 23 0C 	.db 151, 23, 35, 12
  143 D1:CA47 F2 17 65 0E 	.db 242, 23, 101, 14
  144 D1:CA4B -  -  -  -  
  145 D1:CA4B -  -  -  -  MG_Data_13:
  146 D1:CA4B 50 D3 D1 -  	.dl Sprite_Table_0
  147 D1:CA4E 18 -  -  -  	.db 24
  148 D1:CA4F 47 0E 6C 0A 	.db 71, 14, 108, 10
  149 D1:CA53 01 17 5A 0E 	.db 1, 23, 90, 14
  150 D1:CA57 1C 2D 1A 06 	.db 28, 45, 26, 6
  151 D1:CA5B D5 2D 4B 03 	.db 213, 45, 75, 3
  152 D1:CA5F E3 2D 1F 02 	.db 227, 45, 31, 2
  153 D1:CA63 01 2D 7B 01 	.db 1, 45, 123, 1
  154 D1:CA67 7E 0E 4D 0A 	.db 126, 14, 77, 10
  155 D1:CA6B 7E 0E 2F 0A 	.db 126, 14, 47, 10
  156 D1:CA6F 6B 0E 73 0A 	.db 107, 14, 115, 10
  157 D1:CA73 C9 0E 6F 0A 	.db 201, 14, 111, 10
  158 D1:CA77 D5 0E 48 0B 	.db 213, 14, 72, 11
  159 D1:CA7B D2 0E 2C 0B 	.db 210, 14, 44, 11
  160 D1:CA7F 7D 17 67 0D 	.db 125, 23, 103, 13
  161 D1:CA83 42 17 85 0E 	.db 66, 23, 133, 14
  162 D1:CA87 D2 2D 45 06 	.db 210, 45, 69, 6
  163 D1:CA8B AF 2D 18 01 	.db 175, 45, 24, 1
  164 D1:CA8F 1A 2D 5A 02 	.db 26, 45, 90, 2
  165 D1:CA93 1F 2F 2A 09 	.db 31, 47, 42, 9
  166 D1:CA97 AC 0E 61 0B 	.db 172, 14, 97, 11
  167 D1:CA9B 47 0E 30 0A 	.db 71, 14, 48, 10
  168 D1:CA9F F8 0E 67 0B 	.db 248, 14, 103, 11
  169 D1:CAA3 FC 0E 25 0B 	.db 252, 14, 37, 11
  170 D1:CAA7 B6 17 79 0C 	.db 182, 23, 121, 12
  171 D1:CAAB FE 17 29 0F 	.db 254, 23, 41, 15
  172 D1:CAAF -  -  -  -  
  173 D1:CAAF -  -  -  -  MG_Data_12:
  174 D1:CAAF 50 D3 D1 -  	.dl Sprite_Table_0
  175 D1:CAB2 17 -  -  -  	.db 23
  176 D1:CAB3 22 0E 4E 0A 	.db 34, 14, 78, 10
  177 D1:CAB7 63 2D 5D 03 	.db 99, 45, 93, 3
  178 D1:CABB D3 2F 22 08 	.db 211, 47, 34, 8
  179 D1:CABF AF 0E 55 0B 	.db 175, 14, 85, 11
  180 D1:CAC3 94 0E 84 0B 	.db 148, 14, 132, 11
  181 D1:CAC7 76 0E 2D 0A 	.db 118, 14, 45, 10
  182 D1:CACB EB 0E 73 0A 	.db 235, 14, 115, 10
  183 D1:CACF F4 0E 3B 0B 	.db 244, 14, 59, 11
  184 D1:CAD3 74 0E 59 0B 	.db 116, 14, 89, 11
  185 D1:CAD7 B2 17 38 0C 	.db 178, 23, 56, 12
  186 D1:CADB 3B 17 3F 0E 	.db 59, 23, 63, 14
  187 D1:CADF 46 17 67 0C 	.db 70, 23, 103, 12
  188 D1:CAE3 0F 2D 7D 03 	.db 15, 45, 125, 3
  189 D1:CAE7 53 2D 3F 02 	.db 83, 45, 63, 2
  190 D1:CAEB F4 2F 75 09 	.db 244, 47, 117, 9
  191 D1:CAEF E8 0E 8C 0A 	.db 232, 14, 140, 10
  192 D1:CAF3 1D 0E 1D 0A 	.db 29, 14, 29, 10
  193 D1:CAF7 0F 0E 8C 0A 	.db 15, 14, 140, 10
  194 D1:CAFB B8 0E 72 0B 	.db 184, 14, 114, 11
  195 D1:CAFF D6 0E 56 0B 	.db 214, 14, 86, 11
  196 D1:CB03 A9 0E 23 0B 	.db 169, 14, 35, 11
  197 D1:CB07 8D 2D 18 06 	.db 141, 45, 24, 6
  198 D1:CB0B 3B 17 17 0F 	.db 59, 23, 23, 15
  199 D1:CB0F -  -  -  -  
  200 D1:CB0F -  -  -  -  MG_Data_11:
  201 D1:CB0F 50 D3 D1 -  	.dl Sprite_Table_0
  202 D1:CB12 0D -  -  -  	.db 13
  203 D1:CB13 26 0E 2E 0A 	.db 38, 14, 46, 10
  204 D1:CB17 8F 0E 63 0B 	.db 143, 14, 99, 11
  205 D1:CB1B DE 0E 21 0B 	.db 222, 14, 33, 11
  206 D1:CB1F 29 0E 4A 0A 	.db 41, 14, 74, 10
  207 D1:CB23 1D 0E 72 0B 	.db 29, 14, 114, 11
  208 D1:CB27 DD 0E 65 0B 	.db 221, 14, 101, 11
  209 D1:CB2B AE 2F 2D 09 	.db 174, 47, 45, 9
  210 D1:CB2F 37 2D 21 01 	.db 55, 45, 33, 1
  211 D1:CB33 CC 2D 63 02 	.db 204, 45, 99, 2
  212 D1:CB37 29 2D 4E 06 	.db 41, 45, 78, 6
  213 D1:CB3B 0A 17 7C 0E 	.db 10, 23, 124, 14
  214 D1:CB3F EB 17 26 0E 	.db 235, 23, 38, 14
  215 D1:CB43 52 17 2C 0D 	.db 82, 23, 44, 13
  216 D1:CB47 -  -  -  -  
  217 D1:CB47 -  -  -  -  MG_Data_10:
  218 D1:CB47 50 D3 D1 -  	.dl Sprite_Table_0
  219 D1:CB4A 0A -  -  -  	.db 10
  220 D1:CB4B 48 0E 3D 0A 	.db 72, 14, 61, 10
  221 D1:CB4F BF 0E 76 0B 	.db 191, 14, 118, 11
  222 D1:CB53 D2 0E 32 0B 	.db 210, 14, 50, 11
  223 D1:CB57 3F 0E 76 0B 	.db 63, 14, 118, 11
  224 D1:CB5B 03 0E 57 0A 	.db 3, 14, 87, 10
  225 D1:CB5F D2 0E 50 0B 	.db 210, 14, 80, 11
  226 D1:CB63 27 2F 25 09 	.db 39, 47, 37, 9
  227 D1:CB67 55 2D 7E 02 	.db 85, 45, 126, 2
  228 D1:CB6B 70 2D 1C 03 	.db 112, 45, 28, 3
  229 D1:CB6F 55 17 5C 0C 	.db 85, 23, 92, 12
  230 D1:CB73 -  -  -  -  
  231 D1:CB73 -  -  -  -  MG_Data_9:
  232 D1:CB73 50 D3 D1 -  	.dl Sprite_Table_0
  233 D1:CB76 08 -  -  -  	.db 8
  234 D1:CB77 24 0E 59 0B 	.db 36, 14, 89, 11
  235 D1:CB7B 18 17 30 0C 	.db 24, 23, 48, 12
  236 D1:CB7F C8 0E 5B 0A 	.db 200, 14, 91, 10
  237 D1:CB83 CA 0E 30 0B 	.db 202, 14, 48, 11
  238 D1:CB87 E8 0E 86 0A 	.db 232, 14, 134, 10
  239 D1:CB8B B7 2D 60 06 	.db 183, 45, 96, 6
  240 D1:CB8F 8F 17 41 0C 	.db 143, 23, 65, 12
  241 D1:CB93 8F 17 1A 0D 	.db 143, 23, 26, 13
  242 D1:CB97 -  -  -  -  
  243 D1:CB97 -  -  -  -  MG_Data_8:
  244 D1:CB97 50 D3 D1 -  	.dl Sprite_Table_0
  245 D1:CB9A 0D -  -  -  	.db 13
  246 D1:CB9B 11 0E 30 0B 	.db 17, 14, 48, 11
  247 D1:CB9F 86 0E 13 0A 	.db 134, 14, 19, 10
  248 D1:CBA3 15 0E 6A 0B 	.db 21, 14, 106, 11
  249 D1:CBA7 94 0E 24 0A 	.db 148, 14, 36, 10
  250 D1:CBAB CD 0E 7D 0B 	.db 205, 14, 125, 11
  251 D1:CBAF FA 0E 21 0B 	.db 250, 14, 33, 11
  252 D1:CBB3 94 0E 51 0A 	.db 148, 14, 81, 10
  253 D1:CBB7 CB 2F 3A 09 	.db 203, 47, 58, 9
  254 D1:CBBB 44 2D 61 01 	.db 68, 45, 97, 1
  255 D1:CBBF EB 2D 15 02 	.db 235, 45, 21, 2
  256 D1:CBC3 EB 2D 73 01 	.db 235, 45, 115, 1
  257 D1:CBC7 36 2D 24 01 	.db 54, 45, 36, 1
  258 D1:CBCB B0 17 66 0C 	.db 176, 23, 102, 12
  259 D1:CBCF -  -  -  -  
  260 D1:CBCF -  -  -  -  MG_Data_7:
  261 D1:CBCF 50 D3 D1 -  	.dl Sprite_Table_0
  262 D1:CBD2 0A -  -  -  	.db 10
  263 D1:CBD3 27 0E 4C 0B 	.db 39, 14, 76, 11
  264 D1:CBD7 8A 0E 70 0B 	.db 138, 14, 112, 11
  265 D1:CBDB 6F 0E 22 0A 	.db 111, 14, 34, 10
  266 D1:CBDF B6 0E 37 0A 	.db 182, 14, 55, 10
  267 D1:CBE3 55 2F 72 08 	.db 85, 47, 114, 8
  268 D1:CBE7 8B 2D 19 01 	.db 139, 45, 25, 1
  269 D1:CBEB C1 2D 58 06 	.db 193, 45, 88, 6
  270 D1:CBEF 15 2D 2B 06 	.db 21, 45, 43, 6
  271 D1:CBF3 D7 17 39 0C 	.db 215, 23, 57, 12
  272 D1:CBF7 4F 17 3A 0F 	.db 79, 23, 58, 15
  273 D1:CBFB -  -  -  -  
  274 D1:CBFB -  -  -  -  MG_Data_6:
  275 D1:CBFB 50 D3 D1 -  	.dl Sprite_Table_0
  276 D1:CBFE 0B -  -  -  	.db 11
  277 D1:CBFF 30 0E 1D 0B 	.db 48, 14, 29, 11
  278 D1:CC03 FE 0E 26 0A 	.db 254, 14, 38, 10
  279 D1:CC07 F3 0E 5F 0B 	.db 243, 14, 95, 11
  280 D1:CC0B 2C 0E 5F 0B 	.db 44, 14, 95, 11
  281 D1:CC0F 67 0E 3D 0B 	.db 103, 14, 61, 11
  282 D1:CC13 59 2F 75 09 	.db 89, 47, 117, 9
  283 D1:CC17 A9 2D 6F 02 	.db 169, 45, 111, 2
  284 D1:CC1B 06 2D 3D 06 	.db 6, 45, 61, 6
  285 D1:CC1F 61 17 30 0C 	.db 97, 23, 48, 12
  286 D1:CC23 E4 17 6F 0C 	.db 228, 23, 111, 12
  287 D1:CC27 9B 17 38 0F 	.db 155, 23, 56, 15
  288 D1:CC2B -  -  -  -  
  289 D1:CC2B -  -  -  -  MG_Data_5:
  290 D1:CC2B 50 D3 D1 -  	.dl Sprite_Table_0
  291 D1:CC2E 0B -  -  -  	.db 11
  292 D1:CC2F 0A 0E 4E 0B 	.db 10, 14, 78, 11
  293 D1:CC33 7B 0E 64 0A 	.db 123, 14, 100, 10
  294 D1:CC37 7B 0E 28 0A 	.db 123, 14, 40, 10
  295 D1:CC3B 1C 0E 84 0A 	.db 28, 14, 132, 10
  296 D1:CC3F E0 0E 59 0B 	.db 224, 14, 89, 11
  297 D1:CC43 28 2F 6D 09 	.db 40, 47, 109, 9
  298 D1:CC47 53 2F 22 09 	.db 83, 47, 34, 9
  299 D1:CC4B 4E 2D 52 02 	.db 78, 45, 82, 2
  300 D1:CC4F E3 2D 10 01 	.db 227, 45, 16, 1
  301 D1:CC53 76 17 7D 0E 	.db 118, 23, 125, 14
  302 D1:CC57 B1 17 5F 0D 	.db 177, 23, 95, 13
  303 D1:CC5B -  -  -  -  
  304 D1:CC5B -  -  -  -  MG_Data_4:
  305 D1:CC5B 50 D3 D1 -  	.dl Sprite_Table_0
  306 D1:CC5E 0E -  -  -  	.db 14
  307 D1:CC5F 56 0E 46 0A 	.db 86, 14, 70, 10
  308 D1:CC63 DD 0E 1B 0B 	.db 221, 14, 27, 11
  309 D1:CC67 EC 0E 6A 0B 	.db 236, 14, 106, 11
  310 D1:CC6B 43 0E 84 0A 	.db 67, 14, 132, 10
  311 D1:CC6F 12 0E 19 0B 	.db 18, 14, 25, 11
  312 D1:CC73 11 0E 5D 0B 	.db 17, 14, 93, 11
  313 D1:CC77 51 0E 15 0A 	.db 81, 14, 21, 10
  314 D1:CC7B 00 2D 5B 02 	.db 0, 45, 91, 2
  315 D1:CC7F 87 2D 37 02 	.db 135, 45, 55, 2
  316 D1:CC83 43 2D 75 03 	.db 67, 45, 117, 3
  317 D1:CC87 C1 2D 10 06 	.db 193, 45, 16, 6
  318 D1:CC8B 1F 17 1E 0E 	.db 31, 23, 30, 14
  319 D1:CC8F 7A 17 5F 0C 	.db 122, 23, 95, 12
  320 D1:CC93 E6 17 30 0C 	.db 230, 23, 48, 12
  321 D1:CC97 -  -  -  -  
  322 D1:CC97 -  -  -  -  MG_Data_3:
  323 D1:CC97 50 D3 D1 -  	.dl Sprite_Table_0
  324 D1:CC9A 0B -  -  -  	.db 11
  325 D1:CC9B 5A 0E 26 0A 	.db 90, 14, 38, 10
  326 D1:CC9F C3 0E 5B 0B 	.db 195, 14, 91, 11
  327 D1:CCA3 5D 0E 42 0A 	.db 93, 14, 66, 10
  328 D1:CCA7 51 0E 6A 0B 	.db 81, 14, 106, 11
  329 D1:CCAB 06 0E 2A 0B 	.db 6, 14, 42, 11
  330 D1:CCAF 06 0E 48 0B 	.db 6, 14, 72, 11
  331 D1:CCB3 E2 2F 25 09 	.db 226, 47, 37, 9
  332 D1:CCB7 6B 2D 19 01 	.db 107, 45, 25, 1
  333 D1:CCBB 5D 2D 46 06 	.db 93, 45, 70, 6
  334 D1:CCBF 3E 17 74 0E 	.db 62, 23, 116, 14
  335 D1:CCC3 86 17 24 0D 	.db 134, 23, 36, 13
  336 D1:CCC7 -  -  -  -  
  337 D1:CCC7 -  -  -  -  MG_Data_2:
  338 D1:CCC7 50 D3 D1 -  	.dl Sprite_Table_0
  339 D1:CCCA 09 -  -  -  	.db 9
  340 D1:CCCB 7C 0E 35 0A 	.db 124, 14, 53, 10
  341 D1:CCCF F3 0E 6E 0B 	.db 243, 14, 110, 11
  342 D1:CCD3 73 0E 6E 0B 	.db 115, 14, 110, 11
  343 D1:CCD7 1C 0E 7E 0A 	.db 28, 14, 126, 10
  344 D1:CCDB 37 0E 4F 0A 	.db 55, 14, 79, 10
  345 D1:CCDF 5B 2F 1D 09 	.db 91, 47, 29, 9
  346 D1:CCE3 89 2D 76 02 	.db 137, 45, 118, 2
  347 D1:CCE7 A4 2D 14 03 	.db 164, 45, 20, 3
  348 D1:CCEB 89 17 54 0C 	.db 137, 23, 84, 12
  349 D1:CCEF -  -  -  -  
  350 D1:CCEF -  -  -  -  MG_Data_1:
  351 D1:CCEF 50 D3 D1 -  	.dl Sprite_Table_0
  352 D1:CCF2 0C -  -  -  	.db 12
  353 D1:CCF3 4F 0E 31 0A 	.db 79, 14, 49, 10
  354 D1:CCF7 FC 0E 53 0A 	.db 252, 14, 83, 10
  355 D1:CCFB FE 0E 28 0B 	.db 254, 14, 40, 11
  356 D1:CCFF 77 0E 6A 0B 	.db 119, 14, 106, 11
  357 D1:CD03 95 0E 20 0A 	.db 149, 14, 32, 10
  358 D1:CD07 3F 2F 52 08 	.db 63, 47, 82, 8
  359 D1:CD0B 7F 2D 3B 01 	.db 127, 45, 59, 1
  360 D1:CD0F EB 2D 58 06 	.db 235, 45, 88, 6
  361 D1:CD13 91 17 75 0D 	.db 145, 23, 117, 13
  362 D1:CD17 37 17 81 0C 	.db 55, 23, 129, 12
  363 D1:CD1B C3 17 39 0C 	.db 195, 23, 57, 12
  364 D1:CD1F C3 17 12 0D 	.db 195, 23, 18, 13
  365 D1:CD23 -  -  -  -  
  366 D1:CD23 -  -  -  -  MG_Data_0:
  367 D1:CD23 50 D3 D1 -  	.dl Sprite_Table_0
  368 D1:CD26 0A -  -  -  	.db 10
  369 D1:CD27 5E 0E 15 0A 	.db 94, 14, 21, 10
  370 D1:CD2B 80 0E 40 0A 	.db 128, 14, 64, 10
  371 D1:CD2F AF 0E 64 0A 	.db 175, 14, 100, 10
  372 D1:CD33 46 0E 75 0A 	.db 70, 14, 117, 10
  373 D1:CD37 37 0E 48 0B 	.db 55, 14, 72, 11
  374 D1:CD3B 95 0E 24 0A 	.db 149, 14, 36, 10
  375 D1:CD3F 9E 2D 6E 03 	.db 158, 45, 110, 3
  376 D1:CD43 F8 2D 13 02 	.db 248, 45, 19, 2
  377 D1:CD47 3A 17 22 0C 	.db 58, 23, 34, 12
  378 D1:CD4B D8 17 3F 0D 	.db 216, 23, 63, 13
  379 D1:CD4F -  -  -  -  
  380 D1:CD4F -  -  -  -  
  381 D1:CD4F -  -  -  -  
Listing for file "ascent.asm"
  251 D1:CD4F -  -  -  -  #include "BG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\BG_Data.txt"
    1 D1:CD4F -  -  -  -  BG_Data_frame_table:
    2 D1:CD4F 5A D0 D1 -  	.dl BG_Data_0
    3 D1:CD52 22 D0 D1 -  	.dl BG_Data_1
    4 D1:CD55 DA CF D1 -  	.dl BG_Data_2
    5 D1:CD58 8A CF D1 -  	.dl BG_Data_3
    6 D1:CD5B 3A CF D1 -  	.dl BG_Data_4
    7 D1:CD5E EA CE D1 -  	.dl BG_Data_5
    8 D1:CD61 9A CE D1 -  	.dl BG_Data_6
    9 D1:CD64 4A CE D1 -  	.dl BG_Data_7
   10 D1:CD67 F2 CD D1 -  	.dl BG_Data_8
   11 D1:CD6A 9A CD D1 -  	.dl BG_Data_9
   12 D1:CD6D 8E CD D1 -  	.dl BG_Data_10
   13 D1:CD70 86 CD D1 -  	.dl BG_Data_11
   14 D1:CD73 76 CD D1 -  	.dl BG_Data_12
   15 D1:CD76 -  -  -  -  
   16 D1:CD76 -  -  -  -  
   17 D1:CD76 -  -  -  -  
   18 D1:CD76 -  -  -  -  BG_Data_12:
   19 D1:CD76 80 D3 D1 -  	.dl Sprite_Table_1
   20 D1:CD79 03 -  -  -  	.db 3
   21 D1:CD7A D0 2D 2F 09 	.db 208, 45, 47, 9
   22 D1:CD7E 5E 2D 2F 09 	.db 94, 45, 47, 9
   23 D1:CD82 D0 2D 2F 09 	.db 208, 45, 47, 9
   24 D1:CD86 -  -  -  -  
   25 D1:CD86 -  -  -  -  BG_Data_11:
   26 D1:CD86 80 D3 D1 -  	.dl Sprite_Table_1
   27 D1:CD89 01 -  -  -  	.db 1
   28 D1:CD8A D3 2D 2F 09 	.db 211, 45, 47, 9
   29 D1:CD8E -  -  -  -  
   30 D1:CD8E -  -  -  -  BG_Data_10:
   31 D1:CD8E 80 D3 D1 -  	.dl Sprite_Table_1
   32 D1:CD91 02 -  -  -  	.db 2
   33 D1:CD92 6B 2D 2F 09 	.db 107, 45, 47, 9
   34 D1:CD96 FE 2D 2F 09 	.db 254, 45, 47, 9
   35 D1:CD9A -  -  -  -  
   36 D1:CD9A -  -  -  -  BG_Data_9:
   37 D1:CD9A 80 D3 D1 -  	.dl Sprite_Table_1
   38 D1:CD9D 15 -  -  -  	.db 21
   39 D1:CD9E 4A 2D 49 09 	.db 74, 45, 73, 9
   40 D1:CDA2 A3 0E 86 0C 	.db 163, 14, 134, 12
   41 D1:CDA6 C1 0E 88 0C 	.db 193, 14, 136, 12
   42 D1:CDAA C2 0E 92 0E 	.db 194, 14, 146, 14
   43 D1:CDAE D6 0E 93 0E 	.db 214, 14, 147, 14
   44 D1:CDB2 D8 0E 88 0C 	.db 216, 14, 136, 12
   45 D1:CDB6 ED 0E 89 0C 	.db 237, 14, 137, 12
   46 D1:CDBA F0 0E 93 0C 	.db 240, 14, 147, 12
   47 D1:CDBE 8C 0E 8E 0C 	.db 140, 14, 142, 12
   48 D1:CDC2 A6 0E 92 0E 	.db 166, 14, 146, 14
   49 D1:CDC6 43 2D 77 09 	.db 67, 45, 119, 9
   50 D1:CDCA 48 2D 55 00 	.db 72, 45, 85, 0
   51 D1:CDCE 56 2D 3C 09 	.db 86, 45, 60, 9
   52 D1:CDD2 52 2D 1F 09 	.db 82, 45, 31, 9
   53 D1:CDD6 54 2D 12 00 	.db 84, 45, 18, 0
   54 D1:CDDA 4A 2D 49 09 	.db 74, 45, 73, 9
   55 D1:CDDE 43 2D 80 00 	.db 67, 45, 128, 0
   56 D1:CDE2 23 1F 25 06 	.db 35, 31, 37, 6
   57 D1:CDE6 12 1F 22 04 	.db 18, 31, 34, 4
   58 D1:CDEA 49 2D 66 00 	.db 73, 45, 102, 0
   59 D1:CDEE 8C 0E 8E 0C 	.db 140, 14, 142, 12
   60 D1:CDF2 -  -  -  -  
   61 D1:CDF2 -  -  -  -  BG_Data_8:
   62 D1:CDF2 80 D3 D1 -  	.dl Sprite_Table_1
   63 D1:CDF5 15 -  -  -  	.db 21
   64 D1:CDF6 34 2D 38 01 	.db 52, 45, 56, 1
   65 D1:CDFA CD 0E 8A 0E 	.db 205, 14, 138, 14
   66 D1:CDFE D1 0E 93 0C 	.db 209, 14, 147, 12
   67 D1:CE02 E4 0E 94 0C 	.db 228, 14, 148, 12
   68 D1:CE06 E2 0E 89 0C 	.db 226, 14, 137, 12
   69 D1:CE0A F9 0E 8A 0E 	.db 249, 14, 138, 14
   70 D1:CE0E FA 0E 93 0C 	.db 250, 14, 147, 12
   71 D1:CE12 02 1F 44 07 	.db 2, 31, 68, 7
   72 D1:CE16 6F 1F 3A 0D 	.db 111, 31, 58, 13
   73 D1:CE1A BB 0E 8A 0E 	.db 187, 14, 138, 14
   74 D1:CE1E D3 1F 6D 06 	.db 211, 31, 109, 6
   75 D1:CE22 0F 1F 13 06 	.db 15, 31, 19, 6
   76 D1:CE26 2A 1F 18 03 	.db 42, 31, 24, 3
   77 D1:CE2A 8D 1F 57 04 	.db 141, 31, 87, 4
   78 D1:CE2E 08 1F 7F 04 	.db 8, 31, 127, 4
   79 D1:CE32 AE 2D 1F 00 	.db 174, 45, 31, 0
   80 D1:CE36 2D 2D 5C 09 	.db 45, 45, 92, 9
   81 D1:CE3A FA 2D 6C 02 	.db 250, 45, 108, 2
   82 D1:CE3E FA 2D 3E 02 	.db 250, 45, 62, 2
   83 D1:CE42 19 1F 87 0D 	.db 25, 31, 135, 13
   84 D1:CE46 B6 0E 93 0E 	.db 182, 14, 147, 14
   85 D1:CE4A -  -  -  -  
   86 D1:CE4A -  -  -  -  BG_Data_7:
   87 D1:CE4A 80 D3 D1 -  	.dl Sprite_Table_1
   88 D1:CE4D 13 -  -  -  	.db 19
   89 D1:CE4E 08 2D 55 02 	.db 8, 45, 85, 2
   90 D1:CE52 D5 0E 95 0C 	.db 213, 14, 149, 12
   91 D1:CE56 E5 0E 95 0C 	.db 229, 14, 149, 12
   92 D1:CE5A E6 0E 8C 0C 	.db 230, 14, 140, 12
   93 D1:CE5E FA 0E 8F 0E 	.db 250, 14, 143, 14
   94 D1:CE62 F9 0E 96 0C 	.db 249, 14, 150, 12
   95 D1:CE66 A8 1F 14 07 	.db 168, 31, 20, 7
   96 D1:CE6A AF 1F 4D 06 	.db 175, 31, 77, 6
   97 D1:CE6E D0 0E 8A 0C 	.db 208, 14, 138, 12
   98 D1:CE72 3E 1F 2B 06 	.db 62, 31, 43, 6
   99 D1:CE76 0D 1F 88 03 	.db 13, 31, 136, 3
  100 D1:CE7A 4A 1F 38 03 	.db 74, 31, 56, 3
  101 D1:CE7E 2C 1F 62 03 	.db 44, 31, 98, 3
  102 D1:CE82 37 1F 0F 04 	.db 55, 31, 15, 4
  103 D1:CE86 A8 2D 4B 09 	.db 168, 45, 75, 9
  104 D1:CE8A D5 2D 7F 02 	.db 213, 45, 127, 2
  105 D1:CE8E CA 2D 23 01 	.db 202, 45, 35, 1
  106 D1:CE92 6D 1F 73 0F 	.db 109, 31, 115, 15
  107 D1:CE96 BB 0E 91 0E 	.db 187, 14, 145, 14
  108 D1:CE9A -  -  -  -  
  109 D1:CE9A -  -  -  -  BG_Data_6:
  110 D1:CE9A 80 D3 D1 -  	.dl Sprite_Table_1
  111 D1:CE9D 13 -  -  -  	.db 19
  112 D1:CE9E 0D 2D 22 02 	.db 13, 45, 34, 2
  113 D1:CEA2 E1 0E 93 0C 	.db 225, 14, 147, 12
  114 D1:CEA6 E0 0E 8B 0C 	.db 224, 14, 139, 12
  115 D1:CEAA F5 0E 8C 0E 	.db 245, 14, 140, 14
  116 D1:CEAE F8 0E 95 0C 	.db 248, 14, 149, 12
  117 D1:CEB2 8D 1F 2A 05 	.db 141, 31, 42, 5
  118 D1:CEB6 00 1F 77 05 	.db 0, 31, 119, 5
  119 D1:CEBA FB 1F 72 06 	.db 251, 31, 114, 6
  120 D1:CEBE CF 0E 92 0C 	.db 207, 14, 146, 12
  121 D1:CEC2 94 1F 54 0D 	.db 148, 31, 84, 13
  122 D1:CEC6 A2 1F 54 0A 	.db 162, 31, 84, 10
  123 D1:CECA 40 1F 24 04 	.db 64, 31, 36, 4
  124 D1:CECE 1A 1F 79 03 	.db 26, 31, 121, 3
  125 D1:CED2 80 2D 32 00 	.db 128, 45, 50, 0
  126 D1:CED6 9E 2D 80 09 	.db 158, 45, 128, 9
  127 D1:CEDA F1 2D 18 01 	.db 241, 45, 24, 1
  128 D1:CEDE 2B 2D 4F 01 	.db 43, 45, 79, 1
  129 D1:CEE2 88 1F 0F 0A 	.db 136, 31, 15, 10
  130 D1:CEE6 CD 0E 8A 0C 	.db 205, 14, 138, 12
  131 D1:CEEA -  -  -  -  
  132 D1:CEEA -  -  -  -  BG_Data_5:
  133 D1:CEEA 80 D3 D1 -  	.dl Sprite_Table_1
  134 D1:CEED 13 -  -  -  	.db 19
  135 D1:CEEE 1E 2D 46 02 	.db 30, 45, 70, 2
  136 D1:CEF2 D6 0E 8B 0E 	.db 214, 14, 139, 14
  137 D1:CEF6 ED 0E 8B 0C 	.db 237, 14, 139, 12
  138 D1:CEFA F1 0E 96 0C 	.db 241, 14, 150, 12
  139 D1:CEFE 59 2F 42 0B 	.db 89, 47, 66, 11
  140 D1:CF02 BD 2F 40 08 	.db 189, 47, 64, 8
  141 D1:CF06 5F 1F 25 05 	.db 95, 31, 37, 5
  142 D1:CF0A 19 1F 6A 05 	.db 25, 31, 106, 5
  143 D1:CF0E D7 0E 95 0E 	.db 215, 14, 149, 14
  144 D1:CF12 E7 1F 32 0D 	.db 231, 31, 50, 13
  145 D1:CF16 DE 1F 67 0A 	.db 222, 31, 103, 10
  146 D1:CF1A 90 1F 1F 04 	.db 144, 31, 31, 4
  147 D1:CF1E 5C 1F 18 03 	.db 92, 31, 24, 3
  148 D1:CF22 9C 2D 5A 00 	.db 156, 45, 90, 0
  149 D1:CF26 07 2D 0C 00 	.db 7, 45, 12, 0
  150 D1:CF2A 94 2D 34 09 	.db 148, 45, 52, 9
  151 D1:CF2E 47 2D 75 01 	.db 71, 45, 117, 1
  152 D1:CF32 97 1F 64 0D 	.db 151, 31, 100, 13
  153 D1:CF36 BC 0E 8F 0E 	.db 188, 14, 143, 14
  154 D1:CF3A -  -  -  -  
  155 D1:CF3A -  -  -  -  BG_Data_4:
  156 D1:CF3A 80 D3 D1 -  	.dl Sprite_Table_1
  157 D1:CF3D 13 -  -  -  	.db 19
  158 D1:CF3E 17 2D 4D 01 	.db 23, 45, 77, 1
  159 D1:CF42 FB 0E 8A 0C 	.db 251, 14, 138, 12
  160 D1:CF46 FA 0E 95 0E 	.db 250, 14, 149, 14
  161 D1:CF4A D9 2F 77 0B 	.db 217, 47, 119, 11
  162 D1:CF4E 48 1F 2C 07 	.db 72, 31, 44, 7
  163 D1:CF52 D3 1F 2D 06 	.db 211, 31, 45, 6
  164 D1:CF56 45 1F 5C 0D 	.db 69, 31, 92, 13
  165 D1:CF5A CD 1F 54 0F 	.db 205, 31, 84, 15
  166 D1:CF5E E3 0E 8A 0E 	.db 227, 14, 138, 14
  167 D1:CF62 0C 1F 07 0A 	.db 12, 31, 7, 10
  168 D1:CF66 8F 1F 74 0A 	.db 143, 31, 116, 10
  169 D1:CF6A 0E 1F 86 03 	.db 14, 31, 134, 3
  170 D1:CF6E C3 1F 3B 04 	.db 195, 31, 59, 4
  171 D1:CF72 C9 1F 7F 04 	.db 201, 31, 127, 4
  172 D1:CF76 8B 1F 4C 04 	.db 139, 31, 76, 4
  173 D1:CF7A 5D 2D 64 09 	.db 93, 45, 100, 9
  174 D1:CF7E 67 2D 20 02 	.db 103, 45, 32, 2
  175 D1:CF82 A2 1F 09 0F 	.db 162, 31, 9, 15
  176 D1:CF86 E6 0E 93 0C 	.db 230, 14, 147, 12
  177 D1:CF8A -  -  -  -  
  178 D1:CF8A -  -  -  -  BG_Data_3:
  179 D1:CF8A 80 D3 D1 -  	.dl Sprite_Table_1
  180 D1:CF8D 13 -  -  -  	.db 19
  181 D1:CF8E 37 2D 42 02 	.db 55, 45, 66, 2
  182 D1:CF92 F9 0E 95 0E 	.db 249, 14, 149, 14
  183 D1:CF96 E5 2F 37 0B 	.db 229, 47, 55, 11
  184 D1:CF9A 41 2F 43 08 	.db 65, 47, 67, 8
  185 D1:CF9E 6E 1F 14 07 	.db 110, 31, 20, 7
  186 D1:CFA2 17 1F 22 05 	.db 23, 31, 34, 5
  187 D1:CFA6 47 1F 72 05 	.db 71, 31, 114, 5
  188 D1:CFAA DB 1F 7E 07 	.db 219, 31, 126, 7
  189 D1:CFAE F9 0E 8B 0E 	.db 249, 14, 139, 14
  190 D1:CFB2 F5 1F 1D 06 	.db 245, 31, 29, 6
  191 D1:CFB6 2D 1F 16 0F 	.db 45, 31, 22, 15
  192 D1:CFBA 7C 1F 7B 0F 	.db 124, 31, 123, 15
  193 D1:CFBE AF 1F 6E 04 	.db 175, 31, 110, 4
  194 D1:CFC2 8C 2D 51 09 	.db 140, 45, 81, 9
  195 D1:CFC6 D4 2D 1A 09 	.db 212, 45, 26, 9
  196 D1:CFCA 87 2D 29 01 	.db 135, 45, 41, 1
  197 D1:CFCE 56 2D 66 01 	.db 86, 45, 102, 1
  198 D1:CFD2 82 1F 59 0D 	.db 130, 31, 89, 13
  199 D1:CFD6 F9 0E 7F 0E 	.db 249, 14, 127, 14
  200 D1:CFDA -  -  -  -  
  201 D1:CFDA -  -  -  -  BG_Data_2:
  202 D1:CFDA 80 D3 D1 -  	.dl Sprite_Table_1
  203 D1:CFDD 11 -  -  -  	.db 17
  204 D1:CFDE 7D 2D 20 02 	.db 125, 45, 32, 2
  205 D1:CFE2 9D 2F 7D 08 	.db 157, 47, 125, 8
  206 D1:CFE6 91 2F 40 08 	.db 145, 47, 64, 8
  207 D1:CFEA 56 1F 67 05 	.db 86, 31, 103, 5
  208 D1:CFEE 80 1F 1C 05 	.db 128, 31, 28, 5
  209 D1:CFF2 F1 1F 6C 0D 	.db 241, 31, 108, 13
  210 D1:CFF6 2D 1F 37 0D 	.db 45, 31, 55, 13
  211 D1:CFFA FB 0E 95 0C 	.db 251, 14, 149, 12
  212 D1:CFFE 34 1F 19 0A 	.db 52, 31, 25, 10
  213 D1:D002 CF 1F 3B 04 	.db 207, 31, 59, 4
  214 D1:D006 11 1F 59 04 	.db 17, 31, 89, 4
  215 D1:D00A 04 2D 23 00 	.db 4, 45, 35, 0
  216 D1:D00E E1 2D 14 09 	.db 225, 45, 20, 9
  217 D1:D012 AC 2D 67 00 	.db 172, 45, 103, 0
  218 D1:D016 72 2D 59 02 	.db 114, 45, 89, 2
  219 D1:D01A 2C 1F 82 0A 	.db 44, 31, 130, 10
  220 D1:D01E FB 0E 8B 0E 	.db 251, 14, 139, 14
  221 D1:D022 -  -  -  -  
  222 D1:D022 -  -  -  -  BG_Data_1:
  223 D1:D022 80 D3 D1 -  	.dl Sprite_Table_1
  224 D1:D025 0D -  -  -  	.db 13
  225 D1:D026 43 2D 1F 02 	.db 67, 45, 31, 2
  226 D1:D02A 61 2D 5C 02 	.db 97, 45, 92, 2
  227 D1:D02E 8A 2D 33 02 	.db 138, 45, 51, 2
  228 D1:D032 C7 2D 46 02 	.db 199, 45, 70, 2
  229 D1:D036 C0 2D 73 09 	.db 192, 45, 115, 9
  230 D1:D03A 6A 1F 79 0A 	.db 106, 31, 121, 10
  231 D1:D03E 90 1F 0B 06 	.db 144, 31, 11, 6
  232 D1:D042 93 1F 4E 07 	.db 147, 31, 78, 7
  233 D1:D046 1F 1F 76 07 	.db 31, 31, 118, 7
  234 D1:D04A 13 2F 34 0B 	.db 19, 47, 52, 11
  235 D1:D04E CD 2F 1F 0B 	.db 205, 47, 31, 11
  236 D1:D052 EA 2F 59 0B 	.db 234, 47, 89, 11
  237 D1:D056 F2 0E 94 0C 	.db 242, 14, 148, 12
  238 D1:D05A -  -  -  -  
  239 D1:D05A -  -  -  -  BG_Data_0:
  240 D1:D05A 80 D3 D1 -  	.dl Sprite_Table_1
  241 D1:D05D 0D -  -  -  	.db 13
  242 D1:D05E C9 2D 14 00 	.db 201, 45, 20, 0
  243 D1:D062 4C 2D 14 01 	.db 76, 45, 20, 1
  244 D1:D066 B5 2D 41 02 	.db 181, 45, 65, 2
  245 D1:D06A 7D 2D 73 00 	.db 125, 45, 115, 0
  246 D1:D06E 3E 1F 3C 03 	.db 62, 31, 60, 3
  247 D1:D072 E5 1F 5F 04 	.db 229, 31, 95, 4
  248 D1:D076 EC 1F 47 05 	.db 236, 31, 71, 5
  249 D1:D07A F6 1F 08 06 	.db 246, 31, 8, 6
  250 D1:D07E 3E 1F 67 05 	.db 62, 31, 103, 5
  251 D1:D082 A8 1F 71 05 	.db 168, 31, 113, 5
  252 D1:D086 62 1F 31 07 	.db 98, 31, 49, 7
  253 D1:D08A EC 1F 47 05 	.db 236, 31, 71, 5
  254 D1:D08E 79 2F 0D 08 	.db 121, 47, 13, 8
  255 D1:D092 -  -  -  -  
  256 D1:D092 -  -  -  -  
  257 D1:D092 -  -  -  -  
Listing for file "ascent.asm"
  252 D1:D092 -  -  -  -  #include "Palette_Setup.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\Palette_Setup.txt"
    1 D1:D092 -  -  -  -  setup_palette_1:
    2 D1:D092 21 00 02 E3 	ld hl,mpLcdPalette
    3 D1:D096 3E 80 -  -  	ld a,%10000000
    4 D1:D098 77 -  -  -  	ld (hl),a 
    5 D1:D099 23 -  -  -  	inc hl
    6 D1:D09A 3E 10 -  -  	ld a,%00010000
    7 D1:D09C 77 -  -  -  	ld (hl),a 
    8 D1:D09D 23 -  -  -  	inc hl
    9 D1:D09E 3E 61 -  -  	ld a,%01100001
   10 D1:D0A0 77 -  -  -  	ld (hl),a 
   11 D1:D0A1 23 -  -  -  	inc hl
   12 D1:D0A2 3E 4E -  -  	ld a,%01001110
   13 D1:D0A4 77 -  -  -  	ld (hl),a 
   14 D1:D0A5 23 -  -  -  	inc hl
   15 D1:D0A6 3E 65 -  -  	ld a,%01100101
   16 D1:D0A8 77 -  -  -  	ld (hl),a 
   17 D1:D0A9 23 -  -  -  	inc hl
   18 D1:D0AA 3E 6B -  -  	ld a,%01101011
   19 D1:D0AC 77 -  -  -  	ld (hl),a 
   20 D1:D0AD 23 -  -  -  	inc hl
   21 D1:D0AE 3E A0 -  -  	ld a,%10100000
   22 D1:D0B0 77 -  -  -  	ld (hl),a 
   23 D1:D0B1 23 -  -  -  	inc hl
   24 D1:D0B2 3E 5F -  -  	ld a,%01011111
   25 D1:D0B4 77 -  -  -  	ld (hl),a 
   26 D1:D0B5 23 -  -  -  	inc hl
   27 D1:D0B6 3E E0 -  -  	ld a,%11100000
   28 D1:D0B8 77 -  -  -  	ld (hl),a 
   29 D1:D0B9 23 -  -  -  	inc hl
   30 D1:D0BA 3E D3 -  -  	ld a,%11010011
   31 D1:D0BC 77 -  -  -  	ld (hl),a 
   32 D1:D0BD 23 -  -  -  	inc hl
   33 D1:D0BE 3E A2 -  -  	ld a,%10100010
   34 D1:D0C0 77 -  -  -  	ld (hl),a 
   35 D1:D0C1 23 -  -  -  	inc hl
   36 D1:D0C2 3E 12 -  -  	ld a,%00010010
   37 D1:D0C4 77 -  -  -  	ld (hl),a 
   38 D1:D0C5 23 -  -  -  	inc hl
   39 D1:D0C6 3E F9 -  -  	ld a,%11111001
   40 D1:D0C8 77 -  -  -  	ld (hl),a 
   41 D1:D0C9 23 -  -  -  	inc hl
   42 D1:D0CA 3E 0A -  -  	ld a,%00001010
   43 D1:D0CC 77 -  -  -  	ld (hl),a 
   44 D1:D0CD 23 -  -  -  	inc hl
   45 D1:D0CE 3E 1A -  -  	ld a,%00011010
   46 D1:D0D0 77 -  -  -  	ld (hl),a 
   47 D1:D0D1 23 -  -  -  	inc hl
   48 D1:D0D2 3E 31 -  -  	ld a,%00110001
   49 D1:D0D4 77 -  -  -  	ld (hl),a 
   50 D1:D0D5 23 -  -  -  	inc hl
   51 D1:D0D6 3E FF -  -  	ld a,%11111111
   52 D1:D0D8 77 -  -  -  	ld (hl),a 
   53 D1:D0D9 23 -  -  -  	inc hl
   54 D1:D0DA 3E FF -  -  	ld a,%11111111
   55 D1:D0DC 77 -  -  -  	ld (hl),a 
   56 D1:D0DD 23 -  -  -  	inc hl
   57 D1:D0DE 3E 1F -  -  	ld a,%00011111
   58 D1:D0E0 77 -  -  -  	ld (hl),a 
   59 D1:D0E1 23 -  -  -  	inc hl
   60 D1:D0E2 3E 81 -  -  	ld a,%10000001
   61 D1:D0E4 77 -  -  -  	ld (hl),a 
   62 D1:D0E5 23 -  -  -  	inc hl
   63 D1:D0E6 3E 00 -  -  	ld a,%00000000
   64 D1:D0E8 77 -  -  -  	ld (hl),a 
   65 D1:D0E9 23 -  -  -  	inc hl
   66 D1:D0EA 3E 68 -  -  	ld a,%01101000
   67 D1:D0EC 77 -  -  -  	ld (hl),a 
   68 D1:D0ED 23 -  -  -  	inc hl
   69 D1:D0EE 3E 20 -  -  	ld a,%00100000
   70 D1:D0F0 77 -  -  -  	ld (hl),a 
   71 D1:D0F1 23 -  -  -  	inc hl
   72 D1:D0F2 3E 6A -  -  	ld a,%01101010
   73 D1:D0F4 77 -  -  -  	ld (hl),a 
   74 D1:D0F5 23 -  -  -  	inc hl
   75 D1:D0F6 3E 28 -  -  	ld a,%00101000
   76 D1:D0F8 77 -  -  -  	ld (hl),a 
   77 D1:D0F9 23 -  -  -  	inc hl
   78 D1:D0FA 3E 21 -  -  	ld a,%00100001
   79 D1:D0FC 77 -  -  -  	ld (hl),a 
   80 D1:D0FD 23 -  -  -  	inc hl
   81 D1:D0FE 3E 00 -  -  	ld a,%00000000
   82 D1:D100 77 -  -  -  	ld (hl),a 
   83 D1:D101 23 -  -  -  	inc hl
   84 D1:D102 3E 00 -  -  	ld a,%00000000
   85 D1:D104 77 -  -  -  	ld (hl),a 
   86 D1:D105 23 -  -  -  	inc hl
   87 D1:D106 3E 23 -  -  	ld a,%00100011
   88 D1:D108 77 -  -  -  	ld (hl),a 
   89 D1:D109 23 -  -  -  	inc hl
   90 D1:D10A 3E B1 -  -  	ld a,%10110001
   91 D1:D10C 77 -  -  -  	ld (hl),a 
   92 D1:D10D 23 -  -  -  	inc hl
   93 D1:D10E 3E 1F -  -  	ld a,%00011111
   94 D1:D110 77 -  -  -  	ld (hl),a 
   95 D1:D111 23 -  -  -  	inc hl
   96 D1:D112 3E 68 -  -  	ld a,%01101000
   97 D1:D114 77 -  -  -  	ld (hl),a 
   98 D1:D115 23 -  -  -  	inc hl
   99 D1:D116 C9 -  -  -  	ret 
Listing for file "ascent.asm"
  253 D1:D117 -  -  -  -  #include "Equates.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\Equates.txt"
    1 D1:D117 -  -  -  -  Banana1_Slow .equ $d40001
    2 D1:D117 -  -  -  -  Banana1_Slow_F .equ $d40119
    3 D1:D117 -  -  -  -  Banana1_Slow_O .equ $d40231
    4 D1:D117 -  -  -  -  Banana1_Slow_O_F .equ $d40349
    5 D1:D117 -  -  -  -  Banana1Large_Slow_O .equ $d40461
    6 D1:D117 -  -  -  -  Banana1Large_Slow_O_F .equ $d4077d
    7 D1:D117 -  -  -  -  Banana1Large_Fast .equ $d40a98
    8 D1:D117 -  -  -  -  Banana1Large_Fast_F .equ $d40d2a
    9 D1:D117 -  -  -  -  Banana1Large_BG .equ $d40fbb
   10 D1:D117 -  -  -  -  Banana1Large_BG_O .equ $d41800
   11 D1:D117 -  -  -  -  Banana1Large_BG_F .equ $d420a1
   12 D1:D117 -  -  -  -  Banana1Large_BG_O_F .equ $d428e6
   13 D1:D117 -  -  -  -  Shittlogo_Slow .equ $d43187
   14 D1:D117 -  -  -  -  Shittlogo_Slow_O .equ $d436b7
   15 D1:D117 -  -  -  -  OrangeDot_Slow .equ $d43bd3
   16 D1:D117 -  -  -  -  OrangeDot_Slow_O .equ $d43c7f
   17 D1:D117 -  -  -  -  OrangeDot_BG .equ $d43d2a
   18 D1:D117 -  -  -  -  OrangeDot_BG_O .equ $d43e1b
   19 D1:D117 -  -  -  -  SquiggleL_Slow .equ $d43f0d
   20 D1:D117 -  -  -  -  SquiggleL_Slow_F .equ $d440ad
   21 D1:D117 -  -  -  -  SquiggleL_Slow_O .equ $d4424d
   22 D1:D117 -  -  -  -  SquiggleL_Slow_O_F .equ $d443f1
   23 D1:D117 -  -  -  -  Banana5_BG .equ $d44595
   24 D1:D117 -  -  -  -  Banana5_BG_O .equ $d44996
   25 D1:D117 -  -  -  -  Banana5_BG_F .equ $d44dd7
   26 D1:D117 -  -  -  -  Banana5_BG_O_F .equ $d451d8
   27 D1:D117 -  -  -  -  GreenCurl1_BG .equ $d45619
   28 D1:D117 -  -  -  -  GreenCurl1_BG_O .equ $d45a1a
   29 D1:D117 -  -  -  -  GreenCurl1_BG_F .equ $d45e5b
   30 D1:D117 -  -  -  -  GreenCurl1_BG_O_F .equ $d4625c
   31 D1:D117 -  -  -  -  Bluecurl_BG .equ $d4669d
   32 D1:D117 -  -  -  -  Bluecurl_BG_O .equ $d46f9e
Listing for file "ascent.asm"
  254 D1:D117 -  -  -  -  #include "Decompress_Calls.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\Decompress_Calls.txt"
    1 D1:D117 -  -  -  -  decompress_calls:
    2 D1:D117 -  -  -  -  
    3 D1:D117 CD EB B2 D1 	call sdcomp_reset_bg_sprite 
    4 D1:D11B CD 13 B1 D1 	call sdcomp_reset_flip
    5 D1:D11F CD C7 B2 D1 	call sdcomp_reset_fast_sprite
    6 D1:D123 21 FC B6 D1 	ld hl, Banana1
    7 D1:D127 11 01 00 D4 	ld de, Banana1_Slow
    8 D1:D12B CD 70 AD D1 	call sprite_decompress
    9 D1:D12F 21 A4 B9 D1 	ld hl, Shittlogo
   10 D1:D133 11 87 31 D4 	ld de, Shittlogo_Slow
   11 D1:D137 CD 70 AD D1 	call sprite_decompress
   12 D1:D13B 21 6E BC D1 	ld hl, OrangeDot
   13 D1:D13F 11 D3 3B D4 	ld de, OrangeDot_Slow
   14 D1:D143 CD 70 AD D1 	call sprite_decompress
   15 D1:D147 21 8F BC D1 	ld hl, SquiggleL
   16 D1:D14B 11 0D 3F D4 	ld de, SquiggleL_Slow
   17 D1:D14F CD 70 AD D1 	call sprite_decompress
   18 D1:D153 CD EB B2 D1 	call sdcomp_reset_bg_sprite 
   19 D1:D157 CD D0 B0 D1 	call sdcomp_set_flip
   20 D1:D15B CD C7 B2 D1 	call sdcomp_reset_fast_sprite
   21 D1:D15F 21 FC B6 D1 	ld hl, Banana1
   22 D1:D163 11 19 01 D4 	ld de, Banana1_Slow_F
   23 D1:D167 CD 70 AD D1 	call sprite_decompress
   24 D1:D16B 21 8F BC D1 	ld hl, SquiggleL
   25 D1:D16F 11 AD 40 D4 	ld de, SquiggleL_Slow_F
   26 D1:D173 CD 70 AD D1 	call sprite_decompress
   27 D1:D177 CD EB B2 D1 	call sdcomp_reset_bg_sprite 
   28 D1:D17B CD 13 B1 D1 	call sdcomp_reset_flip
   29 D1:D17F CD C7 B2 D1 	call sdcomp_reset_fast_sprite
   30 D1:D183 CD 3E B1 D1 	call sdcomp_set_offset 
   31 D1:D187 21 FC B6 D1 	ld hl, Banana1
   32 D1:D18B 11 31 02 D4 	ld de, Banana1_Slow_O
   33 D1:D18F CD 70 AD D1 	call sprite_decompress
   34 D1:D193 CD 3E B1 D1 	call sdcomp_set_offset 
   35 D1:D197 21 93 B7 D1 	ld hl, Banana1Large
   36 D1:D19B 11 61 04 D4 	ld de, Banana1Large_Slow_O
   37 D1:D19F CD 70 AD D1 	call sprite_decompress
   38 D1:D1A3 CD 3E B1 D1 	call sdcomp_set_offset 
   39 D1:D1A7 21 A4 B9 D1 	ld hl, Shittlogo
   40 D1:D1AB 11 B7 36 D4 	ld de, Shittlogo_Slow_O
   41 D1:D1AF CD 70 AD D1 	call sprite_decompress
   42 D1:D1B3 CD 3E B1 D1 	call sdcomp_set_offset 
   43 D1:D1B7 21 6E BC D1 	ld hl, OrangeDot
   44 D1:D1BB 11 7F 3C D4 	ld de, OrangeDot_Slow_O
   45 D1:D1BF CD 70 AD D1 	call sprite_decompress
   46 D1:D1C3 CD 3E B1 D1 	call sdcomp_set_offset 
   47 D1:D1C7 21 8F BC D1 	ld hl, SquiggleL
   48 D1:D1CB 11 4D 42 D4 	ld de, SquiggleL_Slow_O
   49 D1:D1CF CD 70 AD D1 	call sprite_decompress
   50 D1:D1D3 CD EB B2 D1 	call sdcomp_reset_bg_sprite 
   51 D1:D1D7 CD D0 B0 D1 	call sdcomp_set_flip
   52 D1:D1DB CD C7 B2 D1 	call sdcomp_reset_fast_sprite
   53 D1:D1DF CD 3E B1 D1 	call sdcomp_set_offset 
   54 D1:D1E3 21 FC B6 D1 	ld hl, Banana1
   55 D1:D1E7 11 49 03 D4 	ld de, Banana1_Slow_O_F
   56 D1:D1EB CD 70 AD D1 	call sprite_decompress
   57 D1:D1EF CD 3E B1 D1 	call sdcomp_set_offset 
   58 D1:D1F3 21 93 B7 D1 	ld hl, Banana1Large
   59 D1:D1F7 11 7D 07 D4 	ld de, Banana1Large_Slow_O_F
   60 D1:D1FB CD 70 AD D1 	call sprite_decompress
   61 D1:D1FF CD 3E B1 D1 	call sdcomp_set_offset 
   62 D1:D203 21 8F BC D1 	ld hl, SquiggleL
   63 D1:D207 11 F1 43 D4 	ld de, SquiggleL_Slow_O_F
   64 D1:D20B CD 70 AD D1 	call sprite_decompress
   65 D1:D20F CD EB B2 D1 	call sdcomp_reset_bg_sprite 
   66 D1:D213 CD 13 B1 D1 	call sdcomp_reset_flip
   67 D1:D217 CD B8 B2 D1 	call sdcomp_set_fast_sprite
   68 D1:D21B 21 93 B7 D1 	ld hl, Banana1Large
   69 D1:D21F 11 98 0A D4 	ld de, Banana1Large_Fast
   70 D1:D223 CD 70 AD D1 	call sprite_decompress
   71 D1:D227 CD EB B2 D1 	call sdcomp_reset_bg_sprite 
   72 D1:D22B CD D0 B0 D1 	call sdcomp_set_flip
   73 D1:D22F CD B8 B2 D1 	call sdcomp_set_fast_sprite
   74 D1:D233 21 93 B7 D1 	ld hl, Banana1Large
   75 D1:D237 11 2A 0D D4 	ld de, Banana1Large_Fast_F
   76 D1:D23B CD 70 AD D1 	call sprite_decompress
   77 D1:D23F CD D6 B2 D1 	call sdcomp_set_bg_sprite 
   78 D1:D243 CD 13 B1 D1 	call sdcomp_reset_flip
   79 D1:D247 CD C7 B2 D1 	call sdcomp_reset_fast_sprite
   80 D1:D24B 21 93 B7 D1 	ld hl, Banana1Large
   81 D1:D24F 11 BB 0F D4 	ld de, Banana1Large_BG
   82 D1:D253 CD 70 AD D1 	call sprite_decompress
   83 D1:D257 21 6E BC D1 	ld hl, OrangeDot
   84 D1:D25B 11 2A 3D D4 	ld de, OrangeDot_BG
   85 D1:D25F CD 70 AD D1 	call sprite_decompress
   86 D1:D263 21 05 BD D1 	ld hl, Banana5
   87 D1:D267 11 95 45 D4 	ld de, Banana5_BG
   88 D1:D26B CD 70 AD D1 	call sprite_decompress
   89 D1:D26F 21 EF BD D1 	ld hl, GreenCurl1
   90 D1:D273 11 19 56 D4 	ld de, GreenCurl1_BG
   91 D1:D277 CD 70 AD D1 	call sprite_decompress
   92 D1:D27B 21 73 BE D1 	ld hl, Bluecurl
   93 D1:D27F 11 9D 66 D4 	ld de, Bluecurl_BG
   94 D1:D283 CD 70 AD D1 	call sprite_decompress
   95 D1:D287 CD D6 B2 D1 	call sdcomp_set_bg_sprite 
   96 D1:D28B CD 13 B1 D1 	call sdcomp_reset_flip
   97 D1:D28F CD C7 B2 D1 	call sdcomp_reset_fast_sprite
   98 D1:D293 CD 3E B1 D1 	call sdcomp_set_offset 
   99 D1:D297 21 93 B7 D1 	ld hl, Banana1Large
  100 D1:D29B 11 00 18 D4 	ld de, Banana1Large_BG_O
  101 D1:D29F CD 70 AD D1 	call sprite_decompress
  102 D1:D2A3 CD 3E B1 D1 	call sdcomp_set_offset 
  103 D1:D2A7 21 6E BC D1 	ld hl, OrangeDot
  104 D1:D2AB 11 1B 3E D4 	ld de, OrangeDot_BG_O
  105 D1:D2AF CD 70 AD D1 	call sprite_decompress
  106 D1:D2B3 CD 3E B1 D1 	call sdcomp_set_offset 
  107 D1:D2B7 21 05 BD D1 	ld hl, Banana5
  108 D1:D2BB 11 96 49 D4 	ld de, Banana5_BG_O
  109 D1:D2BF CD 70 AD D1 	call sprite_decompress
  110 D1:D2C3 CD 3E B1 D1 	call sdcomp_set_offset 
  111 D1:D2C7 21 EF BD D1 	ld hl, GreenCurl1
  112 D1:D2CB 11 1A 5A D4 	ld de, GreenCurl1_BG_O
  113 D1:D2CF CD 70 AD D1 	call sprite_decompress
  114 D1:D2D3 CD 3E B1 D1 	call sdcomp_set_offset 
  115 D1:D2D7 21 73 BE D1 	ld hl, Bluecurl
  116 D1:D2DB 11 9E 6F D4 	ld de, Bluecurl_BG_O
  117 D1:D2DF CD 70 AD D1 	call sprite_decompress
  118 D1:D2E3 CD D6 B2 D1 	call sdcomp_set_bg_sprite 
  119 D1:D2E7 CD D0 B0 D1 	call sdcomp_set_flip
  120 D1:D2EB CD C7 B2 D1 	call sdcomp_reset_fast_sprite
  121 D1:D2EF 21 93 B7 D1 	ld hl, Banana1Large
  122 D1:D2F3 11 A1 20 D4 	ld de, Banana1Large_BG_F
  123 D1:D2F7 CD 70 AD D1 	call sprite_decompress
  124 D1:D2FB 21 05 BD D1 	ld hl, Banana5
  125 D1:D2FF 11 D7 4D D4 	ld de, Banana5_BG_F
  126 D1:D303 CD 70 AD D1 	call sprite_decompress
  127 D1:D307 21 EF BD D1 	ld hl, GreenCurl1
  128 D1:D30B 11 5B 5E D4 	ld de, GreenCurl1_BG_F
  129 D1:D30F CD 70 AD D1 	call sprite_decompress
  130 D1:D313 CD D6 B2 D1 	call sdcomp_set_bg_sprite 
  131 D1:D317 CD D0 B0 D1 	call sdcomp_set_flip
  132 D1:D31B CD C7 B2 D1 	call sdcomp_reset_fast_sprite
  133 D1:D31F CD 3E B1 D1 	call sdcomp_set_offset 
  134 D1:D323 21 93 B7 D1 	ld hl, Banana1Large
  135 D1:D327 11 E6 28 D4 	ld de, Banana1Large_BG_O_F
  136 D1:D32B CD 70 AD D1 	call sprite_decompress
  137 D1:D32F CD 3E B1 D1 	call sdcomp_set_offset 
  138 D1:D333 21 05 BD D1 	ld hl, Banana5
  139 D1:D337 11 D8 51 D4 	ld de, Banana5_BG_O_F
  140 D1:D33B CD 70 AD D1 	call sprite_decompress
  141 D1:D33F CD 3E B1 D1 	call sdcomp_set_offset 
  142 D1:D343 21 EF BD D1 	ld hl, GreenCurl1
  143 D1:D347 11 5C 62 D4 	ld de, GreenCurl1_BG_O_F
  144 D1:D34B CD 70 AD D1 	call sprite_decompress
  145 D1:D34F C9 -  -  -  	ret
Listing for file "ascent.asm"
  255 D1:D350 -  -  -  -  #include "Sprite_Tables.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\Sprite_Tables.txt"
    1 D1:D350 -  -  -  -  Sprite_Table_0:
    2 D1:D350 19 01 D4 -  	.dl Banana1_Slow_F
    3 D1:D353 61 04 D4 -  	.dl Banana1Large_Slow_O
    4 D1:D356 98 0A D4 -  	.dl Banana1Large_Fast
    5 D1:D359 7D 07 D4 -  	.dl Banana1Large_Slow_O_F
    6 D1:D35C 01 00 D4 -  	.dl Banana1_Slow
    7 D1:D35F 49 03 D4 -  	.dl Banana1_Slow_O_F
    8 D1:D362 2A 0D D4 -  	.dl Banana1Large_Fast_F
    9 D1:D365 31 02 D4 -  	.dl Banana1_Slow_O
   10 D1:D368 B7 36 D4 -  	.dl Shittlogo_Slow_O
   11 D1:D36B 87 31 D4 -  	.dl Shittlogo_Slow
   12 D1:D36E 7F 3C D4 -  	.dl OrangeDot_Slow_O
   13 D1:D371 D3 3B D4 -  	.dl OrangeDot_Slow
   14 D1:D374 4D 42 D4 -  	.dl SquiggleL_Slow_O
   15 D1:D377 AD 40 D4 -  	.dl SquiggleL_Slow_F
   16 D1:D37A 0D 3F D4 -  	.dl SquiggleL_Slow
   17 D1:D37D F1 43 D4 -  	.dl SquiggleL_Slow_O_F
   18 D1:D380 -  -  -  -  
   19 D1:D380 -  -  -  -  Sprite_Table_1:
   20 D1:D380 E6 28 D4 -  	.dl Banana1Large_BG_O_F
   21 D1:D383 00 18 D4 -  	.dl Banana1Large_BG_O
   22 D1:D386 BB 0F D4 -  	.dl Banana1Large_BG
   23 D1:D389 96 49 D4 -  	.dl Banana5_BG_O
   24 D1:D38C 95 45 D4 -  	.dl Banana5_BG
   25 D1:D38F 5C 62 D4 -  	.dl GreenCurl1_BG_O_F
   26 D1:D392 1A 5A D4 -  	.dl GreenCurl1_BG_O
   27 D1:D395 5B 5E D4 -  	.dl GreenCurl1_BG_F
   28 D1:D398 9E 6F D4 -  	.dl Bluecurl_BG_O
   29 D1:D39B A1 20 D4 -  	.dl Banana1Large_BG_F
   30 D1:D39E D7 4D D4 -  	.dl Banana5_BG_F
   31 D1:D3A1 9D 66 D4 -  	.dl Bluecurl_BG
   32 D1:D3A4 1B 3E D4 -  	.dl OrangeDot_BG_O
   33 D1:D3A7 19 56 D4 -  	.dl GreenCurl1_BG
   34 D1:D3AA 2A 3D D4 -  	.dl OrangeDot_BG
   35 D1:D3AD D8 51 D4 -  	.dl Banana5_BG_O_F
   36 D1:D3B0 -  -  -  -  
   37 D1:D3B0 -  -  -  -  Sprite_Table_2:
   38 D1:D3B0 -  -  -  -  
Listing for file "ascent.asm"
  256 D1:D3B0 -  -  -  -  
  257 D1:D3B0 -  -  -  -  
