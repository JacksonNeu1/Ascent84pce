    1 00:0000 -  -  -  -  
    2 00:0000 -  -  -  -  #include "includes\ti84pce.inc"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\includes\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "ascent.asm"
    3 00:0000 -  -  -  -  
    4 00:0000 -  -  -  -   .assume ADL=1
    5 00:0000 -  -  -  -   .org userMem-2
    6 D1:A87F EF 7B -  -   .db tExtTok,tAsm84CeCmp
    7 D1:A881 -  -  -  -  
    8 D1:A881 -  -  -  -  
    9 D1:A881 -  -  -  -  
   10 D1:A881 -  -  -  -  ;0E30000h + 0200h
   11 D1:A881 -  -  -  -  
   12 D1:A881 CD 28 08 02 	call _homeup
   13 D1:A885 CD 10 08 02 	call _ClrScrnFull
   14 D1:A889 -  -  -  -  
   15 D1:A889 CD 48 08 02 	call _RunIndicOff		; turn off run indicator
   16 D1:A88D F3 -  -  -  	di			
   17 D1:A88E -  -  -  -  	
   18 D1:A88E -  -  -  -  	
   19 D1:A88E CD A6 CA D1 	call setup_palette_1
   20 D1:A892 -  -  -  -  
   21 D1:A892 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255
   22 D1:A896 3E 25 -  -  	ld	a,lcdBpp4
   23 D1:A898 32 18 00 E3 	ld (mpLcdCtrl),a	
   24 D1:A89C -  -  -  -  
   25 D1:A89C -  -  -  -  
   26 D1:A89C -  -  -  -  
   27 D1:A89C -  -  -  -  
   28 D1:A89C -  -  -  -  	;call sdcomp_set_fast
   29 D1:A89C -  -  -  -  	;call sdcomp_set_flip
   30 D1:A89C -  -  -  -  	;call sdcomp_reset_offset
   31 D1:A89C -  -  -  -  	;ld hl, Tree_5 
   32 D1:A89C -  -  -  -  	;ld de, Tree_5_Fast_F_0
   33 D1:A89C -  -  -  -  	;call sdcomp_set_2bpc
   34 D1:A89C -  -  -  -  	;call sprite_decompress
   35 D1:A89C -  -  -  -  	
   36 D1:A89C -  -  -  -  	;call sdcomp_set_fast
   37 D1:A89C -  -  -  -  	;call sdcomp_reset_flip
   38 D1:A89C -  -  -  -  	;call sdcomp_reset_offset
   39 D1:A89C -  -  -  -  	;ld hl, Moss_0 
   40 D1:A89C -  -  -  -  	;ld de, Moss_0_Fast_0
   41 D1:A89C -  -  -  -  	;call sprite_decompress
   42 D1:A89C -  -  -  -  	
   43 D1:A89C -  -  -  -  	;call prgmpause
   44 D1:A89C -  -  -  -  	;call prgmpause
   45 D1:A89C -  -  -  -  
   46 D1:A89C 21 00 00 00 	ld hl,0
   47 D1:A8A0 22 A6 AB D1 	ld (cam_pos),hl
   48 D1:A8A4 22 A9 AB D1 	ld (bg_cam_pos),hl
   49 D1:A8A8 -  -  -  -  	
   50 D1:A8A8 -  -  -  -  	
   51 D1:A8A8 3E 02 -  -  	ld a,%00000010;disable, 32768hz
   52 D1:A8AA 32 30 00 F2 	ld ($F20030),a	
   53 D1:A8AE -  -  -  -  	
   54 D1:A8AE CD 90 B8 D1 	call setup_decompress_queue
   55 D1:A8B2 -  -  -  -  	
   56 D1:A8B2 -  -  -  -  	;Decompress sprites in preframes for setup
   57 D1:A8B2 21 F4 C1 D1 	ld hl,decompress_frame_up_pre2 
   58 D1:A8B6 CD 96 B9 D1 	call cfdc_direct_add_decompress_frame
   59 D1:A8BA CD DD B8 D1 	call continue_decompressions ;Run decompression (Will finish as timer has not started)
   60 D1:A8BE 21 18 C2 D1 	ld hl,decompress_frame_up_pre1
   61 D1:A8C2 CD 96 B9 D1 	call cfdc_direct_add_decompress_frame
   62 D1:A8C6 CD DD B8 D1 	call continue_decompressions ;Run decompression (Will finish as timer has not started)
   63 D1:A8CA -  -  -  -  	
   64 D1:A8CA -  -  -  -  	;call draw_fg
   65 D1:A8CA -  -  -  -  	
   66 D1:A8CA 3E 00 -  -  	ld a,0
   67 D1:A8CC CD 88 B9 D1 	call cfdc_cam_move_up ;need to skip here for frame 0
   68 D1:A8D0 -  -  -  -  	
   69 D1:A8D0 -  -  -  -  	;call prgmpause
   70 D1:A8D0 -  -  -  -  
   71 D1:A8D0 CD DD B8 D1 	call continue_decompressions
   72 D1:A8D4 -  -  -  -  	
   73 D1:A8D4 -  -  -  -  	;call prgmpause
   74 D1:A8D4 00 -  -  -  	nop ;This needs to be here for some reason
   75 D1:A8D5 -  -  -  -  ;	call decompress_calls
   76 D1:A8D5 -  -  -  -  	
   77 D1:A8D5 -  -  -  -  
   78 D1:A8D5 -  -  -  -  	
   79 D1:A8D5 -  -  -  -  	;gen purp timers
   80 D1:A8D5 -  -  -  -  		; 76543210	
   81 D1:A8D5 3E 03 -  -  	ld a,%00000011;enable, 32768hz
   82 D1:A8D7 32 30 00 F2 	ld ($F20030),a
   83 D1:A8DB -  -  -  -  	;	  fedcba98
   84 D1:A8DB 3E 02 -  -  	ld a,%00000010;count up
   85 D1:A8DD 32 31 00 F2 	ld ($F20031),a
   86 D1:A8E1 -  -  -  -  	
   87 D1:A8E1 21 00 2C D5 	ld hl,vRam + (160*240*2)
   88 D1:A8E5 22 AC AB D1 	ld (draw_buffer),hl
   89 D1:A8E9 21 00 C2 D5 	ld hl,vRam + (160*240*3)
   90 D1:A8ED 22 10 00 E3 	ld (mpLcdBase),hl
   91 D1:A8F1 -  -  -  -  	
   92 D1:A8F1 -  -  -  -  
   93 D1:A8F1 -  -  -  -  	
   94 D1:A8F1 -  -  -  -  	
   95 D1:A8F1 -  -  -  -  
   96 D1:A8F1 -  -  -  -  	;ld hl,BG_buffer+(160*5)
   97 D1:A8F1 -  -  -  -  	;ld (dbgl_vram_line_start),hl
   98 D1:A8F1 -  -  -  -  
   99 D1:A8F1 -  -  -  -  	;ld hl,BG_Data_1
  100 D1:A8F1 -  -  -  -  	;ld a,10
  101 D1:A8F1 -  -  -  -  	;call draw_bg_line
  102 D1:A8F1 -  -  -  -  	
  103 D1:A8F1 -  -  -  -  	
  104 D1:A8F1 -  -  -  -  	;call prgmpause
  105 D1:A8F1 -  -  -  -  
  106 D1:A8F1 -  -  -  -  	;call draw_mg
  107 D1:A8F1 -  -  -  -  
  108 D1:A8F1 CD FF AC D1 	call setup_bg ;after initial decompressions and cam setup
  109 D1:A8F5 -  -  -  -  	;call prgmpause
  110 D1:A8F5 -  -  -  -  	;call prgmpause
  111 D1:A8F5 -  -  -  -  main_loop:
  112 D1:A8F5 -  -  -  -  
  113 D1:A8F5 -  -  -  -  	
  114 D1:A8F5 -  -  -  -  
  115 D1:A8F5 -  -  -  -  	;clear timer
  116 D1:A8F5 3E 00 -  -  	ld a,0
  117 D1:A8F7 32 00 00 F2 	ld ($F20000),a;32768hz
  118 D1:A8FB 32 01 00 F2 	ld ($F20001),a;128hz
  119 D1:A8FF 32 02 00 F2 	ld ($F20002),a;0.5hz
  120 D1:A903 32 03 00 F2 	ld ($F20003),a
  121 D1:A907 -  -  -  -  	
  122 D1:A907 -  -  -  -  	;Instructions here 
  123 D1:A907 -  -  -  -  	
  124 D1:A907 -  -  -  -  	
  125 D1:A907 -  -  -  -  	;call input_cam_up
  126 D1:A907 C3 B6 B9 D1 	jp get_inputs
  127 D1:A90B -  -  -  -  get_inputs_return:
  128 D1:A90B -  -  -  -  
  129 D1:A90B -  -  -  -  	;call move_bg Draw BG calls MoveBg
  130 D1:A90B -  -  -  -  	
  131 D1:A90B -  -  -  -  	
  132 D1:A90B CD 0F AC D1 	call draw_bg
  133 D1:A90F -  -  -  -  
  134 D1:A90F -  -  -  -  	
  135 D1:A90F -  -  -  -  	
  136 D1:A90F -  -  -  -  	;TEsting
  137 D1:A90F 21 00 00 00 	ld hl,0
  138 D1:A913 3A 00 00 F2 	ld a,($F20000);32768hz
  139 D1:A917 6F -  -  -  	ld l,a
  140 D1:A918 3A 01 00 F2 	ld a,($F20001);128hz 
  141 D1:A91C 67 -  -  -  	ld h,a
  142 D1:A91D CB 3C -  -  	srl h ;div by 8
  143 D1:A91F CB 1D -  -  	rr l 
  144 D1:A921 CB 3C -  -  	srl h
  145 D1:A923 CB 1D -  -  	rr l 
  146 D1:A925 CB 3C -  -  	srl h
  147 D1:A927 CB 1D -  -  	rr l 
  148 D1:A929 7D -  -  -  	ld a,l
  149 D1:A92A 32 B3 AB D1 	ld (draw_bg_time),a
  150 D1:A92E -  -  -  -  	
  151 D1:A92E -  -  -  -  	;TEST CLEAR BUFFER
  152 D1:A92E -  -  -  -  	;ld hl,BG_buffer
  153 D1:A92E -  -  -  -  	;ld de,(draw_buffer)
  154 D1:A92E -  -  -  -  	;ld bc, 160*240
  155 D1:A92E -  -  -  -  	;ldir
  156 D1:A92E -  -  -  -  	
  157 D1:A92E CD C6 B4 D1 	call draw_mg
  158 D1:A932 -  -  -  -  	
  159 D1:A932 -  -  -  -  	;TEsting
  160 D1:A932 21 00 00 00 	ld hl,0
  161 D1:A936 3A 00 00 F2 	ld a,($F20000);32768hz
  162 D1:A93A 6F -  -  -  	ld l,a
  163 D1:A93B 3A 01 00 F2 	ld a,($F20001);128hz 
  164 D1:A93F 67 -  -  -  	ld h,a
  165 D1:A940 CB 3C -  -  	srl h ;div by 8
  166 D1:A942 CB 1D -  -  	rr l 
  167 D1:A944 CB 3C -  -  	srl h
  168 D1:A946 CB 1D -  -  	rr l 
  169 D1:A948 CB 3C -  -  	srl h
  170 D1:A94A CB 1D -  -  	rr l 
  171 D1:A94C 7D -  -  -  	ld a,l
  172 D1:A94D 32 B4 AB D1 	ld (draw_mg_time),a
  173 D1:A951 -  -  -  -  	
  174 D1:A951 CD 31 B5 D1 	call draw_fg
  175 D1:A955 -  -  -  -  	;Leaves_4_Slow_1 has issue
  176 D1:A955 -  -  -  -  	;Need to fix indexing of decompress segments
  177 D1:A955 -  -  -  -  	
  178 D1:A955 -  -  -  -  	;Sprite groups must all use the same load index of a given sprite, as they pull from same data
  179 D1:A955 -  -  -  -  	
  180 D1:A955 -  -  -  -  	
  181 D1:A955 -  -  -  -  	
  182 D1:A955 -  -  -  -  	;TEsting
  183 D1:A955 21 00 00 00 	ld hl,0
  184 D1:A959 3A 00 00 F2 	ld a,($F20000);32768hz
  185 D1:A95D 6F -  -  -  	ld l,a
  186 D1:A95E 3A 01 00 F2 	ld a,($F20001);128hz 
  187 D1:A962 67 -  -  -  	ld h,a
  188 D1:A963 CB 3C -  -  	srl h ;div by 8
  189 D1:A965 CB 1D -  -  	rr l 
  190 D1:A967 CB 3C -  -  	srl h
  191 D1:A969 CB 1D -  -  	rr l 
  192 D1:A96B CB 3C -  -  	srl h
  193 D1:A96D CB 1D -  -  	rr l 
  194 D1:A96F 7D -  -  -  	ld a,l
  195 D1:A970 32 B5 AB D1 	ld (draw_fg_time),a
  196 D1:A974 -  -  -  -  	
  197 D1:A974 21 00 00 00 	ld hl,0
  198 D1:A978 -  -  -  -  	
  199 D1:A978 -  -  -  -  	; for debug longest frame draw time
  200 D1:A978 3A 00 00 F2 	ld a,($F20000)
  201 D1:A97C 6F -  -  -  	ld l,a
  202 D1:A97D 3A 01 00 F2 	ld a,($F20001);128hz 
  203 D1:A981 67 -  -  -  	ld h,a
  204 D1:A982 E5 -  -  -  	push hl
  205 D1:A983 ED 4B B7 AB 
              D1 -  -  -  	ld bc,(longestFrame)
  206 D1:A988 ED 42 -  -  	sbc hl,bc 
  207 D1:A98A DA 9C A9 D1 	jp c,longest_frame_skip
  208 D1:A98E -  -  -  -  	
  209 D1:A98E E1 -  -  -  	pop hl 
  210 D1:A98F E5 -  -  -  	push hl 
  211 D1:A990 22 B7 AB D1 	ld (longestFrame),hl 
  212 D1:A994 2A A6 AB D1 	ld hl,(cam_pos)
  213 D1:A998 22 BA AB D1 	ld (longestFramePos),hl
  214 D1:A99C -  -  -  -  longest_frame_skip:
  215 D1:A99C E1 -  -  -  	pop hl 
  216 D1:A99D -  -  -  -  	
  217 D1:A99D -  -  -  -  		
  218 D1:A99D 2A C0 AB D1 	ld hl,(frameCount)
  219 D1:A9A1 23 -  -  -  	inc hl
  220 D1:A9A2 22 C0 AB D1 	ld (frameCount),hl
  221 D1:A9A6 -  -  -  -  	
  222 D1:A9A6 -  -  -  -  
  223 D1:A9A6 -  -  -  -  	
  224 D1:A9A6 -  -  -  -  	;check if lcd has drawn first frame
  225 D1:A9A6 -  -  -  -  
  226 D1:A9A6 CD 6D B9 D1 	call check_for_decompress_calls
  227 D1:A9AA -  -  -  -  	;Sprite decompression will occur here
  228 D1:A9AA CD DD B8 D1 	call continue_decompressions
  229 D1:A9AE -  -  -  -  	
  230 D1:A9AE -  -  -  -  	;TEsting
  231 D1:A9AE 21 00 00 00 	ld hl,0
  232 D1:A9B2 3A 00 00 F2 	ld a,($F20000);32768hz
  233 D1:A9B6 6F -  -  -  	ld l,a
  234 D1:A9B7 3A 01 00 F2 	ld a,($F20001);128hz 
  235 D1:A9BB 67 -  -  -  	ld h,a
  236 D1:A9BC CB 3C -  -  	srl h ;div by 4
  237 D1:A9BE CB 1D -  -  	rr l 
  238 D1:A9C0 CB 3C -  -  	srl h
  239 D1:A9C2 CB 1D -  -  	rr l 
  240 D1:A9C4 CB 3C -  -  	srl h
  241 D1:A9C6 CB 1D -  -  	rr l 
  242 D1:A9C8 7D -  -  -  	ld a,l
  243 D1:A9C9 32 B6 AB D1 	ld (decompress_time),a
  244 D1:A9CD -  -  -  -  
  245 D1:A9CD -  -  -  -  
  246 D1:A9CD -  -  -  -  	
  247 D1:A9CD -  -  -  -  
  248 D1:A9CD -  -  -  -  	;Draw time bar at top of screen 
  249 D1:A9CD 2A AC AB D1 	ld hl, (draw_buffer)
  250 D1:A9D1 01 00 00 00 	ld bc,0 
  251 D1:A9D5 3A B6 AB D1 	ld a,(decompress_time)
  252 D1:A9D9 4F -  -  -  	ld c,a 
  253 D1:A9DA 3E 55 -  -  	ld a, $55
  254 D1:A9DC CD E0 10 02 	call _MemSet
  255 D1:A9E0 -  -  -  -  	
  256 D1:A9E0 2A AC AB D1 	ld hl, (draw_buffer)
  257 D1:A9E4 01 00 00 00 	ld bc,0 
  258 D1:A9E8 3A B5 AB D1 	ld a,(draw_fg_time)
  259 D1:A9EC 4F -  -  -  	ld c,a 
  260 D1:A9ED 3E 44 -  -  	ld a, $44
  261 D1:A9EF CD E0 10 02 	call _MemSet
  262 D1:A9F3 -  -  -  -  	
  263 D1:A9F3 2A AC AB D1 	ld hl, (draw_buffer)
  264 D1:A9F7 01 00 00 00 	ld bc,0 
  265 D1:A9FB 3A B4 AB D1 	ld a,(draw_mg_time)
  266 D1:A9FF 4F -  -  -  	ld c,a 
  267 D1:AA00 3E 33 -  -  	ld a, $33
  268 D1:AA02 CD E0 10 02 	call _MemSet
  269 D1:AA06 -  -  -  -  
  270 D1:AA06 2A AC AB D1 	ld hl, (draw_buffer)
  271 D1:AA0A 01 00 00 00 	ld bc,0 
  272 D1:AA0E 3A B3 AB D1 	ld a,(draw_bg_time)
  273 D1:AA12 4F -  -  -  	ld c,a 
  274 D1:AA13 3E 22 -  -  	ld a, $22
  275 D1:AA15 CD E0 10 02 	call _MemSet
  276 D1:AA19 -  -  -  -  	
  277 D1:AA19 -  -  -  -  	
  278 D1:AA19 -  -  -  -  	
  279 D1:AA19 2A AC AB D1 	ld hl, (draw_buffer)
  280 D1:AA1D 01 88 00 00 	ld bc, 136  ; =1000/4 /2 for 2pix/bit 
  281 D1:AA21 09 -  -  -  	add hl,bc 
  282 D1:AA22 3E 55 -  -  	ld a,$55
  283 D1:AA24 77 -  -  -  	ld (hl),a 
  284 D1:AA25 -  -  -  -  	
  285 D1:AA25 -  -  -  -  	
  286 D1:AA25 -  -  -  -  	;Again for thick line
  287 D1:AA25 -  -  -  -  	
  288 D1:AA25 2A AC AB D1 	ld hl, (draw_buffer)
  289 D1:AA29 01 A0 00 00 	ld bc,160
  290 D1:AA2D 09 -  -  -  	add hl,bc 
  291 D1:AA2E 3A B6 AB D1 	ld a,(decompress_time)
  292 D1:AA32 4F -  -  -  	ld c,a 
  293 D1:AA33 3E 55 -  -  	ld a, $55
  294 D1:AA35 CD E0 10 02 	call _MemSet
  295 D1:AA39 -  -  -  -  	
  296 D1:AA39 2A AC AB D1 	ld hl, (draw_buffer)
  297 D1:AA3D 01 A0 00 00 	ld bc,160
  298 D1:AA41 09 -  -  -  	add hl,bc 
  299 D1:AA42 3A B5 AB D1 	ld a,(draw_fg_time)
  300 D1:AA46 4F -  -  -  	ld c,a 
  301 D1:AA47 3E 44 -  -  	ld a, $44
  302 D1:AA49 CD E0 10 02 	call _MemSet
  303 D1:AA4D -  -  -  -  	
  304 D1:AA4D 2A AC AB D1 	ld hl, (draw_buffer)
  305 D1:AA51 01 A0 00 00 	ld bc,160
  306 D1:AA55 09 -  -  -  	add hl,bc
  307 D1:AA56 3A B4 AB D1 	ld a,(draw_mg_time)
  308 D1:AA5A 4F -  -  -  	ld c,a 
  309 D1:AA5B 3E 33 -  -  	ld a, $33
  310 D1:AA5D CD E0 10 02 	call _MemSet
  311 D1:AA61 -  -  -  -  
  312 D1:AA61 2A AC AB D1 	ld hl, (draw_buffer)
  313 D1:AA65 01 A0 00 00 	ld bc,160
  314 D1:AA69 09 -  -  -  	add hl,bc
  315 D1:AA6A 3A B3 AB D1 	ld a,(draw_bg_time)
  316 D1:AA6E 4F -  -  -  	ld c,a 
  317 D1:AA6F 3E 22 -  -  	ld a, $22
  318 D1:AA71 CD E0 10 02 	call _MemSet
  319 D1:AA75 -  -  -  -  	
  320 D1:AA75 2A AC AB D1 	ld hl, (draw_buffer)
  321 D1:AA79 01 28 01 00 	ld bc,296
  322 D1:AA7D 09 -  -  -  	add hl,bc 
  323 D1:AA7E 3E 55 -  -  	ld a,$55
  324 D1:AA80 77 -  -  -  	ld (hl),a 
  325 D1:AA81 -  -  -  -  	
  326 D1:AA81 -  -  -  -  	
  327 D1:AA81 -  -  -  -  
  328 D1:AA81 -  -  -  -  
  329 D1:AA81 -  -  -  -  	
  330 D1:AA81 -  -  -  -  
  331 D1:AA81 -  -  -  -  	;swap draw buffers
  332 D1:AA81 2A 10 00 E3 	ld hl,(mpLcdBase)
  333 D1:AA85 ED 5B AC AB 
              D1 -  -  -  	ld de,(draw_buffer)
  334 D1:AA8A ED 53 10 00 
              E3 -  -  -  	ld (mpLcdBase),de
  335 D1:AA8F 22 AC AB D1 	ld (draw_buffer),hl
  336 D1:AA93 -  -  -  -  
  337 D1:AA93 -  -  -  -  
  338 D1:AA93 -  -  -  -  	;wait until finished drawing second frame
  339 D1:AA93 -  -  -  -  	;Need to check clock here, there wont always be decompression to wait for
  340 D1:AA93 -  -  -  -  main_clock_check_loop:
  341 D1:AA93 3A 01 00 F2 	ld a,($F20001);128hz clock
  342 D1:AA97 FE 03 -  -  	cp %00000011 ;check if reached 3 
  343 D1:AA99 DA 93 AA D1 	jp c,main_clock_check_loop ;msb <= 2, can continue  
  344 D1:AA9D 3A 00 00 F2 	ld a,($F20000);32768hz clock
  345 D1:AAA1 FE E8 -  -  	cp %11101000;check if reached value 
  346 D1:AAA3 DA 93 AA D1 	jp c,main_clock_check_loop ;msb = 3 and lsb < value, can continue
  347 D1:AAA7 -  -  -  -  	
  348 D1:AAA7 -  -  -  -  
  349 D1:AAA7 -  -  -  -  
  350 D1:AAA7 -  -  -  -  clear_int:      
  351 D1:AAA7 21 28 00 E3     ld hl, mpLcdIcr
  352 D1:AAAB CB D6 -  -      set 2, (hl)            ; clear interrupt
  353 D1:AAAD 21 20 00 E3     ld hl, mpLcdRis
  354 D1:AAB1 -  -  -  -  wait_int:
  355 D1:AAB1 CB 56 -  -      bit 2, (hl)
  356 D1:AAB3 28 FC -  -      jr z, wait_int  
  357 D1:AAB5 -  -  -  -  
  358 D1:AAB5 -  -  -  -  
  359 D1:AAB5 21 00 00 00 	ld hl,0
  360 D1:AAB9 -  -  -  -  	
  361 D1:AAB9 3A 02 00 F2 	ld a,($F20002)
  362 D1:AABD 67 -  -  -  	ld h,a
  363 D1:AABE 3A 01 00 F2 	ld a,($F20001)
  364 D1:AAC2 6F -  -  -  	ld l,a
  365 D1:AAC3 ED 4B BD AB 
              D1 -  -  -  	ld bc,(totalTime)
  366 D1:AAC8 09 -  -  -  	add hl,bc 
  367 D1:AAC9 22 BD AB D1 	ld (totalTime),hl 
  368 D1:AACD -  -  -  -  	
  369 D1:AACD -  -  -  -  	
  370 D1:AACD -  -  -  -  	
  371 D1:AACD -  -  -  -  	
  372 D1:AACD -  -  -  -  
  373 D1:AACD -  -  -  -  	
  374 D1:AACD -  -  -  -  
  375 D1:AACD C2 F5 A8 D1 	jp nz,main_loop
  376 D1:AAD1 -  -  -  -  		
  377 D1:AAD1 -  -  -  -  	;print debug times 
  378 D1:AAD1 21 00 00 D4 	ld hl,vRam
  379 D1:AAD5 22 10 00 E3 	ld (mpLcdBase),hl
  380 D1:AAD9 CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  381 D1:AADD 3E 2D -  -  	ld	a,lcdBpp16
  382 D1:AADF 32 18 00 E3 	ld (mpLcdCtrl),a
  383 D1:AAE3 -  -  -  -  	
  384 D1:AAE3 3E 00 -  -  	ld a,0
  385 D1:AAE5 32 95 05 D0 	ld (curRow),a
  386 D1:AAE9 32 96 05 D0 	ld (curCol),a
  387 D1:AAED 2A B7 AB D1 	ld hl,(longestFrame)
  388 D1:AAF1 CD E0 1E 02 	call _DispHL
  389 D1:AAF5 3E 01 -  -  	ld a,1
  390 D1:AAF7 32 95 05 D0 	ld (curRow),a
  391 D1:AAFB 3E 00 -  -  	ld a,0
  392 D1:AAFD 32 96 05 D0 	ld (curCol),a
  393 D1:AB01 2A BA AB D1 	ld hl,(longestFramePos)
  394 D1:AB05 CD E0 1E 02 	call _DispHL
  395 D1:AB09 3E 02 -  -  	ld a,2
  396 D1:AB0B 32 95 05 D0 	ld (curRow),a
  397 D1:AB0F 3E 00 -  -  	ld a,0
  398 D1:AB11 32 96 05 D0 	ld (curCol),a
  399 D1:AB15 2A BD AB D1 	ld hl,(totalTime)
  400 D1:AB19 CD E0 1E 02 	call _DispHL
  401 D1:AB1D 3E 03 -  -  	ld a,3
  402 D1:AB1F 32 95 05 D0 	ld (curRow),a
  403 D1:AB23 3E 00 -  -  	ld a,0
  404 D1:AB25 32 96 05 D0 	ld (curCol),a
  405 D1:AB29 2A C0 AB D1 	ld hl,(frameCount)
  406 D1:AB2D CD E0 1E 02 	call _DispHL
  407 D1:AB31 -  -  -  -  	
  408 D1:AB31 CD 95 AB D1 	call prgmpause
  409 D1:AB35 CD 95 AB D1 	call prgmpause
  410 D1:AB39 -  -  -  -  	
  411 D1:AB39 -  -  -  -  	
  412 D1:AB39 -  -  -  -  exit_prgm:
  413 D1:AB39 21 00 00 D4 	ld hl,vRam
  414 D1:AB3D 22 10 00 E3 	ld (mpLcdBase),hl
  415 D1:AB41 CD 10 08 02 	call _ClrScrnFull
  416 D1:AB45 3E 2D -  -  	ld	a,lcdBpp16
  417 D1:AB47 32 18 00 E3 	ld	(mpLcdCtrl),a
  418 D1:AB4B CD 3C 1A 02 	call _DrawStatusBar
  419 D1:AB4F -  -  -  -  	
  420 D1:AB4F FB -  -  -  	ei				; reset screen back to normal
  421 D1:AB50 C9 -  -  -  	ret			; return to os
  422 D1:AB51 -  -  -  -  
  423 D1:AB51 -  -  -  -  
  424 D1:AB51 -  -  -  -  printHL:;=================REMOVE
  425 D1:AB51 E5 -  -  -  	push hl
  426 D1:AB52 21 00 00 D4 	ld hl,vRam
  427 D1:AB56 22 10 00 E3 	ld (mpLcdBase),hl
  428 D1:AB5A CD E0 1D 02 	call _os_ClearVRAMLines	; set all of vram to index 255 (white)
  429 D1:AB5E 3E 2D -  -  	ld	a,lcdBpp16
  430 D1:AB60 32 18 00 E3 	ld (mpLcdCtrl),a
  431 D1:AB64 E1 -  -  -  	pop hl
  432 D1:AB65 CD E0 1E 02 	call _DispHL
  433 D1:AB69 FB -  -  -  	ei
  434 D1:AB6A CD 8C 0D 02 	call _GetKey
  435 D1:AB6E F3 -  -  -  	di
  436 D1:AB6F C3 39 AB D1 	jp exit_prgm
  437 D1:AB73 -  -  -  -  
  438 D1:AB73 -  -  -  -  
  439 D1:AB73 -  -  -  -  write_a_to_ram:
  440 D1:AB73 F5 -  -  -  	push af 
  441 D1:AB74 E5 -  -  -  	push hl 
  442 D1:AB75 -  -  -  -  write_a_to_ram_addr .equ $ + 1 
  443 D1:AB75 21 00 60 D4 	ld hl, $d46000
  444 D1:AB79 77 -  -  -  	ld (hl),a 
  445 D1:AB7A 23 -  -  -  	inc hl 
  446 D1:AB7B 22 76 AB D1 	ld (write_a_to_ram_addr),hl 
  447 D1:AB7F E1 -  -  -  	pop hl 
  448 D1:AB80 F1 -  -  -  	pop af 
  449 D1:AB81 C9 -  -  -  	ret 
  450 D1:AB82 -  -  -  -  	
  451 D1:AB82 -  -  -  -  write_hl_to_ram:
  452 D1:AB82 E5 -  -  -  	push hl 
  453 D1:AB83 D5 -  -  -  	push de 
  454 D1:AB84 EB -  -  -  	ex de,hl
  455 D1:AB85 2A 76 AB D1 	ld hl,(write_a_to_ram_addr)
  456 D1:AB89 ED 1F -  -  	ld (hl),de 
  457 D1:AB8B 23 -  -  -  	inc hl
  458 D1:AB8C 23 -  -  -  	inc hl
  459 D1:AB8D 23 -  -  -  	inc hl
  460 D1:AB8E 22 76 AB D1 	ld (write_a_to_ram_addr),hl
  461 D1:AB92 D1 -  -  -  	pop de 
  462 D1:AB93 E1 -  -  -  	pop hl
  463 D1:AB94 C9 -  -  -  	ret 
  464 D1:AB95 -  -  -  -  
  465 D1:AB95 -  -  -  -  prgmpause: ;for testing, interrupts code until key pressed. will destroy af register
  466 D1:AB95 F5 -  -  -  	push af
  467 D1:AB96 D5 -  -  -  	push de 
  468 D1:AB97 E5 -  -  -  	push hl 
  469 D1:AB98 08 -  -  -  	ex af,af';'
  470 D1:AB99 F5 -  -  -  	push af 
  471 D1:AB9A FB -  -  -  	ei
  472 D1:AB9B CD 8C 0D 02 	call _GetKey
  473 D1:AB9F F3 -  -  -  	di
  474 D1:ABA0 F1 -  -  -  	pop af 
  475 D1:ABA1 08 -  -  -  	ex af,af';'
  476 D1:ABA2 E1 -  -  -  	pop hl 
  477 D1:ABA3 D1 -  -  -  	pop de 
  478 D1:ABA4 F1 -  -  -  	pop af
  479 D1:ABA5 C9 -  -  -  	ret
  480 D1:ABA6 -  -  -  -  
  481 D1:ABA6 -  -  -  -  cam_pos:;y position of lowest visible line in fg layer
  482 D1:ABA6 00 00 00 -  	.dl 0
  483 D1:ABA9 -  -  -  -  bg_cam_pos: ;y position of lowest visible line in bg layer (= cam pos / 8)
  484 D1:ABA9 00 00 00 -  	.dl 0
  485 D1:ABAC -  -  -  -  
  486 D1:ABAC -  -  -  -  
  487 D1:ABAC -  -  -  -  draw_buffer:;where new frame is drawn before lcd pointer is swapped 
  488 D1:ABAC 00 2C D5 -  	.dl $d52c00
  489 D1:ABAF -  -  -  -  	
  490 D1:ABAF -  -  -  -  BG_draw_buffer: ;Address of the uppermost line of the background buffer. This is where new lines of bg are drawn to 
  491 D1:ABAF 00 00 00 -  	.dl 0
  492 D1:ABB2 -  -  -  -  BG_buffer .equ vram + (160*240) ;Start of BG buffer 
  493 D1:ABB2 -  -  -  -  
  494 D1:ABB2 -  -  -  -  
  495 D1:ABB2 -  -  -  -  ;d40000 = Decompressed sprite data
  496 D1:ABB2 -  -  -  -  ;d49600 = BG buffer
  497 D1:ABB2 -  -  -  -  ;d52c00 = Frame draw buffer 1 
  498 D1:ABB2 -  -  -  -  ;d5c200 = frame draw buffer 2
  499 D1:ABB2 -  -  -  -  
  500 D1:ABB2 -  -  -  -  ;pixelShadow .equ $D031F6 
  501 D1:ABB2 -  -  -  -  
  502 D1:ABB2 -  -  -  -  move_bg_time:
  503 D1:ABB2 00 -  -  -  	.db 0
  504 D1:ABB3 -  -  -  -  draw_bg_time:
  505 D1:ABB3 00 -  -  -  	.db 0
  506 D1:ABB4 -  -  -  -  draw_mg_time:
  507 D1:ABB4 00 -  -  -  	.db 0
  508 D1:ABB5 -  -  -  -  draw_fg_time:
  509 D1:ABB5 00 -  -  -  	.db 0
  510 D1:ABB6 -  -  -  -  decompress_time:
  511 D1:ABB6 00 -  -  -  	.db 0
  512 D1:ABB7 -  -  -  -  
  513 D1:ABB7 -  -  -  -  
  514 D1:ABB7 -  -  -  -  longestFrame:
  515 D1:ABB7 00 00 00 -  	.dl 0
  516 D1:ABBA -  -  -  -  longestFramePos:
  517 D1:ABBA 00 00 00 -  	.dl 0
  518 D1:ABBD -  -  -  -  totalTime:
  519 D1:ABBD 00 00 00 -  	.dl 0
  520 D1:ABC0 -  -  -  -  frameCount:
  521 D1:ABC0 00 00 00 -  	.dl 0
  522 D1:ABC3 -  -  -  -  hasLagged:
  523 D1:ABC3 00 00 00 -  	.dl 0
  524 D1:ABC6 -  -  -  -  
  525 D1:ABC6 -  -  -  -  sd_test_a:
  526 D1:ABC6 00 00 00 -  	.dl 0 
  527 D1:ABC9 -  -  -  -  
  528 D1:ABC9 -  -  -  -  
  529 D1:ABC9 -  -  -  -  
  530 D1:ABC9 -  -  -  -  #include "timeTesting.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\timeTesting.txt"
    1 D1:ABC9 -  -  -  -  
    2 D1:ABC9 -  -  -  -  
    3 D1:ABC9 -  -  -  -  
    4 D1:ABC9 -  -  -  -  time_test_start:
    5 D1:ABC9 -  -  -  -  
    6 D1:ABC9 -  -  -  -  		; 76543210	
    7 D1:ABC9 3E 03 -  -  	ld a,%00000011;enable, 32768hz
    8 D1:ABCB 32 30 00 F2 	ld ($F20030),a
    9 D1:ABCF -  -  -  -  	;	  fedcba98
   10 D1:ABCF 3E 02 -  -  	ld a,%00000010;count up
   11 D1:ABD1 32 31 00 F2 	ld ($F20031),a
   12 D1:ABD5 3E 00 -  -  	ld a,0
   13 D1:ABD7 32 00 00 F2 	ld ($F20000),a
   14 D1:ABDB 32 01 00 F2 	ld ($F20001),a
   15 D1:ABDF 32 02 00 F2 	ld ($F20002),a
   16 D1:ABE3 32 03 00 F2 	ld ($F20003),a
   17 D1:ABE7 -  -  -  -  	
   18 D1:ABE7 21 2C 01 00 	ld hl,300
   19 D1:ABEB -  -  -  -  	
   20 D1:ABEB -  -  -  -  time_testing_loop:
   21 D1:ABEB E5 -  -  -  	push hl
   22 D1:ABEC 01 E8 03 00 	ld bc,1000
   23 D1:ABF0 -  -  -  -  time_testing_loop_2:
   24 D1:ABF0 C5 -  -  -  	push bc
   25 D1:ABF1 -  -  -  -  	;instruction here
   26 D1:ABF1 -  -  -  -  	
   27 D1:ABF1 -  -  -  -  	
   28 D1:ABF1 -  -  -  -  	;Instruction end
   29 D1:ABF1 C1 -  -  -  	pop bc
   30 D1:ABF2 0B -  -  -  	dec bc
   31 D1:ABF3 79 -  -  -  	ld a,c
   32 D1:ABF4 B0 -  -  -  	or b
   33 D1:ABF5 C2 F0 AB D1 	jp nz,time_testing_loop_2
   34 D1:ABF9 E1 -  -  -  	pop hl
   35 D1:ABFA 2B -  -  -  	dec hl
   36 D1:ABFB 7D -  -  -  	ld a,l
   37 D1:ABFC B4 -  -  -  	or h
   38 D1:ABFD C2 EB AB D1 	jp nz,time_testing_loop
   39 D1:AC01 -  -  -  -  	
   40 D1:AC01 3A 01 00 F2 	ld a,($F20001);128hz
   41 D1:AC05 6F -  -  -  	ld l,a
   42 D1:AC06 3A 02 00 F2 	ld a,($F20002);0.5hz
   43 D1:AC0A 67 -  -  -  	ld h,a
   44 D1:AC0B C3 51 AB D1 	jp printHL;div by 128 for time
   45 D1:AC0F -  -  -  -  	
   46 D1:AC0F -  -  -  -  
   47 D1:AC0F -  -  -  -  ;60fps = .0166sec/f	
   48 D1:AC0F -  -  -  -  
   49 D1:AC0F -  -  -  -  ;1000 ldir in vram of 160*240 bytes
   50 D1:AC0F -  -  -  -  ;6.8sec, .0068 sec/instruction   0.4 of a frame
   51 D1:AC0F -  -  -  -  
   52 D1:AC0F -  -  -  -  
   53 D1:AC0F -  -  -  -  ;10,000 draw 1 bg line very complex 
   54 D1:AC0F -  -  -  -  ;9 sec  .07 of frame/instruction
   55 D1:AC0F -  -  -  -  
   56 D1:AC0F -  -  -  -  ;300k draw slow sprite 12*5 px complex
   57 D1:AC0F -  -  -  -  ;16.4RT, 14.8CLK
   58 D1:AC0F -  -  -  -  ;.00328 frames/sprite, 4.19 frames / screen
   59 D1:AC0F -  -  -  -  ;.24 screens/frame
   60 D1:AC0F -  -  -  -  
   61 D1:AC0F -  -  -  -  
   62 D1:AC0F -  -  -  -  ;300k slow sprite best case 12*5px
   63 D1:AC0F -  -  -  -  ;8.75RT 7.6clk
   64 D1:AC0F -  -  -  -  ;.00175 frames/spr 2.24 frames/screen
   65 D1:AC0F -  -  -  -  ;.446 screens/frame
   66 D1:AC0F -  -  -  -  
   67 D1:AC0F -  -  -  -  
   68 D1:AC0F -  -  -  -  
   69 D1:AC0F -  -  -  -  ;1,000,000 fast fg sprite 20*4 px
   70 D1:AC0F -  -  -  -  ;22.15RT,20.35clk
   71 D1:AC0F -  -  -  -  ;.00133 frames/spr 1.275 frames/screen
   72 D1:AC0F -  -  -  -  ;.78 screens/frame
   73 D1:AC0F -  -  -  -  
   74 D1:AC0F -  -  -  -  
   75 D1:AC0F -  -  -  -  ;for 60% of screen with fg sprites in 1 frame
   76 D1:AC0F -  -  -  -  ;.6 = .78*fast + .44*(1-fast)
   77 D1:AC0F -  -  -  -  ;.47 = FAST
   78 D1:AC0F -  -  -  -  
   79 D1:AC0F -  -  -  -  ;50% fast sprites, 50% slow sprites
   80 D1:AC0F -  -  -  -  
   81 D1:AC0F -  -  -  -  
   82 D1:AC0F -  -  -  -  
   83 D1:AC0F -  -  -  -  
   84 D1:AC0F -  -  -  -  
   85 D1:AC0F -  -  -  -  
   86 D1:AC0F -  -  -  -  
   87 D1:AC0F -  -  -  -  
   88 D1:AC0F -  -  -  -  
Listing for file "ascent.asm"
  531 D1:AC0F -  -  -  -  #include "drawBGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawBGSprite.txt"
    1 D1:AC0F -  -  -  -  
    2 D1:AC0F -  -  -  -  
    3 D1:AC0F -  -  -  -  BGMaxSpriteHeight .equ 120
    4 D1:AC0F -  -  -  -  
    5 D1:AC0F -  -  -  -  
    6 D1:AC0F -  -  -  -  draw_bg:; function for drawing background buffer to the draw buffer, clearing the frame for fg sprites to be drawn over 
    7 D1:AC0F CD 43 AC D1 	call move_bg
    8 D1:AC13 21 00 2C D5 	ld hl,$d52c00;BG_buffer_end
    9 D1:AC17 ED 4B AF AB 
              D1 -  -  -  	ld bc,(BG_draw_buffer)
   10 D1:AC1C 37 -  -  -  	scf 
   11 D1:AC1D 3F -  -  -  	ccf 
   12 D1:AC1E ED 42 -  -  	sbc hl,bc ;get number of bytes from the loop point in the buffer to end of the buffer 
   13 D1:AC20 E5 -  -  -  	push hl 
   14 D1:AC21 C1 -  -  -  	pop bc	;put into bc for ldir 
   15 D1:AC22 2A AF AB D1 	ld hl,(BG_draw_buffer)
   16 D1:AC26 ED 5B AC AB 
              D1 -  -  -  	ld de,(draw_buffer)
   17 D1:AC2B ED B0 -  -  	ldir
   18 D1:AC2D 2A AF AB D1 	ld hl,(BG_draw_buffer) ;loop point in buffer
   19 D1:AC31 01 00 96 D4 	ld bc,BG_buffer ;start of buffer
   20 D1:AC35 37 -  -  -  	scf 
   21 D1:AC36 3F -  -  -  	ccf 
   22 D1:AC37 ED 42 -  -  	sbc hl,bc ;number of bytes from start to loop point 
   23 D1:AC39 C8 -  -  -  	ret z ;if bg buffer line is at top of buffer, no second ldir
   24 D1:AC3A E5 -  -  -  	push hl 
   25 D1:AC3B C1 -  -  -  	pop bc
   26 D1:AC3C 21 00 96 D4 	ld hl,BG_buffer 
   27 D1:AC40 ED B0 -  -  	ldir 
   28 D1:AC42 C9 -  -  -  	ret 
   29 D1:AC43 -  -  -  -  	
   30 D1:AC43 -  -  -  -  	
   31 D1:AC43 -  -  -  -  ;function for moving the backgrond buffer. checks if camera has moved since the buffer was last updated.
   32 D1:AC43 -  -  -  -  ;if so will draw new lines of the bg buffer to move it up or down until it is in the correct position
   33 D1:AC43 -  -  -  -  move_bg:
   34 D1:AC43 2A A6 AB D1 	ld hl,(cam_pos);load cam pos 
   35 D1:AC47 -  -  -  -  	;call write_hl_to_ram
   36 D1:AC47 CB 3C -  -  	srl h
   37 D1:AC49 CB 1D -  -  	rr l
   38 D1:AC4B CB 3C -  -  	srl h
   39 D1:AC4D CB 1D -  -  	rr l
   40 D1:AC4F CB 3C -  -  	srl h
   41 D1:AC51 CB 1D -  -  	rr l	;div by 8 to get location of BG layer
   42 D1:AC53 -  -  -  -  	;hl holds bg cam pos, lowest visible line of bg layer 
   43 D1:AC53 ED 4B A9 AB 
              D1 -  -  -  	ld bc,(bg_cam_pos);previous BG cam location 
   44 D1:AC58 37 -  -  -  	scf
   45 D1:AC59 3F -  -  -  	ccf
   46 D1:AC5A ED 42 -  -  	sbc hl,bc ;compare to the updated location
   47 D1:AC5C C8 -  -  -  	ret z ;if 0, the bg buffer does not need to be moved 
   48 D1:AC5D DA 69 AC D1 	jp c,move_bg_down ;if previous cam pos id above current pos, screen has moved down, go to move bg down 1 line
   49 D1:AC61 CD B8 AC D1 	call inc_bg ;otherwise, screen has moved up, need to move bg up 1 line
   50 D1:AC65 C3 43 AC D1 	jp move_bg ;repeat until bg is in correct pos
   51 D1:AC69 -  -  -  -  move_bg_down:
   52 D1:AC69 CD 71 AC D1 	call dec_bg
   53 D1:AC6D C3 43 AC D1 	jp move_bg ;repeat until bg is in correct pos
   54 D1:AC71 -  -  -  -  
   55 D1:AC71 -  -  -  -  
   56 D1:AC71 -  -  -  -  dec_bg:;move bg cam down 1px 
   57 D1:AC71 -  -  -  -  
   58 D1:AC71 -  -  -  -  	
   59 D1:AC71 -  -  -  -  	;Testibng
   60 D1:AC71 -  -  -  -  	;ld a,$AD
   61 D1:AC71 -  -  -  -  	;call write_a_to_ram
   62 D1:AC71 -  -  -  -  	
   63 D1:AC71 -  -  -  -  
   64 D1:AC71 -  -  -  -  	;write on draw buffer line 
   65 D1:AC71 2A AF AB D1 	ld hl,(BG_draw_buffer) ;topmost line of bg buffer will be overwritten with new bottom line 
   66 D1:AC75 22 C4 AD D1 	ld (dbgl_vram_line_start),hl 
   67 D1:AC79 -  -  -  -  	
   68 D1:AC79 2A A9 AB D1 	ld hl,(bg_cam_pos)
   69 D1:AC7D 2B -  -  -  	dec hl ;dec bg cam pos by 1 
   70 D1:AC7E 22 A9 AB D1 	ld (bg_cam_pos),hl 
   71 D1:AC82 -  -  -  -  	
   72 D1:AC82 01 00 00 00 	ld bc,0 ;clear bc reg
   73 D1:AC86 4C -  -  -  	ld c,h;bottom y value msb 
   74 D1:AC87 7D -  -  -  	ld a,l ;bottom y value lsb 
   75 D1:AC88 21 1E BA D1 	ld hl,BG_Data_frame_table
   76 D1:AC8C 0C -  -  -  	inc c 
   77 D1:AC8D 09 -  -  -  	add hl,bc 
   78 D1:AC8E 09 -  -  -  	add hl,bc 
   79 D1:AC8F 09 -  -  -  	add hl,bc ;add 3*frame number to get to correct frame pointer
   80 D1:AC90 ED 27 -  -  	ld hl,(hl) ;hl now points to bg frame data 
   81 D1:AC92 CD 56 AD D1 	call draw_bg_line
   82 D1:AC96 -  -  -  -  	
   83 D1:AC96 -  -  -  -  
   84 D1:AC96 -  -  -  -  	;move buffer pos
   85 D1:AC96 2A AF AB D1 	ld hl,(BG_draw_buffer)
   86 D1:AC9A 01 60 2B D5 	ld bc,$d52b60;BG_buffer_end, start of last line of vram buffer 
   87 D1:AC9E 37 -  -  -  	scf 
   88 D1:AC9F 3F -  -  -  	ccf 
   89 D1:ACA0 ED 42 -  -  	sbc hl,bc ;compare to current line 
   90 D1:ACA2 2A AF AB D1 	ld hl,(BG_draw_buffer)
   91 D1:ACA6 C2 AE AC D1 	jp nz,dec_bg_bottom_skip
   92 D1:ACAA 21 60 95 D4 	ld hl,$d49560;1 row above top of bg buffer 
   93 D1:ACAE -  -  -  -  dec_bg_bottom_skip:
   94 D1:ACAE 01 A0 00 00 	ld bc,160 
   95 D1:ACB2 09 -  -  -  	add hl,bc
   96 D1:ACB3 22 AF AB D1 	ld (BG_draw_buffer),hl 
   97 D1:ACB7 C9 -  -  -  	ret
   98 D1:ACB8 -  -  -  -  
   99 D1:ACB8 -  -  -  -  
  100 D1:ACB8 -  -  -  -  inc_bg:;move cam up 
  101 D1:ACB8 -  -  -  -  
  102 D1:ACB8 -  -  -  -  	
  103 D1:ACB8 -  -  -  -  	;Testibng
  104 D1:ACB8 -  -  -  -  	;ld a,$00
  105 D1:ACB8 -  -  -  -  	;call write_a_to_ram
  106 D1:ACB8 -  -  -  -  	;call prgmpause
  107 D1:ACB8 -  -  -  -  
  108 D1:ACB8 2A AF AB D1 	ld hl,(BG_draw_buffer)
  109 D1:ACBC 01 00 96 D4 	ld bc,BG_buffer
  110 D1:ACC0 37 -  -  -  	scf 
  111 D1:ACC1 3F -  -  -  	ccf 
  112 D1:ACC2 ED 42 -  -  	sbc hl,bc ;compare current drawing line to top of bg buffer 
  113 D1:ACC4 2A AF AB D1 	ld hl,(BG_draw_buffer)
  114 D1:ACC8 C2 D0 AC D1 	jp nz,inc_bg_top_skip ;if they are not equal, continue
  115 D1:ACCC 21 00 2C D5 	ld hl,$d52c00;otherwise need to wrap back to bottom of buffer, set hl to 1 below bottom of bg buffer 
  116 D1:ACD0 -  -  -  -  inc_bg_top_skip:
  117 D1:ACD0 01 A0 00 00 	ld bc,160 
  118 D1:ACD4 37 -  -  -  	scf
  119 D1:ACD5 3F -  -  -  	ccf 
  120 D1:ACD6 ED 42 -  -  	sbc hl,bc ;move up line, hl now points to line drawing location in vram 
  121 D1:ACD8 22 AF AB D1 	ld (BG_draw_buffer),hl 
  122 D1:ACDC 22 C4 AD D1 	ld (dbgl_vram_line_start),hl 
  123 D1:ACE0 2A A9 AB D1 	ld hl,(bg_cam_pos)
  124 D1:ACE4 23 -  -  -  	inc hl 
  125 D1:ACE5 22 A9 AB D1 	ld (bg_cam_pos),hl ;incremnet cam pos 
  126 D1:ACE9 -  -  -  -  	;call write_hl_to_ram
  127 D1:ACE9 01 EF 00 00 	ld bc,239
  128 D1:ACED 09 -  -  -  	add hl,bc ;gets uppermost visible line y value in bg layer
  129 D1:ACEE 4C -  -  -  	ld c,h;cam pos msb 
  130 D1:ACEF 7D -  -  -  	ld a,l ;a holds line number in target frame 
  131 D1:ACF0 21 1E BA D1 	ld hl,BG_Data_frame_table
  132 D1:ACF4 0C -  -  -  	inc c ;inc to get to upper frame 
  133 D1:ACF5 09 -  -  -  	add hl,bc 
  134 D1:ACF6 09 -  -  -  	add hl,bc 
  135 D1:ACF7 09 -  -  -  	add hl,bc 
  136 D1:ACF8 ED 27 -  -  	ld hl,(hl)
  137 D1:ACFA CD 56 AD D1 	call draw_bg_line
  138 D1:ACFE C9 -  -  -  	ret
  139 D1:ACFF -  -  -  -  	
  140 D1:ACFF -  -  -  -  
  141 D1:ACFF -  -  -  -  
  142 D1:ACFF -  -  -  -  
  143 D1:ACFF -  -  -  -  
  144 D1:ACFF -  -  -  -  setup_bg: ;Draws entire BG buffer when loading game 
  145 D1:ACFF 2A A6 AB D1 	ld hl,(cam_pos)
  146 D1:AD03 CB 3C -  -  	srl h
  147 D1:AD05 CB 1D -  -  	rr l
  148 D1:AD07 CB 3C -  -  	srl h
  149 D1:AD09 CB 1D -  -  	rr l ;div by 4
  150 D1:AD0B -  -  -  -  	;hl holds bg cam pos 
  151 D1:AD0B 22 A9 AB D1 	ld (bg_cam_pos),hl
  152 D1:AD0F -  -  -  -  	
  153 D1:AD0F 01 EF 00 00 	ld bc,239
  154 D1:AD13 09 -  -  -  	add hl,bc;hl holds y position of uppermost visible line in bg layer 
  155 D1:AD14 -  -  -  -  	
  156 D1:AD14 23 -  -  -  	inc hl;to be dec in loop
  157 D1:AD15 E5 -  -  -  	push hl ;save uppermost line y val
  158 D1:AD16 21 00 96 D4 	ld hl,BG_buffer ;start of bg drawing buffer 
  159 D1:AD1A 22 AF AB D1 	ld (BG_draw_buffer),hl ;set current bg line drawing location 
  160 D1:AD1E E5 -  -  -  	push hl 
  161 D1:AD1F -  -  -  -  	
  162 D1:AD1F 3E F0 -  -  	ld a,240 ;num loops
  163 D1:AD21 32 49 AD D1 	ld (setup_bg_loop_count),a
  164 D1:AD25 -  -  -  -  setup_bg_loop:
  165 D1:AD25 -  -  -  -  
  166 D1:AD25 E1 -  -  -  	pop hl;vram draw pos, next line of bg drawn here 
  167 D1:AD26 22 C4 AD D1 	ld (dbgl_vram_line_start),hl ;set drawing pos 
  168 D1:AD2A 01 A0 00 00 	ld bc,160
  169 D1:AD2E 09 -  -  -  	add hl,bc 
  170 D1:AD2F EB -  -  -  	ex de,hl ;put next vram pos in de 
  171 D1:AD30 E1 -  -  -  	pop hl;uppermost line y val
  172 D1:AD31 2B -  -  -  	dec hl ;dec line y value (move to next lowest line)
  173 D1:AD32 E5 -  -  -  	push hl;push uppermost line y val
  174 D1:AD33 D5 -  -  -  	push de ;push vram pos 
  175 D1:AD34 01 00 00 00 	ld bc,0
  176 D1:AD38 4C -  -  -  	ld c,h;cam pos msb 
  177 D1:AD39 7D -  -  -  	ld a,l ;a holds line number in current frame 
  178 D1:AD3A 21 1E BA D1 	ld hl,BG_Data_frame_table
  179 D1:AD3E 0C -  -  -  	inc c ;add 1 to get to upper frame
  180 D1:AD3F 09 -  -  -  	add hl,bc 
  181 D1:AD40 09 -  -  -  	add hl,bc 
  182 D1:AD41 09 -  -  -  	add hl,bc 
  183 D1:AD42 ED 27 -  -  	ld hl,(hl) ;hl now points to upper frame data 
  184 D1:AD44 CD 56 AD D1 	call draw_bg_line ;hl pts to upper frame data, a = line num in target frame
  185 D1:AD48 -  -  -  -  	
  186 D1:AD48 -  -  -  -  setup_bg_loop_count .equ $ + 1
  187 D1:AD48 3E 00 -  -  	ld a,0
  188 D1:AD4A 3D -  -  -  	dec a ;dec loop counter
  189 D1:AD4B 32 49 AD D1 	ld (setup_bg_loop_count),a
  190 D1:AD4F C2 25 AD D1 	jp nz,setup_bg_loop 
  191 D1:AD53 E1 -  -  -  	pop hl ;pop vram pos 
  192 D1:AD54 E1 -  -  -  	pop hl ;pop current line number 
  193 D1:AD55 C9 -  -  -  	ret 
  194 D1:AD56 -  -  -  -  
  195 D1:AD56 -  -  -  -  
  196 D1:AD56 -  -  -  -  
  197 D1:AD56 -  -  -  -  
  198 D1:AD56 -  -  -  -  
  199 D1:AD56 -  -  -  -  
  200 D1:AD56 -  -  -  -  ;hl = upper data frame, a = line number in target frame
  201 D1:AD56 -  -  -  -  ;for drawing BG, only 1 line is drawn at a time.
  202 D1:AD56 -  -  -  -  ;therefore only check sprites in the above frame that may extend downwards, 
  203 D1:AD56 -  -  -  -  ;and the sprites in the target frame which contains the y position of the line being drawn
  204 D1:AD56 -  -  -  -  ;set dbgl_vram_line_start before calling 
  205 D1:AD56 -  -  -  -  draw_bg_line:
  206 D1:AD56 -  -  -  -  	
  207 D1:AD56 -  -  -  -  	
  208 D1:AD56 32 A2 AD D1 	ld (dbgl_line_num),a ;write line num to required positions 
  209 D1:AD5A 32 B1 B5 D1 	ld (dfgs_cam_height_1), a ;Used to check if upper frame should be considered
  210 D1:AD5E ED 44 -  -  	neg 
  211 D1:AD60 32 8E AD D1 	ld (dbgl_lines_to_top_of_target_frame),a 
  212 D1:AD64 -  -  -  -  	
  213 D1:AD64 E5 -  -  -  	push hl ;upper frame sprite table pointer 
  214 D1:AD65 3E FF -  -  	ld a,$FF ;Set all of line to FF to clear it with color 16
  215 D1:AD67 01 A0 00 00 	ld bc,160
  216 D1:AD6B 2A C4 AD D1 	ld hl,(dbgl_vram_line_start) ;Drawing address of line 
  217 D1:AD6F CD E0 10 02 	call _MemSet ;Clear all of line 
  218 D1:AD73 E1 -  -  -  	pop hl ;return upper frame ptr 
  219 D1:AD74 -  -  -  -  
  220 D1:AD74 -  -  -  -  	
  221 D1:AD74 3E DA -  -  	ld a,%11011010;jp c
  222 D1:AD76 32 E3 B5 D1 	ld (dfgs_bg_mode_1),a 
  223 D1:AD7A 32 47 B6 D1 	ld (dfgs_bg_mode_2),a 
  224 D1:AD7E -  -  -  -  	
  225 D1:AD7E 3E FF -  -  	ld a,255;
  226 D1:AD80 32 E0 B6 D1 	ld (dfgs_cam_height_3),a ;Will skip drawing of lower frame
  227 D1:AD84 32 FA B6 D1 	ld (dfgs_cam_height_4),a
  228 D1:AD88 -  -  -  -  	
  229 D1:AD88 -  -  -  -  
  230 D1:AD88 -  -  -  -  	
  231 D1:AD88 CD 98 B5 D1 	call draw_fg_sprites
  232 D1:AD8C -  -  -  -  	
  233 D1:AD8C C9 -  -  -  	ret
  234 D1:AD8D -  -  -  -  	
  235 D1:AD8D -  -  -  -  
  236 D1:AD8D -  -  -  -  
  237 D1:AD8D -  -  -  -  	;a = y value of sprite in upper frame, hl pts to height
  238 D1:AD8D -  -  -  -  dbgl_draw_upper_sprite:	
  239 D1:AD8D -  -  -  -  
  240 D1:AD8D -  -  -  -  	;push af 
  241 D1:AD8D -  -  -  -  	;call write_a_to_ram
  242 D1:AD8D -  -  -  -  	;ld a,(hl)
  243 D1:AD8D -  -  -  -  	;call write_a_to_ram
  244 D1:AD8D -  -  -  -  	;ld a,$BC
  245 D1:AD8D -  -  -  -  	;call write_a_to_ram
  246 D1:AD8D -  -  -  -  	;pop af
  247 D1:AD8D -  -  -  -  	
  248 D1:AD8D -  -  -  -  	;call write_hl_to_ram
  249 D1:AD8D -  -  -  -  	
  250 D1:AD8D -  -  -  -  	;call prgmpause
  251 D1:AD8D -  -  -  -  
  252 D1:AD8D -  -  -  -  dbgl_lines_to_top_of_target_frame .equ $ + 1
  253 D1:AD8D C6 00 -  -  	add a,0 ;a holds line number in sprite to draw (0 indexed)
  254 D1:AD8F -  -  -  -  	;call write_a_to_ram
  255 D1:AD8F DA 9D AD D1 	jp c,dbgl_upper_skip_sprite ; if line to draw >255, skip (happens if sprite has large y val)
  256 D1:AD93 BE -  -  -  	cp (hl) ;compare to sprite height 
  257 D1:AD94 D2 9D AD D1 	jp nc, dbgl_upper_skip_sprite; Skip drawing, sprite does not extend to target line 
  258 D1:AD98 -  -  -  -  	;Sprite is to be drawn, a holds line number 
  259 D1:AD98 CD B5 AD D1 	call dbgl_setup_and_draw ;draw sprite line 
  260 D1:AD9C -  -  -  -  	;hl pts to next sprite y
  261 D1:AD9C C9 -  -  -  	ret
  262 D1:AD9D -  -  -  -  	
  263 D1:AD9D -  -  -  -  dbgl_upper_skip_sprite:
  264 D1:AD9D 23 -  -  -  	inc hl ;to x 
  265 D1:AD9E 23 -  -  -  	inc hl ;to index 
  266 D1:AD9F 23 -  -  -  	inc hl ;to next y
  267 D1:ADA0 C9 -  -  -  	ret
  268 D1:ADA1 -  -  -  -  	
  269 D1:ADA1 -  -  -  -  
  270 D1:ADA1 -  -  -  -  	;a holds y in frame, (hl) = height
  271 D1:ADA1 -  -  -  -  dbgl_draw_lower_sprite:
  272 D1:ADA1 -  -  -  -  	
  273 D1:ADA1 -  -  -  -  	;call write_a_to_ram
  274 D1:ADA1 -  -  -  -  	;call prgmpause
  275 D1:ADA1 -  -  -  -  	;call write_hl_to_ram
  276 D1:ADA1 -  -  -  -  	
  277 D1:ADA1 -  -  -  -  	;call prgmpause
  278 D1:ADA1 -  -  -  -  	
  279 D1:ADA1 -  -  -  -  dbgl_line_num .equ $ + 1
  280 D1:ADA1 D6 00 -  -  	sub 0;subtract line num 
  281 D1:ADA3 DA B1 AD D1 	jp c, dbgl_lower_skip_sprite ;if carry, line number was above sprite y pos 
  282 D1:ADA7 -  -  -  -  	;if a is 0, we draw first line of sprite, if a is 1, draw second... a holds line num of sprite to draw (0 indexed) 
  283 D1:ADA7 BE -  -  -  	cp (hl) ;compare to sprite height
  284 D1:ADA8 D2 B1 AD D1 	jp nc, dbgl_lower_skip_sprite; Skip drawing, sprite does not extend to target line 
  285 D1:ADAC -  -  -  -  	
  286 D1:ADAC -  -  -  -  	;Sprite is to be drawn, a holds line number 
  287 D1:ADAC CD B5 AD D1 	call dbgl_setup_and_draw ;draw sprite line 
  288 D1:ADB0 -  -  -  -  	;hl pts to next y
  289 D1:ADB0 C9 -  -  -  	ret
  290 D1:ADB1 -  -  -  -  	
  291 D1:ADB1 -  -  -  -  dbgl_lower_skip_sprite:
  292 D1:ADB1 -  -  -  -  
  293 D1:ADB1 -  -  -  -  	;ld a,$AA 
  294 D1:ADB1 -  -  -  -  	;call write_a_to_ram
  295 D1:ADB1 -  -  -  -  	;call prgmpause
  296 D1:ADB1 -  -  -  -  	
  297 D1:ADB1 23 -  -  -  	inc hl ;to x 
  298 D1:ADB2 23 -  -  -  	inc hl ;to index 
  299 D1:ADB3 23 -  -  -  	inc hl ;to y
  300 D1:ADB4 C9 -  -  -  	ret
  301 D1:ADB5 -  -  -  -  
  302 D1:ADB5 -  -  -  -  
  303 D1:ADB5 -  -  -  -  
  304 D1:ADB5 -  -  -  -  
  305 D1:ADB5 -  -  -  -  ;a holds 0 indexed line num of sprite, (hl) = height ,bc,de = 0
  306 D1:ADB5 -  -  -  -  ;returns hl holds next y val
  307 D1:ADB5 -  -  -  -  dbgl_setup_and_draw:
  308 D1:ADB5 -  -  -  -  
  309 D1:ADB5 -  -  -  -  	;push af 
  310 D1:ADB5 -  -  -  -  	;ld a,$AB 
  311 D1:ADB5 -  -  -  -  	;call write_a_to_ram
  312 D1:ADB5 -  -  -  -  	;call write_hl_to_ram
  313 D1:ADB5 -  -  -  -  	;pop af 
  314 D1:ADB5 -  -  -  -  	;call write_a_to_ram
  315 D1:ADB5 -  -  -  -  	
  316 D1:ADB5 -  -  -  -  	;call prgmpause
  317 D1:ADB5 -  -  -  -  
  318 D1:ADB5 01 00 00 00 	ld bc,0
  319 D1:ADB9 11 00 00 00 	ld de,0
  320 D1:ADBD -  -  -  -  	
  321 D1:ADBD 23 -  -  -  	inc hl;to x pos
  322 D1:ADBE 5E -  -  -  	ld e,(hl);e holds x pos 
  323 D1:ADBF 23 -  -  -  	inc hl 
  324 D1:ADC0 4E -  -  -  	ld c,(hl);sprite index 
  325 D1:ADC1 23 -  -  -  	inc hl ;next y
  326 D1:ADC2 E5 -  -  -  	push hl ;save location in data 
  327 D1:ADC3 -  -  -  -  dbgl_vram_line_start .equ $ + 1	
  328 D1:ADC3 21 00 00 00 	ld hl,0
  329 D1:ADC7 19 -  -  -  	add hl,de;add x pos
  330 D1:ADC8 -  -  -  -  dbgl_sg_x_origin .equ $ + 1
  331 D1:ADC8 1E 00 -  -  	ld e,0 
  332 D1:ADCA 19 -  -  -  	add hl,de;add x pos
  333 D1:ADCB -  -  -  -  	
  334 D1:ADCB EB -  -  -  	ex de,hl;put vram pos into de 
  335 D1:ADCC -  -  -  -  	
  336 D1:ADCC 26 A0 -  -  	ld h,160
  337 D1:ADCE 6F -  -  -  	ld l,a ;number of lines to subtract 
  338 D1:ADCF ED 6C -  -  	mlt hl;bytes to subtract from vram
  339 D1:ADD1 37 -  -  -  	scf 
  340 D1:ADD2 3F -  -  -  	ccf
  341 D1:ADD3 EB -  -  -  	ex de,hl;hl holds initial vram pos, de is lines to subtract  
  342 D1:ADD4 ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  343 D1:ADD6 EB -  -  -  	ex de,hl;put in de
  344 D1:ADD7 -  -  -  -  	
  345 D1:ADD7 -  -  -  -  dbgl_sprite_pointers .equ $ + 1
  346 D1:ADD7 21 00 00 00 	ld hl,0
  347 D1:ADDB 09 -  -  -  	add hl,bc
  348 D1:ADDC 09 -  -  -  	add hl,bc 
  349 D1:ADDD 09 -  -  -  	add hl,bc ;hl points to sprite data pointer 
  350 D1:ADDE ED 27 -  -  	ld hl,(hl);hl holds sprite data
  351 D1:ADE0 -  -  -  -  
  352 D1:ADE0 -  -  -  -  
  353 D1:ADE0 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  354 D1:ADE2 CA EE AD D1 	jp z,dbgl_fast_sprite ;if even address, fast sprite 
  355 D1:ADE6 CD C0 AE D1 	call draw_slow_sprite_single_line
  356 D1:ADEA C3 F2 AD D1 	jp dbgl_slow_sprite
  357 D1:ADEE -  -  -  -  dbgl_fast_sprite:
  358 D1:ADEE CD 42 AE D1 	call draw_fast_sprite_single_line
  359 D1:ADF2 -  -  -  -  dbgl_slow_sprite:
  360 D1:ADF2 -  -  -  -  	
  361 D1:ADF2 11 00 00 00 	ld de,0;clear de 
  362 D1:ADF6 01 00 00 00 	ld bc,0
  363 D1:ADFA E1 -  -  -  	pop hl;back to data
  364 D1:ADFB C9 -  -  -  	ret
  365 D1:ADFC -  -  -  -  	
  366 D1:ADFC -  -  -  -  
  367 D1:ADFC -  -  -  -  
  368 D1:ADFC -  -  -  -  
  369 D1:ADFC -  -  -  -  
  370 D1:ADFC -  -  -  -  
  371 D1:ADFC -  -  -  -  
  372 D1:ADFC -  -  -  -  
  373 D1:ADFC -  -  -  -  
  374 D1:ADFC -  -  -  -  
  375 D1:ADFC -  -  -  -  
  376 D1:ADFC -  -  -  -  
  377 D1:ADFC -  -  -  -  
  378 D1:ADFC -  -  -  -  
  379 D1:ADFC -  -  -  -  
  380 D1:ADFC -  -  -  -  
  381 D1:ADFC -  -  -  -  
  382 D1:ADFC -  -  -  -  
  383 D1:ADFC -  -  -  -  
Listing for file "ascent.asm"
  532 D1:ADFC -  -  -  -  #include "drawFGSprite.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFGSprite.txt"
    1 D1:ADFC -  -  -  -  
    2 D1:ADFC -  -  -  -  ;hl = data, a = lines to draw. returns a = num loops to draw, hl = 1 before first gap length
    3 D1:ADFC -  -  -  -  setup_sprite_bottom_cut:
    4 D1:ADFC 1B -  -  -  	dec de
    5 D1:ADFD 01 00 00 00 	ld bc,0 ;clear bc
    6 D1:AE01 4F -  -  -  	ld c,a;c = lines to draw
    7 D1:AE02 E5 -  -  -  	push hl ;save data 
    8 D1:AE03 09 -  -  -  	add hl,bc
    9 D1:AE04 7E -  -  -  	ld a,(hl);num loops to draw
   10 D1:AE05 E1 -  -  -  	pop hl ;return to start of data
   11 D1:AE06 4E -  -  -  	ld c,(hl) ;height
   12 D1:AE07 09 -  -  -  	add hl,bc ;hl now points to 1 before first gap length
   13 D1:AE08 C9 -  -  -  	ret 
   14 D1:AE09 -  -  -  -  
   15 D1:AE09 -  -  -  -  setup_sprite_top_cut:
   16 D1:AE09 1B -  -  -  	dec de ;move to correct vram pos 
   17 D1:AE0A 01 00 00 00 	ld bc,0
   18 D1:AE0E 4F -  -  -  	ld c,a ;lines to skip (1 indexed)
   19 D1:AE0F D5 -  -  -  	push de
   20 D1:AE10 11 00 00 00 	ld de,0
   21 D1:AE14 E5 -  -  -  	push hl
   22 D1:AE15 5E -  -  -  	ld e,(hl);height
   23 D1:AE16 09 -  -  -  	add hl,bc;hl points to num skip loops 
   24 D1:AE17 4E -  -  -  	ld c,(hl);c holds num skip loops
   25 D1:AE18 E1 -  -  -  	pop hl;start of data
   26 D1:AE19 19 -  -  -  	add hl,de
   27 D1:AE1A 46 -  -  -  	ld b,(hl);total number of loops
   28 D1:AE1B 23 -  -  -  	inc hl;hl is pixel data
   29 D1:AE1C D1 -  -  -  	pop de;back to vram
   30 D1:AE1D 79 -  -  -  	ld a,c;loops to skip
   31 D1:AE1E C9 -  -  -  	ret 
   32 D1:AE1F -  -  -  -  
   33 D1:AE1F -  -  -  -  ;hl = data, a = line number to draw. returns a = c = number of loops to skip, b = loops to skip + loops to draw. HL = gap length  
   34 D1:AE1F -  -  -  -  setup_sprite_single_line: ;sets up for single line drawing mode 
   35 D1:AE1F 1B -  -  -  	dec de
   36 D1:AE20 01 00 00 00 	ld bc,0
   37 D1:AE24 4F -  -  -  	ld c,a ;line to draw
   38 D1:AE25 D5 -  -  -  	push de ;save vram 
   39 D1:AE26 11 00 00 00 	ld de,0
   40 D1:AE2A E5 -  -  -  	push hl
   41 D1:AE2B 5E -  -  -  	ld e,(hl);height
   42 D1:AE2C 09 -  -  -  	add hl,bc;hl points to num skip loops 
   43 D1:AE2D 4E -  -  -  	ld c,(hl);c holds num skip loops
   44 D1:AE2E 23 -  -  -  	inc hl 
   45 D1:AE2F 46 -  -  -  	ld b,(hl);b holds num loops after drawn line 
   46 D1:AE30 E1 -  -  -  	pop hl;start of data
   47 D1:AE31 19 -  -  -  	add hl,de
   48 D1:AE32 23 -  -  -  	inc hl;hl is pixel data points to gap length 
   49 D1:AE33 D1 -  -  -  	pop de;back to vram
   50 D1:AE34 79 -  -  -  	ld a,c;loops to skip
   51 D1:AE35 C9 -  -  -  	ret 
   52 D1:AE36 -  -  -  -  
   53 D1:AE36 -  -  -  -  
   54 D1:AE36 -  -  -  -  
   55 D1:AE36 -  -  -  -  draw_fast_sprite_bottom_cut_from_line:
   56 D1:AE36 3C -  -  -  	inc a 
   57 D1:AE37 -  -  -  -  ;de = vram , hl = data, a = number lines to draw
   58 D1:AE37 -  -  -  -  draw_fast_sprite_bottom_cut:
   59 D1:AE37 CD FC AD D1 	call setup_sprite_bottom_cut
   60 D1:AE3B 23 -  -  -  	inc hl ;hl points to gap length 
   61 D1:AE3C 4E -  -  -  	ld c,(hl);load alpha length
   62 D1:AE3D EB -  -  -  	ex de,hl;hl is vram, de is data
   63 D1:AE3E C3 85 AE D1 	jp dfgs_loop
   64 D1:AE42 -  -  -  -  
   65 D1:AE42 -  -  -  -  
   66 D1:AE42 -  -  -  -  ;de = vram , hl = data, a = line to draw (starting from 0)
   67 D1:AE42 -  -  -  -  draw_fast_sprite_single_line:
   68 D1:AE42 B7 -  -  -  	or a 
   69 D1:AE43 CA 36 AE D1 	jp z,draw_fast_sprite_bottom_cut_from_line ; if a is 0, same as drawing bottom cut
   70 D1:AE47 -  -  -  -  	;we know a is not 0 here 
   71 D1:AE47 CD 1F AE D1 	call setup_sprite_single_line
   72 D1:AE4B -  -  -  -  	
   73 D1:AE4B C5 -  -  -  	push bc;save total and skipped loops
   74 D1:AE4C 01 00 00 00 	ld bc,0
   75 D1:AE50 -  -  -  -  	
   76 D1:AE50 C3 5D AE D1 	jp draw_fast_sprite_top_loop 
   77 D1:AE54 -  -  -  -  
   78 D1:AE54 -  -  -  -  
   79 D1:AE54 -  -  -  -  
   80 D1:AE54 -  -  -  -  ;de = vram , hl = data, a = top lines to skip (1 indexed)
   81 D1:AE54 -  -  -  -  draw_fast_sprite_top_cut:
   82 D1:AE54 CD 09 AE D1 	call setup_sprite_top_cut
   83 D1:AE58 C5 -  -  -  	push bc ;save total and skipped loops 
   84 D1:AE59 01 00 00 00 	ld bc,0 
   85 D1:AE5D -  -  -  -  	
   86 D1:AE5D -  -  -  -  draw_fast_sprite_top_loop:; need to follow through gap and drawn lengths to find start of drawing
   87 D1:AE5D 4E -  -  -  	ld c,(hl);load with first gap length	
   88 D1:AE5E EB -  -  -  	ex de,hl;hl is vram
   89 D1:AE5F 09 -  -  -  	add hl,bc
   90 D1:AE60 EB -  -  -  	ex de,hl;hl is data
   91 D1:AE61 23 -  -  -  	inc hl
   92 D1:AE62 4E -  -  -  	ld c,(hl);ldir length
   93 D1:AE63 09 -  -  -  	add hl,bc;add ldir length
   94 D1:AE64 EB -  -  -  	ex de,hl;hl is vram
   95 D1:AE65 09 -  -  -  	add hl,bc;add ldir length
   96 D1:AE66 13 -  -  -  	inc de
   97 D1:AE67 EB -  -  -  	ex de,hl;hl is data
   98 D1:AE68 3D -  -  -  	dec a
   99 D1:AE69 C2 5D AE D1 	jp nz,draw_fast_sprite_top_loop
  100 D1:AE6D -  -  -  -  	
  101 D1:AE6D -  -  -  -  	
  102 D1:AE6D C1 -  -  -  	pop bc ;b is total loops, c is skipped loops 
  103 D1:AE6E 78 -  -  -  	ld a,b
  104 D1:AE6F 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
  105 D1:AE70 -  -  -  -  		
  106 D1:AE70 01 00 00 00 	ld bc,0
  107 D1:AE74 4E -  -  -  	ld c,(hl);load c with gap length
  108 D1:AE75 EB -  -  -  	ex de,hl ;setup for loop 
  109 D1:AE76 C3 85 AE D1 	jp dfgs_loop
  110 D1:AE7A -  -  -  -  
  111 D1:AE7A -  -  -  -  
  112 D1:AE7A -  -  -  -  ;de = vram , hl = data
  113 D1:AE7A -  -  -  -  draw_fast_sprite_full:
  114 D1:AE7A 1B -  -  -  	dec de
  115 D1:AE7B 01 00 00 00 	ld bc,0
  116 D1:AE7F 4E -  -  -  	ld c,(hl);height
  117 D1:AE80 09 -  -  -  	add hl,bc
  118 D1:AE81 7E -  -  -  	ld a,(hl);total loops
  119 D1:AE82 23 -  -  -  	inc hl
  120 D1:AE83 4E -  -  -  	ld c,(hl);first gap length
  121 D1:AE84 EB -  -  -  	ex de,hl
  122 D1:AE85 -  -  -  -  ;a = num loops, c = alphaLength,hl = vram
  123 D1:AE85 -  -  -  -  dfgs_loop:;gap, colors
  124 D1:AE85 09 -  -  -  	add hl,bc;add alpha length
  125 D1:AE86 EB -  -  -  	ex de,hl;swap, hl is data, de is vram
  126 D1:AE87 23 -  -  -  	inc hl
  127 D1:AE88 4E -  -  -  	ld c,(hl);get ldir length
  128 D1:AE89 23 -  -  -  	inc hl
  129 D1:AE8A ED B0 -  -  	ldir
  130 D1:AE8C 4E -  -  -  	ld c,(hl);load c with next alpha length
  131 D1:AE8D EB -  -  -  	ex de,hl;swap, hl is vram
  132 D1:AE8E 3D -  -  -  	dec a
  133 D1:AE8F C2 85 AE D1 	jp nz,dfgs_loop
  134 D1:AE93 C9 -  -  -  	ret
  135 D1:AE94 -  -  -  -  	
  136 D1:AE94 -  -  -  -  	
  137 D1:AE94 -  -  -  -  	
  138 D1:AE94 -  -  -  -  	
  139 D1:AE94 -  -  -  -  
  140 D1:AE94 -  -  -  -  
  141 D1:AE94 -  -  -  -  ;hl = data, de = vram
  142 D1:AE94 -  -  -  -  draw_slow_sprite_full:
  143 D1:AE94 01 00 00 00 	ld bc,0
  144 D1:AE98 4E -  -  -  	ld c,(hl);height
  145 D1:AE99 09 -  -  -  	add hl,bc
  146 D1:AE9A 7E -  -  -  	ld a,(hl);num loops
  147 D1:AE9B 1B -  -  -  	dec de ;correct vram pos 
  148 D1:AE9C D9 -  -  -  	exx;into shadow 
  149 D1:AE9D 47 -  -  -  	ld b,a ;number of loops
  150 D1:AE9E -  -  -  -  	;hl = (gap length) -1 de = vram-1 b' = loops
  151 D1:AE9E -  -  -  -  dsfgs_line_loop:
  152 D1:AE9E D9 -  -  -  	exx;out of shadow
  153 D1:AE9F 23 -  -  -  	inc hl;gap length
  154 D1:AEA0 4E -  -  -  	ld c,(hl);gap length
  155 D1:AEA1 EB -  -  -  	ex de,hl;hl is vram
  156 D1:AEA2 09 -  -  -  	add hl,bc;add aplha gap
  157 D1:AEA3 EB -  -  -  	ex de,hl;hl is data
  158 D1:AEA4 23 -  -  -  	inc hl;hl points to single pix mask
  159 D1:AEA5 1A -  -  -  	ld a,(de);vram data
  160 D1:AEA6 A6 -  -  -  	and (hl)
  161 D1:AEA7 23 -  -  -  	inc hl;pixel data
  162 D1:AEA8 B6 -  -  -  	or (hl)
  163 D1:AEA9 12 -  -  -  	ld (de),a
  164 D1:AEAA 23 -  -  -  	inc hl;ldir length
  165 D1:AEAB -  -  -  -  	
  166 D1:AEAB 13 -  -  -  	inc de;move to next pixel
  167 D1:AEAC -  -  -  -  	
  168 D1:AEAC 7E -  -  -  	ld a,(hl);ldir length
  169 D1:AEAD 23 -  -  -  	inc hl;data
  170 D1:AEAE 4F -  -  -  	ld c,a
  171 D1:AEAF B7 -  -  -  	or a
  172 D1:AEB0 CA B6 AE D1 	jp z,dsfgs_ldir_skip
  173 D1:AEB4 ED B0 -  -  	ldir
  174 D1:AEB6 -  -  -  -  dsfgs_ldir_skip:
  175 D1:AEB6 1A -  -  -  	ld a,(de);vram data
  176 D1:AEB7 A6 -  -  -  	and (hl)
  177 D1:AEB8 23 -  -  -  	inc hl;pixel data
  178 D1:AEB9 B6 -  -  -  	or (hl)
  179 D1:AEBA 12 -  -  -  	ld (de),a
  180 D1:AEBB -  -  -  -  	
  181 D1:AEBB D9 -  -  -  	exx ;into shadow
  182 D1:AEBC 10 E0 -  -  	djnz dsfgs_line_loop
  183 D1:AEBE D9 -  -  -  	exx ;out 
  184 D1:AEBF C9 -  -  -  	ret
  185 D1:AEC0 -  -  -  -  
  186 D1:AEC0 -  -  -  -  
  187 D1:AEC0 -  -  -  -  
  188 D1:AEC0 -  -  -  -  ;de = vram , hl = data, a = line to draw (from 0)
  189 D1:AEC0 -  -  -  -  draw_slow_sprite_single_line:
  190 D1:AEC0 -  -  -  -  
  191 D1:AEC0 B7 -  -  -  	or a 
  192 D1:AEC1 CA FE AE D1 	jp z,draw_slow_sprite_bottom_cut_from_line ; if a is 0, same as drawing bottom cut
  193 D1:AEC5 -  -  -  -  	;we know a is not 0 here
  194 D1:AEC5 CD 1F AE D1 	call setup_sprite_single_line
  195 D1:AEC9 C5 -  -  -  	push bc;save total and skipped loops
  196 D1:AECA 01 00 00 00 	ld bc,0
  197 D1:AECE -  -  -  -  	
  198 D1:AECE C3 DB AE D1 	jp slow_sprite_data_traverse 
  199 D1:AED2 -  -  -  -  	
  200 D1:AED2 -  -  -  -  
  201 D1:AED2 -  -  -  -  ;de = vram , hl = data, a = top lines to skip (from 1)
  202 D1:AED2 -  -  -  -  draw_slow_sprite_top_cut:
  203 D1:AED2 CD 09 AE D1 	call setup_sprite_top_cut
  204 D1:AED6 C5 -  -  -  	push bc;save total and skipped loops
  205 D1:AED7 01 00 00 00 	ld bc,0
  206 D1:AEDB -  -  -  -  ;hl = data start, a = num loops to skip, bc = 0
  207 D1:AEDB -  -  -  -  slow_sprite_data_traverse:
  208 D1:AEDB 4E -  -  -  	ld c,(hl);gap length
  209 D1:AEDC EB -  -  -  	ex de,hl;hl is vram
  210 D1:AEDD 09 -  -  -  	add hl,bc
  211 D1:AEDE EB -  -  -  	ex de,hl
  212 D1:AEDF -  -  -  -  	
  213 D1:AEDF 23 -  -  -  	inc hl ;inc past leading pixels
  214 D1:AEE0 23 -  -  -  	inc hl
  215 D1:AEE1 23 -  -  -  	inc hl;ldir length
  216 D1:AEE2 4E -  -  -  	ld c,(hl)
  217 D1:AEE3 09 -  -  -  	add hl,bc
  218 D1:AEE4 EB -  -  -  	ex de,hl
  219 D1:AEE5 09 -  -  -  	add hl,bc
  220 D1:AEE6 EB -  -  -  	ex de,hl
  221 D1:AEE7 13 -  -  -  	inc de;inc for leading pix 
  222 D1:AEE8 23 -  -  -  	inc hl;inc past ending pixels
  223 D1:AEE9 23 -  -  -  	inc hl
  224 D1:AEEA 23 -  -  -  	inc hl;gap length
  225 D1:AEEB -  -  -  -  	
  226 D1:AEEB 3D -  -  -  	dec a 
  227 D1:AEEC C2 DB AE D1 	jp nz,slow_sprite_data_traverse
  228 D1:AEF0 -  -  -  -  
  229 D1:AEF0 -  -  -  -  
  230 D1:AEF0 C1 -  -  -  	pop bc ;b is total loops, c is skipped loops 
  231 D1:AEF1 78 -  -  -  	ld a,b
  232 D1:AEF2 91 -  -  -  	sub a,c;subtract skipped from total, a holds remaining number of loops
  233 D1:AEF3 01 00 00 00 	ld bc,0;clear bc 
  234 D1:AEF7 2B -  -  -  	dec hl	;hl points to 1 before gaplength
  235 D1:AEF8 D9 -  -  -  	exx ;toshadow
  236 D1:AEF9 47 -  -  -  	ld b,a 
  237 D1:AEFA C3 9E AE D1 	jp dsfgs_line_loop
  238 D1:AEFE -  -  -  -  	
  239 D1:AEFE -  -  -  -  	
  240 D1:AEFE -  -  -  -  	
  241 D1:AEFE -  -  -  -  draw_slow_sprite_bottom_cut_from_line:
  242 D1:AEFE 3C -  -  -  	inc a 
  243 D1:AEFF -  -  -  -  ;de = vram , hl = data, a = number lines to draw
  244 D1:AEFF -  -  -  -  draw_slow_sprite_bottom_cut:
  245 D1:AEFF -  -  -  -  
  246 D1:AEFF CD FC AD D1 	call setup_sprite_bottom_cut
  247 D1:AF03 -  -  -  -  	;a = loops to draw, hl = 1 before gap length 
  248 D1:AF03 D9 -  -  -  	exx ;toshadow
  249 D1:AF04 47 -  -  -  	ld b,a
  250 D1:AF05 C3 9E AE D1 	jp dsfgs_line_loop
  251 D1:AF09 -  -  -  -  
  252 D1:AF09 -  -  -  -  
  253 D1:AF09 -  -  -  -  
  254 D1:AF09 -  -  -  -  
  255 D1:AF09 -  -  -  -  
  256 D1:AF09 -  -  -  -  
  257 D1:AF09 -  -  -  -  
  258 D1:AF09 -  -  -  -  
  259 D1:AF09 -  -  -  -  
  260 D1:AF09 -  -  -  -  
  261 D1:AF09 -  -  -  -  
  262 D1:AF09 -  -  -  -  
  263 D1:AF09 -  -  -  -  
  264 D1:AF09 -  -  -  -  
  265 D1:AF09 -  -  -  -  
  266 D1:AF09 -  -  -  -  
  267 D1:AF09 -  -  -  -  
  268 D1:AF09 -  -  -  -  
  269 D1:AF09 -  -  -  -  
  270 D1:AF09 -  -  -  -  
  271 D1:AF09 -  -  -  -  
  272 D1:AF09 -  -  -  -  
  273 D1:AF09 -  -  -  -  
  274 D1:AF09 -  -  -  -  
  275 D1:AF09 -  -  -  -  
  276 D1:AF09 -  -  -  -  
  277 D1:AF09 -  -  -  -  
  278 D1:AF09 -  -  -  -  
  279 D1:AF09 -  -  -  -  
  280 D1:AF09 -  -  -  -  
  281 D1:AF09 -  -  -  -  
  282 D1:AF09 -  -  -  -  
  283 D1:AF09 -  -  -  -  
  284 D1:AF09 -  -  -  -  
  285 D1:AF09 -  -  -  -  
  286 D1:AF09 -  -  -  -  
  287 D1:AF09 -  -  -  -   
  288 D1:AF09 -  -  -  -  
  289 D1:AF09 -  -  -  -  
  290 D1:AF09 -  -  -  -  
  291 D1:AF09 -  -  -  -  
  292 D1:AF09 -  -  -  -  
  293 D1:AF09 -  -  -  -  
  294 D1:AF09 -  -  -  -  
  295 D1:AF09 -  -  -  -  
  296 D1:AF09 -  -  -  -  
  297 D1:AF09 -  -  -  -  
  298 D1:AF09 -  -  -  -  
  299 D1:AF09 -  -  -  -  
  300 D1:AF09 -  -  -  -  
  301 D1:AF09 -  -  -  -  
  302 D1:AF09 -  -  -  -  
  303 D1:AF09 -  -  -  -  
  304 D1:AF09 -  -  -  -  
  305 D1:AF09 -  -  -  -  
  306 D1:AF09 -  -  -  -  
  307 D1:AF09 -  -  -  -  
  308 D1:AF09 -  -  -  -  
  309 D1:AF09 -  -  -  -  
  310 D1:AF09 -  -  -  -  
  311 D1:AF09 -  -  -  -  
  312 D1:AF09 -  -  -  -  
  313 D1:AF09 -  -  -  -  
  314 D1:AF09 -  -  -  -  
  315 D1:AF09 -  -  -  -  
  316 D1:AF09 -  -  -  -  
  317 D1:AF09 -  -  -  -  
  318 D1:AF09 -  -  -  -  
  319 D1:AF09 -  -  -  -  
  320 D1:AF09 -  -  -  -  
  321 D1:AF09 -  -  -  -  
  322 D1:AF09 -  -  -  -  
  323 D1:AF09 -  -  -  -  
  324 D1:AF09 -  -  -  -  
  325 D1:AF09 -  -  -  -  
  326 D1:AF09 -  -  -  -  
  327 D1:AF09 -  -  -  -  
  328 D1:AF09 -  -  -  -  
  329 D1:AF09 -  -  -  -  
  330 D1:AF09 -  -  -  -  
  331 D1:AF09 -  -  -  -  
  332 D1:AF09 -  -  -  -  
  333 D1:AF09 -  -  -  -  
  334 D1:AF09 -  -  -  -  
  335 D1:AF09 -  -  -  -  
  336 D1:AF09 -  -  -  -  
  337 D1:AF09 -  -  -  -  
  338 D1:AF09 -  -  -  -  
  339 D1:AF09 -  -  -  -  
  340 D1:AF09 -  -  -  -  
  341 D1:AF09 -  -  -  -  
  342 D1:AF09 -  -  -  -  
  343 D1:AF09 -  -  -  -  	
  344 D1:AF09 -  -  -  -  	
Listing for file "ascent.asm"
  533 D1:AF09 -  -  -  -  #include "BetterSpriteDecompress.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\BetterSpriteDecompress.txt"
    1 D1:AF09 -  -  -  -  
    2 D1:AF09 -  -  -  -  
    3 D1:AF09 -  -  -  -  
    4 D1:AF09 -  -  -  -  
    5 D1:AF09 -  -  -  -  
    6 D1:AF09 -  -  -  -  
    7 D1:AF09 -  -  -  -  
    8 D1:AF09 -  -  -  -  
    9 D1:AF09 -  -  -  -  ;REGISTER USEAGE
   10 D1:AF09 -  -  -  -  ;HL = sprite color data byte
   11 D1:AF09 -  -  -  -  ;C = bit selector for color data 
   12 D1:AF09 -  -  -  -  ;HL' = alpha data byte
   13 D1:AF09 -  -  -  -  ;C' = bit selector for alpha data
   14 D1:AF09 -  -  -  -  ;DE = output sprite data location
   15 D1:AF09 -  -  -  -  ;DE' = loops/line write location 
   16 D1:AF09 -  -  -  -  ;A' = alpha bits remaining to read in row
   17 D1:AF09 -  -  -  -  
   18 D1:AF09 -  -  -  -  ;SETUP ----------------
   19 D1:AF09 -  -  -  -  ;SET UP BPC MODE AND ALPHA/NOALPHA
   20 D1:AF09 -  -  -  -  ;write height or width(BG) data to decompressed sprite 
   21 D1:AF09 -  -  -  -  ;GET PER SPRITE PALETTE DATA
   22 D1:AF09 -  -  -  -  ;set registers to point to correct locations for decompression
   23 D1:AF09 -  -  -  -  ;------------
   24 D1:AF09 -  -  -  -  
   25 D1:AF09 -  -  -  -  ;GO TO EITHER FAST, SLOW, or BG SPRITE ALGORITHMS
   26 D1:AF09 -  -  -  -  
   27 D1:AF09 -  -  -  -  
   28 D1:AF09 -  -  -  -  ;FAST / SLOW ROUTINE ---------------------------
   29 D1:AF09 -  -  -  -  ;Parse through alpha data, count number of 00 pairs (gap length)
   30 D1:AF09 -  -  -  -  ;IF FAST, GOTO LDIR ROUTINE
   31 D1:AF09 -  -  -  -  ;leading pixel(s), either 11, 01, 10 in alpha data. 
   32 D1:AF09 -  -  -  -  ;write pixel mask and color data
   33 D1:AF09 -  -  -  -  
   34 D1:AF09 -  -  -  -  ;LDIR ROUTINE
   35 D1:AF09 -  -  -  -  ;Count number of 11 pairs in alpha data (LDIR length)
   36 D1:AF09 -  -  -  -  ;if slow and alpha data ends with 00, the last 11 pair becomes trailing pixels
   37 D1:AF09 -  -  -  -  ;Write LDIR length to sprite data 
   38 D1:AF09 -  -  -  -  ;Write LDIR pixel data (if nonzero)
   39 D1:AF09 -  -  -  -  ;IF FAST, GOTO END
   40 D1:AF09 -  -  -  -  
   41 D1:AF09 -  -  -  -  ;trailing pixels
   42 D1:AF09 -  -  -  -  ;11,10,01 in alpha data 
   43 D1:AF09 -  -  -  -  
   44 D1:AF09 -  -  -  -  ;END AND RESTART
   45 D1:AF09 -  -  -  -  ;Increment loops/line counter
   46 D1:AF09 -  -  -  -  ;check if end of line and write loops/line
   47 D1:AF09 -  -  -  -  
   48 D1:AF09 -  -  -  -  ;store registers and check if interrupt is required
   49 D1:AF09 -  -  -  -  ;if interruption required, return to main loop to draw next frame
   50 D1:AF09 -  -  -  -  ;otherwise return to start of loop
   51 D1:AF09 -  -  -  -  
   52 D1:AF09 -  -  -  -  ;
   53 D1:AF09 -  -  -  -  
   54 D1:AF09 -  -  -  -  
   55 D1:AF09 -  -  -  -  
   56 D1:AF09 -  -  -  -  
   57 D1:AF09 -  -  -  -  
   58 D1:AF09 -  -  -  -  
   59 D1:AF09 -  -  -  -  ;rotates c and incs hl if needed to point to next bit. can be flipped to dec bit 
   60 D1:AF09 -  -  -  -  sdcomp_next_in_bitstream:
   61 D1:AF09 -  -  -  -  sdcomp_flip_bitstream .equ $ + 1
   62 D1:AF09 CB 09 -  -  	rrc c;rlc flip
   63 D1:AF0B D0 -  -  -  	ret nc
   64 D1:AF0C -  -  -  -  sdcomp_flip_bitstream_2 .equ $
   65 D1:AF0C 23 -  -  -  	inc hl;dec hl flip
   66 D1:AF0D C9 -  -  -  	ret
   67 D1:AF0E -  -  -  -  
   68 D1:AF0E -  -  -  -  ;ALPHA HELPER FUNCS ================================================================================================	
   69 D1:AF0E -  -  -  -  
   70 D1:AF0E -  -  -  -  ;IN SHADOW
   71 D1:AF0E -  -  -  -  ;HL POINTS TO PIXEL ALPHA DATA
   72 D1:AF0E -  -  -  -  ;C IS BITMASK
   73 D1:AF0E -  -  -  -  ;RETURNS 0 OR nonzero IN A 
   74 D1:AF0E -  -  -  -  ;If final alpha bit in line is read, writes loop/line data, ...
   75 D1:AF0E -  -  -  -  ; sets some flags, decrements remaining lines, traverses sprite data if flip, returns the read data 
   76 D1:AF0E -  -  -  -  ; next call returns first bit in next row  
   77 D1:AF0E -  -  -  -  sdcomp_get_next_alpha:
   78 D1:AF0E -  -  -  -  	;ld a,$A2;test 
   79 D1:AF0E -  -  -  -  	;call write_a_to_ram
   80 D1:AF0E 79 -  -  -  	ld a,c 
   81 D1:AF0F -  -  -  -  	;call write_a_to_ram 
   82 D1:AF0F 7E -  -  -  	ld a,(hl)
   83 D1:AF10 -  -  -  -  	;call write_a_to_ram
   84 D1:AF10 -  -  -  -  	
   85 D1:AF10 37 -  -  -  	scf 
   86 D1:AF11 -  -  -  -  sdcomp_end_of_line_alp .equ $
   87 D1:AF11 DA 1E AF D1 	jp c, sdcomp_end_of_line_alp_skip
   88 D1:AF15 -  -  -  -  
   89 D1:AF15 -  -  -  -  	;ld a,$A3
   90 D1:AF15 -  -  -  -  	;call write_a_to_ram 
   91 D1:AF15 -  -  -  -  	
   92 D1:AF15 3E D2 -  -  	ld a, %11010010 ;jp nc 
   93 D1:AF17 32 81 AF D1 	ld (sdcomp_end_vitrual_zero_read),a 
   94 D1:AF1B -  -  -  -  	
   95 D1:AF1B 3E 00 -  -  	ld a,0
   96 D1:AF1D C9 -  -  -  	ret ;returns virtual 0, outside of data range 
   97 D1:AF1E -  -  -  -  
   98 D1:AF1E -  -  -  -  sdcomp_end_of_line_alp_skip:
   99 D1:AF1E -  -  -  -  	
  100 D1:AF1E -  -  -  -  	
  101 D1:AF1E -  -  -  -  	
  102 D1:AF1E -  -  -  -  ;MUST BE RESET EVERY ROW
  103 D1:AF1E 37 -  -  -  	scf
  104 D1:AF1F -  -  -  -  sdcomp_bit_offset .equ $ ;jp nc for offset
  105 D1:AF1F DA 2C AF D1 	jp c,sdcomp_bit_offset_skip
  106 D1:AF23 3E DA -  -  	ld a,%11011010;jp c 
  107 D1:AF25 32 1F AF D1 	ld (sdcomp_bit_offset),a
  108 D1:AF29 -  -  -  -  	;ld a,$A9
  109 D1:AF29 -  -  -  -  	;call write_a_to_ram
  110 D1:AF29 3E 00 -  -  	ld a,0
  111 D1:AF2B C9 -  -  -  	ret ;return 0 first bit
  112 D1:AF2C -  -  -  -  sdcomp_bit_offset_skip:;skip bit offset
  113 D1:AF2C -  -  -  -  		
  114 D1:AF2C -  -  -  -  	;ld a,$EF
  115 D1:AF2C -  -  -  -  	;call write_a_to_ram
  116 D1:AF2C 7E -  -  -  	ld a,(hl)
  117 D1:AF2D -  -  -  -  	;push af 
  118 D1:AF2D -  -  -  -  	;call write_a_to_ram
  119 D1:AF2D -  -  -  -  	;ld a,c
  120 D1:AF2D -  -  -  -  	;call write_a_to_ram
  121 D1:AF2D -  -  -  -  	;pop af 
  122 D1:AF2D -  -  -  -  	
  123 D1:AF2D -  -  -  -  	
  124 D1:AF2D A1 -  -  -  	and c 
  125 D1:AF2E CD 09 AF D1 	call sdcomp_next_in_bitstream;incs bitstream
  126 D1:AF32 -  -  -  -  	;a holds data to return
  127 D1:AF32 -  -  -  -  	;call write_a_to_ram
  128 D1:AF32 37 -  -  -  	scf 
  129 D1:AF33 -  -  -  -  sdcomp_no_alpha_1 .equ $;Load a with 1 if no alpha
  130 D1:AF33 DA 39 AF D1 	jp c,sdcomp_no_alpha_1_skip
  131 D1:AF37 3E 01 -  -  	ld a,1
  132 D1:AF39 -  -  -  -  sdcomp_no_alpha_1_skip:
  133 D1:AF39 -  -  -  -  	
  134 D1:AF39 -  -  -  -  	
  135 D1:AF39 08 -  -  -  	ex af,af' ;';into shadow
  136 D1:AF3A 3D -  -  -  	dec a 
  137 D1:AF3B -  -  -  -  	;call write_a_to_ram
  138 D1:AF3B C2 67 AF D1 	jp nz, sdcomp_end_of_line_skip
  139 D1:AF3F -  -  -  -  	
  140 D1:AF3F -  -  -  -  	;HAve read last bit in line  
  141 D1:AF3F -  -  -  -  	
  142 D1:AF3F -  -  -  -  	;ld a,$AC;Test
  143 D1:AF3F -  -  -  -  	;call write_a_to_ram;Test
  144 D1:AF3F -  -  -  -  	;Decrement lines remaining in sprite
  145 D1:AF3F -  -  -  -  sdcomp_lines_remaining .equ $ + 1
  146 D1:AF3F 3E 00 -  -  	ld a,0
  147 D1:AF41 3D -  -  -  	dec a 
  148 D1:AF42 32 40 AF D1 	ld (sdcomp_lines_remaining),a
  149 D1:AF46 -  -  -  -  	;call write_a_to_ram
  150 D1:AF46 C2 50 AF D1 	jp nz,sdcomp_set_end_flag_skip
  151 D1:AF4A -  -  -  -  	;end of last line reached 
  152 D1:AF4A 3E DA -  -  	ld a,%11011010;jp c
  153 D1:AF4C 32 C6 B1 D1 	ld (sdcomp_end_reached_flag) , a ;set end reached flag to indicate sprite is done decompressing TODO 
  154 D1:AF50 -  -  -  -  	;ld a,$E9
  155 D1:AF50 -  -  -  -  	;call write_a_to_ram;TEST 
  156 D1:AF50 -  -  -  -  sdcomp_set_end_flag_skip:
  157 D1:AF50 -  -  -  -  	
  158 D1:AF50 -  -  -  -  
  159 D1:AF50 -  -  -  -  	
  160 D1:AF50 3E D2 -  -  	ld a, %11010010 ;jp nc 
  161 D1:AF52 32 A1 B1 D1 	ld (sdcomp_end_of_line_gaplength),a
  162 D1:AF56 32 11 AF D1 	ld (sdcomp_end_of_line_alp),a
  163 D1:AF5A -  -  -  -  	;ld (sdcomp_write_loops_per_line_flag),a 
  164 D1:AF5A 37 -  -  -  	scf ;Set offset bit for next line
  165 D1:AF5B -  -  -  -  sdcomp_offset_1 .equ $
  166 D1:AF5B DA 65 AF D1 	jp c,sdcomp_offset_1_skip
  167 D1:AF5F 3E D2 -  -  	ld a, %11010010 ;jp nc 
  168 D1:AF61 32 1F AF D1 	ld (sdcomp_bit_offset),a
  169 D1:AF65 -  -  -  -  sdcomp_offset_1_skip:
  170 D1:AF65 -  -  -  -  	
  171 D1:AF65 -  -  -  -  sdcomp_sprite_width_2 .equ $+1
  172 D1:AF65 3E 00 -  -  	ld a,0 ;Return sprite width to a'
  173 D1:AF67 -  -  -  -  	
  174 D1:AF67 -  -  -  -  	;call write_a_to_ram
  175 D1:AF67 -  -  -  -  	
  176 D1:AF67 -  -  -  -  sdcomp_end_of_line_skip:
  177 D1:AF67 08 -  -  -  	ex af,af' ;' ;out
  178 D1:AF68 -  -  -  -  	
  179 D1:AF68 -  -  -  -  	;push af ;testing
  180 D1:AF68 -  -  -  -  	;ld a,$A0
  181 D1:AF68 -  -  -  -  	;call write_a_to_ram
  182 D1:AF68 -  -  -  -  	;pop af 
  183 D1:AF68 -  -  -  -  	;call write_a_to_ram
  184 D1:AF68 -  -  -  -  	
  185 D1:AF68 C9 -  -  -  	ret 
  186 D1:AF69 -  -  -  -  	
  187 D1:AF69 -  -  -  -  
  188 D1:AF69 -  -  -  -  
  189 D1:AF69 -  -  -  -  ;in shadow,returns a $FF,$0F,$F0,$00
  190 D1:AF69 -  -  -  -  sdcomp_get_next_alpha_pair:
  191 D1:AF69 -  -  -  -  	;ld a,$A1
  192 D1:AF69 -  -  -  -  	;call write_a_to_ram
  193 D1:AF69 -  -  -  -  	
  194 D1:AF69 -  -  -  -  	;ld a,c ;test
  195 D1:AF69 -  -  -  -  	;call write_a_to_ram 
  196 D1:AF69 -  -  -  -  	;ld a,(hl) ;test
  197 D1:AF69 -  -  -  -  	;call write_a_to_ram
  198 D1:AF69 -  -  -  -  	
  199 D1:AF69 3E DA -  -  	ld a,%11011010;jp c 
  200 D1:AF6B 32 81 AF D1 	ld(sdcomp_end_vitrual_zero_read),a ;reset vitrual zero read flag
  201 D1:AF6F -  -  -  -  	
  202 D1:AF6F CD 0E AF D1 	call sdcomp_get_next_alpha
  203 D1:AF73 B7 -  -  -  	or a 
  204 D1:AF74 CA 7E AF D1 	jp z,sdcomp_get_next_alpha_pair0
  205 D1:AF78 3E F0 -  -  	ld a,$F0;FIRST BIT WAS 1
  206 D1:AF7A -  -  -  -  	;call write_a_to_ram
  207 D1:AF7A C3 8D AF D1 	jp sdcomp_get_next_alpha_pair1
  208 D1:AF7E -  -  -  -  sdcomp_get_next_alpha_pair0:
  209 D1:AF7E 3E 00 -  -  	ld a,0
  210 D1:AF80 -  -  -  -  	
  211 D1:AF80 37 -  -  -  	scf 
  212 D1:AF81 -  -  -  -  sdcomp_end_vitrual_zero_read .equ $
  213 D1:AF81 DA 8D AF D1 	jp c,sdcomp_get_next_alpha_pair1
  214 D1:AF85 F5 -  -  -  	push af 
  215 D1:AF86 -  -  -  -  	;This gets triggered when we have read a vitrual 0 (outside of line) as the first bit in an alpha pair 
  216 D1:AF86 -  -  -  -  	
  217 D1:AF86 3E 3D -  -  	ld a,%00111101 ;dec a 
  218 D1:AF88 32 A8 B1 D1 	ld (sdcomp_dec_gap_btwn_rows),a 
  219 D1:AF8C -  -  -  -  	;We should subtract 1 from the next interline gap length whenever a virtual 00 is read.
  220 D1:AF8C -  -  -  -  	;ld a,$A4
  221 D1:AF8C -  -  -  -  	;call write_a_to_ram
  222 D1:AF8C F1 -  -  -  	pop af 
  223 D1:AF8D -  -  -  -  	
  224 D1:AF8D -  -  -  -  sdcomp_get_next_alpha_pair1:
  225 D1:AF8D -  -  -  -  
  226 D1:AF8D -  -  -  -  	
  227 D1:AF8D 32 A3 AF D1 	ld (sdcomp_get_next_alpha_pair_or),a 
  228 D1:AF91 -  -  -  -  	
  229 D1:AF91 CD 0E AF D1 	call sdcomp_get_next_alpha
  230 D1:AF95 B7 -  -  -  	or a 
  231 D1:AF96 CA A0 AF D1 	jp z,sdcomp_get_next_alpha_pair2
  232 D1:AF9A 3E 0F -  -  	ld a,$0F;SECOND BIT WAS 1
  233 D1:AF9C C3 A2 AF D1 	jp sdcomp_get_next_alpha_pair3
  234 D1:AFA0 -  -  -  -  sdcomp_get_next_alpha_pair2:
  235 D1:AFA0 3E 00 -  -  	ld a,0;SECOND BIT WAS 0
  236 D1:AFA2 -  -  -  -  sdcomp_get_next_alpha_pair3:	
  237 D1:AFA2 -  -  -  -  sdcomp_get_next_alpha_pair_or .equ $ + 1
  238 D1:AFA2 F6 00 -  -  	or 0;OR WITH FIRST BIT 
  239 D1:AFA4 -  -  -  -  	
  240 D1:AFA4 C9 -  -  -  	ret 
  241 D1:AFA5 -  -  -  -  	
  242 D1:AFA5 -  -  -  -  ;COLOR HELPER FUNCS =================================================================================================
  243 D1:AFA5 -  -  -  -  
  244 D1:AFA5 -  -  -  -  ;not in shadow, returns a = color0000
  245 D1:AFA5 -  -  -  -  sdcomp_get_next_color_leading_nibble:
  246 D1:AFA5 CD AE AF D1 	call sdcomp_get_next_color
  247 D1:AFA9 0F -  -  -  	rrca 
  248 D1:AFAA 0F -  -  -  	rrca 
  249 D1:AFAB 0F -  -  -  	rrca 
  250 D1:AFAC 0F -  -  -  	rrca
  251 D1:AFAD C9 -  -  -  	ret 
  252 D1:AFAE -  -  -  -  
  253 D1:AFAE -  -  -  -  
  254 D1:AFAE -  -  -  -  
  255 D1:AFAE -  -  -  -  ;bit orders
  256 D1:AFAE -  -  -  -  ;	noflip   flip 
  257 D1:AFAE -  -  -  -  ;4bpp 3210 	 0123
  258 D1:AFAE -  -  -  -  ;3bpp 210	 012
  259 D1:AFAE -  -  -  -  ;2bpp 10	 01
  260 D1:AFAE -  -  -  -  ;1bpp 0		 0
  261 D1:AFAE -  -  -  -  
  262 D1:AFAE -  -  -  -  ;not in shadow, returns a = 0000color
  263 D1:AFAE -  -  -  -  sdcomp_get_next_color:
  264 D1:AFAE D5 -  -  -  	push de ;save data write location
  265 D1:AFAF 1E 00 -  -  	ld e,0;E will store the final color data
  266 D1:AFB1 -  -  -  -  	
  267 D1:AFB1 37 -  -  -  	scf
  268 D1:AFB2 -  -  -  -  sdcomp_0bpc .equ $ ;if sprite is 0bpc, skip reading bitstream, set to jp c 
  269 D1:AFB2 D2 FC AF D1 	jp nc,sdcomp_get_color_from_index
  270 D1:AFB6 -  -  -  -  	
  271 D1:AFB6 -  -  -  -  	;ld a,$C1
  272 D1:AFB6 -  -  -  -  	;call write_a_to_ram
  273 D1:AFB6 -  -  -  -  	
  274 D1:AFB6 7E -  -  -  	ld a,(hl) ;read next bit 
  275 D1:AFB7 -  -  -  -  	;call write_a_to_ram ;TEST
  276 D1:AFB7 A1 -  -  -  	and c
  277 D1:AFB8 -  -  -  -  	;call write_a_to_ram ;TEST
  278 D1:AFB8 CD 09 AF D1 	call sdcomp_next_in_bitstream  ;inc bitstream 
  279 D1:AFBC B7 -  -  -  	or a
  280 D1:AFBD CA C3 AF D1 	jp z,sdcomp_get_color_data_set_skip_1
  281 D1:AFC1 -  -  -  -  sdcomp_color_bit_0 .equ $ + 1 
  282 D1:AFC1 CB CB -  -  	set 1,e  ;set bit of e reg to color, 0 for flip, else depends on bpc 
  283 D1:AFC3 -  -  -  -  sdcomp_get_color_data_set_skip_1:
  284 D1:AFC3 -  -  -  -  	
  285 D1:AFC3 37 -  -  -  	scf
  286 D1:AFC4 -  -  -  -  sdcomp_1bpc .equ $
  287 D1:AFC4 D2 FC AF D1 	jp nc,sdcomp_get_color_from_index ;if 1bpc jump to end 
  288 D1:AFC8 -  -  -  -  
  289 D1:AFC8 -  -  -  -  	;ld a,$C2
  290 D1:AFC8 -  -  -  -  	;call write_a_to_ram
  291 D1:AFC8 -  -  -  -  	
  292 D1:AFC8 7E -  -  -  	ld a,(hl)
  293 D1:AFC9 -  -  -  -  	;call write_a_to_ram ;TEST
  294 D1:AFC9 A1 -  -  -  	and c 
  295 D1:AFCA -  -  -  -  	;call write_a_to_ram ;TEST
  296 D1:AFCA CD 09 AF D1 	call sdcomp_next_in_bitstream
  297 D1:AFCE B7 -  -  -  	or a
  298 D1:AFCF CA D5 AF D1 	jp z,sdcomp_get_color_data_set_skip_2
  299 D1:AFD3 -  -  -  -  sdcomp_color_bit_1 .equ $ + 1 	
  300 D1:AFD3 CB C3 -  -  	set 0,e ;store next bit of color data in e  
  301 D1:AFD5 -  -  -  -  sdcomp_get_color_data_set_skip_2:
  302 D1:AFD5 -  -  -  -  	
  303 D1:AFD5 37 -  -  -  	scf
  304 D1:AFD6 -  -  -  -  sdcomp_2bpc .equ $ ;if 2bpc jump to end
  305 D1:AFD6 D2 FC AF D1 	jp nc,sdcomp_get_color_from_index
  306 D1:AFDA -  -  -  -  	
  307 D1:AFDA 7E -  -  -  	ld a,(hl)
  308 D1:AFDB A1 -  -  -  	and c 
  309 D1:AFDC CD 09 AF D1 	call sdcomp_next_in_bitstream
  310 D1:AFE0 B7 -  -  -  	or a
  311 D1:AFE1 CA E7 AF D1 	jp z,sdcomp_get_color_data_set_skip_3
  312 D1:AFE5 -  -  -  -  sdcomp_color_bit_2 .equ $ + 1 
  313 D1:AFE5 CB D3 -  -  	set 2,e 
  314 D1:AFE7 -  -  -  -  sdcomp_get_color_data_set_skip_3:
  315 D1:AFE7 -  -  -  -  	
  316 D1:AFE7 37 -  -  -  	scf
  317 D1:AFE8 -  -  -  -  sdcomp_3bpc .equ $
  318 D1:AFE8 D2 FC AF D1 	jp nc,sdcomp_get_color_from_index	
  319 D1:AFEC -  -  -  -  
  320 D1:AFEC -  -  -  -  ;4bpp, interpret as color data, not indexed	
  321 D1:AFEC 7E -  -  -  	ld a,(hl)
  322 D1:AFED A1 -  -  -  	and c 
  323 D1:AFEE CD 09 AF D1 	call sdcomp_next_in_bitstream
  324 D1:AFF2 B7 -  -  -  	or a
  325 D1:AFF3 CA F9 AF D1 	jp z,sdcomp_get_color_data_set_skip_4
  326 D1:AFF7 -  -  -  -  sdcomp_color_bit_3 .equ $ + 1 
  327 D1:AFF7 CB DB -  -  	set 3,e 
  328 D1:AFF9 -  -  -  -  sdcomp_get_color_data_set_skip_4:
  329 D1:AFF9 -  -  -  -  ;4bpp, interpret as color data, not indexed
  330 D1:AFF9 7B -  -  -  	ld a,e 
  331 D1:AFFA D1 -  -  -  	pop de 
  332 D1:AFFB C9 -  -  -  	ret 
  333 D1:AFFC -  -  -  -  
  334 D1:AFFC -  -  -  -  sdcomp_get_color_from_index: ; e holds index of color data, 1-8
  335 D1:AFFC -  -  -  -  	
  336 D1:AFFC -  -  -  -  	;ld a,$DD
  337 D1:AFFC -  -  -  -  	;call write_a_to_ram
  338 D1:AFFC -  -  -  -  	;ld a,e 
  339 D1:AFFC -  -  -  -  	;call write_a_to_ram
  340 D1:AFFC -  -  -  -  	
  341 D1:AFFC -  -  -  -  	
  342 D1:AFFC CB 53 -  -  	bit 2,e 
  343 D1:AFFE CA 20 B0 D1 	jp z, sdcomp_get_color_from_index_2l
  344 D1:B002 -  -  -  -  	
  345 D1:B002 -  -  -  -  	;Bit 2 = 1 
  346 D1:B002 CB 4B -  -  	bit 1,e 
  347 D1:B004 CA 14 B0 D1 	jp z,sdcomp_get_color_from_index_2h1l
  348 D1:B008 -  -  -  -  
  349 D1:B008 -  -  -  -  	;bit 2 = 1 1 = 1
  350 D1:B008 -  -  -  -  sdcomp_indexed_color_data_4 .equ $ + 1	
  351 D1:B008 3E 00 -  -  	ld a,0
  352 D1:B00A CB 43 -  -  	bit 0,e 
  353 D1:B00C CA 42 B0 D1 	jp z,sdcomp_get_color_from_index_msn
  354 D1:B010 C3 3E B0 D1 	jp sdcomp_get_color_from_index_lsn
  355 D1:B014 -  -  -  -  
  356 D1:B014 -  -  -  -  sdcomp_get_color_from_index_2h1l:
  357 D1:B014 -  -  -  -  	;2 = 1 1 = 0 
  358 D1:B014 -  -  -  -  sdcomp_indexed_color_data_3 .equ $ + 1	
  359 D1:B014 3E 00 -  -  	ld a,0
  360 D1:B016 CB 43 -  -  	bit 0,e 
  361 D1:B018 CA 42 B0 D1 	jp z,sdcomp_get_color_from_index_msn
  362 D1:B01C C3 3E B0 D1 	jp sdcomp_get_color_from_index_lsn
  363 D1:B020 -  -  -  -  	
  364 D1:B020 -  -  -  -  sdcomp_get_color_from_index_2l:
  365 D1:B020 -  -  -  -  	;bit 2 was 0 
  366 D1:B020 CB 4B -  -  	bit 1,e 
  367 D1:B022 CA 32 B0 D1 	jp z,sdcomp_get_color_from_index_2l1l
  368 D1:B026 -  -  -  -  	
  369 D1:B026 -  -  -  -  	;bit 2 = 0 1 = 1
  370 D1:B026 -  -  -  -  sdcomp_indexed_color_data_2 .equ $ + 1	
  371 D1:B026 3E 00 -  -  	ld a,0
  372 D1:B028 CB 43 -  -  	bit 0,e 
  373 D1:B02A CA 42 B0 D1 	jp z,sdcomp_get_color_from_index_msn
  374 D1:B02E C3 3E B0 D1 	jp sdcomp_get_color_from_index_lsn
  375 D1:B032 -  -  -  -  	
  376 D1:B032 -  -  -  -  sdcomp_get_color_from_index_2l1l:
  377 D1:B032 -  -  -  -  	;bit 2 =0  1 = 0
  378 D1:B032 -  -  -  -  sdcomp_indexed_color_data_1 .equ $ + 1	
  379 D1:B032 3E 00 -  -  	ld a,0
  380 D1:B034 -  -  -  -  	
  381 D1:B034 CB 43 -  -  	bit 0,e 
  382 D1:B036 CA 42 B0 D1 	jp z,sdcomp_get_color_from_index_msn
  383 D1:B03A C3 3E B0 D1 	jp sdcomp_get_color_from_index_lsn
  384 D1:B03E -  -  -  -  sdcomp_get_color_from_index_lsn:
  385 D1:B03E E6 0F -  -  	and %00001111;and with least significant nibble 
  386 D1:B040 D1 -  -  -  	pop de 
  387 D1:B041 -  -  -  -  	
  388 D1:B041 -  -  -  -  	;push af 
  389 D1:B041 -  -  -  -  	;ld a,$C0
  390 D1:B041 -  -  -  -  	;call write_a_to_ram
  391 D1:B041 -  -  -  -  	;pop af 
  392 D1:B041 -  -  -  -  	;call write_a_to_ram
  393 D1:B041 -  -  -  -  	
  394 D1:B041 C9 -  -  -  	ret 
  395 D1:B042 -  -  -  -  	
  396 D1:B042 -  -  -  -  sdcomp_get_color_from_index_msn:
  397 D1:B042 E6 F0 -  -  	and %11110000;and with most significant nibble 
  398 D1:B044 0F -  -  -  	rrca 
  399 D1:B045 0F -  -  -  	rrca 
  400 D1:B046 0F -  -  -  	rrca 
  401 D1:B047 0F -  -  -  	rrca 
  402 D1:B048 D1 -  -  -  	pop de 
  403 D1:B049 -  -  -  -  	
  404 D1:B049 -  -  -  -  	;push af 
  405 D1:B049 -  -  -  -  	;ld a,$C0
  406 D1:B049 -  -  -  -  	;call write_a_to_ram
  407 D1:B049 -  -  -  -  	;pop af 
  408 D1:B049 -  -  -  -  	;call write_a_to_ram
  409 D1:B049 -  -  -  -  	
  410 D1:B049 C9 -  -  -  	ret 
  411 D1:B04A -  -  -  -  
  412 D1:B04A -  -  -  -  
  413 D1:B04A -  -  -  -  
  414 D1:B04A -  -  -  -  ;function for traversing sprite data for reversed sprites.
  415 D1:B04A -  -  -  -  ;Reads forward through alpha and color data to end of line, so that it can then be read backwards 
  416 D1:B04A -  -  -  -  ;in shadow ,destroys a
  417 D1:B04A -  -  -  -  sdcomp_traverse_line_data:
  418 D1:B04A D9 -  -  -  	exx ;OUT 
  419 D1:B04B -  -  -  -  sdcomp_color_data_line_end_byte .equ $ + 1
  420 D1:B04B 21 00 00 00 	ld hl,0 ;load end of previous color data line 
  421 D1:B04F -  -  -  -  sdcomp_color_data_line_end_mask .equ $ + 1
  422 D1:B04F 0E 00 -  -  	ld c,0 ;load end of previous color data line
  423 D1:B051 D9 -  -  -  	exx;toshadow 
  424 D1:B052 -  -  -  -  	
  425 D1:B052 -  -  -  -  	;load end of previous alpha data line 
  426 D1:B052 -  -  -  -  sdcomp_alpha_data_line_end_byte .equ $ + 1
  427 D1:B052 21 00 00 00 	ld hl,0
  428 D1:B056 -  -  -  -  sdcomp_alpha_data_line_end_mask .equ $ + 1
  429 D1:B056 0E 00 -  -  	ld c,0
  430 D1:B058 -  -  -  -  sdcomp_traverse_initial:
  431 D1:B058 D5 -  -  -  	push de
  432 D1:B059 -  -  -  -  sdcomp_sprite_width .equ $ + 1
  433 D1:B059 1E 00 -  -  	ld e, 0
  434 D1:B05B -  -  -  -  	;e holds sprite width 
  435 D1:B05B -  -  -  -  	
  436 D1:B05B -  -  -  -  	;Read forward through alpha data and inc color pointer if alpha is 1 
  437 D1:B05B -  -  -  -  sdcomp_traverse_line_data_loop:
  438 D1:B05B CB 09 -  -  	rrc c 
  439 D1:B05D D2 62 B0 D1 	jp nc,sdcomp_traverse_line_data_alpha_inc_skip ;if not reached end of byte, skip
  440 D1:B061 23 -  -  -  	inc hl ;have reached end of alpha byte, inc hl 
  441 D1:B062 -  -  -  -  sdcomp_traverse_line_data_alpha_inc_skip:
  442 D1:B062 7E -  -  -  	ld a,(hl)
  443 D1:B063 A1 -  -  -  	and c ;read alpha data 
  444 D1:B064 -  -  -  -  sdcomp_no_alpha_3 .equ $ ;jp c for no alpha sprites to always inc color 
  445 D1:B064 CA 7A B0 D1 	jp z,sdcomp_traverse_line_data_color_skip;if no alpha skip incrementing color. 
  446 D1:B068 D9 -  -  -  	exx;out of shadow 
  447 D1:B069 -  -  -  -  
  448 D1:B069 CB 09 -  -  	rrc c ;rotate mask
  449 D1:B06B -  -  -  -  sdcomp_traverse_2bpp .equ $ + 1
  450 D1:B06B CB 0F -  -  	rrc a ;replace with rrc c for 2bpc (not nop because rrc c is 2 byte operation)
  451 D1:B06D -  -  -  -  sdcomp_traverse_3bpp .equ $ + 1
  452 D1:B06D CB 0F -  -  	rrc a;rrc c for 3bpc
  453 D1:B06F -  -  -  -  sdcomp_traverse_4bpp .equ $ + 1
  454 D1:B06F CB 0F -  -  	rrc a;rrc c for 4 bpc 
  455 D1:B071 -  -  -  -  	
  456 D1:B071 -  -  -  -  	;check if end of byte was reached during rotations
  457 D1:B071 79 -  -  -  	ld a,c
  458 D1:B072 -  -  -  -  sdcomp_traverse_bit_check .equ $ + 1
  459 D1:B072 E6 F0 -  -  	and %11110000 ; 4bpc = 11110000 3bpc = 11100000, 2bpc 11000000 1bpc 10000000 TODO 
  460 D1:B074 CA 79 B0 D1 	jp z,sdcomp_traverse_line_data_color_inc_skip
  461 D1:B078 23 -  -  -  	inc hl ;inc hl if end of byte was reached 
  462 D1:B079 -  -  -  -  sdcomp_traverse_line_data_color_inc_skip:
  463 D1:B079 D9 -  -  -  	exx ;toshadow
  464 D1:B07A -  -  -  -  sdcomp_traverse_line_data_color_skip:
  465 D1:B07A 1D -  -  -  	dec e ;e holds sprite width 
  466 D1:B07B C2 5B B0 D1 	jp nz,sdcomp_traverse_line_data_loop ;loop until end of line reached 
  467 D1:B07F D1 -  -  -  	pop de  ;back to write location 
  468 D1:B080 -  -  -  -  	;set new end of line pointers 
  469 D1:B080 -  -  -  -  	
  470 D1:B080 -  -  -  -  	;ld a,$BB 
  471 D1:B080 -  -  -  -  	;call write_a_to_ram 
  472 D1:B080 -  -  -  -  	;ld a,(hl) 
  473 D1:B080 -  -  -  -  	;call write_a_to_ram 
  474 D1:B080 -  -  -  -  	;ld a,c 
  475 D1:B080 -  -  -  -  	;call write_a_to_ram 
  476 D1:B080 -  -  -  -  	
  477 D1:B080 -  -  -  -  	
  478 D1:B080 22 53 B0 D1 	ld (sdcomp_alpha_data_line_end_byte),hl
  479 D1:B084 79 -  -  -  	ld a,c
  480 D1:B085 32 57 B0 D1 	ld (sdcomp_alpha_data_line_end_mask),a
  481 D1:B089 D9 -  -  -  	exx ;out
  482 D1:B08A 22 4C B0 D1 	ld (sdcomp_color_data_line_end_byte),hl
  483 D1:B08E 79 -  -  -  	ld a,c 
  484 D1:B08F 32 50 B0 D1 	ld (sdcomp_color_data_line_end_mask),a
  485 D1:B093 -  -  -  -  	
  486 D1:B093 -  -  -  -  	;ld a,(hl) 
  487 D1:B093 -  -  -  -  	;call write_a_to_ram 
  488 D1:B093 -  -  -  -  	;ld a,c 
  489 D1:B093 -  -  -  -  	;call write_a_to_ram 
  490 D1:B093 -  -  -  -  	
  491 D1:B093 D9 -  -  -  	exx;to shadow 
  492 D1:B094 C9 -  -  -  	ret
  493 D1:B095 -  -  -  -  
  494 D1:B095 -  -  -  -  
  495 D1:B095 -  -  -  -  
  496 D1:B095 -  -  -  -  
  497 D1:B095 -  -  -  -  
  498 D1:B095 -  -  -  -  ;hl/c is color data, de is ldir write pos, b' is ldir length, not in shadow 
  499 D1:B095 -  -  -  -  sdcomp_write_ldir_data_loop:
  500 D1:B095 CD AE AF D1 	call sdcomp_get_next_color
  501 D1:B099 47 -  -  -  	ld b,a;first pixel
  502 D1:B09A CD A5 AF D1 	call sdcomp_get_next_color_leading_nibble
  503 D1:B09E B0 -  -  -  	or b
  504 D1:B09F -  -  -  -  	
  505 D1:B09F -  -  -  -  	
  506 D1:B09F 12 -  -  -  	ld (de),a;write color data
  507 D1:B0A0 13 -  -  -  	inc de
  508 D1:B0A1 D9 -  -  -  	exx;to shadow
  509 D1:B0A2 05 -  -  -  	dec b;ldir length counter
  510 D1:B0A3 D9 -  -  -  	exx
  511 D1:B0A4 C2 95 B0 D1 	jp nz,sdcomp_write_ldir_data_loop
  512 D1:B0A8 C9 -  -  -  	ret
  513 D1:B0A9 -  -  -  -  	
  514 D1:B0A9 -  -  -  -  
  515 D1:B0A9 -  -  -  -  ;Not in shadow, a holds alpha data pair, writes color and mask data to output 
  516 D1:B0A9 -  -  -  -  sdcomp_write_leading_or_end_pixels:
  517 D1:B0A9 D5 -  -  -  	push de ;output location	
  518 D1:B0AA 47 -  -  -  	ld b,a;save for later
  519 D1:B0AB CB 67 -  -  	bit 4,a ;check if first pixel has color 
  520 D1:B0AD 3E 00 -  -  	ld a,0
  521 D1:B0AF 16 FF -  -  	ld d,%11111111;pixel data mask assuming no colors 
  522 D1:B0B1 CA BB B0 D1 	jp z,sdcomp_leading_pixel_first_skip
  523 D1:B0B5 -  -  -  -  	;has first color
  524 D1:B0B5 16 F0 -  -  	ld d,%11110000;save second pixel of bg 
  525 D1:B0B7 CD AE AF D1 	call sdcomp_get_next_color
  526 D1:B0BB -  -  -  -  sdcomp_leading_pixel_first_skip:
  527 D1:B0BB -  -  -  -  	;a is either $00 or $0color1
  528 D1:B0BB -  -  -  -  	
  529 D1:B0BB 1E FF -  -  	ld e,%11111111;assuming no colors
  530 D1:B0BD -  -  -  -  	
  531 D1:B0BD CB 40 -  -  	bit 0,b;check second pixel alpha
  532 D1:B0BF 47 -  -  -  	ld b,a;save for later 
  533 D1:B0C0 3E 00 -  -  	ld a,0
  534 D1:B0C2 CA CC B0 D1 	jp z,sdcomp_leading_pixel_second_skip;
  535 D1:B0C6 -  -  -  -  	;has second color 
  536 D1:B0C6 CD A5 AF D1 	call sdcomp_get_next_color_leading_nibble
  537 D1:B0CA -  -  -  -  	;a = color2 0 
  538 D1:B0CA 1E 0F -  -  	ld e,%00001111;save first pixel of bg
  539 D1:B0CC -  -  -  -  	
  540 D1:B0CC -  -  -  -  sdcomp_leading_pixel_second_skip:
  541 D1:B0CC -  -  -  -  	;a is either 00 or c2 0 
  542 D1:B0CC -  -  -  -  	;b is either 00 or 0 c1 
  543 D1:B0CC B0 -  -  -  	or b 
  544 D1:B0CD 47 -  -  -  	ld b,a;final color data
  545 D1:B0CE 7A -  -  -  	ld a,d 
  546 D1:B0CF A3 -  -  -  	and e ;final mask data 
  547 D1:B0D0 -  -  -  -  	
  548 D1:B0D0 D1 -  -  -  	pop de;return to pointer 
  549 D1:B0D1 -  -  -  -  	
  550 D1:B0D1 12 -  -  -  	ld (de),a;write mask data 
  551 D1:B0D2 13 -  -  -  	inc de 
  552 D1:B0D3 78 -  -  -  	ld a,b;color data 
  553 D1:B0D4 12 -  -  -  	ld (de),a;write color data 
  554 D1:B0D5 -  -  -  -  	
  555 D1:B0D5 -  -  -  -  	
  556 D1:B0D5 -  -  -  -  	
  557 D1:B0D5 -  -  -  -  	;call write_a_to_ram
  558 D1:B0D5 -  -  -  -  	
  559 D1:B0D5 13 -  -  -  	inc de 
  560 D1:B0D6 C9 -  -  -  	ret 
  561 D1:B0D7 -  -  -  -  
  562 D1:B0D7 -  -  -  -  
  563 D1:B0D7 -  -  -  -  
  564 D1:B0D7 -  -  -  -  ;ENTRY POINT 
  565 D1:B0D7 -  -  -  -  
  566 D1:B0D7 -  -  -  -  
  567 D1:B0D7 -  -  -  -  ;hl = sprite data start, de = main data decompress location
  568 D1:B0D7 -  -  -  -  sprite_decompress:
  569 D1:B0D7 -  -  -  -  
  570 D1:B0D7 -  -  -  -  
  571 D1:B0D7 -  -  -  -  	;SETUP ===========================================================================================================
  572 D1:B0D7 -  -  -  -  
  573 D1:B0D7 -  -  -  -  	;SET UP BPC MODE AND ALPHA/NOALPHA
  574 D1:B0D7 -  -  -  -  
  575 D1:B0D7 -  -  -  -  	;HL pointing to flags registers
  576 D1:B0D7 -  -  -  -  	;TODO set up bpc and alpha modes, Sprite type and offset. Write conditional jumps where needed
  577 D1:B0D7 -  -  -  -  	;set bpc mode 
  578 D1:B0D7 CB 7E -  -  	bit 7,(hl)
  579 D1:B0D9 C4 AD B3 D1 	call nz,sdcomp_set_4bpc
  580 D1:B0DD CB 76 -  -  	bit 6,(hl)
  581 D1:B0DF C4 4A B3 D1 	call nz,sdcomp_set_3bpc 
  582 D1:B0E3 CB 6E -  -  	bit 5,(hl)
  583 D1:B0E5 C4 F7 B2 D1 	call nz,sdcomp_set_2bpc 
  584 D1:B0E9 CB 66 -  -  	bit 4,(hl)
  585 D1:B0EB C4 C2 B2 D1 	call nz,sdcomp_set_1bpc 
  586 D1:B0EF CB 5E -  -  	bit 3,(hl)
  587 D1:B0F1 C4 A7 B2 D1 	call nz,sdcomp_set_0bpc 
  588 D1:B0F5 CB 56 -  -  	bit 2,(hl)
  589 D1:B0F7 C4 14 B4 D1 	call nz,sdcomp_set_noalpha
  590 D1:B0FB CB 56 -  -  	bit 2,(hl)
  591 D1:B0FD CC 25 B4 D1 	call z,sdcomp_reset_noalpha
  592 D1:B101 -  -  -  -  	
  593 D1:B101 -  -  -  -  	
  594 D1:B101 3E 00 -  -  	ld a,0
  595 D1:B103 32 2F B2 D1 	ld (sdcomp_loops_per_line_counter),a ;reset loops counter
  596 D1:B107 3E DA -  -  	ld a,%11011010;jp c 
  597 D1:B109 32 81 AF D1 	ld(sdcomp_end_vitrual_zero_read),a ;reset vitrual zero read flag
  598 D1:B10D -  -  -  -  	;write height or width(BG) data to decompressed sprite 
  599 D1:B10D -  -  -  -  	
  600 D1:B10D 23 -  -  -  	inc hl ;hl points to width in px 
  601 D1:B10E -  -  -  -  	
  602 D1:B10E -  -  -  -  	
  603 D1:B10E 7E -  -  -  	ld a,(hl) 
  604 D1:B10F 32 5A B0 D1 	ld (sdcomp_sprite_width),a ;TODO set width in required locations
  605 D1:B113 32 66 AF D1 	ld (sdcomp_sprite_width_2),a
  606 D1:B117 47 -  -  -  	ld b,a;width
  607 D1:B118 08 -  -  -  	ex af,af' ;'
  608 D1:B119 78 -  -  -  	ld a,b;Number of alpha bits remaining in row
  609 D1:B11A 08 -  -  -  	ex af,af' ;' 
  610 D1:B11B -  -  -  -  
  611 D1:B11B -  -  -  -  
  612 D1:B11B -  -  -  -  sdcomp_offset_2 .equ $ 
  613 D1:B11B 00 -  -  -  	nop ;replace with inc b for offset 
  614 D1:B11C -  -  -  -  
  615 D1:B11C -  -  -  -  	;Calculate number of bytes to skip between rows for gap length  
  616 D1:B11C 04 -  -  -  	inc b ;round up on odd sprites
  617 D1:B11D CB 38 -  -  	srl b;divide by 2
  618 D1:B11F -  -  -  -  	
  619 D1:B11F -  -  -  -  	
  620 D1:B11F 3E A0 -  -  	ld a,160
  621 D1:B121 90 -  -  -  	sub b ;a holds 160 - (width in pairs)
  622 D1:B122 32 A6 B1 D1 	ld (sdcomp_gap_btwn_rows),a 
  623 D1:B126 -  -  -  -  	
  624 D1:B126 -  -  -  -  	;call write_a_to_ram
  625 D1:B126 -  -  -  -  	;ld a,$BE
  626 D1:B126 -  -  -  -  	;call write_a_to_ram
  627 D1:B126 -  -  -  -  	;ld a,b 
  628 D1:B126 -  -  -  -  	;call write_a_to_ram
  629 D1:B126 -  -  -  -  	
  630 D1:B126 -  -  -  -  	
  631 D1:B126 7E -  -  -  	ld a,(hl);load width again
  632 D1:B127 -  -  -  -  	
  633 D1:B127 47 -  -  -  	ld b,a 
  634 D1:B128 -  -  -  -  	
  635 D1:B128 -  -  -  -  
  636 D1:B128 23 -  -  -  	inc hl ;hl points to height 
  637 D1:B129 7E -  -  -  	ld a,(hl);height
  638 D1:B12A 32 40 AF D1 	ld (sdcomp_lines_remaining),a ;write height to lines remaining counter
  639 D1:B12E -  -  -  -  	
  640 D1:B12E -  -  -  -  	
  641 D1:B12E -  -  -  -  
  642 D1:B12E 12 -  -  -  	ld (de), a ;write height to first byte of sprite data 
  643 D1:B12F 13 -  -  -  	inc de 
  644 D1:B130 -  -  -  -  	
  645 D1:B130 23 -  -  -  	inc hl ;HL points to start of alpha data 
  646 D1:B131 -  -  -  -  
  647 D1:B131 E5 -  -  -  	push hl ;Save alpha data 
  648 D1:B132 -  -  -  -  	
  649 D1:B132 -  -  -  -  	
  650 D1:B132 -  -  -  -  	;Need to find start of color data
  651 D1:B132 -  -  -  -  	;at this point a = height, b = width 
  652 D1:B132 -  -  -  -  	
  653 D1:B132 37 -  -  -  	scf
  654 D1:B133 -  -  -  -  	
  655 D1:B133 -  -  -  -  sdcomp_no_alpha_2 .equ $
  656 D1:B133 D2 4C B1 D1 	jp nc,sdcomp_no_alpha_2_skip ; if no alpha skip this part
  657 D1:B137 -  -  -  -  	
  658 D1:B137 -  -  -  -  	;need to find number of pixels, div by 8 and skip that many bytes
  659 D1:B137 -  -  -  -  	
  660 D1:B137 E5 -  -  -  	push hl
  661 D1:B138 67 -  -  -  	ld h,a;height
  662 D1:B139 68 -  -  -  	ld l,b;width
  663 D1:B13A ED 6C -  -  	mlt hl;number of pixels
  664 D1:B13C -  -  -  -  	;rounds up to nearest multiple of 8
  665 D1:B13C 2B -  -  -  	dec hl
  666 D1:B13D CB 3C -  -  	srl h
  667 D1:B13F CB 1D -  -  	rr l
  668 D1:B141 CB 3C -  -  	srl h
  669 D1:B143 CB 1D -  -  	rr l 
  670 D1:B145 CB 3C -  -  	srl h 
  671 D1:B147 CB 1D -  -  	rr l 
  672 D1:B149 23 -  -  -  	inc hl 
  673 D1:B14A C1 -  -  -  	pop bc ;initial hl location
  674 D1:B14B -  -  -  -  	;add number of bytes to skip 
  675 D1:B14B 09 -  -  -  	add hl,bc ;HL points to start of color data 
  676 D1:B14C -  -  -  -  	
  677 D1:B14C -  -  -  -  	
  678 D1:B14C -  -  -  -  	
  679 D1:B14C -  -  -  -  sdcomp_no_alpha_2_skip:
  680 D1:B14C -  -  -  -  
  681 D1:B14C -  -  -  -  	
  682 D1:B14C -  -  -  -  	;HL POINTING TO COLOR PALETTE DATA
  683 D1:B14C -  -  -  -  
  684 D1:B14C -  -  -  -  	
  685 D1:B14C 47 -  -  -  	ld b,a ;save for after
  686 D1:B14D -  -  -  -  	;GET LOCAL PALETTE DATA
  687 D1:B14D -  -  -  -  	
  688 D1:B14D 37 -  -  -  	scf 
  689 D1:B14E -  -  -  -  sdcomp_1bpc_1 .equ $ 
  690 D1:B14E D2 58 B1 D1 	jp nc,sdcomp_1bpc_1_skip ;skip if not 1bpc or 2bpc or 3bpc
  691 D1:B152 -  -  -  -  	
  692 D1:B152 7E -  -  -  	ld a,(hl);color data 	
  693 D1:B153 32 33 B0 D1 	ld (sdcomp_indexed_color_data_1),a 
  694 D1:B157 23 -  -  -  	inc hl 
  695 D1:B158 -  -  -  -  	
  696 D1:B158 -  -  -  -  sdcomp_1bpc_1_skip:	
  697 D1:B158 -  -  -  -  
  698 D1:B158 -  -  -  -  
  699 D1:B158 37 -  -  -  	scf 
  700 D1:B159 -  -  -  -  sdcomp_2bpc_1 .equ $ 
  701 D1:B159 D2 63 B1 D1 	jp nc,sdcomp_2bpc_1_skip ;skip if not 2bpc or 3bpc
  702 D1:B15D -  -  -  -  	
  703 D1:B15D 7E -  -  -  	ld a,(hl);color data 
  704 D1:B15E 32 27 B0 D1 	ld (sdcomp_indexed_color_data_2),a 
  705 D1:B162 23 -  -  -  	inc hl 
  706 D1:B163 -  -  -  -  	
  707 D1:B163 -  -  -  -  sdcomp_2bpc_1_skip:	
  708 D1:B163 -  -  -  -  
  709 D1:B163 -  -  -  -  
  710 D1:B163 37 -  -  -  	scf 
  711 D1:B164 -  -  -  -  sdcomp_3bpc_1 .equ $ 
  712 D1:B164 DA 74 B1 D1 	jp c,sdcomp_3bpc_1_skip ;skip if not 3bpc
  713 D1:B168 -  -  -  -  	
  714 D1:B168 7E -  -  -  	ld a,(hl);color data 
  715 D1:B169 32 15 B0 D1 	ld (sdcomp_indexed_color_data_3),a 
  716 D1:B16D 23 -  -  -  	inc hl 
  717 D1:B16E 7E -  -  -  	ld a,(hl);color data 
  718 D1:B16F 32 09 B0 D1 	ld (sdcomp_indexed_color_data_4),a 
  719 D1:B173 23 -  -  -  	inc hl 
  720 D1:B174 -  -  -  -  	
  721 D1:B174 -  -  -  -  sdcomp_3bpc_1_skip:	
  722 D1:B174 -  -  -  -  
  723 D1:B174 -  -  -  -  	
  724 D1:B174 D5 -  -  -  	push de ;loops/line data location
  725 D1:B175 EB -  -  -  	ex de,hl
  726 D1:B176 78 -  -  -  	ld a,b
  727 D1:B177 01 00 00 00 	ld bc,0
  728 D1:B17B 4F -  -  -  	ld c,a;height 
  729 D1:B17C 09 -  -  -  	add hl,bc
  730 D1:B17D EB -  -  -  	ex de,hl;de points to data write location
  731 D1:B17E -  -  -  -  	
  732 D1:B17E -  -  -  -  	
  733 D1:B17E D9 -  -  -  	exx;in to shadow
  734 D1:B17F D1 -  -  -  	pop de 
  735 D1:B180 E1 -  -  -  	pop hl ;alpha data stored from earlier
  736 D1:B181 0E 80 -  -  	ld c,%10000000;alpha mask
  737 D1:B183 D9 -  -  -  	exx;out 
  738 D1:B184 0E 80 -  -  	ld c,%10000000;color mask
  739 D1:B186 -  -  -  -  	
  740 D1:B186 -  -  -  -  	;HL now points to pixel color data 
  741 D1:B186 -  -  -  -  	;HL' points to pixel alpha data 
  742 D1:B186 -  -  -  -  	;C holds color mask
  743 D1:B186 -  -  -  -  	;C' holds alpha mask
  744 D1:B186 -  -  -  -  	;DE' holds loops/line output data location
  745 D1:B186 -  -  -  -  	;DE holds main data output location
  746 D1:B186 -  -  -  -  	;A holds height
  747 D1:B186 -  -  -  -  	;A' holds bits remaining in row
  748 D1:B186 -  -  -  -  
  749 D1:B186 -  -  -  -  
  750 D1:B186 37 -  -  -  	scf 
  751 D1:B187 -  -  -  -  sdcomp_flip_setup .equ $
  752 D1:B187 DA 97 B1 D1 	jp c,sdcomp_find_gap_length;continue if no flip
  753 D1:B18B -  -  -  -  
  754 D1:B18B -  -  -  -  	
  755 D1:B18B 2B -  -  -  	dec hl;dec color pointer
  756 D1:B18C 0E 01 -  -  	ld c, %00000001
  757 D1:B18E D9 -  -  -  	exx;to shadow 
  758 D1:B18F 2B -  -  -  	dec hl;dec alpha pointer
  759 D1:B190 0E 01 -  -  	ld c, %00000001;alpha mask
  760 D1:B192 CD 58 B0 D1 	call sdcomp_traverse_initial
  761 D1:B196 D9 -  -  -  	exx ;out of shadow 
  762 D1:B197 -  -  -  -  	
  763 D1:B197 -  -  -  -  	
  764 D1:B197 -  -  -  -  
  765 D1:B197 -  -  -  -  	;TODO jump to BG routine here
  766 D1:B197 -  -  -  -  	;END SETUP ======================================================================================================
  767 D1:B197 -  -  -  -  	
  768 D1:B197 -  -  -  -  	
  769 D1:B197 -  -  -  -  sdcomp_find_gap_length:
  770 D1:B197 -  -  -  -  	
  771 D1:B197 -  -  -  -  	
  772 D1:B197 -  -  -  -  	
  773 D1:B197 -  -  -  -  ;If virtual 0 was read as the start of an alpha pair, remove 1 from next gap length 
  774 D1:B197 -  -  -  -  ;this will occur if:
  775 D1:B197 -  -  -  -  ;Starting pixels are at the end of line, eg :00000001. ldir length = 0 as virtual 0s are read. interline length should be reduced by 1 
  776 D1:B197 -  -  -  -  ;
  777 D1:B197 -  -  -  -  ;if during ldir search, line data ends in 11, followed by virtual 00. In this case the 11 is the ending pixels if slow sprite, so gap length should not be reduced
  778 D1:B197 -  -  -  -  ; This is done from the addition of 1 gap length whenever the 11->00 case occurs, canceling the interline reduction due to reading vitrual 00. 
  779 D1:B197 -  -  -  -  	
  780 D1:B197 D9 -  -  -  	exx ;to shadow
  781 D1:B198 -  -  -  -  	
  782 D1:B198 -  -  -  -  sdcomp_add_1_gap_length .equ $ + 1
  783 D1:B198 06 00 -  -  	ld b,0;00 pairs found 
  784 D1:B19A 3E 00 -  -  	ld a,0 ;reset
  785 D1:B19C 32 99 B1 D1 	ld (sdcomp_add_1_gap_length),a 
  786 D1:B1A0 -  -  -  -  
  787 D1:B1A0 -  -  -  -  sdcomp_find_gap_length_loop:
  788 D1:B1A0 -  -  -  -  
  789 D1:B1A0 37 -  -  -  	scf 
  790 D1:B1A1 -  -  -  -  sdcomp_end_of_line_gaplength .equ $ 
  791 D1:B1A1 DA CA B1 D1 	jp c, sdcomp_end_of_line_gaplength_skip
  792 D1:B1A5 -  -  -  -  	
  793 D1:B1A5 -  -  -  -  	;We have reached the end of the alpha data, add between line gap length 
  794 D1:B1A5 -  -  -  -  sdcomp_gap_btwn_rows .equ $ + 1
  795 D1:B1A5 3E 00 -  -  	ld a,0
  796 D1:B1A7 80 -  -  -  	add a,b 
  797 D1:B1A8 -  -  -  -  sdcomp_dec_gap_btwn_rows .equ $ 	
  798 D1:B1A8 00 -  -  -  	nop ;replace with dec a to decrease gap length 
  799 D1:B1A9 47 -  -  -  	ld b,a 
  800 D1:B1AA 3E 00 -  -  	ld a,%00000000 ;nop 
  801 D1:B1AC 32 A8 B1 D1 	ld (sdcomp_dec_gap_btwn_rows),a ;reset dec gap
  802 D1:B1B0 3E DA -  -  	ld a,%11011010;jp c
  803 D1:B1B2 32 11 AF D1 	ld (sdcomp_end_of_line_alp),a ;Reset virtual zero flag, reading alpha data will now be the next line 
  804 D1:B1B6 32 A1 B1 D1 	ld (sdcomp_end_of_line_gaplength),a ;Reset flag for adding interline gaplength 
  805 D1:B1BA -  -  -  -  	
  806 D1:B1BA 37 -  -  -  	scf
  807 D1:B1BB -  -  -  -  sdcomp_flip_traverse .equ $
  808 D1:B1BB D4 4A B0 D1 	call nc,sdcomp_traverse_line_data ;call line data traverse if flip
  809 D1:B1BF -  -  -  -  		
  810 D1:B1BF -  -  -  -  	;Write loops/line data as we have reached a gap btwn lines 
  811 D1:B1BF 3A 2F B2 D1 	ld a,(sdcomp_loops_per_line_counter)
  812 D1:B1C3 12 -  -  -  	ld (de),a ;write loops/line data 
  813 D1:B1C4 13 -  -  -  	inc de
  814 D1:B1C5 -  -  -  -  	
  815 D1:B1C5 -  -  -  -  	
  816 D1:B1C5 37 -  -  -  	scf 
  817 D1:B1C6 -  -  -  -  sdcomp_end_reached_flag .equ $;check if end of sprite reached
  818 D1:B1C6 D2 9E B2 D1 	jp nc,sdcomp_end
  819 D1:B1CA -  -  -  -  
  820 D1:B1CA -  -  -  -  	
  821 D1:B1CA -  -  -  -  sdcomp_end_of_line_gaplength_skip:
  822 D1:B1CA CD 69 AF D1 	call sdcomp_get_next_alpha_pair
  823 D1:B1CE -  -  -  -  	;call write_a_to_ram
  824 D1:B1CE 04 -  -  -  	inc b 
  825 D1:B1CF -  -  -  -  
  826 D1:B1CF -  -  -  -  	;push af ;TEST
  827 D1:B1CF -  -  -  -  	;ld a,$AB;TEST
  828 D1:B1CF -  -  -  -  	;call write_a_to_ram
  829 D1:B1CF -  -  -  -  	
  830 D1:B1CF -  -  -  -  	;call write_a_to_ram
  831 D1:B1CF -  -  -  -  	;pop af ;TEST
  832 D1:B1CF -  -  -  -  	
  833 D1:B1CF B7 -  -  -  	or a
  834 D1:B1D0 CA A0 B1 D1 	jp z,sdcomp_find_gap_length_loop
  835 D1:B1D4 -  -  -  -  	
  836 D1:B1D4 -  -  -  -  ;END OF GAP LENGTH LOOP =====================	
  837 D1:B1D4 -  -  -  -  	
  838 D1:B1D4 F5 -  -  -  	push af; save leading pixel alpha data 
  839 D1:B1D5 -  -  -  -  	;B holds number of 00 pairs + 1
  840 D1:B1D5 -  -  -  -  	
  841 D1:B1D5 -  -  -  -  	;ld a,$AA ;test
  842 D1:B1D5 -  -  -  -  	;call write_a_to_ram
  843 D1:B1D5 -  -  -  -  	;ld a,b ;test
  844 D1:B1D5 -  -  -  -  	;call write_a_to_ram
  845 D1:B1D5 -  -  -  -  	
  846 D1:B1D5 -  -  -  -  	
  847 D1:B1D5 -  -  -  -  	
  848 D1:B1D5 -  -  -  -  	;Write gap length data to output
  849 D1:B1D5 78 -  -  -  	ld a,b 
  850 D1:B1D6 D9 -  -  -  	exx;out of shadow 
  851 D1:B1D7 12 -  -  -  	ld (de),a;GAP LENGTH 
  852 D1:B1D8 13 -  -  -  	inc de 
  853 D1:B1D9 D9 -  -  -  	exx;into shadow 	
  854 D1:B1DA -  -  -  -  	
  855 D1:B1DA -  -  -  -  	
  856 D1:B1DA -  -  -  -  ;LEADING PIXELS ===================================================================================================
  857 D1:B1DA F1 -  -  -  	pop af ;a holds leading pixel pair alpha data (FF,0F,F0)
  858 D1:B1DB -  -  -  -  	
  859 D1:B1DB 37 -  -  -  	scf 
  860 D1:B1DC -  -  -  -  sdcomp_fast_1 .equ $ 
  861 D1:B1DC D2 E6 B1 D1 	jp nc, sdcomp_ldir_start 
  862 D1:B1E0 -  -  -  -  	
  863 D1:B1E0 D9 -  -  -  	exx;out of shadow
  864 D1:B1E1 CD A9 B0 D1 	call sdcomp_write_leading_or_end_pixels
  865 D1:B1E5 D9 -  -  -  	exx;into shadow 
  866 D1:B1E6 -  -  -  -  	
  867 D1:B1E6 -  -  -  -  
  868 D1:B1E6 -  -  -  -  	
  869 D1:B1E6 -  -  -  -  ;LDIR ==============================================================================================================	
  870 D1:B1E6 -  -  -  -  	;Count number of 11 pairs for LDIR section
  871 D1:B1E6 -  -  -  -  	;If end of line reached we know last pixels must be the ending pair
  872 D1:B1E6 -  -  -  -  	;
  873 D1:B1E6 -  -  -  -  	
  874 D1:B1E6 -  -  -  -  	;If ending is 11 -> 00 
  875 D1:B1E6 -  -  -  -  	;11 pair will need to become ending pixels if slow sprite
  876 D1:B1E6 -  -  -  -  	;Will need to reduce b by 1 
  877 D1:B1E6 -  -  -  -  	
  878 D1:B1E6 -  -  -  -  	;If ending is 11 ->01/10
  879 D1:B1E6 -  -  -  -  	;last pair wil become ending pixels, dont reduce b 
  880 D1:B1E6 -  -  -  -  	
  881 D1:B1E6 -  -  -  -  sdcomp_ldir_start:
  882 D1:B1E6 -  -  -  -  
  883 D1:B1E6 -  -  -  -  ;	ld a, %11010010 ;jp nc 
  884 D1:B1E6 -  -  -  -  ;	ld (sdcomp_end_of_line_2) , a ;reset end of line flag 
  885 D1:B1E6 -  -  -  -  
  886 D1:B1E6 06 00 -  -  	ld b,0; will hold number of 11 pairs found
  887 D1:B1E8 -  -  -  -  sdcomp_ldir_loop:
  888 D1:B1E8 CD 69 AF D1 	call sdcomp_get_next_alpha_pair ;get alpha data
  889 D1:B1EC 04 -  -  -  	inc b 
  890 D1:B1ED -  -  -  -  	
  891 D1:B1ED -  -  -  -  	;push af 
  892 D1:B1ED -  -  -  -  	;ld a,$DE 
  893 D1:B1ED -  -  -  -  	;call write_a_to_ram
  894 D1:B1ED -  -  -  -  	;pop af
  895 D1:B1ED -  -  -  -  	;call write_a_to_ram
  896 D1:B1ED -  -  -  -  	
  897 D1:B1ED -  -  -  -  ;	scf 
  898 D1:B1ED -  -  -  -  ;sdcomp_end_of_line_2 .equ $ ;set when end of line reached 
  899 D1:B1ED -  -  -  -  ;	jp nc, sdcomp_ldir_loop_end;If read last in line
  900 D1:B1ED -  -  -  -  	
  901 D1:B1ED EE FF -  -  	xor %11111111 ;flip all bits  (CPL does not set flags :(  )
  902 D1:B1EF CA E8 B1 D1 	jp z, sdcomp_ldir_loop; if a is 0 means a was $FF 
  903 D1:B1F3 2F -  -  -  	cpl ; flip back 
  904 D1:B1F4 -  -  -  -  sdcomp_ldir_loop_end:
  905 D1:B1F4 -  -  -  -  
  906 D1:B1F4 -  -  -  -  	
  907 D1:B1F4 -  -  -  -  	;at this point b holds # 11 pairs +1 
  908 D1:B1F4 37 -  -  -  	scf 
  909 D1:B1F5 -  -  -  -  sdcomp_fast_2 .equ $ 
  910 D1:B1F5 D2 10 B2 D1 	jp nc,sdcomp_ldir_write ;jump before dec b because we have read first 11 pair in searching for gaplength 
  911 D1:B1F9 -  -  -  -  
  912 D1:B1F9 -  -  -  -  	
  913 D1:B1F9 -  -  -  -  	
  914 D1:B1F9 05 -  -  -  	dec b ;b holds # 11 pairs 
  915 D1:B1FA CA 23 B2 D1 	jp z,sdcomp_no_ldir;no pairs found,no ldir length
  916 D1:B1FE B7 -  -  -  	or a
  917 D1:B1FF C2 10 B2 D1 	jp nz,sdcomp_ldir_write;ends not in 00, has single ending pixel
  918 D1:B203 -  -  -  -  	
  919 D1:B203 -  -  -  -  	;ends in 11 -> 00,ending pixels will be 11 if slow sprite. If fast, jump to ldir write here 
  920 D1:B203 -  -  -  -  	
  921 D1:B203 -  -  -  -  	;ld a,$DF
  922 D1:B203 -  -  -  -  	;call write_a_to_ram
  923 D1:B203 -  -  -  -  	
  924 D1:B203 -  -  -  -  	;must add 1 to next gap length, have already read first 00
  925 D1:B203 -  -  -  -  	;for the case with virtual 00, this cancels the decrease in gap length 
  926 D1:B203 3E 01 -  -  	ld a,1;start w 1 gap len
  927 D1:B205 32 99 B1 D1 	ld (sdcomp_add_1_gap_length),a 
  928 D1:B209 3E FF -  -  	ld a,$ff;ending pixels 11
  929 D1:B20B -  -  -  -  	
  930 D1:B20B 05 -  -  -  	dec b;reduce length by 1, final pair is end pixels
  931 D1:B20C CA 23 B2 D1 	jp z,sdcomp_no_ldir;no ldir length,ending pixels is 11 
  932 D1:B210 -  -  -  -  	;b holds ldir length 
  933 D1:B210 -  -  -  -  	
  934 D1:B210 -  -  -  -  
  935 D1:B210 -  -  -  -  ;b holds ldir length, a holds ending pixels
  936 D1:B210 -  -  -  -  sdcomp_ldir_write:
  937 D1:B210 -  -  -  -  
  938 D1:B210 -  -  -  -  	;b holds 11 pairs found 
  939 D1:B210 -  -  -  -  	
  940 D1:B210 -  -  -  -  	;push af;TEST
  941 D1:B210 -  -  -  -  	;ld a,$DA 
  942 D1:B210 -  -  -  -  	;call write_a_to_ram
  943 D1:B210 -  -  -  -  	;ld a,b 
  944 D1:B210 -  -  -  -  	;call write_a_to_ram
  945 D1:B210 -  -  -  -  	;pop af ;TEST
  946 D1:B210 -  -  -  -  
  947 D1:B210 F5 -  -  -  	push af;save ending pixels
  948 D1:B211 78 -  -  -  	ld a,b
  949 D1:B212 D9 -  -  -  	exx ;out 
  950 D1:B213 12 -  -  -  	ld (de),a;write ldir length
  951 D1:B214 13 -  -  -  	inc de 
  952 D1:B215 CD 95 B0 D1 	call sdcomp_write_ldir_data_loop
  953 D1:B219 -  -  -  -  
  954 D1:B219 F1 -  -  -  	pop af;return ending pixels
  955 D1:B21A -  -  -  -  	
  956 D1:B21A 37 -  -  -  	scf
  957 D1:B21B -  -  -  -  sdcomp_fast_3 .equ $ 
  958 D1:B21B D2 2E B2 D1 	jp nc,sdcomp_inc_loops_per_line ;skip ending pixels
  959 D1:B21F -  -  -  -  	
  960 D1:B21F C3 2A B2 D1 	jp sdcomp_write_end_pixels
  961 D1:B223 -  -  -  -  sdcomp_no_ldir:;no ldir length, a holds ending pixels,00,10,01,11
  962 D1:B223 -  -  -  -  
  963 D1:B223 -  -  -  -  
  964 D1:B223 -  -  -  -  	;push af ;TEST
  965 D1:B223 -  -  -  -  	;ld a,$DB
  966 D1:B223 -  -  -  -  	;call write_a_to_ram
  967 D1:B223 -  -  -  -  	;pop af ;TEST
  968 D1:B223 -  -  -  -  	;call write_a_to_ram
  969 D1:B223 -  -  -  -  
  970 D1:B223 F5 -  -  -  	push af;save end pixels
  971 D1:B224 -  -  -  -  	
  972 D1:B224 D9 -  -  -  	exx;out of shadow
  973 D1:B225 3E 00 -  -  	ld a,0
  974 D1:B227 12 -  -  -  	ld (de),a ;write 0 as ldir length
  975 D1:B228 13 -  -  -  	inc de 
  976 D1:B229 F1 -  -  -  	pop af;return ending pixels
  977 D1:B22A -  -  -  -  
  978 D1:B22A -  -  -  -  ;WRITE ENDING PIXELS ======================================================================================
  979 D1:B22A -  -  -  -  
  980 D1:B22A -  -  -  -  sdcomp_write_end_pixels:
  981 D1:B22A -  -  -  -  ;not in shadow
  982 D1:B22A -  -  -  -  	
  983 D1:B22A -  -  -  -  	;test
  984 D1:B22A -  -  -  -  	;push af 
  985 D1:B22A -  -  -  -  	;ld a,$E0
  986 D1:B22A -  -  -  -  	;call write_a_to_ram
  987 D1:B22A -  -  -  -  	;pop af 
  988 D1:B22A -  -  -  -  	
  989 D1:B22A -  -  -  -  
  990 D1:B22A CD A9 B0 D1 	call sdcomp_write_leading_or_end_pixels
  991 D1:B22E -  -  -  -  	
  992 D1:B22E -  -  -  -  	
  993 D1:B22E -  -  -  -  ;sdcomp_test_lines_stop .equ $ + 1 
  994 D1:B22E -  -  -  -  	;ld a,2
  995 D1:B22E -  -  -  -  	;dec a 
  996 D1:B22E -  -  -  -  	;jp z,sdcomp_end
  997 D1:B22E -  -  -  -  	;ld (sdcomp_test_lines_stop),a 
  998 D1:B22E -  -  -  -  
  999 D1:B22E -  -  -  -  sdcomp_inc_loops_per_line:	
 1000 D1:B22E -  -  -  -  	;INC LOOP/LINE count
 1001 D1:B22E -  -  -  -  sdcomp_loops_per_line_counter .equ $ + 1
 1002 D1:B22E 3E 00 -  -  	ld a,0;inc number of loops
 1003 D1:B230 3C -  -  -  	inc a 
 1004 D1:B231 32 2F B2 D1 	ld (sdcomp_loops_per_line_counter),a
 1005 D1:B235 -  -  -  -  
 1006 D1:B235 -  -  -  -  
 1007 D1:B235 -  -  -  -  	;jp sdcomp_find_gap_length ;TESTING REMOVE
 1008 D1:B235 -  -  -  -  	
 1009 D1:B235 -  -  -  -  	;Check the timer to see if we need to begin rendering next frame 
 1010 D1:B235 -  -  -  -  	;1090 cycles @ 32768hz ~= 1 frame (1/30s)
 1011 D1:B235 -  -  -  -  	;Should stop decompressions at 1000 cycles?
 1012 D1:B235 -  -  -  -  	; = %00000011, 11101000
 1013 D1:B235 -  -  -  -  sdcomp_clock_check_loop:
 1014 D1:B235 3A 01 00 F2 	ld a,($F20001);128hz clock
 1015 D1:B239 FE 03 -  -  	cp %00000011 ;check if reached 3 
 1016 D1:B23B DA 97 B1 D1 	jp c,sdcomp_find_gap_length ;msb <= 2, can continue  
 1017 D1:B23F 3A 00 00 F2 	ld a,($F20000);32768hz clock
 1018 D1:B243 FE E8 -  -  	cp %11101000;check if reached value 
 1019 D1:B245 DA 97 B1 D1 	jp c,sdcomp_find_gap_length ;msb = 3 and lsb < value, can continue
 1020 D1:B249 -  -  -  -  	
 1021 D1:B249 -  -  -  -  	;Past clock threshold, need to stop decompressions
 1022 D1:B249 -  -  -  -  
 1023 D1:B249 -  -  -  -  
 1024 D1:B249 -  -  -  -  	;TODO can prob not need to save (a) register
 1025 D1:B249 -  -  -  -  sdcomp_interrupt:
 1026 D1:B249 -  -  -  -  
 1027 D1:B249 -  -  -  -  
 1028 D1:B249 -  -  -  -  	;not in shadow 
 1029 D1:B249 22 7B B2 D1 	ld (sdcomp_cont_hl),hl 
 1030 D1:B24D EB -  -  -  	ex de,hl
 1031 D1:B24E 22 7F B2 D1 	ld (sdcomp_cont_de),hl 
 1032 D1:B252 C5 -  -  -  	push bc
 1033 D1:B253 E1 -  -  -  	pop hl
 1034 D1:B254 22 83 B2 D1 	ld (sdcomp_cont_bc),hl
 1035 D1:B258 32 87 B2 D1 	ld (sdcomp_cont_a),a 
 1036 D1:B25C D9 -  -  -  	exx 
 1037 D1:B25D 08 -  -  -  	ex af,af' ;'
 1038 D1:B25E 22 8B B2 D1 	ld (sdcomp_cont_hlP),hl 
 1039 D1:B262 EB -  -  -  	ex de,hl
 1040 D1:B263 22 8F B2 D1 	ld (sdcomp_cont_deP),hl 
 1041 D1:B267 C5 -  -  -  	push bc 
 1042 D1:B268 E1 -  -  -  	pop hl
 1043 D1:B269 22 93 B2 D1 	ld (sdcomp_cont_bcP),hl
 1044 D1:B26D 32 97 B2 D1 	ld (sdcomp_cont_aP),a 
 1045 D1:B271 -  -  -  -  	
 1046 D1:B271 -  -  -  -  	
 1047 D1:B271 3E AA -  -  	ld a, $AA
 1048 D1:B273 CD 73 AB D1 	call write_a_to_ram
 1049 D1:B277 -  -  -  -  	
 1050 D1:B277 3E 01 -  -  	ld a,1 ;Return 1 if interrupted
 1051 D1:B279 C9 -  -  -  	ret 
 1052 D1:B27A -  -  -  -  	
 1053 D1:B27A -  -  -  -  sdcomp_continue:
 1054 D1:B27A -  -  -  -  	;not in shadow 
 1055 D1:B27A -  -  -  -  sdcomp_cont_hl .equ $ + 1
 1056 D1:B27A 21 00 00 00 	ld hl,0
 1057 D1:B27E -  -  -  -  sdcomp_cont_de .equ $ + 1
 1058 D1:B27E 11 00 00 00 	ld de,0
 1059 D1:B282 -  -  -  -  sdcomp_cont_bc .equ $ + 1
 1060 D1:B282 01 00 00 00 	ld bc,0
 1061 D1:B286 -  -  -  -  sdcomp_cont_a .equ $ + 1
 1062 D1:B286 3E 00 -  -  	ld a,0
 1063 D1:B288 D9 -  -  -  	exx 
 1064 D1:B289 08 -  -  -  	ex af,af' ;'
 1065 D1:B28A -  -  -  -  sdcomp_cont_hlP .equ $ + 1
 1066 D1:B28A 21 00 00 00 	ld hl,0
 1067 D1:B28E -  -  -  -  sdcomp_cont_deP .equ $ + 1
 1068 D1:B28E 11 00 00 00 	ld de,0
 1069 D1:B292 -  -  -  -  sdcomp_cont_bcP .equ $ + 1
 1070 D1:B292 01 00 00 00 	ld bc,0
 1071 D1:B296 -  -  -  -  sdcomp_cont_aP .equ $ + 1
 1072 D1:B296 3E 00 -  -  	ld a,0	
 1073 D1:B298 -  -  -  -  	
 1074 D1:B298 D9 -  -  -  	exx ;out of shadow 
 1075 D1:B299 08 -  -  -  	ex af,af' ;'
 1076 D1:B29A -  -  -  -  
 1077 D1:B29A C3 97 B1 D1 	jp sdcomp_find_gap_length
 1078 D1:B29E -  -  -  -  
 1079 D1:B29E -  -  -  -  	
 1080 D1:B29E -  -  -  -  
 1081 D1:B29E -  -  -  -  sdcomp_end:
 1082 D1:B29E -  -  -  -  	
 1083 D1:B29E -  -  -  -  	;ld a,$69
 1084 D1:B29E -  -  -  -  	;call write_a_to_ram
 1085 D1:B29E -  -  -  -  	
 1086 D1:B29E 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1087 D1:B2A0 32 C6 B1 D1 	ld (sdcomp_end_reached_flag),a 
 1088 D1:B2A4 -  -  -  -  	
 1089 D1:B2A4 3E 00 -  -  	ld a,0 ;return 0 if finished decompressing 
 1090 D1:B2A6 C9 -  -  -  	ret 
 1091 D1:B2A7 -  -  -  -  
 1092 D1:B2A7 -  -  -  -  
 1093 D1:B2A7 -  -  -  -  ;bit orders
 1094 D1:B2A7 -  -  -  -  ;	noflip   flip 
 1095 D1:B2A7 -  -  -  -  ;4bpp 3210 	 0123
 1096 D1:B2A7 -  -  -  -  ;3bpp 210	 012
 1097 D1:B2A7 -  -  -  -  ;2bpp 10	 01
 1098 D1:B2A7 -  -  -  -  ;1bpp 0		 0
 1099 D1:B2A7 -  -  -  -  
 1100 D1:B2A7 -  -  -  -  
 1101 D1:B2A7 -  -  -  -  sdcomp_set_0bpc:
 1102 D1:B2A7 3E DA -  -  	ld a,%11011010;jp c
 1103 D1:B2A9 32 B2 AF D1 	ld (sdcomp_0bpc),a
 1104 D1:B2AD -  -  -  -  	
 1105 D1:B2AD 32 59 B1 D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
 1106 D1:B2B1 32 64 B1 D1 	ld (sdcomp_3bpc_1),a 
 1107 D1:B2B5 -  -  -  -  	
 1108 D1:B2B5 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1109 D1:B2B7 32 4E B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1110 D1:B2BB 3E 00 -  -  	ld a,%00000000
 1111 D1:B2BD 32 73 B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1112 D1:B2C1 C9 -  -  -  	ret 
 1113 D1:B2C2 -  -  -  -  	
 1114 D1:B2C2 -  -  -  -  sdcomp_set_1bpc:
 1115 D1:B2C2 3E D2 -  -  	ld a,%11010010;jp nc
 1116 D1:B2C4 32 B2 AF D1 	ld (sdcomp_0bpc),a
 1117 D1:B2C8 3E DA -  -  	ld a,%11011010;jp c
 1118 D1:B2CA 32 C4 AF D1 	ld (sdcomp_1bpc),a
 1119 D1:B2CE -  -  -  -  	
 1120 D1:B2CE 32 59 B1 D1 	ld (sdcomp_2bpc_1),a ;for setting local pallete data
 1121 D1:B2D2 32 64 B1 D1 	ld (sdcomp_3bpc_1),a 
 1122 D1:B2D6 -  -  -  -  	
 1123 D1:B2D6 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1124 D1:B2D8 32 4E B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1125 D1:B2DC -  -  -  -  	
 1126 D1:B2DC -  -  -  -  	
 1127 D1:B2DC 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1128 D1:B2DE 32 C2 AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1129 D1:B2E2 -  -  -  -  	
 1130 D1:B2E2 3E 80 -  -  	ld a,%10000000
 1131 D1:B2E4 32 73 B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1132 D1:B2E8 -  -  -  -  	
 1133 D1:B2E8 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1134 D1:B2EA 32 6C B0 D1 	ld (sdcomp_traverse_2bpp),a
 1135 D1:B2EE 32 6E B0 D1 	ld (sdcomp_traverse_3bpp),a
 1136 D1:B2F2 32 70 B0 D1 	ld (sdcomp_traverse_4bpp),a
 1137 D1:B2F6 C9 -  -  -  	ret 
 1138 D1:B2F7 -  -  -  -  
 1139 D1:B2F7 -  -  -  -  sdcomp_set_2bpc:
 1140 D1:B2F7 3E D2 -  -  	ld a,%11010010;jp nc
 1141 D1:B2F9 32 B2 AF D1 	ld (sdcomp_0bpc),a
 1142 D1:B2FD 32 C4 AF D1 	ld (sdcomp_1bpc),a
 1143 D1:B301 -  -  -  -  	
 1144 D1:B301 3E DA -  -  	ld a,%11011010;jp c
 1145 D1:B303 32 D6 AF D1 	ld (sdcomp_2bpc),a
 1146 D1:B307 -  -  -  -  	
 1147 D1:B307 32 64 B1 D1 	ld (sdcomp_3bpc_1),a ;for setting local pallete data
 1148 D1:B30B -  -  -  -  	
 1149 D1:B30B 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1150 D1:B30D 32 4E B1 D1 	ld (sdcomp_1bpc_1),a;for setting local pallete data
 1151 D1:B311 32 59 B1 D1 	ld (sdcomp_2bpc_1),a 
 1152 D1:B315 -  -  -  -  	
 1153 D1:B315 37 -  -  -  	scf 
 1154 D1:B316 -  -  -  -  sdcomp_flip_2bpc .equ $ 
 1155 D1:B316 D2 27 B3 D1 	jp nc, sdcomp_2bpc_flip
 1156 D1:B31A -  -  -  -  	
 1157 D1:B31A 3E CB -  -  	ld a,%11001011 ;set 1,e
 1158 D1:B31C 32 C2 AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1159 D1:B320 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1160 D1:B322 32 D4 AF D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1161 D1:B326 -  -  -  -  	
 1162 D1:B326 C9 -  -  -  	ret 
 1163 D1:B327 -  -  -  -  	
 1164 D1:B327 -  -  -  -  sdcomp_2bpc_flip:
 1165 D1:B327 3E CB -  -  	ld a,%11001011 ;set 1,e
 1166 D1:B329 32 D4 AF D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1167 D1:B32D 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1168 D1:B32F 32 C2 AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1169 D1:B333 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1170 D1:B335 32 6C B0 D1 	ld (sdcomp_traverse_2bpp),a
 1171 D1:B339 -  -  -  -  
 1172 D1:B339 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1173 D1:B33B 32 6E B0 D1 	ld (sdcomp_traverse_3bpp),a
 1174 D1:B33F 32 70 B0 D1 	ld (sdcomp_traverse_4bpp),a
 1175 D1:B343 -  -  -  -  	
 1176 D1:B343 3E C0 -  -  	ld a,%11000000
 1177 D1:B345 32 73 B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1178 D1:B349 C9 -  -  -  	ret 
 1179 D1:B34A -  -  -  -  
 1180 D1:B34A -  -  -  -  
 1181 D1:B34A -  -  -  -  sdcomp_set_3bpc:
 1182 D1:B34A -  -  -  -  	
 1183 D1:B34A 3E D2 -  -  	ld a,%11010010;jp nc
 1184 D1:B34C 32 B2 AF D1 	ld (sdcomp_0bpc),a
 1185 D1:B350 32 C4 AF D1 	ld (sdcomp_1bpc),a
 1186 D1:B354 32 D6 AF D1 	ld (sdcomp_2bpc),a
 1187 D1:B358 -  -  -  -  	
 1188 D1:B358 3E DA -  -  	ld a,%11011010;jp c
 1189 D1:B35A 32 E8 AF D1 	ld (sdcomp_3bpc),a
 1190 D1:B35E -  -  -  -  	
 1191 D1:B35E 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1192 D1:B360 32 4E B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1193 D1:B364 32 59 B1 D1 	ld (sdcomp_2bpc_1),a 
 1194 D1:B368 32 64 B1 D1 	ld (sdcomp_3bpc_1),a 
 1195 D1:B36C -  -  -  -  	
 1196 D1:B36C 37 -  -  -  	scf 
 1197 D1:B36D -  -  -  -  sdcomp_flip_3bpc .equ $ 
 1198 D1:B36D D2 84 B3 D1 	jp nc, sdcomp_3bpc_flip	
 1199 D1:B371 -  -  -  -  	
 1200 D1:B371 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1201 D1:B373 32 C2 AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1202 D1:B377 3E CB -  -  	ld a,%11001011 ;set 1,e
 1203 D1:B379 32 D4 AF D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1204 D1:B37D 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1205 D1:B37F 32 E6 AF D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1206 D1:B383 -  -  -  -  	
 1207 D1:B383 C9 -  -  -  	ret 
 1208 D1:B384 -  -  -  -  	
 1209 D1:B384 -  -  -  -  sdcomp_3bpc_flip:
 1210 D1:B384 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1211 D1:B386 32 E6 AF D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1212 D1:B38A 3E CB -  -  	ld a,%11001011 ;set 1,e
 1213 D1:B38C 32 D4 AF D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1214 D1:B390 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1215 D1:B392 32 C2 AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1216 D1:B396 -  -  -  -  	
 1217 D1:B396 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1218 D1:B398 32 6C B0 D1 	ld (sdcomp_traverse_2bpp),a 
 1219 D1:B39C 32 6E B0 D1 	ld (sdcomp_traverse_3bpp),a 
 1220 D1:B3A0 -  -  -  -  	
 1221 D1:B3A0 3E 0F -  -  	ld a, %00001111 ;rrc a 
 1222 D1:B3A2 32 70 B0 D1 	ld (sdcomp_traverse_4bpp),a
 1223 D1:B3A6 -  -  -  -  	
 1224 D1:B3A6 3E E0 -  -  	ld a,%11100000
 1225 D1:B3A8 32 73 B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1226 D1:B3AC -  -  -  -  	
 1227 D1:B3AC C9 -  -  -  	ret 
 1228 D1:B3AD -  -  -  -  
 1229 D1:B3AD -  -  -  -  sdcomp_set_4bpc:
 1230 D1:B3AD -  -  -  -  
 1231 D1:B3AD 3E D2 -  -  	ld a,%11010010;jp nc
 1232 D1:B3AF 32 B2 AF D1 	ld (sdcomp_0bpc),a
 1233 D1:B3B3 32 C4 AF D1 	ld (sdcomp_1bpc),a
 1234 D1:B3B7 32 D6 AF D1 	ld (sdcomp_2bpc),a
 1235 D1:B3BB -  -  -  -  
 1236 D1:B3BB 3E DA -  -  	ld a,%11011010;jp c
 1237 D1:B3BD -  -  -  -  
 1238 D1:B3BD 32 4E B1 D1 	ld (sdcomp_1bpc_1),a ;for setting local pallete data
 1239 D1:B3C1 32 59 B1 D1 	ld (sdcomp_2bpc_1),a 
 1240 D1:B3C5 32 64 B1 D1 	ld (sdcomp_3bpc_1),a 
 1241 D1:B3C9 -  -  -  -  	
 1242 D1:B3C9 37 -  -  -  	scf 
 1243 D1:B3CA -  -  -  -  sdcomp_flip_4bpc .equ $ 
 1244 D1:B3CA D2 E7 B3 D1 	jp nc, sdcomp_4bpc_flip	
 1245 D1:B3CE 3E DB -  -  	ld a,%11011011 ;set 3,e
 1246 D1:B3D0 32 C2 AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1247 D1:B3D4 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1248 D1:B3D6 32 D4 AF D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1249 D1:B3DA 3E CB -  -  	ld a,%11001011 ;set 1,e
 1250 D1:B3DC 32 E6 AF D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1251 D1:B3E0 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1252 D1:B3E2 32 F8 AF D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
 1253 D1:B3E6 C9 -  -  -  	ret 
 1254 D1:B3E7 -  -  -  -  sdcomp_4bpc_flip:
 1255 D1:B3E7 3E DB -  -  	ld a,%11011011 ;set 3,e
 1256 D1:B3E9 32 F8 AF D1 	ld(sdcomp_color_bit_3),a ;for setting correct bit in e when reading color 
 1257 D1:B3ED 3E D3 -  -  	ld a,%11010011 ;set 2,e
 1258 D1:B3EF 32 E6 AF D1 	ld(sdcomp_color_bit_2),a ;for setting correct bit in e when reading color 
 1259 D1:B3F3 3E CB -  -  	ld a,%11001011 ;set 1,e
 1260 D1:B3F5 32 D4 AF D1 	ld(sdcomp_color_bit_1),a ;for setting correct bit in e when reading color 
 1261 D1:B3F9 3E C3 -  -  	ld a,%11000011 ;set 0,e
 1262 D1:B3FB 32 C2 AF D1 	ld(sdcomp_color_bit_0),a ;for setting correct bit in e when reading color 
 1263 D1:B3FF 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1264 D1:B401 32 6C B0 D1 	ld (sdcomp_traverse_2bpp),a 
 1265 D1:B405 32 6E B0 D1 	ld (sdcomp_traverse_3bpp),a 
 1266 D1:B409 32 70 B0 D1 	ld (sdcomp_traverse_4bpp),a 
 1267 D1:B40D -  -  -  -  	
 1268 D1:B40D 3E F0 -  -  	ld a,%11110000
 1269 D1:B40F 32 73 B0 D1 	ld (sdcomp_traverse_bit_check),a 
 1270 D1:B413 -  -  -  -  	
 1271 D1:B413 C9 -  -  -  	ret 
 1272 D1:B414 -  -  -  -  	
 1273 D1:B414 -  -  -  -  	
 1274 D1:B414 -  -  -  -  sdcomp_set_noalpha:
 1275 D1:B414 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1276 D1:B416 32 33 AF D1 	ld (sdcomp_no_alpha_1),a 
 1277 D1:B41A 3E DA -  -  	ld a,%11011010;jp c
 1278 D1:B41C 32 33 B1 D1 	ld (sdcomp_no_alpha_2),a 
 1279 D1:B420 32 64 B0 D1 	ld (sdcomp_no_alpha_3),a 
 1280 D1:B424 C9 -  -  -  	ret
 1281 D1:B425 -  -  -  -  	
 1282 D1:B425 -  -  -  -  sdcomp_reset_noalpha:
 1283 D1:B425 -  -  -  -  
 1284 D1:B425 3E DA -  -  	ld a,%11011010;jp c
 1285 D1:B427 32 33 AF D1 	ld (sdcomp_no_alpha_1),a 
 1286 D1:B42B 3E D2 -  -  	ld a, %11010010 ;jp nc
 1287 D1:B42D 32 33 B1 D1 	ld (sdcomp_no_alpha_2),a 
 1288 D1:B431 3E CA -  -  	ld a, %11001010 ;jp z
 1289 D1:B433 32 64 B0 D1 	ld (sdcomp_no_alpha_3),a 
 1290 D1:B437 C9 -  -  -  	ret
 1291 D1:B438 -  -  -  -  
 1292 D1:B438 -  -  -  -  
 1293 D1:B438 -  -  -  -  sdcomp_set_offset:
 1294 D1:B438 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1295 D1:B43A 32 5B AF D1 	ld (sdcomp_offset_1),a 
 1296 D1:B43E 32 1F AF D1 	ld (sdcomp_bit_offset),a 
 1297 D1:B442 3E 04 -  -  	ld a,%00000100 ;inc b 
 1298 D1:B444 32 1B B1 D1 	ld (sdcomp_offset_2),a 
 1299 D1:B448 -  -  -  -  	
 1300 D1:B448 C9 -  -  -  	ret 
 1301 D1:B449 -  -  -  -  
 1302 D1:B449 -  -  -  -  sdcomp_reset_offset:
 1303 D1:B449 3E DA -  -  	ld a,%11011010;jp c
 1304 D1:B44B 32 5B AF D1 	ld (sdcomp_offset_1),a 
 1305 D1:B44F 32 1F AF D1 	ld (sdcomp_bit_offset),a 
 1306 D1:B453 3E 00 -  -  	ld a,%00000000 ;nop
 1307 D1:B455 32 1B B1 D1 	ld (sdcomp_offset_2),a 
 1308 D1:B459 C9 -  -  -  	ret 
 1309 D1:B45A -  -  -  -  	
 1310 D1:B45A -  -  -  -  sdcomp_set_flip:
 1311 D1:B45A 3E 01 -  -  	ld a, %00000001 ;rlc c 
 1312 D1:B45C 32 0A AF D1 	ld (sdcomp_flip_bitstream),a
 1313 D1:B460 3E 2B -  -  	ld a, %00101011 ;dec hl 
 1314 D1:B462 32 0C AF D1 	ld (sdcomp_flip_bitstream_2),a 
 1315 D1:B466 3E DC -  -  	ld a, %11011100 ;call c 
 1316 D1:B468 32 BB B1 D1 	ld (sdcomp_flip_traverse),a 
 1317 D1:B46C -  -  -  -  	
 1318 D1:B46C 3E DA -  -  	ld a,%11011010;jp c
 1319 D1:B46E 32 16 B3 D1 	ld (sdcomp_flip_2bpc),a
 1320 D1:B472 32 6D B3 D1 	ld (sdcomp_flip_3bpc),a
 1321 D1:B476 32 CA B3 D1 	ld (sdcomp_flip_4bpc),a
 1322 D1:B47A 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1323 D1:B47C 32 87 B1 D1 	ld (sdcomp_flip_setup),a 
 1324 D1:B480 -  -  -  -  	
 1325 D1:B480 C9 -  -  -  	ret 
 1326 D1:B481 -  -  -  -  
 1327 D1:B481 -  -  -  -  sdcomp_reset_flip:
 1328 D1:B481 3E 09 -  -  	ld a, %00001001 ;rrc c 
 1329 D1:B483 32 0A AF D1 	ld (sdcomp_flip_bitstream),a
 1330 D1:B487 3E 23 -  -  	ld a, %00100011 ;inc hl 
 1331 D1:B489 32 0C AF D1 	ld (sdcomp_flip_bitstream_2),a 
 1332 D1:B48D 3E D4 -  -  	ld a, %11010100 ;call nc 
 1333 D1:B48F 32 BB B1 D1 	ld (sdcomp_flip_traverse),a 
 1334 D1:B493 -  -  -  -  	
 1335 D1:B493 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1336 D1:B495 32 16 B3 D1 	ld (sdcomp_flip_2bpc),a
 1337 D1:B499 32 6D B3 D1 	ld (sdcomp_flip_3bpc),a
 1338 D1:B49D 32 CA B3 D1 	ld (sdcomp_flip_4bpc),a
 1339 D1:B4A1 3E DA -  -  	ld a,%11011010;jp c
 1340 D1:B4A3 32 87 B1 D1 	ld (sdcomp_flip_setup),a 
 1341 D1:B4A7 C9 -  -  -  	ret 
 1342 D1:B4A8 -  -  -  -  
 1343 D1:B4A8 -  -  -  -  
 1344 D1:B4A8 -  -  -  -  sdcomp_set_fast:
 1345 D1:B4A8 3E DA -  -  	ld a,%11011010;jp c
 1346 D1:B4AA 32 DC B1 D1 	ld(sdcomp_fast_1),a 
 1347 D1:B4AE 32 F5 B1 D1 	ld(sdcomp_fast_2),a 
 1348 D1:B4B2 32 1B B2 D1 	ld(sdcomp_fast_3),a 
 1349 D1:B4B6 -  -  -  -  	
 1350 D1:B4B6 C9 -  -  -  	ret 
 1351 D1:B4B7 -  -  -  -  
 1352 D1:B4B7 -  -  -  -  sdcomp_reset_fast:
 1353 D1:B4B7 3E D2 -  -  	ld a, %11010010 ;jp nc 
 1354 D1:B4B9 32 DC B1 D1 	ld(sdcomp_fast_1),a 
 1355 D1:B4BD 32 F5 B1 D1 	ld(sdcomp_fast_2),a 
 1356 D1:B4C1 32 1B B2 D1 	ld(sdcomp_fast_3),a 
 1357 D1:B4C5 -  -  -  -  	
 1358 D1:B4C5 C9 -  -  -  	ret 
 1359 D1:B4C6 -  -  -  -  
 1360 D1:B4C6 -  -  -  -  
 1361 D1:B4C6 -  -  -  -  
 1362 D1:B4C6 -  -  -  -  
 1363 D1:B4C6 -  -  -  -  
 1364 D1:B4C6 -  -  -  -  
Listing for file "ascent.asm"
  534 D1:B4C6 -  -  -  -  #include "drawFG.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\drawFG.txt"
    1 D1:B4C6 -  -  -  -  
    2 D1:B4C6 -  -  -  -  FGMaxSpriteHeight .equ 120
    3 D1:B4C6 -  -  -  -  
    4 D1:B4C6 -  -  -  -  draw_mg:
    5 D1:B4C6 -  -  -  -  
    6 D1:B4C6 3E D2 -  -  	ld a, %11010010 ;jp nc
    7 D1:B4C8 32 E3 B5 D1 	ld (dfgs_bg_mode_1),a 
    8 D1:B4CC 32 47 B6 D1 	ld (dfgs_bg_mode_2),a 
    9 D1:B4D0 -  -  -  -  
   10 D1:B4D0 2A AC AB D1 	ld hl,(draw_buffer)
   11 D1:B4D4 22 F3 B5 D1 	ld (dfgs_vram_top_1),hl
   12 D1:B4D8 22 A8 B6 D1 	ld (dfgs_vram_top_2),hl
   13 D1:B4DC 01 00 96 00 	ld bc,160*240
   14 D1:B4E0 09 -  -  -  	add hl,bc
   15 D1:B4E1 22 63 B6 D1 	ld (dfgs_vram_bottom_1),hl 
   16 D1:B4E5 22 83 B6 D1 	ld (dfgs_vram_bottom_2),hl 
   17 D1:B4E9 22 0F B7 D1 	ld (dfgs_vram_bottom_3),hl 
   18 D1:B4ED 22 2F B7 D1 	ld (dfgs_vram_bottom_4),hl 
   19 D1:B4F1 -  -  -  -  	
   20 D1:B4F1 2A A6 AB D1 	ld hl,(cam_pos)
   21 D1:B4F5 CB 3C -  -  	srl h ;div by 2
   22 D1:B4F7 CB 1D -  -  	rr l 
   23 D1:B4F9 -  -  -  -  	
   24 D1:B4F9 01 EF 00 00 	ld bc,239
   25 D1:B4FD 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of fg layer
   26 D1:B4FE 7D -  -  -  	ld a,l ;lsb cam pos, = line number in middle frame
   27 D1:B4FF 32 B1 B5 D1 	ld (dfgs_cam_height_1),a
   28 D1:B503 32 4C B6 D1 	ld (dfgs_cam_height_2),a ;y value in dataframe of uppermost line of viewport
   29 D1:B507 32 E0 B6 D1 	ld (dfgs_cam_height_3),a
   30 D1:B50B 32 FA B6 D1 	ld (dfgs_cam_height_4),a	
   31 D1:B50F ED 44 -  -  	neg 
   32 D1:B511 32 E8 B5 D1 	ld (dfgs_viewport_to_upper_frame),a ;1 = top line of VP is top line of middle frame
   33 D1:B515 ED 44 -  -  	neg 
   34 D1:B517 D6 EF -  -  	sub 239
   35 D1:B519 32 03 B7 D1 	ld (dfgs_viewport_bottom_y),a
   36 D1:B51D -  -  -  -  	
   37 D1:B51D 01 00 00 00 	ld bc,0
   38 D1:B521 4C -  -  -  	ld c,h;msb ccam pos 
   39 D1:B522 0C -  -  -  	inc c 
   40 D1:B523 21 4C BB D1 	ld hl,MG_Data_frame_table
   41 D1:B527 09 -  -  -  	add hl,bc
   42 D1:B528 09 -  -  -  	add hl,bc 
   43 D1:B529 09 -  -  -  	add hl,bc 	
   44 D1:B52A ED 27 -  -  	ld hl,(hl);upper frame 
   45 D1:B52C -  -  -  -  	
   46 D1:B52C -  -  -  -  	
   47 D1:B52C CD 98 B5 D1 	call draw_fg_sprites
   48 D1:B530 C9 -  -  -  	ret
   49 D1:B531 -  -  -  -  
   50 D1:B531 -  -  -  -  
   51 D1:B531 -  -  -  -  
   52 D1:B531 -  -  -  -  draw_fg:
   53 D1:B531 -  -  -  -  
   54 D1:B531 3E D2 -  -  	ld a, %11010010 ;jp nc
   55 D1:B533 32 E3 B5 D1 	ld (dfgs_bg_mode_1),a 
   56 D1:B537 32 47 B6 D1 	ld (dfgs_bg_mode_2),a 
   57 D1:B53B -  -  -  -  
   58 D1:B53B -  -  -  -  	
   59 D1:B53B 2A AC AB D1 	ld hl,(draw_buffer)
   60 D1:B53F 22 F3 B5 D1 	ld (dfgs_vram_top_1),hl
   61 D1:B543 22 A8 B6 D1 	ld (dfgs_vram_top_2),hl
   62 D1:B547 01 00 96 00 	ld bc,160*240
   63 D1:B54B 09 -  -  -  	add hl,bc
   64 D1:B54C 22 63 B6 D1 	ld (dfgs_vram_bottom_1),hl 
   65 D1:B550 22 83 B6 D1 	ld (dfgs_vram_bottom_2),hl 
   66 D1:B554 22 0F B7 D1 	ld (dfgs_vram_bottom_3),hl 
   67 D1:B558 22 2F B7 D1 	ld (dfgs_vram_bottom_4),hl 
   68 D1:B55C -  -  -  -  	
   69 D1:B55C 2A A6 AB D1 	ld hl,(cam_pos)
   70 D1:B560 01 EF 00 00 	ld bc,239
   71 D1:B564 09 -  -  -  	add hl,bc ;y-value of uppermost visible line of fg layer
   72 D1:B565 7D -  -  -  	ld a,l ;lsb cam pos, = line number in middle frame
   73 D1:B566 32 B1 B5 D1 	ld (dfgs_cam_height_1),a ;SET with line# for bg
   74 D1:B56A 32 4C B6 D1 	ld (dfgs_cam_height_2),a ;y value in dataframe of uppermost line of viewport
   75 D1:B56E 32 E0 B6 D1 	ld (dfgs_cam_height_3),a ;Set to 255 for BG (Skips drawing lower frame)
   76 D1:B572 32 FA B6 D1 	ld (dfgs_cam_height_4),a
   77 D1:B576 ED 44 -  -  	neg 
   78 D1:B578 32 E8 B5 D1 	ld (dfgs_viewport_to_upper_frame),a ; 1 = vp bound is on frame separator
   79 D1:B57C ED 44 -  -  	neg 
   80 D1:B57E D6 EF -  -  	sub 239
   81 D1:B580 32 03 B7 D1 	ld (dfgs_viewport_bottom_y),a
   82 D1:B584 -  -  -  -  	
   83 D1:B584 01 00 00 00 	ld bc,0
   84 D1:B588 4C -  -  -  	ld c,h;msb ccam pos 
   85 D1:B589 0C -  -  -  	inc c 
   86 D1:B58A 21 7E BE D1 	ld hl,FG_Data_frame_table
   87 D1:B58E 09 -  -  -  	add hl,bc
   88 D1:B58F 09 -  -  -  	add hl,bc 
   89 D1:B590 09 -  -  -  	add hl,bc 	
   90 D1:B591 -  -  -  -  
   91 D1:B591 ED 27 -  -  	ld hl,(hl);upper frame 
   92 D1:B593 -  -  -  -  
   93 D1:B593 CD 98 B5 D1 	call draw_fg_sprites
   94 D1:B597 C9 -  -  -  	ret
   95 D1:B598 -  -  -  -  
   96 D1:B598 -  -  -  -  
   97 D1:B598 -  -  -  -  ; Upper Frame =======================================================================================================
   98 D1:B598 -  -  -  -  ; Upper Frame =======================================================================================================
   99 D1:B598 -  -  -  -  ;hl = upper frame data
  100 D1:B598 -  -  -  -   
  101 D1:B598 -  -  -  -  ;load cam height 123,vram top 12 vram bottom 1234
  102 D1:B598 -  -  -  -  draw_fg_sprites:
  103 D1:B598 -  -  -  -  	;UPPER FRAME, bottom of upper frame is not on screen, bottom of mid frame is on screen bottom of lower is not on screen
  104 D1:B598 CD 79 B8 D1 	call sprite_table_from_index
  105 D1:B59C ED 53 70 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de ;write sprite table ptr to required locations 
  106 D1:B5A1 ED 53 B2 B7 
              D1 -  -  -  	ld (dfgs_sprite_pointers_2),de 
  107 D1:B5A6 ED 53 D8 AD 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  108 D1:B5AB -  -  -  -  	
  109 D1:B5AB 11 00 00 00 	ld de,0
  110 D1:B5AF 23 -  -  -  	inc hl;past data table 
  111 D1:B5B0 -  -  -  -  	;hl is number of elements
  112 D1:B5B0 -  -  -  -  	
  113 D1:B5B0 -  -  -  -  	
  114 D1:B5B0 -  -  -  -  	;if cam is far below upper frame, can skip upper frame 
  115 D1:B5B0 -  -  -  -  dfgs_cam_height_1 .equ $ + 1
  116 D1:B5B0 3E 00 -  -  	ld a,0 
  117 D1:B5B2 FE 78 -  -  	cp FGMaxSpriteHeight
  118 D1:B5B4 D2 C6 B5 D1 	jp nc, dfgs_do_upper_loop
  119 D1:B5B8 -  -  -  -  	;cam too low for upper frame sprites to be drawn
  120 D1:B5B8 01 00 00 00 	ld bc,0
  121 D1:B5BC 4E -  -  -  	ld c,(hl) ;bc holds number of elements
  122 D1:B5BD 09 -  -  -  	add hl,bc 
  123 D1:B5BE 09 -  -  -  	add hl,bc 
  124 D1:B5BF 09 -  -  -  	add hl,bc 
  125 D1:B5C0 09 -  -  -  	add hl,bc;hl points to end of current frame data 
  126 D1:B5C1 23 -  -  -  	inc hl;start of next frame
  127 D1:B5C2 C3 12 B6 D1 	jp dfgs_mid_start ;skip upper loop
  128 D1:B5C6 -  -  -  -  	
  129 D1:B5C6 -  -  -  -  	
  130 D1:B5C6 -  -  -  -  dfgs_do_upper_loop:	
  131 D1:B5C6 08 -  -  -  	ex af,af' ;'
  132 D1:B5C7 -  -  -  -  	
  133 D1:B5C7 7E -  -  -  	ld a,(hl);number of elements
  134 D1:B5C8 -  -  -  -  	;TESTING
  135 D1:B5C8 -  -  -  -  	;call write_a_to_ram
  136 D1:B5C8 -  -  -  -  	;call prgmpause
  137 D1:B5C8 -  -  -  -  	;TESTING
  138 D1:B5C8 -  -  -  -  	
  139 D1:B5C8 3C -  -  -  	inc a ;to be decd later
  140 D1:B5C9 08 -  -  -  	ex af,af' ;'
  141 D1:B5CA 23 -  -  -  	inc hl;hl points to first sprite in upper frame  
  142 D1:B5CB -  -  -  -  
  143 D1:B5CB -  -  -  -  dfgs_upper_loop:;Want to check for sprites in upper frame that extend to lower frame 
  144 D1:B5CB -  -  -  -  
  145 D1:B5CB 08 -  -  -  	ex af,af';'
  146 D1:B5CC 3D -  -  -  	dec a ;dec number of elements
  147 D1:B5CD -  -  -  -  	;call write_a_to_ram
  148 D1:B5CD CA 12 B6 D1 	jp z,dfgs_mid_start 
  149 D1:B5D1 08 -  -  -  	ex af,af';'
  150 D1:B5D2 -  -  -  -  
  151 D1:B5D2 7E -  -  -  	ld a,(hl);sprite y value 
  152 D1:B5D3 23 -  -  -  	inc hl ;to height
  153 D1:B5D4 -  -  -  -  	
  154 D1:B5D4 -  -  -  -  	;call write_a_to_ram
  155 D1:B5D4 -  -  -  -  	;call prgmpause
  156 D1:B5D4 CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  157 D1:B5D6 C2 79 B7 D1 	jp nz, dfgs_sg_upper ;goto group loop 
  158 D1:B5DA -  -  -  -  	
  159 D1:B5DA -  -  -  -  	;otherwise single sprite, call draw routine 
  160 D1:B5DA CD E2 B5 D1 	call dfgs_draw_upper_sprite
  161 D1:B5DE -  -  -  -  	
  162 D1:B5DE C3 CB B5 D1 	jp dfgs_upper_loop
  163 D1:B5E2 -  -  -  -  	
  164 D1:B5E2 -  -  -  -  
  165 D1:B5E2 -  -  -  -  ;Can be used for normal sprites and in sprite groups 
  166 D1:B5E2 -  -  -  -  ;a holds y pos in upper frame, hl pts to sprite height 
  167 D1:B5E2 -  -  -  -  dfgs_draw_upper_sprite:
  168 D1:B5E2 -  -  -  -  
  169 D1:B5E2 37 -  -  -  	scf 
  170 D1:B5E3 -  -  -  -  dfgs_bg_mode_1 .equ $ 
  171 D1:B5E3 D2 8D AD D1 	jp nc, dbgl_draw_upper_sprite ;if bg mode go to bg draw routine
  172 D1:B5E7 -  -  -  -  
  173 D1:B5E7 -  -  -  -  
  174 D1:B5E7 -  -  -  -  dfgs_viewport_to_upper_frame .equ $ + 1
  175 D1:B5E7 C6 00 -  -  	add a,0 ;a now holds number of lines to skip in current sprite (1 indexed)
  176 D1:B5E9 -  -  -  -  	;call write_a_to_ram
  177 D1:B5E9 DA 0E B6 D1 	jp c, dfgs_upper_skip ;if sprite has large y pos, can carry over
  178 D1:B5ED BE -  -  -  	cp (hl) ;compare to sprite height 
  179 D1:B5EE D2 0E B6 D1 	jp nc, dfgs_upper_skip ;skips drawing too many lines, sprite is not on screen
  180 D1:B5F2 -  -  -  -  	;a holds number of lines to skip drawing
  181 D1:B5F2 -  -  -  -  
  182 D1:B5F2 -  -  -  -  dfgs_vram_top_1 .equ $ + 1 
  183 D1:B5F2 11 00 00 00 	ld de,0;load top of vram 
  184 D1:B5F6 E5 -  -  -  	push hl ;save height ptr
  185 D1:B5F7 CD 56 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  186 D1:B5FB -  -  -  -  	
  187 D1:B5FB CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  188 D1:B5FD CA 09 B6 D1 	jp z,dfgs_upper_fast
  189 D1:B601 CD D2 AE D1 	call draw_slow_sprite_top_cut
  190 D1:B605 C3 0D B6 D1 	jp dfgs_upper_skip_2
  191 D1:B609 -  -  -  -  dfgs_upper_fast:
  192 D1:B609 CD 54 AE D1 	call draw_fast_sprite_top_cut
  193 D1:B60D -  -  -  -  dfgs_upper_skip_2:
  194 D1:B60D E1 -  -  -  	pop hl ;hl holds (height)
  195 D1:B60E -  -  -  -  	
  196 D1:B60E -  -  -  -  
  197 D1:B60E -  -  -  -  dfgs_upper_skip:
  198 D1:B60E -  -  -  -  
  199 D1:B60E 23 -  -  -  	inc hl ;to x
  200 D1:B60F 23 -  -  -  	inc hl ;to index 
  201 D1:B610 23 -  -  -  	inc hl;to y 
  202 D1:B611 -  -  -  -  	
  203 D1:B611 C9 -  -  -  	ret ;end of dfgs_draw_upper_sprite
  204 D1:B612 -  -  -  -  	
  205 D1:B612 -  -  -  -  	;ld a,$AA
  206 D1:B612 -  -  -  -  	;call write_a_to_ram
  207 D1:B612 -  -  -  -  	;call prgmpause
  208 D1:B612 -  -  -  -  	
  209 D1:B612 -  -  -  -  
  210 D1:B612 -  -  -  -  ;MIDDLE FRAME ====================================================================================================
  211 D1:B612 -  -  -  -  	
  212 D1:B612 -  -  -  -  dfgs_mid_start:;MIDDLE FRAME, can be top cut, no cut, or bottom cut ===============================================
  213 D1:B612 -  -  -  -  	
  214 D1:B612 -  -  -  -  	;call prgmpause
  215 D1:B612 -  -  -  -  	
  216 D1:B612 CD 79 B8 D1 	call sprite_table_from_index
  217 D1:B616 ED 53 70 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  218 D1:B61B ED 53 FC B7 
              D1 -  -  -  	ld (dfgs_sprite_pointers_3),de 
  219 D1:B620 ED 53 D8 AD 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  220 D1:B625 11 00 00 00 	ld de,0
  221 D1:B629 23 -  -  -  	inc hl;past sprite table ptr
  222 D1:B62A 08 -  -  -  	ex af,af' ;'
  223 D1:B62B 7E -  -  -  	ld a,(hl);number of elements
  224 D1:B62C 3C -  -  -  	inc a 
  225 D1:B62D 08 -  -  -  	ex af,af' ;'
  226 D1:B62E -  -  -  -  	
  227 D1:B62E 23 -  -  -  	inc hl ;to first y val 
  228 D1:B62F -  -  -  -  dfgs_mid_loop:
  229 D1:B62F -  -  -  -  	
  230 D1:B62F 08 -  -  -  	ex af,af';'
  231 D1:B630 3D -  -  -  	dec a 
  232 D1:B631 CA C7 B6 D1 	jp z,dfgs_lower_start ;check for end of data
  233 D1:B635 -  -  -  -  	
  234 D1:B635 08 -  -  -  	ex af,af';'
  235 D1:B636 -  -  -  -  
  236 D1:B636 -  -  -  -  	;ld a, $AB
  237 D1:B636 -  -  -  -  	;call write_a_to_ram
  238 D1:B636 -  -  -  -  
  239 D1:B636 7E -  -  -  	ld a,(hl);y val of sprite in dataframe
  240 D1:B637 -  -  -  -  	;call write_a_to_ram
  241 D1:B637 23 -  -  -  	inc hl ;to height
  242 D1:B638 -  -  -  -  	
  243 D1:B638 CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  244 D1:B63A C2 C3 B7 D1 	jp nz, dfgs_sg_mid ;goto group loop 
  245 D1:B63E -  -  -  -  	
  246 D1:B63E -  -  -  -  	;otherwise, draw single sprite 
  247 D1:B63E CD 46 B6 D1 	call dfgs_draw_mid_sprite
  248 D1:B642 -  -  -  -  
  249 D1:B642 -  -  -  -  	
  250 D1:B642 C3 2F B6 D1 	jp dfgs_mid_loop
  251 D1:B646 -  -  -  -  	
  252 D1:B646 -  -  -  -  	
  253 D1:B646 -  -  -  -  	
  254 D1:B646 -  -  -  -  	;a = ypos in mid frame, hl pts to height
  255 D1:B646 -  -  -  -  dfgs_draw_mid_sprite:	
  256 D1:B646 -  -  -  -  	
  257 D1:B646 37 -  -  -  	scf 
  258 D1:B647 -  -  -  -  dfgs_bg_mode_2 .equ $ 
  259 D1:B647 D2 A1 AD D1 	jp nc, dbgl_draw_lower_sprite ;if bg mode go to bg draw routine
  260 D1:B64B -  -  -  -  
  261 D1:B64B -  -  -  -  	;call write_a_to_ram
  262 D1:B64B -  -  -  -  	
  263 D1:B64B -  -  -  -  dfgs_cam_height_2 .equ $ + 1 ;y value in dataframe of uppermost line of viewport
  264 D1:B64B D6 00 -  -  	sub 0;subtract cam pos
  265 D1:B64D -  -  -  -  	;call write_a_to_ram
  266 D1:B64D -  -  -  -  
  267 D1:B64D CA 55 B6 D1 	jp z, dfgs_mid_sprite_topline ;check case where sprite is on top line of viewport
  268 D1:B651 D2 A2 B6 D1 	jp nc, dfgs_mid_sprite_above ; carried, sprite is above viewport boundary, a holds num lines to skip
  269 D1:B655 -  -  -  -  dfgs_mid_sprite_topline:
  270 D1:B655 -  -  -  -  
  271 D1:B655 -  -  -  -  	;Sprite is below viewport bound, either full or bottom cut 
  272 D1:B655 -  -  -  -  	
  273 D1:B655 -  -  -  -  	;a = sprite y - cam pos 
  274 D1:B655 3D -  -  -  	dec a ;for case where sprite pos = cam pos
  275 D1:B656 C6 F0 -  -  	add a,240 
  276 D1:B658 -  -  -  -  
  277 D1:B658 D2 7E B6 D1 	jp nc, dfgs_mid_skip
  278 D1:B65C -  -  -  -  	;a holds y pos above bottom of vp (0 indexed )
  279 D1:B65C 3C -  -  -  	inc a 
  280 D1:B65D -  -  -  -  	
  281 D1:B65D -  -  -  -  	
  282 D1:B65D -  -  -  -  	
  283 D1:B65D BE -  -  -  	cp (hl) ;compare to sprite height 
  284 D1:B65E DA 82 B6 D1 	jp c, dfgs_mid_bottom_cut ;height > lines to draw, bottom is cut off 
  285 D1:B662 -  -  -  -  	;otherwise, draw full sprite 
  286 D1:B662 -  -  -  -  	
  287 D1:B662 -  -  -  -  dfgs_vram_bottom_1 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  288 D1:B662 11 00 00 00 	ld de,0;load bottom of vram 
  289 D1:B666 E5 -  -  -  	push hl ;save height ptr
  290 D1:B667 CD 56 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  291 D1:B66B -  -  -  -  	
  292 D1:B66B CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  293 D1:B66D CA 79 B6 D1 	jp z,dfgs_mid_full_fast
  294 D1:B671 CD 94 AE D1 	call draw_slow_sprite_full
  295 D1:B675 C3 7D B6 D1 	jp dfgs_mid_skip_1
  296 D1:B679 -  -  -  -  dfgs_mid_full_fast:
  297 D1:B679 CD 7A AE D1 	call draw_fast_sprite_full
  298 D1:B67D -  -  -  -  dfgs_mid_skip_1:
  299 D1:B67D E1 -  -  -  	pop hl ;hl holds (height)
  300 D1:B67E -  -  -  -  	
  301 D1:B67E -  -  -  -  	
  302 D1:B67E -  -  -  -  dfgs_mid_skip:;sprite is entirely above or below cam pos 
  303 D1:B67E 23 -  -  -  	inc hl ;x
  304 D1:B67F 23 -  -  -  	inc hl ;index 
  305 D1:B680 23 -  -  -  	inc hl;to y 
  306 D1:B681 -  -  -  -  	
  307 D1:B681 -  -  -  -  	
  308 D1:B681 -  -  -  -  	
  309 D1:B681 C9 -  -  -  	ret
  310 D1:B682 -  -  -  -  	
  311 D1:B682 -  -  -  -  
  312 D1:B682 -  -  -  -  dfgs_mid_bottom_cut:
  313 D1:B682 -  -  -  -  dfgs_vram_bottom_2 .equ $ + 1  ;Bottom Cut SPRITE, a = lines above bottom of viewport
  314 D1:B682 11 00 00 00 	ld de,0;load bottom of vram 
  315 D1:B686 E5 -  -  -  	push hl ;save height ptr
  316 D1:B687 CD 56 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  317 D1:B68B -  -  -  -  	
  318 D1:B68B CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  319 D1:B68D CA 99 B6 D1 	jp z,dfgs_mid_bcut_fast
  320 D1:B691 CD FF AE D1 	call draw_slow_sprite_bottom_cut
  321 D1:B695 C3 9D B6 D1 	jp dfgs_mid_skip_2
  322 D1:B699 -  -  -  -  dfgs_mid_bcut_fast:
  323 D1:B699 CD 37 AE D1 	call draw_fast_sprite_bottom_cut
  324 D1:B69D -  -  -  -  dfgs_mid_skip_2:
  325 D1:B69D E1 -  -  -  	pop hl ;hl holds (height)
  326 D1:B69E C3 7E B6 D1 	jp dfgs_mid_skip
  327 D1:B6A2 -  -  -  -  
  328 D1:B6A2 -  -  -  -  dfgs_mid_sprite_above:
  329 D1:B6A2 -  -  -  -  	
  330 D1:B6A2 -  -  -  -  	;a holds lines to skip 
  331 D1:B6A2 BE -  -  -  	cp (hl) ;compare to height
  332 D1:B6A3 D2 7E B6 D1 	jp nc, dfgs_mid_skip ;skip sprite, entirely above viewport
  333 D1:B6A7 -  -  -  -  
  334 D1:B6A7 -  -  -  -  dfgs_vram_top_2 .equ $ + 1
  335 D1:B6A7 11 00 00 00 	ld de,0;top of vram 
  336 D1:B6AB E5 -  -  -  	push hl ;save height ptr
  337 D1:B6AC CD 56 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  338 D1:B6B0 -  -  -  -  	
  339 D1:B6B0 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  340 D1:B6B2 CA BE B6 D1 	jp z,dfgs_mid_tcut_fast
  341 D1:B6B6 CD D2 AE D1 	call draw_slow_sprite_top_cut
  342 D1:B6BA C3 C2 B6 D1 	jp dfgs_mid_skip_3
  343 D1:B6BE -  -  -  -  dfgs_mid_tcut_fast:
  344 D1:B6BE CD 54 AE D1 	call draw_fast_sprite_top_cut
  345 D1:B6C2 -  -  -  -  dfgs_mid_skip_3:
  346 D1:B6C2 E1 -  -  -  	pop hl ;hl holds (height)
  347 D1:B6C3 C3 7E B6 D1 	jp dfgs_mid_skip
  348 D1:B6C7 -  -  -  -  	
  349 D1:B6C7 -  -  -  -  	
  350 D1:B6C7 -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================		
  351 D1:B6C7 -  -  -  -  ;BOTTOM FRAME, FULL OR BOTTOM CUT===========================================================================	
  352 D1:B6C7 -  -  -  -  dfgs_lower_start:
  353 D1:B6C7 -  -  -  -  	
  354 D1:B6C7 CD 79 B8 D1 	call sprite_table_from_index
  355 D1:B6CB ED 53 70 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de
  356 D1:B6D0 ED 53 45 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_4),de
  357 D1:B6D5 11 00 00 00 	ld de,0
  358 D1:B6D9 23 -  -  -  	inc hl;past data table 
  359 D1:B6DA -  -  -  -  	
  360 D1:B6DA 08 -  -  -  	ex af,af' ;'
  361 D1:B6DB 7E -  -  -  	ld a,(hl);number of elements
  362 D1:B6DC 3C -  -  -  	inc a 
  363 D1:B6DD 08 -  -  -  	ex af,af' ;'
  364 D1:B6DE 23 -  -  -  	inc hl
  365 D1:B6DF -  -  -  -  	
  366 D1:B6DF -  -  -  -  
  367 D1:B6DF -  -  -  -  dfgs_cam_height_3 .equ $ + 1 
  368 D1:B6DF 3E 00 -  -  	ld a, 0
  369 D1:B6E1 D6 EF -  -  	sub 239
  370 D1:B6E3 D0 -  -  -  	ret nc;if bottom frame is offscreen 
  371 D1:B6E4 -  -  -  -  
  372 D1:B6E4 -  -  -  -  	;a holds y value of viewport bottom line in lower frame 
  373 D1:B6E4 -  -  -  -  	
  374 D1:B6E4 -  -  -  -  
  375 D1:B6E4 -  -  -  -  dfgs_lower_loop:
  376 D1:B6E4 -  -  -  -  
  377 D1:B6E4 08 -  -  -  	ex af,af';'
  378 D1:B6E5 3D -  -  -  	dec a 
  379 D1:B6E6 C8 -  -  -  	ret z
  380 D1:B6E7 08 -  -  -  	ex af,af';'
  381 D1:B6E8 -  -  -  -  	
  382 D1:B6E8 7E -  -  -  	ld a,(hl);y
  383 D1:B6E9 -  -  -  -  	;call write_a_to_ram
  384 D1:B6E9 23 -  -  -  	inc hl ;inc to height
  385 D1:B6EA -  -  -  -  	
  386 D1:B6EA CB 7E -  -  	bit 7, (hl) ;Check for sprite group
  387 D1:B6EC C2 0D B8 D1 	jp nz, dfgs_sg_lower ;goto group loop 
  388 D1:B6F0 -  -  -  -  	
  389 D1:B6F0 -  -  -  -  	;otherwise, draw single sprite 
  390 D1:B6F0 CD F8 B6 D1 	call dfgs_draw_lower_sprite
  391 D1:B6F4 -  -  -  -  	
  392 D1:B6F4 C3 E4 B6 D1 	jp dfgs_lower_loop
  393 D1:B6F8 -  -  -  -  
  394 D1:B6F8 -  -  -  -  	
  395 D1:B6F8 -  -  -  -  dfgs_draw_lower_sprite: ;a = ypos, hl pts to height
  396 D1:B6F8 -  -  -  -  	
  397 D1:B6F8 -  -  -  -  
  398 D1:B6F8 -  -  -  -  	;call write_a_to_ram
  399 D1:B6F8 47 -  -  -  	ld b,a ;save
  400 D1:B6F9 -  -  -  -  dfgs_cam_height_4 .equ $ + 1 
  401 D1:B6F9 3E 00 -  -  	ld a, 0 ;check if bottom frame is in VP at all
  402 D1:B6FB D6 EF -  -  	sub 239
  403 D1:B6FD D2 2A B7 D1 	jp nc,dfgs_lower_skip
  404 D1:B701 78 -  -  -  	ld a,b
  405 D1:B702 -  -  -  -  dfgs_viewport_bottom_y .equ $ + 1
  406 D1:B702 D6 00 -  -  	sub 0;subtract y val of viewport bottom
  407 D1:B704 -  -  -  -  
  408 D1:B704 DA 2A B7 D1 	jp c,dfgs_lower_skip;sprite below screen
  409 D1:B708 -  -  -  -  	
  410 D1:B708 -  -  -  -  	;push af 
  411 D1:B708 -  -  -  -  	;ld a,$A0
  412 D1:B708 -  -  -  -  	;call write_a_to_ram
  413 D1:B708 -  -  -  -  	;pop af
  414 D1:B708 -  -  -  -  	
  415 D1:B708 -  -  -  -  	
  416 D1:B708 3C -  -  -  	inc a
  417 D1:B709 -  -  -  -  	;a holds number of lines to draw 
  418 D1:B709 BE -  -  -  	cp (hl) ;compare to sprite height 
  419 D1:B70A DA 2E B7 D1 	jp c, dfgs_lower_bottom_cut ;bottom is below viewport 
  420 D1:B70E -  -  -  -  	
  421 D1:B70E -  -  -  -  	;draw full sprite 
  422 D1:B70E -  -  -  -  dfgs_vram_bottom_3 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  423 D1:B70E 11 00 00 00 	ld de,0;load bottom of vram 
  424 D1:B712 E5 -  -  -  	push hl ;save height ptr
  425 D1:B713 CD 56 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  426 D1:B717 -  -  -  -  	
  427 D1:B717 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  428 D1:B719 CA 25 B7 D1 	jp z,dfgs_lower_full_fast
  429 D1:B71D CD 94 AE D1 	call draw_slow_sprite_full
  430 D1:B721 C3 29 B7 D1 	jp dfgs_lower_skip_1
  431 D1:B725 -  -  -  -  dfgs_lower_full_fast:
  432 D1:B725 CD 7A AE D1 	call draw_fast_sprite_full
  433 D1:B729 -  -  -  -  dfgs_lower_skip_1:
  434 D1:B729 E1 -  -  -  	pop hl ;hl holds (height)
  435 D1:B72A -  -  -  -  
  436 D1:B72A -  -  -  -  	
  437 D1:B72A -  -  -  -  dfgs_lower_skip:;sprite offscreen
  438 D1:B72A 23 -  -  -  	inc hl ;x 
  439 D1:B72B 23 -  -  -  	inc hl ;index 
  440 D1:B72C 23 -  -  -  	inc hl;to y 
  441 D1:B72D -  -  -  -  	;call write_a_to_ram
  442 D1:B72D -  -  -  -  	;ld a,$AD
  443 D1:B72D -  -  -  -  	;call write_a_to_ram
  444 D1:B72D C9 -  -  -  	ret
  445 D1:B72E -  -  -  -  	
  446 D1:B72E -  -  -  -  dfgs_lower_bottom_cut: 
  447 D1:B72E -  -  -  -  dfgs_vram_bottom_4 .equ $ + 1  ;FULL SPRITE, a = lines above bottom of viewport
  448 D1:B72E 11 00 00 00 	ld de,0;load bottom of vram 
  449 D1:B732 E5 -  -  -  	push hl ;save height ptr
  450 D1:B733 CD 56 B8 D1 	call dfgs_setup_draw;hl = sprite ptr, de = vram addr
  451 D1:B737 -  -  -  -  	
  452 D1:B737 CB 45 -  -  	bit 0,l ;location of sprite data in vram indicates fast or slow sprite
  453 D1:B739 CA 45 B7 D1 	jp z,dfgs_lower_bcut_fast ;even= fast
  454 D1:B73D CD FF AE D1 	call draw_slow_sprite_bottom_cut
  455 D1:B741 C3 49 B7 D1 	jp dfgs_lower_skip_2
  456 D1:B745 -  -  -  -  dfgs_lower_bcut_fast:
  457 D1:B745 CD 37 AE D1 	call draw_fast_sprite_bottom_cut
  458 D1:B749 -  -  -  -  dfgs_lower_skip_2:
  459 D1:B749 E1 -  -  -  	pop hl ;hl holds (height)
  460 D1:B74A C3 2A B7 D1 	jp dfgs_lower_skip
  461 D1:B74E -  -  -  -  	
  462 D1:B74E -  -  -  -  
  463 D1:B74E -  -  -  -  ;===================================================================================================================
  464 D1:B74E -  -  -  -  ;SPRITE GROUPS =====================================================================================================
  465 D1:B74E -  -  -  -  
  466 D1:B74E -  -  -  -  dfgs_sg_setup:
  467 D1:B74E 23 -  -  -  	inc hl ;hl points to xPos of sprite group 
  468 D1:B74F 7E -  -  -  	ld a,(hl)
  469 D1:B750 32 6A B8 D1 	ld (dfgs_sg_x_origin),a 
  470 D1:B754 32 C9 AD D1 	ld (dbgl_sg_x_origin),a
  471 D1:B758 -  -  -  -  	;call write_a_to_ram
  472 D1:B758 01 00 00 00 	ld bc,0
  473 D1:B75C 23 -  -  -  	inc hl ; index 
  474 D1:B75D 4E -  -  -  	ld c,(hl) ;sprite group index 
  475 D1:B75E -  -  -  -  
  476 D1:B75E 21 5E DC D1 	ld hl, Sprite_Groups
  477 D1:B762 -  -  -  -  	;ld c,0 ;TESTING
  478 D1:B762 -  -  -  -  
  479 D1:B762 09 -  -  -  	add hl,bc 
  480 D1:B763 09 -  -  -  	add hl,bc 
  481 D1:B764 09 -  -  -  	add hl,bc 
  482 D1:B765 -  -  -  -  	
  483 D1:B765 -  -  -  -  	;hl now points to correct sprite group ptr 
  484 D1:B765 ED 27 -  -  	ld hl, (hl)	
  485 D1:B767 -  -  -  -  	;hl pts to sprite table for this group 
  486 D1:B767 -  -  -  -  
  487 D1:B767 CD 79 B8 D1 	call sprite_table_from_index
  488 D1:B76B ED 53 70 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1), de ;NEed to undo after loop is done 
  489 D1:B770 ED 53 D8 AD 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  490 D1:B775 23 -  -  -  	inc hl ;to num sprites 
  491 D1:B776 -  -  -  -  
  492 D1:B776 7E -  -  -  	ld a,(hl) ;num sprites in group
  493 D1:B777 23 -  -  -  	inc hl;first sprite y 
  494 D1:B778 C9 -  -  -  	ret
  495 D1:B779 -  -  -  -  	
  496 D1:B779 -  -  -  -  	;Sprite group in upper frame. a holds y pos of sprite group. HL points to height (unused)
  497 D1:B779 -  -  -  -  dfgs_sg_upper:	
  498 D1:B779 32 87 B7 D1 	ld (dfgs_sg_upper_y_origin),a
  499 D1:B77D E5 -  -  -  	push hl ;save frame data location (height ptr)
  500 D1:B77E CD 4E B7 D1 	call dfgs_sg_setup ;returns with a = num sprites
  501 D1:B782 -  -  -  -   
  502 D1:B782 32 9B B7 D1 	ld (dfgs_sg_upper_count),a 
  503 D1:B786 -  -  -  -  	
  504 D1:B786 -  -  -  -  dfgs_sg_upper_loop:
  505 D1:B786 -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  506 D1:B786 -  -  -  -  	;if no carry, sprite is still in upper frame, a holds pos in upper frame 
  507 D1:B786 -  -  -  -  	;if carry sprite is entirely in mid frame, a holds y pos in mid frame 
  508 D1:B786 -  -  -  -  dfgs_sg_upper_y_origin .equ $ + 1 
  509 D1:B786 3E 00 -  -  	ld a, 0
  510 D1:B788 96 -  -  -  	sub a,(hl)
  511 D1:B789 -  -  -  -  	;call write_a_to_ram
  512 D1:B789 23 -  -  -  	inc hl ;to height
  513 D1:B78A D2 96 B7 D1 	jp nc, dfgs_sg_upper_draw_upper
  514 D1:B78E -  -  -  -  	
  515 D1:B78E CD 46 B6 D1 	call dfgs_draw_mid_sprite
  516 D1:B792 C3 9A B7 D1 	jp dfgs_sg_upper_continue
  517 D1:B796 -  -  -  -  	;otherwise, sprite is entirely in mid frame, a holds y pos in mid frame
  518 D1:B796 -  -  -  -  	
  519 D1:B796 -  -  -  -  	
  520 D1:B796 -  -  -  -  dfgs_sg_upper_draw_upper:
  521 D1:B796 CD E2 B5 D1 	call dfgs_draw_upper_sprite
  522 D1:B79A -  -  -  -  dfgs_sg_upper_continue:
  523 D1:B79A -  -  -  -  dfgs_sg_upper_count .equ $ + 1
  524 D1:B79A 3E 00 -  -  	ld a, 0
  525 D1:B79C 3D -  -  -  	dec a 
  526 D1:B79D 32 9B B7 D1 	ld (dfgs_sg_upper_count),a 
  527 D1:B7A1 C2 86 B7 D1 	jp nz, dfgs_sg_upper_loop 
  528 D1:B7A5 -  -  -  -  	;otherwise, end of sprite group 
  529 D1:B7A5 32 6A B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  530 D1:B7A9 32 C9 AD D1 	ld (dbgl_sg_x_origin),a
  531 D1:B7AD E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  532 D1:B7AE 23 -  -  -  	inc hl
  533 D1:B7AF 23 -  -  -  	inc hl
  534 D1:B7B0 23 -  -  -  	inc hl ;to y pos of next sprite
  535 D1:B7B1 -  -  -  -  dfgs_sprite_pointers_2 .equ $ + 1
  536 D1:B7B1 11 00 00 00 	ld de, 0
  537 D1:B7B5 ED 53 70 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  538 D1:B7BA ED 53 D8 AD 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  539 D1:B7BF C3 CB B5 D1 	jp dfgs_upper_loop
  540 D1:B7C3 -  -  -  -  	
  541 D1:B7C3 -  -  -  -  
  542 D1:B7C3 -  -  -  -  
  543 D1:B7C3 -  -  -  -  ;SG MID =========================================================================================================
  544 D1:B7C3 -  -  -  -  	;Sprite group in middle frame. a holds y pos of sprite group. HL points to height (unused)
  545 D1:B7C3 -  -  -  -  dfgs_sg_mid:	
  546 D1:B7C3 E5 -  -  -  	push hl
  547 D1:B7C4 32 D1 B7 D1 	ld (dfgs_sg_mid_y_origin),a
  548 D1:B7C8 CD 4E B7 D1 	call dfgs_sg_setup 
  549 D1:B7CC -  -  -  -  	
  550 D1:B7CC 32 E5 B7 D1 	ld (dfgs_sg_mid_count),a
  551 D1:B7D0 -  -  -  -  	
  552 D1:B7D0 -  -  -  -  dfgs_sg_mid_loop:
  553 D1:B7D0 -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  554 D1:B7D0 -  -  -  -  	;if no carry, sprite is still in mid frame, a holds pos in mid frame 
  555 D1:B7D0 -  -  -  -  	;if carry sprite is entirely in lower frame, a holds y pos in lower frame 
  556 D1:B7D0 -  -  -  -  dfgs_sg_mid_y_origin .equ $ + 1 
  557 D1:B7D0 3E 00 -  -  	ld a, 0
  558 D1:B7D2 96 -  -  -  	sub a,(hl)
  559 D1:B7D3 23 -  -  -  	inc hl ;to height
  560 D1:B7D4 D2 E0 B7 D1 	jp nc, dfgs_sg_mid_draw_mid
  561 D1:B7D8 -  -  -  -  	
  562 D1:B7D8 CD F8 B6 D1 	call dfgs_draw_lower_sprite
  563 D1:B7DC C3 E4 B7 D1 	jp dfgs_sg_mid_continue
  564 D1:B7E0 -  -  -  -  
  565 D1:B7E0 -  -  -  -  		
  566 D1:B7E0 -  -  -  -  dfgs_sg_mid_draw_mid:
  567 D1:B7E0 CD 46 B6 D1 	call dfgs_draw_mid_sprite
  568 D1:B7E4 -  -  -  -  dfgs_sg_mid_continue:
  569 D1:B7E4 -  -  -  -  dfgs_sg_mid_count .equ $ + 1
  570 D1:B7E4 3E 00 -  -  	ld a, 0
  571 D1:B7E6 3D -  -  -  	dec a 
  572 D1:B7E7 32 E5 B7 D1 	ld (dfgs_sg_mid_count),a 
  573 D1:B7EB C2 D0 B7 D1 	jp nz, dfgs_sg_mid_loop 
  574 D1:B7EF -  -  -  -  	;otherwise, end of sprite group 
  575 D1:B7EF 32 6A B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  576 D1:B7F3 32 C9 AD D1 	ld (dbgl_sg_x_origin),a 
  577 D1:B7F7 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  578 D1:B7F8 23 -  -  -  	inc hl
  579 D1:B7F9 23 -  -  -  	inc hl
  580 D1:B7FA 23 -  -  -  	inc hl ;to y pos of next sprite
  581 D1:B7FB -  -  -  -  dfgs_sprite_pointers_3 .equ $ + 1
  582 D1:B7FB 11 00 00 00 	ld de, 0
  583 D1:B7FF ED 53 70 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  584 D1:B804 ED 53 D8 AD 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  585 D1:B809 C3 2F B6 D1 	jp dfgs_mid_loop
  586 D1:B80D -  -  -  -  	
  587 D1:B80D -  -  -  -  	
  588 D1:B80D -  -  -  -  ;SG Lower =========================================================================================================
  589 D1:B80D -  -  -  -  	;Sprite group in lower frame. a holds y pos of sprite group. HL points to height (unused)
  590 D1:B80D -  -  -  -  dfgs_sg_lower:	
  591 D1:B80D 32 1B B8 D1 	ld (dfgs_sg_lower_y_origin),a
  592 D1:B811 E5 -  -  -  	push hl
  593 D1:B812 CD 4E B7 D1 	call dfgs_sg_setup 
  594 D1:B816 32 2E B8 D1 	ld (dfgs_sg_lower_count),a
  595 D1:B81A -  -  -  -  	;call write_a_to_ram
  596 D1:B81A -  -  -  -  dfgs_sg_lower_loop:
  597 D1:B81A -  -  -  -  
  598 D1:B81A -  -  -  -  	;call prgmpause
  599 D1:B81A -  -  -  -  
  600 D1:B81A -  -  -  -  	;take y pos of group origin, subtract y offset of sprite 
  601 D1:B81A -  -  -  -  	;if no carry, sprite is still in lower frame, a holds pos in lower frame 
  602 D1:B81A -  -  -  -  	;if carry sprite is offscreen
  603 D1:B81A -  -  -  -  dfgs_sg_lower_y_origin .equ $ + 1 
  604 D1:B81A 3E 00 -  -  	ld a, 0
  605 D1:B81C 96 -  -  -  	sub a,(hl)
  606 D1:B81D -  -  -  -  	;call write_a_to_ram
  607 D1:B81D 23 -  -  -  	inc hl ;to height
  608 D1:B81E D2 29 B8 D1 	jp nc, dfgs_sg_lower_draw_lower
  609 D1:B822 -  -  -  -  	
  610 D1:B822 23 -  -  -  	inc hl 
  611 D1:B823 23 -  -  -  	inc hl
  612 D1:B824 23 -  -  -  	inc hl 
  613 D1:B825 C3 2D B8 D1 	jp dfgs_sg_lower_continue
  614 D1:B829 -  -  -  -  	;otherwise, sprite is entirely below lower frame, skip
  615 D1:B829 -  -  -  -  	
  616 D1:B829 -  -  -  -  	
  617 D1:B829 -  -  -  -  dfgs_sg_lower_draw_lower:
  618 D1:B829 CD F8 B6 D1 	call dfgs_draw_lower_sprite
  619 D1:B82D -  -  -  -  dfgs_sg_lower_continue:
  620 D1:B82D -  -  -  -  dfgs_sg_lower_count .equ $ + 1
  621 D1:B82D 3E 00 -  -  	ld a, 0
  622 D1:B82F -  -  -  -  	;call write_a_to_ram
  623 D1:B82F 3D -  -  -  	dec a 
  624 D1:B830 32 2E B8 D1 	ld (dfgs_sg_lower_count),a 
  625 D1:B834 C2 1A B8 D1 	jp nz, dfgs_sg_lower_loop 
  626 D1:B838 -  -  -  -  	;otherwise, end of sprite group 
  627 D1:B838 32 6A B8 D1 	ld (dfgs_sg_x_origin),a  ;already 0 
  628 D1:B83C 32 C9 AD D1 	ld (dbgl_sg_x_origin),a 
  629 D1:B840 E1 -  -  -  	pop hl ;return to height ptr of data frame obj
  630 D1:B841 23 -  -  -  	inc hl
  631 D1:B842 23 -  -  -  	inc hl
  632 D1:B843 23 -  -  -  	inc hl ;to y pos of next sprite
  633 D1:B844 -  -  -  -  dfgs_sprite_pointers_4 .equ $ + 1
  634 D1:B844 11 00 00 00 	ld de, 0
  635 D1:B848 ED 53 70 B8 
              D1 -  -  -  	ld (dfgs_sprite_pointers_1),de 
  636 D1:B84D ED 53 D8 AD 
              D1 -  -  -  	ld (dbgl_sprite_pointers),de
  637 D1:B852 C3 E4 B6 D1 	jp dfgs_lower_loop
  638 D1:B856 -  -  -  -  	
  639 D1:B856 -  -  -  -  	
  640 D1:B856 -  -  -  -  	
  641 D1:B856 -  -  -  -  	
  642 D1:B856 -  -  -  -  ;a holds distance from bottom of screen, starting from 0, or for top cut dist above screen = num lines to skip 
  643 D1:B856 -  -  -  -  ;(hl) = height 	
  644 D1:B856 -  -  -  -  ;de = initial vram, top for top cut, otherwise bottom
  645 D1:B856 -  -  -  -  
  646 D1:B856 -  -  -  -  ;Subtracts a lines from de (initial vram pos),
  647 D1:B856 -  -  -  -  ;returns hl = sprite data, de = new vram position
  648 D1:B856 -  -  -  -  dfgs_setup_draw:
  649 D1:B856 23 -  -  -  	inc hl ;x pos 
  650 D1:B857 01 00 00 00 	ld bc,0
  651 D1:B85B 4E -  -  -  	ld c,(hl); x pos
  652 D1:B85C 23 -  -  -  	inc hl;to index
  653 D1:B85D E5 -  -  -  	push hl;save sprite index 
  654 D1:B85E 26 A0 -  -  	ld h,160
  655 D1:B860 6F -  -  -  	ld l,a ;number of lines to subtract 
  656 D1:B861 ED 6C -  -  	mlt hl;subtract from vram
  657 D1:B863 37 -  -  -  	scf 
  658 D1:B864 3F -  -  -  	ccf
  659 D1:B865 EB -  -  -  	ex de,hl;hl holds initial vram pos, de is lines to subtract  
  660 D1:B866 ED 52 -  -  	sbc hl,de ;subtract to get sprite draw start line 
  661 D1:B868 09 -  -  -  	add hl,bc;add x pos ;hl now holds sprite draw start pos 
  662 D1:B869 -  -  -  -  dfgs_sg_x_origin .equ $ + 1 ;
  663 D1:B869 0E 00 -  -  	ld c, 0
  664 D1:B86B 09 -  -  -  	add hl,bc;add sprite group x pos offset (if applicable)
  665 D1:B86C EB -  -  -  	ex de,hl;put in de
  666 D1:B86D E1 -  -  -  	pop hl;back to frame data 
  667 D1:B86E 4E -  -  -  	ld c,(hl);sprite index
  668 D1:B86F -  -  -  -  dfgs_sprite_pointers_1 .equ $ + 1	
  669 D1:B86F 21 00 00 00 	ld hl,0 ;load sprite table 
  670 D1:B873 09 -  -  -  	add hl,bc
  671 D1:B874 09 -  -  -  	add hl,bc 
  672 D1:B875 09 -  -  -  	add hl,bc;move to sprite ptr
  673 D1:B876 -  -  -  -  	;call prgmpause
  674 D1:B876 ED 27 -  -  	ld hl,(hl);hl holds sprite data, if even = fast sprite 
  675 D1:B878 -  -  -  -  
  676 D1:B878 C9 -  -  -  	ret
  677 D1:B879 -  -  -  -  
  678 D1:B879 -  -  -  -  	;hl pts to sprite table index, returns de = sprite table ptr
  679 D1:B879 -  -  -  -  	
  680 D1:B879 -  -  -  -  sprite_table_from_index:
  681 D1:B879 E5 -  -  -  	push hl ;save 
  682 D1:B87A 11 00 00 00 	ld de,0
  683 D1:B87E 5E -  -  -  	ld e,(hl) ;e holds table index
  684 D1:B87F 21 2B CB D1 	ld hl,Sprite_Table_Table
  685 D1:B883 19 -  -  -  	add hl,de 
  686 D1:B884 19 -  -  -  	add hl,de 
  687 D1:B885 19 -  -  -  	add hl,de ;inc to correct table
  688 D1:B886 ED 17 -  -  	ld de,(hl)
  689 D1:B888 -  -  -  -  	
  690 D1:B888 -  -  -  -  
  691 D1:B888 -  -  -  -  	
  692 D1:B888 -  -  -  -  	;call prgmpause Seems to work
  693 D1:B888 -  -  -  -  	
  694 D1:B888 E1 -  -  -  	pop hl 
  695 D1:B889 C9 -  -  -  	ret 
  696 D1:B88A -  -  -  -  	
  697 D1:B88A -  -  -  -  
  698 D1:B88A -  -  -  -  
  699 D1:B88A -  -  -  -  	
  700 D1:B88A -  -  -  -  	
  701 D1:B88A -  -  -  -  	
  702 D1:B88A -  -  -  -  	
  703 D1:B88A -  -  -  -  	
  704 D1:B88A -  -  -  -  	
  705 D1:B88A -  -  -  -  	
  706 D1:B88A -  -  -  -  	
  707 D1:B88A -  -  -  -  	
  708 D1:B88A -  -  -  -  	
Listing for file "ascent.asm"
  535 D1:B88A -  -  -  -  #include "SpriteDecompressManager.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\SpriteDecompressManager.txt"
    1 D1:B88A -  -  -  -  
    2 D1:B88A -  -  -  -  
    3 D1:B88A -  -  -  -  decompress_queue_start .equ vram
    4 D1:B88A -  -  -  -  
    5 D1:B88A -  -  -  -  decompress_queue_end .equ vram + (7*64) ;Max queue length of 64
    6 D1:B88A -  -  -  -  
    7 D1:B88A -  -  -  -  decompress_tail_ptr:
    8 D1:B88A 06 00 D4 -  	.dl decompress_queue_start + 6  ;points to sprite being currently decompressed (parameters byte)
    9 D1:B88D -  -  -  -  
   10 D1:B88D -  -  -  -  decompress_head_ptr: ;points to where next element will be added to queue
   11 D1:B88D 00 00 D4 -  	.dl decompress_queue_start
   12 D1:B890 -  -  -  -  
   13 D1:B890 -  -  -  -  ;Decompress queue format
   14 D1:B890 -  -  -  -  ; .dl Sprite data ptr, decompress location, parameters (7 = fast, 6 = offset, 5 = flip, 4 =started decompressing 3 = finished decompressing )
   15 D1:B890 -  -  -  -  
   16 D1:B890 -  -  -  -  setup_decompress_queue: ;clears memory in queue
   17 D1:B890 3E FF -  -  	ld a,$FF
   18 D1:B892 01 C0 01 00 	ld bc, 7*64
   19 D1:B896 21 00 00 D4 	ld hl, decompress_queue_start
   20 D1:B89A 22 8D B8 D1 	ld (decompress_head_ptr),hl 
   21 D1:B89E CD E0 10 02 	call _MemSet
   22 D1:B8A2 21 06 00 D4 	ld hl, decompress_queue_start + 6
   23 D1:B8A6 22 8A B8 D1 	ld (decompress_tail_ptr),hl 
   24 D1:B8AA 3E 00 -  -  	ld a,0 
   25 D1:B8AC 32 B5 B9 D1 	ld (last_decompressed_cam_pos),a
   26 D1:B8B0 C9 -  -  -  	ret 
   27 D1:B8B1 -  -  -  -  
   28 D1:B8B1 -  -  -  -  ;bc = sprite data ptr, de = decompress location, a = params
   29 D1:B8B1 -  -  -  -  ;adds sprite to queue
   30 D1:B8B1 -  -  -  -  add_to_decompress_queue:
   31 D1:B8B1 2A 8D B8 D1 	ld hl, (decompress_head_ptr)
   32 D1:B8B5 ED 0F -  -  	ld (hl), bc 
   33 D1:B8B7 23 -  -  -  	inc hl
   34 D1:B8B8 23 -  -  -  	inc hl 
   35 D1:B8B9 23 -  -  -  	inc hl 
   36 D1:B8BA -  -  -  -  
   37 D1:B8BA ED 1F -  -  	ld (hl),de
   38 D1:B8BC -  -  -  -  	
   39 D1:B8BC 23 -  -  -  	inc hl 
   40 D1:B8BD 23 -  -  -  	inc hl 
   41 D1:B8BE 23 -  -  -  	inc hl 
   42 D1:B8BF -  -  -  -  	
   43 D1:B8BF 77 -  -  -  	ld (hl), a 
   44 D1:B8C0 23 -  -  -  	inc hl ;start of next element 
   45 D1:B8C1 -  -  -  -  	
   46 D1:B8C1 E5 -  -  -  	push hl 
   47 D1:B8C2 11 C0 01 D4 	ld de, decompress_queue_end
   48 D1:B8C6 37 -  -  -  	scf
   49 D1:B8C7 3F -  -  -  	ccf
   50 D1:B8C8 ED 52 -  -  	sbc hl,de ;check if we have reached end of queue to wrap around
   51 D1:B8CA E1 -  -  -  	pop hl
   52 D1:B8CB CA D4 B8 D1 	jp z, a2dq_back_to_start
   53 D1:B8CF -  -  -  -  	
   54 D1:B8CF 22 8D B8 D1 	ld (decompress_head_ptr),hl
   55 D1:B8D3 -  -  -  -  	;ld a,$AB ;testing
   56 D1:B8D3 -  -  -  -  	;call write_a_to_ram
   57 D1:B8D3 C9 -  -  -  	ret
   58 D1:B8D4 -  -  -  -  	
   59 D1:B8D4 -  -  -  -  a2dq_back_to_start:
   60 D1:B8D4 -  -  -  -  	;ld a,$AA ;testing
   61 D1:B8D4 -  -  -  -  	;call write_a_to_ram
   62 D1:B8D4 -  -  -  -  
   63 D1:B8D4 21 00 00 D4 	ld hl,decompress_queue_start
   64 D1:B8D8 22 8D B8 D1 	ld (decompress_head_ptr),hl
   65 D1:B8DC C9 -  -  -  	ret
   66 D1:B8DD -  -  -  -  	
   67 D1:B8DD -  -  -  -  	
   68 D1:B8DD -  -  -  -  
   69 D1:B8DD -  -  -  -  
   70 D1:B8DD -  -  -  -  ;Runs after frame has been rendered. Checks through decompress queue and continues sprite decompressions
   71 D1:B8DD -  -  -  -  	;if has ended, return. at end of queue
   72 D1:B8DD -  -  -  -  	;if not started, begin decompression and set start flag
   73 D1:B8DD -  -  -  -  	;if has started, but not ended, continue decompression 
   74 D1:B8DD -  -  -  -  	;if started and ended, move to next element 
   75 D1:B8DD -  -  -  -  continue_decompressions:
   76 D1:B8DD 2A 8A B8 D1 	ld hl, (decompress_tail_ptr)
   77 D1:B8E1 7E -  -  -  	ld a,(hl) ;decompress params 
   78 D1:B8E2 CB 5F -  -  	bit 3,a 
   79 D1:B8E4 C0 -  -  -  	ret nz ;sprite is done decompressing, at end of queue 
   80 D1:B8E5 -  -  -  -  	
   81 D1:B8E5 -  -  -  -  	;testing
   82 D1:B8E5 -  -  -  -  	;push af
   83 D1:B8E5 -  -  -  -  	;ld a,$55
   84 D1:B8E5 -  -  -  -  	;call write_a_to_ram
   85 D1:B8E5 -  -  -  -  	;pop af
   86 D1:B8E5 -  -  -  -  	
   87 D1:B8E5 -  -  -  -  	
   88 D1:B8E5 -  -  -  -  	
   89 D1:B8E5 -  -  -  -  	
   90 D1:B8E5 CB 67 -  -  	bit 4,a
   91 D1:B8E7 CA 23 B9 D1 	jp z, cd_begin_decompression
   92 D1:B8EB -  -  -  -  	
   93 D1:B8EB -  -  -  -  	;has started,not ended 
   94 D1:B8EB CD 7A B2 D1 	call sdcomp_continue 
   95 D1:B8EF B7 -  -  -  	or a 
   96 D1:B8F0 C0 -  -  -  	ret nz ;sprite not yet done decompressing 
   97 D1:B8F1 -  -  -  -  
   98 D1:B8F1 -  -  -  -  cd_done_decompressing:
   99 D1:B8F1 -  -  -  -  	;sprite finished decompressing
  100 D1:B8F1 2A 8A B8 D1 	ld hl, (decompress_tail_ptr)	
  101 D1:B8F5 CB DE -  -  	set 3,(hl) ;set finished flag
  102 D1:B8F7 11 07 00 00 	ld de,7 
  103 D1:B8FB 19 -  -  -  	add hl,de ;points to next element in queue
  104 D1:B8FC -  -  -  -  	
  105 D1:B8FC E5 -  -  -  	push hl 
  106 D1:B8FD 11 C0 01 D4 	ld de, decompress_queue_end
  107 D1:B901 37 -  -  -  	scf
  108 D1:B902 3F -  -  -  	ccf
  109 D1:B903 ED 52 -  -  	sbc hl,de ;check if need to wrap to start of queue
  110 D1:B905 E1 -  -  -  	pop hl
  111 D1:B906 D2 12 B9 D1 	jp nc, cd_back_to_start
  112 D1:B90A 22 8A B8 D1 	ld (decompress_tail_ptr),hl
  113 D1:B90E C3 DD B8 D1 	jp continue_decompressions ;Move on to next sprite 
  114 D1:B912 -  -  -  -  	
  115 D1:B912 -  -  -  -  cd_back_to_start:
  116 D1:B912 21 00 00 D4 	ld hl,decompress_queue_start
  117 D1:B916 11 06 00 00 	ld de,6 ;tail points to the parameters byte
  118 D1:B91A 19 -  -  -  	add hl,de
  119 D1:B91B 22 8A B8 D1 	ld (decompress_tail_ptr),hl
  120 D1:B91F C3 DD B8 D1 	jp continue_decompressions ;Move on to next sprite 
  121 D1:B923 -  -  -  -  
  122 D1:B923 -  -  -  -  cd_begin_decompression:
  123 D1:B923 -  -  -  -  
  124 D1:B923 -  -  -  -  	;testing
  125 D1:B923 -  -  -  -  	;push af 
  126 D1:B923 -  -  -  -  	;ld a,$AA
  127 D1:B923 -  -  -  -  	;call write_a_to_ram
  128 D1:B923 -  -  -  -  	;pop af
  129 D1:B923 -  -  -  -  	
  130 D1:B923 -  -  -  -  	;setup and begin decompressing
  131 D1:B923 CB E6 -  -  	set 4,(hl) ;set start flag
  132 D1:B925 F5 -  -  -  	push af 
  133 D1:B926 CB 7F -  -  	bit 7,a 
  134 D1:B928 C4 A8 B4 D1 	call nz, sdcomp_set_fast
  135 D1:B92C F1 -  -  -  	pop af 
  136 D1:B92D -  -  -  -  	
  137 D1:B92D F5 -  -  -  	push af 
  138 D1:B92E CB 7F -  -  	bit 7,a 
  139 D1:B930 CC B7 B4 D1 	call z, sdcomp_reset_fast
  140 D1:B934 F1 -  -  -  	pop af 
  141 D1:B935 -  -  -  -  	
  142 D1:B935 F5 -  -  -  	push af 
  143 D1:B936 CB 77 -  -  	bit 6,a 
  144 D1:B938 C4 38 B4 D1 	call nz, sdcomp_set_offset
  145 D1:B93C F1 -  -  -  	pop af 
  146 D1:B93D -  -  -  -  	
  147 D1:B93D F5 -  -  -  	push af 
  148 D1:B93E CB 77 -  -  	bit 6,a 
  149 D1:B940 CC 49 B4 D1 	call z, sdcomp_reset_offset
  150 D1:B944 F1 -  -  -  	pop af 
  151 D1:B945 -  -  -  -  	
  152 D1:B945 F5 -  -  -  	push af 
  153 D1:B946 CB 6F -  -  	bit 5,a 
  154 D1:B948 C4 5A B4 D1 	call nz, sdcomp_set_flip
  155 D1:B94C F1 -  -  -  	pop af 
  156 D1:B94D -  -  -  -  	
  157 D1:B94D F5 -  -  -  	push af 
  158 D1:B94E CB 6F -  -  	bit 5,a 
  159 D1:B950 CC 81 B4 D1 	call z, sdcomp_reset_flip
  160 D1:B954 F1 -  -  -  	pop af 
  161 D1:B955 -  -  -  -  	
  162 D1:B955 2A 8A B8 D1 	ld hl, (decompress_tail_ptr) ;may be unnessecary
  163 D1:B959 -  -  -  -  	
  164 D1:B959 2B -  -  -  	dec hl 
  165 D1:B95A 2B -  -  -  	dec hl 
  166 D1:B95B 2B -  -  -  	dec hl 
  167 D1:B95C ED 17 -  -  	ld de,(hl) ;load decompress location
  168 D1:B95E -  -  -  -  
  169 D1:B95E 2B -  -  -  	dec hl 
  170 D1:B95F 2B -  -  -  	dec hl 
  171 D1:B960 2B -  -  -  	dec hl 
  172 D1:B961 ED 27 -  -  	ld hl,(hl) ;load sprite data ptr
  173 D1:B963 -  -  -  -  
  174 D1:B963 CD D7 B0 D1 	call sprite_decompress
  175 D1:B967 B7 -  -  -  	or a 
  176 D1:B968 C0 -  -  -  	ret nz ;sprite not yet done decompressing 
  177 D1:B969 C3 F1 B8 D1 	jp cd_done_decompressing
  178 D1:B96D -  -  -  -  
  179 D1:B96D -  -  -  -  
  180 D1:B96D -  -  -  -  ;Checks to see if cam has moved to a new frame and decompressions need to be added to queue
  181 D1:B96D -  -  -  -  check_for_decompress_calls:
  182 D1:B96D 3A B5 B9 D1 	ld a, (last_decompressed_cam_pos)
  183 D1:B971 47 -  -  -  	ld b,a ;put last decompressed pos in b
  184 D1:B972 3A A7 AB D1 	ld a, (cam_pos + 1) ;Current frame cam is in
  185 D1:B976 32 B5 B9 D1 	ld (last_decompressed_cam_pos),a ;store this frame as the last decompressed frame 
  186 D1:B97A -  -  -  -  	;need to check if cam has moved up or down since last time
  187 D1:B97A B8 -  -  -  	cp a,b 
  188 D1:B97B -  -  -  -  	
  189 D1:B97B -  -  -  -  	
  190 D1:B97B C8 -  -  -  	ret z ;if same, no new things to add to queue 
  191 D1:B97C D2 88 B9 D1 	jp nc, cfdc_cam_move_up ;camera has moved up since last time 
  192 D1:B980 -  -  -  -  	
  193 D1:B980 -  -  -  -  	;cam has moved down since last time 
  194 D1:B980 21 E6 C0 D1 	ld hl, decompress_calls_table_down
  195 D1:B984 C3 8C B9 D1 	jp cfdc_add_calls_to_queue
  196 D1:B988 -  -  -  -  	
  197 D1:B988 -  -  -  -  	
  198 D1:B988 -  -  -  -  cfdc_cam_move_up:
  199 D1:B988 21 D8 BF D1 	ld hl, decompress_calls_table_up
  200 D1:B98C -  -  -  -  
  201 D1:B98C -  -  -  -  	;a = cam frame, hl = decompress call table (up or down)
  202 D1:B98C -  -  -  -  cfdc_add_calls_to_queue:
  203 D1:B98C -  -  -  -  
  204 D1:B98C -  -  -  -  	;call write_a_to_ram
  205 D1:B98C -  -  -  -  
  206 D1:B98C 01 00 00 00 	ld bc,0
  207 D1:B990 4F -  -  -  	ld c,a
  208 D1:B991 09 -  -  -  	add hl,bc 
  209 D1:B992 09 -  -  -  	add hl,bc 
  210 D1:B993 09 -  -  -  	add hl,bc 
  211 D1:B994 ED 27 -  -  	ld hl,(hl) ;hl now points to correct decompress frame 
  212 D1:B996 -  -  -  -  cfdc_direct_add_decompress_frame:
  213 D1:B996 -  -  -  -  
  214 D1:B996 08 -  -  -  	ex af,af' ;'
  215 D1:B997 7E -  -  -  	ld a,(hl) ;a' holds num elements 
  216 D1:B998 -  -  -  -  	
  217 D1:B998 -  -  -  -  	;call write_a_to_ram
  218 D1:B998 -  -  -  -  	
  219 D1:B998 -  -  -  -  	;call prgmpause
  220 D1:B998 -  -  -  -  	
  221 D1:B998 3C -  -  -  	inc a ;to be decd later
  222 D1:B999 08 -  -  -  	ex af,af' ;'
  223 D1:B99A -  -  -  -  	
  224 D1:B99A 23 -  -  -  	inc hl ;points to first sprite data 
  225 D1:B99B -  -  -  -  cfdc_add_to_queue_loop:
  226 D1:B99B 08 -  -  -  	ex af,af' ;'
  227 D1:B99C -  -  -  -  	;call write_a_to_ram
  228 D1:B99C 3D -  -  -  	dec a ;account for cases where frame has 0 elements 
  229 D1:B99D C8 -  -  -  	ret z
  230 D1:B99E 08 -  -  -  	ex af,af' ;'
  231 D1:B99F ED 07 -  -  	ld bc ,(hl) ;load sprite data 
  232 D1:B9A1 23 -  -  -  	inc hl 
  233 D1:B9A2 23 -  -  -  	inc hl
  234 D1:B9A3 23 -  -  -  	inc hl 
  235 D1:B9A4 ED 17 -  -  	ld de,(hl) ;load decomp location 
  236 D1:B9A6 23 -  -  -  	inc hl 
  237 D1:B9A7 23 -  -  -  	inc hl
  238 D1:B9A8 23 -  -  -  	inc hl 
  239 D1:B9A9 7E -  -  -  	ld a,(hl) ;ld params
  240 D1:B9AA 23 -  -  -  	inc hl 
  241 D1:B9AB E5 -  -  -  	push hl
  242 D1:B9AC CD B1 B8 D1 	call add_to_decompress_queue
  243 D1:B9B0 E1 -  -  -  	pop hl
  244 D1:B9B1 C3 9B B9 D1 	jp cfdc_add_to_queue_loop
  245 D1:B9B5 -  -  -  -  	
  246 D1:B9B5 -  -  -  -  	
  247 D1:B9B5 -  -  -  -  
  248 D1:B9B5 -  -  -  -  
  249 D1:B9B5 -  -  -  -  last_decompressed_cam_pos:
  250 D1:B9B5 00 -  -  -  	.db 0 ;camera frame last time checking for decomp was called 
  251 D1:B9B6 -  -  -  -  	
  252 D1:B9B6 -  -  -  -  	
  253 D1:B9B6 -  -  -  -  
  254 D1:B9B6 -  -  -  -  
  255 D1:B9B6 -  -  -  -  
  256 D1:B9B6 -  -  -  -  
  257 D1:B9B6 -  -  -  -  
  258 D1:B9B6 -  -  -  -  
  259 D1:B9B6 -  -  -  -  
  260 D1:B9B6 -  -  -  -  
  261 D1:B9B6 -  -  -  -  
  262 D1:B9B6 -  -  -  -  
  263 D1:B9B6 -  -  -  -  
  264 D1:B9B6 -  -  -  -  
  265 D1:B9B6 -  -  -  -  
  266 D1:B9B6 -  -  -  -  
  267 D1:B9B6 -  -  -  -  
  268 D1:B9B6 -  -  -  -  
  269 D1:B9B6 -  -  -  -  
  270 D1:B9B6 -  -  -  -  
  271 D1:B9B6 -  -  -  -  
  272 D1:B9B6 -  -  -  -  
  273 D1:B9B6 -  -  -  -  
  274 D1:B9B6 -  -  -  -  
  275 D1:B9B6 -  -  -  -  
  276 D1:B9B6 -  -  -  -  
  277 D1:B9B6 -  -  -  -  
Listing for file "ascent.asm"
  536 D1:B9B6 -  -  -  -  #include "getInputs.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\getInputs.txt"
    1 D1:B9B6 -  -  -  -  
    2 D1:B9B6 -  -  -  -  
    3 D1:B9B6 -  -  -  -  
    4 D1:B9B6 -  -  -  -  get_inputs:
    5 D1:B9B6 21 00 00 F5 	ld	hl,DI_Mode		; register for keypad mode
    6 D1:B9BA 36 02 -  -  	ld	(hl),2			; set single scan mode
    7 D1:B9BC -  -  -  -  
    8 D1:B9BC AF -  -  -  	xor	a,a
    9 D1:B9BD -  -  -  -  scan_wait:
   10 D1:B9BD BE -  -  -  	cp	a,(hl)			; wait for keypad idle mode
   11 D1:B9BE 20 FD -  -  	jr	nz,scan_wait
   12 D1:B9C0 -  -  -  -  	
   13 D1:B9C0 -  -  -  -  	; https://wikiti.brandonw.net/index.php?title=84PCE:Ports:A000
   14 D1:B9C0 -  -  -  -  	
   15 D1:B9C0 3A 1E 00 F5 	ld	a,(kbdG7) ; $F5001E
   16 D1:B9C4 CB 5F -  -   	bit	kbitUp,a
   17 D1:B9C6 C2 DE B9 D1 	jp nz, input_cam_up
   18 D1:B9CA -  -  -  -  	
   19 D1:B9CA -  -  -  -  	
   20 D1:B9CA CB 47 -  -  	bit	kbitDown,a
   21 D1:B9CC C2 FE B9 D1 	jp nz, input_cam_down
   22 D1:B9D0 -  -  -  -  
   23 D1:B9D0 -  -  -  -  
   24 D1:B9D0 3A 1C 00 F5 	ld a,(kbdG6)
   25 D1:B9D4 CB 77 -  -  	bit kbitClear,a
   26 D1:B9D6 C2 39 AB D1 	jp nz,exit_prgm
   27 D1:B9DA -  -  -  -  	
   28 D1:B9DA -  -  -  -  
   29 D1:B9DA C3 0B A9 D1 	jp get_inputs_return
   30 D1:B9DE -  -  -  -  	
   31 D1:B9DE -  -  -  -  	
   32 D1:B9DE -  -  -  -  input_cam_up:
   33 D1:B9DE -  -  -  -  	;Move cam
   34 D1:B9DE 2A A6 AB D1 	ld hl,(cam_pos)
   35 D1:B9E2 -  -  -  -  	
   36 D1:B9E2 E5 -  -  -  	push hl 
   37 D1:B9E3 01 C4 09 00 	ld bc,2500
   38 D1:B9E7 ED 42 -  -  	sbc hl,bc 
   39 D1:B9E9 E1 -  -  -  	pop hl 
   40 D1:B9EA D2 0B A9 D1 	jp nc, get_inputs_return
   41 D1:B9EE -  -  -  -  	
   42 D1:B9EE 23 -  -  -  	inc hl
   43 D1:B9EF 23 -  -  -  	inc hl
   44 D1:B9F0 23 -  -  -  	inc hl
   45 D1:B9F1 23 -  -  -  	inc hl
   46 D1:B9F2 23 -  -  -  	inc hl
   47 D1:B9F3 23 -  -  -  	inc hl
   48 D1:B9F4 23 -  -  -  	inc hl
   49 D1:B9F5 23 -  -  -  	inc hl
   50 D1:B9F6 -  -  -  -  	
   51 D1:B9F6 22 A6 AB D1 	ld (cam_pos),hl
   52 D1:B9FA C3 0B A9 D1 	jp get_inputs_return
   53 D1:B9FE -  -  -  -  
   54 D1:B9FE -  -  -  -  
   55 D1:B9FE -  -  -  -  input_cam_down:
   56 D1:B9FE -  -  -  -  	;Move cam
   57 D1:B9FE 2A A6 AB D1 	ld hl,(cam_pos)
   58 D1:BA02 -  -  -  -  	
   59 D1:BA02 -  -  -  -  	
   60 D1:BA02 E5 -  -  -  	push hl 
   61 D1:BA03 01 0A 00 00 	ld bc,10 
   62 D1:BA07 ED 42 -  -  	sbc hl,bc 
   63 D1:BA09 E1 -  -  -  	pop hl 
   64 D1:BA0A DA 0B A9 D1 	jp c, get_inputs_return
   65 D1:BA0E -  -  -  -  	
   66 D1:BA0E 2B -  -  -  	dec hl
   67 D1:BA0F 2B -  -  -  	dec hl
   68 D1:BA10 2B -  -  -  	dec hl
   69 D1:BA11 2B -  -  -  	dec hl
   70 D1:BA12 2B -  -  -  	dec hl
   71 D1:BA13 2B -  -  -  	dec hl
   72 D1:BA14 2B -  -  -  	dec hl
   73 D1:BA15 2B -  -  -  	dec hl
   74 D1:BA16 -  -  -  -  	
   75 D1:BA16 -  -  -  -  	
   76 D1:BA16 -  -  -  -  	
   77 D1:BA16 -  -  -  -  	
   78 D1:BA16 -  -  -  -  	
   79 D1:BA16 22 A6 AB D1 	ld (cam_pos),hl
   80 D1:BA1A C3 0B A9 D1 	jp get_inputs_return
   81 D1:BA1E -  -  -  -  	
   82 D1:BA1E -  -  -  -  	
   83 D1:BA1E -  -  -  -  	
Listing for file "ascent.asm"
  537 D1:BA1E -  -  -  -  ;#include "levelData.txt"
  538 D1:BA1E -  -  -  -  ;#include "FGLevelData.txt"
  539 D1:BA1E -  -  -  -  
  540 D1:BA1E -  -  -  -  #include "generated/BG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\BG_Data.txt"
    1 D1:BA1E -  -  -  -  BG_Data_frame_table:
    2 D1:BA1E BE BA D1 -  	.dl BG_Data_0
    3 D1:BA21 B0 BA D1 -  	.dl BG_Data_1
    4 D1:BA24 AE BA D1 -  	.dl BG_Data_2
    5 D1:BA27 AC BA D1 -  	.dl BG_Data_3
    6 D1:BA2A AA BA D1 -  	.dl BG_Data_4
    7 D1:BA2D A8 BA D1 -  	.dl BG_Data_5
    8 D1:BA30 A6 BA D1 -  	.dl BG_Data_6
    9 D1:BA33 A4 BA D1 -  	.dl BG_Data_7
   10 D1:BA36 A2 BA D1 -  	.dl BG_Data_8
   11 D1:BA39 A0 BA D1 -  	.dl BG_Data_9
   12 D1:BA3C 9E BA D1 -  	.dl BG_Data_10
   13 D1:BA3F 9C BA D1 -  	.dl BG_Data_11
   14 D1:BA42 9A BA D1 -  	.dl BG_Data_12
   15 D1:BA45 98 BA D1 -  	.dl BG_Data_13
   16 D1:BA48 96 BA D1 -  	.dl BG_Data_14
   17 D1:BA4B 94 BA D1 -  	.dl BG_Data_15
   18 D1:BA4E 92 BA D1 -  	.dl BG_Data_16
   19 D1:BA51 90 BA D1 -  	.dl BG_Data_17
   20 D1:BA54 8E BA D1 -  	.dl BG_Data_18
   21 D1:BA57 8C BA D1 -  	.dl BG_Data_19
   22 D1:BA5A 8A BA D1 -  	.dl BG_Data_20
   23 D1:BA5D 88 BA D1 -  	.dl BG_Data_21
   24 D1:BA60 86 BA D1 -  	.dl BG_Data_22
   25 D1:BA63 84 BA D1 -  	.dl BG_Data_23
   26 D1:BA66 82 BA D1 -  	.dl BG_Data_24
   27 D1:BA69 80 BA D1 -  	.dl BG_Data_25
   28 D1:BA6C 7E BA D1 -  	.dl BG_Data_26
   29 D1:BA6F 7C BA D1 -  	.dl BG_Data_27
   30 D1:BA72 7A BA D1 -  	.dl BG_Data_28
   31 D1:BA75 78 BA D1 -  	.dl BG_Data_29
   32 D1:BA78 -  -  -  -  
   33 D1:BA78 -  -  -  -  
   34 D1:BA78 -  -  -  -  
   35 D1:BA78 -  -  -  -  BG_Data_29:
   36 D1:BA78 00 -  -  -  	.db 0
   37 D1:BA79 00 -  -  -  	.db 0
   38 D1:BA7A -  -  -  -  
   39 D1:BA7A -  -  -  -  BG_Data_28:
   40 D1:BA7A 00 -  -  -  	.db 0
   41 D1:BA7B 00 -  -  -  	.db 0
   42 D1:BA7C -  -  -  -  
   43 D1:BA7C -  -  -  -  BG_Data_27:
   44 D1:BA7C 00 -  -  -  	.db 0
   45 D1:BA7D 00 -  -  -  	.db 0
   46 D1:BA7E -  -  -  -  
   47 D1:BA7E -  -  -  -  BG_Data_26:
   48 D1:BA7E 00 -  -  -  	.db 0
   49 D1:BA7F 00 -  -  -  	.db 0
   50 D1:BA80 -  -  -  -  
   51 D1:BA80 -  -  -  -  BG_Data_25:
   52 D1:BA80 00 -  -  -  	.db 0
   53 D1:BA81 00 -  -  -  	.db 0
   54 D1:BA82 -  -  -  -  
   55 D1:BA82 -  -  -  -  BG_Data_24:
   56 D1:BA82 00 -  -  -  	.db 0
   57 D1:BA83 00 -  -  -  	.db 0
   58 D1:BA84 -  -  -  -  
   59 D1:BA84 -  -  -  -  BG_Data_23:
   60 D1:BA84 00 -  -  -  	.db 0
   61 D1:BA85 00 -  -  -  	.db 0
   62 D1:BA86 -  -  -  -  
   63 D1:BA86 -  -  -  -  BG_Data_22:
   64 D1:BA86 00 -  -  -  	.db 0
   65 D1:BA87 00 -  -  -  	.db 0
   66 D1:BA88 -  -  -  -  
   67 D1:BA88 -  -  -  -  BG_Data_21:
   68 D1:BA88 00 -  -  -  	.db 0
   69 D1:BA89 00 -  -  -  	.db 0
   70 D1:BA8A -  -  -  -  
   71 D1:BA8A -  -  -  -  BG_Data_20:
   72 D1:BA8A 00 -  -  -  	.db 0
   73 D1:BA8B 00 -  -  -  	.db 0
   74 D1:BA8C -  -  -  -  
   75 D1:BA8C -  -  -  -  BG_Data_19:
   76 D1:BA8C 00 -  -  -  	.db 0
   77 D1:BA8D 00 -  -  -  	.db 0
   78 D1:BA8E -  -  -  -  
   79 D1:BA8E -  -  -  -  BG_Data_18:
   80 D1:BA8E 00 -  -  -  	.db 0
   81 D1:BA8F 00 -  -  -  	.db 0
   82 D1:BA90 -  -  -  -  
   83 D1:BA90 -  -  -  -  BG_Data_17:
   84 D1:BA90 00 -  -  -  	.db 0
   85 D1:BA91 00 -  -  -  	.db 0
   86 D1:BA92 -  -  -  -  
   87 D1:BA92 -  -  -  -  BG_Data_16:
   88 D1:BA92 00 -  -  -  	.db 0
   89 D1:BA93 00 -  -  -  	.db 0
   90 D1:BA94 -  -  -  -  
   91 D1:BA94 -  -  -  -  BG_Data_15:
   92 D1:BA94 00 -  -  -  	.db 0
   93 D1:BA95 00 -  -  -  	.db 0
   94 D1:BA96 -  -  -  -  
   95 D1:BA96 -  -  -  -  BG_Data_14:
   96 D1:BA96 00 -  -  -  	.db 0
   97 D1:BA97 00 -  -  -  	.db 0
   98 D1:BA98 -  -  -  -  
   99 D1:BA98 -  -  -  -  BG_Data_13:
  100 D1:BA98 00 -  -  -  	.db 0
  101 D1:BA99 00 -  -  -  	.db 0
  102 D1:BA9A -  -  -  -  
  103 D1:BA9A -  -  -  -  BG_Data_12:
  104 D1:BA9A 00 -  -  -  	.db 0
  105 D1:BA9B 00 -  -  -  	.db 0
  106 D1:BA9C -  -  -  -  
  107 D1:BA9C -  -  -  -  BG_Data_11:
  108 D1:BA9C 00 -  -  -  	.db 0
  109 D1:BA9D 00 -  -  -  	.db 0
  110 D1:BA9E -  -  -  -  
  111 D1:BA9E -  -  -  -  BG_Data_10:
  112 D1:BA9E 00 -  -  -  	.db 0
  113 D1:BA9F 00 -  -  -  	.db 0
  114 D1:BAA0 -  -  -  -  
  115 D1:BAA0 -  -  -  -  BG_Data_9:
  116 D1:BAA0 00 -  -  -  	.db 0
  117 D1:BAA1 00 -  -  -  	.db 0
  118 D1:BAA2 -  -  -  -  
  119 D1:BAA2 -  -  -  -  BG_Data_8:
  120 D1:BAA2 00 -  -  -  	.db 0
  121 D1:BAA3 00 -  -  -  	.db 0
  122 D1:BAA4 -  -  -  -  
  123 D1:BAA4 -  -  -  -  BG_Data_7:
  124 D1:BAA4 00 -  -  -  	.db 0
  125 D1:BAA5 00 -  -  -  	.db 0
  126 D1:BAA6 -  -  -  -  
  127 D1:BAA6 -  -  -  -  BG_Data_6:
  128 D1:BAA6 00 -  -  -  	.db 0
  129 D1:BAA7 00 -  -  -  	.db 0
  130 D1:BAA8 -  -  -  -  
  131 D1:BAA8 -  -  -  -  BG_Data_5:
  132 D1:BAA8 00 -  -  -  	.db 0
  133 D1:BAA9 00 -  -  -  	.db 0
  134 D1:BAAA -  -  -  -  
  135 D1:BAAA -  -  -  -  BG_Data_4:
  136 D1:BAAA 00 -  -  -  	.db 0
  137 D1:BAAB 00 -  -  -  	.db 0
  138 D1:BAAC -  -  -  -  
  139 D1:BAAC -  -  -  -  BG_Data_3:
  140 D1:BAAC 00 -  -  -  	.db 0
  141 D1:BAAD 00 -  -  -  	.db 0
  142 D1:BAAE -  -  -  -  
  143 D1:BAAE -  -  -  -  BG_Data_2:
  144 D1:BAAE 00 -  -  -  	.db 0
  145 D1:BAAF 00 -  -  -  	.db 0
  146 D1:BAB0 -  -  -  -  
  147 D1:BAB0 -  -  -  -  BG_Data_1:
  148 D1:BAB0 00 -  -  -  	.db 0
  149 D1:BAB1 03 -  -  -  	.db 3
  150 D1:BAB2 22 FF 7D 1F 	.db 34, 255, 125, 31  ;SG_Cloud1
  151 D1:BAB6 70 FF 76 1F 	.db 112, 255, 118, 31  ;SG_Cloud1
  152 D1:BABA A3 FF 15 1F 	.db 163, 255, 21, 31  ;SG_Cloud1
  153 D1:BABE -  -  -  -  
  154 D1:BABE -  -  -  -  BG_Data_0:
  155 D1:BABE 00 -  -  -  	.db 0
  156 D1:BABF 23 -  -  -  	.db 35
  157 D1:BAC0 55 FF 00 1C 	.db 85, 255, 0, 28  ;SG_DarkGroundChunk
  158 D1:BAC4 4F FF 88 1C 	.db 79, 255, 136, 28  ;SG_DarkGroundChunk
  159 D1:BAC8 55 FF 18 1C 	.db 85, 255, 24, 28  ;SG_DarkGroundChunk
  160 D1:BACC 50 FF 70 1C 	.db 80, 255, 112, 28  ;SG_DarkGroundChunk
  161 D1:BAD0 81 FF 72 1E 	.db 129, 255, 114, 30  ;SG_BGTree2
  162 D1:BAD4 81 FF 89 1E 	.db 129, 255, 137, 30  ;SG_BGTree2
  163 D1:BAD8 88 FF 16 1E 	.db 136, 255, 22, 30  ;SG_BGTree2
  164 D1:BADC 8D FF 0B 1E 	.db 141, 255, 11, 30  ;SG_BGTree2
  165 D1:BAE0 82 FF 91 1D 	.db 130, 255, 145, 29  ;SG_BGTree1
  166 D1:BAE4 80 FF 80 1D 	.db 128, 255, 128, 29  ;SG_BGTree1
  167 D1:BAE8 7F FF 77 1D 	.db 127, 255, 119, 29  ;SG_BGTree1
  168 D1:BAEC 81 FF 1F 1D 	.db 129, 255, 31, 29  ;SG_BGTree1
  169 D1:BAF0 84 FF 01 1D 	.db 132, 255, 1, 29  ;SG_BGTree1
  170 D1:BAF4 84 FF 7F 1E 	.db 132, 255, 127, 30  ;SG_BGTree2
  171 D1:BAF8 F2 FF 02 1F 	.db 242, 255, 2, 31  ;SG_Cloud1
  172 D1:BAFC 43 FF 00 0D 	.db 67, 255, 0, 13  ;SG_GroundChunk1
  173 D1:BB00 3D FF 70 0D 	.db 61, 255, 112, 13  ;SG_GroundChunk1
  174 D1:BB04 3C FF 88 0C 	.db 60, 255, 136, 12  ;SG_GroundChunk2
  175 D1:BB08 41 FF 18 0C 	.db 65, 255, 24, 12  ;SG_GroundChunk2
  176 D1:BB0C 2D FF 18 0D 	.db 45, 255, 24, 13  ;SG_GroundChunk1
  177 D1:BB10 2A FF 00 0C 	.db 42, 255, 0, 12  ;SG_GroundChunk2
  178 D1:BB14 26 FF 88 0D 	.db 38, 255, 136, 13  ;SG_GroundChunk1
  179 D1:BB18 26 FF 70 0C 	.db 38, 255, 112, 12  ;SG_GroundChunk2
  180 D1:BB1C 34 0F 74 90 	.db 52, 15, 116, 144  ;GroundGrassSmall_Fast
  181 D1:BB20 38 0F 96 90 	.db 56, 15, 150, 144  ;GroundGrassSmall_Fast
  182 D1:BB24 42 0F 0C 90 	.db 66, 15, 12, 144  ;GroundGrassSmall_Fast
  183 D1:BB28 3A 0F 20 91 	.db 58, 15, 32, 145  ;GroundGrassSmall_Fast_F
  184 D1:BB2C 35 0F 11 91 	.db 53, 15, 17, 145  ;GroundGrassSmall_Fast_F
  185 D1:BB30 49 0F 0A 91 	.db 73, 15, 10, 145  ;GroundGrassSmall_Fast_F
  186 D1:BB34 46 0F 1A 91 	.db 70, 15, 26, 145  ;GroundGrassSmall_Fast_F
  187 D1:BB38 45 0F 27 91 	.db 69, 15, 39, 145  ;GroundGrassSmall_Fast_F
  188 D1:BB3C 40 0F 8D 90 	.db 64, 15, 141, 144  ;GroundGrassSmall_Fast
  189 D1:BB40 31 0F 84 90 	.db 49, 15, 132, 144  ;GroundGrassSmall_Fast
  190 D1:BB44 41 0F 82 90 	.db 65, 15, 130, 144  ;GroundGrassSmall_Fast
  191 D1:BB48 2F 0F 8E 91 	.db 47, 15, 142, 145  ;GroundGrassSmall_Fast_F
  192 D1:BB4C -  -  -  -  
  193 D1:BB4C -  -  -  -  
  194 D1:BB4C -  -  -  -  
Listing for file "ascent.asm"
  541 D1:BB4C -  -  -  -  #include "generated/MG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\MG_Data.txt"
    1 D1:BB4C -  -  -  -  MG_Data_frame_table:
    2 D1:BB4C BC BD D1 -  	.dl MG_Data_0
    3 D1:BB4F 4A BD D1 -  	.dl MG_Data_1
    4 D1:BB52 E0 BC D1 -  	.dl MG_Data_2
    5 D1:BB55 72 BC D1 -  	.dl MG_Data_3
    6 D1:BB58 18 BC D1 -  	.dl MG_Data_4
    7 D1:BB5B D6 BB D1 -  	.dl MG_Data_5
    8 D1:BB5E D4 BB D1 -  	.dl MG_Data_6
    9 D1:BB61 D2 BB D1 -  	.dl MG_Data_7
   10 D1:BB64 D0 BB D1 -  	.dl MG_Data_8
   11 D1:BB67 CE BB D1 -  	.dl MG_Data_9
   12 D1:BB6A CC BB D1 -  	.dl MG_Data_10
   13 D1:BB6D CA BB D1 -  	.dl MG_Data_11
   14 D1:BB70 C8 BB D1 -  	.dl MG_Data_12
   15 D1:BB73 C6 BB D1 -  	.dl MG_Data_13
   16 D1:BB76 C4 BB D1 -  	.dl MG_Data_14
   17 D1:BB79 C2 BB D1 -  	.dl MG_Data_15
   18 D1:BB7C C0 BB D1 -  	.dl MG_Data_16
   19 D1:BB7F BE BB D1 -  	.dl MG_Data_17
   20 D1:BB82 BC BB D1 -  	.dl MG_Data_18
   21 D1:BB85 BA BB D1 -  	.dl MG_Data_19
   22 D1:BB88 B8 BB D1 -  	.dl MG_Data_20
   23 D1:BB8B B6 BB D1 -  	.dl MG_Data_21
   24 D1:BB8E B4 BB D1 -  	.dl MG_Data_22
   25 D1:BB91 B2 BB D1 -  	.dl MG_Data_23
   26 D1:BB94 B0 BB D1 -  	.dl MG_Data_24
   27 D1:BB97 AE BB D1 -  	.dl MG_Data_25
   28 D1:BB9A AC BB D1 -  	.dl MG_Data_26
   29 D1:BB9D AA BB D1 -  	.dl MG_Data_27
   30 D1:BBA0 A8 BB D1 -  	.dl MG_Data_28
   31 D1:BBA3 A6 BB D1 -  	.dl MG_Data_29
   32 D1:BBA6 -  -  -  -  
   33 D1:BBA6 -  -  -  -  
   34 D1:BBA6 -  -  -  -  
   35 D1:BBA6 -  -  -  -  MG_Data_29:
   36 D1:BBA6 00 -  -  -  	.db 0
   37 D1:BBA7 00 -  -  -  	.db 0
   38 D1:BBA8 -  -  -  -  
   39 D1:BBA8 -  -  -  -  MG_Data_28:
   40 D1:BBA8 00 -  -  -  	.db 0
   41 D1:BBA9 00 -  -  -  	.db 0
   42 D1:BBAA -  -  -  -  
   43 D1:BBAA -  -  -  -  MG_Data_27:
   44 D1:BBAA 00 -  -  -  	.db 0
   45 D1:BBAB 00 -  -  -  	.db 0
   46 D1:BBAC -  -  -  -  
   47 D1:BBAC -  -  -  -  MG_Data_26:
   48 D1:BBAC 00 -  -  -  	.db 0
   49 D1:BBAD 00 -  -  -  	.db 0
   50 D1:BBAE -  -  -  -  
   51 D1:BBAE -  -  -  -  MG_Data_25:
   52 D1:BBAE 00 -  -  -  	.db 0
   53 D1:BBAF 00 -  -  -  	.db 0
   54 D1:BBB0 -  -  -  -  
   55 D1:BBB0 -  -  -  -  MG_Data_24:
   56 D1:BBB0 00 -  -  -  	.db 0
   57 D1:BBB1 00 -  -  -  	.db 0
   58 D1:BBB2 -  -  -  -  
   59 D1:BBB2 -  -  -  -  MG_Data_23:
   60 D1:BBB2 00 -  -  -  	.db 0
   61 D1:BBB3 00 -  -  -  	.db 0
   62 D1:BBB4 -  -  -  -  
   63 D1:BBB4 -  -  -  -  MG_Data_22:
   64 D1:BBB4 00 -  -  -  	.db 0
   65 D1:BBB5 00 -  -  -  	.db 0
   66 D1:BBB6 -  -  -  -  
   67 D1:BBB6 -  -  -  -  MG_Data_21:
   68 D1:BBB6 00 -  -  -  	.db 0
   69 D1:BBB7 00 -  -  -  	.db 0
   70 D1:BBB8 -  -  -  -  
   71 D1:BBB8 -  -  -  -  MG_Data_20:
   72 D1:BBB8 00 -  -  -  	.db 0
   73 D1:BBB9 00 -  -  -  	.db 0
   74 D1:BBBA -  -  -  -  
   75 D1:BBBA -  -  -  -  MG_Data_19:
   76 D1:BBBA 00 -  -  -  	.db 0
   77 D1:BBBB 00 -  -  -  	.db 0
   78 D1:BBBC -  -  -  -  
   79 D1:BBBC -  -  -  -  MG_Data_18:
   80 D1:BBBC 00 -  -  -  	.db 0
   81 D1:BBBD 00 -  -  -  	.db 0
   82 D1:BBBE -  -  -  -  
   83 D1:BBBE -  -  -  -  MG_Data_17:
   84 D1:BBBE 00 -  -  -  	.db 0
   85 D1:BBBF 00 -  -  -  	.db 0
   86 D1:BBC0 -  -  -  -  
   87 D1:BBC0 -  -  -  -  MG_Data_16:
   88 D1:BBC0 00 -  -  -  	.db 0
   89 D1:BBC1 00 -  -  -  	.db 0
   90 D1:BBC2 -  -  -  -  
   91 D1:BBC2 -  -  -  -  MG_Data_15:
   92 D1:BBC2 00 -  -  -  	.db 0
   93 D1:BBC3 00 -  -  -  	.db 0
   94 D1:BBC4 -  -  -  -  
   95 D1:BBC4 -  -  -  -  MG_Data_14:
   96 D1:BBC4 00 -  -  -  	.db 0
   97 D1:BBC5 00 -  -  -  	.db 0
   98 D1:BBC6 -  -  -  -  
   99 D1:BBC6 -  -  -  -  MG_Data_13:
  100 D1:BBC6 00 -  -  -  	.db 0
  101 D1:BBC7 00 -  -  -  	.db 0
  102 D1:BBC8 -  -  -  -  
  103 D1:BBC8 -  -  -  -  MG_Data_12:
  104 D1:BBC8 00 -  -  -  	.db 0
  105 D1:BBC9 00 -  -  -  	.db 0
  106 D1:BBCA -  -  -  -  
  107 D1:BBCA -  -  -  -  MG_Data_11:
  108 D1:BBCA 00 -  -  -  	.db 0
  109 D1:BBCB 00 -  -  -  	.db 0
  110 D1:BBCC -  -  -  -  
  111 D1:BBCC -  -  -  -  MG_Data_10:
  112 D1:BBCC 00 -  -  -  	.db 0
  113 D1:BBCD 00 -  -  -  	.db 0
  114 D1:BBCE -  -  -  -  
  115 D1:BBCE -  -  -  -  MG_Data_9:
  116 D1:BBCE 00 -  -  -  	.db 0
  117 D1:BBCF 00 -  -  -  	.db 0
  118 D1:BBD0 -  -  -  -  
  119 D1:BBD0 -  -  -  -  MG_Data_8:
  120 D1:BBD0 00 -  -  -  	.db 0
  121 D1:BBD1 00 -  -  -  	.db 0
  122 D1:BBD2 -  -  -  -  
  123 D1:BBD2 -  -  -  -  MG_Data_7:
  124 D1:BBD2 00 -  -  -  	.db 0
  125 D1:BBD3 00 -  -  -  	.db 0
  126 D1:BBD4 -  -  -  -  
  127 D1:BBD4 -  -  -  -  MG_Data_6:
  128 D1:BBD4 00 -  -  -  	.db 0
  129 D1:BBD5 00 -  -  -  	.db 0
  130 D1:BBD6 -  -  -  -  
  131 D1:BBD6 -  -  -  -  MG_Data_5:
  132 D1:BBD6 00 -  -  -  	.db 0
  133 D1:BBD7 10 -  -  -  	.db 16
  134 D1:BBD8 0F FF 1C 11 	.db 15, 255, 28, 17  ;SG_TreeRow1
  135 D1:BBDC FF FF 13 11 	.db 255, 255, 19, 17  ;SG_TreeRow1
  136 D1:BBE0 9F FF 16 11 	.db 159, 255, 22, 17  ;SG_TreeRow1
  137 D1:BBE4 1F FF 1B 10 	.db 31, 255, 27, 16  ;SG_TreeRow5
  138 D1:BBE8 BF FF 14 12 	.db 191, 255, 20, 18  ;SG_TreeRow2
  139 D1:BBEC EF FF 14 10 	.db 239, 255, 20, 16  ;SG_TreeRow5
  140 D1:BBF0 7F FF 18 12 	.db 127, 255, 24, 18  ;SG_TreeRow2
  141 D1:BBF4 DF FF 13 13 	.db 223, 255, 19, 19  ;SG_TreeRow4
  142 D1:BBF8 CF FF 13 13 	.db 207, 255, 19, 19  ;SG_TreeRow4
  143 D1:BBFC AF FF 15 0F 	.db 175, 255, 21, 15  ;SG_TreeRow3
  144 D1:BC00 6F FF 19 12 	.db 111, 255, 25, 18  ;SG_TreeRow2
  145 D1:BC04 3F FF 19 12 	.db 63, 255, 25, 18  ;SG_TreeRow2
  146 D1:BC08 5F FF 18 0F 	.db 95, 255, 24, 15  ;SG_TreeRow3
  147 D1:BC0C 2F FF 1A 13 	.db 47, 255, 26, 19  ;SG_TreeRow4
  148 D1:BC10 8F FF 17 10 	.db 143, 255, 23, 16  ;SG_TreeRow5
  149 D1:BC14 4F FF 19 10 	.db 79, 255, 25, 16  ;SG_TreeRow5
  150 D1:BC18 -  -  -  -  
  151 D1:BC18 -  -  -  -  MG_Data_4:
  152 D1:BC18 00 -  -  -  	.db 0
  153 D1:BC19 16 -  -  -  	.db 22
  154 D1:BC1A F6 FF 74 09 	.db 246, 255, 116, 9  ;SG_Vine2
  155 D1:BC1E 72 FF 00 07 	.db 114, 255, 0, 7  ;SG_Vine6
  156 D1:BC22 4F FF 26 10 	.db 79, 255, 38, 16  ;SG_TreeRow5
  157 D1:BC26 8F FF 22 10 	.db 143, 255, 34, 16  ;SG_TreeRow5
  158 D1:BC2A 3F FF 27 13 	.db 63, 255, 39, 19  ;SG_TreeRow4
  159 D1:BC2E 2F FF 27 13 	.db 47, 255, 39, 19  ;SG_TreeRow4
  160 D1:BC32 6F FF 24 12 	.db 111, 255, 36, 18  ;SG_TreeRow2
  161 D1:BC36 BF FF 1F 13 	.db 191, 255, 31, 19  ;SG_TreeRow4
  162 D1:BC3A 9F FF 21 13 	.db 159, 255, 33, 19  ;SG_TreeRow4
  163 D1:BC3E DF FF 1F 12 	.db 223, 255, 31, 18  ;SG_TreeRow2
  164 D1:BC42 FF FF 1D 0F 	.db 255, 255, 29, 15  ;SG_TreeRow3
  165 D1:BC46 1F FF 28 0F 	.db 31, 255, 40, 15  ;SG_TreeRow3
  166 D1:BC4A 5F FF 25 11 	.db 95, 255, 37, 17  ;SG_TreeRow1
  167 D1:BC4E 7F FF 23 11 	.db 127, 255, 35, 17  ;SG_TreeRow1
  168 D1:BC52 AF FF 20 11 	.db 175, 255, 32, 17  ;SG_TreeRow1
  169 D1:BC56 EF FF 1E 11 	.db 239, 255, 30, 17  ;SG_TreeRow1
  170 D1:BC5A CF FF 1E 10 	.db 207, 255, 30, 16  ;SG_TreeRow5
  171 D1:BC5E 0F FF 29 11 	.db 15, 255, 41, 17  ;SG_TreeRow1
  172 D1:BC62 2E FF 00 14 	.db 46, 255, 0, 20  ;SG_Branch1
  173 D1:BC66 C3 FF 54 1B 	.db 195, 255, 84, 27  ;SG_BranchBase4
  174 D1:BC6A CF FF 65 05 	.db 207, 255, 101, 5  ;SG_Branch5
  175 D1:BC6E E4 FF 69 05 	.db 228, 255, 105, 5  ;SG_Branch5
  176 D1:BC72 -  -  -  -  
  177 D1:BC72 -  -  -  -  MG_Data_3:
  178 D1:BC72 00 -  -  -  	.db 0
  179 D1:BC73 1B -  -  -  	.db 27
  180 D1:BC74 0F FF 28 10 	.db 15, 255, 40, 16  ;SG_TreeRow5
  181 D1:BC78 5F FF 26 13 	.db 95, 255, 38, 19  ;SG_TreeRow4
  182 D1:BC7C 6F FF 25 10 	.db 111, 255, 37, 16  ;SG_TreeRow5
  183 D1:BC80 4F FF 27 0F 	.db 79, 255, 39, 15  ;SG_TreeRow3
  184 D1:BC84 7F FF 26 0F 	.db 127, 255, 38, 15  ;SG_TreeRow3
  185 D1:BC88 8F FF 27 12 	.db 143, 255, 39, 18  ;SG_TreeRow2
  186 D1:BC8C 9F FF 27 0F 	.db 159, 255, 39, 15  ;SG_TreeRow3
  187 D1:BC90 BF FF 29 12 	.db 191, 255, 41, 18  ;SG_TreeRow2
  188 D1:BC94 2F FF 28 12 	.db 47, 255, 40, 18  ;SG_TreeRow2
  189 D1:BC98 EF FF 2A 13 	.db 239, 255, 42, 19  ;SG_TreeRow4
  190 D1:BC9C FF FF 2A 0F 	.db 255, 255, 42, 15  ;SG_TreeRow3
  191 D1:BCA0 1F FF 28 0F 	.db 31, 255, 40, 15  ;SG_TreeRow3
  192 D1:BCA4 3F FF 28 11 	.db 63, 255, 40, 17  ;SG_TreeRow1
  193 D1:BCA8 AF FF 28 11 	.db 175, 255, 40, 17  ;SG_TreeRow1
  194 D1:BCAC CF FF 29 11 	.db 207, 255, 41, 17  ;SG_TreeRow1
  195 D1:BCB0 DF FF 2A 10 	.db 223, 255, 42, 16  ;SG_TreeRow5
  196 D1:BCB4 8E FF 21 16 	.db 142, 255, 33, 22  ;SG_Vine5
  197 D1:BCB8 5D FF 6C 08 	.db 93, 255, 108, 8  ;SG_Branch6
  198 D1:BCBC 95 0C 35 73 	.db 149, 12, 53, 115  ;Leaves_3_Slow_O_F
  199 D1:BCC0 87 FF 02 02 	.db 135, 255, 2, 2  ;SG_Branch3
  200 D1:BCC4 95 FF 1E 1A 	.db 149, 255, 30, 26  ;SG_BranchBase2
  201 D1:BCC8 F6 FF 2A 15 	.db 246, 255, 42, 21  ;SG_Vine4
  202 D1:BCCC 98 0B 3E 30 	.db 152, 11, 62, 48  ;Vines_9_Slow
  203 D1:BCD0 96 18 49 74 	.db 150, 24, 73, 116  ;Vines_7_Slow_O
  204 D1:BCD4 7E 18 4A 2A 	.db 126, 24, 74, 42  ;Vines_8_Slow
  205 D1:BCD8 67 0B 47 36 	.db 103, 11, 71, 54  ;Leaves_4_Slow_O
  206 D1:BCDC 9D 18 7D 74 	.db 157, 24, 125, 116  ;Vines_7_Slow_O
  207 D1:BCE0 -  -  -  -  
  208 D1:BCE0 -  -  -  -  MG_Data_2:
  209 D1:BCE0 00 -  -  -  	.db 0
  210 D1:BCE1 1A -  -  -  	.db 26
  211 D1:BCE2 83 FF 83 16 	.db 131, 255, 131, 22  ;SG_Vine5
  212 D1:BCE6 AC FF 0C 0B 	.db 172, 255, 12, 11  ;SG_Branch2
  213 D1:BCEA 0F FF 22 0F 	.db 15, 255, 34, 15  ;SG_TreeRow3
  214 D1:BCEE 4F FF 26 13 	.db 79, 255, 38, 19  ;SG_TreeRow4
  215 D1:BCF2 3F FF 25 10 	.db 63, 255, 37, 16  ;SG_TreeRow5
  216 D1:BCF6 6F FF 28 0F 	.db 111, 255, 40, 15  ;SG_TreeRow3
  217 D1:BCFA 9F FF 2B 13 	.db 159, 255, 43, 19  ;SG_TreeRow4
  218 D1:BCFE AF FF 2A 10 	.db 175, 255, 42, 16  ;SG_TreeRow5
  219 D1:BD02 1F FF 23 11 	.db 31, 255, 35, 17  ;SG_TreeRow1
  220 D1:BD06 8F FF 2A 10 	.db 143, 255, 42, 16  ;SG_TreeRow5
  221 D1:BD0A CF FF 2A 12 	.db 207, 255, 42, 18  ;SG_TreeRow2
  222 D1:BD0E DF FF 29 13 	.db 223, 255, 41, 19  ;SG_TreeRow4
  223 D1:BD12 FF FF 28 0F 	.db 255, 255, 40, 15  ;SG_TreeRow3
  224 D1:BD16 2F FF 24 11 	.db 47, 255, 36, 17  ;SG_TreeRow1
  225 D1:BD1A 7F FF 29 11 	.db 127, 255, 41, 17  ;SG_TreeRow1
  226 D1:BD1E BF FF 2A 11 	.db 191, 255, 42, 17  ;SG_TreeRow1
  227 D1:BD22 EF FF 28 11 	.db 239, 255, 40, 17  ;SG_TreeRow1
  228 D1:BD26 5F FF 27 12 	.db 95, 255, 39, 18  ;SG_TreeRow2
  229 D1:BD2A 96 FF 24 19 	.db 150, 255, 36, 25  ;SG_BranchBase1
  230 D1:BD2E 78 FF 60 17 	.db 120, 255, 96, 23  ;SG_BranchBase3
  231 D1:BD32 A8 FF 72 03 	.db 168, 255, 114, 3  ;SG_Branch7
  232 D1:BD36 83 FF 00 06 	.db 131, 255, 0, 6  ;SG_Vine3
  233 D1:BD3A 78 FF 1F 07 	.db 120, 255, 31, 7  ;SG_Vine6
  234 D1:BD3E 37 FF 0D 02 	.db 55, 255, 13, 2  ;SG_Branch3
  235 D1:BD42 93 FF 08 02 	.db 147, 255, 8, 2  ;SG_Branch3
  236 D1:BD46 8A FF 57 18 	.db 138, 255, 87, 24  ;SG_Vine1
  237 D1:BD4A -  -  -  -  
  238 D1:BD4A -  -  -  -  MG_Data_1:
  239 D1:BD4A 00 -  -  -  	.db 0
  240 D1:BD4B 1C -  -  -  	.db 28
  241 D1:BD4C 91 09 70 2F 	.db 145, 9, 112, 47  ;Vines_1_Slow_O
  242 D1:BD50 7F 0B 1E 30 	.db 127, 11, 30, 48  ;Vines_9_Slow
  243 D1:BD54 F1 FF 7C 06 	.db 241, 255, 124, 6  ;SG_Vine3
  244 D1:BD58 5F FF 1F 10 	.db 95, 255, 31, 16  ;SG_TreeRow5
  245 D1:BD5C AF FF 1F 10 	.db 175, 255, 31, 16  ;SG_TreeRow5
  246 D1:BD60 3F FF 1F 12 	.db 63, 255, 31, 18  ;SG_TreeRow2
  247 D1:BD64 6F FF 1F 12 	.db 111, 255, 31, 18  ;SG_TreeRow2
  248 D1:BD68 7F FF 1F 0F 	.db 127, 255, 31, 15  ;SG_TreeRow3
  249 D1:BD6C 9F FF 1F 13 	.db 159, 255, 31, 19  ;SG_TreeRow4
  250 D1:BD70 2F FF 20 13 	.db 47, 255, 32, 19  ;SG_TreeRow4
  251 D1:BD74 EF FF 21 0F 	.db 239, 255, 33, 15  ;SG_TreeRow3
  252 D1:BD78 CF FF 20 11 	.db 207, 255, 32, 17  ;SG_TreeRow1
  253 D1:BD7C DF FF 21 13 	.db 223, 255, 33, 19  ;SG_TreeRow4
  254 D1:BD80 BF FF 20 11 	.db 191, 255, 32, 17  ;SG_TreeRow1
  255 D1:BD84 0F FF 21 10 	.db 15, 255, 33, 16  ;SG_TreeRow5
  256 D1:BD88 4F FF 1F 11 	.db 79, 255, 31, 17  ;SG_TreeRow1
  257 D1:BD8C 1F FF 20 0F 	.db 31, 255, 32, 15  ;SG_TreeRow3
  258 D1:BD90 FF FF 22 13 	.db 255, 255, 34, 19  ;SG_TreeRow4
  259 D1:BD94 8F FF 1F 11 	.db 143, 255, 31, 17  ;SG_TreeRow1
  260 D1:BD98 5E FF 48 18 	.db 94, 255, 72, 24  ;SG_Vine1
  261 D1:BD9C 77 FF 1E 09 	.db 119, 255, 30, 9  ;SG_Vine2
  262 D1:BDA0 42 FF 50 09 	.db 66, 255, 80, 9  ;SG_Vine2
  263 D1:BDA4 6B FF 5C 17 	.db 107, 255, 92, 23  ;SG_BranchBase3
  264 D1:BDA8 82 FF 77 05 	.db 130, 255, 119, 5  ;SG_Branch5
  265 D1:BDAC 68 FF 2C 02 	.db 104, 255, 44, 2  ;SG_Branch3
  266 D1:BDB0 CA FF 0C 0B 	.db 202, 255, 12, 11  ;SG_Branch2
  267 D1:BDB4 60 10 79 64 	.db 96, 16, 121, 100  ;Vines_3_Slow_O_F
  268 D1:BDB8 57 0E 83 6F 	.db 87, 14, 131, 111  ;Vines_10_Slow_O
  269 D1:BDBC -  -  -  -  
  270 D1:BDBC -  -  -  -  MG_Data_0:
  271 D1:BDBC 00 -  -  -  	.db 0
  272 D1:BDBD 30 -  -  -  	.db 48
  273 D1:BDBE 39 FF 88 0C 	.db 57, 255, 136, 12  ;SG_GroundChunk2
  274 D1:BDC2 3B FF 70 0D 	.db 59, 255, 112, 13  ;SG_GroundChunk1
  275 D1:BDC6 3F FF 16 0C 	.db 63, 255, 22, 12  ;SG_GroundChunk2
  276 D1:BDCA 42 FF 00 0D 	.db 66, 255, 0, 13  ;SG_GroundChunk1
  277 D1:BDCE A8 FF 67 07 	.db 168, 255, 103, 7  ;SG_Vine6
  278 D1:BDD2 B3 FF 07 16 	.db 179, 255, 7, 22  ;SG_Vine5
  279 D1:BDD6 45 FF 78 01 	.db 69, 255, 120, 1  ;SG_GroundGrass
  280 D1:BDDA 2F FF 22 0F 	.db 47, 255, 34, 15  ;SG_TreeRow3
  281 D1:BDDE 3F FF 22 10 	.db 63, 255, 34, 16  ;SG_TreeRow5
  282 D1:BDE2 4F FF 22 11 	.db 79, 255, 34, 17  ;SG_TreeRow1
  283 D1:BDE6 5F FF 22 12 	.db 95, 255, 34, 18  ;SG_TreeRow2
  284 D1:BDEA 6F FF 23 10 	.db 111, 255, 35, 16  ;SG_TreeRow5
  285 D1:BDEE 7F FF 23 0F 	.db 127, 255, 35, 15  ;SG_TreeRow3
  286 D1:BDF2 AF FF 22 13 	.db 175, 255, 34, 19  ;SG_TreeRow4
  287 D1:BDF6 9F FF 22 12 	.db 159, 255, 34, 18  ;SG_TreeRow2
  288 D1:BDFA 35 FF 12 0E 	.db 53, 255, 18, 14  ;SG_Root1
  289 D1:BDFE BF FF 22 11 	.db 191, 255, 34, 17  ;SG_TreeRow1
  290 D1:BE02 CF FF 23 10 	.db 207, 255, 35, 16  ;SG_TreeRow5
  291 D1:BE06 DF FF 22 11 	.db 223, 255, 34, 17  ;SG_TreeRow1
  292 D1:BE0A EF FF 23 0F 	.db 239, 255, 35, 15  ;SG_TreeRow3
  293 D1:BE0E FF FF 22 12 	.db 255, 255, 34, 18  ;SG_TreeRow2
  294 D1:BE12 8F FF 23 11 	.db 143, 255, 35, 17  ;SG_TreeRow1
  295 D1:BE16 33 FF 86 0E 	.db 51, 255, 134, 14  ;SG_Root1
  296 D1:BE1A 3B FF 79 0E 	.db 59, 255, 121, 14  ;SG_Root1
  297 D1:BE1E 4C FF 00 01 	.db 76, 255, 0, 1  ;SG_GroundGrass
  298 D1:BE22 28 FF 88 0C 	.db 40, 255, 136, 12  ;SG_GroundChunk2
  299 D1:BE26 AD 09 65 69 	.db 173, 9, 101, 105  ;Leaves_2_Slow
  300 D1:BE2A A9 09 5F 24 	.db 169, 9, 95, 36  ;Leaves_2_Slow_O
  301 D1:BE2E 2A FF 18 0D 	.db 42, 255, 24, 13  ;SG_GroundChunk1
  302 D1:BE32 2B FF 30 0D 	.db 43, 255, 48, 13  ;SG_GroundChunk1
  303 D1:BE36 A8 FF 29 15 	.db 168, 255, 41, 21  ;SG_Vine4
  304 D1:BE3A BE FF 00 14 	.db 190, 255, 0, 20  ;SG_Branch1
  305 D1:BE3E 28 FF 00 0C 	.db 40, 255, 0, 12  ;SG_GroundChunk2
  306 D1:BE42 2A FF 48 0C 	.db 42, 255, 72, 12  ;SG_GroundChunk2
  307 D1:BE46 2B FF 60 0D 	.db 43, 255, 96, 13  ;SG_GroundChunk1
  308 D1:BE4A 2A FF 78 0C 	.db 42, 255, 120, 12  ;SG_GroundChunk2
  309 D1:BE4E 9B 0B 5C 1F 	.db 155, 11, 92, 31  ;Leaves_4_Slow
  310 D1:BE52 A2 09 61 24 	.db 162, 9, 97, 36  ;Leaves_2_Slow_O
  311 D1:BE56 29 FF 1F 0E 	.db 41, 255, 31, 14  ;SG_Root1
  312 D1:BE5A 35 10 06 08 	.db 53, 16, 6, 8  ;GroundGrassL1_Fast
  313 D1:BE5E 30 10 3B 08 	.db 48, 16, 59, 8  ;GroundGrassL1_Fast
  314 D1:BE62 2A 10 96 09 	.db 42, 16, 150, 9  ;GroundGrassL1_Fast_F
  315 D1:BE66 27 FF 67 07 	.db 39, 255, 103, 7  ;SG_Vine6
  316 D1:BE6A 38 13 5D 6A 	.db 56, 19, 93, 106  ;Vines_2_Slow_O_F
  317 D1:BE6E 4A 18 5B 40 	.db 74, 24, 91, 64  ;Vines_8_Slow_F
  318 D1:BE72 27 FF 0E 0E 	.db 39, 255, 14, 14  ;SG_Root1
  319 D1:BE76 27 FF 6B 0E 	.db 39, 255, 107, 14  ;SG_Root1
  320 D1:BE7A 21 FF 51 0E 	.db 33, 255, 81, 14  ;SG_Root1
  321 D1:BE7E -  -  -  -  
  322 D1:BE7E -  -  -  -  
  323 D1:BE7E -  -  -  -  
Listing for file "ascent.asm"
  542 D1:BE7E -  -  -  -  #include "generated/FG_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\FG_Data.txt"
    1 D1:BE7E -  -  -  -  FG_Data_frame_table:
    2 D1:BE7E B2 BF D1 -  	.dl FG_Data_0
    3 D1:BE81 A4 BF D1 -  	.dl FG_Data_1
    4 D1:BE84 7E BF D1 -  	.dl FG_Data_2
    5 D1:BE87 78 BF D1 -  	.dl FG_Data_3
    6 D1:BE8A 6E BF D1 -  	.dl FG_Data_4
    7 D1:BE8D 5C BF D1 -  	.dl FG_Data_5
    8 D1:BE90 56 BF D1 -  	.dl FG_Data_6
    9 D1:BE93 48 BF D1 -  	.dl FG_Data_7
   10 D1:BE96 36 BF D1 -  	.dl FG_Data_8
   11 D1:BE99 04 BF D1 -  	.dl FG_Data_9
   12 D1:BE9C FE BE D1 -  	.dl FG_Data_10
   13 D1:BE9F FC BE D1 -  	.dl FG_Data_11
   14 D1:BEA2 FA BE D1 -  	.dl FG_Data_12
   15 D1:BEA5 F8 BE D1 -  	.dl FG_Data_13
   16 D1:BEA8 F6 BE D1 -  	.dl FG_Data_14
   17 D1:BEAB F4 BE D1 -  	.dl FG_Data_15
   18 D1:BEAE F2 BE D1 -  	.dl FG_Data_16
   19 D1:BEB1 F0 BE D1 -  	.dl FG_Data_17
   20 D1:BEB4 EE BE D1 -  	.dl FG_Data_18
   21 D1:BEB7 EC BE D1 -  	.dl FG_Data_19
   22 D1:BEBA EA BE D1 -  	.dl FG_Data_20
   23 D1:BEBD E8 BE D1 -  	.dl FG_Data_21
   24 D1:BEC0 E6 BE D1 -  	.dl FG_Data_22
   25 D1:BEC3 E4 BE D1 -  	.dl FG_Data_23
   26 D1:BEC6 E2 BE D1 -  	.dl FG_Data_24
   27 D1:BEC9 E0 BE D1 -  	.dl FG_Data_25
   28 D1:BECC DE BE D1 -  	.dl FG_Data_26
   29 D1:BECF DC BE D1 -  	.dl FG_Data_27
   30 D1:BED2 DA BE D1 -  	.dl FG_Data_28
   31 D1:BED5 D8 BE D1 -  	.dl FG_Data_29
   32 D1:BED8 -  -  -  -  
   33 D1:BED8 -  -  -  -  
   34 D1:BED8 -  -  -  -  
   35 D1:BED8 -  -  -  -  FG_Data_29:
   36 D1:BED8 00 -  -  -  	.db 0
   37 D1:BED9 00 -  -  -  	.db 0
   38 D1:BEDA -  -  -  -  
   39 D1:BEDA -  -  -  -  FG_Data_28:
   40 D1:BEDA 00 -  -  -  	.db 0
   41 D1:BEDB 00 -  -  -  	.db 0
   42 D1:BEDC -  -  -  -  
   43 D1:BEDC -  -  -  -  FG_Data_27:
   44 D1:BEDC 00 -  -  -  	.db 0
   45 D1:BEDD 00 -  -  -  	.db 0
   46 D1:BEDE -  -  -  -  
   47 D1:BEDE -  -  -  -  FG_Data_26:
   48 D1:BEDE 00 -  -  -  	.db 0
   49 D1:BEDF 00 -  -  -  	.db 0
   50 D1:BEE0 -  -  -  -  
   51 D1:BEE0 -  -  -  -  FG_Data_25:
   52 D1:BEE0 00 -  -  -  	.db 0
   53 D1:BEE1 00 -  -  -  	.db 0
   54 D1:BEE2 -  -  -  -  
   55 D1:BEE2 -  -  -  -  FG_Data_24:
   56 D1:BEE2 00 -  -  -  	.db 0
   57 D1:BEE3 00 -  -  -  	.db 0
   58 D1:BEE4 -  -  -  -  
   59 D1:BEE4 -  -  -  -  FG_Data_23:
   60 D1:BEE4 00 -  -  -  	.db 0
   61 D1:BEE5 00 -  -  -  	.db 0
   62 D1:BEE6 -  -  -  -  
   63 D1:BEE6 -  -  -  -  FG_Data_22:
   64 D1:BEE6 00 -  -  -  	.db 0
   65 D1:BEE7 00 -  -  -  	.db 0
   66 D1:BEE8 -  -  -  -  
   67 D1:BEE8 -  -  -  -  FG_Data_21:
   68 D1:BEE8 00 -  -  -  	.db 0
   69 D1:BEE9 00 -  -  -  	.db 0
   70 D1:BEEA -  -  -  -  
   71 D1:BEEA -  -  -  -  FG_Data_20:
   72 D1:BEEA 00 -  -  -  	.db 0
   73 D1:BEEB 00 -  -  -  	.db 0
   74 D1:BEEC -  -  -  -  
   75 D1:BEEC -  -  -  -  FG_Data_19:
   76 D1:BEEC 00 -  -  -  	.db 0
   77 D1:BEED 00 -  -  -  	.db 0
   78 D1:BEEE -  -  -  -  
   79 D1:BEEE -  -  -  -  FG_Data_18:
   80 D1:BEEE 00 -  -  -  	.db 0
   81 D1:BEEF 00 -  -  -  	.db 0
   82 D1:BEF0 -  -  -  -  
   83 D1:BEF0 -  -  -  -  FG_Data_17:
   84 D1:BEF0 00 -  -  -  	.db 0
   85 D1:BEF1 00 -  -  -  	.db 0
   86 D1:BEF2 -  -  -  -  
   87 D1:BEF2 -  -  -  -  FG_Data_16:
   88 D1:BEF2 00 -  -  -  	.db 0
   89 D1:BEF3 00 -  -  -  	.db 0
   90 D1:BEF4 -  -  -  -  
   91 D1:BEF4 -  -  -  -  FG_Data_15:
   92 D1:BEF4 00 -  -  -  	.db 0
   93 D1:BEF5 00 -  -  -  	.db 0
   94 D1:BEF6 -  -  -  -  
   95 D1:BEF6 -  -  -  -  FG_Data_14:
   96 D1:BEF6 00 -  -  -  	.db 0
   97 D1:BEF7 00 -  -  -  	.db 0
   98 D1:BEF8 -  -  -  -  
   99 D1:BEF8 -  -  -  -  FG_Data_13:
  100 D1:BEF8 00 -  -  -  	.db 0
  101 D1:BEF9 00 -  -  -  	.db 0
  102 D1:BEFA -  -  -  -  
  103 D1:BEFA -  -  -  -  FG_Data_12:
  104 D1:BEFA 00 -  -  -  	.db 0
  105 D1:BEFB 00 -  -  -  	.db 0
  106 D1:BEFC -  -  -  -  
  107 D1:BEFC -  -  -  -  FG_Data_11:
  108 D1:BEFC 00 -  -  -  	.db 0
  109 D1:BEFD 00 -  -  -  	.db 0
  110 D1:BEFE -  -  -  -  
  111 D1:BEFE -  -  -  -  FG_Data_10:
  112 D1:BEFE 00 -  -  -  	.db 0
  113 D1:BEFF 01 -  -  -  	.db 1
  114 D1:BF00 CA FF 82 02 	.db 202, 255, 130, 2  ;SG_Branch3
  115 D1:BF04 -  -  -  -  
  116 D1:BF04 -  -  -  -  FG_Data_9:
  117 D1:BF04 00 -  -  -  	.db 0
  118 D1:BF05 0C -  -  -  	.db 12
  119 D1:BF06 BD FF 22 09 	.db 189, 255, 34, 9  ;SG_Vine2
  120 D1:BF0A AB 18 9B 40 	.db 171, 24, 155, 64  ;Vines_8_Slow_F
  121 D1:BF0E B8 0B 13 41 	.db 184, 11, 19, 65  ;Vines_9_Slow_O
  122 D1:BF12 D5 FF 7D 04 	.db 213, 255, 125, 4  ;SG_Branch4
  123 D1:BF16 B0 0E 00 42 	.db 176, 14, 0, 66  ;Branches_3_Fast
  124 D1:BF1A B1 0E 09 43 	.db 177, 14, 9, 67  ;Branches_2_Fast
  125 D1:BF1E B1 0E 12 33 	.db 177, 14, 18, 51  ;Branches_4_Fast_F
  126 D1:BF22 EA FF 13 03 	.db 234, 255, 19, 3  ;SG_Branch7
  127 D1:BF26 91 FF 4E 07 	.db 145, 255, 78, 7  ;SG_Vine6
  128 D1:BF2A 9B 10 86 44 	.db 155, 16, 134, 68  ;Vines_3_Slow_O
  129 D1:BF2E AC 13 91 2B 	.db 172, 19, 145, 43  ;Vines_2_Slow_O
  130 D1:BF32 B0 FF 0E 0A 	.db 176, 255, 14, 10  ;SG_Vine7
  131 D1:BF36 -  -  -  -  
  132 D1:BF36 -  -  -  -  FG_Data_8:
  133 D1:BF36 00 -  -  -  	.db 0
  134 D1:BF37 04 -  -  -  	.db 4
  135 D1:BF38 7C 0E 97 3E 	.db 124, 14, 151, 62  ;Branches_5_Fast
  136 D1:BF3C 7C 0E 8E 3F 	.db 124, 14, 142, 63  ;Branches_4_Fast
  137 D1:BF40 A4 FF 77 0B 	.db 164, 255, 119, 11  ;SG_Branch2
  138 D1:BF44 7B FF 8C 0A 	.db 123, 255, 140, 10  ;SG_Vine7
  139 D1:BF48 -  -  -  -  
  140 D1:BF48 -  -  -  -  FG_Data_7:
  141 D1:BF48 00 -  -  -  	.db 0
  142 D1:BF49 03 -  -  -  	.db 3
  143 D1:BF4A 87 FF 00 05 	.db 135, 255, 0, 5  ;SG_Branch5
  144 D1:BF4E ED FF 00 08 	.db 237, 255, 0, 8  ;SG_Branch6
  145 D1:BF52 64 FF 08 0A 	.db 100, 255, 8, 10  ;SG_Vine7
  146 D1:BF56 -  -  -  -  
  147 D1:BF56 -  -  -  -  FG_Data_6:
  148 D1:BF56 00 -  -  -  	.db 0
  149 D1:BF57 01 -  -  -  	.db 1
  150 D1:BF58 64 FF 00 08 	.db 100, 255, 0, 8  ;SG_Branch6
  151 D1:BF5C -  -  -  -  
  152 D1:BF5C -  -  -  -  FG_Data_5:
  153 D1:BF5C 00 -  -  -  	.db 0
  154 D1:BF5D 04 -  -  -  	.db 4
  155 D1:BF5E 34 FF 10 09 	.db 52, 255, 16, 9  ;SG_Vine2
  156 D1:BF62 D7 FF 82 02 	.db 215, 255, 130, 2  ;SG_Branch3
  157 D1:BF66 5D FF 00 05 	.db 93, 255, 0, 5  ;SG_Branch5
  158 D1:BF6A 08 FF 3B 09 	.db 8, 255, 59, 9  ;SG_Vine2
  159 D1:BF6E -  -  -  -  
  160 D1:BF6E -  -  -  -  FG_Data_4:
  161 D1:BF6E 00 -  -  -  	.db 0
  162 D1:BF6F 02 -  -  -  	.db 2
  163 D1:BF70 B5 FF 82 02 	.db 181, 255, 130, 2  ;SG_Branch3
  164 D1:BF74 DB FF 67 07 	.db 219, 255, 103, 7  ;SG_Vine6
  165 D1:BF78 -  -  -  -  
  166 D1:BF78 -  -  -  -  FG_Data_3:
  167 D1:BF78 00 -  -  -  	.db 0
  168 D1:BF79 01 -  -  -  	.db 1
  169 D1:BF7A C1 FF 00 08 	.db 193, 255, 0, 8  ;SG_Branch6
  170 D1:BF7E -  -  -  -  
  171 D1:BF7E -  -  -  -  FG_Data_2:
  172 D1:BF7E 00 -  -  -  	.db 0
  173 D1:BF7F 09 -  -  -  	.db 9
  174 D1:BF80 FB FF 7D 04 	.db 251, 255, 125, 4  ;SG_Branch4
  175 D1:BF84 93 FF 00 05 	.db 147, 255, 0, 5  ;SG_Branch5
  176 D1:BF88 C9 FF 71 06 	.db 201, 255, 113, 6  ;SG_Vine3
  177 D1:BF8C 69 FF 38 07 	.db 105, 255, 56, 7  ;SG_Vine6
  178 D1:BF90 71 0B 2C 31 	.db 113, 11, 44, 49  ;Vines_9_Slow_O_F
  179 D1:BF94 71 09 20 2F 	.db 113, 9, 32, 47  ;Vines_1_Slow_O
  180 D1:BF98 6D 10 15 2C 	.db 109, 16, 21, 44  ;Vines_3_Slow
  181 D1:BF9C 6E 10 0E 32 	.db 110, 16, 14, 50  ;Vines_3_Slow_F
  182 D1:BFA0 D2 0B 94 30 	.db 210, 11, 148, 48  ;Vines_9_Slow
  183 D1:BFA4 -  -  -  -  
  184 D1:BFA4 -  -  -  -  FG_Data_1:
  185 D1:BFA4 00 -  -  -  	.db 0
  186 D1:BFA5 03 -  -  -  	.db 3
  187 D1:BFA6 C9 FF 82 02 	.db 201, 255, 130, 2  ;SG_Branch3
  188 D1:BFAA 87 FF 00 03 	.db 135, 255, 0, 3  ;SG_Branch7
  189 D1:BFAE 4B 0E 00 0B 	.db 75, 14, 0, 11  ;Branches_9_Fast
  190 D1:BFB2 -  -  -  -  
  191 D1:BFB2 -  -  -  -  FG_Data_0:
  192 D1:BFB2 00 -  -  -  	.db 0
  193 D1:BFB3 09 -  -  -  	.db 9
  194 D1:BFB4 1B FF 00 00 	.db 27, 255, 0, 0  ;SG_GroundChunk3
  195 D1:BFB8 1B FF 20 00 	.db 27, 255, 32, 0  ;SG_GroundChunk3
  196 D1:BFBC 1B FF 40 00 	.db 27, 255, 64, 0  ;SG_GroundChunk3
  197 D1:BFC0 1B FF 60 00 	.db 27, 255, 96, 0  ;SG_GroundChunk3
  198 D1:BFC4 1B FF 80 00 	.db 27, 255, 128, 0  ;SG_GroundChunk3
  199 D1:BFC8 27 FF 2A 01 	.db 39, 255, 42, 1  ;SG_GroundGrass
  200 D1:BFCC 2A FF 03 01 	.db 42, 255, 3, 1  ;SG_GroundGrass
  201 D1:BFD0 2A FF 4E 01 	.db 42, 255, 78, 1  ;SG_GroundGrass
  202 D1:BFD4 27 FF 75 01 	.db 39, 255, 117, 1  ;SG_GroundGrass
  203 D1:BFD8 -  -  -  -  
  204 D1:BFD8 -  -  -  -  
  205 D1:BFD8 -  -  -  -  
Listing for file "ascent.asm"
  543 D1:BFD8 -  -  -  -  #include "generated/DecompressCalls.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\DecompressCalls.txt"
    1 D1:BFD8 -  -  -  -  decompress_calls_table_up:
    2 D1:BFD8 D9 C3 D1 -  	.dl decompress_frame_up_0
    3 D1:BFDB 9A C5 D1 -  	.dl decompress_frame_up_1
    4 D1:BFDE 9B C5 D1 -  	.dl decompress_frame_up_2
    5 D1:BFE1 B8 C5 D1 -  	.dl decompress_frame_up_3
    6 D1:BFE4 B9 C5 D1 -  	.dl decompress_frame_up_4
    7 D1:BFE7 DD C5 D1 -  	.dl decompress_frame_up_5
    8 D1:BFEA EC C5 D1 -  	.dl decompress_frame_up_6
    9 D1:BFED FB C5 D1 -  	.dl decompress_frame_up_7
   10 D1:BFF0 FC C5 D1 -  	.dl decompress_frame_up_8
   11 D1:BFF3 FD C5 D1 -  	.dl decompress_frame_up_9
   12 D1:BFF6 FE C5 D1 -  	.dl decompress_frame_up_10
   13 D1:BFF9 FF C5 D1 -  	.dl decompress_frame_up_11
   14 D1:BFFC 00 C6 D1 -  	.dl decompress_frame_up_12
   15 D1:BFFF 01 C6 D1 -  	.dl decompress_frame_up_13
   16 D1:C002 02 C6 D1 -  	.dl decompress_frame_up_14
   17 D1:C005 03 C6 D1 -  	.dl decompress_frame_up_15
   18 D1:C008 04 C6 D1 -  	.dl decompress_frame_up_16
   19 D1:C00B 05 C6 D1 -  	.dl decompress_frame_up_17
   20 D1:C00E 06 C6 D1 -  	.dl decompress_frame_up_18
   21 D1:C011 07 C6 D1 -  	.dl decompress_frame_up_19
   22 D1:C014 08 C6 D1 -  	.dl decompress_frame_up_20
   23 D1:C017 09 C6 D1 -  	.dl decompress_frame_up_21
   24 D1:C01A 0A C6 D1 -  	.dl decompress_frame_up_22
   25 D1:C01D 0B C6 D1 -  	.dl decompress_frame_up_23
   26 D1:C020 0C C6 D1 -  	.dl decompress_frame_up_24
   27 D1:C023 0D C6 D1 -  	.dl decompress_frame_up_25
   28 D1:C026 0E C6 D1 -  	.dl decompress_frame_up_26
   29 D1:C029 0F C6 D1 -  	.dl decompress_frame_up_27
   30 D1:C02C 10 C6 D1 -  	.dl decompress_frame_up_28
   31 D1:C02F 11 C6 D1 -  	.dl decompress_frame_up_29
   32 D1:C032 12 C6 D1 -  	.dl decompress_frame_up_30
   33 D1:C035 13 C6 D1 -  	.dl decompress_frame_up_31
   34 D1:C038 14 C6 D1 -  	.dl decompress_frame_up_32
   35 D1:C03B 15 C6 D1 -  	.dl decompress_frame_up_33
   36 D1:C03E 16 C6 D1 -  	.dl decompress_frame_up_34
   37 D1:C041 17 C6 D1 -  	.dl decompress_frame_up_35
   38 D1:C044 18 C6 D1 -  	.dl decompress_frame_up_36
   39 D1:C047 19 C6 D1 -  	.dl decompress_frame_up_37
   40 D1:C04A 1A C6 D1 -  	.dl decompress_frame_up_38
   41 D1:C04D 1B C6 D1 -  	.dl decompress_frame_up_39
   42 D1:C050 1C C6 D1 -  	.dl decompress_frame_up_40
   43 D1:C053 1D C6 D1 -  	.dl decompress_frame_up_41
   44 D1:C056 1E C6 D1 -  	.dl decompress_frame_up_42
   45 D1:C059 1F C6 D1 -  	.dl decompress_frame_up_43
   46 D1:C05C 20 C6 D1 -  	.dl decompress_frame_up_44
   47 D1:C05F 21 C6 D1 -  	.dl decompress_frame_up_45
   48 D1:C062 22 C6 D1 -  	.dl decompress_frame_up_46
   49 D1:C065 23 C6 D1 -  	.dl decompress_frame_up_47
   50 D1:C068 24 C6 D1 -  	.dl decompress_frame_up_48
   51 D1:C06B 25 C6 D1 -  	.dl decompress_frame_up_49
   52 D1:C06E 26 C6 D1 -  	.dl decompress_frame_up_50
   53 D1:C071 27 C6 D1 -  	.dl decompress_frame_up_51
   54 D1:C074 28 C6 D1 -  	.dl decompress_frame_up_52
   55 D1:C077 29 C6 D1 -  	.dl decompress_frame_up_53
   56 D1:C07A 2A C6 D1 -  	.dl decompress_frame_up_54
   57 D1:C07D 2B C6 D1 -  	.dl decompress_frame_up_55
   58 D1:C080 2C C6 D1 -  	.dl decompress_frame_up_56
   59 D1:C083 2D C6 D1 -  	.dl decompress_frame_up_57
   60 D1:C086 2E C6 D1 -  	.dl decompress_frame_up_58
   61 D1:C089 2F C6 D1 -  	.dl decompress_frame_up_59
   62 D1:C08C 30 C6 D1 -  	.dl decompress_frame_up_60
   63 D1:C08F 31 C6 D1 -  	.dl decompress_frame_up_61
   64 D1:C092 32 C6 D1 -  	.dl decompress_frame_up_62
   65 D1:C095 33 C6 D1 -  	.dl decompress_frame_up_63
   66 D1:C098 34 C6 D1 -  	.dl decompress_frame_up_64
   67 D1:C09B 35 C6 D1 -  	.dl decompress_frame_up_65
   68 D1:C09E 36 C6 D1 -  	.dl decompress_frame_up_66
   69 D1:C0A1 37 C6 D1 -  	.dl decompress_frame_up_67
   70 D1:C0A4 38 C6 D1 -  	.dl decompress_frame_up_68
   71 D1:C0A7 39 C6 D1 -  	.dl decompress_frame_up_69
   72 D1:C0AA 3A C6 D1 -  	.dl decompress_frame_up_70
   73 D1:C0AD 3B C6 D1 -  	.dl decompress_frame_up_71
   74 D1:C0B0 3C C6 D1 -  	.dl decompress_frame_up_72
   75 D1:C0B3 3D C6 D1 -  	.dl decompress_frame_up_73
   76 D1:C0B6 3E C6 D1 -  	.dl decompress_frame_up_74
   77 D1:C0B9 3F C6 D1 -  	.dl decompress_frame_up_75
   78 D1:C0BC 40 C6 D1 -  	.dl decompress_frame_up_76
   79 D1:C0BF 41 C6 D1 -  	.dl decompress_frame_up_77
   80 D1:C0C2 42 C6 D1 -  	.dl decompress_frame_up_78
   81 D1:C0C5 43 C6 D1 -  	.dl decompress_frame_up_79
   82 D1:C0C8 44 C6 D1 -  	.dl decompress_frame_up_80
   83 D1:C0CB 45 C6 D1 -  	.dl decompress_frame_up_81
   84 D1:C0CE 46 C6 D1 -  	.dl decompress_frame_up_82
   85 D1:C0D1 47 C6 D1 -  	.dl decompress_frame_up_83
   86 D1:C0D4 48 C6 D1 -  	.dl decompress_frame_up_84
   87 D1:C0D7 49 C6 D1 -  	.dl decompress_frame_up_85
   88 D1:C0DA 4A C6 D1 -  	.dl decompress_frame_up_86
   89 D1:C0DD 4B C6 D1 -  	.dl decompress_frame_up_87
   90 D1:C0E0 4C C6 D1 -  	.dl decompress_frame_up_88
   91 D1:C0E3 4D C6 D1 -  	.dl decompress_frame_up_89
   92 D1:C0E6 -  -  -  -  
   93 D1:C0E6 -  -  -  -  
   94 D1:C0E6 -  -  -  -  decompress_calls_table_down:
   95 D1:C0E6 4E C6 D1 -  	.dl decompress_frame_down_0
   96 D1:C0E9 4F C6 D1 -  	.dl decompress_frame_down_1
   97 D1:C0EC 50 C6 D1 -  	.dl decompress_frame_down_2
   98 D1:C0EF 51 C6 D1 -  	.dl decompress_frame_down_3
   99 D1:C0F2 52 C6 D1 -  	.dl decompress_frame_down_4
  100 D1:C0F5 92 C6 D1 -  	.dl decompress_frame_down_5
  101 D1:C0F8 93 C6 D1 -  	.dl decompress_frame_down_6
  102 D1:C0FB 9B C6 D1 -  	.dl decompress_frame_down_7
  103 D1:C0FE 9C C6 D1 -  	.dl decompress_frame_down_8
  104 D1:C101 C7 C6 D1 -  	.dl decompress_frame_down_9
  105 D1:C104 C8 C6 D1 -  	.dl decompress_frame_down_10
  106 D1:C107 40 C7 D1 -  	.dl decompress_frame_down_11
  107 D1:C10A D4 C7 D1 -  	.dl decompress_frame_down_12
  108 D1:C10D D8 C8 D1 -  	.dl decompress_frame_down_13
  109 D1:C110 D9 C8 D1 -  	.dl decompress_frame_down_14
  110 D1:C113 7B C9 D1 -  	.dl decompress_frame_down_15
  111 D1:C116 7C C9 D1 -  	.dl decompress_frame_down_16
  112 D1:C119 17 CA D1 -  	.dl decompress_frame_down_17
  113 D1:C11C 18 CA D1 -  	.dl decompress_frame_down_18
  114 D1:C11F 19 CA D1 -  	.dl decompress_frame_down_19
  115 D1:C122 1A CA D1 -  	.dl decompress_frame_down_20
  116 D1:C125 1B CA D1 -  	.dl decompress_frame_down_21
  117 D1:C128 1C CA D1 -  	.dl decompress_frame_down_22
  118 D1:C12B 1D CA D1 -  	.dl decompress_frame_down_23
  119 D1:C12E 1E CA D1 -  	.dl decompress_frame_down_24
  120 D1:C131 65 CA D1 -  	.dl decompress_frame_down_25
  121 D1:C134 66 CA D1 -  	.dl decompress_frame_down_26
  122 D1:C137 67 CA D1 -  	.dl decompress_frame_down_27
  123 D1:C13A 68 CA D1 -  	.dl decompress_frame_down_28
  124 D1:C13D 69 CA D1 -  	.dl decompress_frame_down_29
  125 D1:C140 6A CA D1 -  	.dl decompress_frame_down_30
  126 D1:C143 6B CA D1 -  	.dl decompress_frame_down_31
  127 D1:C146 6C CA D1 -  	.dl decompress_frame_down_32
  128 D1:C149 6D CA D1 -  	.dl decompress_frame_down_33
  129 D1:C14C 6E CA D1 -  	.dl decompress_frame_down_34
  130 D1:C14F 6F CA D1 -  	.dl decompress_frame_down_35
  131 D1:C152 70 CA D1 -  	.dl decompress_frame_down_36
  132 D1:C155 71 CA D1 -  	.dl decompress_frame_down_37
  133 D1:C158 72 CA D1 -  	.dl decompress_frame_down_38
  134 D1:C15B 73 CA D1 -  	.dl decompress_frame_down_39
  135 D1:C15E 74 CA D1 -  	.dl decompress_frame_down_40
  136 D1:C161 75 CA D1 -  	.dl decompress_frame_down_41
  137 D1:C164 76 CA D1 -  	.dl decompress_frame_down_42
  138 D1:C167 77 CA D1 -  	.dl decompress_frame_down_43
  139 D1:C16A 78 CA D1 -  	.dl decompress_frame_down_44
  140 D1:C16D 79 CA D1 -  	.dl decompress_frame_down_45
  141 D1:C170 7A CA D1 -  	.dl decompress_frame_down_46
  142 D1:C173 7B CA D1 -  	.dl decompress_frame_down_47
  143 D1:C176 7C CA D1 -  	.dl decompress_frame_down_48
  144 D1:C179 7D CA D1 -  	.dl decompress_frame_down_49
  145 D1:C17C 7E CA D1 -  	.dl decompress_frame_down_50
  146 D1:C17F 7F CA D1 -  	.dl decompress_frame_down_51
  147 D1:C182 80 CA D1 -  	.dl decompress_frame_down_52
  148 D1:C185 81 CA D1 -  	.dl decompress_frame_down_53
  149 D1:C188 82 CA D1 -  	.dl decompress_frame_down_54
  150 D1:C18B 83 CA D1 -  	.dl decompress_frame_down_55
  151 D1:C18E 84 CA D1 -  	.dl decompress_frame_down_56
  152 D1:C191 85 CA D1 -  	.dl decompress_frame_down_57
  153 D1:C194 86 CA D1 -  	.dl decompress_frame_down_58
  154 D1:C197 87 CA D1 -  	.dl decompress_frame_down_59
  155 D1:C19A 88 CA D1 -  	.dl decompress_frame_down_60
  156 D1:C19D 89 CA D1 -  	.dl decompress_frame_down_61
  157 D1:C1A0 8A CA D1 -  	.dl decompress_frame_down_62
  158 D1:C1A3 8B CA D1 -  	.dl decompress_frame_down_63
  159 D1:C1A6 8C CA D1 -  	.dl decompress_frame_down_64
  160 D1:C1A9 8D CA D1 -  	.dl decompress_frame_down_65
  161 D1:C1AC 8E CA D1 -  	.dl decompress_frame_down_66
  162 D1:C1AF 8F CA D1 -  	.dl decompress_frame_down_67
  163 D1:C1B2 90 CA D1 -  	.dl decompress_frame_down_68
  164 D1:C1B5 91 CA D1 -  	.dl decompress_frame_down_69
  165 D1:C1B8 92 CA D1 -  	.dl decompress_frame_down_70
  166 D1:C1BB 93 CA D1 -  	.dl decompress_frame_down_71
  167 D1:C1BE 94 CA D1 -  	.dl decompress_frame_down_72
  168 D1:C1C1 95 CA D1 -  	.dl decompress_frame_down_73
  169 D1:C1C4 96 CA D1 -  	.dl decompress_frame_down_74
  170 D1:C1C7 97 CA D1 -  	.dl decompress_frame_down_75
  171 D1:C1CA 98 CA D1 -  	.dl decompress_frame_down_76
  172 D1:C1CD 99 CA D1 -  	.dl decompress_frame_down_77
  173 D1:C1D0 9A CA D1 -  	.dl decompress_frame_down_78
  174 D1:C1D3 9B CA D1 -  	.dl decompress_frame_down_79
  175 D1:C1D6 9C CA D1 -  	.dl decompress_frame_down_80
  176 D1:C1D9 9D CA D1 -  	.dl decompress_frame_down_81
  177 D1:C1DC 9E CA D1 -  	.dl decompress_frame_down_82
  178 D1:C1DF 9F CA D1 -  	.dl decompress_frame_down_83
  179 D1:C1E2 A0 CA D1 -  	.dl decompress_frame_down_84
  180 D1:C1E5 A1 CA D1 -  	.dl decompress_frame_down_85
  181 D1:C1E8 A2 CA D1 -  	.dl decompress_frame_down_86
  182 D1:C1EB A3 CA D1 -  	.dl decompress_frame_down_87
  183 D1:C1EE A4 CA D1 -  	.dl decompress_frame_down_88
  184 D1:C1F1 A5 CA D1 -  	.dl decompress_frame_down_89
  185 D1:C1F4 -  -  -  -  
  186 D1:C1F4 -  -  -  -  
  187 D1:C1F4 -  -  -  -  
  188 D1:C1F4 -  -  -  -  decompress_frame_up_pre2:
  189 D1:C1F4 05 -  -  -  	.db 5
  190 D1:C1F5 A7 DB D1 C0 
              01 D4 -  -  	.dl Clouds_0, Clouds_0_Fast_F
  191 D1:C1FB A0 -  -  -  	.db %10100000
  192 D1:C1FC D0 DB D1 26 
              02 D4 -  -  	.dl Clouds_1, Clouds_1_Fast_F
  193 D1:C202 A0 -  -  -  	.db %10100000
  194 D1:C203 23 DC D1 8A 
              02 D4 -  -  	.dl Clouds_4, Clouds_4_Fast_F
  195 D1:C209 A0 -  -  -  	.db %10100000
  196 D1:C20A F7 DB D1 CA 
              02 D4 -  -  	.dl Clouds_3, Clouds_3_Fast_F
  197 D1:C210 A0 -  -  -  	.db %10100000
  198 D1:C211 3A DC D1 36 
              03 D4 -  -  	.dl Clouds_2, Clouds_2_Fast_F
  199 D1:C217 A0 -  -  -  	.db %10100000
  200 D1:C218 -  -  -  -  
  201 D1:C218 -  -  -  -  decompress_frame_up_pre1:
  202 D1:C218 40 -  -  -  	.db 64
  203 D1:C219 F9 CF D1 E8 
              03 D4 -  -  	.dl Branches_8, Branches_8_Fast_F
  204 D1:C21F A0 -  -  -  	.db %10100000
  205 D1:C220 D5 CF D1 47 
              04 D4 -  -  	.dl Branches_15, Branches_15_Slow
  206 D1:C226 00 -  -  -  	.db %00000000
  207 D1:C227 9E D3 D1 B8 
              04 D4 -  -  	.dl Branches_3, Branches_3_Fast
  208 D1:C22D 80 -  -  -  	.db %10000000
  209 D1:C22E AF D1 D1 5F 
              05 D4 -  -  	.dl Vines_2, Vines_2_Slow_F
  210 D1:C234 20 -  -  -  	.db %00100000
  211 D1:C235 ED D2 D1 39 
              06 D4 -  -  	.dl Vines_1, Vines_1_Slow
  212 D1:C23B 00 -  -  -  	.db %00000000
  213 D1:C23C 83 D2 D1 C9 
              06 D4 -  -  	.dl Vines_9, Vines_9_Slow_O
  214 D1:C242 40 -  -  -  	.db %01000000
  215 D1:C243 EA D6 D1 7A 
              07 D4 -  -  	.dl Tree_0, Tree_0_Fast_F
  216 D1:C249 A0 -  -  -  	.db %10100000
  217 D1:C24A 7D D6 D1 76 
              08 D4 -  -  	.dl Tree_3, Tree_3_Fast
  218 D1:C250 80 -  -  -  	.db %10000000
  219 D1:C251 55 D7 D1 78 
              09 D4 -  -  	.dl Tree_8, Tree_8_Fast
  220 D1:C257 80 -  -  -  	.db %10000000
  221 D1:C258 A3 D5 D1 7A 
              0A D4 -  -  	.dl Tree_9, Tree_9_Fast_F
  222 D1:C25E A0 -  -  -  	.db %10100000
  223 D1:C25F 55 D7 D1 7C 
              0B D4 -  -  	.dl Tree_8, Tree_8_Fast_F
  224 D1:C265 A0 -  -  -  	.db %10100000
  225 D1:C266 C9 D4 D1 7E 
              0C D4 -  -  	.dl Tree_4, Tree_4_Fast_F
  226 D1:C26C A0 -  -  -  	.db %10100000
  227 D1:C26D EA D6 D1 80 
              0D D4 -  -  	.dl Tree_0, Tree_0_Fast
  228 D1:C273 80 -  -  -  	.db %10000000
  229 D1:C274 10 D6 D1 7C 
              0E D4 -  -  	.dl Tree_6, Tree_6_Fast
  230 D1:C27A 80 -  -  -  	.db %10000000
  231 D1:C27B C2 D7 D1 7E 
              0F D4 -  -  	.dl Tree_10, Tree_10_Fast
  232 D1:C281 80 -  -  -  	.db %10000000
  233 D1:C282 36 D5 D1 80 
              10 D4 -  -  	.dl Tree_7, Tree_7_Fast_F
  234 D1:C288 A0 -  -  -  	.db %10100000
  235 D1:C289 2F D8 D1 82 
              11 D4 -  -  	.dl Tree_1, Tree_1_Fast_F
  236 D1:C28F A0 -  -  -  	.db %10100000
  237 D1:C290 2F D8 D1 80 
              12 D4 -  -  	.dl Tree_1, Tree_1_Fast
  238 D1:C296 80 -  -  -  	.db %10000000
  239 D1:C297 9B D8 D1 7E 
              13 D4 -  -  	.dl Tree_5, Tree_5_Fast
  240 D1:C29D 80 -  -  -  	.db %10000000
  241 D1:C29E 08 D9 D1 80 
              14 D4 -  -  	.dl Tree_11, Tree_11_Fast
  242 D1:C2A4 80 -  -  -  	.db %10000000
  243 D1:C2A5 9B D8 D1 82 
              15 D4 -  -  	.dl Tree_5, Tree_5_Fast_F
  244 D1:C2AB A0 -  -  -  	.db %10100000
  245 D1:C2AC 5E D4 D1 84 
              16 D4 -  -  	.dl Tree_2, Tree_2_Fast_F
  246 D1:C2B2 A0 -  -  -  	.db %10100000
  247 D1:C2B3 08 D9 D1 80 
              17 D4 -  -  	.dl Tree_11, Tree_11_Fast_F
  248 D1:C2B9 A0 -  -  -  	.db %10100000
  249 D1:C2BA 75 D9 D1 82 
              18 D4 -  -  	.dl Branches_1, Branches_1_Fast
  250 D1:C2C0 80 -  -  -  	.db %10000000
  251 D1:C2C1 FE D3 D1 1B 
              19 D4 -  -  	.dl Branches_2, Branches_2_Slow_O
  252 D1:C2C7 40 -  -  -  	.db %01000000
  253 D1:C2C8 9E D3 D1 FB 
              19 D4 -  -  	.dl Branches_3, Branches_3_Slow_O
  254 D1:C2CE 40 -  -  -  	.db %01000000
  255 D1:C2CF 17 D3 D1 D5 
              1A D4 -  -  	.dl Branches_5, Branches_5_Slow_O
  256 D1:C2D5 40 -  -  -  	.db %01000000
  257 D1:C2D6 F0 CE D1 A5 
              1B D4 -  -  	.dl Leaves_3, Leaves_3_Slow_O
  258 D1:C2DC 40 -  -  -  	.db %01000000
  259 D1:C2DD D0 D9 D1 11 
              1C D4 -  -  	.dl Vines_7, Vines_7_Slow
  260 D1:C2E3 00 -  -  -  	.db %00000000
  261 D1:C2E4 36 D2 D1 D1 
              1C D4 -  -  	.dl Vines_5, Vines_5_Slow_O_F
  262 D1:C2EA 60 -  -  -  	.db %01100000
  263 D1:C2EB F6 D1 D1 BF 
              1D D4 -  -  	.dl Vines_3, Vines_3_Slow_O_F
  264 D1:C2F1 60 -  -  -  	.db %01100000
  265 D1:C2F2 B6 D2 D1 75 
              1E D4 -  -  	.dl Vines_4, Vines_4_Slow_O
  266 D1:C2F8 40 -  -  -  	.db %01000000
  267 D1:C2F9 FC D9 D1 27 
              1F D4 -  -  	.dl Vines_10, Vines_10_Slow
  268 D1:C2FF 00 -  -  -  	.db %00000000
  269 D1:C300 D0 D9 D1 E9 
              1F D4 -  -  	.dl Vines_7, Vines_7_Slow_F
  270 D1:C306 20 -  -  -  	.db %00100000
  271 D1:C307 AF D1 D1 A9 
              20 D4 -  -  	.dl Vines_2, Vines_2_Slow
  272 D1:C30D 00 -  -  -  	.db %00000000
  273 D1:C30E 64 D0 D1 85 
              21 D4 -  -  	.dl Leaves_2, Leaves_2_Slow
  274 D1:C314 00 -  -  -  	.db %00000000
  275 D1:C315 75 D9 D1 EE 
              21 D4 -  -  	.dl Branches_1, Branches_1_Fast_F
  276 D1:C31B A0 -  -  -  	.db %10100000
  277 D1:C31C FE D3 D1 86 
              22 D4 -  -  	.dl Branches_2, Branches_2_Fast_F
  278 D1:C322 A0 -  -  -  	.db %10100000
  279 D1:C323 17 D3 D1 30 
              23 D4 -  -  	.dl Branches_5, Branches_5_Fast_F
  280 D1:C329 A0 -  -  -  	.db %10100000
  281 D1:C32A E0 D0 D1 D1 
              23 D4 -  -  	.dl Branches_14, Branches_14_Slow
  282 D1:C330 00 -  -  -  	.db %00000000
  283 D1:C331 FC D9 D1 3D 
              24 D4 -  -  	.dl Vines_10, Vines_10_Slow_O
  284 D1:C337 40 -  -  -  	.db %01000000
  285 D1:C338 39 DA D1 FC 
              24 D4 -  -  	.dl Branches_0, Branches_0_Fast
  286 D1:C33E 80 -  -  -  	.db %10000000
  287 D1:C33F 91 DA D1 94 
              25 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast
  288 D1:C345 80 -  -  -  	.db %10000000
  289 D1:C346 91 DA D1 1A 
              26 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast_F
  290 D1:C34C A0 -  -  -  	.db %10100000
  291 D1:C34D C6 DA D1 A0 
              26 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast
  292 D1:C353 80 -  -  -  	.db %10000000
  293 D1:C354 C6 DA D1 26 
              27 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast_F
  294 D1:C35A A0 -  -  -  	.db %10100000
  295 D1:C35B 14 DB D1 AC 
              27 D4 -  -  	.dl GroundGrassSmall, GroundGrassSmall_Fast
  296 D1:C361 80 -  -  -  	.db %10000000
  297 D1:C362 14 DB D1 54 
              28 D4 -  -  	.dl GroundGrassSmall, GroundGrassSmall_Fast_F
  298 D1:C368 A0 -  -  -  	.db %10100000
  299 D1:C369 36 DB D1 FC 
              28 D4 -  -  	.dl Tree_16, Tree_16_Fast
  300 D1:C36F 80 -  -  -  	.db %10000000
  301 D1:C370 4E DB D1 51 
              29 D4 -  -  	.dl Tree_17, Tree_17_Slow_O
  302 D1:C376 40 -  -  -  	.db %01000000
  303 D1:C377 4E DB D1 B9 
              29 D4 -  -  	.dl Tree_17, Tree_17_Slow_O_F
  304 D1:C37D 60 -  -  -  	.db %01100000
  305 D1:C37E 5F DB D1 1E 
              2A D4 -  -  	.dl Leaves_8, Leaves_8_Fast
  306 D1:C384 80 -  -  -  	.db %10000000
  307 D1:C385 36 DB D1 A5 
              2A D4 -  -  	.dl Tree_16, Tree_16_Slow_O
  308 D1:C38B 40 -  -  -  	.db %01000000
  309 D1:C38C 4E DB D1 2B 
              2B D4 -  -  	.dl Tree_17, Tree_17_Slow_F
  310 D1:C392 20 -  -  -  	.db %00100000
  311 D1:C393 96 DB D1 93 
              2B D4 -  -  	.dl Tree_18, Tree_18_Slow_O
  312 D1:C399 40 -  -  -  	.db %01000000
  313 D1:C39A 4E DB D1 F7 
              2B D4 -  -  	.dl Tree_17, Tree_17_Slow
  314 D1:C3A0 00 -  -  -  	.db %00000000
  315 D1:C3A1 96 DB D1 5D 
              2C D4 -  -  	.dl Tree_18, Tree_18_Slow_F
  316 D1:C3A7 20 -  -  -  	.db %00100000
  317 D1:C3A8 36 DB D1 C1 
              2C D4 -  -  	.dl Tree_16, Tree_16_Slow_O_F
  318 D1:C3AE 60 -  -  -  	.db %01100000
  319 D1:C3AF 64 D0 D1 47 
              2D D4 -  -  	.dl Leaves_2, Leaves_2_Slow_F
  320 D1:C3B5 20 -  -  -  	.db %00100000
  321 D1:C3B6 A7 DB D1 AE 
              2D D4 -  -  	.dl Clouds_0, Clouds_0_Fast
  322 D1:C3BC 80 -  -  -  	.db %10000000
  323 D1:C3BD D0 DB D1 14 
              2E D4 -  -  	.dl Clouds_1, Clouds_1_Fast
  324 D1:C3C3 80 -  -  -  	.db %10000000
  325 D1:C3C4 F7 DB D1 78 
              2E D4 -  -  	.dl Clouds_3, Clouds_3_Fast
  326 D1:C3CA 80 -  -  -  	.db %10000000
  327 D1:C3CB 23 DC D1 E4 
              2E D4 -  -  	.dl Clouds_4, Clouds_4_Fast
  328 D1:C3D1 80 -  -  -  	.db %10000000
  329 D1:C3D2 3A DC D1 24 
              2F D4 -  -  	.dl Clouds_2, Clouds_2_Fast
  330 D1:C3D8 80 -  -  -  	.db %10000000
  331 D1:C3D9 -  -  -  -  
  332 D1:C3D9 -  -  -  -  decompress_frame_up_0:
  333 D1:C3D9 40 -  -  -  	.db 64
  334 D1:C3DA E7 CC D1 D6 
              2F D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast
  335 D1:C3E0 80 -  -  -  	.db %10000000
  336 D1:C3E1 E7 CC D1 88 
              30 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast_F
  337 D1:C3E7 A0 -  -  -  	.db %10100000
  338 D1:C3E8 2C CD D1 3A 
              31 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast
  339 D1:C3EE 80 -  -  -  	.db %10000000
  340 D1:C3EF 2C CD D1 BA 
              31 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast_F
  341 D1:C3F5 A0 -  -  -  	.db %10100000
  342 D1:C3F6 76 CD D1 3A 
              32 D4 -  -  	.dl GroundGrassL4, GroundGrassL4_Fast
  343 D1:C3FC 80 -  -  -  	.db %10000000
  344 D1:C3FD 96 CD D1 C4 
              32 D4 -  -  	.dl GroundGrassL2, GroundGrassL2_Fast
  345 D1:C403 80 -  -  -  	.db %10000000
  346 D1:C404 AE CD D1 1C 
              33 D4 -  -  	.dl GroundGrassL5, GroundGrassL5_Fast
  347 D1:C40A 80 -  -  -  	.db %10000000
  348 D1:C40B D2 CD D1 9E 
              33 D4 -  -  	.dl GroundGrassL3, GroundGrassL3_Fast
  349 D1:C411 80 -  -  -  	.db %10000000
  350 D1:C412 EF CD D1 F8 
              33 D4 -  -  	.dl GroundGrassL1, GroundGrassL1_Fast
  351 D1:C418 80 -  -  -  	.db %10000000
  352 D1:C419 EF CD D1 6A 
              34 D4 -  -  	.dl GroundGrassL1, GroundGrassL1_Fast_F
  353 D1:C41F A0 -  -  -  	.db %10100000
  354 D1:C420 D2 CD D1 DC 
              34 D4 -  -  	.dl GroundGrassL3, GroundGrassL3_Fast_F
  355 D1:C426 A0 -  -  -  	.db %10100000
  356 D1:C427 0B CE D1 35 
              35 D4 -  -  	.dl Branches_10, Branches_10_Slow_O
  357 D1:C42D 40 -  -  -  	.db %01000000
  358 D1:C42E 55 CE D1 DA 
              35 D4 -  -  	.dl Branches_9, Branches_9_Fast
  359 D1:C434 80 -  -  -  	.db %10000000
  360 D1:C435 A5 CE D1 5D 
              36 D4 -  -  	.dl Branches_16, Branches_16_Slow
  361 D1:C43B 00 -  -  -  	.db %00000000
  362 D1:C43C D2 CE D1 C9 
              36 D4 -  -  	.dl Branches_13, Branches_13_Slow_O
  363 D1:C442 40 -  -  -  	.db %01000000
  364 D1:C443 F0 CE D1 0F 
              37 D4 -  -  	.dl Leaves_3, Leaves_3_Slow
  365 D1:C449 00 -  -  -  	.db %00000000
  366 D1:C44A 0F CF D1 7C 
              37 D4 -  -  	.dl Leaves_7, Leaves_7_Fast
  367 D1:C450 80 -  -  -  	.db %10000000
  368 D1:C451 0F CF D1 04 
              38 D4 -  -  	.dl Leaves_7, Leaves_7_Fast_F
  369 D1:C457 A0 -  -  -  	.db %10100000
  370 D1:C458 46 CF D1 8B 
              38 D4 -  -  	.dl Branches_6, Branches_6_Slow
  371 D1:C45E 00 -  -  -  	.db %00000000
  372 D1:C45F 0B CE D1 29 
              39 D4 -  -  	.dl Branches_10, Branches_10_Slow_O_F
  373 D1:C465 60 -  -  -  	.db %01100000
  374 D1:C466 90 CF D1 CD 
              39 D4 -  -  	.dl Branches_7, Branches_7_Slow_O
  375 D1:C46C 40 -  -  -  	.db %01000000
  376 D1:C46D A5 CE D1 71 
              3A D4 -  -  	.dl Branches_16, Branches_16_Slow_O
  377 D1:C473 40 -  -  -  	.db %01000000
  378 D1:C474 D5 CF D1 DD 
              3A D4 -  -  	.dl Branches_15, Branches_15_Slow_O
  379 D1:C47A 40 -  -  -  	.db %01000000
  380 D1:C47B F9 CF D1 49 
              3B D4 -  -  	.dl Branches_8, Branches_8_Slow_O_F
  381 D1:C481 60 -  -  -  	.db %01100000
  382 D1:C482 2A D0 D1 D1 
              3B D4 -  -  	.dl Branches_12, Branches_12_Slow_O
  383 D1:C488 40 -  -  -  	.db %01000000
  384 D1:C489 D5 CF D1 4B 
              3C D4 -  -  	.dl Branches_15, Branches_15_Slow_O_F
  385 D1:C48F 60 -  -  -  	.db %01100000
  386 D1:C490 64 D0 D1 BB 
              3C D4 -  -  	.dl Leaves_2, Leaves_2_Slow_O
  387 D1:C496 40 -  -  -  	.db %01000000
  388 D1:C497 7D D0 D1 25 
              3D D4 -  -  	.dl Leaves_4, Leaves_4_Slow
  389 D1:C49D 00 -  -  -  	.db %00000000
  390 D1:C49E 7D D0 D1 AF 
              3D D4 -  -  	.dl Leaves_4, Leaves_4_Slow_F
  391 D1:C4A4 20 -  -  -  	.db %00100000
  392 D1:C4A5 90 CF D1 3A 
              3E D4 -  -  	.dl Branches_7, Branches_7_Fast
  393 D1:C4AB 80 -  -  -  	.db %10000000
  394 D1:C4AC F9 CF D1 B4 
              3E D4 -  -  	.dl Branches_8, Branches_8_Fast
  395 D1:C4B2 80 -  -  -  	.db %10000000
  396 D1:C4B3 0B CE D1 12 
              3F D4 -  -  	.dl Branches_10, Branches_10_Fast_F
  397 D1:C4B9 A0 -  -  -  	.db %10100000
  398 D1:C4BA A2 D0 D1 8A 
              3F D4 -  -  	.dl Branches_11, Branches_11_Fast_F
  399 D1:C4C0 A0 -  -  -  	.db %10100000
  400 D1:C4C1 A5 CE D1 F1 
              3F D4 -  -  	.dl Branches_16, Branches_16_Slow_O_F
  401 D1:C4C7 60 -  -  -  	.db %01100000
  402 D1:C4C8 D2 CE D1 5E 
              40 D4 -  -  	.dl Branches_13, Branches_13_Fast_F
  403 D1:C4CE A0 -  -  -  	.db %10100000
  404 D1:C4CF E0 D0 D1 8F 
              40 D4 -  -  	.dl Branches_14, Branches_14_Slow_O
  405 D1:C4D5 40 -  -  -  	.db %01000000
  406 D1:C4D6 D5 CF D1 FF 
              40 D4 -  -  	.dl Branches_15, Branches_15_Slow_F
  407 D1:C4DC 20 -  -  -  	.db %00100000
  408 D1:C4DD FF D0 D1 6B 
              41 D4 -  -  	.dl Leaves_6, Leaves_6_Slow
  409 D1:C4E3 00 -  -  -  	.db %00000000
  410 D1:C4E4 23 D1 D1 EE 
              41 D4 -  -  	.dl Branches_4, Branches_4_Fast_F
  411 D1:C4EA A0 -  -  -  	.db %10100000
  412 D1:C4EB 90 CF D1 8C 
              42 D4 -  -  	.dl Branches_7, Branches_7_Fast_F
  413 D1:C4F1 A0 -  -  -  	.db %10100000
  414 D1:C4F2 2A D0 D1 06 
              43 D4 -  -  	.dl Branches_12, Branches_12_Fast_F
  415 D1:C4F8 A0 -  -  -  	.db %10100000
  416 D1:C4F9 7D D0 D1 61 
              43 D4 -  -  	.dl Leaves_4, Leaves_4_Slow_O
  417 D1:C4FF 40 -  -  -  	.db %01000000
  418 D1:C500 F9 CF D1 EF 
              43 D4 -  -  	.dl Branches_8, Branches_8_Slow_O
  419 D1:C506 40 -  -  -  	.db %01000000
  420 D1:C507 0B CE D1 78 
              44 D4 -  -  	.dl Branches_10, Branches_10_Fast
  421 D1:C50D 80 -  -  -  	.db %10000000
  422 D1:C50E FF D0 D1 EF 
              44 D4 -  -  	.dl Leaves_6, Leaves_6_Slow_O
  423 D1:C514 40 -  -  -  	.db %01000000
  424 D1:C515 F0 CE D1 73 
              45 D4 -  -  	.dl Leaves_3, Leaves_3_Slow_F
  425 D1:C51B 20 -  -  -  	.db %00100000
  426 D1:C51C 81 D1 D1 DF 
              45 D4 -  -  	.dl Vines_8, Vines_8_Slow
  427 D1:C522 00 -  -  -  	.db %00000000
  428 D1:C523 AF D1 D1 A9 
              46 D4 -  -  	.dl Vines_2, Vines_2_Slow_O
  429 D1:C529 40 -  -  -  	.db %01000000
  430 D1:C52A F6 D1 D1 81 
              47 D4 -  -  	.dl Vines_3, Vines_3_Slow
  431 D1:C530 00 -  -  -  	.db %00000000
  432 D1:C531 36 D2 D1 31 
              48 D4 -  -  	.dl Vines_5, Vines_5_Slow
  433 D1:C537 00 -  -  -  	.db %00000000
  434 D1:C538 83 D2 D1 23 
              49 D4 -  -  	.dl Vines_9, Vines_9_Slow
  435 D1:C53E 00 -  -  -  	.db %00000000
  436 D1:C53F B6 D2 D1 D5 
              49 D4 -  -  	.dl Vines_4, Vines_4_Slow_F
  437 D1:C545 20 -  -  -  	.db %00100000
  438 D1:C546 ED D2 D1 8D 
              4A D4 -  -  	.dl Vines_1, Vines_1_Slow_O
  439 D1:C54C 40 -  -  -  	.db %01000000
  440 D1:C54D 83 D2 D1 19 
              4B D4 -  -  	.dl Vines_9, Vines_9_Slow_O_F
  441 D1:C553 60 -  -  -  	.db %01100000
  442 D1:C554 F6 D1 D1 CB 
              4B D4 -  -  	.dl Vines_3, Vines_3_Slow_F
  443 D1:C55A 20 -  -  -  	.db %00100000
  444 D1:C55B 81 D1 D1 7B 
              4C D4 -  -  	.dl Vines_8, Vines_8_Slow_F
  445 D1:C561 20 -  -  -  	.db %00100000
  446 D1:C562 55 CE D1 45 
              4D D4 -  -  	.dl Branches_9, Branches_9_Slow_O
  447 D1:C568 40 -  -  -  	.db %01000000
  448 D1:C569 AF D1 D1 F5 
              4D D4 -  -  	.dl Vines_2, Vines_2_Slow_O_F
  449 D1:C56F 60 -  -  -  	.db %01100000
  450 D1:C570 5E D4 D1 CE 
              4E D4 -  -  	.dl Tree_2, Tree_2_Fast
  451 D1:C576 80 -  -  -  	.db %10000000
  452 D1:C577 C9 D4 D1 CA 
              4F D4 -  -  	.dl Tree_4, Tree_4_Fast
  453 D1:C57D 80 -  -  -  	.db %10000000
  454 D1:C57E 36 D5 D1 CC 
              50 D4 -  -  	.dl Tree_7, Tree_7_Fast
  455 D1:C584 80 -  -  -  	.db %10000000
  456 D1:C585 A3 D5 D1 CE 
              51 D4 -  -  	.dl Tree_9, Tree_9_Fast
  457 D1:C58B 80 -  -  -  	.db %10000000
  458 D1:C58C 10 D6 D1 D0 
              52 D4 -  -  	.dl Tree_6, Tree_6_Fast_F
  459 D1:C592 A0 -  -  -  	.db %10100000
  460 D1:C593 7D D6 D1 D2 
              53 D4 -  -  	.dl Tree_3, Tree_3_Fast_F
  461 D1:C599 A0 -  -  -  	.db %10100000
  462 D1:C59A -  -  -  -  
  463 D1:C59A -  -  -  -  decompress_frame_up_1:
  464 D1:C59A 00 -  -  -  	.db 0
  465 D1:C59B -  -  -  -  
  466 D1:C59B -  -  -  -  decompress_frame_up_2:
  467 D1:C59B 04 -  -  -  	.db 4
  468 D1:C59C 75 D9 D1 D3 
              54 D4 -  -  	.dl Branches_1, Branches_1_Slow_O
  469 D1:C5A2 40 -  -  -  	.db %01000000
  470 D1:C5A3 23 D1 D1 99 
              55 D4 -  -  	.dl Branches_4, Branches_4_Slow_O
  471 D1:C5A9 40 -  -  -  	.db %01000000
  472 D1:C5AA F0 CE D1 65 
              56 D4 -  -  	.dl Leaves_3, Leaves_3_Slow_O_F
  473 D1:C5B0 60 -  -  -  	.db %01100000
  474 D1:C5B1 D0 D9 D1 D3 
              56 D4 -  -  	.dl Vines_7, Vines_7_Slow_O
  475 D1:C5B7 40 -  -  -  	.db %01000000
  476 D1:C5B8 -  -  -  -  
  477 D1:C5B8 -  -  -  -  decompress_frame_up_3:
  478 D1:C5B8 00 -  -  -  	.db 0
  479 D1:C5B9 -  -  -  -  
  480 D1:C5B9 -  -  -  -  decompress_frame_up_4:
  481 D1:C5B9 05 -  -  -  	.db 5
  482 D1:C5BA 81 D1 D1 97 
              57 D4 -  -  	.dl Vines_8, Vines_8_Slow_O
  483 D1:C5C0 40 -  -  -  	.db %01000000
  484 D1:C5C1 81 D1 D1 5D 
              58 D4 -  -  	.dl Vines_8, Vines_8_Slow_O_F
  485 D1:C5C7 60 -  -  -  	.db %01100000
  486 D1:C5C8 75 D3 D1 23 
              59 D4 -  -  	.dl Vines_6, Vines_6_Slow
  487 D1:C5CE 00 -  -  -  	.db %00000000
  488 D1:C5CF 39 DA D1 DA 
              59 D4 -  -  	.dl Branches_0, Branches_0_Fast_F
  489 D1:C5D5 A0 -  -  -  	.db %10100000
  490 D1:C5D6 55 CE D1 72 
              5A D4 -  -  	.dl Branches_9, Branches_9_Fast_F
  491 D1:C5DC A0 -  -  -  	.db %10100000
  492 D1:C5DD -  -  -  -  
  493 D1:C5DD -  -  -  -  decompress_frame_up_5:
  494 D1:C5DD 02 -  -  -  	.db 2
  495 D1:C5DE 17 D3 D1 3A 
              32 D4 -  -  	.dl Branches_5, Branches_5_Fast
  496 D1:C5E4 80 -  -  -  	.db %10000000
  497 D1:C5E5 23 D1 D1 DA 
              32 D4 -  -  	.dl Branches_4, Branches_4_Fast
  498 D1:C5EB 80 -  -  -  	.db %10000000
  499 D1:C5EC -  -  -  -  
  500 D1:C5EC -  -  -  -  decompress_frame_up_6:
  501 D1:C5EC 02 -  -  -  	.db 2
  502 D1:C5ED FE D3 D1 78 
              33 D4 -  -  	.dl Branches_2, Branches_2_Fast
  503 D1:C5F3 80 -  -  -  	.db %10000000
  504 D1:C5F4 F6 D1 D1 21 
              34 D4 -  -  	.dl Vines_3, Vines_3_Slow_O
  505 D1:C5FA 40 -  -  -  	.db %01000000
  506 D1:C5FB -  -  -  -  
  507 D1:C5FB -  -  -  -  decompress_frame_up_7:
  508 D1:C5FB 00 -  -  -  	.db 0
  509 D1:C5FC -  -  -  -  
  510 D1:C5FC -  -  -  -  decompress_frame_up_8:
  511 D1:C5FC 00 -  -  -  	.db 0
  512 D1:C5FD -  -  -  -  
  513 D1:C5FD -  -  -  -  decompress_frame_up_9:
  514 D1:C5FD 00 -  -  -  	.db 0
  515 D1:C5FE -  -  -  -  
  516 D1:C5FE -  -  -  -  decompress_frame_up_10:
  517 D1:C5FE 00 -  -  -  	.db 0
  518 D1:C5FF -  -  -  -  
  519 D1:C5FF -  -  -  -  decompress_frame_up_11:
  520 D1:C5FF 00 -  -  -  	.db 0
  521 D1:C600 -  -  -  -  
  522 D1:C600 -  -  -  -  decompress_frame_up_12:
  523 D1:C600 00 -  -  -  	.db 0
  524 D1:C601 -  -  -  -  
  525 D1:C601 -  -  -  -  decompress_frame_up_13:
  526 D1:C601 00 -  -  -  	.db 0
  527 D1:C602 -  -  -  -  
  528 D1:C602 -  -  -  -  decompress_frame_up_14:
  529 D1:C602 00 -  -  -  	.db 0
  530 D1:C603 -  -  -  -  
  531 D1:C603 -  -  -  -  decompress_frame_up_15:
  532 D1:C603 00 -  -  -  	.db 0
  533 D1:C604 -  -  -  -  
  534 D1:C604 -  -  -  -  decompress_frame_up_16:
  535 D1:C604 00 -  -  -  	.db 0
  536 D1:C605 -  -  -  -  
  537 D1:C605 -  -  -  -  decompress_frame_up_17:
  538 D1:C605 00 -  -  -  	.db 0
  539 D1:C606 -  -  -  -  
  540 D1:C606 -  -  -  -  decompress_frame_up_18:
  541 D1:C606 00 -  -  -  	.db 0
  542 D1:C607 -  -  -  -  
  543 D1:C607 -  -  -  -  decompress_frame_up_19:
  544 D1:C607 00 -  -  -  	.db 0
  545 D1:C608 -  -  -  -  
  546 D1:C608 -  -  -  -  decompress_frame_up_20:
  547 D1:C608 00 -  -  -  	.db 0
  548 D1:C609 -  -  -  -  
  549 D1:C609 -  -  -  -  decompress_frame_up_21:
  550 D1:C609 00 -  -  -  	.db 0
  551 D1:C60A -  -  -  -  
  552 D1:C60A -  -  -  -  decompress_frame_up_22:
  553 D1:C60A 00 -  -  -  	.db 0
  554 D1:C60B -  -  -  -  
  555 D1:C60B -  -  -  -  decompress_frame_up_23:
  556 D1:C60B 00 -  -  -  	.db 0
  557 D1:C60C -  -  -  -  
  558 D1:C60C -  -  -  -  decompress_frame_up_24:
  559 D1:C60C 00 -  -  -  	.db 0
  560 D1:C60D -  -  -  -  
  561 D1:C60D -  -  -  -  decompress_frame_up_25:
  562 D1:C60D 00 -  -  -  	.db 0
  563 D1:C60E -  -  -  -  
  564 D1:C60E -  -  -  -  decompress_frame_up_26:
  565 D1:C60E 00 -  -  -  	.db 0
  566 D1:C60F -  -  -  -  
  567 D1:C60F -  -  -  -  decompress_frame_up_27:
  568 D1:C60F 00 -  -  -  	.db 0
  569 D1:C610 -  -  -  -  
  570 D1:C610 -  -  -  -  decompress_frame_up_28:
  571 D1:C610 00 -  -  -  	.db 0
  572 D1:C611 -  -  -  -  
  573 D1:C611 -  -  -  -  decompress_frame_up_29:
  574 D1:C611 00 -  -  -  	.db 0
  575 D1:C612 -  -  -  -  
  576 D1:C612 -  -  -  -  decompress_frame_up_30:
  577 D1:C612 00 -  -  -  	.db 0
  578 D1:C613 -  -  -  -  
  579 D1:C613 -  -  -  -  decompress_frame_up_31:
  580 D1:C613 00 -  -  -  	.db 0
  581 D1:C614 -  -  -  -  
  582 D1:C614 -  -  -  -  decompress_frame_up_32:
  583 D1:C614 00 -  -  -  	.db 0
  584 D1:C615 -  -  -  -  
  585 D1:C615 -  -  -  -  decompress_frame_up_33:
  586 D1:C615 00 -  -  -  	.db 0
  587 D1:C616 -  -  -  -  
  588 D1:C616 -  -  -  -  decompress_frame_up_34:
  589 D1:C616 00 -  -  -  	.db 0
  590 D1:C617 -  -  -  -  
  591 D1:C617 -  -  -  -  decompress_frame_up_35:
  592 D1:C617 00 -  -  -  	.db 0
  593 D1:C618 -  -  -  -  
  594 D1:C618 -  -  -  -  decompress_frame_up_36:
  595 D1:C618 00 -  -  -  	.db 0
  596 D1:C619 -  -  -  -  
  597 D1:C619 -  -  -  -  decompress_frame_up_37:
  598 D1:C619 00 -  -  -  	.db 0
  599 D1:C61A -  -  -  -  
  600 D1:C61A -  -  -  -  decompress_frame_up_38:
  601 D1:C61A 00 -  -  -  	.db 0
  602 D1:C61B -  -  -  -  
  603 D1:C61B -  -  -  -  decompress_frame_up_39:
  604 D1:C61B 00 -  -  -  	.db 0
  605 D1:C61C -  -  -  -  
  606 D1:C61C -  -  -  -  decompress_frame_up_40:
  607 D1:C61C 00 -  -  -  	.db 0
  608 D1:C61D -  -  -  -  
  609 D1:C61D -  -  -  -  decompress_frame_up_41:
  610 D1:C61D 00 -  -  -  	.db 0
  611 D1:C61E -  -  -  -  
  612 D1:C61E -  -  -  -  decompress_frame_up_42:
  613 D1:C61E 00 -  -  -  	.db 0
  614 D1:C61F -  -  -  -  
  615 D1:C61F -  -  -  -  decompress_frame_up_43:
  616 D1:C61F 00 -  -  -  	.db 0
  617 D1:C620 -  -  -  -  
  618 D1:C620 -  -  -  -  decompress_frame_up_44:
  619 D1:C620 00 -  -  -  	.db 0
  620 D1:C621 -  -  -  -  
  621 D1:C621 -  -  -  -  decompress_frame_up_45:
  622 D1:C621 00 -  -  -  	.db 0
  623 D1:C622 -  -  -  -  
  624 D1:C622 -  -  -  -  decompress_frame_up_46:
  625 D1:C622 00 -  -  -  	.db 0
  626 D1:C623 -  -  -  -  
  627 D1:C623 -  -  -  -  decompress_frame_up_47:
  628 D1:C623 00 -  -  -  	.db 0
  629 D1:C624 -  -  -  -  
  630 D1:C624 -  -  -  -  decompress_frame_up_48:
  631 D1:C624 00 -  -  -  	.db 0
  632 D1:C625 -  -  -  -  
  633 D1:C625 -  -  -  -  decompress_frame_up_49:
  634 D1:C625 00 -  -  -  	.db 0
  635 D1:C626 -  -  -  -  
  636 D1:C626 -  -  -  -  decompress_frame_up_50:
  637 D1:C626 00 -  -  -  	.db 0
  638 D1:C627 -  -  -  -  
  639 D1:C627 -  -  -  -  decompress_frame_up_51:
  640 D1:C627 00 -  -  -  	.db 0
  641 D1:C628 -  -  -  -  
  642 D1:C628 -  -  -  -  decompress_frame_up_52:
  643 D1:C628 00 -  -  -  	.db 0
  644 D1:C629 -  -  -  -  
  645 D1:C629 -  -  -  -  decompress_frame_up_53:
  646 D1:C629 00 -  -  -  	.db 0
  647 D1:C62A -  -  -  -  
  648 D1:C62A -  -  -  -  decompress_frame_up_54:
  649 D1:C62A 00 -  -  -  	.db 0
  650 D1:C62B -  -  -  -  
  651 D1:C62B -  -  -  -  decompress_frame_up_55:
  652 D1:C62B 00 -  -  -  	.db 0
  653 D1:C62C -  -  -  -  
  654 D1:C62C -  -  -  -  decompress_frame_up_56:
  655 D1:C62C 00 -  -  -  	.db 0
  656 D1:C62D -  -  -  -  
  657 D1:C62D -  -  -  -  decompress_frame_up_57:
  658 D1:C62D 00 -  -  -  	.db 0
  659 D1:C62E -  -  -  -  
  660 D1:C62E -  -  -  -  decompress_frame_up_58:
  661 D1:C62E 00 -  -  -  	.db 0
  662 D1:C62F -  -  -  -  
  663 D1:C62F -  -  -  -  decompress_frame_up_59:
  664 D1:C62F 00 -  -  -  	.db 0
  665 D1:C630 -  -  -  -  
  666 D1:C630 -  -  -  -  decompress_frame_up_60:
  667 D1:C630 00 -  -  -  	.db 0
  668 D1:C631 -  -  -  -  
  669 D1:C631 -  -  -  -  decompress_frame_up_61:
  670 D1:C631 00 -  -  -  	.db 0
  671 D1:C632 -  -  -  -  
  672 D1:C632 -  -  -  -  decompress_frame_up_62:
  673 D1:C632 00 -  -  -  	.db 0
  674 D1:C633 -  -  -  -  
  675 D1:C633 -  -  -  -  decompress_frame_up_63:
  676 D1:C633 00 -  -  -  	.db 0
  677 D1:C634 -  -  -  -  
  678 D1:C634 -  -  -  -  decompress_frame_up_64:
  679 D1:C634 00 -  -  -  	.db 0
  680 D1:C635 -  -  -  -  
  681 D1:C635 -  -  -  -  decompress_frame_up_65:
  682 D1:C635 00 -  -  -  	.db 0
  683 D1:C636 -  -  -  -  
  684 D1:C636 -  -  -  -  decompress_frame_up_66:
  685 D1:C636 00 -  -  -  	.db 0
  686 D1:C637 -  -  -  -  
  687 D1:C637 -  -  -  -  decompress_frame_up_67:
  688 D1:C637 00 -  -  -  	.db 0
  689 D1:C638 -  -  -  -  
  690 D1:C638 -  -  -  -  decompress_frame_up_68:
  691 D1:C638 00 -  -  -  	.db 0
  692 D1:C639 -  -  -  -  
  693 D1:C639 -  -  -  -  decompress_frame_up_69:
  694 D1:C639 00 -  -  -  	.db 0
  695 D1:C63A -  -  -  -  
  696 D1:C63A -  -  -  -  decompress_frame_up_70:
  697 D1:C63A 00 -  -  -  	.db 0
  698 D1:C63B -  -  -  -  
  699 D1:C63B -  -  -  -  decompress_frame_up_71:
  700 D1:C63B 00 -  -  -  	.db 0
  701 D1:C63C -  -  -  -  
  702 D1:C63C -  -  -  -  decompress_frame_up_72:
  703 D1:C63C 00 -  -  -  	.db 0
  704 D1:C63D -  -  -  -  
  705 D1:C63D -  -  -  -  decompress_frame_up_73:
  706 D1:C63D 00 -  -  -  	.db 0
  707 D1:C63E -  -  -  -  
  708 D1:C63E -  -  -  -  decompress_frame_up_74:
  709 D1:C63E 00 -  -  -  	.db 0
  710 D1:C63F -  -  -  -  
  711 D1:C63F -  -  -  -  decompress_frame_up_75:
  712 D1:C63F 00 -  -  -  	.db 0
  713 D1:C640 -  -  -  -  
  714 D1:C640 -  -  -  -  decompress_frame_up_76:
  715 D1:C640 00 -  -  -  	.db 0
  716 D1:C641 -  -  -  -  
  717 D1:C641 -  -  -  -  decompress_frame_up_77:
  718 D1:C641 00 -  -  -  	.db 0
  719 D1:C642 -  -  -  -  
  720 D1:C642 -  -  -  -  decompress_frame_up_78:
  721 D1:C642 00 -  -  -  	.db 0
  722 D1:C643 -  -  -  -  
  723 D1:C643 -  -  -  -  decompress_frame_up_79:
  724 D1:C643 00 -  -  -  	.db 0
  725 D1:C644 -  -  -  -  
  726 D1:C644 -  -  -  -  decompress_frame_up_80:
  727 D1:C644 00 -  -  -  	.db 0
  728 D1:C645 -  -  -  -  
  729 D1:C645 -  -  -  -  decompress_frame_up_81:
  730 D1:C645 00 -  -  -  	.db 0
  731 D1:C646 -  -  -  -  
  732 D1:C646 -  -  -  -  decompress_frame_up_82:
  733 D1:C646 00 -  -  -  	.db 0
  734 D1:C647 -  -  -  -  
  735 D1:C647 -  -  -  -  decompress_frame_up_83:
  736 D1:C647 00 -  -  -  	.db 0
  737 D1:C648 -  -  -  -  
  738 D1:C648 -  -  -  -  decompress_frame_up_84:
  739 D1:C648 00 -  -  -  	.db 0
  740 D1:C649 -  -  -  -  
  741 D1:C649 -  -  -  -  decompress_frame_up_85:
  742 D1:C649 00 -  -  -  	.db 0
  743 D1:C64A -  -  -  -  
  744 D1:C64A -  -  -  -  decompress_frame_up_86:
  745 D1:C64A 00 -  -  -  	.db 0
  746 D1:C64B -  -  -  -  
  747 D1:C64B -  -  -  -  decompress_frame_up_87:
  748 D1:C64B 00 -  -  -  	.db 0
  749 D1:C64C -  -  -  -  
  750 D1:C64C -  -  -  -  decompress_frame_up_88:
  751 D1:C64C 00 -  -  -  	.db 0
  752 D1:C64D -  -  -  -  
  753 D1:C64D -  -  -  -  decompress_frame_up_89:
  754 D1:C64D 00 -  -  -  	.db 0
  755 D1:C64E -  -  -  -  
  756 D1:C64E -  -  -  -  
  757 D1:C64E -  -  -  -  
  758 D1:C64E -  -  -  -  decompress_frame_down_0:
  759 D1:C64E 00 -  -  -  	.db 0
  760 D1:C64F -  -  -  -  
  761 D1:C64F -  -  -  -  decompress_frame_down_1:
  762 D1:C64F 00 -  -  -  	.db 0
  763 D1:C650 -  -  -  -  
  764 D1:C650 -  -  -  -  decompress_frame_down_2:
  765 D1:C650 00 -  -  -  	.db 0
  766 D1:C651 -  -  -  -  
  767 D1:C651 -  -  -  -  decompress_frame_down_3:
  768 D1:C651 00 -  -  -  	.db 0
  769 D1:C652 -  -  -  -  
  770 D1:C652 -  -  -  -  decompress_frame_down_4:
  771 D1:C652 09 -  -  -  	.db 9
  772 D1:C653 76 CD D1 3A 
              32 D4 -  -  	.dl GroundGrassL4, GroundGrassL4_Fast
  773 D1:C659 80 -  -  -  	.db %10000000
  774 D1:C65A 96 CD D1 C4 
              32 D4 -  -  	.dl GroundGrassL2, GroundGrassL2_Fast
  775 D1:C660 80 -  -  -  	.db %10000000
  776 D1:C661 AE CD D1 1C 
              33 D4 -  -  	.dl GroundGrassL5, GroundGrassL5_Fast
  777 D1:C667 80 -  -  -  	.db %10000000
  778 D1:C668 D2 CD D1 9E 
              33 D4 -  -  	.dl GroundGrassL3, GroundGrassL3_Fast
  779 D1:C66E 80 -  -  -  	.db %10000000
  780 D1:C66F EF CD D1 F8 
              33 D4 -  -  	.dl GroundGrassL1, GroundGrassL1_Fast
  781 D1:C675 80 -  -  -  	.db %10000000
  782 D1:C676 EF CD D1 6A 
              34 D4 -  -  	.dl GroundGrassL1, GroundGrassL1_Fast_F
  783 D1:C67C A0 -  -  -  	.db %10100000
  784 D1:C67D D2 CD D1 DC 
              34 D4 -  -  	.dl GroundGrassL3, GroundGrassL3_Fast_F
  785 D1:C683 A0 -  -  -  	.db %10100000
  786 D1:C684 83 D2 D1 19 
              4B D4 -  -  	.dl Vines_9, Vines_9_Slow_O_F
  787 D1:C68A 60 -  -  -  	.db %01100000
  788 D1:C68B AF D1 D1 F5 
              4D D4 -  -  	.dl Vines_2, Vines_2_Slow_O_F
  789 D1:C691 60 -  -  -  	.db %01100000
  790 D1:C692 -  -  -  -  
  791 D1:C692 -  -  -  -  decompress_frame_down_5:
  792 D1:C692 00 -  -  -  	.db 0
  793 D1:C693 -  -  -  -  
  794 D1:C693 -  -  -  -  decompress_frame_down_6:
  795 D1:C693 01 -  -  -  	.db 1
  796 D1:C694 FC D9 D1 3D 
              24 D4 -  -  	.dl Vines_10, Vines_10_Slow_O
  797 D1:C69A 40 -  -  -  	.db %01000000
  798 D1:C69B -  -  -  -  
  799 D1:C69B -  -  -  -  decompress_frame_down_7:
  800 D1:C69B 00 -  -  -  	.db 0
  801 D1:C69C -  -  -  -  
  802 D1:C69C -  -  -  -  decompress_frame_down_8:
  803 D1:C69C 06 -  -  -  	.db 6
  804 D1:C69D 36 D2 D1 31 
              48 D4 -  -  	.dl Vines_5, Vines_5_Slow
  805 D1:C6A3 00 -  -  -  	.db %00000000
  806 D1:C6A4 75 D9 D1 EE 
              21 D4 -  -  	.dl Branches_1, Branches_1_Fast_F
  807 D1:C6AA A0 -  -  -  	.db %10100000
  808 D1:C6AB FE D3 D1 86 
              22 D4 -  -  	.dl Branches_2, Branches_2_Fast_F
  809 D1:C6B1 A0 -  -  -  	.db %10100000
  810 D1:C6B2 17 D3 D1 30 
              23 D4 -  -  	.dl Branches_5, Branches_5_Fast_F
  811 D1:C6B8 A0 -  -  -  	.db %10100000
  812 D1:C6B9 E0 D0 D1 D1 
              23 D4 -  -  	.dl Branches_14, Branches_14_Slow
  813 D1:C6BF 00 -  -  -  	.db %00000000
  814 D1:C6C0 39 DA D1 FC 
              24 D4 -  -  	.dl Branches_0, Branches_0_Fast
  815 D1:C6C6 80 -  -  -  	.db %10000000
  816 D1:C6C7 -  -  -  -  
  817 D1:C6C7 -  -  -  -  decompress_frame_down_9:
  818 D1:C6C7 00 -  -  -  	.db 0
  819 D1:C6C8 -  -  -  -  
  820 D1:C6C8 -  -  -  -  decompress_frame_down_10:
  821 D1:C6C8 11 -  -  -  	.db 17
  822 D1:C6C9 90 CF D1 8C 
              42 D4 -  -  	.dl Branches_7, Branches_7_Fast_F
  823 D1:C6CF A0 -  -  -  	.db %10100000
  824 D1:C6D0 2A D0 D1 06 
              43 D4 -  -  	.dl Branches_12, Branches_12_Fast_F
  825 D1:C6D6 A0 -  -  -  	.db %10100000
  826 D1:C6D7 81 D1 D1 DF 
              45 D4 -  -  	.dl Vines_8, Vines_8_Slow
  827 D1:C6DD 00 -  -  -  	.db %00000000
  828 D1:C6DE 17 D3 D1 3A 
              32 D4 -  -  	.dl Branches_5, Branches_5_Fast
  829 D1:C6E4 80 -  -  -  	.db %10000000
  830 D1:C6E5 23 D1 D1 DA 
              32 D4 -  -  	.dl Branches_4, Branches_4_Fast
  831 D1:C6EB 80 -  -  -  	.db %10000000
  832 D1:C6EC F9 CF D1 E8 
              03 D4 -  -  	.dl Branches_8, Branches_8_Fast_F
  833 D1:C6F2 A0 -  -  -  	.db %10100000
  834 D1:C6F3 D0 D9 D1 11 
              1C D4 -  -  	.dl Vines_7, Vines_7_Slow
  835 D1:C6F9 00 -  -  -  	.db %00000000
  836 D1:C6FA 36 D2 D1 D1 
              1C D4 -  -  	.dl Vines_5, Vines_5_Slow_O_F
  837 D1:C700 60 -  -  -  	.db %01100000
  838 D1:C701 F6 D1 D1 BF 
              1D D4 -  -  	.dl Vines_3, Vines_3_Slow_O_F
  839 D1:C707 60 -  -  -  	.db %01100000
  840 D1:C708 B6 D2 D1 75 
              1E D4 -  -  	.dl Vines_4, Vines_4_Slow_O
  841 D1:C70E 40 -  -  -  	.db %01000000
  842 D1:C70F FC D9 D1 27 
              1F D4 -  -  	.dl Vines_10, Vines_10_Slow
  843 D1:C715 00 -  -  -  	.db %00000000
  844 D1:C716 D0 D9 D1 E9 
              1F D4 -  -  	.dl Vines_7, Vines_7_Slow_F
  845 D1:C71C 20 -  -  -  	.db %00100000
  846 D1:C71D AF D1 D1 A9 
              20 D4 -  -  	.dl Vines_2, Vines_2_Slow
  847 D1:C723 00 -  -  -  	.db %00000000
  848 D1:C724 75 D9 D1 D3 
              54 D4 -  -  	.dl Branches_1, Branches_1_Slow_O
  849 D1:C72A 40 -  -  -  	.db %01000000
  850 D1:C72B 23 D1 D1 99 
              55 D4 -  -  	.dl Branches_4, Branches_4_Slow_O
  851 D1:C731 40 -  -  -  	.db %01000000
  852 D1:C732 F0 CE D1 65 
              56 D4 -  -  	.dl Leaves_3, Leaves_3_Slow_O_F
  853 D1:C738 60 -  -  -  	.db %01100000
  854 D1:C739 D0 D9 D1 D3 
              56 D4 -  -  	.dl Vines_7, Vines_7_Slow_O
  855 D1:C73F 40 -  -  -  	.db %01000000
  856 D1:C740 -  -  -  -  
  857 D1:C740 -  -  -  -  decompress_frame_down_11:
  858 D1:C740 15 -  -  -  	.db 21
  859 D1:C741 46 CF D1 8B 
              38 D4 -  -  	.dl Branches_6, Branches_6_Slow
  860 D1:C747 00 -  -  -  	.db %00000000
  861 D1:C748 0B CE D1 29 
              39 D4 -  -  	.dl Branches_10, Branches_10_Slow_O_F
  862 D1:C74E 60 -  -  -  	.db %01100000
  863 D1:C74F D5 CF D1 DD 
              3A D4 -  -  	.dl Branches_15, Branches_15_Slow_O
  864 D1:C755 40 -  -  -  	.db %01000000
  865 D1:C756 F9 CF D1 49 
              3B D4 -  -  	.dl Branches_8, Branches_8_Slow_O_F
  866 D1:C75C 60 -  -  -  	.db %01100000
  867 D1:C75D D5 CF D1 4B 
              3C D4 -  -  	.dl Branches_15, Branches_15_Slow_O_F
  868 D1:C763 60 -  -  -  	.db %01100000
  869 D1:C764 64 D0 D1 BB 
              3C D4 -  -  	.dl Leaves_2, Leaves_2_Slow_O
  870 D1:C76A 40 -  -  -  	.db %01000000
  871 D1:C76B 7D D0 D1 25 
              3D D4 -  -  	.dl Leaves_4, Leaves_4_Slow
  872 D1:C771 00 -  -  -  	.db %00000000
  873 D1:C772 7D D0 D1 AF 
              3D D4 -  -  	.dl Leaves_4, Leaves_4_Slow_F
  874 D1:C778 20 -  -  -  	.db %00100000
  875 D1:C779 23 D1 D1 EE 
              41 D4 -  -  	.dl Branches_4, Branches_4_Fast_F
  876 D1:C77F A0 -  -  -  	.db %10100000
  877 D1:C780 0B CE D1 78 
              44 D4 -  -  	.dl Branches_10, Branches_10_Fast
  878 D1:C786 80 -  -  -  	.db %10000000
  879 D1:C787 FF D0 D1 EF 
              44 D4 -  -  	.dl Leaves_6, Leaves_6_Slow_O
  880 D1:C78D 40 -  -  -  	.db %01000000
  881 D1:C78E F0 CE D1 73 
              45 D4 -  -  	.dl Leaves_3, Leaves_3_Slow_F
  882 D1:C794 20 -  -  -  	.db %00100000
  883 D1:C795 AF D1 D1 A9 
              46 D4 -  -  	.dl Vines_2, Vines_2_Slow_O
  884 D1:C79B 40 -  -  -  	.db %01000000
  885 D1:C79C 81 D1 D1 97 
              57 D4 -  -  	.dl Vines_8, Vines_8_Slow_O
  886 D1:C7A2 40 -  -  -  	.db %01000000
  887 D1:C7A3 81 D1 D1 5D 
              58 D4 -  -  	.dl Vines_8, Vines_8_Slow_O_F
  888 D1:C7A9 60 -  -  -  	.db %01100000
  889 D1:C7AA 75 D3 D1 23 
              59 D4 -  -  	.dl Vines_6, Vines_6_Slow
  890 D1:C7B0 00 -  -  -  	.db %00000000
  891 D1:C7B1 9E D3 D1 B8 
              04 D4 -  -  	.dl Branches_3, Branches_3_Fast
  892 D1:C7B7 80 -  -  -  	.db %10000000
  893 D1:C7B8 FE D3 D1 78 
              33 D4 -  -  	.dl Branches_2, Branches_2_Fast
  894 D1:C7BE 80 -  -  -  	.db %10000000
  895 D1:C7BF F6 D1 D1 21 
              34 D4 -  -  	.dl Vines_3, Vines_3_Slow_O
  896 D1:C7C5 40 -  -  -  	.db %01000000
  897 D1:C7C6 81 D1 D1 7B 
              4C D4 -  -  	.dl Vines_8, Vines_8_Slow_F
  898 D1:C7CC 20 -  -  -  	.db %00100000
  899 D1:C7CD 83 D2 D1 C9 
              06 D4 -  -  	.dl Vines_9, Vines_9_Slow_O
  900 D1:C7D3 40 -  -  -  	.db %01000000
  901 D1:C7D4 -  -  -  -  
  902 D1:C7D4 -  -  -  -  decompress_frame_down_12:
  903 D1:C7D4 25 -  -  -  	.db 37
  904 D1:C7D5 0B CE D1 35 
              35 D4 -  -  	.dl Branches_10, Branches_10_Slow_O
  905 D1:C7DB 40 -  -  -  	.db %01000000
  906 D1:C7DC 55 CE D1 DA 
              35 D4 -  -  	.dl Branches_9, Branches_9_Fast
  907 D1:C7E2 80 -  -  -  	.db %10000000
  908 D1:C7E3 A5 CE D1 5D 
              36 D4 -  -  	.dl Branches_16, Branches_16_Slow
  909 D1:C7E9 00 -  -  -  	.db %00000000
  910 D1:C7EA D2 CE D1 C9 
              36 D4 -  -  	.dl Branches_13, Branches_13_Slow_O
  911 D1:C7F0 40 -  -  -  	.db %01000000
  912 D1:C7F1 F0 CE D1 0F 
              37 D4 -  -  	.dl Leaves_3, Leaves_3_Slow
  913 D1:C7F7 00 -  -  -  	.db %00000000
  914 D1:C7F8 0F CF D1 7C 
              37 D4 -  -  	.dl Leaves_7, Leaves_7_Fast
  915 D1:C7FE 80 -  -  -  	.db %10000000
  916 D1:C7FF 0F CF D1 04 
              38 D4 -  -  	.dl Leaves_7, Leaves_7_Fast_F
  917 D1:C805 A0 -  -  -  	.db %10100000
  918 D1:C806 90 CF D1 CD 
              39 D4 -  -  	.dl Branches_7, Branches_7_Slow_O
  919 D1:C80C 40 -  -  -  	.db %01000000
  920 D1:C80D A5 CE D1 71 
              3A D4 -  -  	.dl Branches_16, Branches_16_Slow_O
  921 D1:C813 40 -  -  -  	.db %01000000
  922 D1:C814 2A D0 D1 D1 
              3B D4 -  -  	.dl Branches_12, Branches_12_Slow_O
  923 D1:C81A 40 -  -  -  	.db %01000000
  924 D1:C81B 90 CF D1 3A 
              3E D4 -  -  	.dl Branches_7, Branches_7_Fast
  925 D1:C821 80 -  -  -  	.db %10000000
  926 D1:C822 F9 CF D1 B4 
              3E D4 -  -  	.dl Branches_8, Branches_8_Fast
  927 D1:C828 80 -  -  -  	.db %10000000
  928 D1:C829 0B CE D1 12 
              3F D4 -  -  	.dl Branches_10, Branches_10_Fast_F
  929 D1:C82F A0 -  -  -  	.db %10100000
  930 D1:C830 A2 D0 D1 8A 
              3F D4 -  -  	.dl Branches_11, Branches_11_Fast_F
  931 D1:C836 A0 -  -  -  	.db %10100000
  932 D1:C837 A5 CE D1 F1 
              3F D4 -  -  	.dl Branches_16, Branches_16_Slow_O_F
  933 D1:C83D 60 -  -  -  	.db %01100000
  934 D1:C83E D2 CE D1 5E 
              40 D4 -  -  	.dl Branches_13, Branches_13_Fast_F
  935 D1:C844 A0 -  -  -  	.db %10100000
  936 D1:C845 E0 D0 D1 8F 
              40 D4 -  -  	.dl Branches_14, Branches_14_Slow_O
  937 D1:C84B 40 -  -  -  	.db %01000000
  938 D1:C84C D5 CF D1 FF 
              40 D4 -  -  	.dl Branches_15, Branches_15_Slow_F
  939 D1:C852 20 -  -  -  	.db %00100000
  940 D1:C853 FF D0 D1 6B 
              41 D4 -  -  	.dl Leaves_6, Leaves_6_Slow
  941 D1:C859 00 -  -  -  	.db %00000000
  942 D1:C85A 7D D0 D1 61 
              43 D4 -  -  	.dl Leaves_4, Leaves_4_Slow_O
  943 D1:C860 40 -  -  -  	.db %01000000
  944 D1:C861 F9 CF D1 EF 
              43 D4 -  -  	.dl Branches_8, Branches_8_Slow_O
  945 D1:C867 40 -  -  -  	.db %01000000
  946 D1:C868 F6 D1 D1 81 
              47 D4 -  -  	.dl Vines_3, Vines_3_Slow
  947 D1:C86E 00 -  -  -  	.db %00000000
  948 D1:C86F 83 D2 D1 23 
              49 D4 -  -  	.dl Vines_9, Vines_9_Slow
  949 D1:C875 00 -  -  -  	.db %00000000
  950 D1:C876 B6 D2 D1 D5 
              49 D4 -  -  	.dl Vines_4, Vines_4_Slow_F
  951 D1:C87C 20 -  -  -  	.db %00100000
  952 D1:C87D ED D2 D1 8D 
              4A D4 -  -  	.dl Vines_1, Vines_1_Slow_O
  953 D1:C883 40 -  -  -  	.db %01000000
  954 D1:C884 F6 D1 D1 CB 
              4B D4 -  -  	.dl Vines_3, Vines_3_Slow_F
  955 D1:C88A 20 -  -  -  	.db %00100000
  956 D1:C88B D5 CF D1 47 
              04 D4 -  -  	.dl Branches_15, Branches_15_Slow
  957 D1:C891 00 -  -  -  	.db %00000000
  958 D1:C892 AF D1 D1 5F 
              05 D4 -  -  	.dl Vines_2, Vines_2_Slow_F
  959 D1:C898 20 -  -  -  	.db %00100000
  960 D1:C899 ED D2 D1 39 
              06 D4 -  -  	.dl Vines_1, Vines_1_Slow
  961 D1:C89F 00 -  -  -  	.db %00000000
  962 D1:C8A0 55 CE D1 45 
              4D D4 -  -  	.dl Branches_9, Branches_9_Slow_O
  963 D1:C8A6 40 -  -  -  	.db %01000000
  964 D1:C8A7 75 D9 D1 82 
              18 D4 -  -  	.dl Branches_1, Branches_1_Fast
  965 D1:C8AD 80 -  -  -  	.db %10000000
  966 D1:C8AE FE D3 D1 1B 
              19 D4 -  -  	.dl Branches_2, Branches_2_Slow_O
  967 D1:C8B4 40 -  -  -  	.db %01000000
  968 D1:C8B5 9E D3 D1 FB 
              19 D4 -  -  	.dl Branches_3, Branches_3_Slow_O
  969 D1:C8BB 40 -  -  -  	.db %01000000
  970 D1:C8BC 17 D3 D1 D5 
              1A D4 -  -  	.dl Branches_5, Branches_5_Slow_O
  971 D1:C8C2 40 -  -  -  	.db %01000000
  972 D1:C8C3 F0 CE D1 A5 
              1B D4 -  -  	.dl Leaves_3, Leaves_3_Slow_O
  973 D1:C8C9 40 -  -  -  	.db %01000000
  974 D1:C8CA 39 DA D1 DA 
              59 D4 -  -  	.dl Branches_0, Branches_0_Fast_F
  975 D1:C8D0 A0 -  -  -  	.db %10100000
  976 D1:C8D1 55 CE D1 72 
              5A D4 -  -  	.dl Branches_9, Branches_9_Fast_F
  977 D1:C8D7 A0 -  -  -  	.db %10100000
  978 D1:C8D8 -  -  -  -  
  979 D1:C8D8 -  -  -  -  decompress_frame_down_13:
  980 D1:C8D8 00 -  -  -  	.db 0
  981 D1:C8D9 -  -  -  -  
  982 D1:C8D9 -  -  -  -  decompress_frame_down_14:
  983 D1:C8D9 17 -  -  -  	.db 23
  984 D1:C8DA 5E D4 D1 CE 
              4E D4 -  -  	.dl Tree_2, Tree_2_Fast
  985 D1:C8E0 80 -  -  -  	.db %10000000
  986 D1:C8E1 C9 D4 D1 CA 
              4F D4 -  -  	.dl Tree_4, Tree_4_Fast
  987 D1:C8E7 80 -  -  -  	.db %10000000
  988 D1:C8E8 36 D5 D1 CC 
              50 D4 -  -  	.dl Tree_7, Tree_7_Fast
  989 D1:C8EE 80 -  -  -  	.db %10000000
  990 D1:C8EF A3 D5 D1 CE 
              51 D4 -  -  	.dl Tree_9, Tree_9_Fast
  991 D1:C8F5 80 -  -  -  	.db %10000000
  992 D1:C8F6 10 D6 D1 D0 
              52 D4 -  -  	.dl Tree_6, Tree_6_Fast_F
  993 D1:C8FC A0 -  -  -  	.db %10100000
  994 D1:C8FD 7D D6 D1 D2 
              53 D4 -  -  	.dl Tree_3, Tree_3_Fast_F
  995 D1:C903 A0 -  -  -  	.db %10100000
  996 D1:C904 EA D6 D1 7A 
              07 D4 -  -  	.dl Tree_0, Tree_0_Fast_F
  997 D1:C90A A0 -  -  -  	.db %10100000
  998 D1:C90B 7D D6 D1 76 
              08 D4 -  -  	.dl Tree_3, Tree_3_Fast
  999 D1:C911 80 -  -  -  	.db %10000000
 1000 D1:C912 55 D7 D1 78 
              09 D4 -  -  	.dl Tree_8, Tree_8_Fast
 1001 D1:C918 80 -  -  -  	.db %10000000
 1002 D1:C919 A3 D5 D1 7A 
              0A D4 -  -  	.dl Tree_9, Tree_9_Fast_F
 1003 D1:C91F A0 -  -  -  	.db %10100000
 1004 D1:C920 55 D7 D1 7C 
              0B D4 -  -  	.dl Tree_8, Tree_8_Fast_F
 1005 D1:C926 A0 -  -  -  	.db %10100000
 1006 D1:C927 C9 D4 D1 7E 
              0C D4 -  -  	.dl Tree_4, Tree_4_Fast_F
 1007 D1:C92D A0 -  -  -  	.db %10100000
 1008 D1:C92E EA D6 D1 80 
              0D D4 -  -  	.dl Tree_0, Tree_0_Fast
 1009 D1:C934 80 -  -  -  	.db %10000000
 1010 D1:C935 10 D6 D1 7C 
              0E D4 -  -  	.dl Tree_6, Tree_6_Fast
 1011 D1:C93B 80 -  -  -  	.db %10000000
 1012 D1:C93C C2 D7 D1 7E 
              0F D4 -  -  	.dl Tree_10, Tree_10_Fast
 1013 D1:C942 80 -  -  -  	.db %10000000
 1014 D1:C943 36 D5 D1 80 
              10 D4 -  -  	.dl Tree_7, Tree_7_Fast_F
 1015 D1:C949 A0 -  -  -  	.db %10100000
 1016 D1:C94A 2F D8 D1 82 
              11 D4 -  -  	.dl Tree_1, Tree_1_Fast_F
 1017 D1:C950 A0 -  -  -  	.db %10100000
 1018 D1:C951 2F D8 D1 80 
              12 D4 -  -  	.dl Tree_1, Tree_1_Fast
 1019 D1:C957 80 -  -  -  	.db %10000000
 1020 D1:C958 9B D8 D1 7E 
              13 D4 -  -  	.dl Tree_5, Tree_5_Fast
 1021 D1:C95E 80 -  -  -  	.db %10000000
 1022 D1:C95F 08 D9 D1 80 
              14 D4 -  -  	.dl Tree_11, Tree_11_Fast
 1023 D1:C965 80 -  -  -  	.db %10000000
 1024 D1:C966 9B D8 D1 82 
              15 D4 -  -  	.dl Tree_5, Tree_5_Fast_F
 1025 D1:C96C A0 -  -  -  	.db %10100000
 1026 D1:C96D 5E D4 D1 84 
              16 D4 -  -  	.dl Tree_2, Tree_2_Fast_F
 1027 D1:C973 A0 -  -  -  	.db %10100000
 1028 D1:C974 08 D9 D1 80 
              17 D4 -  -  	.dl Tree_11, Tree_11_Fast_F
 1029 D1:C97A A0 -  -  -  	.db %10100000
 1030 D1:C97B -  -  -  -  
 1031 D1:C97B -  -  -  -  decompress_frame_down_15:
 1032 D1:C97B 00 -  -  -  	.db 0
 1033 D1:C97C -  -  -  -  
 1034 D1:C97C -  -  -  -  decompress_frame_down_16:
 1035 D1:C97C 16 -  -  -  	.db 22
 1036 D1:C97D E7 CC D1 D6 
              2F D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast
 1037 D1:C983 80 -  -  -  	.db %10000000
 1038 D1:C984 E7 CC D1 88 
              30 D4 -  -  	.dl GroundDirtFull, GroundDirtFull_Fast_F
 1039 D1:C98A A0 -  -  -  	.db %10100000
 1040 D1:C98B 2C CD D1 3A 
              31 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast
 1041 D1:C991 80 -  -  -  	.db %10000000
 1042 D1:C992 2C CD D1 BA 
              31 D4 -  -  	.dl GroundDirtMound, GroundDirtMound_Fast_F
 1043 D1:C998 A0 -  -  -  	.db %10100000
 1044 D1:C999 64 D0 D1 85 
              21 D4 -  -  	.dl Leaves_2, Leaves_2_Slow
 1045 D1:C99F 00 -  -  -  	.db %00000000
 1046 D1:C9A0 91 DA D1 94 
              25 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast
 1047 D1:C9A6 80 -  -  -  	.db %10000000
 1048 D1:C9A7 91 DA D1 1A 
              26 D4 -  -  	.dl GroundDirtDark, GroundDirtDark_Fast_F
 1049 D1:C9AD A0 -  -  -  	.db %10100000
 1050 D1:C9AE C6 DA D1 A0 
              26 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast
 1051 D1:C9B4 80 -  -  -  	.db %10000000
 1052 D1:C9B5 C6 DA D1 26 
              27 D4 -  -  	.dl GroundHumpDark, GroundHumpDark_Fast_F
 1053 D1:C9BB A0 -  -  -  	.db %10100000
 1054 D1:C9BC 14 DB D1 AC 
              27 D4 -  -  	.dl GroundGrassSmall, GroundGrassSmall_Fast
 1055 D1:C9C2 80 -  -  -  	.db %10000000
 1056 D1:C9C3 14 DB D1 54 
              28 D4 -  -  	.dl GroundGrassSmall, GroundGrassSmall_Fast_F
 1057 D1:C9C9 A0 -  -  -  	.db %10100000
 1058 D1:C9CA 36 DB D1 FC 
              28 D4 -  -  	.dl Tree_16, Tree_16_Fast
 1059 D1:C9D0 80 -  -  -  	.db %10000000
 1060 D1:C9D1 4E DB D1 51 
              29 D4 -  -  	.dl Tree_17, Tree_17_Slow_O
 1061 D1:C9D7 40 -  -  -  	.db %01000000
 1062 D1:C9D8 4E DB D1 B9 
              29 D4 -  -  	.dl Tree_17, Tree_17_Slow_O_F
 1063 D1:C9DE 60 -  -  -  	.db %01100000
 1064 D1:C9DF 5F DB D1 1E 
              2A D4 -  -  	.dl Leaves_8, Leaves_8_Fast
 1065 D1:C9E5 80 -  -  -  	.db %10000000
 1066 D1:C9E6 36 DB D1 A5 
              2A D4 -  -  	.dl Tree_16, Tree_16_Slow_O
 1067 D1:C9EC 40 -  -  -  	.db %01000000
 1068 D1:C9ED 4E DB D1 2B 
              2B D4 -  -  	.dl Tree_17, Tree_17_Slow_F
 1069 D1:C9F3 20 -  -  -  	.db %00100000
 1070 D1:C9F4 96 DB D1 93 
              2B D4 -  -  	.dl Tree_18, Tree_18_Slow_O
 1071 D1:C9FA 40 -  -  -  	.db %01000000
 1072 D1:C9FB 4E DB D1 F7 
              2B D4 -  -  	.dl Tree_17, Tree_17_Slow
 1073 D1:CA01 00 -  -  -  	.db %00000000
 1074 D1:CA02 96 DB D1 5D 
              2C D4 -  -  	.dl Tree_18, Tree_18_Slow_F
 1075 D1:CA08 20 -  -  -  	.db %00100000
 1076 D1:CA09 36 DB D1 C1 
              2C D4 -  -  	.dl Tree_16, Tree_16_Slow_O_F
 1077 D1:CA0F 60 -  -  -  	.db %01100000
 1078 D1:CA10 64 D0 D1 47 
              2D D4 -  -  	.dl Leaves_2, Leaves_2_Slow_F
 1079 D1:CA16 20 -  -  -  	.db %00100000
 1080 D1:CA17 -  -  -  -  
 1081 D1:CA17 -  -  -  -  decompress_frame_down_17:
 1082 D1:CA17 00 -  -  -  	.db 0
 1083 D1:CA18 -  -  -  -  
 1084 D1:CA18 -  -  -  -  decompress_frame_down_18:
 1085 D1:CA18 00 -  -  -  	.db 0
 1086 D1:CA19 -  -  -  -  
 1087 D1:CA19 -  -  -  -  decompress_frame_down_19:
 1088 D1:CA19 00 -  -  -  	.db 0
 1089 D1:CA1A -  -  -  -  
 1090 D1:CA1A -  -  -  -  decompress_frame_down_20:
 1091 D1:CA1A 00 -  -  -  	.db 0
 1092 D1:CA1B -  -  -  -  
 1093 D1:CA1B -  -  -  -  decompress_frame_down_21:
 1094 D1:CA1B 00 -  -  -  	.db 0
 1095 D1:CA1C -  -  -  -  
 1096 D1:CA1C -  -  -  -  decompress_frame_down_22:
 1097 D1:CA1C 00 -  -  -  	.db 0
 1098 D1:CA1D -  -  -  -  
 1099 D1:CA1D -  -  -  -  decompress_frame_down_23:
 1100 D1:CA1D 00 -  -  -  	.db 0
 1101 D1:CA1E -  -  -  -  
 1102 D1:CA1E -  -  -  -  decompress_frame_down_24:
 1103 D1:CA1E 0A -  -  -  	.db 10
 1104 D1:CA1F A7 DB D1 AE 
              2D D4 -  -  	.dl Clouds_0, Clouds_0_Fast
 1105 D1:CA25 80 -  -  -  	.db %10000000
 1106 D1:CA26 D0 DB D1 14 
              2E D4 -  -  	.dl Clouds_1, Clouds_1_Fast
 1107 D1:CA2C 80 -  -  -  	.db %10000000
 1108 D1:CA2D F7 DB D1 78 
              2E D4 -  -  	.dl Clouds_3, Clouds_3_Fast
 1109 D1:CA33 80 -  -  -  	.db %10000000
 1110 D1:CA34 23 DC D1 E4 
              2E D4 -  -  	.dl Clouds_4, Clouds_4_Fast
 1111 D1:CA3A 80 -  -  -  	.db %10000000
 1112 D1:CA3B 3A DC D1 24 
              2F D4 -  -  	.dl Clouds_2, Clouds_2_Fast
 1113 D1:CA41 80 -  -  -  	.db %10000000
 1114 D1:CA42 A7 DB D1 C0 
              01 D4 -  -  	.dl Clouds_0, Clouds_0_Fast_F
 1115 D1:CA48 A0 -  -  -  	.db %10100000
 1116 D1:CA49 D0 DB D1 26 
              02 D4 -  -  	.dl Clouds_1, Clouds_1_Fast_F
 1117 D1:CA4F A0 -  -  -  	.db %10100000
 1118 D1:CA50 23 DC D1 8A 
              02 D4 -  -  	.dl Clouds_4, Clouds_4_Fast_F
 1119 D1:CA56 A0 -  -  -  	.db %10100000
 1120 D1:CA57 F7 DB D1 CA 
              02 D4 -  -  	.dl Clouds_3, Clouds_3_Fast_F
 1121 D1:CA5D A0 -  -  -  	.db %10100000
 1122 D1:CA5E 3A DC D1 36 
              03 D4 -  -  	.dl Clouds_2, Clouds_2_Fast_F
 1123 D1:CA64 A0 -  -  -  	.db %10100000
 1124 D1:CA65 -  -  -  -  
 1125 D1:CA65 -  -  -  -  decompress_frame_down_25:
 1126 D1:CA65 00 -  -  -  	.db 0
 1127 D1:CA66 -  -  -  -  
 1128 D1:CA66 -  -  -  -  decompress_frame_down_26:
 1129 D1:CA66 00 -  -  -  	.db 0
 1130 D1:CA67 -  -  -  -  
 1131 D1:CA67 -  -  -  -  decompress_frame_down_27:
 1132 D1:CA67 00 -  -  -  	.db 0
 1133 D1:CA68 -  -  -  -  
 1134 D1:CA68 -  -  -  -  decompress_frame_down_28:
 1135 D1:CA68 00 -  -  -  	.db 0
 1136 D1:CA69 -  -  -  -  
 1137 D1:CA69 -  -  -  -  decompress_frame_down_29:
 1138 D1:CA69 00 -  -  -  	.db 0
 1139 D1:CA6A -  -  -  -  
 1140 D1:CA6A -  -  -  -  decompress_frame_down_30:
 1141 D1:CA6A 00 -  -  -  	.db 0
 1142 D1:CA6B -  -  -  -  
 1143 D1:CA6B -  -  -  -  decompress_frame_down_31:
 1144 D1:CA6B 00 -  -  -  	.db 0
 1145 D1:CA6C -  -  -  -  
 1146 D1:CA6C -  -  -  -  decompress_frame_down_32:
 1147 D1:CA6C 00 -  -  -  	.db 0
 1148 D1:CA6D -  -  -  -  
 1149 D1:CA6D -  -  -  -  decompress_frame_down_33:
 1150 D1:CA6D 00 -  -  -  	.db 0
 1151 D1:CA6E -  -  -  -  
 1152 D1:CA6E -  -  -  -  decompress_frame_down_34:
 1153 D1:CA6E 00 -  -  -  	.db 0
 1154 D1:CA6F -  -  -  -  
 1155 D1:CA6F -  -  -  -  decompress_frame_down_35:
 1156 D1:CA6F 00 -  -  -  	.db 0
 1157 D1:CA70 -  -  -  -  
 1158 D1:CA70 -  -  -  -  decompress_frame_down_36:
 1159 D1:CA70 00 -  -  -  	.db 0
 1160 D1:CA71 -  -  -  -  
 1161 D1:CA71 -  -  -  -  decompress_frame_down_37:
 1162 D1:CA71 00 -  -  -  	.db 0
 1163 D1:CA72 -  -  -  -  
 1164 D1:CA72 -  -  -  -  decompress_frame_down_38:
 1165 D1:CA72 00 -  -  -  	.db 0
 1166 D1:CA73 -  -  -  -  
 1167 D1:CA73 -  -  -  -  decompress_frame_down_39:
 1168 D1:CA73 00 -  -  -  	.db 0
 1169 D1:CA74 -  -  -  -  
 1170 D1:CA74 -  -  -  -  decompress_frame_down_40:
 1171 D1:CA74 00 -  -  -  	.db 0
 1172 D1:CA75 -  -  -  -  
 1173 D1:CA75 -  -  -  -  decompress_frame_down_41:
 1174 D1:CA75 00 -  -  -  	.db 0
 1175 D1:CA76 -  -  -  -  
 1176 D1:CA76 -  -  -  -  decompress_frame_down_42:
 1177 D1:CA76 00 -  -  -  	.db 0
 1178 D1:CA77 -  -  -  -  
 1179 D1:CA77 -  -  -  -  decompress_frame_down_43:
 1180 D1:CA77 00 -  -  -  	.db 0
 1181 D1:CA78 -  -  -  -  
 1182 D1:CA78 -  -  -  -  decompress_frame_down_44:
 1183 D1:CA78 00 -  -  -  	.db 0
 1184 D1:CA79 -  -  -  -  
 1185 D1:CA79 -  -  -  -  decompress_frame_down_45:
 1186 D1:CA79 00 -  -  -  	.db 0
 1187 D1:CA7A -  -  -  -  
 1188 D1:CA7A -  -  -  -  decompress_frame_down_46:
 1189 D1:CA7A 00 -  -  -  	.db 0
 1190 D1:CA7B -  -  -  -  
 1191 D1:CA7B -  -  -  -  decompress_frame_down_47:
 1192 D1:CA7B 00 -  -  -  	.db 0
 1193 D1:CA7C -  -  -  -  
 1194 D1:CA7C -  -  -  -  decompress_frame_down_48:
 1195 D1:CA7C 00 -  -  -  	.db 0
 1196 D1:CA7D -  -  -  -  
 1197 D1:CA7D -  -  -  -  decompress_frame_down_49:
 1198 D1:CA7D 00 -  -  -  	.db 0
 1199 D1:CA7E -  -  -  -  
 1200 D1:CA7E -  -  -  -  decompress_frame_down_50:
 1201 D1:CA7E 00 -  -  -  	.db 0
 1202 D1:CA7F -  -  -  -  
 1203 D1:CA7F -  -  -  -  decompress_frame_down_51:
 1204 D1:CA7F 00 -  -  -  	.db 0
 1205 D1:CA80 -  -  -  -  
 1206 D1:CA80 -  -  -  -  decompress_frame_down_52:
 1207 D1:CA80 00 -  -  -  	.db 0
 1208 D1:CA81 -  -  -  -  
 1209 D1:CA81 -  -  -  -  decompress_frame_down_53:
 1210 D1:CA81 00 -  -  -  	.db 0
 1211 D1:CA82 -  -  -  -  
 1212 D1:CA82 -  -  -  -  decompress_frame_down_54:
 1213 D1:CA82 00 -  -  -  	.db 0
 1214 D1:CA83 -  -  -  -  
 1215 D1:CA83 -  -  -  -  decompress_frame_down_55:
 1216 D1:CA83 00 -  -  -  	.db 0
 1217 D1:CA84 -  -  -  -  
 1218 D1:CA84 -  -  -  -  decompress_frame_down_56:
 1219 D1:CA84 00 -  -  -  	.db 0
 1220 D1:CA85 -  -  -  -  
 1221 D1:CA85 -  -  -  -  decompress_frame_down_57:
 1222 D1:CA85 00 -  -  -  	.db 0
 1223 D1:CA86 -  -  -  -  
 1224 D1:CA86 -  -  -  -  decompress_frame_down_58:
 1225 D1:CA86 00 -  -  -  	.db 0
 1226 D1:CA87 -  -  -  -  
 1227 D1:CA87 -  -  -  -  decompress_frame_down_59:
 1228 D1:CA87 00 -  -  -  	.db 0
 1229 D1:CA88 -  -  -  -  
 1230 D1:CA88 -  -  -  -  decompress_frame_down_60:
 1231 D1:CA88 00 -  -  -  	.db 0
 1232 D1:CA89 -  -  -  -  
 1233 D1:CA89 -  -  -  -  decompress_frame_down_61:
 1234 D1:CA89 00 -  -  -  	.db 0
 1235 D1:CA8A -  -  -  -  
 1236 D1:CA8A -  -  -  -  decompress_frame_down_62:
 1237 D1:CA8A 00 -  -  -  	.db 0
 1238 D1:CA8B -  -  -  -  
 1239 D1:CA8B -  -  -  -  decompress_frame_down_63:
 1240 D1:CA8B 00 -  -  -  	.db 0
 1241 D1:CA8C -  -  -  -  
 1242 D1:CA8C -  -  -  -  decompress_frame_down_64:
 1243 D1:CA8C 00 -  -  -  	.db 0
 1244 D1:CA8D -  -  -  -  
 1245 D1:CA8D -  -  -  -  decompress_frame_down_65:
 1246 D1:CA8D 00 -  -  -  	.db 0
 1247 D1:CA8E -  -  -  -  
 1248 D1:CA8E -  -  -  -  decompress_frame_down_66:
 1249 D1:CA8E 00 -  -  -  	.db 0
 1250 D1:CA8F -  -  -  -  
 1251 D1:CA8F -  -  -  -  decompress_frame_down_67:
 1252 D1:CA8F 00 -  -  -  	.db 0
 1253 D1:CA90 -  -  -  -  
 1254 D1:CA90 -  -  -  -  decompress_frame_down_68:
 1255 D1:CA90 00 -  -  -  	.db 0
 1256 D1:CA91 -  -  -  -  
 1257 D1:CA91 -  -  -  -  decompress_frame_down_69:
 1258 D1:CA91 00 -  -  -  	.db 0
 1259 D1:CA92 -  -  -  -  
 1260 D1:CA92 -  -  -  -  decompress_frame_down_70:
 1261 D1:CA92 00 -  -  -  	.db 0
 1262 D1:CA93 -  -  -  -  
 1263 D1:CA93 -  -  -  -  decompress_frame_down_71:
 1264 D1:CA93 00 -  -  -  	.db 0
 1265 D1:CA94 -  -  -  -  
 1266 D1:CA94 -  -  -  -  decompress_frame_down_72:
 1267 D1:CA94 00 -  -  -  	.db 0
 1268 D1:CA95 -  -  -  -  
 1269 D1:CA95 -  -  -  -  decompress_frame_down_73:
 1270 D1:CA95 00 -  -  -  	.db 0
 1271 D1:CA96 -  -  -  -  
 1272 D1:CA96 -  -  -  -  decompress_frame_down_74:
 1273 D1:CA96 00 -  -  -  	.db 0
 1274 D1:CA97 -  -  -  -  
 1275 D1:CA97 -  -  -  -  decompress_frame_down_75:
 1276 D1:CA97 00 -  -  -  	.db 0
 1277 D1:CA98 -  -  -  -  
 1278 D1:CA98 -  -  -  -  decompress_frame_down_76:
 1279 D1:CA98 00 -  -  -  	.db 0
 1280 D1:CA99 -  -  -  -  
 1281 D1:CA99 -  -  -  -  decompress_frame_down_77:
 1282 D1:CA99 00 -  -  -  	.db 0
 1283 D1:CA9A -  -  -  -  
 1284 D1:CA9A -  -  -  -  decompress_frame_down_78:
 1285 D1:CA9A 00 -  -  -  	.db 0
 1286 D1:CA9B -  -  -  -  
 1287 D1:CA9B -  -  -  -  decompress_frame_down_79:
 1288 D1:CA9B 00 -  -  -  	.db 0
 1289 D1:CA9C -  -  -  -  
 1290 D1:CA9C -  -  -  -  decompress_frame_down_80:
 1291 D1:CA9C 00 -  -  -  	.db 0
 1292 D1:CA9D -  -  -  -  
 1293 D1:CA9D -  -  -  -  decompress_frame_down_81:
 1294 D1:CA9D 00 -  -  -  	.db 0
 1295 D1:CA9E -  -  -  -  
 1296 D1:CA9E -  -  -  -  decompress_frame_down_82:
 1297 D1:CA9E 00 -  -  -  	.db 0
 1298 D1:CA9F -  -  -  -  
 1299 D1:CA9F -  -  -  -  decompress_frame_down_83:
 1300 D1:CA9F 00 -  -  -  	.db 0
 1301 D1:CAA0 -  -  -  -  
 1302 D1:CAA0 -  -  -  -  decompress_frame_down_84:
 1303 D1:CAA0 00 -  -  -  	.db 0
 1304 D1:CAA1 -  -  -  -  
 1305 D1:CAA1 -  -  -  -  decompress_frame_down_85:
 1306 D1:CAA1 00 -  -  -  	.db 0
 1307 D1:CAA2 -  -  -  -  
 1308 D1:CAA2 -  -  -  -  decompress_frame_down_86:
 1309 D1:CAA2 00 -  -  -  	.db 0
 1310 D1:CAA3 -  -  -  -  
 1311 D1:CAA3 -  -  -  -  decompress_frame_down_87:
 1312 D1:CAA3 00 -  -  -  	.db 0
 1313 D1:CAA4 -  -  -  -  
 1314 D1:CAA4 -  -  -  -  decompress_frame_down_88:
 1315 D1:CAA4 00 -  -  -  	.db 0
 1316 D1:CAA5 -  -  -  -  
 1317 D1:CAA5 -  -  -  -  decompress_frame_down_89:
 1318 D1:CAA5 00 -  -  -  	.db 0
Listing for file "ascent.asm"
  544 D1:CAA6 -  -  -  -  #include "generated/Palette_Setup.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Palette_Setup.txt"
    1 D1:CAA6 -  -  -  -  setup_palette_1:
    2 D1:CAA6 21 00 02 E3 	ld hl,mpLcdPalette
    3 D1:CAAA 3E C2 -  -  	ld a,%11000010
    4 D1:CAAC 77 -  -  -  	ld (hl),a 
    5 D1:CAAD 23 -  -  -  	inc hl
    6 D1:CAAE 3E 20 -  -  	ld a,%00100000
    7 D1:CAB0 77 -  -  -  	ld (hl),a 
    8 D1:CAB1 23 -  -  -  	inc hl
    9 D1:CAB2 3E 24 -  -  	ld a,%00100100
   10 D1:CAB4 77 -  -  -  	ld (hl),a 
   11 D1:CAB5 23 -  -  -  	inc hl
   12 D1:CAB6 3E 39 -  -  	ld a,%00111001
   13 D1:CAB8 77 -  -  -  	ld (hl),a 
   14 D1:CAB9 23 -  -  -  	inc hl
   15 D1:CABA 3E 85 -  -  	ld a,%10000101
   16 D1:CABC 77 -  -  -  	ld (hl),a 
   17 D1:CABD 23 -  -  -  	inc hl
   18 D1:CABE 3E 4D -  -  	ld a,%01001101
   19 D1:CAC0 77 -  -  -  	ld (hl),a 
   20 D1:CAC1 23 -  -  -  	inc hl
   21 D1:CAC2 3E E6 -  -  	ld a,%11100110
   22 D1:CAC4 77 -  -  -  	ld (hl),a 
   23 D1:CAC5 23 -  -  -  	inc hl
   24 D1:CAC6 3E E1 -  -  	ld a,%11100001
   25 D1:CAC8 77 -  -  -  	ld (hl),a 
   26 D1:CAC9 23 -  -  -  	inc hl
   27 D1:CACA 3E 2A -  -  	ld a,%00101010
   28 D1:CACC 77 -  -  -  	ld (hl),a 
   29 D1:CACD 23 -  -  -  	inc hl
   30 D1:CACE 3E 2E -  -  	ld a,%00101110
   31 D1:CAD0 77 -  -  -  	ld (hl),a 
   32 D1:CAD1 23 -  -  -  	inc hl
   33 D1:CAD2 3E 65 -  -  	ld a,%01100101
   34 D1:CAD4 77 -  -  -  	ld (hl),a 
   35 D1:CAD5 23 -  -  -  	inc hl
   36 D1:CAD6 3E 95 -  -  	ld a,%10010101
   37 D1:CAD8 77 -  -  -  	ld (hl),a 
   38 D1:CAD9 23 -  -  -  	inc hl
   39 D1:CADA 3E FE -  -  	ld a,%11111110
   40 D1:CADC 77 -  -  -  	ld (hl),a 
   41 D1:CADD 23 -  -  -  	inc hl
   42 D1:CADE 3E 73 -  -  	ld a,%01110011
   43 D1:CAE0 77 -  -  -  	ld (hl),a 
   44 D1:CAE1 23 -  -  -  	inc hl
   45 D1:CAE2 3E BC -  -  	ld a,%10111100
   46 D1:CAE4 77 -  -  -  	ld (hl),a 
   47 D1:CAE5 23 -  -  -  	inc hl
   48 D1:CAE6 3E 5B -  -  	ld a,%01011011
   49 D1:CAE8 77 -  -  -  	ld (hl),a 
   50 D1:CAE9 23 -  -  -  	inc hl
   51 D1:CAEA 3E FF -  -  	ld a,%11111111
   52 D1:CAEC 77 -  -  -  	ld (hl),a 
   53 D1:CAED 23 -  -  -  	inc hl
   54 D1:CAEE 3E FF -  -  	ld a,%11111111
   55 D1:CAF0 77 -  -  -  	ld (hl),a 
   56 D1:CAF1 23 -  -  -  	inc hl
   57 D1:CAF2 3E 20 -  -  	ld a,%00100000
   58 D1:CAF4 77 -  -  -  	ld (hl),a 
   59 D1:CAF5 23 -  -  -  	inc hl
   60 D1:CAF6 3E 6A -  -  	ld a,%01101010
   61 D1:CAF8 77 -  -  -  	ld (hl),a 
   62 D1:CAF9 23 -  -  -  	inc hl
   63 D1:CAFA 3E 1F -  -  	ld a,%00011111
   64 D1:CAFC 77 -  -  -  	ld (hl),a 
   65 D1:CAFD 23 -  -  -  	inc hl
   66 D1:CAFE 3E 81 -  -  	ld a,%10000001
   67 D1:CB00 77 -  -  -  	ld (hl),a 
   68 D1:CB01 23 -  -  -  	inc hl
   69 D1:CB02 3E 1F -  -  	ld a,%00011111
   70 D1:CB04 77 -  -  -  	ld (hl),a 
   71 D1:CB05 23 -  -  -  	inc hl
   72 D1:CB06 3E 81 -  -  	ld a,%10000001
   73 D1:CB08 77 -  -  -  	ld (hl),a 
   74 D1:CB09 23 -  -  -  	inc hl
   75 D1:CB0A 3E 1F -  -  	ld a,%00011111
   76 D1:CB0C 77 -  -  -  	ld (hl),a 
   77 D1:CB0D 23 -  -  -  	inc hl
   78 D1:CB0E 3E 81 -  -  	ld a,%10000001
   79 D1:CB10 77 -  -  -  	ld (hl),a 
   80 D1:CB11 23 -  -  -  	inc hl
   81 D1:CB12 3E 1F -  -  	ld a,%00011111
   82 D1:CB14 77 -  -  -  	ld (hl),a 
   83 D1:CB15 23 -  -  -  	inc hl
   84 D1:CB16 3E 81 -  -  	ld a,%10000001
   85 D1:CB18 77 -  -  -  	ld (hl),a 
   86 D1:CB19 23 -  -  -  	inc hl
   87 D1:CB1A 3E C6 -  -  	ld a,%11000110
   88 D1:CB1C 77 -  -  -  	ld (hl),a 
   89 D1:CB1D 23 -  -  -  	inc hl
   90 D1:CB1E 3E 98 -  -  	ld a,%10011000
   91 D1:CB20 77 -  -  -  	ld (hl),a 
   92 D1:CB21 23 -  -  -  	inc hl
   93 D1:CB22 3E 95 -  -  	ld a,%10010101
   94 D1:CB24 77 -  -  -  	ld (hl),a 
   95 D1:CB25 23 -  -  -  	inc hl
   96 D1:CB26 3E 99 -  -  	ld a,%10011001
   97 D1:CB28 77 -  -  -  	ld (hl),a 
   98 D1:CB29 23 -  -  -  	inc hl
   99 D1:CB2A C9 -  -  -  	ret 
Listing for file "ascent.asm"
  545 D1:CB2B -  -  -  -  #include "generated/Sprite_Tables.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Tables.txt"
    1 D1:CB2B -  -  -  -  Sprite_Table_Table:
    2 D1:CB2B 31 CB D1 -  	.dl Sprite_Table_0
    3 D1:CB2E E7 CC D1 -  	.dl Sprite_Table_1
    4 D1:CB31 -  -  -  -  
    5 D1:CB31 -  -  -  -  
    6 D1:CB31 -  -  -  -  Sprite_Table_0:
    7 D1:CB31 D6 2F D4 -  	.dl GroundDirtFull_Fast
    8 D1:CB34 88 30 D4 -  	.dl GroundDirtFull_Fast_F
    9 D1:CB37 3A 31 D4 -  	.dl GroundDirtMound_Fast
   10 D1:CB3A BA 31 D4 -  	.dl GroundDirtMound_Fast_F
   11 D1:CB3D 3A 32 D4 -  	.dl GroundGrassL4_Fast
   12 D1:CB40 C4 32 D4 -  	.dl GroundGrassL2_Fast
   13 D1:CB43 1C 33 D4 -  	.dl GroundGrassL5_Fast
   14 D1:CB46 9E 33 D4 -  	.dl GroundGrassL3_Fast
   15 D1:CB49 F8 33 D4 -  	.dl GroundGrassL1_Fast
   16 D1:CB4C 6A 34 D4 -  	.dl GroundGrassL1_Fast_F
   17 D1:CB4F DC 34 D4 -  	.dl GroundGrassL3_Fast_F
   18 D1:CB52 DA 35 D4 -  	.dl Branches_9_Fast
   19 D1:CB55 C9 36 D4 -  	.dl Branches_13_Slow_O
   20 D1:CB58 35 35 D4 -  	.dl Branches_10_Slow_O
   21 D1:CB5B 5D 36 D4 -  	.dl Branches_16_Slow
   22 D1:CB5E 0F 37 D4 -  	.dl Leaves_3_Slow
   23 D1:CB61 7C 37 D4 -  	.dl Leaves_7_Fast
   24 D1:CB64 04 38 D4 -  	.dl Leaves_7_Fast_F
   25 D1:CB67 EF 43 D4 -  	.dl Branches_8_Slow_O
   26 D1:CB6A 73 45 D4 -  	.dl Leaves_3_Slow_F
   27 D1:CB6D 8F 40 D4 -  	.dl Branches_14_Slow_O
   28 D1:CB70 4B 3C D4 -  	.dl Branches_15_Slow_O_F
   29 D1:CB73 DD 3A D4 -  	.dl Branches_15_Slow_O
   30 D1:CB76 8A 3F D4 -  	.dl Branches_11_Fast_F
   31 D1:CB79 5E 40 D4 -  	.dl Branches_13_Fast_F
   32 D1:CB7C 12 3F D4 -  	.dl Branches_10_Fast_F
   33 D1:CB7F 78 44 D4 -  	.dl Branches_10_Fast
   34 D1:CB82 EF 44 D4 -  	.dl Leaves_6_Slow_O
   35 D1:CB85 8B 38 D4 -  	.dl Branches_6_Slow
   36 D1:CB88 29 39 D4 -  	.dl Branches_10_Slow_O_F
   37 D1:CB8B D1 3B D4 -  	.dl Branches_12_Slow_O
   38 D1:CB8E 25 3D D4 -  	.dl Leaves_4_Slow
   39 D1:CB91 49 3B D4 -  	.dl Branches_8_Slow_O_F
   40 D1:CB94 71 3A D4 -  	.dl Branches_16_Slow_O
   41 D1:CB97 CD 39 D4 -  	.dl Branches_7_Slow_O
   42 D1:CB9A AF 3D D4 -  	.dl Leaves_4_Slow_F
   43 D1:CB9D BB 3C D4 -  	.dl Leaves_2_Slow_O
   44 D1:CBA0 3A 3E D4 -  	.dl Branches_7_Fast
   45 D1:CBA3 B4 3E D4 -  	.dl Branches_8_Fast
   46 D1:CBA6 FF 40 D4 -  	.dl Branches_15_Slow_F
   47 D1:CBA9 6B 41 D4 -  	.dl Leaves_6_Slow
   48 D1:CBAC F1 3F D4 -  	.dl Branches_16_Slow_O_F
   49 D1:CBAF DF 45 D4 -  	.dl Vines_8_Slow
   50 D1:CBB2 A9 46 D4 -  	.dl Vines_2_Slow_O
   51 D1:CBB5 81 47 D4 -  	.dl Vines_3_Slow
   52 D1:CBB8 31 48 D4 -  	.dl Vines_5_Slow
   53 D1:CBBB D5 49 D4 -  	.dl Vines_4_Slow_F
   54 D1:CBBE 8D 4A D4 -  	.dl Vines_1_Slow_O
   55 D1:CBC1 23 49 D4 -  	.dl Vines_9_Slow
   56 D1:CBC4 19 4B D4 -  	.dl Vines_9_Slow_O_F
   57 D1:CBC7 CB 4B D4 -  	.dl Vines_3_Slow_F
   58 D1:CBCA EE 41 D4 -  	.dl Branches_4_Fast_F
   59 D1:CBCD 8C 42 D4 -  	.dl Branches_7_Fast_F
   60 D1:CBD0 06 43 D4 -  	.dl Branches_12_Fast_F
   61 D1:CBD3 61 43 D4 -  	.dl Leaves_4_Slow_O
   62 D1:CBD6 5F 05 D4 -  	.dl Vines_2_Slow_F
   63 D1:CBD9 39 06 D4 -  	.dl Vines_1_Slow
   64 D1:CBDC 97 57 D4 -  	.dl Vines_8_Slow_O
   65 D1:CBDF 5D 58 D4 -  	.dl Vines_8_Slow_O_F
   66 D1:CBE2 23 59 D4 -  	.dl Vines_6_Slow
   67 D1:CBE5 E8 03 D4 -  	.dl Branches_8_Fast_F
   68 D1:CBE8 47 04 D4 -  	.dl Branches_15_Slow
   69 D1:CBEB 3A 32 D4 -  	.dl Branches_5_Fast
   70 D1:CBEE DA 32 D4 -  	.dl Branches_4_Fast
   71 D1:CBF1 7B 4C D4 -  	.dl Vines_8_Slow_F
   72 D1:CBF4 C9 06 D4 -  	.dl Vines_9_Slow_O
   73 D1:CBF7 B8 04 D4 -  	.dl Branches_3_Fast
   74 D1:CBFA 78 33 D4 -  	.dl Branches_2_Fast
   75 D1:CBFD 21 34 D4 -  	.dl Vines_3_Slow_O
   76 D1:CC00 45 4D D4 -  	.dl Branches_9_Slow_O
   77 D1:CC03 CE 4E D4 -  	.dl Tree_2_Fast
   78 D1:CC06 CA 4F D4 -  	.dl Tree_4_Fast
   79 D1:CC09 CC 50 D4 -  	.dl Tree_7_Fast
   80 D1:CC0C CE 51 D4 -  	.dl Tree_9_Fast
   81 D1:CC0F D0 52 D4 -  	.dl Tree_6_Fast_F
   82 D1:CC12 D2 53 D4 -  	.dl Tree_3_Fast_F
   83 D1:CC15 7A 07 D4 -  	.dl Tree_0_Fast_F
   84 D1:CC18 76 08 D4 -  	.dl Tree_3_Fast
   85 D1:CC1B 78 09 D4 -  	.dl Tree_8_Fast
   86 D1:CC1E 7A 0A D4 -  	.dl Tree_9_Fast_F
   87 D1:CC21 7C 0B D4 -  	.dl Tree_8_Fast_F
   88 D1:CC24 7E 0C D4 -  	.dl Tree_4_Fast_F
   89 D1:CC27 80 0D D4 -  	.dl Tree_0_Fast
   90 D1:CC2A 7C 0E D4 -  	.dl Tree_6_Fast
   91 D1:CC2D 7E 0F D4 -  	.dl Tree_10_Fast
   92 D1:CC30 80 10 D4 -  	.dl Tree_7_Fast_F
   93 D1:CC33 82 11 D4 -  	.dl Tree_1_Fast_F
   94 D1:CC36 80 12 D4 -  	.dl Tree_1_Fast
   95 D1:CC39 7E 13 D4 -  	.dl Tree_5_Fast
   96 D1:CC3C 80 14 D4 -  	.dl Tree_11_Fast
   97 D1:CC3F 82 15 D4 -  	.dl Tree_5_Fast_F
   98 D1:CC42 84 16 D4 -  	.dl Tree_2_Fast_F
   99 D1:CC45 80 17 D4 -  	.dl Tree_11_Fast_F
  100 D1:CC48 82 18 D4 -  	.dl Branches_1_Fast
  101 D1:CC4B 1B 19 D4 -  	.dl Branches_2_Slow_O
  102 D1:CC4E FB 19 D4 -  	.dl Branches_3_Slow_O
  103 D1:CC51 D5 1A D4 -  	.dl Branches_5_Slow_O
  104 D1:CC54 A5 1B D4 -  	.dl Leaves_3_Slow_O
  105 D1:CC57 11 1C D4 -  	.dl Vines_7_Slow
  106 D1:CC5A D1 1C D4 -  	.dl Vines_5_Slow_O_F
  107 D1:CC5D BF 1D D4 -  	.dl Vines_3_Slow_O_F
  108 D1:CC60 75 1E D4 -  	.dl Vines_4_Slow_O
  109 D1:CC63 27 1F D4 -  	.dl Vines_10_Slow
  110 D1:CC66 E9 1F D4 -  	.dl Vines_7_Slow_F
  111 D1:CC69 A9 20 D4 -  	.dl Vines_2_Slow
  112 D1:CC6C 85 21 D4 -  	.dl Leaves_2_Slow
  113 D1:CC6F F5 4D D4 -  	.dl Vines_2_Slow_O_F
  114 D1:CC72 EE 21 D4 -  	.dl Branches_1_Fast_F
  115 D1:CC75 86 22 D4 -  	.dl Branches_2_Fast_F
  116 D1:CC78 30 23 D4 -  	.dl Branches_5_Fast_F
  117 D1:CC7B D1 23 D4 -  	.dl Branches_14_Slow
  118 D1:CC7E 3D 24 D4 -  	.dl Vines_10_Slow_O
  119 D1:CC81 FC 24 D4 -  	.dl Branches_0_Fast
  120 D1:CC84 D3 54 D4 -  	.dl Branches_1_Slow_O
  121 D1:CC87 99 55 D4 -  	.dl Branches_4_Slow_O
  122 D1:CC8A 65 56 D4 -  	.dl Leaves_3_Slow_O_F
  123 D1:CC8D D3 56 D4 -  	.dl Vines_7_Slow_O
  124 D1:CC90 DA 59 D4 -  	.dl Branches_0_Fast_F
  125 D1:CC93 72 5A D4 -  	.dl Branches_9_Fast_F
  126 D1:CC96 94 25 D4 -  	.dl GroundDirtDark_Fast
  127 D1:CC99 1A 26 D4 -  	.dl GroundDirtDark_Fast_F
  128 D1:CC9C A0 26 D4 -  	.dl GroundHumpDark_Fast
  129 D1:CC9F 26 27 D4 -  	.dl GroundHumpDark_Fast_F
  130 D1:CCA2 FC 28 D4 -  	.dl Tree_16_Fast
  131 D1:CCA5 51 29 D4 -  	.dl Tree_17_Slow_O
  132 D1:CCA8 B9 29 D4 -  	.dl Tree_17_Slow_O_F
  133 D1:CCAB A5 2A D4 -  	.dl Tree_16_Slow_O
  134 D1:CCAE 2B 2B D4 -  	.dl Tree_17_Slow_F
  135 D1:CCB1 1E 2A D4 -  	.dl Leaves_8_Fast
  136 D1:CCB4 93 2B D4 -  	.dl Tree_18_Slow_O
  137 D1:CCB7 F7 2B D4 -  	.dl Tree_17_Slow
  138 D1:CCBA 5D 2C D4 -  	.dl Tree_18_Slow_F
  139 D1:CCBD C1 2C D4 -  	.dl Tree_16_Slow_O_F
  140 D1:CCC0 47 2D D4 -  	.dl Leaves_2_Slow_F
  141 D1:CCC3 AE 2D D4 -  	.dl Clouds_0_Fast
  142 D1:CCC6 14 2E D4 -  	.dl Clouds_1_Fast
  143 D1:CCC9 78 2E D4 -  	.dl Clouds_3_Fast
  144 D1:CCCC E4 2E D4 -  	.dl Clouds_4_Fast
  145 D1:CCCF 24 2F D4 -  	.dl Clouds_2_Fast
  146 D1:CCD2 C0 01 D4 -  	.dl Clouds_0_Fast_F
  147 D1:CCD5 26 02 D4 -  	.dl Clouds_1_Fast_F
  148 D1:CCD8 8A 02 D4 -  	.dl Clouds_4_Fast_F
  149 D1:CCDB CA 02 D4 -  	.dl Clouds_3_Fast_F
  150 D1:CCDE 36 03 D4 -  	.dl Clouds_2_Fast_F
  151 D1:CCE1 AC 27 D4 -  	.dl GroundGrassSmall_Fast
  152 D1:CCE4 54 28 D4 -  	.dl GroundGrassSmall_Fast_F
  153 D1:CCE7 -  -  -  -  
  154 D1:CCE7 -  -  -  -  Sprite_Table_1:
  155 D1:CCE7 -  -  -  -  
Listing for file "ascent.asm"
  546 D1:CCE7 -  -  -  -  #include "generated/Sprite_Data.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Data.txt"
    1 D1:CCE7 -  -  -  -  GroundDirtFull:
    2 D1:CCE7 24 -  -  -  	.db %00100100
    3 D1:CCE8 10 10 -  -  	.db 16, 16
    4 D1:CCEA 15 00 -  -  	.db %00010101, %00000000
    5 D1:CCEC -  -  -  -  
    6 D1:CCEC 04 00 00 00 
              04 00 00 00 	.db %00000100, %00000000, %00000000, %00000000, %00000100, %00000000, %00000000, %00000000
    7 D1:CCF4 AA AA 40 4A 
              21 12 10 24 	.db %10101010, %10101010, %01000000, %01001010, %00100001, %00010010, %00010000, %00100100
    8 D1:CCFC 01 01 00 04 
              44 2A A8 10 	.db %00000001, %00000001, %00000000, %00000100, %01000100, %00101010, %10101000, %00010000
    9 D1:CD04 10 A5 0A 80 
              04 00 00 A1 	.db %00010000, %10100101, %00001010, %10000000, %00000100, %00000000, %00000000, %10100001
   10 D1:CD0C 84 40 00 61 
              10 10 00 10 	.db %10000100, %01000000, %00000000, %01100001, %00010000, %00010000, %00000000, %00010000
   11 D1:CD14 0A AA 94 00 
              29 10 12 84 	.db %00001010, %10101010, %10010100, %00000000, %00101001, %00010000, %00010010, %10000100
   12 D1:CD1C 10 00 42 84 
              01 29 00 80 	.db %00010000, %00000000, %01000010, %10000100, %00000001, %00101001, %00000000, %10000000
   13 D1:CD24 04 A1 40 8A 
              A0 00 00 00 	.db %00000100, %10100001, %01000000, %10001010, %10100000, %00000000, %00000000, %00000000
   14 D1:CD2C -  -  -  -  
   15 D1:CD2C -  -  -  -  
   16 D1:CD2C -  -  -  -  GroundDirtMound:
   17 D1:CD2C 20 -  -  -  	.db %00100000
   18 D1:CD2D 10 0C -  -  	.db 16, 12
   19 D1:CD2F 0F F0 3F FC 
              FF FF FF FF 	.db %00001111, %11110000, %00111111, %11111100, %11111111, %11111111, %11111111, %11111111
   20 D1:CD37 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   21 D1:CD3F FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   22 D1:CD47 -  -  -  -  
   23 D1:CD47 01 50 -  -  	.db %00000001, %01010000
   24 D1:CD49 -  -  -  -  
   25 D1:CD49 00 00 05 55 
              50 05 56 59 	.db %00000000, %00000000, %00000101, %01010101, %01010000, %00000101, %01010110, %01011001
   26 D1:CD51 50 55 96 5A 
              55 55 9A 56 	.db %01010000, %01010101, %10010110, %01011010, %01010101, %01010101, %10011010, %01010110
   27 D1:CD59 56 A5 54 00 
              01 59 55 65 	.db %01010110, %10100101, %01010100, %00000000, %00000001, %01011001, %01010101, %01100101
   28 D1:CD61 50 00 15 69 
              55 15 59 59 	.db %01010000, %00000000, %00010101, %01101001, %01010101, %00010101, %01011001, %01011001
   29 D1:CD69 65 56 50 05 
              66 55 41 41 	.db %01100101, %01010110, %01010000, %00000101, %01100110, %01010101, %01000001, %01000001
   30 D1:CD71 A6 65 95 55 
              95 -  -  -  	.db %10100110, %01100101, %10010101, %01010101, %10010101
   31 D1:CD76 -  -  -  -  
   32 D1:CD76 -  -  -  -  
   33 D1:CD76 -  -  -  -  GroundGrassL4:
   34 D1:CD76 08 -  -  -  	.db %00001000
   35 D1:CD77 0E 10 -  -  	.db 14, 16
   36 D1:CD79 0F C0 3F C0 
              FF 03 FC 3F 	.db %00001111, %11000000, %00111111, %11000000, %11111111, %00000011, %11111100, %00111111
   37 D1:CD81 F0 FF C3 FF 
              0F FC 3F F0 	.db %11110000, %11111111, %11000011, %11111111, %00001111, %11111100, %00111111, %11110000
   38 D1:CD89 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
   39 D1:CD91 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
   40 D1:CD95 -  -  -  -  
   41 D1:CD95 50 -  -  -  	.db %01010000
   42 D1:CD96 -  -  -  -  
   43 D1:CD96 -  -  -  -  
   44 D1:CD96 -  -  -  -  
   45 D1:CD96 -  -  -  -  GroundGrassL2:
   46 D1:CD96 08 -  -  -  	.db %00001000
   47 D1:CD97 0A 10 -  -  	.db 10, 16
   48 D1:CD99 03 00 C0 30 
              0C 03 03 C0 	.db %00000011, %00000000, %11000000, %00110000, %00001100, %00000011, %00000011, %11000000
   49 D1:CDA1 FC 3F 0F C3 
              C3 F0 FC 3F 	.db %11111100, %00111111, %00001111, %11000011, %11000011, %11110000, %11111100, %00111111
   50 D1:CDA9 0F CF F3 FC 	.db %00001111, %11001111, %11110011, %11111100
   51 D1:CDAD -  -  -  -  
   52 D1:CDAD 50 -  -  -  	.db %01010000
   53 D1:CDAE -  -  -  -  
   54 D1:CDAE -  -  -  -  
   55 D1:CDAE -  -  -  -  
   56 D1:CDAE -  -  -  -  GroundGrassL5:
   57 D1:CDAE 08 -  -  -  	.db %00001000
   58 D1:CDAF 10 10 -  -  	.db 16, 16
   59 D1:CDB1 00 3F 00 3F 
              00 FF 00 FF 	.db %00000000, %00111111, %00000000, %00111111, %00000000, %11111111, %00000000, %11111111
   60 D1:CDB9 03 FF 03 FF 
              0F FC 0F FC 	.db %00000011, %11111111, %00000011, %11111111, %00001111, %11111100, %00001111, %11111100
   61 D1:CDC1 3F FC 3F FC 
              3F FC 3F F0 	.db %00111111, %11111100, %00111111, %11111100, %00111111, %11111100, %00111111, %11110000
   62 D1:CDC9 FF F0 FF F0 
              FF F0 FF F0 	.db %11111111, %11110000, %11111111, %11110000, %11111111, %11110000, %11111111, %11110000
   63 D1:CDD1 -  -  -  -  
   64 D1:CDD1 50 -  -  -  	.db %01010000
   65 D1:CDD2 -  -  -  -  
   66 D1:CDD2 -  -  -  -  
   67 D1:CDD2 -  -  -  -  
   68 D1:CDD2 -  -  -  -  GroundGrassL3:
   69 D1:CDD2 08 -  -  -  	.db %00001000
   70 D1:CDD3 0E 0E -  -  	.db 14, 14
   71 D1:CDD5 C0 03 00 0C 
              00 3C 00 F0 	.db %11000000, %00000011, %00000000, %00001100, %00000000, %00111100, %00000000, %11110000
   72 D1:CDDD 03 F0 03 C0 
              0F C0 3F 0C 	.db %00000011, %11110000, %00000011, %11000000, %00001111, %11000000, %00111111, %00001100
   73 D1:CDE5 3C 30 FC C3 
              F3 03 FC 0F 	.db %00111100, %00110000, %11111100, %11000011, %11110011, %00000011, %11111100, %00001111
   74 D1:CDED F0 -  -  -  	.db %11110000
   75 D1:CDEE -  -  -  -  
   76 D1:CDEE 50 -  -  -  	.db %01010000
   77 D1:CDEF -  -  -  -  
   78 D1:CDEF -  -  -  -  
   79 D1:CDEF -  -  -  -  
   80 D1:CDEF -  -  -  -  GroundGrassL1:
   81 D1:CDEF 08 -  -  -  	.db %00001000
   82 D1:CDF0 0C 10 -  -  	.db 12, 16
   83 D1:CDF2 00 C0 0C C3 
              FC 3F F3 FF 	.db %00000000, %11000000, %00001100, %11000011, %11111100, %00111111, %11110011, %11111111
   84 D1:CDFA FF FF FF FF 
              3F F3 FF 3F 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11110011, %11111111, %00111111
   85 D1:CE02 C3 FC 0F 00 
              F0 0F 00 F0 	.db %11000011, %11111100, %00001111, %00000000, %11110000, %00001111, %00000000, %11110000
   86 D1:CE0A -  -  -  -  
   87 D1:CE0A 50 -  -  -  	.db %01010000
   88 D1:CE0B -  -  -  -  
   89 D1:CE0B -  -  -  -  
   90 D1:CE0B -  -  -  -  
   91 D1:CE0B -  -  -  -  Branches_10:
   92 D1:CE0B 20 -  -  -  	.db %00100000
   93 D1:CE0C 12 0E -  -  	.db 18, 14
   94 D1:CE0E 00 0F C0 0F 
              F0 0F FC 03 	.db %00000000, %00001111, %11000000, %00001111, %11110000, %00001111, %11111100, %00000011
   95 D1:CE16 FF 03 FF C3 
              FF F3 FF FF 	.db %11111111, %00000011, %11111111, %11000011, %11111111, %11110011, %11111111, %11111111
   96 D1:CE1E FF FC FF FC 
              3F FC 0F FC 	.db %11111111, %11111100, %11111111, %11111100, %00111111, %11111100, %00001111, %11111100
   97 D1:CE26 03 FC 00 FF 
              00 33 00 00 	.db %00000011, %11111100, %00000000, %11111111, %00000000, %00110011, %00000000, %00000000
   98 D1:CE2E -  -  -  -  
   99 D1:CE2E 01 23 -  -  	.db %00000001, %00100011
  100 D1:CE30 -  -  -  -  
  101 D1:CE30 04 60 46 F0 
              15 BE 14 2D 	.db %00000100, %01100000, %01000110, %11110000, %00010101, %10111110, %00010100, %00101101
  102 D1:CE38 50 15 E5 00 
              55 39 55 04 	.db %01010000, %00010101, %11100101, %00000000, %01010101, %00111001, %01010101, %00000100
  103 D1:CE40 4A A9 10 01 
              5A D8 40 55 	.db %01001010, %10101001, %00010000, %00000001, %01011010, %11011000, %01000000, %01010101
  104 D1:CE48 2F 85 01 4E 
              25 0B E8 50 	.db %00101111, %10000101, %00000001, %01001110, %00100101, %00001011, %11101000, %01010000
  105 D1:CE50 A9 10 50 40 
              00 -  -  -  	.db %10101001, %00010000, %01010000, %01000000, %00000000
  106 D1:CE55 -  -  -  -  
  107 D1:CE55 -  -  -  -  
  108 D1:CE55 -  -  -  -  Branches_9:
  109 D1:CE55 20 -  -  -  	.db %00100000
  110 D1:CE56 12 0E -  -  	.db 18, 14
  111 D1:CE58 00 30 C0 3F 
              F0 0F FC 0F 	.db %00000000, %00110000, %11000000, %00111111, %11110000, %00001111, %11111100, %00001111
  112 D1:CE60 FF 0F FF FF 
              FF FF FF FF 	.db %11111111, %00001111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  113 D1:CE68 FF FF FF FF 
              FF FF CF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11001111, %11111111
  114 D1:CE70 03 FF 00 FF 
              00 0C 00 00 	.db %00000011, %11111111, %00000000, %11111111, %00000000, %00001100, %00000000, %00000000
  115 D1:CE78 -  -  -  -  
  116 D1:CE78 01 23 -  -  	.db %00000001, %00100011
  117 D1:CE7A -  -  -  -  
  118 D1:CE7A 00 00 00 51 
              51 40 06 50 	.db %00000000, %00000000, %00000000, %01010001, %01010001, %01000000, %00000110, %01010000
  119 D1:CE82 55 04 58 AA 
              A0 01 51 FB 	.db %01010101, %00000100, %01011000, %10101010, %10100000, %00000001, %01010001, %11111011
  120 D1:CE8A BF 05 45 B9 
              65 05 05 BA 	.db %10111111, %00000101, %01000101, %10111001, %01100101, %00000101, %00000101, %10111010
  121 D1:CE92 50 11 BF BE 
              50 55 06 A9 	.db %01010000, %00010001, %10111111, %10111110, %01010000, %01010101, %00000110, %10101001
  122 D1:CE9A 44 40 00 14 
              15 05 15 40 	.db %01000100, %01000000, %00000000, %00010100, %00010101, %00000101, %00010101, %01000000
  123 D1:CEA2 04 00 00 -  	.db %00000100, %00000000, %00000000
  124 D1:CEA5 -  -  -  -  
  125 D1:CEA5 -  -  -  -  
  126 D1:CEA5 -  -  -  -  Branches_16:
  127 D1:CEA5 20 -  -  -  	.db %00100000
  128 D1:CEA6 0D 0D -  -  	.db 13, 13
  129 D1:CEA8 07 F8 3F 83 
              FC 1F C0 FC 	.db %00000111, %11111000, %00111111, %10000011, %11111100, %00011111, %11000000, %11111100
  130 D1:CEB0 0F C0 7C 07 
              C0 3C 03 C0 	.db %00001111, %11000000, %01111100, %00000111, %11000000, %00111100, %00000011, %11000000
  131 D1:CEB8 1E 01 E0 0C 
              00 00 -  -  	.db %00011110, %00000001, %11100000, %00001100, %00000000, %00000000
  132 D1:CEBE -  -  -  -  
  133 D1:CEBE 01 23 -  -  	.db %00000001, %00100011
  134 D1:CEC0 -  -  -  -  
  135 D1:CEC0 16 A4 12 D0 
              43 50 6C 00 	.db %00010110, %10100100, %00010010, %11010000, %01000011, %01010000, %01101100, %00000000
  136 D1:CEC8 94 0A 01 40 
              64 24 18 14 	.db %10010100, %00001010, %00000001, %01000000, %01100100, %00100100, %00011000, %00010100
  137 D1:CED0 10 00 -  -  	.db %00010000, %00000000
  138 D1:CED2 -  -  -  -  
  139 D1:CED2 -  -  -  -  
  140 D1:CED2 -  -  -  -  Branches_13:
  141 D1:CED2 20 -  -  -  	.db %00100000
  142 D1:CED3 0E 06 -  -  	.db 14, 6
  143 D1:CED5 00 0C 33 FF 
              FF FF FF 3F 	.db %00000000, %00001100, %00110011, %11111111, %11111111, %11111111, %11111111, %00111111
  144 D1:CEDD FC 03 F0 -  	.db %11111100, %00000011, %11110000
  145 D1:CEE0 -  -  -  -  
  146 D1:CEE0 01 20 -  -  	.db %00000001, %00100000
  147 D1:CEE2 -  -  -  -  
  148 D1:CEE2 00 00 10 00 
              01 59 08 45 	.db %00000000, %00000000, %00010000, %00000000, %00000001, %01011001, %00001000, %01000101
  149 D1:CEEA AA 50 00 15 
              60 00 -  -  	.db %10101010, %01010000, %00000000, %00010101, %01100000, %00000000
  150 D1:CEF0 -  -  -  -  
  151 D1:CEF0 -  -  -  -  
  152 D1:CEF0 -  -  -  -  Leaves_3:
  153 D1:CEF0 10 -  -  -  	.db %00010000
  154 D1:CEF1 0B 0C -  -  	.db 11, 12
  155 D1:CEF3 78 0F C1 FC 
              1F 81 F8 1F 	.db %01111000, %00001111, %11000001, %11111100, %00011111, %10000001, %11111000, %00011111
  156 D1:CEFB 80 F1 DE 7F 
              8F F3 F8 7C 	.db %10000000, %11110001, %11011110, %01111111, %10001111, %11110011, %11111000, %01111100
  157 D1:CF03 00 -  -  -  	.db %00000000
  158 D1:CF04 -  -  -  -  
  159 D1:CF04 45 -  -  -  	.db %01000101
  160 D1:CF05 -  -  -  -  
  161 D1:CF05 02 08 18 20 
              8C 00 08 60 	.db %00000010, %00001000, %00011000, %00100000, %10001100, %00000000, %00001000, %01100000
  162 D1:CF0D 40 00 -  -  	.db %01000000, %00000000
  163 D1:CF0F -  -  -  -  
  164 D1:CF0F -  -  -  -  
  165 D1:CF0F -  -  -  -  Leaves_7:
  166 D1:CF0F 10 -  -  -  	.db %00010000
  167 D1:CF10 10 0E -  -  	.db 16, 14
  168 D1:CF12 03 C0 0F F0 
              3F FC 3F FC 	.db %00000011, %11000000, %00001111, %11110000, %00111111, %11111100, %00111111, %11111100
  169 D1:CF1A FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  170 D1:CF22 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  171 D1:CF2A FF FC 30 30 	.db %11111111, %11111100, %00110000, %00110000
  172 D1:CF2E -  -  -  -  
  173 D1:CF2E 45 -  -  -  	.db %01000101
  174 D1:CF2F -  -  -  -  
  175 D1:CF2F 08 03 02 19 
              C0 1C 20 00 	.db %00001000, %00000011, %00000010, %00011001, %11000000, %00011100, %00100000, %00000000
  176 D1:CF37 3C 07 07 9C 
              00 60 44 00 	.db %00111100, %00000111, %00000111, %10011100, %00000000, %01100000, %01000100, %00000000
  177 D1:CF3F FC 03 80 F0 
              00 00 00 -  	.db %11111100, %00000011, %10000000, %11110000, %00000000, %00000000, %00000000
  178 D1:CF46 -  -  -  -  
  179 D1:CF46 -  -  -  -  
  180 D1:CF46 -  -  -  -  Branches_6:
  181 D1:CF46 20 -  -  -  	.db %00100000
  182 D1:CF47 12 0B -  -  	.db 18, 11
  183 D1:CF49 37 3F 3F FF 
              FF FF FF FF 	.db %00110111, %00111111, %00111111, %11111111, %11111111, %11111111, %11111111, %11111111
  184 D1:CF51 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  185 D1:CF59 FF FF FF FF 
              FC FF F0 00 	.db %11111111, %11111111, %11111111, %11111111, %11111100, %11111111, %11110000, %00000000
  186 D1:CF61 0C -  -  -  	.db %00001100
  187 D1:CF62 -  -  -  -  
  188 D1:CF62 01 23 -  -  	.db %00000001, %00100011
  189 D1:CF64 -  -  -  -  
  190 D1:CF64 00 00 00 14 
              00 15 40 10 	.db %00000000, %00000000, %00000000, %00010100, %00000000, %00010101, %01000000, %00010000
  191 D1:CF6C 05 44 01 55 
              94 41 55 15 	.db %00000101, %01000100, %00000001, %01010101, %10010100, %01000001, %01010101, %00010101
  192 D1:CF74 2D CA 86 99 
              AA E6 BF FF 	.db %00101101, %11001010, %10000110, %10011001, %10101010, %11100110, %10111111, %11111111
  193 D1:CF7C FF C8 59 15 
              A6 A8 16 15 	.db %11111111, %11001000, %01011001, %00010101, %10100110, %10101000, %00010110, %00010101
  194 D1:CF84 01 54 15 41 
              55 00 14 00 	.db %00000001, %01010100, %00010101, %01000001, %01010101, %00000000, %00010100, %00000000
  195 D1:CF8C 00 00 00 00 	.db %00000000, %00000000, %00000000, %00000000
  196 D1:CF90 -  -  -  -  
  197 D1:CF90 -  -  -  -  
  198 D1:CF90 -  -  -  -  Branches_7:
  199 D1:CF90 20 -  -  -  	.db %00100000
  200 D1:CF91 12 0A -  -  	.db 18, 10
  201 D1:CF93 FF 3C FF FF 
              FF FF FF FF 	.db %11111111, %00111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  202 D1:CF9B FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  203 D1:CFA3 FF FF FF F3 
              C3 C0 F0 -  	.db %11111111, %11111111, %11111111, %11110011, %11000011, %11000000, %11110000
  204 D1:CFAA -  -  -  -  
  205 D1:CFAA 01 23 -  -  	.db %00000001, %00100011
  206 D1:CFAC -  -  -  -  
  207 D1:CFAC 00 00 00 00 
              55 40 01 00 	.db %00000000, %00000000, %00000000, %00000000, %01010101, %01000000, %00000001, %00000000
  208 D1:CFB4 90 01 55 45 
              51 15 55 05 	.db %10010000, %00000001, %01010101, %01000101, %01010001, %00010101, %01010101, %00000101
  209 D1:CFBC 00 AB FA 9D 
              FA AF AA FB 	.db %00000000, %10101011, %11111010, %10011101, %11111010, %10101111, %10101010, %11111011
  210 D1:CFC4 AA BF 05 51 
              55 51 55 44 	.db %10101010, %10111111, %00000101, %01010001, %01010101, %01010001, %01010101, %01000100
  211 D1:CFCC 15 10 44 00 
              00 00 05 00 	.db %00010101, %00010000, %01000100, %00000000, %00000000, %00000000, %00000101, %00000000
  212 D1:CFD4 00 -  -  -  	.db %00000000
  213 D1:CFD5 -  -  -  -  
  214 D1:CFD5 -  -  -  -  
  215 D1:CFD5 -  -  -  -  Branches_15:
  216 D1:CFD5 20 -  -  -  	.db %00100000
  217 D1:CFD6 09 0E -  -  	.db 9, 14
  218 D1:CFD8 80 60 38 1E 
              07 C3 F1 FE 	.db %10000000, %01100000, %00111000, %00011110, %00000111, %11000011, %11110001, %11111110
  219 D1:CFE0 7F 1F 87 C1 
              E0 F0 18 0C 	.db %01111111, %00011111, %10000111, %11000001, %11100000, %11110000, %00011000, %00001100
  220 D1:CFE8 -  -  -  -  
  221 D1:CFE8 01 23 -  -  	.db %00000001, %00100011
  222 D1:CFEA -  -  -  -  
  223 D1:CFEA 00 01 01 00 
              64 00 84 01 	.db %00000000, %00000001, %00000001, %00000000, %01100100, %00000000, %10000100, %00000001
  224 D1:CFF2 A1 06 90 6C 
              68 10 40 -  	.db %10100001, %00000110, %10010000, %01101100, %01101000, %00010000, %01000000
  225 D1:CFF9 -  -  -  -  
  226 D1:CFF9 -  -  -  -  
  227 D1:CFF9 -  -  -  -  Branches_8:
  228 D1:CFF9 20 -  -  -  	.db %00100000
  229 D1:CFFA 0A 0E -  -  	.db 10, 14
  230 D1:CFFC 03 C3 F3 FC 
              FF 3F FF FF 	.db %00000011, %11000011, %11110011, %11111100, %11111111, %00111111, %11111111, %11111111
  231 D1:D004 FF FF FF 3F 
              CF F3 F0 F0 	.db %11111111, %11111111, %11111111, %00111111, %11001111, %11110011, %11110000, %11110000
  232 D1:D00C 3C 00 -  -  	.db %00111100, %00000000
  233 D1:D00E -  -  -  -  
  234 D1:D00E 01 23 -  -  	.db %00000001, %00100011
  235 D1:D010 -  -  -  -  
  236 D1:D010 06 00 60 12 
              90 5B 51 1A 	.db %00000110, %00000000, %01100000, %00010010, %10010000, %01011011, %01010001, %00011010
  237 D1:D018 50 51 94 11 
              F9 45 6E 50 	.db %01010000, %01010001, %10010100, %00010001, %11111001, %01000101, %01101110, %01010000
  238 D1:D020 4B 84 5E 54 
              B8 50 A1 01 	.db %01001011, %10000100, %01011110, %01010100, %10111000, %01010000, %10100001, %00000001
  239 D1:D028 44 40 -  -  	.db %01000100, %01000000
  240 D1:D02A -  -  -  -  
  241 D1:D02A -  -  -  -  
  242 D1:D02A -  -  -  -  Branches_12:
  243 D1:D02A 20 -  -  -  	.db %00100000
  244 D1:D02B 12 0A -  -  	.db 18, 10
  245 D1:D02D 00 00 C0 3F 
              F0 FF FF FF 	.db %00000000, %00000000, %11000000, %00111111, %11110000, %11111111, %11111111, %11111111
  246 D1:D035 FF FF FF FF 
              FF FF FF FC 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111100
  247 D1:D03D 0F FF 00 0F 
              C0 00 F0 -  	.db %00001111, %11111111, %00000000, %00001111, %11000000, %00000000, %11110000
  248 D1:D044 -  -  -  -  
  249 D1:D044 01 23 -  -  	.db %00000001, %00100011
  250 D1:D046 -  -  -  -  
  251 D1:D046 00 00 00 00 
              05 54 50 01 	.db %00000000, %00000000, %00000000, %00000000, %00000101, %01010100, %01010000, %00000001
  252 D1:D04E 45 04 16 3A 
              5F 2A F8 F2 	.db %01000101, %00000100, %00010110, %00111010, %01011111, %00101010, %11111000, %11110010
  253 D1:D056 12 9A C5 6A 
              00 00 15 06 	.db %00010010, %10011010, %11000101, %01101010, %00000000, %00000000, %00010101, %00000110
  254 D1:D05E 90 00 14 10 
              14 00 -  -  	.db %10010000, %00000000, %00010100, %00010000, %00010100, %00000000
  255 D1:D064 -  -  -  -  
  256 D1:D064 -  -  -  -  
  257 D1:D064 -  -  -  -  Leaves_2:
  258 D1:D064 10 -  -  -  	.db %00010000
  259 D1:D065 0C 09 -  -  	.db 12, 9
  260 D1:D067 01 C0 1C 0F 
              C0 F7 6F 7F 	.db %00000001, %11000000, %00011100, %00001111, %11000000, %11110111, %01101111, %01111111
  261 D1:D06F C2 E7 0E 70 
              06 00 -  -  	.db %11000010, %11100111, %00001110, %01110000, %00000110, %00000000
  262 D1:D075 -  -  -  -  
  263 D1:D075 45 -  -  -  	.db %01000101
  264 D1:D076 -  -  -  -  
  265 D1:D076 0D 06 00 22 
              8F 0C 00 -  	.db %00001101, %00000110, %00000000, %00100010, %10001111, %00001100, %00000000
  266 D1:D07D -  -  -  -  
  267 D1:D07D -  -  -  -  
  268 D1:D07D -  -  -  -  Leaves_4:
  269 D1:D07D 10 -  -  -  	.db %00010000
  270 D1:D07E 0E 0B -  -  	.db 14, 11
  271 D1:D080 01 80 1F 83 
              7F 1F FC FF 	.db %00000001, %10000000, %00011111, %10000011, %01111111, %00011111, %11111100, %11111111
  272 D1:D088 F3 F7 FF 9F 
              FE 7F F1 FF 	.db %11110011, %11110111, %11111111, %10011111, %11111110, %01111111, %11110001, %11111111
  273 D1:D090 83 F0 03 C0 	.db %10000011, %11110000, %00000011, %11000000
  274 D1:D094 -  -  -  -  
  275 D1:D094 54 -  -  -  	.db %01010100
  276 D1:D095 -  -  -  -  
  277 D1:D095 33 EF F3 7F 
              77 FF 7E FB 	.db %00110011, %11101111, %11110011, %01111111, %01110111, %11111111, %01111110, %11111011
  278 D1:D09D DF BD FD FE 
              F8 -  -  -  	.db %11011111, %10111101, %11111101, %11111110, %11111000
  279 D1:D0A2 -  -  -  -  
  280 D1:D0A2 -  -  -  -  
  281 D1:D0A2 -  -  -  -  Branches_11:
  282 D1:D0A2 20 -  -  -  	.db %00100000
  283 D1:D0A3 12 0A -  -  	.db 18, 10
  284 D1:D0A5 00 03 C3 CF 
              FF FF FF FF 	.db %00000000, %00000011, %11000011, %11001111, %11111111, %11111111, %11111111, %11111111
  285 D1:D0AD FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  286 D1:D0B5 FF FF 03 F3 
              C0 00 30 -  	.db %11111111, %11111111, %00000011, %11110011, %11000000, %00000000, %00110000
  287 D1:D0BC -  -  -  -  
  288 D1:D0BC 01 32 -  -  	.db %00000001, %00110010
  289 D1:D0BE -  -  -  -  
  290 D1:D0BE 00 00 00 15 
              00 00 05 44 	.db %00000000, %00000000, %00000000, %00010101, %00000000, %00000000, %00000101, %01000100
  291 D1:D0C6 15 65 55 04 
              10 FB FA 3F 	.db %00010101, %01100101, %01010101, %00000100, %00010000, %11111011, %11111010, %00111111
  292 D1:D0CE FF B7 D3 FB 
              EA BE 15 54 	.db %11111111, %10110111, %11010011, %11111011, %11101010, %10111110, %00010101, %01010100
  293 D1:D0D6 14 15 E0 00 
              14 10 15 00 	.db %00010100, %00010101, %11100000, %00000000, %00010100, %00010000, %00010101, %00000000
  294 D1:D0DE 00 10 -  -  	.db %00000000, %00010000
  295 D1:D0E0 -  -  -  -  
  296 D1:D0E0 -  -  -  -  
  297 D1:D0E0 -  -  -  -  Branches_14:
  298 D1:D0E0 20 -  -  -  	.db %00100000
  299 D1:D0E1 06 0E -  -  	.db 6, 14
  300 D1:D0E3 30 C3 0C 39 
              E7 9E FF FF 	.db %00110000, %11000011, %00001100, %00111001, %11100111, %10011110, %11111111, %11111111
  301 D1:D0EB FF FF F0 -  	.db %11111111, %11111111, %11110000
  302 D1:D0EE -  -  -  -  
  303 D1:D0EE 01 23 -  -  	.db %00000001, %00100011
  304 D1:D0F0 -  -  -  -  
  305 D1:D0F0 00 00 10 20 
              20 20 1D 06 	.db %00000000, %00000000, %00010000, %00100000, %00100000, %00100000, %00011101, %00000110
  306 D1:D0F8 90 65 06 10 
              59 07 90 -  	.db %10010000, %01100101, %00000110, %00010000, %01011001, %00000111, %10010000
  307 D1:D0FF -  -  -  -  
  308 D1:D0FF -  -  -  -  
  309 D1:D0FF -  -  -  -  Leaves_6:
  310 D1:D0FF 10 -  -  -  	.db %00010000
  311 D1:D100 0D 0D -  -  	.db 13, 13
  312 D1:D102 60 1F C1 FF 
              0E FE F3 FF 	.db %01100000, %00011111, %11000001, %11111111, %00001110, %11111110, %11110011, %11111111
  313 D1:D10A 87 F8 1F 80 
              3C 01 E0 07 	.db %10000111, %11111000, %00011111, %10000000, %00111100, %00000001, %11100000, %00000111
  314 D1:D112 80 3C 00 E0 
              03 00 -  -  	.db %10000000, %00111100, %00000000, %11100000, %00000011, %00000000
  315 D1:D118 -  -  -  -  
  316 D1:D118 54 -  -  -  	.db %01010100
  317 D1:D119 -  -  -  -  
  318 D1:D119 00 24 36 04 
              01 98 00 00 	.db %00000000, %00100100, %00110110, %00000100, %00000001, %10011000, %00000000, %00000000
  319 D1:D121 46 60 -  -  	.db %01000110, %01100000
  320 D1:D123 -  -  -  -  
  321 D1:D123 -  -  -  -  
  322 D1:D123 -  -  -  -  Branches_4:
  323 D1:D123 20 -  -  -  	.db %00100000
  324 D1:D124 12 0E -  -  	.db 18, 14
  325 D1:D126 00 03 CF FF 
              FF FF FF FF 	.db %00000000, %00000011, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111
  326 D1:D12E FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  327 D1:D136 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  328 D1:D13E FF FF FF 3F 
              FF C0 FF 30 	.db %11111111, %11111111, %11111111, %00111111, %11111111, %11000000, %11111111, %00110000
  329 D1:D146 -  -  -  -  
  330 D1:D146 01 23 -  -  	.db %00000001, %00100011
  331 D1:D148 -  -  -  -  
  332 D1:D148 00 00 00 00 
              00 00 50 45 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %01010000, %01000101
  333 D1:D150 01 55 50 00 
              25 00 14 16 	.db %00000001, %01010101, %01010000, %00000000, %00100101, %00000000, %00010100, %00010110
  334 D1:D158 11 45 5A 19 
              2A AA 58 3F 	.db %00010001, %01000101, %01011010, %00011001, %00101010, %10101010, %01011000, %00111111
  335 D1:D160 AA AA AF FE 
              BD FF DF E2 	.db %10101010, %10101010, %10101111, %11111110, %10111101, %11111111, %11011111, %11100010
  336 D1:D168 55 64 02 AA 
              60 00 05 50 	.db %01010101, %01100100, %00000010, %10101010, %01100000, %00000000, %00000101, %01010000
  337 D1:D170 54 15 54 00 
              00 00 00 05 	.db %01010100, %00010101, %01010100, %00000000, %00000000, %00000000, %00000000, %00000101
  338 D1:D178 10 55 00 00 
              00 00 00 00 	.db %00010000, %01010101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  339 D1:D180 00 -  -  -  	.db %00000000
  340 D1:D181 -  -  -  -  
  341 D1:D181 -  -  -  -  
  342 D1:D181 -  -  -  -  Vines_8:
  343 D1:D181 10 -  -  -  	.db %00010000
  344 D1:D182 0A 18 -  -  	.db 10, 24
  345 D1:D184 07 01 C1 F0 
              3C 07 01 C1 	.db %00000111, %00000001, %11000001, %11110000, %00111100, %00000111, %00000001, %11000001
  346 D1:D18C FC 3B 0E 03 
              80 E0 38 0E 	.db %11111100, %00111011, %00001110, %00000011, %10000000, %11100000, %00111000, %00001110
  347 D1:D194 07 A1 FB 78 
              FC 07 03 80 	.db %00000111, %10100001, %11111011, %01111000, %11111100, %00000111, %00000011, %10000000
  348 D1:D19C E0 3E 0D 87 
              01 C0 -  -  	.db %11100000, %00111110, %00001101, %10000111, %00000001, %11000000
  349 D1:D1A2 -  -  -  -  
  350 D1:D1A2 45 -  -  -  	.db %01000101
  351 D1:D1A3 -  -  -  -  
  352 D1:D1A3 24 66 D8 F7 
              B6 DB 3B E3 	.db %00100100, %01100110, %11011000, %11110111, %10110110, %11011011, %00111011, %11100011
  353 D1:D1AB 86 C9 7B B6 	.db %10000110, %11001001, %01111011, %10110110
  354 D1:D1AF -  -  -  -  
  355 D1:D1AF -  -  -  -  
  356 D1:D1AF -  -  -  -  Vines_2:
  357 D1:D1AF 10 -  -  -  	.db %00010000
  358 D1:D1B0 16 13 -  -  	.db 22, 19
  359 D1:D1B2 00 00 04 00 
              00 30 00 39 	.db %00000000, %00000000, %00000100, %00000000, %00000000, %00110000, %00000000, %00111001
  360 D1:D1BA C0 00 6F 00 
              10 78 00 63 	.db %11000000, %00000000, %01101111, %00000000, %00010000, %01111000, %00000000, %01100011
  361 D1:D1C2 C0 01 9F 00 
              07 F0 00 0F 	.db %11000000, %00000001, %10011111, %00000000, %00000111, %11110000, %00000000, %00001111
  362 D1:D1CA C0 00 7D 80 
              63 E6 01 DF 	.db %11000000, %00000000, %01111101, %10000000, %01100011, %11100110, %00000001, %11011111
  363 D1:D1D2 80 01 F6 00 
              0F 80 00 F8 	.db %10000000, %00000001, %11110110, %00000000, %00001111, %10000000, %00000000, %11111000
  364 D1:D1DA 00 1F F8 00 
              3C E0 01 E0 	.db %00000000, %00011111, %11111000, %00000000, %00111100, %11100000, %00000001, %11100000
  365 D1:D1E2 00 0E 00 00 
              00 -  -  -  	.db %00000000, %00001110, %00000000, %00000000, %00000000
  366 D1:D1E7 -  -  -  -  
  367 D1:D1E7 45 -  -  -  	.db %01000101
  368 D1:D1E8 -  -  -  -  
  369 D1:D1E8 21 86 30 C3 
              83 3C F8 7C 	.db %00100001, %10000110, %00110000, %11000011, %10000011, %00111100, %11111000, %01111100
  370 D1:D1F0 1E 7C E7 0F 
              CF 9B -  -  	.db %00011110, %01111100, %11100111, %00001111, %11001111, %10011011
  371 D1:D1F6 -  -  -  -  
  372 D1:D1F6 -  -  -  -  
  373 D1:D1F6 -  -  -  -  Vines_3:
  374 D1:D1F6 10 -  -  -  	.db %00010000
  375 D1:D1F7 18 10 -  -  	.db 24, 16
  376 D1:D1F9 00 00 01 00 
              00 03 00 00 	.db %00000000, %00000000, %00000001, %00000000, %00000000, %00000011, %00000000, %00000000
  377 D1:D201 37 00 00 3E 
              00 00 1C 00 	.db %00110111, %00000000, %00000000, %00111110, %00000000, %00000000, %00011100, %00000000
  378 D1:D209 10 78 00 30 
              F8 00 1F EC 	.db %00010000, %01111000, %00000000, %00110000, %11111000, %00000000, %00011111, %11101100
  379 D1:D211 18 0F CC 18 
              3F 80 0B FE 	.db %00011000, %00001111, %11001100, %00011000, %00111111, %10000000, %00001011, %11111110
  380 D1:D219 00 FF F8 00 
              FF C0 00 01 	.db %00000000, %11111111, %11111000, %00000000, %11111111, %11000000, %00000000, %00000001
  381 D1:D221 00 00 03 00 
              00 03 00 00 	.db %00000000, %00000000, %00000011, %00000000, %00000000, %00000011, %00000000, %00000000
  382 D1:D229 -  -  -  -  
  383 D1:D229 45 -  -  -  	.db %01000101
  384 D1:D22A -  -  -  -  
  385 D1:D22A 03 1B 18 70 
              3C 1F 07 81 	.db %00000011, %00011011, %00011000, %01110000, %00111100, %00011111, %00000111, %10000001
  386 D1:D232 E0 7F FF FE 	.db %11100000, %01111111, %11111111, %11111110
  387 D1:D236 -  -  -  -  
  388 D1:D236 -  -  -  -  
  389 D1:D236 -  -  -  -  Vines_5:
  390 D1:D236 10 -  -  -  	.db %00010000
  391 D1:D237 14 17 -  -  	.db 20, 23
  392 D1:D239 00 00 30 00 
              1B 00 01 B0 	.db %00000000, %00000000, %00110000, %00000000, %00011011, %00000000, %00000001, %10110000
  393 D1:D241 00 07 00 00 
              F0 00 0E 00 	.db %00000000, %00000111, %00000000, %00000000, %11110000, %00000000, %00001110, %00000000
  394 D1:D249 31 C0 01 B8 
              00 0F 80 01 	.db %00110001, %11000000, %00000001, %10111000, %00000000, %00001111, %10000000, %00000001
  395 D1:D251 F0 00 3E 00 
              47 E0 0F F8 	.db %11110000, %00000000, %00111110, %00000000, %01000111, %11100000, %00001111, %11111000
  396 D1:D259 00 5F 00 03 
              E8 00 3C C0 	.db %00000000, %01011111, %00000000, %00000011, %11101000, %00000000, %00111100, %11000000
  397 D1:D261 0F 8C 00 F0 
              00 3D 00 07 	.db %00001111, %10001100, %00000000, %11110000, %00000000, %00111101, %00000000, %00000111
  398 D1:D269 D8 00 79 00 
              0F 00 00 E0 	.db %11011000, %00000000, %01111001, %00000000, %00001111, %00000000, %00000000, %11100000
  399 D1:D271 00 00 -  -  	.db %00000000, %00000000
  400 D1:D273 -  -  -  -  
  401 D1:D273 45 -  -  -  	.db %01000101
  402 D1:D274 -  -  -  -  
  403 D1:D274 00 59 B0 84 
              67 38 F0 38 	.db %00000000, %01011001, %10110000, %10000100, %01100111, %00111000, %11110000, %00111000
  404 D1:D27C E7 BE 7D C6 
              7D E6 C0 -  	.db %11100111, %10111110, %01111101, %11000110, %01111101, %11100110, %11000000
  405 D1:D283 -  -  -  -  
  406 D1:D283 -  -  -  -  
  407 D1:D283 -  -  -  -  Vines_9:
  408 D1:D283 10 -  -  -  	.db %00010000
  409 D1:D284 18 0B -  -  	.db 24, 11
  410 D1:D286 00 18 60 00 
              38 27 0C 27 	.db %00000000, %00011000, %01100000, %00000000, %00111000, %00100111, %00001100, %00100111
  411 D1:D28E FF 0C 3F FF 
              07 FF F8 1F 	.db %11111111, %00001100, %00111111, %11111111, %00000111, %11111111, %11111000, %00011111
  412 D1:D296 FE 08 7F F7 
              00 FE 43 00 	.db %11111110, %00001000, %01111111, %11110111, %00000000, %11111110, %01000011, %00000000
  413 D1:D29E F0 C0 00 E0 
              C0 00 C0 00 	.db %11110000, %11000000, %00000000, %11100000, %11000000, %00000000, %11000000, %00000000
  414 D1:D2A6 00 -  -  -  	.db %00000000
  415 D1:D2A7 -  -  -  -  
  416 D1:D2A7 45 -  -  -  	.db %01000101
  417 D1:D2A8 -  -  -  -  
  418 D1:D2A8 00 00 03 81 
              FF 81 FF 8F 	.db %00000000, %00000000, %00000011, %10000001, %11111111, %10000001, %11111111, %10001111
  419 D1:D2B0 FC 7F F3 FF 
              FF E0 -  -  	.db %11111100, %01111111, %11110011, %11111111, %11111111, %11100000
  420 D1:D2B6 -  -  -  -  
  421 D1:D2B6 -  -  -  -  
  422 D1:D2B6 -  -  -  -  Vines_4:
  423 D1:D2B6 10 -  -  -  	.db %00010000
  424 D1:D2B7 18 0D -  -  	.db 24, 13
  425 D1:D2B9 00 00 C7 00 
              00 DF 00 00 	.db %00000000, %00000000, %11000111, %00000000, %00000000, %11011111, %00000000, %00000000
  426 D1:D2C1 3F 00 00 FC 
              00 61 F8 20 	.db %00111111, %00000000, %00000000, %11111100, %00000000, %01100001, %11111000, %00100000
  427 D1:D2C9 6F E0 60 3F 
              80 41 FE 80 	.db %01101111, %11100000, %01100000, %00111111, %10000000, %01000001, %11111110, %10000000
  428 D1:D2D1 CF F8 C0 FF 
              C0 40 7C C0 	.db %11001111, %11111000, %11000000, %11111111, %11000000, %01000000, %01111100, %11000000
  429 D1:D2D9 00 01 80 00 
              00 80 00 -  	.db %00000000, %00000001, %10000000, %00000000, %00000000, %10000000, %00000000
  430 D1:D2E0 -  -  -  -  
  431 D1:D2E0 45 -  -  -  	.db %01000101
  432 D1:D2E1 -  -  -  -  
  433 D1:D2E1 00 33 C7 0F 
              01 C1 E0 F8 	.db %00000000, %00110011, %11000111, %00001111, %00000001, %11000001, %11100000, %11111000
  434 D1:D2E9 1F F1 FF FE 	.db %00011111, %11110001, %11111111, %11111110
  435 D1:D2ED -  -  -  -  
  436 D1:D2ED -  -  -  -  
  437 D1:D2ED -  -  -  -  Vines_1:
  438 D1:D2ED 10 -  -  -  	.db %00010000
  439 D1:D2EE 18 09 -  -  	.db 24, 9
  440 D1:D2F0 00 06 30 18 
              0E 33 F8 0C 	.db %00000000, %00000110, %00110000, %00011000, %00001110, %00110011, %11111000, %00001100
  441 D1:D2F8 1F FC 07 FF 
              FF FF F0 1F 	.db %00011111, %11111100, %00000111, %11111111, %11111111, %11111111, %11110000, %00011111
  442 D1:D300 FE 80 30 00 
              E0 30 00 60 	.db %11111110, %10000000, %00110000, %00000000, %11100000, %00110000, %00000000, %01100000
  443 D1:D308 30 00 00 -  	.db %00110000, %00000000, %00000000
  444 D1:D30B -  -  -  -  
  445 D1:D30B 45 -  -  -  	.db %01000101
  446 D1:D30C -  -  -  -  
  447 D1:D30C 00 00 00 F0 
              03 FF 00 FF 	.db %00000000, %00000000, %00000000, %11110000, %00000011, %11111111, %00000000, %11111111
  448 D1:D314 FF FF FC -  	.db %11111111, %11111111, %11111100
  449 D1:D317 -  -  -  -  
  450 D1:D317 -  -  -  -  
  451 D1:D317 -  -  -  -  Branches_5:
  452 D1:D317 20 -  -  -  	.db %00100000
  453 D1:D318 12 0E -  -  	.db 18, 14
  454 D1:D31A 00 C0 CF FF 
              FF FF FF FF 	.db %00000000, %11000000, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111
  455 D1:D322 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  456 D1:D32A FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  457 D1:D332 FF FF FF 3F 
              FF C3 C3 F0 	.db %11111111, %11111111, %11111111, %00111111, %11111111, %11000011, %11000011, %11110000
  458 D1:D33A -  -  -  -  
  459 D1:D33A 01 23 -  -  	.db %00000001, %00100011
  460 D1:D33C -  -  -  -  
  461 D1:D33C 00 00 00 00 
              01 00 05 05 	.db %00000000, %00000000, %00000000, %00000000, %00000001, %00000000, %00000101, %00000101
  462 D1:D344 41 41 45 40 
              00 01 15 45 	.db %01000001, %01000001, %01000101, %01000000, %00000000, %00000001, %00010101, %01000101
  463 D1:D34C 55 45 65 A5 
              AA 66 AA FA 	.db %01010101, %01000101, %01100101, %10100101, %10101010, %01100110, %10101010, %11111010
  464 D1:D354 F9 FF BF FE 
              AA F6 BA 99 	.db %11111001, %11111111, %10111111, %11111110, %10101010, %11110110, %10111010, %10011001
  465 D1:D35C 50 55 55 55 
              51 50 00 01 	.db %01010000, %01010101, %01010101, %01010101, %01010001, %01010000, %00000000, %00000001
  466 D1:D364 54 51 41 50 
              00 00 01 40 	.db %01010100, %01010001, %01000001, %01010000, %00000000, %00000000, %00000001, %01000000
  467 D1:D36C 15 45 00 00 
              00 00 00 00 	.db %00010101, %01000101, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  468 D1:D374 00 -  -  -  	.db %00000000
  469 D1:D375 -  -  -  -  
  470 D1:D375 -  -  -  -  
  471 D1:D375 -  -  -  -  Vines_6:
  472 D1:D375 10 -  -  -  	.db %00010000
  473 D1:D376 08 18 -  -  	.db 8, 24
  474 D1:D378 38 F8 F8 78 
              3E 3E 38 38 	.db %00111000, %11111000, %11111000, %01111000, %00111110, %00111110, %00111000, %00111000
  475 D1:D380 38 38 78 78 
              7C 3C 3C 3C 	.db %00111000, %00111000, %01111000, %01111000, %01111100, %00111100, %00111100, %00111100
  476 D1:D388 3E 1F 1C 1C 
              1F 1F 1C 1E 	.db %00111110, %00011111, %00011100, %00011100, %00011111, %00011111, %00011100, %00011110
  477 D1:D390 -  -  -  -  
  478 D1:D390 54 -  -  -  	.db %01010100
  479 D1:D391 -  -  -  -  
  480 D1:D391 56 D1 6F FB 
              25 5D C4 46 	.db %01010110, %11010001, %01101111, %11111011, %00100101, %01011101, %11000100, %01000110
  481 D1:D399 6F D2 5F F6 
              00 -  -  -  	.db %01101111, %11010010, %01011111, %11110110, %00000000
  482 D1:D39E -  -  -  -  
  483 D1:D39E -  -  -  -  
  484 D1:D39E -  -  -  -  Branches_3:
  485 D1:D39E 20 -  -  -  	.db %00100000
  486 D1:D39F 12 0E -  -  	.db 18, 14
  487 D1:D3A1 0F CF FF FF 
              FF FF FF FF 	.db %00001111, %11001111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  488 D1:D3A9 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  489 D1:D3B1 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  490 D1:D3B9 FF FF FF FF 
              3F FF 00 F0 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %00000000, %11110000
  491 D1:D3C1 -  -  -  -  
  492 D1:D3C1 01 23 -  -  	.db %00000001, %00100011
  493 D1:D3C3 -  -  -  -  
  494 D1:D3C3 00 00 00 00 
              50 00 15 55 	.db %00000000, %00000000, %00000000, %00000000, %01010000, %00000000, %00010101, %01010101
  495 D1:D3CB 50 15 00 00 
              00 00 00 65 	.db %01010000, %00010101, %00000000, %00000000, %00000000, %00000000, %00000000, %01100101
  496 D1:D3D3 05 98 A2 55 
              05 AA 32 AA 	.db %00000101, %10011000, %10100010, %01010101, %00000101, %10101010, %00110010, %10101010
  497 D1:D3DB BD 4B FF FF 
              FF BF EA 95 	.db %10111101, %01001011, %11111111, %11111111, %11111111, %10111111, %11101010, %10010101
  498 D1:D3E3 5E AA E6 55 
              A9 55 6A 56 	.db %01011110, %10101010, %11100110, %01010101, %10101001, %01010101, %01101010, %01010110
  499 D1:D3EB 40 12 50 00 
              00 50 01 54 	.db %01000000, %00010010, %01010000, %00000000, %00000000, %01010000, %00000001, %01010100
  500 D1:D3F3 15 54 00 15 
              40 00 00 00 	.db %00010101, %01010100, %00000000, %00010101, %01000000, %00000000, %00000000, %00000000
  501 D1:D3FB 40 00 00 -  	.db %01000000, %00000000, %00000000
  502 D1:D3FE -  -  -  -  
  503 D1:D3FE -  -  -  -  
  504 D1:D3FE -  -  -  -  Branches_2:
  505 D1:D3FE 20 -  -  -  	.db %00100000
  506 D1:D3FF 12 0E -  -  	.db 18, 14
  507 D1:D401 0F C3 FF FF 
              FF FF FF FF 	.db %00001111, %11000011, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  508 D1:D409 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  509 D1:D411 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  510 D1:D419 FF FF FF FF 
              FF F3 0F 30 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11110011, %00001111, %00110000
  511 D1:D421 -  -  -  -  
  512 D1:D421 01 32 -  -  	.db %00000001, %00110010
  513 D1:D423 -  -  -  -  
  514 D1:D423 00 00 00 00 
              50 00 00 05 	.db %00000000, %00000000, %00000000, %00000000, %01010000, %00000000, %00000000, %00000101
  515 D1:D42B 54 15 55 45 
              40 00 00 00 	.db %01010100, %00010101, %01010101, %01000101, %01000000, %00000000, %00000000, %00000000
  516 D1:D433 55 55 14 05 
              59 FF FD 55 	.db %01010101, %01010101, %00010100, %00000101, %01011001, %11111111, %11111101, %01010101
  517 D1:D43B 47 EA AA AE 
              FF EF FF F6 	.db %01000111, %11101010, %10101010, %10101110, %11111111, %11101111, %11111111, %11110110
  518 D1:D443 AA AA 5D 07 
              F4 FF F5 55 	.db %10101010, %10101010, %01011101, %00000111, %11110100, %11111111, %11110101, %01010101
  519 D1:D44B 05 55 75 15 
              15 55 00 00 	.db %00000101, %01010101, %01110101, %00010101, %00010101, %01010101, %00000000, %00000000
  520 D1:D453 01 00 05 50 
              00 40 05 50 	.db %00000001, %00000000, %00000101, %01010000, %00000000, %01000000, %00000101, %01010000
  521 D1:D45B 00 00 00 -  	.db %00000000, %00000000, %00000000
  522 D1:D45E -  -  -  -  
  523 D1:D45E -  -  -  -  
  524 D1:D45E -  -  -  -  Tree_2:
  525 D1:D45E 10 -  -  -  	.db %00010000
  526 D1:D45F 1A 10 -  -  	.db 26, 16
  527 D1:D461 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  528 D1:D469 FF FF FF FF 
              FF 3F FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  529 D1:D471 CF FF FF F3 
              FF FF FC FF 	.db %11001111, %11111111, %11111111, %11110011, %11111111, %11111111, %11111100, %11111111
  530 D1:D479 FF FF 3F FF 
              FF CF FF FF 	.db %11111111, %11111111, %00111111, %11111111, %11111111, %11001111, %11111111, %11111111
  531 D1:D481 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  532 D1:D489 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  533 D1:D491 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  534 D1:D495 -  -  -  -  
  535 D1:D495 01 -  -  -  	.db %00000001
  536 D1:D496 -  -  -  -  
  537 D1:D496 01 12 40 80 
              4C DD 30 33 	.db %00000001, %00010010, %01000000, %10000000, %01001100, %11011101, %00110000, %00110011
  538 D1:D49E 27 CC 02 51 
              E4 02 59 D9 	.db %00100111, %11001100, %00000010, %01010001, %11100100, %00000010, %01011001, %11011001
  539 D1:D4A6 08 69 D9 01 
              69 9B 07 69 	.db %00001000, %01101001, %11011001, %00000001, %01101001, %10011011, %00000111, %01101001
  540 D1:D4AE 1E 03 70 3E 
              03 D2 3E 00 	.db %00011110, %00000011, %01110000, %00111110, %00000011, %11010010, %00111110, %00000000
  541 D1:D4B6 A5 5C 80 F9 
              75 60 1C 6D 	.db %10100101, %01011100, %10000000, %11111001, %01110101, %01100000, %00011100, %01101101
  542 D1:D4BE 18 01 1B 86 
              02 46 69 41 	.db %00011000, %00000001, %00011011, %10000110, %00000010, %01000110, %01101001, %01000001
  543 D1:D4C6 91 82 40 -  	.db %10010001, %10000010, %01000000
  544 D1:D4C9 -  -  -  -  
  545 D1:D4C9 -  -  -  -  
  546 D1:D4C9 -  -  -  -  Tree_4:
  547 D1:D4C9 24 -  -  -  	.db %00100100
  548 D1:D4CA 1A 10 -  -  	.db 26, 16
  549 D1:D4CC 01 20 -  -  	.db %00000001, %00100000
  550 D1:D4CE -  -  -  -  
  551 D1:D4CE 14 45 40 15 
              54 25 61 44 	.db %00010100, %01000101, %01000000, %00010101, %01010100, %00100101, %01100001, %01000100
  552 D1:D4D6 14 05 55 00 
              41 11 01 45 	.db %00010100, %00000101, %01010101, %00000000, %01000001, %00010001, %00000001, %01000101
  553 D1:D4DE 50 54 24 21 
              10 00 95 05 	.db %01010000, %01010100, %00100100, %00100001, %00010000, %00000000, %10010101, %00000101
  554 D1:D4E6 41 41 11 00 
              09 10 94 15 	.db %01000001, %01000001, %00010001, %00000000, %00001001, %00010000, %10010100, %00010101
  555 D1:D4EE 11 11 00 95 
              09 49 45 10 	.db %00010001, %00010001, %00000000, %10010101, %00001001, %01001001, %01000101, %00010000
  556 D1:D4F6 01 09 50 94 
              95 51 00 50 	.db %00000001, %00001001, %01010000, %10010100, %10010101, %01010001, %00000000, %01010000
  557 D1:D4FE 95 09 49 45 
              40 45 09 40 	.db %10010101, %00001001, %01001001, %01000101, %01000000, %01000101, %00001001, %01000000
  558 D1:D506 90 95 54 01 
              50 A4 05 05 	.db %10010000, %10010101, %01010100, %00000001, %01010000, %10100100, %00000101, %00000101
  559 D1:D50E 54 44 45 0A 
              42 50 55 00 	.db %01010100, %01000100, %01000101, %00001010, %01000010, %01010000, %01010101, %00000000
  560 D1:D516 10 54 14 95 
              41 02 04 11 	.db %00010000, %01010100, %00010100, %10010101, %01000001, %00000010, %00000100, %00010001
  561 D1:D51E 52 49 51 00 
              20 51 11 10 	.db %01010010, %01001001, %01010001, %00000000, %00100000, %01010001, %00010001, %00010000
  562 D1:D526 91 50 A5 05 
              11 12 15 54 	.db %10010001, %01010000, %10100101, %00000101, %00010001, %00010010, %00010101, %01010100
  563 D1:D52E 09 54 04 51 
              01 54 40 25 	.db %00001001, %01010100, %00000100, %01010001, %00000001, %01010100, %01000000, %00100101
  564 D1:D536 -  -  -  -  
  565 D1:D536 -  -  -  -  
  566 D1:D536 -  -  -  -  Tree_7:
  567 D1:D536 24 -  -  -  	.db %00100100
  568 D1:D537 1A 10 -  -  	.db 26, 16
  569 D1:D539 10 23 -  -  	.db %00010000, %00100011
  570 D1:D53B -  -  -  -  
  571 D1:D53B 10 05 08 28 
              85 28 81 62 	.db %00010000, %00000101, %00001000, %00101000, %10000101, %00101000, %10000001, %01100010
  572 D1:D543 5A 08 88 5C 
              BA 05 81 60 	.db %01011010, %00001000, %10001000, %01011100, %10111010, %00000101, %10000001, %01100000
  573 D1:D54B 88 95 CA B1 
              58 06 A0 49 	.db %10001000, %10010101, %11001010, %10110001, %01011000, %00000110, %10100000, %01001001
  574 D1:D553 62 89 51 68 
              48 60 16 2A 	.db %01100010, %10001001, %01010001, %01101000, %01001000, %01100000, %00010110, %00101010
  575 D1:D55B 54 15 80 87 
              85 EA 96 00 	.db %01010100, %00010101, %10000000, %10000111, %10000101, %11101010, %10010110, %00000000
  576 D1:D563 58 82 29 72 
              A1 C0 05 68 	.db %01011000, %10000010, %00101001, %01110010, %10100001, %11000000, %00000101, %01101000
  577 D1:D56B 2A 9E 22 1E 
              18 56 22 A5 	.db %00101010, %10011110, %00100010, %00011110, %00011000, %01010110, %00100010, %10100101
  578 D1:D573 67 25 80 01 
              62 A9 55 72 	.db %01100111, %00100101, %10000000, %00000001, %01100010, %10101001, %01010101, %01110010
  579 D1:D57B 5A 06 15 8A 
              56 95 97 81 	.db %01011010, %00000110, %00010101, %10001010, %01010110, %10010101, %10010111, %10000001
  580 D1:D583 00 51 25 A0 
              59 E5 00 15 	.db %00000000, %01010001, %00100101, %10100000, %01011001, %11100101, %00000000, %00010101
  581 D1:D58B D2 02 A1 58 
              50 41 60 89 	.db %11010010, %00000010, %10100001, %01011000, %01010000, %01000001, %01100000, %10001001
  582 D1:D593 28 97 96 10 
              16 08 A2 89 	.db %00101000, %10010111, %10010110, %00010000, %00010110, %00001000, %10100010, %10001001
  583 D1:D59B 7B 81 81 62 
              08 22 94 20 	.db %01111011, %10000001, %10000001, %01100010, %00001000, %00100010, %10010100, %00100000
  584 D1:D5A3 -  -  -  -  
  585 D1:D5A3 -  -  -  -  
  586 D1:D5A3 -  -  -  -  Tree_9:
  587 D1:D5A3 24 -  -  -  	.db %00100100
  588 D1:D5A4 1A 10 -  -  	.db 26, 16
  589 D1:D5A6 20 31 -  -  	.db %00100000, %00110001
  590 D1:D5A8 -  -  -  -  
  591 D1:D5A8 14 95 0A A8 
              A8 35 B3 49 	.db %00010100, %10010101, %00001010, %10101000, %10101000, %00110101, %10110011, %01001001
  592 D1:D5B0 D2 28 A8 8C 
              58 A0 56 EA 	.db %11010010, %00101000, %10101000, %10001100, %01011000, %10100000, %01010110, %11101010
  593 D1:D5B8 AA C8 CD 82 
              17 B8 AA AC 	.db %10101010, %11001000, %11001101, %10000010, %00010111, %10111000, %10101010, %10101100
  594 D1:D5C0 83 5B 25 6E 
              CA A8 23 35 	.db %10000011, %01011011, %00100101, %01101110, %11001010, %10101000, %00100011, %00110101
  595 D1:D5C8 88 68 2C 8A 
              A3 8D 60 C6 	.db %10001000, %01101000, %00101100, %10001010, %10100011, %10001101, %01100000, %11000110
  596 D1:D5D0 C2 7A AB 0B 
              5A 0B 34 25 	.db %11000010, %01111010, %10101011, %00001011, %01011010, %00001011, %00110100, %00100101
  597 D1:D5D8 AA B0 85 0A 
              23 79 52 AA 	.db %10101010, %10110000, %10000101, %00001010, %00100011, %01111001, %01010010, %10101010
  598 D1:D5E0 21 63 BE 1E 
              21 68 AA 14 	.db %00100001, %01100011, %10111110, %00011110, %00100001, %01101000, %10101010, %00010100
  599 D1:D5E8 00 71 20 A5 
              EA B5 08 55 	.db %00000000, %01110001, %00100000, %10100101, %11101010, %10110101, %00001000, %01010101
  600 D1:D5F0 80 88 16 2B 
              68 34 5E 20 	.db %10000000, %10001000, %00010110, %00101011, %01101000, %00110100, %01011110, %00100000
  601 D1:D5F8 AB 48 AA 8D 
              CD A4 22 A2 	.db %10101011, %01001000, %10101010, %10001101, %11001101, %10100100, %00100010, %10100010
  602 D1:D600 8A 0F 5E D7 
              96 2A 28 88 	.db %10001010, %00001111, %01011110, %11010111, %10010110, %00101010, %00101000, %10001000
  603 D1:D608 D7 81 79 42 
              AA A8 8D 63 	.db %11010111, %10000001, %01111001, %01000010, %10101010, %10101000, %10001101, %01100011
  604 D1:D610 -  -  -  -  
  605 D1:D610 -  -  -  -  
  606 D1:D610 -  -  -  -  Tree_6:
  607 D1:D610 24 -  -  -  	.db %00100100
  608 D1:D611 1A 10 -  -  	.db 26, 16
  609 D1:D613 01 23 -  -  	.db %00000001, %00100011
  610 D1:D615 -  -  -  -  
  611 D1:D615 06 50 5A A5 
              80 A9 98 15 	.db %00000110, %01010000, %01011010, %10100101, %10000000, %10101001, %10011000, %00010101
  612 D1:D61D 0A 9A 49 29 
              9B 49 50 99 	.db %00001010, %10011010, %01001001, %00101001, %10011011, %01001001, %01010000, %10011001
  613 D1:D625 61 83 50 85 
              59 43 66 48 	.db %01100001, %10000011, %01010000, %10000101, %01011001, %01000011, %01100110, %01001000
  614 D1:D62D A4 02 15 54 
              2A 69 96 83 	.db %10100100, %00000010, %00010101, %01010100, %00101010, %01101001, %10010110, %10000011
  615 D1:D635 80 45 00 9A 
              A9 A4 39 41 	.db %10000000, %01000101, %00000000, %10011010, %10101001, %10100100, %00111001, %01000001
  616 D1:D63D 41 0B 69 99 
              42 A4 94 90 	.db %01000001, %00001011, %01101001, %10011001, %01000010, %10100100, %10010100, %10010000
  617 D1:D645 06 9A 58 19 
              55 05 04 A6 	.db %00000110, %10011010, %01011000, %00011001, %01010101, %00000101, %00000100, %10100110
  618 D1:D64D 66 43 54 42 
              A5 4D A6 55 	.db %01100110, %01000011, %01010100, %01000010, %10100101, %01001101, %10100110, %01010101
  619 D1:D655 37 50 95 65 
              69 89 92 75 	.db %00110111, %01010000, %10010101, %01100101, %01101001, %10001001, %10010010, %01110101
  620 D1:D65D 29 69 96 54 
              DA 04 55 54 	.db %00101001, %01101001, %10010110, %01010100, %11011010, %00000100, %01010101, %01010100
  621 D1:D665 98 66 4D 10 
              05 59 05 96 	.db %10011000, %01100110, %01001101, %00010000, %00000101, %01011001, %00000101, %10010110
  622 D1:D66D 68 29 0A 41 
              42 69 96 50 	.db %01101000, %00101001, %00001010, %01000001, %01000010, %01101001, %10010110, %01010000
  623 D1:D675 D6 64 94 25 
              56 65 42 EA 	.db %11010110, %01100100, %10010100, %00100101, %01010110, %01100101, %01000010, %11101010
  624 D1:D67D -  -  -  -  
  625 D1:D67D -  -  -  -  
  626 D1:D67D -  -  -  -  Tree_3:
  627 D1:D67D 24 -  -  -  	.db %00100100
  628 D1:D67E 1A 10 -  -  	.db 26, 16
  629 D1:D680 10 20 -  -  	.db %00010000, %00100000
  630 D1:D682 -  -  -  -  
  631 D1:D682 05 11 05 00 
              05 80 01 45 	.db %00000101, %00010001, %00000101, %00000000, %00000101, %10000000, %00000001, %01000101
  632 D1:D68A 11 48 45 51 
              40 11 45 10 	.db %00010001, %01001000, %01000101, %01010001, %01000000, %00010001, %01000101, %00010000
  633 D1:D692 84 58 16 01 
              54 40 54 01 	.db %10000100, %01011000, %00010110, %00000001, %01010100, %01000000, %01010100, %00000001
  634 D1:D69A 85 64 55 14 
              01 40 18 56 	.db %10000101, %01100100, %01010101, %00010100, %00000001, %01000000, %00011000, %01010110
  635 D1:D6A2 04 55 50 56 
              41 85 60 51 	.db %00000100, %01010101, %01010000, %01010110, %01000001, %10000101, %01100000, %01010001
  636 D1:D6AA 51 05 60 14 
              56 05 55 10 	.db %01010001, %00000101, %01100000, %00010100, %01010110, %00000101, %01010101, %00010000
  637 D1:D6B2 56 01 41 60 
              54 51 04 58 	.db %01010110, %00000001, %01000001, %01100000, %01010100, %01010001, %00000100, %01011000
  638 D1:D6BA 54 16 85 41 
              14 05 85 40 	.db %01010100, %00010110, %10000101, %01000001, %00010100, %00000101, %10000101, %01000000
  639 D1:D6C2 58 45 10 50 
              58 50 01 64 	.db %01011000, %01000101, %00010000, %01010000, %01011000, %01010000, %00000001, %01100100
  640 D1:D6CA 41 10 05 95 
              05 05 44 10 	.db %01000001, %00010000, %00000101, %10010101, %00000101, %00000101, %01000100, %00010000
  641 D1:D6D2 14 55 51 50 
              65 51 01 61 	.db %00010100, %01010101, %01010001, %01010000, %01100101, %01010001, %00000001, %01100001
  642 D1:D6DA 54 15 00 11 
              10 16 04 05 	.db %01010100, %00010101, %00000000, %00010001, %00010000, %00010110, %00000100, %00000101
  643 D1:D6E2 61 01 15 41 
              60 00 56 00 	.db %01100001, %00000001, %00010101, %01000001, %01100000, %00000000, %01010110, %00000000
  644 D1:D6EA -  -  -  -  
  645 D1:D6EA -  -  -  -  
  646 D1:D6EA -  -  -  -  Tree_0:
  647 D1:D6EA 10 -  -  -  	.db %00010000
  648 D1:D6EB 1A 10 -  -  	.db 26, 16
  649 D1:D6ED FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  650 D1:D6F5 FF FF FF FF 
              FF 3F FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  651 D1:D6FD CF FF FF F3 
              FF FF FC FF 	.db %11001111, %11111111, %11111111, %11110011, %11111111, %11111111, %11111100, %11111111
  652 D1:D705 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  653 D1:D70D FF FF FF FC 
              FF FF FF 3F 	.db %11111111, %11111111, %11111111, %11111100, %11111111, %11111111, %11111111, %00111111
  654 D1:D715 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  655 D1:D71D FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  656 D1:D721 -  -  -  -  
  657 D1:D721 01 -  -  -  	.db %00000001
  658 D1:D722 -  -  -  -  
  659 D1:D722 00 9A 4A 80 
              26 02 90 1A 	.db %00000000, %10011010, %01001010, %10000000, %00100110, %00000010, %10010000, %00011010
  660 D1:D72A 40 A4 05 9A 
              71 08 AB 73 	.db %01000000, %10100100, %00000101, %10011010, %01110001, %00001000, %10101011, %01110011
  661 D1:D732 08 AB 74 09 
              5B 77 02 9A 	.db %00001000, %10101011, %01110100, %00001001, %01011011, %01110111, %00000010, %10011010
  662 D1:D73A 75 00 B2 1D 
              00 BF 57 40 	.db %01110101, %00000000, %10110010, %00011101, %00000000, %10111111, %01010111, %01000000
  663 D1:D742 2B 56 10 2B 
              5F 18 01 9F 	.db %00101011, %01010110, %00010000, %00101011, %01011111, %00011000, %00000001, %10011111
  664 D1:D74A 0C 00 23 83 
              01 22 E2 40 	.db %00001100, %00000000, %00100011, %10000011, %00000001, %00100010, %11100010, %01000000
  665 D1:D752 66 2A A0 -  	.db %01100110, %00101010, %10100000
  666 D1:D755 -  -  -  -  
  667 D1:D755 -  -  -  -  
  668 D1:D755 -  -  -  -  Tree_8:
  669 D1:D755 24 -  -  -  	.db %00100100
  670 D1:D756 1A 10 -  -  	.db 26, 16
  671 D1:D758 10 23 -  -  	.db %00010000, %00100011
  672 D1:D75A -  -  -  -  
  673 D1:D75A 10 05 62 22 
              85 20 80 40 	.db %00010000, %00000101, %01100010, %00100010, %10000101, %00100000, %10000000, %01000000
  674 D1:D762 56 82 A0 52 
              2A 06 01 52 	.db %01010110, %10000010, %10100000, %01010010, %00101010, %00000110, %00000001, %01010010
  675 D1:D76A 28 25 E0 B8 
              60 21 18 8A 	.db %00101000, %00100101, %11100000, %10111000, %01100000, %00100001, %00011000, %10001010
  676 D1:D772 5E 22 08 12 
              15 8A A1 62 	.db %01011110, %00100010, %00001000, %00010010, %00010101, %10001010, %10100001, %01100010
  677 D1:D77A 80 04 21 57 
              0A 85 43 00 	.db %10000000, %00000100, %00100001, %01010111, %00001010, %10000101, %01000011, %00000000
  678 D1:D782 00 11 78 A9 
              17 80 60 02 	.db %00000000, %00010001, %01111000, %10101001, %00010111, %10000000, %01100000, %00000010
  679 D1:D78A 15 A0 89 7A 
              05 A0 08 57 	.db %00010101, %10100000, %10001001, %01111010, %00000101, %10100000, %00001000, %01010111
  680 D1:D792 A2 00 80 15 
              05 84 57 0A 	.db %10100010, %00000000, %10000000, %00010101, %00000101, %10000100, %01010111, %00001010
  681 D1:D79A A6 00 19 5A 
              95 5C 82 55 	.db %10100110, %00000000, %00011001, %01011010, %10010101, %01011100, %10000010, %01010101
  682 D1:D7A2 01 57 08 85 
              7A A5 14 15 	.db %00000001, %01010111, %00001000, %10000101, %01111010, %10100101, %00010100, %00010101
  683 D1:D7AA A2 AA 16 A0 
              61 41 68 22 	.db %10100010, %10101010, %00010110, %10100000, %01100001, %01000001, %01101000, %00100010
  684 D1:D7B2 A1 56 96 08 
              16 06 22 21 	.db %10100001, %01010110, %10010110, %00001000, %00010110, %00000110, %00100010, %00100001
  685 D1:D7BA 71 61 01 60 
              22 0A 56 1E 	.db %01110001, %01100001, %00000001, %01100000, %00100010, %00001010, %01010110, %00011110
  686 D1:D7C2 -  -  -  -  
  687 D1:D7C2 -  -  -  -  
  688 D1:D7C2 -  -  -  -  Tree_10:
  689 D1:D7C2 24 -  -  -  	.db %00100100
  690 D1:D7C3 1A 10 -  -  	.db 26, 16
  691 D1:D7C5 12 03 -  -  	.db %00010010, %00000011
  692 D1:D7C7 -  -  -  -  
  693 D1:D7C7 19 2A 77 FD 
              DD FA D7 9E 	.db %00011001, %00101010, %01110111, %11111101, %11011101, %11111010, %11010111, %10011110
  694 D1:D7CF 25 FF F7 DC 
              AC 65 2B 7F 	.db %00100101, %11111111, %11110111, %11011100, %10101100, %01100101, %00101011, %01111111
  695 D1:D7D7 F7 5D D8 C2 
              94 BF 7F FC 	.db %11110111, %01011101, %11011000, %11000010, %10010100, %10111111, %01111111, %11111100
  696 D1:D7DF 5F 21 79 77 
              DF FF 2D D6 	.db %01011111, %00100001, %01111001, %01110111, %11011111, %11111111, %00101101, %11010110
  697 D1:D7E7 31 A5 7D FF 
              DF DD 55 38 	.db %00110001, %10100101, %01111101, %11111111, %11011111, %11011101, %01010101, %00111000
  698 D1:D7EF D7 C7 7D F5 
              73 54 AD 77 	.db %11010111, %11000111, %01111101, %11110101, %01110011, %01010100, %10101101, %01110111
  699 D1:D7F7 FF FF 75 5D 
              59 D7 73 F7 	.db %11111111, %11111111, %01110101, %01011101, %01011001, %11010111, %01110011, %11110111
  700 D1:D7FF 61 47 A6 B4 
              77 7F F6 1D 	.db %01100001, %01000111, %10100110, %10110100, %01110111, %01111111, %11110110, %00011101
  701 D1:D807 F9 60 05 D7 
              FF E8 7A 0A 	.db %11111001, %01100000, %00000101, %11010111, %11111111, %11101000, %01111010, %00001010
  702 D1:D80F 35 2D 7F FD 
              A8 AA 95 18 	.db %00110101, %00101101, %01111111, %11111101, %10101000, %10101010, %10010101, %00011000
  703 D1:D817 1F FF CE A8 
              A1 96 95 FD 	.db %00011111, %11111111, %11001110, %10101000, %10100001, %10010110, %10010101, %11111101
  704 D1:D81F FD F2 12 6D 
              6B 5F FF DF 	.db %11111101, %11110010, %00010010, %01101101, %01101011, %01011111, %11111111, %11011111
  705 D1:D827 E1 52 8E B7 
              F7 DD 5E B1 	.db %11100001, %01010010, %10001110, %10110111, %11110111, %11011101, %01011110, %10110001
  706 D1:D82F -  -  -  -  
  707 D1:D82F -  -  -  -  
  708 D1:D82F -  -  -  -  Tree_1:
  709 D1:D82F 10 -  -  -  	.db %00010000
  710 D1:D830 1A 10 -  -  	.db 26, 16
  711 D1:D832 FF FF FF FF 
              FF FF F3 FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11110011, %11111111
  712 D1:D83A FF FC FF FF 
              FF 3F FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %00111111, %11111111, %11111111
  713 D1:D842 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  714 D1:D84A FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  715 D1:D852 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  716 D1:D85A FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  717 D1:D862 FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111
  718 D1:D866 -  -  -  -  
  719 D1:D866 01 -  -  -  	.db %00000001
  720 D1:D867 -  -  -  -  
  721 D1:D867 01 00 48 80 
              69 35 30 4A 	.db %00000001, %00000000, %01001000, %10000000, %01101001, %00110101, %00110000, %01001010
  722 D1:D86F 27 20 48 C6 
              61 D5 C6 60 	.db %00100111, %00100000, %01001000, %11000110, %01100001, %11010101, %11000110, %01100000
  723 D1:D877 E7 73 AC 29 
              DC E9 0B 55 	.db %11100111, %01110011, %10101100, %00101001, %11011100, %11101001, %00001011, %01010101
  724 D1:D87F 5A 44 FE 58 
              80 2B 92 28 	.db %01011010, %01000100, %11111110, %01011000, %10000000, %00101011, %10010010, %00101000
  725 D1:D887 0E C2 82 03 
              B0 74 C1 2D 	.db %00001110, %11000010, %10000010, %00000011, %10110000, %01110100, %11000001, %00101101
  726 D1:D88F 5F 10 09 73 
              E4 0A 5C F2 	.db %01011111, %00010000, %00001001, %01110011, %11100100, %00001010, %01011100, %11110010
  727 D1:D897 04 92 3C 80 	.db %00000100, %10010010, %00111100, %10000000
  728 D1:D89B -  -  -  -  
  729 D1:D89B -  -  -  -  
  730 D1:D89B -  -  -  -  Tree_5:
  731 D1:D89B 24 -  -  -  	.db %00100100
  732 D1:D89C 1A 10 -  -  	.db 26, 16
  733 D1:D89E 10 20 -  -  	.db %00010000, %00100000
  734 D1:D8A0 -  -  -  -  
  735 D1:D8A0 11 10 15 00 
              05 40 01 15 	.db %00010001, %00010000, %00010101, %00000000, %00000101, %01000000, %00000001, %00010101
  736 D1:D8A8 05 50 04 56 
              00 15 44 41 	.db %00000101, %01010000, %00000100, %01010110, %00000000, %00010101, %01000100, %01000001
  737 D1:D8B0 60 05 60 61 
              04 55 16 04 	.db %01100000, %00000101, %01100000, %01100001, %00000100, %01010101, %00010110, %00000100
  738 D1:D8B8 50 06 11 41 
              60 60 05 81 	.db %01010000, %00000110, %00010001, %01000001, %01100000, %01100000, %00000101, %10000001
  739 D1:D8C0 45 44 56 08 
              00 50 10 54 	.db %01000101, %01000100, %01010110, %00001000, %00000000, %01010000, %00010000, %01010100
  740 D1:D8C8 45 60 00 16 
              05 80 44 44 	.db %01000101, %01100000, %00000000, %00010110, %00000101, %10000000, %01000100, %01000100
  741 D1:D8D0 10 15 80 58 
              15 44 41 04 	.db %00010000, %00010101, %10000000, %01011000, %00010101, %01000100, %01000001, %00000100
  742 D1:D8D8 58 05 01 55 
              46 01 54 00 	.db %01011000, %00000101, %00000001, %01010101, %01000110, %00000001, %01010100, %00000000
  743 D1:D8E0 10 15 54 58 
              45 81 01 45 	.db %00010000, %00010101, %01010100, %01011000, %01000101, %10000001, %00000001, %01000101
  744 D1:D8E8 45 45 05 60 
              00 04 50 44 	.db %01000101, %01000101, %00000101, %01100000, %00000000, %00000100, %01010000, %01000100
  745 D1:D8F0 19 5A 04 40 
              45 40 51 95 	.db %00011001, %01011010, %00000100, %01000000, %01000101, %01000000, %01010001, %10010101
  746 D1:D8F8 A0 16 10 45 
              11 01 58 04 	.db %10100000, %00010110, %00010000, %01000101, %00010001, %00000001, %01011000, %00000100
  747 D1:D900 68 14 51 10 
              14 00 15 80 	.db %01101000, %00010100, %01010001, %00010000, %00010100, %00000000, %00010101, %10000000
  748 D1:D908 -  -  -  -  
  749 D1:D908 -  -  -  -  
  750 D1:D908 -  -  -  -  Tree_11:
  751 D1:D908 24 -  -  -  	.db %00100100
  752 D1:D909 1A 10 -  -  	.db 26, 16
  753 D1:D90B 20 13 -  -  	.db %00100000, %00010011
  754 D1:D90D -  -  -  -  
  755 D1:D90D 10 95 33 CF 
              30 C5 C3 42 	.db %00010000, %10010101, %00110011, %11001111, %00110000, %11000101, %11000011, %01000010
  756 D1:D915 43 F3 F3 FF 
              58 37 97 FC 	.db %01000011, %11110011, %11110011, %11111111, %01011000, %00110111, %10010111, %11111100
  757 D1:D91D F3 6F 35 B3 
              E5 7F FC C6 	.db %11110011, %01101111, %00110101, %10110011, %11100101, %01111111, %11111100, %11000110
  758 D1:D925 3F 6E 3F 55 
              FF F9 4C D5 	.db %00111111, %01101110, %00111111, %01010101, %11111111, %11111001, %01001100, %11010101
  759 D1:D92D 30 B7 97 FE 
              50 CD 6F C9 	.db %00110000, %10110111, %10010111, %11111110, %01010000, %11001101, %01101111, %11001001
  760 D1:D935 48 F3 96 C3 
              58 C8 54 CF 	.db %01001000, %11110011, %10010110, %11000011, %01011000, %11001000, %01010100, %11001111
  761 D1:D93D C5 6C CE 3C 
              15 CC F1 5B 	.db %11000101, %01101100, %11001110, %00111100, %00010101, %11001100, %11110001, %01011011
  762 D1:D945 FC C3 05 50 
              CC 56 CE FC 	.db %11111100, %11000011, %00000101, %01010000, %11001100, %01010110, %11001110, %11111100
  763 D1:D94D DB 59 43 DA 
              FF E8 CE 5C 	.db %11011011, %01011001, %01000011, %11011010, %11111111, %11101000, %11001110, %01011100
  764 D1:D955 94 31 FF FF 
              94 F5 C1 43 	.db %10010100, %00110001, %11111111, %11111111, %10010100, %11110101, %11000001, %01000011
  765 D1:D95D 3F FF F9 73 
              11 25 33 CF 	.db %00111111, %11111111, %11111001, %01110011, %00010001, %00100101, %00110011, %11001111
  766 D1:D965 FC A5 3C 10 
              50 FF CC CE 	.db %11111100, %10100101, %00111100, %00010000, %01010000, %11111111, %11001100, %11001110
  767 D1:D96D 5C C9 69 7F 
              33 F0 CD 4F 	.db %01011100, %11001001, %01101001, %01111111, %00110011, %11110000, %11001101, %01001111
  768 D1:D975 -  -  -  -  
  769 D1:D975 -  -  -  -  
  770 D1:D975 -  -  -  -  Branches_1:
  771 D1:D975 20 -  -  -  	.db %00100000
  772 D1:D976 12 0E -  -  	.db 18, 14
  773 D1:D978 3F 00 3F FC 
              0F FF F3 FF 	.db %00111111, %00000000, %00111111, %11111100, %00001111, %11111111, %11110011, %11111111
  774 D1:D980 FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  775 D1:D988 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  776 D1:D990 F3 FF FC FF 
              FC 3C FC 00 	.db %11110011, %11111111, %11111100, %11111111, %11111100, %00111100, %11111100, %00000000
  777 D1:D998 -  -  -  -  
  778 D1:D998 01 23 -  -  	.db %00000001, %00100011
  779 D1:D99A -  -  -  -  
  780 D1:D99A 00 00 05 00 
              05 55 55 00 	.db %00000000, %00000000, %00000101, %00000000, %00000101, %01010101, %01010101, %00000000
  781 D1:D9A2 00 50 15 44 
              05 45 52 94 	.db %00000000, %01010000, %00010101, %01000100, %00000101, %01000101, %01010010, %10010100
  782 D1:D9AA 40 4A AA 95 
              84 0A AE AB 	.db %01000000, %01001010, %10101010, %10010101, %10000100, %00001010, %10101110, %10101011
  783 D1:D9B2 F5 50 FF FF 
              EA A0 02 AA 	.db %11110101, %01010000, %11111111, %11111111, %11101010, %10100000, %00000010, %10101010
  784 D1:D9BA A6 54 00 A1 
              15 40 14 00 	.db %10100110, %01010100, %00000000, %10100001, %00010101, %01000000, %00010100, %00000000
  785 D1:D9C2 05 45 44 01 
              45 50 00 00 	.db %00000101, %01000101, %01000100, %00000001, %01000101, %01010000, %00000000, %00000000
  786 D1:D9CA 00 00 00 00 
              00 00 -  -  	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  787 D1:D9D0 -  -  -  -  
  788 D1:D9D0 -  -  -  -  
  789 D1:D9D0 -  -  -  -  Vines_7:
  790 D1:D9D0 10 -  -  -  	.db %00010000
  791 D1:D9D1 0A 18 -  -  	.db 10, 24
  792 D1:D9D3 C0 30 0C 03 
              90 EC 3F 07 	.db %11000000, %00110000, %00001100, %00000011, %10010000, %11101100, %00111111, %00000111
  793 D1:D9DB 00 C0 78 1E 
              03 80 E0 3C 	.db %00000000, %11000000, %01111000, %00011110, %00000011, %10000000, %11100000, %00111100
  794 D1:D9E3 07 00 C0 F0 
              3C 03 B0 7C 	.db %00000111, %00000000, %11000000, %11110000, %00111100, %00000011, %10110000, %01111100
  795 D1:D9EB 1C 03 00 E0 
              38 06 -  -  	.db %00011100, %00000011, %00000000, %11100000, %00111000, %00000110
  796 D1:D9F1 -  -  -  -  
  797 D1:D9F1 54 -  -  -  	.db %01010100
  798 D1:D9F2 -  -  -  -  
  799 D1:D9F2 54 CE 79 6F 
              49 36 FE 9D 	.db %01010100, %11001110, %01111001, %01101111, %01001001, %00110110, %11111110, %10011101
  800 D1:D9FA EF 4A -  -  	.db %11101111, %01001010
  801 D1:D9FC -  -  -  -  
  802 D1:D9FC -  -  -  -  
  803 D1:D9FC -  -  -  -  Vines_10:
  804 D1:D9FC 10 -  -  -  	.db %00010000
  805 D1:D9FD 18 0E -  -  	.db 24, 14
  806 D1:D9FF 00 40 00 FC 
              E0 00 FF 80 	.db %00000000, %01000000, %00000000, %11111100, %11100000, %00000000, %11111111, %10000000
  807 D1:DA07 00 FF 83 00 
              1F E6 00 33 	.db %00000000, %11111111, %10000011, %00000000, %00011111, %11100110, %00000000, %00110011
  808 D1:DA0F FC 00 10 FF 
              0C 00 1F CC 	.db %11111100, %00000000, %00010000, %11111111, %00001100, %00000000, %00011111, %11001100
  809 D1:DA17 00 37 E8 00 
              31 F8 00 01 	.db %00000000, %00110111, %11101000, %00000000, %00110001, %11111000, %00000000, %00000001
  810 D1:DA1F FC 00 03 3F 
              00 03 9F 00 	.db %11111100, %00000000, %00000011, %00111111, %00000000, %00000011, %10011111, %00000000
  811 D1:DA27 00 07 -  -  	.db %00000000, %00000111
  812 D1:DA29 -  -  -  -  
  813 D1:DA29 45 -  -  -  	.db %01000101
  814 D1:DA2A -  -  -  -  
  815 D1:DA2A 00 3E 1F C3 
              F0 FE 3F 07 	.db %00000000, %00111110, %00011111, %11000011, %11110000, %11111110, %00111111, %00000111
  816 D1:DA32 83 F1 F9 F3 
              E3 FF 80 -  	.db %10000011, %11110001, %11111001, %11110011, %11100011, %11111111, %10000000
  817 D1:DA39 -  -  -  -  
  818 D1:DA39 -  -  -  -  
  819 D1:DA39 -  -  -  -  Branches_0:
  820 D1:DA39 20 -  -  -  	.db %00100000
  821 D1:DA3A 12 0E -  -  	.db 18, 14
  822 D1:DA3C CC 00 3F CF 
              0F FF F3 FF 	.db %11001100, %00000000, %00111111, %11001111, %00001111, %11111111, %11110011, %11111111
  823 D1:DA44 FC FF FF FF 
              FF FF FF FF 	.db %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  824 D1:DA4C FF FF FF FF 
              3F FF CF FF 	.db %11111111, %11111111, %11111111, %11111111, %00111111, %11111111, %11001111, %11111111
  825 D1:DA54 F3 FF F0 FF 
              FC 3F 30 00 	.db %11110011, %11111111, %11110000, %11111111, %11111100, %00111111, %00110000, %00000000
  826 D1:DA5C -  -  -  -  
  827 D1:DA5C 01 23 -  -  	.db %00000001, %00100011
  828 D1:DA5E -  -  -  -  
  829 D1:DA5E 00 00 00 00 
              15 40 00 00 	.db %00000000, %00000000, %00000000, %00000000, %00010101, %01000000, %00000000, %00000000
  830 D1:DA66 40 51 45 40 
              04 00 00 10 	.db %01000000, %01010001, %01000101, %01000000, %00000100, %00000000, %00000000, %00010000
  831 D1:DA6E 05 45 5A 01 
              10 BA AA F5 	.db %00000101, %01000101, %01011010, %00000001, %00010000, %10111010, %10101010, %11110101
  832 D1:DA76 41 0F FF FA 
              95 10 AA AA 	.db %01000001, %00001111, %11111111, %11111010, %10010101, %00010000, %10101010, %10101010
  833 D1:DA7E 55 04 55 51 
              44 00 00 05 	.db %01010101, %00000100, %01010101, %01010001, %01000100, %00000000, %00000000, %00000101
  834 D1:DA86 40 40 00 50 
              14 05 40 00 	.db %01000000, %01000000, %00000000, %01010000, %00010100, %00000101, %01000000, %00000000
  835 D1:DA8E 00 00 00 -  	.db %00000000, %00000000, %00000000
  836 D1:DA91 -  -  -  -  
  837 D1:DA91 -  -  -  -  
  838 D1:DA91 -  -  -  -  GroundDirtDark:
  839 D1:DA91 24 -  -  -  	.db %00100100
  840 D1:DA92 10 0C -  -  	.db 16, 12
  841 D1:DA94 01 50 -  -  	.db %00000001, %01010000
  842 D1:DA96 -  -  -  -  
  843 D1:DA96 00 00 00 00 
              00 00 00 04 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000100
  844 D1:DA9E 58 08 00 01 
              08 08 25 40 	.db %01011000, %00001000, %00000000, %00000001, %00001000, %00001000, %00100101, %01000000
  845 D1:DAA6 00 00 20 54 
              01 50 00 08 	.db %00000000, %00000000, %00100000, %01010100, %00000001, %01010000, %00000000, %00001000
  846 D1:DAAE 00 14 00 08 
              20 00 00 00 	.db %00000000, %00010100, %00000000, %00001000, %00100000, %00000000, %00000000, %00000000
  847 D1:DAB6 20 00 50 00 
              52 12 05 05 	.db %00100000, %00000000, %01010000, %00000000, %01010010, %00010010, %00000101, %00000101
  848 D1:DABE 02 44 80 40 
              00 00 00 00 	.db %00000010, %01000100, %10000000, %01000000, %00000000, %00000000, %00000000, %00000000
  849 D1:DAC6 -  -  -  -  
  850 D1:DAC6 -  -  -  -  
  851 D1:DAC6 -  -  -  -  GroundHumpDark:
  852 D1:DAC6 20 -  -  -  	.db %00100000
  853 D1:DAC7 10 0D -  -  	.db 16, 13
  854 D1:DAC9 03 F0 0F FC 
              3F FC FF FF 	.db %00000011, %11110000, %00001111, %11111100, %00111111, %11111100, %11111111, %11111111
  855 D1:DAD1 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  856 D1:DAD9 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  857 D1:DAE1 FF FF -  -  	.db %11111111, %11111111
  858 D1:DAE3 -  -  -  -  
  859 D1:DAE3 10 50 -  -  	.db %00010000, %01010000
  860 D1:DAE5 -  -  -  -  
  861 D1:DAE5 00 00 55 40 
              01 55 54 05 	.db %00000000, %00000000, %01010101, %01000000, %00000001, %01010101, %01010100, %00000101
  862 D1:DAED 55 56 50 95 
              59 56 55 95 	.db %01010101, %01010110, %01010000, %10010101, %01011001, %01010110, %01010101, %10010101
  863 D1:DAF5 59 05 59 51 
              59 50 09 44 	.db %01011001, %00000101, %01011001, %01010001, %01011001, %01010000, %00001001, %01000100
  864 D1:DAFD 05 55 55 56 
              55 56 55 56 	.db %00000101, %01010101, %01010101, %01010110, %01010101, %01010110, %01010101, %01010110
  865 D1:DB05 95 49 55 45 
              94 18 15 11 	.db %10010101, %01001001, %01010101, %01000101, %10010100, %00011000, %00010101, %00010001
  866 D1:DB0D 56 55 54 55 
              59 55 55 -  	.db %01010110, %01010101, %01010100, %01010101, %01011001, %01010101, %01010101
  867 D1:DB14 -  -  -  -  
  868 D1:DB14 -  -  -  -  
  869 D1:DB14 -  -  -  -  GroundGrassSmall:
  870 D1:DB14 08 -  -  -  	.db %00001000
  871 D1:DB15 10 0F -  -  	.db 16, 15
  872 D1:DB17 30 C0 30 C0 
              F3 CC F3 CC 	.db %00110000, %11000000, %00110000, %11000000, %11110011, %11001100, %11110011, %11001100
  873 D1:DB1F F3 0C C3 0F 
              C3 0F C3 03 	.db %11110011, %00001100, %11000011, %00001111, %11000011, %00001111, %11000011, %00000011
  874 D1:DB27 C3 03 C3 33 
              C3 33 C3 33 	.db %11000011, %00000011, %11000011, %00110011, %11000011, %00110011, %11000011, %00110011
  875 D1:DB2F C3 33 C3 33 
              C0 33 -  -  	.db %11000011, %00110011, %11000011, %00110011, %11000000, %00110011
  876 D1:DB35 -  -  -  -  
  877 D1:DB35 50 -  -  -  	.db %01010000
  878 D1:DB36 -  -  -  -  
  879 D1:DB36 -  -  -  -  
  880 D1:DB36 -  -  -  -  
  881 D1:DB36 -  -  -  -  Tree_16:
  882 D1:DB36 08 -  -  -  	.db %00001000
  883 D1:DB37 0A 10 -  -  	.db 10, 16
  884 D1:DB39 3C 0F 03 C0 
              F0 3C 0F 0F 	.db %00111100, %00001111, %00000011, %11000000, %11110000, %00111100, %00001111, %00001111
  885 D1:DB41 C0 F0 3C 0F 
              03 FC FC 3C 	.db %11000000, %11110000, %00111100, %00001111, %00000011, %11111100, %11111100, %00111100
  886 D1:DB49 0F 03 C0 F0 	.db %00001111, %00000011, %11000000, %11110000
  887 D1:DB4D -  -  -  -  
  888 D1:DB4D 00 -  -  -  	.db %00000000
  889 D1:DB4E -  -  -  -  
  890 D1:DB4E -  -  -  -  
  891 D1:DB4E -  -  -  -  
  892 D1:DB4E -  -  -  -  Tree_17:
  893 D1:DB4E 08 -  -  -  	.db %00001000
  894 D1:DB4F 07 0E -  -  	.db 7, 14
  895 D1:DB51 0C 18 77 E1 
              C3 0F 9E 70 	.db %00001100, %00011000, %01110111, %11100001, %11000011, %00001111, %10011110, %01110000
  896 D1:DB59 E3 C7 0C 18 
              00 -  -  -  	.db %11100011, %11000111, %00001100, %00011000, %00000000
  897 D1:DB5E -  -  -  -  
  898 D1:DB5E 00 -  -  -  	.db %00000000
  899 D1:DB5F -  -  -  -  
  900 D1:DB5F -  -  -  -  
  901 D1:DB5F -  -  -  -  
  902 D1:DB5F -  -  -  -  Leaves_8:
  903 D1:DB5F 10 -  -  -  	.db %00010000
  904 D1:DB60 10 0E -  -  	.db 16, 14
  905 D1:DB62 03 C0 0F F0 
              3F F0 3F FC 	.db %00000011, %11000000, %00001111, %11110000, %00111111, %11110000, %00111111, %11111100
  906 D1:DB6A FF FC FF FF 
              FF FF FF FF 	.db %11111111, %11111100, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  907 D1:DB72 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  908 D1:DB7A FF FC 30 30 	.db %11111111, %11111100, %00110000, %00110000
  909 D1:DB7E -  -  -  -  
  910 D1:DB7E 54 -  -  -  	.db %01010100
  911 D1:DB7F -  -  -  -  
  912 D1:DB7F 00 03 00 67 
              00 70 80 00 	.db %00000000, %00000011, %00000000, %01100111, %00000000, %01110000, %10000000, %00000000
  913 D1:DB87 F0 1C 1E 70 
              01 81 10 03 	.db %11110000, %00011100, %00011110, %01110000, %00000001, %10000001, %00010000, %00000011
  914 D1:DB8F F0 0E 03 C0 
              00 00 00 -  	.db %11110000, %00001110, %00000011, %11000000, %00000000, %00000000, %00000000
  915 D1:DB96 -  -  -  -  
  916 D1:DB96 -  -  -  -  
  917 D1:DB96 -  -  -  -  Tree_18:
  918 D1:DB96 08 -  -  -  	.db %00001000
  919 D1:DB97 07 0E -  -  	.db 7, 14
  920 D1:DB99 18 30 C7 83 
              06 0C 1C 1E 	.db %00011000, %00110000, %11000111, %10000011, %00000110, %00001100, %00011100, %00011110
  921 D1:DBA1 30 60 C1 83 
              00 -  -  -  	.db %00110000, %01100000, %11000001, %10000011, %00000000
  922 D1:DBA6 -  -  -  -  
  923 D1:DBA6 00 -  -  -  	.db %00000000
  924 D1:DBA7 -  -  -  -  
  925 D1:DBA7 -  -  -  -  
  926 D1:DBA7 -  -  -  -  
  927 D1:DBA7 -  -  -  -  Clouds_0:
  928 D1:DBA7 10 -  -  -  	.db %00010000
  929 D1:DBA8 10 0A -  -  	.db 16, 10
  930 D1:DBAA FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  931 D1:DBB2 FF FF FF FF 
              FF FF 3F FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %00111111, %11111111
  932 D1:DBBA 0F CC 03 00 	.db %00001111, %11001100, %00000011, %00000000
  933 D1:DBBE -  -  -  -  
  934 D1:DBBE 67 -  -  -  	.db %01100111
  935 D1:DBBF -  -  -  -  
  936 D1:DBBF 00 40 31 84 
              13 1C 0E 20 	.db %00000000, %01000000, %00110001, %10000100, %00010011, %00011100, %00001110, %00100000
  937 D1:DBC7 00 00 E0 00 
              F0 77 F3 FF 	.db %00000000, %00000000, %11100000, %00000000, %11110000, %01110111, %11110011, %11111111
  938 D1:DBCF FF -  -  -  	.db %11111111
  939 D1:DBD0 -  -  -  -  
  940 D1:DBD0 -  -  -  -  
  941 D1:DBD0 -  -  -  -  Clouds_1:
  942 D1:DBD0 10 -  -  -  	.db %00010000
  943 D1:DBD1 0C 0E -  -  	.db 12, 14
  944 D1:DBD3 03 F0 FF 3F 
              F3 FF FF FF 	.db %00000011, %11110000, %11111111, %00111111, %11110011, %11111111, %11111111, %11111111
  945 D1:DBDB FF 3F F0 FF 
              0F F0 FF 0F 	.db %11111111, %00111111, %11110000, %11111111, %00001111, %11110000, %11111111, %00001111
  946 D1:DBE3 F0 3F 00 F0 
              03 -  -  -  	.db %11110000, %00111111, %00000000, %11110000, %00000011
  947 D1:DBE8 -  -  -  -  
  948 D1:DBE8 76 -  -  -  	.db %01110110
  949 D1:DBE9 -  -  -  -  
  950 D1:DBE9 3C 7C 3B 3E 
              47 F0 37 C5 	.db %00111100, %01111100, %00111011, %00111110, %01000111, %11110000, %00110111, %11000101
  951 D1:DBF1 F6 73 B1 F0 
              70 40 -  -  	.db %11110110, %01110011, %10110001, %11110000, %01110000, %01000000
  952 D1:DBF7 -  -  -  -  
  953 D1:DBF7 -  -  -  -  
  954 D1:DBF7 -  -  -  -  Clouds_3:
  955 D1:DBF7 10 -  -  -  	.db %00010000
  956 D1:DBF8 10 0B -  -  	.db 16, 11
  957 D1:DBFA 03 00 0F C0 
              3F C0 FF F3 	.db %00000011, %00000000, %00001111, %11000000, %00111111, %11000000, %11111111, %11110011
  958 D1:DC02 FF FF FF FF 
              FF FF FF FF 	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  959 D1:DC0A FF FF FF FF 
              FF FF -  -  	.db %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
  960 D1:DC10 -  -  -  -  
  961 D1:DC10 76 -  -  -  	.db %01110110
  962 D1:DC11 -  -  -  -  
  963 D1:DC11 00 0C 07 80 
              FF 03 FF C6 	.db %00000000, %00001100, %00000111, %10000000, %11111111, %00000011, %11111111, %11000110
  964 D1:DC19 7F FF 3C FB 
              83 E7 FF FF 	.db %01111111, %11111111, %00111100, %11111011, %10000011, %11100111, %11111111, %11111111
  965 D1:DC21 FF FC -  -  	.db %11111111, %11111100
  966 D1:DC23 -  -  -  -  
  967 D1:DC23 -  -  -  -  
  968 D1:DC23 -  -  -  -  Clouds_4:
  969 D1:DC23 10 -  -  -  	.db %00010000
  970 D1:DC24 08 0A -  -  	.db 8, 10
  971 D1:DC26 03 0F 3F 3F 
              FF FF FF FF 	.db %00000011, %00001111, %00111111, %00111111, %11111111, %11111111, %11111111, %11111111
  972 D1:DC2E FF FF -  -  	.db %11111111, %11111111
  973 D1:DC30 -  -  -  -  
  974 D1:DC30 76 -  -  -  	.db %01110110
  975 D1:DC31 -  -  -  -  
  976 D1:DC31 00 11 C3 C7 
              C5 CE 4F CF 	.db %00000000, %00010001, %11000011, %11000111, %11000101, %11001110, %01001111, %11001111
  977 D1:DC39 C0 -  -  -  	.db %11000000
  978 D1:DC3A -  -  -  -  
  979 D1:DC3A -  -  -  -  
  980 D1:DC3A -  -  -  -  Clouds_2:
  981 D1:DC3A 14 -  -  -  	.db %00010100
  982 D1:DC3B 10 10 -  -  	.db 16, 16
  983 D1:DC3D 67 -  -  -  	.db %01100111
  984 D1:DC3E -  -  -  -  
  985 D1:DC3E 00 00 00 00 
              00 08 40 0E 	.db %00000000, %00000000, %00000000, %00000000, %00000000, %00001000, %01000000, %00001110
  986 D1:DC46 B0 C3 1F 80 
              00 00 00 00 	.db %10110000, %11000011, %00011111, %10000000, %00000000, %00000000, %00000000, %00000000
  987 D1:DC4E 60 02 80 01 
              01 F0 20 1E 	.db %01100000, %00000010, %10000000, %00000001, %00000001, %11110000, %00100000, %00011110
  988 D1:DC56 30 00 1F 08 
              01 F8 00 00 	.db %00110000, %00000000, %00011111, %00001000, %00000001, %11111000, %00000000, %00000000
  989 D1:DC5E -  -  -  -  
  990 D1:DC5E -  -  -  -  
Listing for file "ascent.asm"
  547 D1:DC5E -  -  -  -  #include "generated/SpriteEquates.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\SpriteEquates.txt"
    1 D1:DC5E -  -  -  -  Clouds_0_Fast_F .equ 13894080 ; vRam + 0 - 101
    2 D1:DC5E -  -  -  -  Clouds_1_Fast_F .equ 13894182 ; vRam + 102 - 201
    3 D1:DC5E -  -  -  -  Clouds_4_Fast_F .equ 13894282 ; vRam + 202 - 266
    4 D1:DC5E -  -  -  -  Clouds_3_Fast_F .equ 13894346 ; vRam + 266 - 373
    5 D1:DC5E -  -  -  -  Clouds_2_Fast_F .equ 13894454 ; vRam + 374 - 551
    6 D1:DC5E -  -  -  -  Branches_8_Fast_F .equ 13894632 ; vRam + 552 - 646
    7 D1:DC5E -  -  -  -  Branches_15_Slow .equ 13894727 ; vRam + 647 - 759
    8 D1:DC5E -  -  -  -  Branches_3_Fast .equ 13894840 ; vRam + 760 - 927
    9 D1:DC5E -  -  -  -  Vines_2_Slow_F .equ 13895007 ; vRam + 927 - 1145
   10 D1:DC5E -  -  -  -  Vines_1_Slow .equ 13895225 ; vRam + 1145 - 1289
   11 D1:DC5E -  -  -  -  Vines_9_Slow_O .equ 13895369 ; vRam + 1289 - 1466
   12 D1:DC5E -  -  -  -  Tree_0_Fast_F .equ 13895546 ; vRam + 1466 - 1717
   13 D1:DC5E -  -  -  -  Tree_3_Fast .equ 13895798 ; vRam + 1718 - 1975
   14 D1:DC5E -  -  -  -  Tree_8_Fast .equ 13896056 ; vRam + 1976 - 2233
   15 D1:DC5E -  -  -  -  Tree_9_Fast_F .equ 13896314 ; vRam + 2234 - 2491
   16 D1:DC5E -  -  -  -  Tree_8_Fast_F .equ 13896572 ; vRam + 2492 - 2749
   17 D1:DC5E -  -  -  -  Tree_4_Fast_F .equ 13896830 ; vRam + 2750 - 3007
   18 D1:DC5E -  -  -  -  Tree_0_Fast .equ 13897088 ; vRam + 3008 - 3259
   19 D1:DC5E -  -  -  -  Tree_6_Fast .equ 13897340 ; vRam + 3260 - 3517
   20 D1:DC5E -  -  -  -  Tree_10_Fast .equ 13897598 ; vRam + 3518 - 3775
   21 D1:DC5E -  -  -  -  Tree_7_Fast_F .equ 13897856 ; vRam + 3776 - 4033
   22 D1:DC5E -  -  -  -  Tree_1_Fast_F .equ 13898114 ; vRam + 4034 - 4288
   23 D1:DC5E -  -  -  -  Tree_1_Fast .equ 13898368 ; vRam + 4288 - 4542
   24 D1:DC5E -  -  -  -  Tree_5_Fast .equ 13898622 ; vRam + 4542 - 4799
   25 D1:DC5E -  -  -  -  Tree_11_Fast .equ 13898880 ; vRam + 4800 - 5057
   26 D1:DC5E -  -  -  -  Tree_5_Fast_F .equ 13899138 ; vRam + 5058 - 5315
   27 D1:DC5E -  -  -  -  Tree_2_Fast_F .equ 13899396 ; vRam + 5316 - 5567
   28 D1:DC5E -  -  -  -  Tree_11_Fast_F .equ 13899648 ; vRam + 5568 - 5825
   29 D1:DC5E -  -  -  -  Branches_1_Fast .equ 13899906 ; vRam + 5826 - 5978
   30 D1:DC5E -  -  -  -  Branches_2_Slow_O .equ 13900059 ; vRam + 5979 - 6202
   31 D1:DC5E -  -  -  -  Branches_3_Slow_O .equ 13900283 ; vRam + 6203 - 6421
   32 D1:DC5E -  -  -  -  Branches_5_Slow_O .equ 13900501 ; vRam + 6421 - 6629
   33 D1:DC5E -  -  -  -  Leaves_3_Slow_O .equ 13900709 ; vRam + 6629 - 6737
   34 D1:DC5E -  -  -  -  Vines_7_Slow .equ 13900817 ; vRam + 6737 - 6928
   35 D1:DC5E -  -  -  -  Vines_5_Slow_O_F .equ 13901009 ; vRam + 6929 - 7167
   36 D1:DC5E -  -  -  -  Vines_3_Slow_O_F .equ 13901247 ; vRam + 7167 - 7349
   37 D1:DC5E -  -  -  -  Vines_4_Slow_O .equ 13901429 ; vRam + 7349 - 7527
   38 D1:DC5E -  -  -  -  Vines_10_Slow .equ 13901607 ; vRam + 7527 - 7721
   39 D1:DC5E -  -  -  -  Vines_7_Slow_F .equ 13901801 ; vRam + 7721 - 7912
   40 D1:DC5E -  -  -  -  Vines_2_Slow .equ 13901993 ; vRam + 7913 - 8132
   41 D1:DC5E -  -  -  -  Leaves_2_Slow .equ 13902213 ; vRam + 8133 - 8237
   42 D1:DC5E -  -  -  -  Branches_1_Fast_F .equ 13902318 ; vRam + 8238 - 8390
   43 D1:DC5E -  -  -  -  Branches_2_Fast_F .equ 13902470 ; vRam + 8390 - 8559
   44 D1:DC5E -  -  -  -  Branches_5_Fast_F .equ 13902640 ; vRam + 8560 - 8720
   45 D1:DC5E -  -  -  -  Branches_14_Slow .equ 13902801 ; vRam + 8721 - 8829
   46 D1:DC5E -  -  -  -  Vines_10_Slow_O .equ 13902909 ; vRam + 8829 - 9020
   47 D1:DC5E -  -  -  -  Branches_0_Fast .equ 13903100 ; vRam + 9020 - 9171
   48 D1:DC5E -  -  -  -  GroundDirtDark_Fast .equ 13903252 ; vRam + 9172 - 9305
   49 D1:DC5E -  -  -  -  GroundDirtDark_Fast_F .equ 13903386 ; vRam + 9306 - 9439
   50 D1:DC5E -  -  -  -  GroundHumpDark_Fast .equ 13903520 ; vRam + 9440 - 9574
   51 D1:DC5E -  -  -  -  GroundHumpDark_Fast_F .equ 13903654 ; vRam + 9574 - 9708
   52 D1:DC5E -  -  -  -  GroundGrassSmall_Fast .equ 13903788 ; vRam + 9708 - 9875
   53 D1:DC5E -  -  -  -  GroundGrassSmall_Fast_F .equ 13903956 ; vRam + 9876 - 10043
   54 D1:DC5E -  -  -  -  Tree_16_Fast .equ 13904124 ; vRam + 10044 - 10129
   55 D1:DC5E -  -  -  -  Tree_17_Slow_O .equ 13904209 ; vRam + 10129 - 10233
   56 D1:DC5E -  -  -  -  Tree_17_Slow_O_F .equ 13904313 ; vRam + 10233 - 10334
   57 D1:DC5E -  -  -  -  Leaves_8_Fast .equ 13904414 ; vRam + 10334 - 10468
   58 D1:DC5E -  -  -  -  Tree_16_Slow_O .equ 13904549 ; vRam + 10469 - 10602
   59 D1:DC5E -  -  -  -  Tree_17_Slow_F .equ 13904683 ; vRam + 10603 - 10707
   60 D1:DC5E -  -  -  -  Tree_18_Slow_O .equ 13904787 ; vRam + 10707 - 10807
   61 D1:DC5E -  -  -  -  Tree_17_Slow .equ 13904887 ; vRam + 10807 - 10908
   62 D1:DC5E -  -  -  -  Tree_18_Slow_F .equ 13904989 ; vRam + 10909 - 11009
   63 D1:DC5E -  -  -  -  Tree_16_Slow_O_F .equ 13905089 ; vRam + 11009 - 11142
   64 D1:DC5E -  -  -  -  Leaves_2_Slow_F .equ 13905223 ; vRam + 11143 - 11246
   65 D1:DC5E -  -  -  -  Clouds_0_Fast .equ 13905326 ; vRam + 11246 - 11347
   66 D1:DC5E -  -  -  -  Clouds_1_Fast .equ 13905428 ; vRam + 11348 - 11447
   67 D1:DC5E -  -  -  -  Clouds_3_Fast .equ 13905528 ; vRam + 11448 - 11555
   68 D1:DC5E -  -  -  -  Clouds_4_Fast .equ 13905636 ; vRam + 11556 - 11620
   69 D1:DC5E -  -  -  -  Clouds_2_Fast .equ 13905700 ; vRam + 11620 - 11797
   70 D1:DC5E -  -  -  -  GroundDirtFull_Fast .equ 13905878 ; vRam + 11798 - 11975
   71 D1:DC5E -  -  -  -  GroundDirtFull_Fast_F .equ 13906056 ; vRam + 11976 - 12153
   72 D1:DC5E -  -  -  -  GroundDirtMound_Fast .equ 13906234 ; vRam + 12154 - 12281
   73 D1:DC5E -  -  -  -  GroundDirtMound_Fast_F .equ 13906362 ; vRam + 12282 - 12409
   74 D1:DC5E -  -  -  -  GroundGrassL4_Fast .equ 13906490 ; vRam + 12410 - 12547
   75 D1:DC5E -  -  -  -  GroundGrassL2_Fast .equ 13906628 ; vRam + 12548 - 12635
   76 D1:DC5E -  -  -  -  GroundGrassL5_Fast .equ 13906716 ; vRam + 12636 - 12766
   77 D1:DC5E -  -  -  -  GroundGrassL3_Fast .equ 13906846 ; vRam + 12766 - 12855
   78 D1:DC5E -  -  -  -  GroundGrassL1_Fast .equ 13906936 ; vRam + 12856 - 12970
   79 D1:DC5E -  -  -  -  GroundGrassL1_Fast_F .equ 13907050 ; vRam + 12970 - 13084
   80 D1:DC5E -  -  -  -  GroundGrassL3_Fast_F .equ 13907164 ; vRam + 13084 - 13173
   81 D1:DC5E -  -  -  -  Branches_10_Slow_O .equ 13907253 ; vRam + 13173 - 13337
   82 D1:DC5E -  -  -  -  Branches_9_Fast .equ 13907418 ; vRam + 13338 - 13468
   83 D1:DC5E -  -  -  -  Branches_16_Slow .equ 13907549 ; vRam + 13469 - 13577
   84 D1:DC5E -  -  -  -  Branches_13_Slow_O .equ 13907657 ; vRam + 13577 - 13647
   85 D1:DC5E -  -  -  -  Leaves_3_Slow .equ 13907727 ; vRam + 13647 - 13756
   86 D1:DC5E -  -  -  -  Leaves_7_Fast .equ 13907836 ; vRam + 13756 - 13891
   87 D1:DC5E -  -  -  -  Leaves_7_Fast_F .equ 13907972 ; vRam + 13892 - 14027
   88 D1:DC5E -  -  -  -  Branches_6_Slow .equ 13908107 ; vRam + 14027 - 14184
   89 D1:DC5E -  -  -  -  Branches_10_Slow_O_F .equ 13908265 ; vRam + 14185 - 14349
   90 D1:DC5E -  -  -  -  Branches_7_Slow_O .equ 13908429 ; vRam + 14349 - 14512
   91 D1:DC5E -  -  -  -  Branches_16_Slow_O .equ 13908593 ; vRam + 14513 - 14621
   92 D1:DC5E -  -  -  -  Branches_15_Slow_O .equ 13908701 ; vRam + 14621 - 14729
   93 D1:DC5E -  -  -  -  Branches_8_Slow_O_F .equ 13908809 ; vRam + 14729 - 14865
   94 D1:DC5E -  -  -  -  Branches_12_Slow_O .equ 13908945 ; vRam + 14865 - 14986
   95 D1:DC5E -  -  -  -  Branches_15_Slow_O_F .equ 13909067 ; vRam + 14987 - 15099
   96 D1:DC5E -  -  -  -  Leaves_2_Slow_O .equ 13909179 ; vRam + 15099 - 15204
   97 D1:DC5E -  -  -  -  Leaves_4_Slow .equ 13909285 ; vRam + 15205 - 15342
   98 D1:DC5E -  -  -  -  Leaves_4_Slow_F .equ 13909423 ; vRam + 15343 - 15481
   99 D1:DC5E -  -  -  -  Branches_7_Fast .equ 13909562 ; vRam + 15482 - 15603
  100 D1:DC5E -  -  -  -  Branches_8_Fast .equ 13909684 ; vRam + 15604 - 15698
  101 D1:DC5E -  -  -  -  Branches_10_Fast_F .equ 13909778 ; vRam + 15698 - 15817
  102 D1:DC5E -  -  -  -  Branches_11_Fast_F .equ 13909898 ; vRam + 15818 - 15921
  103 D1:DC5E -  -  -  -  Branches_16_Slow_O_F .equ 13910001 ; vRam + 15921 - 16029
  104 D1:DC5E -  -  -  -  Branches_13_Fast_F .equ 13910110 ; vRam + 16030 - 16079
  105 D1:DC5E -  -  -  -  Branches_14_Slow_O .equ 13910159 ; vRam + 16079 - 16190
  106 D1:DC5E -  -  -  -  Branches_15_Slow_F .equ 13910271 ; vRam + 16191 - 16299
  107 D1:DC5E -  -  -  -  Leaves_6_Slow .equ 13910379 ; vRam + 16299 - 16430
  108 D1:DC5E -  -  -  -  Branches_4_Fast_F .equ 13910510 ; vRam + 16430 - 16588
  109 D1:DC5E -  -  -  -  Branches_7_Fast_F .equ 13910668 ; vRam + 16588 - 16709
  110 D1:DC5E -  -  -  -  Branches_12_Fast_F .equ 13910790 ; vRam + 16710 - 16801
  111 D1:DC5E -  -  -  -  Leaves_4_Slow_O .equ 13910881 ; vRam + 16801 - 16943
  112 D1:DC5E -  -  -  -  Branches_8_Slow_O .equ 13911023 ; vRam + 16943 - 17079
  113 D1:DC5E -  -  -  -  Branches_10_Fast .equ 13911160 ; vRam + 17080 - 17199
  114 D1:DC5E -  -  -  -  Leaves_6_Slow_O .equ 13911279 ; vRam + 17199 - 17330
  115 D1:DC5E -  -  -  -  Leaves_3_Slow_F .equ 13911411 ; vRam + 17331 - 17439
  116 D1:DC5E -  -  -  -  Vines_8_Slow .equ 13911519 ; vRam + 17439 - 17640
  117 D1:DC5E -  -  -  -  Vines_2_Slow_O .equ 13911721 ; vRam + 17641 - 17857
  118 D1:DC5E -  -  -  -  Vines_3_Slow .equ 13911937 ; vRam + 17857 - 18033
  119 D1:DC5E -  -  -  -  Vines_5_Slow .equ 13912113 ; vRam + 18033 - 18275
  120 D1:DC5E -  -  -  -  Vines_9_Slow .equ 13912355 ; vRam + 18275 - 18452
  121 D1:DC5E -  -  -  -  Vines_4_Slow_F .equ 13912533 ; vRam + 18453 - 18636
  122 D1:DC5E -  -  -  -  Vines_1_Slow_O .equ 13912717 ; vRam + 18637 - 18777
  123 D1:DC5E -  -  -  -  Vines_9_Slow_O_F .equ 13912857 ; vRam + 18777 - 18954
  124 D1:DC5E -  -  -  -  Vines_3_Slow_F .equ 13913035 ; vRam + 18955 - 19130
  125 D1:DC5E -  -  -  -  Vines_8_Slow_F .equ 13913211 ; vRam + 19131 - 19332
  126 D1:DC5E -  -  -  -  Branches_9_Slow_O .equ 13913413 ; vRam + 19333 - 19508
  127 D1:DC5E -  -  -  -  Vines_2_Slow_O_F .equ 13913589 ; vRam + 19509 - 19725
  128 D1:DC5E -  -  -  -  Tree_2_Fast .equ 13913806 ; vRam + 19726 - 19977
  129 D1:DC5E -  -  -  -  Tree_4_Fast .equ 13914058 ; vRam + 19978 - 20235
  130 D1:DC5E -  -  -  -  Tree_7_Fast .equ 13914316 ; vRam + 20236 - 20493
  131 D1:DC5E -  -  -  -  Tree_9_Fast .equ 13914574 ; vRam + 20494 - 20751
  132 D1:DC5E -  -  -  -  Tree_6_Fast_F .equ 13914832 ; vRam + 20752 - 21009
  133 D1:DC5E -  -  -  -  Tree_3_Fast_F .equ 13915090 ; vRam + 21010 - 21267
  134 D1:DC5E -  -  -  -  Branches_1_Slow_O .equ 13915347 ; vRam + 21267 - 21464
  135 D1:DC5E -  -  -  -  Branches_4_Slow_O .equ 13915545 ; vRam + 21465 - 21668
  136 D1:DC5E -  -  -  -  Leaves_3_Slow_O_F .equ 13915749 ; vRam + 21669 - 21779
  137 D1:DC5E -  -  -  -  Vines_7_Slow_O .equ 13915859 ; vRam + 21779 - 21974
  138 D1:DC5E -  -  -  -  Vines_8_Slow_O .equ 13916055 ; vRam + 21975 - 22172
  139 D1:DC5E -  -  -  -  Vines_8_Slow_O_F .equ 13916253 ; vRam + 22173 - 22370
  140 D1:DC5E -  -  -  -  Vines_6_Slow .equ 13916451 ; vRam + 22371 - 22553
  141 D1:DC5E -  -  -  -  Branches_0_Fast_F .equ 13916634 ; vRam + 22554 - 22705
  142 D1:DC5E -  -  -  -  Branches_9_Fast_F .equ 13916786 ; vRam + 22706 - 22836
  143 D1:DC5E -  -  -  -  Branches_5_Fast .equ 13906490 ; vRam + 12410 - 12570
  144 D1:DC5E -  -  -  -  Branches_4_Fast .equ 13906650 ; vRam + 12570 - 12728
  145 D1:DC5E -  -  -  -  Branches_2_Fast .equ 13906808 ; vRam + 12728 - 12897
  146 D1:DC5E -  -  -  -  Vines_3_Slow_O .equ 13906977 ; vRam + 12897 - 13078
Listing for file "ascent.asm"
  548 D1:DC5E -  -  -  -  #include "generated/Sprite_Groups.txt"
Listing for file "C:\Users\jax9h\OneDrive\Desktop\ti84\ascent\generated\Sprite_Groups.txt"
    1 D1:DC5E -  -  -  -  Sprite_Groups:
    2 D1:DC5E BE DC D1 -  	.dl SG_GroundChunk3
    3 D1:DC61 E0 DC D1 -  	.dl SG_GroundGrass
    4 D1:DC64 12 DD D1 -  	.dl SG_Branch3
    5 D1:DC67 38 DD D1 -  	.dl SG_Branch7
    6 D1:DC6A 8A DD D1 -  	.dl SG_Branch4
    7 D1:DC6D D8 DD D1 -  	.dl SG_Branch5
    8 D1:DC70 16 DE D1 -  	.dl SG_Vine3
    9 D1:DC73 2C DE D1 -  	.dl SG_Vine6
   10 D1:DC76 42 DE D1 -  	.dl SG_Branch6
   11 D1:DC79 74 DE D1 -  	.dl SG_Vine2
   12 D1:DC7C 86 DE D1 -  	.dl SG_Vine7
   13 D1:DC7F 9C DE D1 -  	.dl SG_Branch2
   14 D1:DC82 E2 DE D1 -  	.dl SG_GroundChunk2
   15 D1:DC85 FC DE D1 -  	.dl SG_GroundChunk1
   16 D1:DC88 1A DF D1 -  	.dl SG_Root1
   17 D1:DC8B 28 DF D1 -  	.dl SG_TreeRow3
   18 D1:DC8E 46 DF D1 -  	.dl SG_TreeRow5
   19 D1:DC91 64 DF D1 -  	.dl SG_TreeRow1
   20 D1:DC94 82 DF D1 -  	.dl SG_TreeRow2
   21 D1:DC97 A0 DF D1 -  	.dl SG_TreeRow4
   22 D1:DC9A BE DF D1 -  	.dl SG_Branch1
   23 D1:DC9D 04 E0 D1 -  	.dl SG_Vine4
   24 D1:DCA0 2A E0 D1 -  	.dl SG_Vine5
   25 D1:DCA3 3C E0 D1 -  	.dl SG_BranchBase3
   26 D1:DCA6 4E E0 D1 -  	.dl SG_Vine1
   27 D1:DCA9 60 E0 D1 -  	.dl SG_BranchBase1
   28 D1:DCAC 7E E0 D1 -  	.dl SG_BranchBase2
   29 D1:DCAF 9C E0 D1 -  	.dl SG_BranchBase4
   30 D1:DCB2 B2 E0 D1 -  	.dl SG_DarkGroundChunk
   31 D1:DCB5 D0 E0 D1 -  	.dl SG_BGTree1
   32 D1:DCB8 F2 E0 D1 -  	.dl SG_BGTree2
   33 D1:DCBB 14 E1 D1 -  	.dl SG_Cloud1
   34 D1:DCBE -  -  -  -  
   35 D1:DCBE -  -  -  -  
   36 D1:DCBE -  -  -  -  
   37 D1:DCBE -  -  -  -  SG_GroundChunk3:
   38 D1:DCBE 00 -  -  -  	.db 0
   39 D1:DCBF 08 -  -  -  	.db 8
   40 D1:DCC0 0C 10 00 00 	.db 12, 16, 0, 0  ;GroundDirtFull_Fast
   41 D1:DCC4 0C 10 08 00 	.db 12, 16, 8, 0  ;GroundDirtFull_Fast
   42 D1:DCC8 0C 10 10 01 	.db 12, 16, 16, 1  ;GroundDirtFull_Fast_F
   43 D1:DCCC 0C 10 18 01 	.db 12, 16, 24, 1  ;GroundDirtFull_Fast_F
   44 D1:DCD0 00 0C 00 02 	.db 0, 12, 0, 2  ;GroundDirtMound_Fast
   45 D1:DCD4 00 0C 08 02 	.db 0, 12, 8, 2  ;GroundDirtMound_Fast
   46 D1:DCD8 01 0C 10 03 	.db 1, 12, 16, 3  ;GroundDirtMound_Fast_F
   47 D1:DCDC 00 0C 18 03 	.db 0, 12, 24, 3  ;GroundDirtMound_Fast_F
   48 D1:DCE0 -  -  -  -  
   49 D1:DCE0 -  -  -  -  SG_GroundGrass:
   50 D1:DCE0 00 -  -  -  	.db 0
   51 D1:DCE1 0C -  -  -  	.db 12
   52 D1:DCE2 18 10 00 04 	.db 24, 16, 0, 4  ;GroundGrassL4_Fast
   53 D1:DCE6 09 10 02 05 	.db 9, 16, 2, 5  ;GroundGrassL2_Fast
   54 D1:DCEA 17 10 0A 06 	.db 23, 16, 10, 6  ;GroundGrassL5_Fast
   55 D1:DCEE 09 0E 0B 07 	.db 9, 14, 11, 7  ;GroundGrassL3_Fast
   56 D1:DCF2 17 0E 07 07 	.db 23, 14, 7, 7  ;GroundGrassL3_Fast
   57 D1:DCF6 01 10 11 08 	.db 1, 16, 17, 8  ;GroundGrassL1_Fast
   58 D1:DCFA 18 10 19 04 	.db 24, 16, 25, 4  ;GroundGrassL4_Fast
   59 D1:DCFE 00 10 1D 09 	.db 0, 16, 29, 9  ;GroundGrassL1_Fast_F
   60 D1:DD02 02 10 22 05 	.db 2, 16, 34, 5  ;GroundGrassL2_Fast
   61 D1:DD06 00 0E 01 07 	.db 0, 14, 1, 7  ;GroundGrassL3_Fast
   62 D1:DD0A 03 0E 08 0A 	.db 3, 14, 8, 10  ;GroundGrassL3_Fast_F
   63 D1:DD0E 0E 10 1A 06 	.db 14, 16, 26, 6  ;GroundGrassL5_Fast
   64 D1:DD12 -  -  -  -  
   65 D1:DD12 -  -  -  -  SG_Branch3:
   66 D1:DD12 00 -  -  -  	.db 0
   67 D1:DD13 09 -  -  -  	.db 9
   68 D1:DD14 03 0E 15 0B 	.db 3, 14, 21, 11  ;Branches_9_Fast
   69 D1:DD18 11 06 06 0C 	.db 17, 6, 6, 12  ;Branches_13_Slow_O
   70 D1:DD1C 0A 0E 0D 0D 	.db 10, 14, 13, 13  ;Branches_10_Slow_O
   71 D1:DD20 15 0D 0B 0E 	.db 21, 13, 11, 14  ;Branches_16_Slow
   72 D1:DD24 00 0C 13 0F 	.db 0, 12, 19, 15  ;Leaves_3_Slow
   73 D1:DD28 08 0E 04 10 	.db 8, 14, 4, 16  ;Leaves_7_Fast
   74 D1:DD2C 0E 0E 00 10 	.db 14, 14, 0, 16  ;Leaves_7_Fast
   75 D1:DD30 1A 0E 08 11 	.db 26, 14, 8, 17  ;Leaves_7_Fast_F
   76 D1:DD34 17 0E 02 11 	.db 23, 14, 2, 17  ;Leaves_7_Fast_F
   77 D1:DD38 -  -  -  -  
   78 D1:DD38 -  -  -  -  SG_Branch7:
   79 D1:DD38 00 -  -  -  	.db 0
   80 D1:DD39 14 -  -  -  	.db 20
   81 D1:DD3A 36 0E 07 12 	.db 54, 14, 7, 18  ;Branches_8_Slow_O
   82 D1:DD3E 15 0E 02 10 	.db 21, 14, 2, 16  ;Leaves_7_Fast
   83 D1:DD42 0A 0E 11 11 	.db 10, 14, 17, 17  ;Leaves_7_Fast_F
   84 D1:DD46 12 0E 08 11 	.db 18, 14, 8, 17  ;Leaves_7_Fast_F
   85 D1:DD4A 00 0E 00 10 	.db 0, 14, 0, 16  ;Leaves_7_Fast
   86 D1:DD4E 0D 0E 00 11 	.db 13, 14, 0, 17  ;Leaves_7_Fast_F
   87 D1:DD52 06 0E 07 11 	.db 6, 14, 7, 17  ;Leaves_7_Fast_F
   88 D1:DD56 10 0E 1D 10 	.db 16, 14, 29, 16  ;Leaves_7_Fast
   89 D1:DD5A 32 0C 0D 13 	.db 50, 12, 13, 19  ;Leaves_3_Slow_F
   90 D1:DD5E 25 0E 24 10 	.db 37, 14, 36, 16  ;Leaves_7_Fast
   91 D1:DD62 19 0E 1E 14 	.db 25, 14, 30, 20  ;Branches_14_Slow_O
   92 D1:DD66 14 0E 11 15 	.db 20, 14, 17, 21  ;Branches_15_Slow_O_F
   93 D1:DD6A 15 0E 0A 16 	.db 21, 14, 10, 22  ;Branches_15_Slow_O
   94 D1:DD6E 23 0A 17 17 	.db 35, 10, 23, 23  ;Branches_11_Fast_F
   95 D1:DD72 25 06 20 18 	.db 37, 6, 32, 24  ;Branches_13_Fast_F
   96 D1:DD76 1F 0E 26 10 	.db 31, 14, 38, 16  ;Leaves_7_Fast
   97 D1:DD7A 1D 0E 0F 19 	.db 29, 14, 15, 25  ;Branches_10_Fast_F
   98 D1:DD7E 26 0E 0F 1A 	.db 38, 14, 15, 26  ;Branches_10_Fast
   99 D1:DD82 2E 0E 0B 12 	.db 46, 14, 11, 18  ;Branches_8_Slow_O
  100 D1:DD86 16 0D 0C 1B 	.db 22, 13, 12, 27  ;Leaves_6_Slow_O
  101 D1:DD8A -  -  -  -  
  102 D1:DD8A -  -  -  -  SG_Branch4:
  103 D1:DD8A 00 -  -  -  	.db 0
  104 D1:DD8B 13 -  -  -  	.db 19
  105 D1:DD8C 2B 0B 1A 1C 	.db 43, 11, 26, 28  ;Branches_6_Slow
  106 D1:DD90 24 0E 11 1D 	.db 36, 14, 17, 29  ;Branches_10_Slow_O_F
  107 D1:DD94 11 0E 08 11 	.db 17, 14, 8, 17  ;Leaves_7_Fast_F
  108 D1:DD98 2E 0E 09 0D 	.db 46, 14, 9, 13  ;Branches_10_Slow_O
  109 D1:DD9C 02 0E 0A 11 	.db 2, 14, 10, 17  ;Leaves_7_Fast_F
  110 D1:DDA0 2F 0E 05 16 	.db 47, 14, 5, 22  ;Branches_15_Slow_O
  111 D1:DDA4 07 0E 05 10 	.db 7, 14, 5, 16  ;Leaves_7_Fast
  112 D1:DDA8 1A 0A 05 1E 	.db 26, 10, 5, 30  ;Branches_12_Slow_O
  113 D1:DDAC 13 0E 0E 15 	.db 19, 14, 14, 21  ;Branches_15_Slow_O_F
  114 D1:DDB0 28 0E 02 11 	.db 40, 14, 2, 17  ;Leaves_7_Fast_F
  115 D1:DDB4 21 0B 09 1F 	.db 33, 11, 9, 31  ;Leaves_4_Slow
  116 D1:DDB8 09 0E 0F 10 	.db 9, 14, 15, 16  ;Leaves_7_Fast
  117 D1:DDBC 11 0E 00 10 	.db 17, 14, 0, 16  ;Leaves_7_Fast
  118 D1:DDC0 3E 0E 03 10 	.db 62, 14, 3, 16  ;Leaves_7_Fast
  119 D1:DDC4 1D 0E 0E 20 	.db 29, 14, 14, 32  ;Branches_8_Slow_O_F
  120 D1:DDC8 3A 0D 06 21 	.db 58, 13, 6, 33  ;Branches_16_Slow_O
  121 D1:DDCC 2C 0A 10 22 	.db 44, 10, 16, 34  ;Branches_7_Slow_O
  122 D1:DDD0 2E 0B 19 23 	.db 46, 11, 25, 35  ;Leaves_4_Slow_F
  123 D1:DDD4 2C 09 06 24 	.db 44, 9, 6, 36  ;Leaves_2_Slow_O
  124 D1:DDD8 -  -  -  -  
  125 D1:DDD8 -  -  -  -  SG_Branch5:
  126 D1:DDD8 00 -  -  -  	.db 0
  127 D1:DDD9 0F -  -  -  	.db 15
  128 D1:DDDA 22 0A 00 25 	.db 34, 10, 0, 37  ;Branches_7_Fast
  129 D1:DDDE 1B 0E 09 26 	.db 27, 14, 9, 38  ;Branches_8_Fast
  130 D1:DDE2 23 0A 0B 17 	.db 35, 10, 11, 23  ;Branches_11_Fast_F
  131 D1:DDE6 24 06 14 18 	.db 36, 6, 20, 24  ;Branches_13_Fast_F
  132 D1:DDEA 0D 0E 0C 14 	.db 13, 14, 12, 20  ;Branches_14_Slow_O
  133 D1:DDEE 13 0E 0E 27 	.db 19, 14, 14, 39  ;Branches_15_Slow_F
  134 D1:DDF2 1C 0D 02 28 	.db 28, 13, 2, 40  ;Leaves_6_Slow
  135 D1:DDF6 27 0E 08 19 	.db 39, 14, 8, 25  ;Branches_10_Fast_F
  136 D1:DDFA 30 0D 0D 29 	.db 48, 13, 13, 41  ;Branches_16_Slow_O_F
  137 D1:DDFE 04 0E 0A 10 	.db 4, 14, 10, 16  ;Leaves_7_Fast
  138 D1:DE02 0B 0E 0F 10 	.db 11, 14, 15, 16  ;Leaves_7_Fast
  139 D1:DE06 1C 0E 17 10 	.db 28, 14, 23, 16  ;Leaves_7_Fast
  140 D1:DE0A 20 0E 1A 10 	.db 32, 14, 26, 16  ;Leaves_7_Fast
  141 D1:DE0E 26 0E 15 10 	.db 38, 14, 21, 16  ;Leaves_7_Fast
  142 D1:DE12 34 0E 0F 10 	.db 52, 14, 15, 16  ;Leaves_7_Fast
  143 D1:DE16 -  -  -  -  
  144 D1:DE16 -  -  -  -  SG_Vine3:
  145 D1:DE16 00 -  -  -  	.db 0
  146 D1:DE17 05 -  -  -  	.db 5
  147 D1:DE18 16 18 17 2A 	.db 22, 24, 23, 42  ;Vines_8_Slow
  148 D1:DE1C 2E 18 15 2A 	.db 46, 24, 21, 42  ;Vines_8_Slow
  149 D1:DE20 45 13 0B 2B 	.db 69, 19, 11, 43  ;Vines_2_Slow_O
  150 D1:DE24 56 10 00 2C 	.db 86, 16, 0, 44  ;Vines_3_Slow
  151 D1:DE28 00 17 1A 2D 	.db 0, 23, 26, 45  ;Vines_5_Slow
  152 D1:DE2C -  -  -  -  
  153 D1:DE2C -  -  -  -  SG_Vine6:
  154 D1:DE2C 00 -  -  -  	.db 0
  155 D1:DE2D 05 -  -  -  	.db 5
  156 D1:DE2E 00 0D 00 2E 	.db 0, 13, 0, 46  ;Vines_4_Slow_F
  157 D1:DE32 09 0D 0B 2E 	.db 9, 13, 11, 46  ;Vines_4_Slow_F
  158 D1:DE36 0F 09 16 2F 	.db 15, 9, 22, 47  ;Vines_1_Slow_O
  159 D1:DE3A 06 10 22 2C 	.db 6, 16, 34, 44  ;Vines_3_Slow
  160 D1:DE3E 00 0B 2D 30 	.db 0, 11, 45, 48  ;Vines_9_Slow
  161 D1:DE42 -  -  -  -  
  162 D1:DE42 -  -  -  -  SG_Branch6:
  163 D1:DE42 00 -  -  -  	.db 0
  164 D1:DE43 0C -  -  -  	.db 12
  165 D1:DE44 12 0E 00 33 	.db 18, 14, 0, 51  ;Branches_4_Fast_F
  166 D1:DE48 13 0A 09 34 	.db 19, 10, 9, 52  ;Branches_7_Fast_F
  167 D1:DE4C 0E 0E 12 0B 	.db 14, 14, 18, 11  ;Branches_9_Fast
  168 D1:DE50 0D 0A 1B 35 	.db 13, 10, 27, 53  ;Branches_12_Fast_F
  169 D1:DE54 1D 0B 05 36 	.db 29, 11, 5, 54  ;Leaves_4_Slow_O
  170 D1:DE58 06 0E 0D 14 	.db 6, 14, 13, 20  ;Branches_14_Slow_O
  171 D1:DE5C 16 0D 16 29 	.db 22, 13, 22, 41  ;Branches_16_Slow_O_F
  172 D1:DE60 00 0E 0C 10 	.db 0, 14, 12, 16  ;Leaves_7_Fast
  173 D1:DE64 0A 0E 23 10 	.db 10, 14, 35, 16  ;Leaves_7_Fast
  174 D1:DE68 02 0E 1E 11 	.db 2, 14, 30, 17  ;Leaves_7_Fast_F
  175 D1:DE6C 1C 0E 18 11 	.db 28, 14, 24, 17  ;Leaves_7_Fast_F
  176 D1:DE70 14 0E 1C 11 	.db 20, 14, 28, 17  ;Leaves_7_Fast_F
  177 D1:DE74 -  -  -  -  
  178 D1:DE74 -  -  -  -  SG_Vine2:
  179 D1:DE74 00 -  -  -  	.db 0
  180 D1:DE75 04 -  -  -  	.db 4
  181 D1:DE76 00 13 00 37 	.db 0, 19, 0, 55  ;Vines_2_Slow_F
  182 D1:DE7A 11 13 0A 37 	.db 17, 19, 10, 55  ;Vines_2_Slow_F
  183 D1:DE7E 22 10 14 32 	.db 34, 16, 20, 50  ;Vines_3_Slow_F
  184 D1:DE82 2B 09 20 38 	.db 43, 9, 32, 56  ;Vines_1_Slow
  185 D1:DE86 -  -  -  -  
  186 D1:DE86 -  -  -  -  SG_Vine7:
  187 D1:DE86 00 -  -  -  	.db 0
  188 D1:DE87 05 -  -  -  	.db 5
  189 D1:DE88 00 18 02 39 	.db 0, 24, 2, 57  ;Vines_8_Slow_O
  190 D1:DE8C 18 18 01 3A 	.db 24, 24, 1, 58  ;Vines_8_Slow_O_F
  191 D1:DE90 30 18 04 3B 	.db 48, 24, 4, 59  ;Vines_6_Slow
  192 D1:DE94 47 0B 02 36 	.db 71, 11, 2, 54  ;Leaves_4_Slow_O
  193 D1:DE98 35 0C 00 0F 	.db 53, 12, 0, 15  ;Leaves_3_Slow
  194 D1:DE9C -  -  -  -  
  195 D1:DE9C -  -  -  -  SG_Branch2:
  196 D1:DE9C 00 -  -  -  	.db 0
  197 D1:DE9D 11 -  -  -  	.db 17
  198 D1:DE9E 24 0E 13 3C 	.db 36, 14, 19, 60  ;Branches_8_Fast_F
  199 D1:DEA2 1D 0E 0F 20 	.db 29, 14, 15, 32  ;Branches_8_Slow_O_F
  200 D1:DEA6 15 0E 08 19 	.db 21, 14, 8, 25  ;Branches_10_Fast_F
  201 D1:DEAA 0E 0E 04 16 	.db 14, 14, 4, 22  ;Branches_15_Slow_O
  202 D1:DEAE 18 0E 12 1A 	.db 24, 14, 18, 26  ;Branches_10_Fast
  203 D1:DEB2 11 0E 14 3D 	.db 17, 14, 20, 61  ;Branches_15_Slow
  204 D1:DEB6 17 06 1B 18 	.db 23, 6, 27, 24  ;Branches_13_Fast_F
  205 D1:DEBA 0B 0E 00 11 	.db 11, 14, 0, 17  ;Leaves_7_Fast_F
  206 D1:DEBE 18 0E 01 11 	.db 24, 14, 1, 17  ;Leaves_7_Fast_F
  207 D1:DEC2 1F 0E 05 10 	.db 31, 14, 5, 16  ;Leaves_7_Fast
  208 D1:DEC6 06 0E 06 10 	.db 6, 14, 6, 16  ;Leaves_7_Fast
  209 D1:DECA 1C 0D 07 21 	.db 28, 13, 7, 33  ;Branches_16_Slow_O
  210 D1:DECE 06 0E 10 11 	.db 6, 14, 16, 17  ;Leaves_7_Fast_F
  211 D1:DED2 10 0E 19 27 	.db 16, 14, 25, 39  ;Branches_15_Slow_F
  212 D1:DED6 07 0E 18 10 	.db 7, 14, 24, 16  ;Leaves_7_Fast
  213 D1:DEDA 11 0E 1F 11 	.db 17, 14, 31, 17  ;Leaves_7_Fast_F
  214 D1:DEDE 1F 09 14 24 	.db 31, 9, 20, 36  ;Leaves_2_Slow_O
  215 D1:DEE2 -  -  -  -  
  216 D1:DEE2 -  -  -  -  SG_GroundChunk2:
  217 D1:DEE2 00 -  -  -  	.db 0
  218 D1:DEE3 06 -  -  -  	.db 6
  219 D1:DEE4 0E 10 00 01 	.db 14, 16, 0, 1  ;GroundDirtFull_Fast_F
  220 D1:DEE8 0F 10 08 00 	.db 15, 16, 8, 0  ;GroundDirtFull_Fast
  221 D1:DEEC 0E 10 10 01 	.db 14, 16, 16, 1  ;GroundDirtFull_Fast_F
  222 D1:DEF0 02 0C 00 02 	.db 2, 12, 0, 2  ;GroundDirtMound_Fast
  223 D1:DEF4 03 0C 08 02 	.db 3, 12, 8, 2  ;GroundDirtMound_Fast
  224 D1:DEF8 02 0C 10 02 	.db 2, 12, 16, 2  ;GroundDirtMound_Fast
  225 D1:DEFC -  -  -  -  
  226 D1:DEFC -  -  -  -  SG_GroundChunk1:
  227 D1:DEFC 00 -  -  -  	.db 0
  228 D1:DEFD 07 -  -  -  	.db 7
  229 D1:DEFE 10 10 00 00 	.db 16, 16, 0, 0  ;GroundDirtFull_Fast
  230 D1:DF02 0F 10 08 00 	.db 15, 16, 8, 0  ;GroundDirtFull_Fast
  231 D1:DF06 0E 10 10 01 	.db 14, 16, 16, 1  ;GroundDirtFull_Fast_F
  232 D1:DF0A 02 0C 10 02 	.db 2, 12, 16, 2  ;GroundDirtMound_Fast
  233 D1:DF0E 03 0C 08 02 	.db 3, 12, 8, 2  ;GroundDirtMound_Fast
  234 D1:DF12 04 0C 00 03 	.db 4, 12, 0, 3  ;GroundDirtMound_Fast_F
  235 D1:DF16 00 0C 0C 02 	.db 0, 12, 12, 2  ;GroundDirtMound_Fast
  236 D1:DF1A -  -  -  -  
  237 D1:DF1A -  -  -  -  SG_Root1:
  238 D1:DF1A 00 -  -  -  	.db 0
  239 D1:DF1B 03 -  -  -  	.db 3
  240 D1:DF1C 06 0E 00 26 	.db 6, 14, 0, 38  ;Branches_8_Fast
  241 D1:DF20 03 0E 0D 20 	.db 3, 14, 13, 32  ;Branches_8_Slow_O_F
  242 D1:DF24 00 0E 04 45 	.db 0, 14, 4, 69  ;Branches_9_Slow_O
  243 D1:DF28 -  -  -  -  
  244 D1:DF28 -  -  -  -  SG_TreeRow3:
  245 D1:DF28 00 -  -  -  	.db 0
  246 D1:DF29 07 -  -  -  	.db 7
  247 D1:DF2A 00 10 00 46 	.db 0, 16, 0, 70  ;Tree_2_Fast
  248 D1:DF2E 00 10 0D 47 	.db 0, 16, 13, 71  ;Tree_4_Fast
  249 D1:DF32 00 10 1A 48 	.db 0, 16, 26, 72  ;Tree_7_Fast
  250 D1:DF36 00 10 27 49 	.db 0, 16, 39, 73  ;Tree_9_Fast
  251 D1:DF3A 00 10 34 4A 	.db 0, 16, 52, 74  ;Tree_6_Fast_F
  252 D1:DF3E 00 10 41 4B 	.db 0, 16, 65, 75  ;Tree_3_Fast_F
  253 D1:DF42 00 10 4E 4C 	.db 0, 16, 78, 76  ;Tree_0_Fast_F
  254 D1:DF46 -  -  -  -  
  255 D1:DF46 -  -  -  -  SG_TreeRow5:
  256 D1:DF46 00 -  -  -  	.db 0
  257 D1:DF47 07 -  -  -  	.db 7
  258 D1:DF48 00 10 00 46 	.db 0, 16, 0, 70  ;Tree_2_Fast
  259 D1:DF4C 00 10 0D 4D 	.db 0, 16, 13, 77  ;Tree_3_Fast
  260 D1:DF50 00 10 1A 4E 	.db 0, 16, 26, 78  ;Tree_8_Fast
  261 D1:DF54 00 10 27 4F 	.db 0, 16, 39, 79  ;Tree_9_Fast_F
  262 D1:DF58 00 10 34 50 	.db 0, 16, 52, 80  ;Tree_8_Fast_F
  263 D1:DF5C 00 10 41 51 	.db 0, 16, 65, 81  ;Tree_4_Fast_F
  264 D1:DF60 00 10 4E 4C 	.db 0, 16, 78, 76  ;Tree_0_Fast_F
  265 D1:DF64 -  -  -  -  
  266 D1:DF64 -  -  -  -  SG_TreeRow1:
  267 D1:DF64 00 -  -  -  	.db 0
  268 D1:DF65 07 -  -  -  	.db 7
  269 D1:DF66 00 10 00 52 	.db 0, 16, 0, 82  ;Tree_0_Fast
  270 D1:DF6A 00 10 0D 4D 	.db 0, 16, 13, 77  ;Tree_3_Fast
  271 D1:DF6E 00 10 1A 53 	.db 0, 16, 26, 83  ;Tree_6_Fast
  272 D1:DF72 00 10 27 54 	.db 0, 16, 39, 84  ;Tree_10_Fast
  273 D1:DF76 00 10 34 55 	.db 0, 16, 52, 85  ;Tree_7_Fast_F
  274 D1:DF7A 00 10 41 51 	.db 0, 16, 65, 81  ;Tree_4_Fast_F
  275 D1:DF7E 00 10 4E 56 	.db 0, 16, 78, 86  ;Tree_1_Fast_F
  276 D1:DF82 -  -  -  -  
  277 D1:DF82 -  -  -  -  SG_TreeRow2:
  278 D1:DF82 00 -  -  -  	.db 0
  279 D1:DF83 07 -  -  -  	.db 7
  280 D1:DF84 00 10 00 57 	.db 0, 16, 0, 87  ;Tree_1_Fast
  281 D1:DF88 00 10 0D 58 	.db 0, 16, 13, 88  ;Tree_5_Fast
  282 D1:DF8C 00 10 1A 4E 	.db 0, 16, 26, 78  ;Tree_8_Fast
  283 D1:DF90 00 10 27 59 	.db 0, 16, 39, 89  ;Tree_11_Fast
  284 D1:DF94 00 10 34 50 	.db 0, 16, 52, 80  ;Tree_8_Fast_F
  285 D1:DF98 00 10 41 5A 	.db 0, 16, 65, 90  ;Tree_5_Fast_F
  286 D1:DF9C 00 10 4E 5B 	.db 0, 16, 78, 91  ;Tree_2_Fast_F
  287 D1:DFA0 -  -  -  -  
  288 D1:DFA0 -  -  -  -  SG_TreeRow4:
  289 D1:DFA0 00 -  -  -  	.db 0
  290 D1:DFA1 07 -  -  -  	.db 7
  291 D1:DFA2 00 10 00 52 	.db 0, 16, 0, 82  ;Tree_0_Fast
  292 D1:DFA6 00 10 0D 58 	.db 0, 16, 13, 88  ;Tree_5_Fast
  293 D1:DFAA 00 10 1A 53 	.db 0, 16, 26, 83  ;Tree_6_Fast
  294 D1:DFAE 00 10 27 5C 	.db 0, 16, 39, 92  ;Tree_11_Fast_F
  295 D1:DFB2 00 10 34 4A 	.db 0, 16, 52, 74  ;Tree_6_Fast_F
  296 D1:DFB6 00 10 41 4B 	.db 0, 16, 65, 75  ;Tree_3_Fast_F
  297 D1:DFBA 00 10 4E 56 	.db 0, 16, 78, 86  ;Tree_1_Fast_F
  298 D1:DFBE -  -  -  -  
  299 D1:DFBE -  -  -  -  SG_Branch1:
  300 D1:DFBE 00 -  -  -  	.db 0
  301 D1:DFBF 11 -  -  -  	.db 17
  302 D1:DFC0 0D 0E 34 5D 	.db 13, 14, 52, 93  ;Branches_1_Fast
  303 D1:DFC4 0D 0E 2B 5E 	.db 13, 14, 43, 94  ;Branches_2_Slow_O
  304 D1:DFC8 0E 0E 22 5F 	.db 14, 14, 34, 95  ;Branches_3_Slow_O
  305 D1:DFCC 0F 0E 19 60 	.db 15, 14, 25, 96  ;Branches_5_Slow_O
  306 D1:DFD0 11 0A 10 22 	.db 17, 10, 16, 34  ;Branches_7_Slow_O
  307 D1:DFD4 11 0A 07 1E 	.db 17, 10, 7, 30  ;Branches_12_Slow_O
  308 D1:DFD8 08 0E 17 3D 	.db 8, 14, 23, 61  ;Branches_15_Slow
  309 D1:DFDC 13 0E 21 12 	.db 19, 14, 33, 18  ;Branches_8_Slow_O
  310 D1:DFE0 1D 0D 1E 21 	.db 29, 13, 30, 33  ;Branches_16_Slow_O
  311 D1:DFE4 15 0E 06 10 	.db 21, 14, 6, 16  ;Leaves_7_Fast
  312 D1:DFE8 00 0E 14 10 	.db 0, 14, 20, 16  ;Leaves_7_Fast
  313 D1:DFEC 07 0E 07 10 	.db 7, 14, 7, 16  ;Leaves_7_Fast
  314 D1:DFF0 05 0E 02 11 	.db 5, 14, 2, 17  ;Leaves_7_Fast_F
  315 D1:DFF4 0C 0E 00 10 	.db 12, 14, 0, 16  ;Leaves_7_Fast
  316 D1:DFF8 20 0E 1C 10 	.db 32, 14, 28, 16  ;Leaves_7_Fast
  317 D1:DFFC 13 0C 1D 61 	.db 19, 12, 29, 97  ;Leaves_3_Slow_O
  318 D1:E000 18 0B 28 36 	.db 24, 11, 40, 54  ;Leaves_4_Slow_O
  319 D1:E004 -  -  -  -  
  320 D1:E004 -  -  -  -  SG_Vine4:
  321 D1:E004 00 -  -  -  	.db 0
  322 D1:E005 09 -  -  -  	.db 9
  323 D1:E006 00 18 00 62 	.db 0, 24, 0, 98  ;Vines_7_Slow
  324 D1:E00A 18 18 02 40 	.db 24, 24, 2, 64  ;Vines_8_Slow_F
  325 D1:E00E 2F 17 05 63 	.db 47, 23, 5, 99  ;Vines_5_Slow_O_F
  326 D1:E012 44 13 0F 37 	.db 68, 19, 15, 55  ;Vines_2_Slow_F
  327 D1:E016 55 10 19 64 	.db 85, 16, 25, 100  ;Vines_3_Slow_O_F
  328 D1:E01A 5E 09 25 2F 	.db 94, 9, 37, 47  ;Vines_1_Slow_O
  329 D1:E01E 57 0D 31 65 	.db 87, 13, 49, 101  ;Vines_4_Slow_O
  330 D1:E022 4E 0B 3D 41 	.db 78, 11, 61, 65  ;Vines_9_Slow_O
  331 D1:E026 4E 0E 49 66 	.db 78, 14, 73, 102  ;Vines_10_Slow
  332 D1:E02A -  -  -  -  
  333 D1:E02A -  -  -  -  SG_Vine5:
  334 D1:E02A 00 -  -  -  	.db 0
  335 D1:E02B 04 -  -  -  	.db 4
  336 D1:E02C 06 18 00 40 	.db 6, 24, 0, 64  ;Vines_8_Slow_F
  337 D1:E030 1B 10 03 64 	.db 27, 16, 3, 100  ;Vines_3_Slow_O_F
  338 D1:E034 00 18 18 67 	.db 0, 24, 24, 103  ;Vines_7_Slow_F
  339 D1:E038 15 13 0E 68 	.db 21, 19, 14, 104  ;Vines_2_Slow
  340 D1:E03C -  -  -  -  
  341 D1:E03C -  -  -  -  SG_BranchBase3:
  342 D1:E03C 00 -  -  -  	.db 0
  343 D1:E03D 04 -  -  -  	.db 4
  344 D1:E03E 0B 0E 00 6B 	.db 11, 14, 0, 107  ;Branches_1_Fast_F
  345 D1:E042 0A 0E 09 6C 	.db 10, 14, 9, 108  ;Branches_2_Fast_F
  346 D1:E046 09 0E 12 6D 	.db 9, 14, 18, 109  ;Branches_5_Fast_F
  347 D1:E04A 00 0E 0E 6E 	.db 0, 14, 14, 110  ;Branches_14_Slow
  348 D1:E04E -  -  -  -  
  349 D1:E04E -  -  -  -  SG_Vine1:
  350 D1:E04E 00 -  -  -  	.db 0
  351 D1:E04F 04 -  -  -  	.db 4
  352 D1:E050 11 10 18 2C 	.db 17, 16, 24, 44  ;Vines_3_Slow
  353 D1:E054 00 13 23 68 	.db 0, 19, 35, 104  ;Vines_2_Slow
  354 D1:E058 1B 09 0C 38 	.db 27, 9, 12, 56  ;Vines_1_Slow
  355 D1:E05C 13 10 00 32 	.db 19, 16, 0, 50  ;Vines_3_Slow_F
  356 D1:E060 -  -  -  -  
  357 D1:E060 -  -  -  -  SG_BranchBase1:
  358 D1:E060 00 -  -  -  	.db 0
  359 D1:E061 07 -  -  -  	.db 7
  360 D1:E062 04 0E 14 70 	.db 4, 14, 20, 112  ;Branches_0_Fast
  361 D1:E066 04 0E 0B 42 	.db 4, 14, 11, 66  ;Branches_3_Fast
  362 D1:E06A 06 0B 02 1C 	.db 6, 11, 2, 28  ;Branches_6_Slow
  363 D1:E06E 0F 0E 00 0B 	.db 15, 14, 0, 11  ;Branches_9_Fast
  364 D1:E072 09 0E 07 12 	.db 9, 14, 7, 18  ;Branches_8_Slow_O
  365 D1:E076 0D 09 0B 24 	.db 13, 9, 11, 36  ;Leaves_2_Slow_O
  366 D1:E07A 00 0D 0F 1B 	.db 0, 13, 15, 27  ;Leaves_6_Slow_O
  367 D1:E07E -  -  -  -  
  368 D1:E07E -  -  -  -  SG_BranchBase2:
  369 D1:E07E 00 -  -  -  	.db 0
  370 D1:E07F 07 -  -  -  	.db 7
  371 D1:E080 00 0E 2A 71 	.db 0, 14, 42, 113  ;Branches_1_Slow_O
  372 D1:E084 01 0E 21 5E 	.db 1, 14, 33, 94  ;Branches_2_Slow_O
  373 D1:E088 02 0E 18 72 	.db 2, 14, 24, 114  ;Branches_4_Slow_O
  374 D1:E08C 04 0E 06 45 	.db 4, 14, 6, 69  ;Branches_9_Slow_O
  375 D1:E090 04 0A 0F 22 	.db 4, 10, 15, 34  ;Branches_7_Slow_O
  376 D1:E094 0B 0E 00 1A 	.db 11, 14, 0, 26  ;Branches_10_Fast
  377 D1:E098 00 0C 17 73 	.db 0, 12, 23, 115  ;Leaves_3_Slow_O_F
  378 D1:E09C -  -  -  -  
  379 D1:E09C -  -  -  -  SG_BranchBase4:
  380 D1:E09C 00 -  -  -  	.db 0
  381 D1:E09D 05 -  -  -  	.db 5
  382 D1:E09E 0D 0E 00 75 	.db 13, 14, 0, 117  ;Branches_0_Fast_F
  383 D1:E0A2 07 0E 08 12 	.db 7, 14, 8, 18  ;Branches_8_Slow_O
  384 D1:E0A6 12 0E 09 76 	.db 18, 14, 9, 118  ;Branches_9_Fast_F
  385 D1:E0AA 00 0E 0C 45 	.db 0, 14, 12, 69  ;Branches_9_Slow_O
  386 D1:E0AE 0A 09 0B 69 	.db 10, 9, 11, 105  ;Leaves_2_Slow
  387 D1:E0B2 -  -  -  -  
  388 D1:E0B2 -  -  -  -  SG_DarkGroundChunk:
  389 D1:E0B2 00 -  -  -  	.db 0
  390 D1:E0B3 07 -  -  -  	.db 7
  391 D1:E0B4 11 0C 00 77 	.db 17, 12, 0, 119  ;GroundDirtDark_Fast
  392 D1:E0B8 11 0C 08 77 	.db 17, 12, 8, 119  ;GroundDirtDark_Fast
  393 D1:E0BC 10 0C 10 78 	.db 16, 12, 16, 120  ;GroundDirtDark_Fast_F
  394 D1:E0C0 05 0D 00 79 	.db 5, 13, 0, 121  ;GroundHumpDark_Fast
  395 D1:E0C4 05 0D 08 79 	.db 5, 13, 8, 121  ;GroundHumpDark_Fast
  396 D1:E0C8 04 0D 10 7A 	.db 4, 13, 16, 122  ;GroundHumpDark_Fast_F
  397 D1:E0CC 00 0D 0C 7A 	.db 0, 13, 12, 122  ;GroundHumpDark_Fast_F
  398 D1:E0D0 -  -  -  -  
  399 D1:E0D0 -  -  -  -  SG_BGTree1:
  400 D1:E0D0 00 -  -  -  	.db 0
  401 D1:E0D1 08 -  -  -  	.db 8
  402 D1:E0D2 16 10 05 7B 	.db 22, 16, 5, 123  ;Tree_16_Fast
  403 D1:E0D6 0A 0E 07 7C 	.db 10, 14, 7, 124  ;Tree_17_Slow_O
  404 D1:E0DA 0C 0E 03 7D 	.db 12, 14, 3, 125  ;Tree_17_Slow_O_F
  405 D1:E0DE 26 10 04 7E 	.db 38, 16, 4, 126  ;Tree_16_Slow_O
  406 D1:E0E2 20 0E 02 7F 	.db 32, 14, 2, 127  ;Tree_17_Slow_F
  407 D1:E0E6 00 0E 07 80 	.db 0, 14, 7, 128  ;Leaves_8_Fast
  408 D1:E0EA 02 0E 00 80 	.db 2, 14, 0, 128  ;Leaves_8_Fast
  409 D1:E0EE 1D 09 00 69 	.db 29, 9, 0, 105  ;Leaves_2_Slow
  410 D1:E0F2 -  -  -  -  
  411 D1:E0F2 -  -  -  -  SG_BGTree2:
  412 D1:E0F2 00 -  -  -  	.db 0
  413 D1:E0F3 08 -  -  -  	.db 8
  414 D1:E0F4 31 0E 07 81 	.db 49, 14, 7, 129  ;Tree_18_Slow_O
  415 D1:E0F8 31 0E 01 82 	.db 49, 14, 1, 130  ;Tree_17_Slow
  416 D1:E0FC 31 0E 02 83 	.db 49, 14, 2, 131  ;Tree_18_Slow_F
  417 D1:E100 24 10 00 84 	.db 36, 16, 0, 132  ;Tree_16_Slow_O_F
  418 D1:E104 14 10 01 7E 	.db 20, 16, 1, 126  ;Tree_16_Slow_O
  419 D1:E108 0B 0E 01 81 	.db 11, 14, 1, 129  ;Tree_18_Slow_O
  420 D1:E10C 00 0E 00 80 	.db 0, 14, 0, 128  ;Leaves_8_Fast
  421 D1:E110 2B 09 06 85 	.db 43, 9, 6, 133  ;Leaves_2_Slow_F
  422 D1:E114 -  -  -  -  
  423 D1:E114 -  -  -  -  SG_Cloud1:
  424 D1:E114 00 -  -  -  	.db 0
  425 D1:E115 0D -  -  -  	.db 13
  426 D1:E116 14 0A 06 86 	.db 20, 10, 6, 134  ;Clouds_0_Fast
  427 D1:E11A 0D 0E 00 87 	.db 13, 14, 0, 135  ;Clouds_1_Fast
  428 D1:E11E 00 0B 07 88 	.db 0, 11, 7, 136  ;Clouds_3_Fast
  429 D1:E122 03 0A 03 89 	.db 3, 10, 3, 137  ;Clouds_4_Fast
  430 D1:E126 08 10 06 8A 	.db 8, 16, 6, 138  ;Clouds_2_Fast
  431 D1:E12A 14 0A 0E 86 	.db 20, 10, 14, 134  ;Clouds_0_Fast
  432 D1:E12E 13 0A 14 8B 	.db 19, 10, 20, 139  ;Clouds_0_Fast_F
  433 D1:E132 0B 0E 1C 8C 	.db 11, 14, 28, 140  ;Clouds_1_Fast_F
  434 D1:E136 03 0A 1B 8D 	.db 3, 10, 27, 141  ;Clouds_4_Fast_F
  435 D1:E13A 01 0B 0F 8E 	.db 1, 11, 15, 142  ;Clouds_3_Fast_F
  436 D1:E13E 01 0B 15 88 	.db 1, 11, 21, 136  ;Clouds_3_Fast
  437 D1:E142 06 10 14 8A 	.db 6, 16, 20, 138  ;Clouds_2_Fast
  438 D1:E146 06 10 0C 8F 	.db 6, 16, 12, 143  ;Clouds_2_Fast_F
  439 D1:E14A -  -  -  -  
  440 D1:E14A -  -  -  -  
  441 D1:E14A -  -  -  -  
Listing for file "ascent.asm"
  549 D1:E14A -  -  -  -  
  550 D1:E14A -  -  -  -  ;#include "testing/SpriteGroups.txt"
  551 D1:E14A -  -  -  -  ;#include "TestingSpriteData.txt"
  552 D1:E14A -  -  -  -  ;#include "TestGeneratedSpriteData.txt"
  553 D1:E14A -  -  -  -  ;#include "Sprite_Data.txt"
  554 D1:E14A -  -  -  -  ;#include "FG_Data.txt"
  555 D1:E14A -  -  -  -  ;#include "MG_Data.txt"
  556 D1:E14A -  -  -  -  ;#include "BG_Data.txt"
  557 D1:E14A -  -  -  -  ;#include "Palette_Setup.txt"
  558 D1:E14A -  -  -  -  ;#include "Equates.txt"
  559 D1:E14A -  -  -  -  ;#include "Decompress_Calls.txt"
  560 D1:E14A -  -  -  -  ;#include "Sprite_Tables.txt"
  561 D1:E14A -  -  -  -  ;#include "TestingBGData.txt"
  562 D1:E14A -  -  -  -  ;#include "TestingFGData.txt"
  563 D1:E14A -  -  -  -  
  564 D1:E14A -  -  -  -  
